{"version":3,"sources":["commons/utils/NotificationsHelper.ts","commons/utils/JsSlangHelper.ts","commons/notificationBadge/NotificationBadgeTypes.ts","../../../src/utils/stringify.ts","features/playground/PlaygroundTypes.ts","commons/controlBar/ControlBarClearButton.tsx","commons/controlBar/ControlBarEvalButton.tsx","commons/sideBar/SideBar.tsx","commons/sideContent/SideContent.tsx","commons/workspace/Workspace.tsx","commons/ControlButton.tsx","features/sourceRecorder/sourcereel/SourcereelActions.ts","commons/controlBar/ControlBarChapterSelect.tsx","features/academy/AcademyTypes.ts","features/playground/PlaygroundActions.ts","commons/workspace/WorkspaceActions.ts","features/eventLogging/index.ts","commons/sideContent/SideContentResultCard.tsx","commons/sideContent/SideContentAutograder.tsx","commons/sideContent/SideContentLeaderboardCard.tsx","commons/sideContent/SideContentContestLeaderboard.tsx","commons/sideContent/SideContentContestEntryCard.tsx","commons/sideContent/SideContentContestVoting.tsx","commons/sideContent/SideContentContestVotingContainer.tsx","commons/sideContent/SideContentToneMatrix.tsx","commons/utils/DateHelper.ts","commons/assessmentWorkspace/AssessmentWorkspaceGradingResult.tsx","commons/assessmentWorkspace/AssessmentWorkspace.tsx","commons/assessmentWorkspace/AssessmentWorkspaceContainer.ts","commons/notificationBadge/NotificationBadgeHelper.ts","commons/notificationBadge/NotificationBadge.tsx","commons/notificationBadge/NotificationBadgeContainer.ts","commons/assessment/AssessmentNotFound.tsx","commons/assessment/Assessment.tsx","commons/assessment/AssessmentContainer.ts","pages/notFound/NotFound.tsx","commons/achievement/control/achievementEditor/AchievementTemplate.ts","commons/achievement/control/achievementEditor/AchievementAdder.tsx","commons/achievement/control/common/ItemDeleter.tsx","commons/achievement/control/common/ItemSaver.tsx","commons/achievement/control/achievementEditor/achievementSettings/EditableGoalUuids.tsx","commons/achievement/control/achievementEditor/achievementSettings/EditablePosition.tsx","commons/achievement/control/achievementEditor/achievementSettings/EditablePrerequisiteUuids.tsx","commons/achievement/control/achievementEditor/AchievementSettings.tsx","commons/achievement/control/achievementEditor/AchievementUuidCopier.tsx","commons/achievement/control/achievementEditor/EditableCardTypes.ts","commons/achievement/control/achievementEditor/EditableDate.tsx","commons/achievement/control/achievementEditor/EditableView.tsx","commons/achievement/control/achievementEditor/EditableCard.tsx","commons/achievement/control/AchievementEditor.tsx","commons/achievement/AchievementFilter.tsx","commons/achievement/overview/AchievementMilestone.tsx","commons/achievement/overview/AchievementLevel.tsx","commons/achievement/AchievementOverview.tsx","commons/achievement/card/AchievementDeadline.tsx","commons/achievement/card/AchievementXp.tsx","commons/achievement/AchievementCard.tsx","commons/achievement/AchievementTask.tsx","commons/achievement/AchievementCommentCard.tsx","commons/achievement/view/AchievementViewCompletion.tsx","commons/achievement/view/AchievementViewGoal.tsx","commons/achievement/AchievementView.tsx","commons/achievement/utils/InsertFakeAchievements.ts","pages/achievement/subcomponents/AchievementDashboard.tsx","commons/achievement/control/AchievementPreview.tsx","commons/achievement/control/goalEditor/EditableGoalTypes.ts","commons/achievement/control/goalEditor/GoalTemplate.ts","commons/achievement/control/goalEditor/metaDetails/EditableAssessmentMeta.tsx","features/achievement/ExpressionTypes.ts","commons/achievement/control/goalEditor/metaDetails/EditableBinaryMeta.tsx","commons/achievement/control/goalEditor/EditableDate.tsx","commons/achievement/control/goalEditor/EditableTime.tsx","commons/achievement/control/goalEditor/metaDetails/EditableEventMeta.tsx","commons/achievement/control/goalEditor/metaDetails/EditableManualMeta.tsx","commons/achievement/control/goalEditor/EditableMeta.tsx","commons/achievement/control/goalEditor/EditableGoal.tsx","commons/achievement/control/goalEditor/GoalAdder.tsx","commons/achievement/control/GoalEditor.tsx","pages/achievement/control/AchievementControl.tsx","pages/achievement/control/AchievementControlContainer.ts","pages/achievement/subcomponents/AchievementDashboardContainer.ts","pages/achievement/Achievement.tsx","pages/achievement/AchievementContainer.ts","commons/controlBar/ControlBarAutorunButtons.tsx","commons/sideContent/SideContentDataVisualizer.tsx","commons/sideContent/SideContentEnvVisualizer.tsx","commons/sourceRecorder/SourceRecorderControlBar.tsx","commons/sourceRecorder/SourceRecorderDeleteCell.tsx","commons/sourceRecorder/SourceRecorderSelectCell.tsx","commons/sourceRecorder/SourceRecorderShareCell.tsx","commons/sourceRecorder/SourceRecorderTable.tsx","pages/sourcecast/Sourcecast.tsx","pages/sourcecast/SourcecastContainer.ts","pages/academy/adminPanel/subcomponents/AddUserPanel.tsx","pages/academy/adminPanel/subcomponents/assessmentConfigPanel/BooleanCell.tsx","pages/academy/adminPanel/subcomponents/assessmentConfigPanel/DeleteRowCell.tsx","pages/academy/adminPanel/subcomponents/assessmentConfigPanel/NumericCell.tsx","pages/academy/adminPanel/subcomponents/assessmentConfigPanel/AssessmentConfigPanel.tsx","pages/academy/adminPanel/subcomponents/CourseConfigPanel.tsx","pages/academy/adminPanel/subcomponents/userConfigPanel/RolesCell.tsx","pages/academy/adminPanel/subcomponents/userConfigPanel/UserActionsCell.tsx","pages/academy/adminPanel/subcomponents/userConfigPanel/UserConfigPanel.tsx","pages/academy/adminPanel/AdminPanel.tsx","pages/academy/adminPanel/AdminPanelContainer.ts","pages/academy/dashboard/Dashboard.tsx","pages/academy/dashboard/DashboardContainer.ts","features/game/assets/FontAssets.ts","features/game/commons/CommonConstants.ts","features/game/utils/StyleUtils.ts","features/game/commons/CommonTextHover.ts","features/game/utils/TextUtils.ts","features/game/awards/GameAwardsConstants.ts","features/game/awards/GameAwardsHelper.ts","features/game/assets/AssetsTypes.ts","features/game/assets/ImageAssets.ts","features/game/sound/GameSoundTypes.ts","features/game/assets/SoundAssets.ts","features/game/layer/GameLayerTypes.ts","features/game/utils/GameUtils.ts","features/game/effects/FadeEffect.ts","features/game/effects/FlyEffect.ts","features/game/effects/MiniMessage.ts","features/game/dialogue/GameDialogueConstants.ts","features/game/effects/Typewriter.ts","features/game/dialogue/GameDialogueRenderer.ts","features/game/dialogue/GameDialogueHelper.ts","features/game/effects/Notification.ts","features/game/utils/ButtonUtils.ts","features/game/effects/Prompt.ts","features/game/phase/GamePhaseTypes.ts","features/game/scenes/gameManager/GameGlobalAPI.ts","features/game/state/GameStateTypes.ts","features/game/action/GameActionTypes.ts","features/game/location/GameMapTypes.ts","features/game/action/GameActionConditionChecker.ts","features/game/action/GameActionExecuter.ts","features/game/action/GameActionManager.ts","features/game/animations/GameAnimationManager.ts","features/game/utils/SpriteUtils.ts","features/game/awards/GameAwardsManager.ts","features/game/background/GameBackgroundManager.ts","features/game/boundingBoxes/GameBoundingBoxManager.ts","features/game/character/GameCharacterConstants.ts","features/game/character/GameCharacterManager.ts","features/game/dashboard/GameDashboardConstants.ts","features/game/dashboard/GameDashboardTypes.ts","features/game/dashboard/GameDashboardManager.ts","features/game/dialogue/GameDialogueGenerator.ts","features/game/commons/CommonTypes.ts","features/game/utils/StringUtils.ts","features/game/dialogue/GameDialogueSpeakerRenderer.ts","features/game/dialogue/GameDialogueManager.ts","features/game/dialogue/GameDialogueStorageManager.ts","features/game/effects/LoadingScreen.ts","features/game/commons/CommonRadioButton.ts","features/game/scenes/settings/SettingsConstants.ts","features/game/escape/GameEscapeConstants.ts","features/game/escape/GameEscapeManager.ts","features/game/input/GameInputManager.ts","features/game/layer/GameLayerManager.ts","features/game/log/GameLogConstants.ts","features/game/log/GameLogManager.ts","features/game/effects/GlowingObject.ts","features/game/objects/GameObjectManager.ts","features/game/phase/GamePhaseManager.ts","features/game/popUp/GamePopUpConstants.ts","features/game/popUp/GamePopUpManager.ts","features/game/effects/ScrollEffect.ts","features/game/save/GameSaveHelper.ts","features/game/state/GameStateManager.ts","features/game/task/GameTaskLogConstants.ts","features/game/task/GameTaskLogManager.ts","features/game/toolbar/GameToolbarConstants.ts","features/game/toolbar/GameToolbarManager.ts","features/game/commons/CommonBackButton.ts","features/game/mode/explore/GameModeExploreConstants.ts","features/game/mode/explore/GameModeExplore.ts","features/game/mode/GameModeTypes.ts","features/game/mode/menu/GameModeMenuConstants.ts","features/game/mode/menu/GameModeMenu.ts","features/game/mode/move/GameModeMoveConstants.ts","features/game/mode/move/GameModeMove.ts","features/game/mode/sequence/GameModeSequence.ts","features/game/mode/talk/GameModeTalkConstants.ts","features/game/mode/talk/GameModeTalk.ts","features/game/scenes/gameManager/GameManager.ts","features/game/scenes/gameManager/GameManagerHelper.ts","features/game/save/GameSaveManager.ts","features/game/save/GameSaveRequests.ts","features/game/effects/Glitch.ts","features/game/effects/WorkerMessage.ts","features/game/scenes/awardsHall/AwardsHallConstants.ts","features/game/scenes/awardsHall/AwardsHall.ts","features/game/scenes/awardsHall/AwardsHallHelper.ts","features/game/scenes/bindings/BindingsConstants.ts","features/game/scenes/bindings/Bindings.ts","features/game/utils/LoaderUtils.ts","features/game/scenes/chapterSelect/ChapterSelectConstants.ts","features/game/assets/TextAssets.ts","features/game/location/GameMap.ts","features/game/objective/GameObjective.ts","features/game/task/GameTask.ts","features/game/parser/ParserConverter.ts","features/game/parser/ParserValidator.ts","features/game/parser/ConditionParser.ts","features/game/parser/ActionParser.ts","features/game/parser/PromptParser.ts","features/game/parser/CharacterParser.ts","features/game/parser/SpeakerParser.ts","features/game/parser/DialogueParser.ts","features/game/parser/MusicParser.ts","features/game/parser/Parser.ts","features/game/parser/LocationParser.ts","features/game/parser/ObjectParser.ts","features/game/parser/BoundingBoxParser.ts","features/game/parser/TasksParser.ts","features/game/parser/LocationDetailsParser.ts","features/game/location/GameMapHelper.ts","features/game/utils/TxtLoaderUtils.ts","features/game/scenes/chapterSelect/ChapterSelectHelper.ts","features/game/scenes/chapterSelect/ChapterSelect.ts","features/game/scenes/checkpointTransition/CheckpointTransitionConstants.ts","features/game/scenes/checkpointTransition/CheckpointTransition.ts","features/game/scenes/mainMenu/MainMenuConstants.ts","features/game/scenes/mainMenu/MainMenu.ts","features/game/scenes/roomPreview/RoomPreviewConstants.ts","features/game/scenes/roomPreview/RoomPreviewHelper.ts","features/game/scenes/roomPreview/RoomPreview.ts","features/game/scenes/settings/Settings.ts","features/game/sound/GameSoundManager.ts","features/game/chapter/GameChapterMocks.ts","features/game/parser/AwardParser.ts","features/game/parser/RoomPreviewParser.ts","features/game/scenes/entry/Entry.ts","features/game/state/GameUserStateManager.ts","features/game/SourceAcademyGame.ts","features/game/chapter/GameChapterHelpers.ts","pages/academy/game/Game.tsx","commons/AnchorButtonLink.tsx","pages/academy/grading/subcomponents/GradingActionsCell.tsx","pages/academy/grading/subcomponents/GradingStatusCell.tsx","pages/academy/grading/subcomponents/GradingEditor.tsx","pages/academy/grading/subcomponents/GradingEditorContainer.ts","pages/academy/grading/subcomponents/GradingWorkspace.tsx","pages/academy/grading/subcomponents/GradingWorkspaceContainer.ts","pages/academy/grading/subcomponents/GradingXPCell.tsx","pages/academy/grading/Grading.tsx","pages/academy/grading/GradingContainer.ts","pages/academy/groundControl/subcomponents/DefaultChapterSelect.tsx","pages/academy/groundControl/subcomponents/DefaultChapterSelectContainer.ts","pages/academy/groundControl/subcomponents/GroundControlDeleteCell.tsx","pages/academy/groundControl/subcomponents/GroundControlDropzone.tsx","pages/academy/groundControl/subcomponents/GroundControlEditCell.tsx","pages/academy/groundControl/subcomponents/GroundControlPublishCell.tsx","pages/academy/groundControl/GroundControl.tsx","pages/academy/groundControl/GroundControlContainer.ts","pages/academy/sourcereel/subcomponents/SourcereelControlbar.tsx","pages/academy/sourcereel/Sourcereel.tsx","pages/academy/sourcereel/SourcereelContainer.ts","features/storySimulator/StorySimulatorTypes.ts","features/storySimulator/StorySimulatorRequest.ts","features/storySimulator/StorySimulatorService.ts","pages/academy/storySimulator/subcomponents/StorySimulatorAssetFileUploader.tsx","pages/academy/storySimulator/subcomponents/StorySimulatorAssetSelectionHelper.tsx","pages/academy/storySimulator/subcomponents/StorySimulatorAssetViewer.tsx","pages/academy/storySimulator/subcomponents/StorySimulatorAssetSelection.tsx","commons/utils/SortableList.tsx","pages/academy/storySimulator/subcomponents/StorySimulatorChapterEditor.tsx","pages/academy/storySimulator/subcomponents/StorySimulatorChapterSim.tsx","features/storySimulator/scenes/mainMenu/MainMenuConstants.ts","pages/academy/storySimulator/subcomponents/StorySimulatorCheckpointTxtLoader.tsx","pages/academy/storySimulator/subcomponents/StorySimulatorCheckpointSim.tsx","features/storySimulator/assets/ImageAssets.ts","features/storySimulator/scenes/mainMenu/MainMenu.ts","features/storySimulator/background/SSBackgroundManager.ts","features/storySimulator/cursorMode/SSCursorModeTypes.ts","features/storySimulator/boundingBoxes/SSBBoxManager.ts","features/storySimulator/cursorMode/SSCursorModeConstants.ts","features/storySimulator/cursorMode/SSCursorMode.ts","features/storySimulator/logger/SSLogConstants.ts","features/storySimulator/logger/SSLogManagerHelper.ts","features/storySimulator/logger/SSLogManager.ts","features/storySimulator/objects/SSObjectManager.ts","features/storySimulator/transform/SSTransformManagerConstants.ts","features/storySimulator/transform/SSTransformManager.ts","features/storySimulator/scenes/ObjectPlacement/ObjectPlacementConstants.ts","features/storySimulator/scenes/ObjectPlacement/ObjectPlacement.ts","pages/academy/storySimulator/subcomponents/storySimulatorGame.ts","pages/academy/storySimulator/StorySimulator.tsx","pages/academy/xpCalculation/XpCalculation.tsx","pages/academy/Academy.tsx","pages/contributors/subcomponents/ContributorsDetails.tsx","pages/contributors/subcomponents/ContributorsGithubApi.ts","pages/contributors/subcomponents/ContributorsList.tsx","pages/contributors/Contributors.tsx","pages/disabled/Disabled.tsx","commons/utils/QueryHelper.ts","pages/githubCallback/GitHubCallback.tsx","pages/login/Login.tsx","commons/XMLParser/XMLParserTypes.ts","commons/XMLParser/XMLParserHelper.ts","commons/editingOverviewCard/EditingOverviewCard.tsx","commons/controlBar/ControlBarToggleEditModeButton.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentHelper.ts","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentTextAreaContent.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentAutograderTab.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentDeploymentTab.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentGradingTab.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentManageQuestionTab.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentMcqQuestionTemplateTab.tsx","commons/editingWorkspaceSideContent/EditingWorkspaceSideContentProgrammingQuestionTemplateTab.tsx","commons/editingWorkspace/EditingWorkspace.tsx","commons/editingWorkspace/EditingWorkspaceContainer.ts","commons/missionCreator/MissionCreator.tsx","commons/missionCreator/MissionCreatorContainer.ts","pages/missionControl/MissionControl.tsx","pages/missionControl/MissionControlContainer.ts","commons/controlBar/ControlBarExecutionTime.tsx","commons/controlBar/ControlBarSessionButton.tsx","commons/controlBar/ControlBarShareButton.tsx","commons/controlBar/ControlBarStepLimit.tsx","commons/utils/IntroductionHelper.ts","pages/playground/Playground.tsx","pages/playground/PlaygroundContainer.tsx","pages/welcome/Welcome.tsx","commons/profile/ProfileCard.tsx","commons/profile/Profile.tsx","commons/dropdown/DropdownAbout.tsx","commons/dropdown/DropdownCourses.tsx","commons/dropdown/DropdownCreateCourse.tsx","commons/dropdown/DropdownHelp.tsx","commons/dropdown/DropdownSettings.tsx","commons/dropdown/Dropdown.tsx","commons/navigationBar/subcomponents/AcademyNavigationBar.tsx","commons/navigationBar/subcomponents/NavigationBarMobileSideMenu.tsx","commons/navigationBar/NavigationBar.tsx","commons/application/Application.tsx","commons/application/ApplicationContainer.ts","commons/utils/RegisterServiceWorker.ts","pages/fileSystem/FileSystemProvider.tsx","index.tsx","features/eventLogging/client.ts","features/sourceRecorder/sourcecast/SourcecastTypes.ts","commons/application/types/CommonsTypes.ts","commons/controlBar/ControlBarRunButton.tsx","commons/application/types/SessionTypes.ts","commons/WorkspaceSettingsContext.tsx","features/groundControl/GroundControlTypes.ts","features/persistence/PersistenceTypes.ts","commons/githubAssessments/GitHubMissionDataUtils.ts","../../../src/errors/errors.ts","features/dashboard/DashboardTypes.ts","commons/utils/Constants.ts","commons/controlBar/ControlBarPreviousButton.tsx","commons/controlBar/ControlBarQuestionViewButton.tsx","commons/achievement/utils/AchievementInferencer.ts","commons/mobileWorkspace/DraggableRepl.tsx","commons/mobileWorkspace/MobileKeyboard.tsx","commons/mobileWorkspace/mobileSideContent/MobileControlBar.tsx","commons/mobileWorkspace/mobileSideContent/MobileSideContent.tsx","commons/mobileWorkspace/MobileWorkspace.tsx","commons/controlBar/ControlBarReturnToAcademyButton.tsx","commons/controlBar/ControlBarNextButton.tsx","features/envVisualizer/components/Visible.tsx","features/envVisualizer/EnvVisualizerCompactConfig.ts","features/envVisualizer/EnvVisualizerConfig.ts","features/envVisualizer/components/Text.tsx","features/envVisualizer/components/arrows/GenericArrow.tsx","features/envVisualizer/components/arrows/ArrowFromFrame.tsx","features/envVisualizer/components/ArrayEmptyUnit.tsx","features/envVisualizer/components/arrows/ArrowFromFn.tsx","features/envVisualizer/components/values/Value.tsx","features/envVisualizer/components/values/FnValue.tsx","features/envVisualizer/components/values/GlobalFnValue.tsx","features/envVisualizer/components/arrows/ArrowFromArrayUnit.tsx","features/envVisualizer/components/shapes/RoundedRect.tsx","features/envVisualizer/components/ArrayNullUnit.tsx","features/envVisualizer/components/values/PrimitiveValue.tsx","features/envVisualizer/components/ArrayUnit.tsx","features/envVisualizer/components/values/ArrayValue.tsx","features/envVisualizer/components/Frame.tsx","features/envVisualizer/components/Level.tsx","features/envVisualizer/components/ArrayLevel.tsx","features/envVisualizer/components/FrameLevel.tsx","features/envVisualizer/components/Grid.tsx","features/envVisualizer/components/ArrowLane.tsx","features/envVisualizer/components/arrows/ArrowFromText.tsx","features/envVisualizer/components/values/UnassignedValue.tsx","features/envVisualizer/components/Binding.tsx","features/envVisualizer/EnvVisualizerUtils.ts","features/envVisualizer/compactComponents/arrows/GenericArrow.tsx","features/envVisualizer/compactComponents/arrows/ArrowFromFrame.tsx","features/envVisualizer/compactComponents/ArrayEmptyUnit.tsx","features/envVisualizer/compactComponents/arrows/ArrowFromFn.tsx","features/envVisualizer/compactComponents/values/Value.tsx","features/envVisualizer/compactComponents/values/FnValue.tsx","features/envVisualizer/compactComponents/values/GlobalFnValue.tsx","features/envVisualizer/compactComponents/arrows/ArrowFromArrayUnit.tsx","features/envVisualizer/compactComponents/ArrayNullUnit.tsx","features/envVisualizer/compactComponents/Text.tsx","features/envVisualizer/compactComponents/values/PrimitiveValue.tsx","features/envVisualizer/compactComponents/ArrayUnit.tsx","features/envVisualizer/compactComponents/values/ArrayValue.tsx","features/envVisualizer/compactComponents/arrows/ArrowFromText.tsx","features/envVisualizer/compactComponents/values/UnassignedValue.tsx","features/envVisualizer/compactComponents/Binding.tsx","features/envVisualizer/compactComponents/Frame.tsx","features/envVisualizer/compactComponents/Level.tsx","features/envVisualizer/EnvVisualizerLayout.tsx","features/envVisualizer/EnvVisualizer.tsx","commons/assessment/AssessmentTypes.ts","features/groundControl/GroundControlActions.ts","commons/sideContent/SideContentHelper.ts","commons/sideContent/GenericSideContent.tsx","features/academy/AcademyActions.ts","assets/default_cover_image.jpg","commons/controlBar/ControlBarResetButton.tsx","commons/controlBar/ControlBarSaveButton.tsx","features/sourceRecorder/sourcecast/SourcecastActions.ts","features/dataVisualizer/Config.ts","features/dataVisualizer/list.js","features/dataVisualizer/dataVisualizerUtils.ts","features/dataVisualizer/drawable/ArrowDrawable.tsx","features/dataVisualizer/drawable/BackwardArrowDrawable.tsx","features/dataVisualizer/tree/BaseTreeNode.ts","features/dataVisualizer/tree/AlreadyParsedTreeNode.ts","features/dataVisualizer/tree/DataTreeNode.tsx","features/dataVisualizer/tree/DrawableTreeNode.tsx","features/dataVisualizer/drawable/NullDrawable.tsx","features/dataVisualizer/drawable/ArrayDrawable.tsx","features/dataVisualizer/drawable/FunctionDrawable.tsx","features/dataVisualizer/tree/FunctionTreeNode.tsx","features/dataVisualizer/tree/ArrayTreeNode.tsx","features/dataVisualizer/tree/Tree.tsx","features/dataVisualizer/dataVisualizer.tsx","commons/application/ApplicationTypes.ts","commons/collabEditing/CollabEditingHelper.ts","commons/collabEditing/CollabEditingTypes.ts","features/fullJS/fullJSHighlight.js","commons/documentation/Documentation.ts","commons/utils/AceHelper.ts","commons/sideContent/SideContentTypes.ts","../../../src/parser/parser.ts","commons/collabEditing/CollabEditingActions.ts","../../../src/utils/walkers.ts","features/achievement/AchievementTypes.ts","../../src/createContext.ts","../../src/types.ts","commons/application/actions/CommonsActions.ts","commons/utils/GitHubPersistenceHelper.ts","commons/controlBar/ControlBar.tsx","commons/mcqChooser/McqChooser.tsx","commons/utils/MemoizeHelper.ts","commons/sideContent/SideContentTestcaseCard.tsx","commons/achievement/AchievementManualEditor.tsx","features/dashboard/DashboardActions.ts","commons/achievement/utils/AchievementBackender.ts","commons/sagas/RequestsSaga.ts","commons/utils/CastBackend.ts","commons/utils/ConsoleOverload.ts","commons/utils/DisplayBufferService.ts","commons/repl/ReplInput.tsx","commons/repl/Repl.tsx","commons/workspace/WorkspaceTypes.ts","../../src/constants.ts","../../../src/errors/runtimeSourceError.ts","../../../src/utils/astCreator.ts","../../../src/errors/localImportErrors.ts","../../../src/localImports/filePaths.ts","commons/utils/Hooks.ts","commons/utils/LocalStorageHelper.ts","features/sourceRecorder/SourceRecorderTypes.ts","commons/application/actions/SessionActions.ts","../../../src/utils/operators.ts","../../../src/utils/rttc.ts","features/achievement/AchievementConstants.ts","../../../../../src/editors/ace/theme/source.ts","../../../../../src/editors/ace/docTooltip/index.ts","../../../../src/localImports/constructors/baseConstructors.ts","../../../src/localImports/typeGuards.ts","../../../src/runner/utils.ts","commons/Markdown.tsx","../../../../../src/editors/ace/modes/source.ts","commons/utils/HistoryHelper.ts","pages/githubAssessments/GitHubClassroom.tsx","pages/githubAssessments/GitHubAssessmentListing.tsx","pages/githubAssessments/GitHubClassroomWelcome.tsx","commons/controlBar/github/ControlBarDisplayMCQButton.tsx","commons/controlBar/github/ControlBarTaskAddButton.tsx","commons/controlBar/github/ControlBarTaskDeleteButton.tsx","commons/githubAssessments/GitHubMissionCreateDialog.tsx","commons/sideContent/githubAssessments/SideContentMarkdownEditor.tsx","commons/sideContent/githubAssessments/SideContentMissionEditor.tsx","commons/sideContent/githubAssessments/SideContentTaskEditor.tsx","commons/sideContent/githubAssessments/SideContentEditableTestcaseCard.tsx","commons/sideContent/githubAssessments/SideContentTestcaseEditor.tsx","pages/githubAssessments/GitHubAssessmentDefaultValues.ts","pages/githubAssessments/GitHubAssessmentWorkspace.tsx","pages/githubAssessments/GitHubAssessmentWorkspaceContainer.tsx","commons/controlBar/github/ControlBarGitHubLoginButton.tsx","commons/navigationBar/subcomponents/GitHubAssessmentsNavigationBar.tsx","commons/utils/ParamParseHelper.ts","../../../src/utils/makeWrapper.ts","commons/application/types/InterpreterTypes.ts","../../src/finder.ts","commons/application/actions/InterpreterActions.ts","commons/dialogs/ConfirmDialog.tsx","commons/dialogs/PromptDialog.tsx","commons/utils/DialogHelper.tsx","commons/application/types/ExternalTypes.ts","../../../src/lang/ClangLexer.ts","../../../src/lang/ClangParser.ts","../../../src/utils/formatters.ts","../../../src/runner/index.ts","../../../src/runner/sourceRunner.ts","../../../src/interpreter/interpreter.ts","../../../../src/localImports/transformers/hoistAndMergeImports.ts","../../../../src/localImports/constructors/contextSpecificConstructors.ts","features/github/GitHubUtils.tsx","../../../src/stdlib/localImport.prelude.ts","../../../../src/localImports/transformers/removeExports.ts","../../../../src/localImports/transformers/removeNonSourceModuleImports.ts","../../src/schedulers.ts","../../../src/validator/validator.ts","../../../src/errors/validityErrors.ts","commons/achievement/utils/DateHelper.ts","features/persistence/PersistenceActions.ts","features/remoteExecution/RemoteExecutionActions.ts","commons/utils/ActionsHelper.ts","features/sourceRecorder/sourcereel/SourcereelTypes.ts","../../src/index.ts","features/academy/AcademyReducer.ts","features/achievement/AchievementReducer.ts","features/dashboard/DashboardReducer.ts","features/playground/PlaygroundReducer.ts","features/sourceRecorder/sourcecast/SourcecastReducer.ts","features/sourceRecorder/sourcereel/SourcereelReducer.ts","commons/workspace/WorkspaceReducer.ts","commons/application/ApplicationReducer.ts","commons/application/reducers/SessionsReducer.ts","commons/application/reducers/RootReducer.ts","commons/mocks/AssessmentMocks.ts","commons/mocks/UserMocks.ts","commons/mocks/GradingMocks.ts","commons/mocks/BackendMocks.ts","commons/achievement/utils/EventHandler.ts","commons/sagas/SafeEffects.ts","commons/sagas/AchievementSaga.ts","commons/utils/AuthHelper.ts","commons/sagas/BackendSaga.ts","commons/gitHubOverlay/GitHubFileNodeData.tsx","commons/gitHubOverlay/GitHubTreeNodeCreator.tsx","commons/gitHubOverlay/FileExplorerDialog.tsx","commons/gitHubOverlay/RepositoryDialog.tsx","commons/sagas/GitHubPersistenceSaga.ts","features/github/GitHubTypes.ts","commons/sagas/LoginSaga.ts","commons/sagas/PersistenceSaga.tsx","commons/sagas/PlaygroundSaga.ts","commons/sagas/RemoteExecutionSaga.ts","commons/sagas/WorkspaceSaga.ts","commons/sagas/MainSaga.ts","pages/localStorage.ts","pages/createStore.ts","features/remoteExecution/RemoteExecutionTypes.ts","commons/ContentDisplay.tsx","features/sourceRecorder/SourceRecorderActions.ts","features/achievement/AchievementActions.ts","commons/sourceRecorder/SourceRecorderEditor.tsx","commons/editor/EditorHotkeys.ts","commons/editor/UseShareAce.tsx","commons/editor/Editor.tsx","commons/editor/EditorContainer.tsx"],"names":["notification","Toaster","create","position","Position","TOP","showSuccessMessage","message","timeout","key","show","intent","Intent","SUCCESS","showWarningMessage","WARNING","showDangerMessage","DANGER","showMessage","props","dismiss","visualizeEnv","context","EnvVisualizer","drawEnv","err","Error","highlightClean","window","Inspector","highlightLine","line","createContext","externals","externalContext","variant","Variant","DEFAULT","createSlangContext","makeElevatedContext","ProxyFrame","prototype","runtime","environments","head","fakeFrame","proxyGlobalEnv","Proxy","get","target","prop","receiver","proxyEnvs","proxyRuntime","getDifferenceInMethods","elevatedContext","eFrame","frame","difference","keys","getStoreExtraMethodsString","toRemove","unblockKey","join","getRestoreExtraMethodsString","removed","store","map","x","getBlockExtraMethodsString","NotificationTypes","i","CHANGE_QUERY_STRING","GENERATE_LZ_STRING","SHORTEN_URL","UPDATE_SHORT_URL","PLAYGROUND_UPDATE_GITHUB_SAVE_INFO","PLAYGROUND_UPDATE_PERSISTENCE_FILE","ControlBarClearButton","handleReplOutputClear","label","icon","IconNames","REMOVE","onClick","ControlBarEvalButton","handleReplEval","isRunning","content","CODE","SideBar","tabs","isExpanded","expandSideBar","collapseSideBar","selectedTabIndex","setSelectedTabIndex","React","useState","length","className","tab","index","classNames","selected","tabIndex","iconName","size","body","SideContent","selectedTabId","renderActiveTabPanelOnly","editorWidth","sideContentHeight","otherProps","GenericSideContent","renderFunction","dynamicTabs","changeTabsCallback","id","onChange","workspaceLocation","tabId","undefined","SideContentType","module","tabProps","title","htmlDisplay","generateIconId","iconSize","disabled","tabBody","tabPanel","panel","renderTab","propsAreEqual","rightResizeOnly","right","bottomResizeOnly","bottom","noResize","Workspace","sideBarResizable","contentContainerDiv","editorDividerDiv","leftParentResizable","maxDividerHeight","sideDividerDiv","contentContainerWidth","useDimensions","lastExpandedSideBarWidth","setLastExpandedSideBarWidth","isSideBarExpanded","setIsSideBarExpanded","FocusStyleManager","onlyShowFocusOnTabs","sideContentIsResizeable","current","clientHeight","toggleSideBarDividerDisplay","event","direction","elementRef","delta","clientWidth","sideBar","updateSize","width","height","toggleEditorDividerDisplay","_a","_b","ref","editorWidthPercentage","toggleDividerDisplay","resizableHeight","rightParentHeight","parentNode","style","display","sideContent","sideContentProps","resizableSideContent","bounds","enable","onResize","onResizeStop","handleSideContentHeightChange","hasUnsavedChanges","ControlBar","controlBarProps","isSideBarRendered","sideBarProps","minWidth","maxWidth","sideBarWidth","defaultSize","sideBarResizableProps","as","editorContainerProps","EditorContainer","McqChooser","mcqProps","createWorkspaceInput","Repl","replProps","defaultOptions","fullWidth","iconOnRight","NONE","minimal","ControlButton","options","isDisabled","buttonOptions","iconElement","color","iconColor","fill","type","rightIcon","deleteSourcecastEntry","action","DELETE_SOURCECAST_ENTRY","recordInit","initData","RECORD_INIT","recordInput","input","RECORD_INPUT","resetInputs","inputs","RESET_INPUTS","timerPause","TIMER_PAUSE","timeNow","Date","now","timerReset","TIMER_RESET","timerResume","timeBefore","TIMER_RESUME","timerStart","TIMER_START","timerStop","TIMER_STOP","chapterListRenderer","itemsParentRef","renderItem","defaultChoices","defaultLanguages","ulRef","chapterRenderer","lang","handleClick","text","displayName","ChapterSelectComponent","Select","ofType","ControlBarChapterSelect","sourceChapter","sourceVariant","handleChapterSelect","items","sourceLanguages","onItemSelect","itemRenderer","itemListRenderer","filterable","Classes","MINIMAL","styliseSublanguage","DOUBLE_CARET_VERTICAL","SAVE_CANVAS","assessmentRegExp","gradingRegExp","CREATE_COURSE","ADD_NEW_USERS_TO_COURSE","generateLzString","shortenURL","keyword","updateShortURL","shortURL","changeQueryString","queryString","playgroundUpdatePersistenceFile","file","playgroundUpdateGitHubSaveInfo","repoName","filePath","lastSaved","browseReplHistoryDown","BROWSE_REPL_HISTORY_DOWN","browseReplHistoryUp","BROWSE_REPL_HISTORY_UP","changeExternalLibrary","newExternal","CHANGE_EXTERNAL_LIBRARY","changeExecTime","execTime","CHANGE_EXEC_TIME","changeSideContentHeight","CHANGE_SIDE_CONTENT_HEIGHT","changeStepLimit","stepLimit","CHANGE_STEP_LIMIT","chapterSelect","chapter","CHAPTER_SELECT","externalLibrarySelect","externalLibraryName","initialise","PLAYGROUND_EXTERNAL_SELECT","toggleEditorAutorun","TOGGLE_EDITOR_AUTORUN","beginClearContext","library","shouldInitLibrary","BEGIN_CLEAR_CONTEXT","clearReplInput","CLEAR_REPL_INPUT","clearReplOutput","CLEAR_REPL_OUTPUT","clearReplOutputLast","CLEAR_REPL_OUTPUT_LAST","endClearContext","END_CLEAR_CONTEXT","evalEditor","EVAL_EDITOR","evalRepl","EVAL_REPL","evalTestcase","testcaseId","EVAL_TESTCASE","runAllTestcases","EVAL_EDITOR_AND_TESTCASES","updateActiveEditorTab","activeEditorTabOptions","UPDATE_ACTIVE_EDITOR_TAB","updateEditorValue","newEditorValue","UPDATE_EDITOR_VALUE","setEditorBreakpoint","breakpoints","UPDATE_EDITOR_BREAKPOINTS","highlightEditorLine","highlightedLines","HIGHLIGHT_LINE","updateReplValue","newReplValue","UPDATE_REPL_VALUE","sendReplInputToOutput","newOutput","SEND_REPL_INPUT_TO_OUTPUT","value","resetTestcase","RESET_TESTCASE","navigateToDeclaration","cursorPosition","NAV_DECLARATION","moveCursor","MOVE_CURSOR","resetWorkspace","workspaceOptions","RESET_WORKSPACE","updateWorkspace","UPDATE_WORKSPACE","setIsEditorReadonly","isEditorReadonly","SET_IS_EDITOR_READONLY","updateCurrentAssessmentId","assessmentId","questionId","UPDATE_CURRENT_ASSESSMENT_ID","updateCurrentSubmissionId","submissionId","UPDATE_CURRENT_SUBMISSION_ID","updateHasUnsavedChanges","UPDATE_HAS_UNSAVED_CHANGES","changeSublanguage","sublang","CHANGE_SUBLANGUAGE","updateSublanguage","UPDATE_SUBLANGUAGE","promptAutocomplete","row","column","callback","PROMPT_AUTOCOMPLETE","notifyProgramEvaluated","result","lastDebuggerResult","code","NOTIFY_PROGRAM_EVALUATED","toggleUsingSubst","usingSubst","TOGGLE_USING_SUBST","addHtmlConsoleError","errorMsg","ADD_HTML_CONSOLE_ERROR","questionIdLookup","cadetLoggerUrl","process","REACT_APP_CADET_LOGGER","log","record","sessionId","Promise","resolve","reject","getDB","then","db","transaction","STORE_NAME","oncomplete","onerror","objectStore","add","initSession","initialState","uuid","time","fn","answer","memoize","request","indexedDB","open","onsuccess","evt","console","error","onupgradeneeded","createObjectStore","keyPath","autoIncrement","SideContentResultCard","resultType","elevation","Elevation","ONE","toUpperCase","expected","errors","errorType","errorExplanation","errorMessage","actual","autograderTooltip","columnHeader","colClass","colTitle","CARET_DOWN","testcasesHeader","resultsHeader","collapseButton","isOpen","toggleFunc","CARET_RIGHT","SideContentAutograder","showsTestcases","setTestcasesShown","showsResults","setResultsShown","testcases","autogradingResults","handleTestcaseEval","testcaseCards","testcase","SideContentTestcaseCard","resultCards","toggleTestcases","toggleResults","placement","PopoverPosition","LEFT","HELP","keepChildrenMounted","SideContentLeaderboardCard","handleContestEntryClick","contestEntry","rank","INTERACTIVE","submission_id","student_name","final_score","contestEntryHeader","SideContentContestLeaderboard","orderedContestEntries","showLeaderboard","setShowLeaderboard","contestEntryCards","useMemo","SideContentContestEntryCard","canSave","isValid","handleVotingSubmissionChange","entryNumber","minScore","maxScore","wrong","score","onValueChange","placeholder","min","max","allowNumericCharactersOnly","minorStepSize","SideContentContestVoting","contestEntries","showContestEntries","setShowContestEntries","SideContentContestVotingContainer","handleSave","setIsValid","votingSubmission","setVotingSubmission","useEffect","updatedSubmission","vote","noDuplicates","Set","noNull","reduce","submissionHasNoNull","isSubmissionValid","SideContentToneMatrix","$container","shouldComponentUpdate","componentDidMount","ToneMatrix","initialise_matrix","this","handleClear","clear_matrix","handleRandomise","randomise_matrix","render","DARK","BUTTON_GROUP","r","beforeNow","dateString","date","moment","isBefore","getPrettyDate","format","AssessmentWorkspaceGradingResult","xp","maxXp","comments","Markdown","simplifiedAutoLink","strikethrough","tasklists","openLinksInNewWindow","graderName","gradedAt","AssessmentWorkspace","showOverlay","setShowOverlay","showResetTemplateOverlay","setShowResetTemplateOverlay","setSessionId","selectedTab","setSelectedTab","assessment","questions","grader","grading","questionOverview","isMobileBreakpoint","useResponsive","dispatch","useDispatch","handleEditorValueChange","fetchAssessment","notAttempted","question","QuestionTypes","programming","solutionTemplate","checkWorkspaceReset","mobileEditor","mobileEditorRun","pushLog","newInput","activeTab","handleEval","autograder","data","KeyboardCommand","run","storedAssessmentId","storedQuestionId","editorValue","editorPrepend","editorPostpend","editorTestcases","questionData","prepend","postpend","number","Chapter","CLANG","externalLibrary","external","name","voting","handleEditorUpdateBreakpoints","editorTabs","prependValue","postpendValue","execTimeMs","defaultWorkspaceManager","handleUpdateHasUnsavedChanges","isGraded","_submissionId","NINJA","BRIEFCASE","longSummary","briefing","NEW_LAYERS","contestVoting","CROWN","contestLeaderboard","AIRPLANE","assessmentConfiguration","isManuallyGraded","push","TICK","symbols","includes","GRID_VIEW","toneMatrix","beforeDynamicTabs","afterDynamicTabs","newTabId","prevTabId","listingPath","courseId","assessmentTypeLink","assessmentWorkspacePath","toString","questionProgress","onClickNext","history","onClickReturn","onClickProgress","deferredNavigate","blockedQuestionId","filter","qn","mcq","solution","acc","stringify","nextButton","ControlBarNextButton","blocking","previousButton","ControlBarPreviousButton","questionView","ControlBarQuestionViewButton","resetButton","ControlBarResetButton","runButton","ControlBarRunButton","handleEditorEval","saveButton","onClickSave","Constants","defaultSourceVariant","editorButtons","flowButtons","description","SpinnerSize","LARGE","overlay","closeOverlay","resetTemplateOverlay","ERROR","isCloseButtonShown","onClose","DIALOG_BODY","DIALOG_FOOTER","editorVariant","convertEditorTabStateToProps","editorSessionId","handleDeclarationNavigate","handlePromptAutocomplete","col","isEditorAutorun","newCode","onCursorChange","selection","getCursor","onSelectionChange","range","getRange","isBackwards","isEqual","start","end","handleMCQSubmit","option","handleBrowseHistoryDown","handleBrowseHistoryUp","handleReplValueChange","newValue","output","replValue","replButtons","clearButton","workspaceProps","heightChange","mobileWorkspaceProps","mobileSideContentProps","mobileControlBarProps","MobileWorkspace","AssessmentWorkspaceContainer","connect","state","session","assessments","workspaces","activeEditorTabIndex","isDebugging","enableDebugging","currentAssessment","currentQuestion","bindActionCreators","val","submitAnswer","filterNotificationsByAssessment","notifications","n","assessment_id","filterNotificationsBySubmission","filterNotificationsByType","assessmentType","assessment_type","makeNotificationMessage","new","deadline","autograded","submitted","unsubmitted","graded","new_message","NotificationBadge","notificationFilter","notificationIcon","round","large","disableHover","makeNotificationTag","multiline","onRemove","handleAcknowledgeNotifications","notificationTags","interactionKind","PopoverInteractionKind","HOVER","RIGHT","hoverOpenDelay","hoverCloseDelay","lazy","NotificationBadgeContainer","acknowledgeNotifications","AssessmentNotFound","makeGradingStatus","gradingStatus","tooltip","GradingStatuses","TIME","none","CROSS","DISABLE","PRIMARY","Assessment","params","useParams","betchaAssessment","setBetchaAssessment","showClosedAssessments","setShowClosedAssessments","showOpenedAssessments","setShowOpenedAssessments","showUpcomingAssessments","setShowUpcomingAssessments","toggleClosedAssessments","toggleOpenAssessments","toggleUpcomingAssessments","setBetchaAssessmentNull","sortAssessments","sortBy","a","makeSubmissionButton","overview","status","AssessmentStatuses","attempted","CONFIRM","makeAssessmentInteractButton","optionalLabel","not_attempted","PLAY","attempting","EDIT","EYE_OPEN","to","defaultQuestionId","makeOverviewCard","renderAttemptButton","renderGradingStatus","showGrade","ratio","String","alt","src","coverImage","defaultCoverImage","makeOverviewCardTitle","shortSummary","CALENDAR","openAt","closeAt","ellipsize","private","assessmentOverviews","assessmentOverviewsUnfiltered","isStudent","ao","stringParamToInt","assessmentWorkspaceProps","FLAME","isOverviewUpcoming","upcomingCards","isOverviewOpened","openedCards","closedCards","upcomingCardsCollapsible","openedCardsCollapsible","closedCardsCollapsible","submissionText","toLowerCase","betchaText","betchaDialog","handleSubmitAssessment","ContentDisplay","loadContentDispatch","handleAssessmentOverviewFetch","AssessmentContainer","role","Role","Student","fetchAssessmentOverviews","submitAssessment","NotFound","viewTemplate","coverImageUrl","completionText","achievementTemplate","isVariableXp","isTask","prerequisiteUuids","goalUuids","cardBackground","cardBackgroundUrl","view","AchievementAdder","allowNewUuid","setNewUuid","inferencer","useContext","AchievementContext","NEW_OBJECT","insertAchievement","ItemDeleter","deleteItem","item","TRASH","async","showSimpleConfirmDialog","contents","negativeLabel","positiveIntent","positiveLabel","ItemSaver","discardChanges","saveChanges","FLOPPY_DISK","EditableGoalUuids","changeGoalUuids","allGoalUuids","getAllGoalUuids","selectedUuids","isInvalidGoal","getGoal","GoalSelect","MultiSelect","selectedGoals","availableGoals","without","removeGoal","removeUuid","delete","goal","noResults","selectGoal","selectUuid","selectedItems","tagInputProps","getUuidByText","getUuid","tagRenderer","itemPredicate","query","resetOnSelect","EditablePosition","changePosition","maxPosition","listTaskUuids","positionOptions","Array","PositionSelect","EditablePrerequisiteUuids","changePrerequisiteUuids","availableUuids","isInvalidAchievement","getAchievement","PrerequisiteSelect","selectedPrereqs","availablePrereqs","achievement","selectPrereq","getUuidByTitle","AchievementSettings","changeCardBackground","changeIsVariableXp","editableAchievement","setOpen","toggleOpen","WRENCH","padding","checked","AchievmenetUuidCopier","CLIPBOARD","navigator","clipboard","writeText","EditableCardActionType","EditableDate","changeDate","hoverText","prettifyDate","outlined","background","textAlign","timePickerProps","showArrowButtons","EditableView","changeView","WIDGET_HEADER","init","isDirty","reducer","ActionType","SAVE_CHANGES","DISCARD_CHANGES","payload","DELETE_ACHIEVEMENT","CHANGE_CARD_BACKGROUND","CHANGE_DEADLINE","CHANGE_GOAL_UUIDS","CHANGE_POSITION","CHANGE_PREREQUISITE_UUIDS","CHANGE_RELEASE","release","CHANGE_TITLE","CHANGE_VIEW","CHANGE_XP","CHANGE_IS_VARIABLE_XP","EditableCard","isNewAchievement","releaseUuid","removeCard","requestPublish","achievementClone","cloneDeep","useReducer","isNew","setIsNew","modifyAchievement","removeAchievement","leftIcon","TRENDING_UP","AchievementUuidCopier","editableCards","AchievementEditor","newUuid","idx","splice","generateEditableCard","achievementUuid","listSortedAchievementUuids","AchievementFilter","filterState","ownStatus","globalStatus","setGlobalStatus","getFilterColor","AchievementMilestone","studentXp","caFulfillmentLevel","AchievementLevel","showMilestone","setShowMilestone","level","Math","floor","xpPerLevel","progress","progressFrac","onMouseEnter","onMouseLeave","animate","stripes","AchievementOverview","userState","selectedUser","crid","courseRegId","userCrid","useTypedSelector","FETCH_TOTAL_XP_ADMIN","FETCH_TOTAL_XP","twoDays","getTime","AchievementDeadline","deadlineColor","isExpired","timeFromExpired","DeadlineColors","RED","BLACK","STOPWATCH","prettifyDeadline","stringifyXp","isBonus","AchievementXp","BANK_ACCOUNT","AchievementCard","focusState","isDropdownOpen","shouldRender","toggleDropdown","focusUuid","setFocusUuid","displayDeadline","getDisplayDeadline","displayXp","getDescendantXp","getProgressFrac","getStatus","hasDropdown","getImmediateChildren","onClickCapture","handleGlow","opacity","AchievementStatus","COMPLETED","AchievementTask","filterStatus","taskColor","getAbilityColor","setIsDropdownOpen","isInFilter","FilterStatus","ALL","ACTIVE","isPrerequisite","canRender","prerequisite","shouldRenderPrerequisites","shouldRenderTask","prerequisiteUuid","borderBottom","borderLeft","AchievementCommentCard","showToQuestion","toMission","AchievementViewCompletion","awardedXp","paragraphs","split","para","AchievementViewGoal","goals","targetCount","count","completed","frac","mapGoalToJSX","AchievementView","Number","isNaN","isAdminView","FETCH_ASSESSMENT_OVERVIEWS","FETCH_ASSESSMENT_ADMIN","FETCH_ASSESSMENT","selectedAssessment","selectedAssessmentConfig","find","config","MOUNTAIN","getAchievementXp","listGoals","descriptionParagraphs","getAbilityGlow","getAbilityBackground","backgroundBlendMode","assessmentCompleted","assessmentOverview","insertFakeAchievements","assessmentConfigs","sortedOverviews","sort","overview1","overview2","diff","assessmentTypes","categorisedUuids","_","forEach","isReleased","idString","hasAchievement","insertFakeGoalDefinition","achievementUuids","meta","GoalType","ASSESSMENT","assessmentNumber","requiredCompletionFrac","insertFakeAchievement","isPublished","uuids","generateAchievementTasks","taskUuids","taskUuid","Dashboard","getAchievements","getOwnGoals","getGoals","getUserAssessmentOverviews","getUsers","updateGoalProgress","group","achievementAssessmentOverviews","users","userIdState","userAssessmentOverviews","hiddenState","seeHidden","Provider","username","AchievementManualEditor","studio","GLOBE","LOCATE","ENDORSED","listAllSortedAchievementUuids","listSortedReleasedTaskUuids","AchievementPreview","awaitPublish","publishChanges","viewMode","toggleMode","mode","ARROW_LEFT","ARROW_RIGHT","CLOUD_UPLOAD","listSortedTaskUuids","EditableGoalActionType","metaTemplate","BINARY","condition","MANUAL","EVENT","eventNames","EventType","RUN_CODE","observeFrom","observeTo","goalDefinitionTemplate","EditableAssessmentMeta","assessmentMeta","changeMeta","requiredCompletion","rightElement","EventTypes","AND","operands","OR","JoinerSelect","joinerRenderer","joiner","conditionSplitter","len","conditions","flat","JSON","EditableBinaryMeta","binaryMeta","joiners","condArray","changeCondition","parse","op","cond","changeConditionArray","deleteCondition","changeJoinerArray","EditableTime","changeTime","prettifyTime","EventSelect","eventRenderer","eventName","EditableEventMeta","eventMeta","changeIndexEventName","changeEventName","Object","values","EditableManualMeta","manualMeta","EditableMeta","TypeSelect","editableMetaDetails","editableGoal","DELETE_GOAL","CHANGE_META","CHANGE_TEXT","EditableGoal","isNewGoal","getGoalDefinition","goalClone","modifyGoalDefinition","removeGoalDefinition","GoalAdder","insertGoalDefinition","editableGoals","GoalEditor","generateEditableGoal","goalUuid","AchievementControl","bulkUpdateAchievements","bulkUpdateGoals","setAwaitPublish","forceUpdate","when","getAllGoals","getAllAchievements","getGoalsToDelete","getAchievementsToDelete","resetToDelete","AchievementControlContainer","AchievementInferencer","achievements","DashboardContainer","assessmentConfigurations","Achievement","toAchievementControl","Admin","Staff","exact","path","component","AchievementDashboard","AchievementContainer","ControlBarAutorunButtons","showRunButton","showAutoRunIndicator","AUTOMATIC_UPDATES","showDebuggerPause","pauseDisabled","STOP","handleDebuggerPause","showDebuggerResume","CHEVRON_RIGHT","handleDebuggerResume","showDebuggerReset","handleDebuggerReset","autorunDisabled","handleToggleEditorAutorun","dataVisualizerKeyMap","PREVIOUS_STEP","NEXT_STEP","SideContentDataVisualizer","constructor","super","onPrevButtonClick","setState","currentStep","onNextButtonClick","steps","DataVisualizer","document","getElementById","classList","firstStep","finalStep","dataVisualizerHandlers","configure","ignoreEventsCondition","ignoreRepeatedEventsWhenKeyHeldDown","stopEventPropagationAfterIgnoring","step","keyMap","handlers","justifyContent","alignItems","marginBottom","left","flexDirection","overflowX","elem","margin","marginTop","whiteSpace","RUNNING_TEXT","href","Links","textbookChapter2_2","rel","SideContentEnvVisualizer","handleResize","debounce","newWidth","calculateWidth","newHeight","calculateHeight","updateDimensions","visualization","innerWidth","parseFloat","mobileBreakpoint","innerHeight","addEventListener","redraw","componentWillUnmount","cancel","removeEventListener","componentDidUpdate","prevProps","textbookChapter3_2","SourceRecorderControlBar","audio","handleSeeked","stopPreviousPlaybackAndApplyFromStart","playbackData","handleAudioLoaded","handleSetSourcecastDuration","duration","applyDeltas","deltas","handleSetCodeDeltasToApply","currentDeltaRevision","applyPlaybackDataFromStart","sleep","ms","setTimeout","currentRevision","currentTime","handleExternalSelect","codeDeltasToApply","deltaWithTime","futureData","handleSetInputToApply","handlePlayerPausing","pause","handleSetIsEditorReadonly","handleSetSourcecastStatus","PlaybackStatus","paused","stopCurrentPlayback","handlePlayerPlaying","play","playing","handlePlayerStopping","handleSetCurrentPlayerTime","currentPlayerProgress","updatePlayerTime","e","playbackStatus","forcedPaused","handlePlayerProgressBarChange","renderLabel","totalTime","sec","currentSourcecastItem","PlayerPlayButton","PlayerPauseButton","PAUSE","audioUrl","onEnded","onLoadedMetadata","onSeeked","onTimeUpdate","preload","stepSize","labelRenderer","SourceRecorderDeleteCell","isDialogOpen","setIsDialogOpen","handleCloseDialog","canOutsideClickClose","DIALOG_FOOTER_ACTIONS","handleDeleteSourcecastEntry","SourceRecorderSelectCell","handleSelect","handleSetSourcecastData","uid","url","PAPERCLIP","SourceRecorderShareCell","shareInputElem","selectShareInputText","bind","location","protocol","host","shareURL","shareButtonPopoverContent","defaultValue","readOnly","DUPLICATE","popoverClassName","inheritDarkTheme","SHARE","focus","select","SourcecastTable","defaultColumnDefs","gridApi","handleFilterChange","changeVal","filterValue","setQuickFilter","onGridReady","api","sizeColumnsToFit","onresize","columnDefs","headerName","field","cellRendererFramework","cellRendererParams","suppressMovable","suppressMenu","cellStyle","hide","valueGetter","getStandardDate","inserted_at","SourcastDeleteCell","sortable","groupFilterEnabled","resizable","loadingDisplay","sourcecastIndex","grid","labelFor","domLayout","defaultColDef","rowData","rowHeight","pagination","paginationPageSize","INTRODUCTION","dataVisualizerTab","dataVisualizer","envVisualizerTab","envVisualizer","Sourcecast","introduction","handleQueryParam","newUid","match","sourcecastId","cast","fetchSourcecastIndex","inputToApply","autorunButtons","beginDebuggerPause","debuggerReset","debuggerResume","handleInterruptEval","beginInterruptExecution","evalButton","HOME","SourceRecorderTable","onChangeTabs","isPlaying","change","sourcecastControlbarProps","playerTime","setCurrentPlayerTime","setCodeDeltasToApply","editorReadonly","setInputToApply","setSourcecastDuration","currentPlayerTime","playbackDuration","SourcecastContainer","withRouter","sourcecast","setSourcecastData","setSourcecastStatus","AddUserPanel","setUsers","invalidCsvMsg","setInvalidCsvMsg","useRef","CSVReader","useCSVReader","onGridSizeChanged","suppressCellSelection","suppressMovableColumns","htmlSelectOptions","authProviders","entries","provider","setProvider","onUploadAccepted","results","processed","uniqBy","validateCsvInput","delimiter","skipEmptyLines","getRootProps","acceptedFile","ProgressBar","getRemoveFileProps","inputProps","inline","handleAddNewUsersToCourse","BooleanCell","changeHandler","useCallback","setStateHandler","rowIndex","DeleteRowCell","handleDelete","deleteRowHandler","WARNING_SIGN","NumericCell","clampValueOnBlur","indexOfObject","arr","obj","AssessmentConfigPanel","assessmentConfig","setAssessmentConfig","setAssessmentConfigsToDelete","rowDrag","editable","temp","getDisplayedRowAtIndex","setDataValue","displayInDashboard","earlySubmissionXp","hoursBeforeEarlyXpDecay","deleted","setRowData","onRowDragMove","movingNode","node","overNode","movingData","overData","fromIndex","toIndex","element","moveInArray","onRowDragLeaveOrEnd","setHasChangesAssessmentConfig","rowDragManaged","suppressPaginationPanel","onRowDragLeave","onRowDragEnd","onCellValueChanged","colDef","assessmentConfigId","CourseHelpTextEditorTab","CourseConfigPanel","courseHelpTextSelectedTab","setCourseHelpTextSelectedTab","WRITE","courseName","courseShortName","viewable","enableGame","enableAchievements","enableSourcecast","moduleHelpText","courseConfiguration","writePanel","setCourseConfiguration","previewPanel","helperText","PREVIEW","RolesCell","handleUpdateUserRole","roleOptions","DeleteUserCell","handleDeleteUserFromCourse","UserConfigPanel","userCourseRegistrations","UserActionsCell","exportDataAsCsv","fileName","toISOString","columnKeys","AdminPanel","hasChangesCourseConfig","setHasChangesCourseConfig","hasChangesAssessmentConfig","assessmentConfigsToDelete","handleFetchCourseConfiguration","handleFetchAssessmentConfigs","handleFetchUserCourseRegistrations","courseConfigPanelProps","courseConfig","assessmentConfigPanelProps","deletedElement","userConfigPanelProps","addUserPanelProps","handleUpdateCourseConfig","handleDeleteAssessmentConfig","setAssessmentConfigurations","handleUpdateAssessmentConfigs","AdminPanelContainer","fetchCourseConfig","fetchAssessmentConfigs","fetchAdminPanelCourseRegistrations","updateCourseConfig","updateAssessmentConfigs","deleteAssessmentConfig","updateUserRole","deleteUserCourseRegistration","addNewUsersToCourse","gradingSummary","cols","startCase","rows","handleFetchGradingSummary","dashboard","fetchGroupGradingSummary","FontAssets","zektonFont","pngPath","fntPath","zektonDarkFont","alienCowsFont","alienLeagueFont","pixelFont","assetsFolder","sourceAcademyAssets","fadeDuration","nullFunction","nullInteractionId","nullSequenceNumber","popUpDuration","defaultAssetPath","defaultFontStyle","align","Phaser","GameObjects","BitmapText","ALIGN_CENTER","defaultCursor","screenSize","y","screenCenter","Color","navy","lightBlue","offWhite","white","darkGrey","lightGrey","blue","darkBlue","orange","yellow","red","maroon","black","purple","paleYellow","HexColor","str","parseInt","slice","Direction","calcTableFormatPos","Row","numOfItems","maxXSpace","maxYSpace","numItemLimit","redistributeLast","itemsPerList","numOfLists","ceil","itemNumber","itemIndexInList","listIndex","indexToCoordinate","screenSpace","listSpace","maxItems","partitionSpace","calcListFormatPos","xSpacing","ySpacing","pos","textHoverStyle","fontFamily","fontSize","wordWrap","defaultTextHoverWidth","CommonTextHover","Container","scene","renderTextHover","substring","hoverWidth","Text","cursorOffSet","hoverTextBg","Rectangle","getBounds","setOrigin","setAlpha","setDepth","setVisible","createBitmapText","oriX","oriY","listBannerTextStyle","ALIGN_LEFT","awardTitleStyle","awardKeyStyle","awardDescStyle","lineSpacing","defaultAwardProp","assetKey","assetPath","previewXPos","previewYPos","previewKeyYPos","AwardsConstants","arrow","xOffset","xScale","yScale","itemsPerPage","list","yStart","ySpace","listTextConfig","noPreviewTextConfig","preview","descText","yOffset","rect","dim","keyTagTextConfig","keyTextConfig","explanation","titleTextConfig","getAwardProps","awardKeys","getAwardProp","awardKey","awardProp","SourceAcademyGame","getInstance","getAwardsMapping","AssetType","AnimType","ImageAssets","spaceshipBg","Image","saBanner","shortButton","mediumButton","longButton","topButton","speechBox","speakerBox","defaultLocationImg","locationPreviewFrame","locationPreviewFill","talkOptButton","talkOptCheck","modeMenuBanner","popUpFrame","mediumBox","diamond","cookies","scrollFrame","messageBar","escapeMenuBackground","awardsMenu","awardsBanner","awardsPageChosen","awardsPage","awardsBackground","gear","journal","chapterRepeatButton","chapterContinueButton","StarGold","StarSilver","StarBronze","chapterSelectFrame","chapterSelectBorder","chapterSelectArrow","mainMenuOptBanner","settingBanner","settingOption","verifiedFrame","sourceCrashedPod","squareKeyboardIcon","medKeyboardIcon","musicFadeOutTween","volume","ease","GameSoundType","SoundAssets","buttonHover","soundType","SFX","buttonClick","radioButtonClick","dialogueAdvance","popUpEnter","popUpExit","menuEnter","menuExit","modeEnter","notifEnter","notifExit","radioStatic","galacticHarmony","loop","BGM","Layer","defaultLayerSequence","Background","Selector","Objects","BBox","Character","Speaker","PopUp","Dialogue","SpeakerBox","Effects","Escape","UI","WorkerMessage","limitNumber","toS3Path","courseCoded","startsWith","substr","assetsPrefix","mandatory","object","getState","fadeOut","targets","alpha","fadeIn","fadeAndDestroy","tween","destroy","blackScreen","blink","gameObject","setInterval","tweens","clearInterval","entryTweenProps","exitTweenProps","rightSideEntryTweenProps","rightSideExitTweenProps","messageTextConfig","messageStyle","ALIGN_RIGHT","displayMiniMessage","displayMessagesPromise","container","messageBg","Sprite","setScale","messageText","getLayerManager","addToLayer","setPosition","getSoundManager","playSound","displayMiniMessageHelper","makeMiniMessageDisplayer","DialogueConstants","prompt","xPad","yPad","dialogueRectMargin","speakerTextConfig","textTypeWriterStyle","speakerTextStyle","Typewriter","textStyle","typeWriterInterval","textSprite","typeWriting","charPointer","clearTyping","changeLine","DialogueRenderer","typewriterStyle","typewriter","dialogueBox","blinkingDiamond","gameManager","GameGlobalAPI","getGameManager","setInteractive","useHandCursor","pixelPerfect","dialogueConstants","createTypewriter","drawDiamond","getDialogueContainer","diamondSprite","setDisplaySize","clearBlink","getDialogueBox","off","Input","Events","GAMEOBJECT_POINTER_UP","changeText","notifStyle","notifTextConfig","createButton","textConfig","bitMapTextStyle","onDown","onUp","onHover","onOut","onPointerMove","onHoverEffect","onClickSound","onHoverSound","button","addListener","GAMEOBJECT_POINTER_OVER","GAMEOBJECT_POINTER_OUT","GAMEOBJECT_POINTER_DOWN","GAMEOBJECT_POINTER_MOVE","pointer","localX","localY","PromptConstants","textPad","yInterval","promptOptStyle","promptWithChoices","choices","promptContainer","header","promptHeaderBg","promptBg","buttonPositions","activatePromptContainer","response","GamePhaseType","GameTerminalPhaseType","EscapeMenu","static","instance","setGameManager","gameManagerRef","getCurrLocId","currentLocationId","getLocationAtId","locationId","getStateManager","getGameMap","locationName","changeLocationTo","getLocationModes","addLocationMode","removeLocationMode","hasTriggeredInteraction","triggerStateChangeAction","actionId","triggerInteraction","watchGameItemType","gameItemType","stateObserver","getGameItemsInLocation","addItem","itemId","removeItem","makeObjectGlow","objectId","turnOn","getObjectManager","makeObjectBlink","setObjProperty","newObjProp","renderObjectLayerContainer","renderObjectsLayerContainer","getAllActivatables","getActivatables","getBBoxManager","setBBoxProperty","newBBoxProp","renderBBoxLayerContainer","areAllObjectivesComplete","isObjectiveComplete","areObjectivesComplete","completeObjective","isTaskComplete","areTasksComplete","completeTask","showTask","getAllVisibleTaskData","addCollectible","getUserStateManager","userStateType","isInUserState","clearSeveralLayers","layerTypes","layer","gameObj","showLayer","hideLayer","fadeInLayer","fadeOutLayer","dialogueRenderer","notifText","showNotification","on","displayNotification","actionIds","getPhaseManager","pushPhase","Sequence","getActionManager","processGameActions","popPhase","dialogueId","getDialogueManager","showDialogue","storeDialogueLine","newLine","newSpeakerDetail","getDialogueStorageManager","storeLine","getDialogueStorage","collectibleId","displayPopUp","getPopupManager","destroyAllPopUps","destroyPopUp","getSaveManager","saveGame","settingsJson","saveSettings","getLoadedUserState","soundKey","playBgMusic","stopAllSound","pauseCurrBgMusic","continueCurrBgMusic","applySoundSettings","userSettings","applyUserSettings","loadSounds","soundAssets","startAnimation","startFrame","frameRate","startImage","getAssetByKey","getAssetKeyFromId","getAnimationManager","displayAnimation","stopAnimation","stopImage","setDefaultCursor","cursor","getInputManager","enableKeyboardInput","active","enableMouseInput","enableSprite","disable","gamePhaseType","swapPhase","isCurrentPhase","renderBackgroundLayerContainer","getBackgroundManager","loadAssessments","createCharacterSprite","characterId","overrideExpression","overridePosition","getCharacterManager","moveCharacter","newLocation","newPosition","updateCharacter","expression","getDialogueById","getDialogueMap","getCharacterById","getCharacterMap","getActionById","getActionMap","getObjectById","getObjectPropMap","getBBoxById","bboxId","getBBoxPropMap","GameStateStorage","UserStateType","GameActionType","GameItemType","ActionConditionChecker","actionConditions","all","checkConditionSatisfied","actionCondition","every","conditional","conditionParams","boolean","UserState","ChecklistState","TasklistState","GameActionExecuter","actionType","actionParams","globalAPI","AddItem","RemoveItem","AddLocationMode","RemoveLocationMode","MoveCharacter","UpdateCharacter","ChangeBackground","StartAnimation","StopAnimation","PreviewLocation","ObtainCollectible","obtainCollectible","CompleteObjective","CompleteTask","ShowTask","ShowDialogue","showDialogueInSamePhase","AddPopup","MakeObjectBlink","MakeObjectGlow","PlayBGM","PlaySFX","ShowObjectLayer","NavigateToAssessment","promptNavigateToAssessment","UpdateAssessmentStatus","updateAssessmentState","Delay","GameActionManager","executeGameAction","processGameAction","isRepeatable","interactionId","checkCanPlayAction","isStateChangeAction","checkAllConditionsSatisfied","GameAnimationManager","game","animationInstanceMap","Map","isSprite","image","createImage","createAnimation","getAnimation","centreX","centreY","img","animType","currLoc","objects","removeAnimation","sprite","frames","anims","generateFrameNumbers","endFrame","first","repeat","set","existing","stop","anim","remove","resize","displayHeight","displayWidth","resizeOverflow","resizeUnderflow","GameAwardsManager","awardsGetter","uiContainer","previewContainer","itemsContainer","activePageNumber","createUIContainer","awardContainer","arrowLeft","nextPage","setRotation","PI","arrowRight","assetKeyCont","rectDim","assetKeyBg","assetKeyTagBg","originX","assetKeyTag","hoverCont","createAssetKeyPreviewCont","setPage","createItemsContainer","setPreview","award","previewAsset","previewRect","previewTitle","previewDesc","previewKey","blackTint","next","currPageNum","newPageNum","MAX_SAFE_INTEGER","getItems","itemPositions","createItemButton","xPos","yPos","pageNum","itemList","itemStartIdx","GameBackgroundManager","currentBackground","renderBackgroundImage","animationManager","asset","GameBoundingBoxManager","bboxes","boundingBoxes","bboxIdsToRender","clear","handleAdd","createBBox","bboxProperty","bboxSprite","isInteractive","clickArea","bboxProp","bbox","handleMutate","from","CharConstants","charWidth","charRect","Left","Middle","Right","CharacterManager","characterSpriteMap","characters","renderCharacterLayerContainer","idsToRender","character","defaultPosition","defaultExpression","expressions","scale","characterXPosition","characterSprite","char","pageBannerTextStyle","DashboardConstants","backButton","page","pageTextConfig","pageArea","DashboardPage","GameDashboardManager","pages","pageManagers","pageMask","pageChosenContainer","pageUIContainers","currPageIndex","createPageMask","addPhaseToMap","shape","Graphics","fillRect","createGeometryMask","pageIndex","currPageUIContainer","newPageUIContainer","setMask","bannerPos","getPageOptPositions","chosenIdx","bannerChosen","dashboardContainer","blackUnderlay","dashboardBg","pageOptButtons","pageOptButtonPositions","createPageOpt","geometryMask","DialogueGenerator","dialogueContent","currPart","currLineNum","dialogueLine","goto","part","GameActionConditionChecker","altPart","updateCurrPart","GamePosition","GameSize","StringUtils","lines","headerAndBodyLines","trim","isHeaderFunction","currHeader","sep","limit","substrings","phrase","splitByChar","trimRight","removeMultiLineComments","removeSingleLineComment","commentChars","removeAfter","commentIndex","indexOf","openCommentChars","closeCommentChars","newLines","commentOpen","l","commentRegions","openIns","findAllInstances","closeIns","activeIndex","openInd","closeInd","region","prevActive","removeCommentRegions","regions","newString","prevEnd","indices","word","charAt","capitalize","num","DialogueSpeakerRenderer","currentSpeakerId","getUsername","getAccountInfo","changeSpeakerTo","showNewSpeaker","drawSpeakerSprite","drawSpeakerBox","speakerId","speakerContainer","createSpeakerBox","speakerPosition","speakerSprite","rectangle","speakerText","DialogueManager","speakerRenderer","dialogueGenerator","getDialogueGenerator","getDialogueRenderer","getSpeakerRenderer","dialogue","playWholeDialogue","showNextLine","speakerDetail","generateNextLine","lineWithName","replace","promptTitle","choice","processGameActionsInSamePhase","GameDialogueStorageManager","dialogueStorage","newDialogue","speaker","getSpeakerName","clearDialogueStorage","storageLine","barX","barWidth","barY","innerBarX","innerBarY","addLoadingScreen","progressBar","progressBox","loadingScreenBg","load","graphics","fillStyle","barHeight","CommonRadioButton","defaultChoiceIdx","radioChoiceConfig","circleDim","checkedDim","outlineThickness","choiceTextConfig","bitmapTextStyle","buttonClickSoundKey","activeChoice","activeChoiceIdx","buttons","getRadioButtons","renderRadioButtons","activate","buttonPos","createRadioButton","Ellipse","setStrokeStyle","choiceText","optionChecked","getValueIdx","getChoices","getChosenChoice","optionTextStyle","optionHeaderTextStyle","applySettingsTextStyle","SettingsConstants","optHeaderTextConfig","opt","xSpace","radioButtonsTextConfig","volContainerOpts","escapeOptButtonStyle","volumeRadioOptTextStyle","optTextStyle","EscapeConstants","escapeOptTextConfig","settings","settingsTextConfig","radioButtons","radioChoiceTextConfig","volOpt","GameEscapeManager","bgmVolumeRadioButtons","sfxVolumeRadioButtons","getSettingsSaveManager","escapeMenuContainer","escapeMenuBg","getSettings","settingsPos","Column","setting","bgmVolume","sfxVolume","sfxVolIdx","findIndex","bgmVolIdx","createSettingsRadioOptions","getOptButtons","createEscapeOptButton","cleanUp","isGameType","GameType","Simulator","applySettings","sfxVol","newSettings","clearListeners","clearAllLayers","activateUI","deactivateUI","GameInputManager","keyboardListeners","eventListeners","mouse","enabled","keyboard","registerKeyboardListener","keyboardListener","addKey","registerEventListener","eventListener","concat","removeAllListeners","GameLayerManager","layers","getLayer","layerType","layerToHide","layerToShow","layerToFadeIn","layerToFadeOut","layerContainer","clearLayerContents","logTextStyle","scrollbarX","LogConstants","logTextConfig","textMaxWidth","logHeight","scrollbarTrack","scrollbarThumb","scrollSpeed","GameLogManager","logContainer","textLog","bitmapText","setMaxWidth","textMinY","scrollbarThumbHeight","scrollbarThumbMaxY","thumbTextScrollRatio","scrollZone","Zone","deltaX","deltaY","deltaZ","GlowingImage","imageGlow","glowClearer","blinkClearer","setBlendMode","BlendModes","ADD","getMapAssets","imageAsset","startGlow","clearGlow","startBlink","getContainer","getClickArea","GameObjectManager","objIdsToRender","createObject","objectProperty","objectProp","GamePhaseManager","phaseMap","inputManager","phaseStack","interruptCheckCallback","interruptTransitionCallback","transitionCallback","None","gameUI","setInterruptCheckCallback","setInterruptCallback","setCallback","prevPhase","pop","executePhaseTransition","getCurrentPhase","newPhase","phase","isCurrentPhaseTerminal","PopUpConstants","Small","Medium","Large","tweenDuration","GamePopUpManager","currPopUp","popUpFrameImg","getAssetKey","popUpImage","setActive","scaleY","scrollEntry","popUp","atPosContainer","scrollExit","objProp","createEmptyGameSaveState","lastCheckpointPlayed","currentLocation","currentPhase","Menu","chapterNewlyCompleted","incompleteTasks","completedTasks","completedObjectives","triggeredInteractions","triggeredStateChangeActions","convertMapToArray","completionMap","_objective","objective","GameStateManager","gameCheckpoint","subscribers","gameMap","checkpointObjective","checkpointTask","updatedLocations","getCharacterAtId","getChapterNewlyCompleted","objectives","tasks","getLocationIds","loadStatesFromSaveManager","getTriggeredStateChangeActions","getTriggeredInteractions","getCompletedObjectives","setObjective","getCompletedTasks","task","setTask","getIncompleteTasks","getSubscriberForItemType","addLocationNotif","removeLocationNotif","hasLocationNotif","has","isCurrentLocation","modes","setItemInMap","getLocations","locId","newExpression","isAllComplete","getObjectiveState","getTaskState","getObjectives","getAllTasks","getAllIncompleteTasks","taskTextStyle","TaskLogConstants","taskTextConfig","checkMark","imageUrl","GameTaskLogManager","taskLogContainer","tasksData","taskListContainer","totalTextHeight","taskTitle","underline","taskDescription","taskListContainerMinY","buttonConfigs","phaseManager","ToolbarConstants","firstButton","GameToolbarManager","toolbarContainer","buttonConfig","createToolbarButton","backTextYPos","backButtonStyle","CommonBackButton","renderBackButton","ExploreModeConstants","normal","hover","GameModeExplore","exploreMenuContainer","enableInteractions","disableInteractions","activatable","explorePointerOut","explorePointerOver","explorePointerUp","GameMode","gameModeToPhase","Move","Explore","Talk","modeButtonStyle","MenuModeConstants","GameModeMenu","getLatestLocationModes","currLocId","latestModesInLoc","talkTopics","modeMenuContainer","modeBanner","getModeButtons","createModeButton","moveButtonStyle","MoveModeConstants","xOffSet","GameModeMove","setTexture","getLatestNavigations","navigation","moveMenuContainer","previewFrame","previewFill","navigations","getMoveButtons","createMoveButton","previewSprite","previewLoc","previewDefault","nav","GameModeSequence","talkButtonStyle","TalkModeConstants","GameModeTalk","getLatestTalkTopics","talkMenuContainer","getTalkTopicButtons","createTalkTopicButton","checkedSprite","dialogueIds","GameManager","Scene","hasTransitioned","stateManager","layerManager","objectManager","characterManager","dialogueManager","actionManager","boundingBoxManager","popUpManager","backgroundManager","escapeManager","collectibleManager","achievementManager","logManager","dialogueStorageManager","toolbarManager","taskLogManager","dashboardManager","getEscapeManager","getCollectibleManager","getAchievementManager","getLogManager","getToolbarManager","getTaskLogManager","getDashboardManager","continueGame","chapterNum","checkpointNum","setCurrentSceneRef","registerGameInfo","getLoadedLocation","startingLoc","GameCharacterManager","GameDialogueManager","GameBBoxManager","getCollectibles","Log","Tasks","Collectibles","Achievements","transitionChecker","checkpointTransition","handleCharacterLayer","preloadLocationsAssets","bindKeyboardTriggers","getSoundAssets","loadImage","spritesheet","startAction","gameLocation","renderToolbarContainer","bgmKey","fastForwardGameActions","getGameStartActions","bringUpUpdateNotif","delay","fadeBlack","blackFade","renderLocation","Keyboard","KeyCodes","ESC","TAB","getCheckpointCompleteActions","GameSaveManager","fullSaveState","getGameSaveState","getLoadedPhase","getChapterNum","getCheckpointNum","getFullSaveState","gameSaveStates","userSaveState","collectibles","recentlyPlayedCheckpoint","largestCompletedChapter","method","headers","createHeaders","accessToken","resp","fetch","backendUrl","json","courseRegistration","gameStates","isEmpty","loadData","getCurrentSceneRef","prevGameState","gameStateManager","gameStateToJson","saveData","completedChapter","getLargestCompletedChapterNum","getChapterSaveState","defaultGlitchStyle","workerALines","workerTLines","WorkerConstants","putWorkerMessage","workerId","showLines","blackOverlay","linesPos","yStartPos","textFrames","baseTextConfig","numOfFrames","maxXDisplacement","maxYDisplacement","random","SCREEN","yoyo","loopDelay","createGlitchBitmapText","AwardsHallConstants","tileDim","maxAwardsPerCol","awardInfo","banner","bannerTextConfig","awardBannerTextStyle","awardNoAssetTitleStyle","awardHoverTitleStyle","awardHoverKeyStyle","awardHoverDescStyle","AwardsHall","backgroundTile","awardsContainer","isScrollLeft","isScrollRight","scrollLim","awardXSpace","achievementLength","collectibleLength","renderBackground","renderAwards","update","newXPos","tilePositionX","TileSprite","banners","bannerCont","createBanner","leftArrow","rightArrow","getAwards","achievementsPos","createAward","collectiblesPos","collectible","awardCont","hoverContainer","awardTitle","awardAssetKey","awardDesc","scrollFrameTop","scrollFrameBot","createAwardsHoverContainer","bannerContainer","bannerBg","bannerText","BindingConstants","keyDescTextConfig","keyStyle","keyDescStyle","Bindings","renderBindings","bindingsContainer","bindings","getBindings","bindingPositions","binding","createBinding","desc","bindingContainer","keyIcon","keyText","keyDesc","textures","once","loadText","cache","exists","chapterIndexStyle","chapterTitleStyle","pageNumberStyle","chapConstants","playButton","indexTextConfig","pageNumberTextConfig","imageRect","originalImageRectWidth","originalImageRectHeight","imageScale","chapComplete","chapPerRow","chapPerCol","chapPerPage","chapGapX","chapGapY","toTxtPath","TextAssets","defaultCheckpoint","awardsMapping","roomPreviewMapping","MockTextAssets","GameMap","mapAssets","locations","dialogues","actions","gameStartActions","checkpointCompleteActions","addSoundAsset","soundAsset","addMapAsset","addLocation","setModesAt","setNavigationFrom","getNavigationFrom","setGameStartActions","setCheckpointCompleteActions","addItemToLocation","setBGMusicAt","GameObjective","totalNumOfObjectives","numOfCompletedObjectives","prevState","addObjective","addObjectives","objState","setObjectives","GameTask","taskDetails","prevDetail","newDetail","visible","addTask","newTask","taskId","addTasks","newTasks","taskState","getTaskDetail","taskDetail","allVisibleTask","stringToSizeMap","small","medium","stringToPositionMap","middle","stringToGameModeMap","talk","explore","move","menu","stringToGameItemMap","stringToActionTypeMap","move_character","update_character","obtain_collectible","complete_objective","complete_task","show_task","add_item","remove_item","change_background","start_animation","stop_animation","show_dialogue","add_mode","remove_mode","add_popup","make_object_glow","make_object_blink","play_bgm","play_sfx","preview_location","show_object_layer","navigate_to_assessment","update_assessment_status","stringToGameStateStorageMap","checklist","tasklist","userstate","stringToUserStateTypeMap","ParserConverter","GameEntityType","ParserValidator","gameItemAsserts","gameEntityAsserts","gameAnimAsserts","gameAnimMaps","Parser","checkpoint","allItemIds","registerId","verifyAssertions","verifyGameItemAssert","verifyGameEntityAsserts","verifyGameAnimAsserts","assertItemType","assertionDetails","assertionDetail","actionAssertionError","assertItemTypes","itemIds","assertEntityType","gameEntityType","bgms","numberOfBgm","sound","sfxs","numberOfSfx","assertAnimType","idFound","attribute","ConditionParser","conditionDetails","hasExclamation","gameStateStorage","condParams","stringToGameStateStorage","validator","stringToUserStateType","ActionParser","fullActionStrings","fullActionString","parseAction","rawActionString","actionString","conditionalsString","gameAction","parseActionContent","actionParamString","repeatable","gameActionType","stringToActionType","actionParamObj","assetCategory","stringToGameItemType","stringToGameMode","stringToPosition","stringToSize","stringToBoolean","generateActionId","PromptParser","splitChoice","rawChoice","splitWithLimit","CharacterParser","characterList","characterDetails","parseCharacterDetails","addToLoc","characterAssetKey","characterAssetPath","SpeakerParser","rawStr","speakerPositionStr","addCharacterExprToMap","charId","charExpression","isInteger","RegExp","test","isGotoLabel","isActionLabel","isSpeaker","isPrompt","isPromptChoice","MusicParser","soundList","musicDetails","musicIndex","actionIdNum","chapterText","checkPointLines","splitToLinesAndRemoveComments","splitToParagraph","parseCheckpointConfig","parseCheckpointParagraphs","locationBody","parseLocationConfig","parseLocationParagraphs","locationConfig","configValues","gameMode","otherLocationId","previewPath","entityHeader","objectList","parseObjectConfig","parseActions","shortPath","objectDetails","objectAssetKey","objectPath","frameHeight","frameWidth","boundingBoxList","boundingBox","parseBBoxConfig","bboxDetails","checkpointConfig","locationDetails","locationDetail","locationAssetKey","locationPath","dialogueText","dialogueDetails","dialogueBody","parseDialogue","parseDialogueContent","toCapitalizedWords","newMap","mapValues","mapByHeader","createDialogueLines","dialogueLines","currIndex","gotoString","rawTitle","rawChoices","parsePrompt","lastLine","nextLine","callGameManagerOnTxtLoad","textAssets","getIsUsingMock","filename","getGameChapters","filenames","defaultCheckpointText","callGameManagerForSim","checkpointFilenames","getSSChapterSimFilenames","createChapter","centreCol","centreRow","getCoorByChapter","chapterContainer","chapterDone","chapterPreview","chapterFrame","chapCompleteRect","chapCompleteText","chapterRepeatHover","chapterContinueHover","chapterRepeat","chapterContinue","chapterIndexText","chapterTitleText","chapterAccessible","ChapterSelect","chaptersContainer","backButtonContainer","pageNumberText","targetPage","preloadChapterAssets","renderChapters","targetX","chapterDetail","createChaptersContainer","numPages","latestChapter","setText","border","scrollPrevPage","scrollNextPage","chapterIndex","reverse","transitionTextStyle","CheckpointConstants","transitionTextConfig","entryTween","exitTween","CheckpointTransition","showTransitionText","loadedGameState","chapterDetails","currChapter","currCheckpoint","isLastCheckpoint","saveChapterComplete","isLastChapter","transitionText","mainMenuStyle","MainMenuConstants","studentRoom","awards","buttonTextConfig","xHide","onFocusTween","outFocusTween","MainMenu","renderOptionButtons","backgroundImg","optionsContainer","getOptionButtons","createOptionButton","tweenOnHover","tweenOffHover","optButton","roomDefaultCode","verifiedStyle","RoomConstants","verifiedText","tag","hoverTagTextConfig","refreshButton","getRoomPreviewCode","roomAssessmentId","roomAssessment","getAssessmentOverviews","getRoomAssessmentId","getStudentRoomCode","getAssessment","mission","progQn","RoomPreview","studentCode","preloadImageMap","preloadSoundMap","preloadSpritesheetMap","verifCont","getVerifCont","getRoomCode","hoverTextFrame","hoverLine","DIFFERENCE","createVerifiedHoverContainer","eval","renderDefaultBackground","loadSpritesheet","roomRefreshHover","loadRoomCode","stopAll","restart","initialiseManagers","moduleContexts","remotePath","runInContext","defaultAward","attachVerificationTag","backgroundAsset","getDefaultBackgroundKey","completedAssessmentIds","getAssessments","backgroundMapping","getRoomPreviewMapping","Settings","renderOptions","settingBgImg","optCont","optHeader","getSettingsHeader","optHeaderPos","createOptionHeader","createOptRadioOptions","applySettingsButton","optHeaderCont","headerDiv","headerText","bgmVol","GameSoundManager","soundAssetMap","currBgMusicKey","currBgMusic","getBaseSoundManager","getCurrentScene","getSoundAsset","setVolume","loadSound","loadSoundAssetMap","assetMap","vol","isMounted","fadeOutAndDestroyMusic","isPaused","GameChapterMocks","AwardParser","assetText","assetLines","splitToLines","awardBody","parseAwardParagraphs","awardProperties","RoomPreviewParser","assesmentId","Entry","preloadAssets","loadGameChapters","loadLastSaveState","preloadAwards","loadUserState","preloadRoomPreviewBackgrounds","applyLoadedSettings","awardsMappingTxt","setAwardsMapping","roomPreviewMappingTxt","setRoomPreviewMapping","bitmapFont","GameUserStateManager","loadAchievements","b","Game","goalMapping","isCompleted","newAwardProp","addAwardMapping","gameType","global","accountInfo","soundManager","userStateManager","saveManager","currentSceneRef","ssChapterSimFilenames","isUsingMock","roomCode","gameChapters","setStorySimState","stopAllSounds","setAccountInfo","setAchievements","awardId","setGoals","setStorySimStateSetter","mapping","refreshToken","shouldAutoLogout","shouldRefresh","sortedChapters","fetchGameChapters","toggleUsingMock","setChapterSimStack","debug","physics","default","FIT","parent","fps","ok","Headers","append","isTestStudent","setIsTestStudent","setIsUsingMock","alert","makeAnchorButton","anchorButtonProps","ex","preventDefault","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","navigate","AnchorButtonLink","GradingActionsCell","isOwnSubmission","studentId","canReautograde","submissionStatus","canUnsubmit","groupLeaderId","handleReautogradeSubmission","handleUnsubmitSubmission","GradingStatusCell","gradedCount","questionCount","gradingEditorButtonClass","mdeToBlueprintIconMap","HEADER","bold","BOLD","italic","ITALIC","STRIKETHROUGH","link","LINK","quote","CITATION","MEDIA","UNGROUP_OBJECTS","NUMBERED_LIST","SQUARE","mdeToBlueprintIconMapping","GradingEditor","xpAdjustmentInput","setXpAdjustmentInput","xpAdjustment","setEditorValue","currentlySaving","setCurrentlySaving","makeInitialState","validateXpBeforeSave","handleSaving","newXpAdjustmentInput","initialXp","checkHasUnsavedChanges","saveButtonOpts","discardButtonOpts","saveAndContinueButtonOpts","totalXp","xpPlaceholder","studentName","handleReautogradeAnswer","valueAsNumber","valueAsString","buttonPosition","majorStepSize","onTabChange","generateMarkdownPreview","markdown","minEditorHeight","maxEditorHeight","minPreviewHeight","getIcon","blueprintIcon","htmlTitle","handleGradingSave","confirm","UPDATED","handleGradingSaveAndContinue","GradingEditorContainer","submitGrading","submitGradingAndContinue","reautogradeAnswer","GradingWorkspace","grade","student","gradingWorkspacePath","handleGradingFetch","storedSubmissionId","handleUpdateCurrentSubmissionId","handleResetWorkspace","handleChangeExecTime","handleClearContext","handleRunAllTestcases","GradingWorkspaceContainer","gradings","currentSubmission","fetchGrading","handleSendReplInputToOutput","unsavedChanges","GradingXPCell","xpBonus","currentXp","Grading","GradingStatus","NotificationBadgeCell","GradingExp","resizeGrid","updatePaginationState","newTotalPages","paginationGetTotalPages","newCurrPage","paginationGetCurrentPage","currPage","maxPages","rowCountString","formatRowCountString","paginationGetRowCount","isBackDisabled","isForwardDisabled","pageSize","totalRows","handleFilterKeypress","applyFilter","currentTarget","handleApplyFilter","handleGroupsFilter","handleFetchGradingOverviews","exportCSV","changePaginationView","paginationGoToFirstPage","paginationGoToPreviousPage","paginationGoToNextPage","paginationGoToLastPage","sortSubmissionsByNotifications","gradingOverviews","subX","subY","suppressSizeToFit","valueFormatter","backgroundColor","Colors","GREEN5","RED5","comparator","valueA","valueB","nodeA","nodeB","isInverted","colId","controls","onKeyPress","onBlur","GIT_REPO","CHEVRON_BACKWARD","CHEVRON_LEFT","CHEVRON_FORWARD","EXPORT","onPaginationChanged","GradingContainer","fetchGradingOverviews","unsubmitSubmission","reautogradeSubmission","DefaultChapterSelect","handleUpdateSublanguage","chosenSublang","setSublanguage","setDialogState","handleOpenDialog","handleConfirmDialog","variantChoices","variantLanguages","DefaultChapterSelectComponent","dialog","canEscapeKeyClose","DefaultChapterSelectContainer","defaultSourceChapter","DeleteCell","handleDeleteAssessment","MaterialDropzone","setFile","isWarningShown","setPromptShown","setForceUpdate","setAssessmentConfigId","handleUploadAssessment","handleConfirmUpload","handleCancelUpload","handleDropAccepted","acceptedFiles","handleDropRejected","rejectedFiles","getInputProps","isFocused","isDragActive","isDragAccept","isDragReject","useDropzone","multiple","onDropAccepted","onDropRejected","handleSwitchOnChange","toggleButton","handleConfirmForceUpdate","handleCancelForceUpdate","confirmationPrompt","TWO","interactive","UPLOAD","DELETE","dateDisplayFormat","EditCell","minDate","maxDate","forOpenDate","currentDateString","currentDate","newDate","setNewDate","handleAssessmentChangeDate","handleUpdateDate","handleDateChange","selectedDate","handleDateError","dateInput","formatDate","onError","parseDate","toDate","timePrecision","closeOnSelection","INFO_SIGN","PublishCell","handlePublishAssessment","handleTogglePublished","GroundControl","columnApi","loadContent","handleFetchCourseConfigs","dateFilterComparator","filterDate","cellValue","cellDate","applyColumnState","toggleDropzone","showDropzone","filterParams","inRangeInclusive","sortingOrder","REFRESH","dropzone","GroundControlContainer","changeDateAssessment","deleteAssessment","uploadAssessment","publishAssessment","SourcereelControlbar","recorder","dialogOpen","updateTimerDuration","getTimerDuration","handleTruncatePlaybackData","truncatedInputs","handleResetInputs","handleRecorderPausing","handleTimerPause","updater","URL","createObjectURL","exportWAV","handleRecorderStarting","Recorder","handleRecordInit","handleTimerStart","handleRecorderResuming","handleTimerResume","resume","handleRecorderResumingFromCurrent","handleRecorderStopping","handleTimerStop","fileDataBlob","handleRecorderResetting","handleTimerReset","handleRecorderSaving","handleSaveSourcecastData","saveTitle","saveDescription","saveUID","handleSaveTitleInputChange","handleSaveDescriptionInputChange","handleSaveUIDInputChange","getPermission","RecorderRecordPauseButton","SNOWFLAKE","handleRecordPause","RecorderPauseButton","RecorderResumeButton","RecorderResumeFromCurrentButton","RecorderStartButton","RecorderStopButton","RecorderResetButton","RecorderSaveButton","LIST_DETAIL_VIEW","KEY","recordingStatus","RecordingStatus","notStarted","recording","finished","Sourcereel","sourcereel","timeElapsedBeforePause","timeResumed","handleRecordInput","pick","isRecording","COMPASS","saveSourcecastData","SourcereelContainer","readonly","StorySimState","sendRequest","route","requestPath","headerConfig","requestDetails","sendAssetRequest","sendStoryRequest","sendAdminStoryRequest","s3AssetFolders","fetchTextAssets","fetchFolder","endsWith","fetchAssetPaths","files","folderName","combinedList","newList","uploadAssetsToS3","fileList","responses","formData","FormData","uploadAssetToS3","fetchChapters","updateChapterRequest","specifyFolderText","AssetFileUploader","setFileList","uploadFolder","setUploadFolder","folderOverwrite","setFolderOverwrite","showfolderOverwrite","setShowFolderOverwrite","handleChangeUploadFolder","innerText","uploadButtonPopoverContent","folder","BOTTOM","loadedFiles","finalFolder","treeMap","nodes","childNodes","assetPathsToTree","assetPaths","iconRenderer","rootFolders","assetObj","helper","parentFolders","secondaryLabel","AssetViewer","memo","displayAssetPath","crossOrigin","toolIcons","deleteFile","deleteS3File","StorySimulatorAssetSelection","useRequest","currentAsset","setCurrentAsset","assetTree","setAssetTree","StorySimulatorAssetViewer","onNodeClick","nodeData","isSelected","selectedPath","sessionStorage","setItem","SortableItem","SortableElement","SortableList","SortableContainer","ChapterEditor","setValue","setTitle","titleProps","useInput","setImageUrl","imageUrlProps","chosenFiles","setItems","setChosenFiles","onSortEnd","oldIndex","newIndex","arrayMoveImmutable","useSortableList","setIsPublished","openDate","setOpenDate","txtsNotChosen","setTxtsNotChosen","rerender","setRender","textAsset","deleteFileFromChosen","txtFile","prevItemList","addFileToChosen","textFile","labelElement","updatedChapter","inAYear","createChapterIndex","story","deleteChapterRequest","setFullYear","getFullYear","defaultChapter","ChapterSim","chapters","chosenIndex","setChosenIndex","StorySimulatorChapterEditor","mainMenuOptStyle","SSMainMenuConstants","maxOptButtonsRow","gameTxtStorageName","checkpointTxt","loadFileLocally","storageName","reader","FileReader","readAsText","onloadend","CheckpointTxtLoader","s3TxtFiles","chosenFilename","setChosenFilename","uploadButton","chooseS3Txt","createHeadersWithCors","txt","CheckpointSim","mainMenuConstants","simulateCheckpoint","clearSessionStorage","SSImageAssets","storySimBg","invertedButton","blueUnderlay","colorIcon","imageIcon","bboxIcon","handIcon","listIcon","eraseIcon","iconBg","createOptButton","ObjectPlacement","AssetUploader","defaultChapterText","getItem","backgroundUnderlay","SSBackgroundManager","backgroundAssetPath","objectPlacement","getObjectPlacement","backgroundAssetKey","addAsset","assetKeyOnLoad","backgroundSprite","getBackgroundAssetPath","screenLog","CursorMode","SSBBoxManager","checkpointTitle","bboxBeingDrawn","startingCoordinates","bboxDetailMap","addBBoxListeners","isCursorMode","DrawBBox","createNewBBox","registerBBox","setDraggable","setActiveSelection","getCoordinates","setDataEnabled","generateItemIdNumber","objectDetail","getLoggables","getItemById","resizeWhileBeingDrawn","startX","startY","currentX","currentY","checkpointTxtLog","bboxDetail","bboxDetailArray","toIntString","setAttribute","deleteAll","SSCursorModeConstants","bgSize","inactive","SSCursorMode","defaultCursorMode","DragResizeObj","isModes","currCursorMode","cursorModes","currActiveModeIdx","getCurrCursorMode","setCursorMode","newMode","addCursorMode","isMode","cursorModeContainer","currIdx","modeButton","renderCursorModesContainer","activeMode","modeIcon","removeAll","spacing","loggableStyle","getIdFromShortPath","padWithTab","SSLogManager","detailMapContainer","printCheckpoint","locationAssetPath","checkpointLoggers","loggables","checkpointLogger","showDetailMap","loggable","loggerRectangle","loggerText","formatObjectDetails","setLetterSpacing","hideDetailMap","SSObjectManager","objectDetailMap","renderObject","objectSprite","registerObject","generateItemId","getAssetPath","objectIdNumber","objectDetailArray","itemDetail","TransformConstants","activeSelectMargin","scaleFactor","SSTransformManager","activeSelection","activeSelectRect","trackDraggables","drawActiveSelectRect","bindDeleteKey","dragX","dragY","getCursorManager","setObjAttribute","setBBoxAttribute","resizeActive","enlarge","factor","multiplyDimensions","abs","deselect","BACKSPACE","deleteActiveSelection","getType","deleteObj","deleteBBox","ObjPlacementConstants","transformManager","bboxManager","itemIdNumber","openBracket","closedBracket","createUIButtons","OPEN_BRACKET","CLOSED_BRACKET","isDown","Default","populateCursorModes","loadBackground","loadObject","cursorMode","StorySimulator","storySimState","createStorySimulatorGame","StorySimulatorAssetFileUploader","StorySimulatorChapterSim","XpCalculation","allUserXp","setGridApi","pageState","setPageState","nusNetId","assessmentXp","achievementXp","Controls","LoadingDisplay","Content","fetchAllUserXp","Academy","useRouteMatch","fetchNotifications","staffRoutes","CourseSelectingAcademy","routeCourseIdStr","routeCourseId","updateLatestViewedCourse","ELEVATION_4","dot","ContributorsDetails","githubOrg","ignoreRepos","ignoreContributors","ContributorsList","repos","setRepos","contributors","setContributors","repo","contributors_url","fetchRepos","endpoints","endpoint","res","contributor","login","photo","avatar_url","githubPage","html_url","githubName","commits","contributions","fetchContributors","contributorList","array","arrayMapped","Contributors","THREE","Disabled","reason","parseQuery","parsed","qs","isArray","Failure","children","GitHubCallback","accessCode","search","githubClientId","clientId","responseObject","GitHubUtils","githubOAuthProxyUrl","access_token","BroadcastChannel","postMessage","close","retrieveAuthTokenUpdatePage","providers","LoginButton","LOG_IN","Login","useLocation","providerId","handleLogin","fetchAuth","LOCK","vertical","capitalizeFirstLetter","retrieveLocalAssessment","localStorage","storeLocalAssessment","storeLocalAssessmentOverview","makeAssessmentOverview","maxXpVal","CONTENT","TASK","rawOverview","$","kind","duedate","coverimage","startdate","reading","READING","WEBSUMMARY","makeAssessment","questionArr","makeQuestions","globalDeployment","makeLibrary","DEPLOYMENT","graderDeployment","GRADERDEPLOYMENT","TEXT","missionPDF","deploymentArr","emptyLibrary","deployment","IMPORT","EXTERNAL","SYMBOL","globals","GLOBAL","IDENTIFIER","VALUE","Function","PROBLEMS","PROBLEM","problem","curId","localMaxXp","maxxp","graderLibrary","makeProgramming","makeMCQ","choicesVal","SNIPPET","SOLUTION","solutionVal","CHOICE","hint","correct","TESTCASES","publicTestcases","PUBLIC","privateTestcases","PRIVATE","PREPEND","POSTPEND","TEMPLATE","makeTestcase","testcasesPrivate","GRADER","graderTemplate","TestcaseTypes","public","program","download","createElement","encodeURIComponent","appendChild","click","removeChild","exportLibrary","interpreter","assessmentToXml","snippet","publicTests","privateTests","EditingOverviewCard","saveEditOverview","fieldValue","editingOverviewField","updateEditingOverview","handleEditOverview","toggleEditField","toggleOptionsOverlay","showOptionsOverlay","handleExportXml","assessmentStr","overviewStr","builder","Builder","xml","xmlStr","buildObject","exportXml","makeEditingOverviewTextarea","autoFocus","makeEditingOverviewCard","makeEditingOverviewCardTitle","createPlaceholder","makeExportButton","saveCategory","category","optionsOverlay","assessmentTypeSelect","AssessmentTypeSelectComponent","assessmentTypeRenderer","modifiers","ControlBarToggleEditModeButton","toggleEditMode","editingMode","editMode","getValueFromPath","assignToPath","limitNumberRange","TextAreaContent","isNumberVal","isNumber","isEditing","setIsEditing","setFieldValue","useRawValue","saveEditAssessment","parsedFieldValue","originalVal","processResults","assessmentVal","updateAssessment","handleEditAssessment","filler","fieldVal","AutograderTab","addTestcase","testcaseTemplate","autograderCard","testcasePath","removeTestcase","publicTestPath","privateTestPath","PLUS","DeploymentTab","deploymentTab","deploymentPath","pathToLibrary","symbol","textareaContent","MINUS","handleSymbolDelete","globalValueTextareaContent","handleGlobalDelete","resetLibrary","handleRefreshLibrary","symbolsFragment","externalSelect","handleNewSymbol","globalsFragment","borderSpacing","handleNewGlobal","removeSpaces","pathVal","handleGlobalValueUpdate","altEval","_e","externalLibraries","handleSwitchDeployment","isEmptyLibrary","pathToCopy","isOptionalDeployment","chap","iExternals","entry","currentExternal","ExternalSelectComponent","externalRenderer","GradingTab","deepCopy","ManageQuestionTab","showSaveOverlay","setShowSaveOverlay","modifyAssessment","setModifyAssessment","manageQuestionTab","DOCUMENT","confirmSave","makeQuestion","deleteQuestion","CARET_UP","shiftQuestion","FONT","programmingTemplate","mcqTemplate","dir","template","confirmSaveOverlay","q","MCQQuestionTemplateTab","mcqButton","deleteButton","QuestionEditorSelect","questionEditors","CHEVRON_UP","CHEVRON_DOWN","ProgrammingQuestionTemplateTab","activeEditor","setActiveEditor","templateValue","setTemplateValue","templateFocused","setTemplateFocused","editor","focusEditor","unFocusEditor","editorProps","$blockScrolling","Infinity","highlightActiveLine","theme","handleUpdateActiveEditorTab","handleCopyFromEditor","handleCopyToEditor","copyFromEditorButton","copyToEditorButton","editorPanel","menuRenderer","currentEditor","programmingTab","uniq","seen","hasOwnProperty","EditingWorkspace","setAssessment","setEditingMode","setHasUnsavedChanges","originalMaxXp","setOriginalMaxXp","resetWorkspaceValues","getMaxXp","formatedQuestionId","handleUpdateCurrentAssessmentId","globalsVal","symbolsVal","handleUpdateWorkspace","handleSaveXp","curXp","changeXp","updateAssessmentOverview","updateEditAssessmentState","updateAndSaveAssessment","toggleEditingMode","editingWorkspaceButtons","editorTabStateProps","qnType","questionTemplateTab","editorQuestionOverview","editorQuestionTemplate","editorLocalDeployment","editorLocalGraderDeployment","editorGrading","editorAutograder","editorBriefing","editorManageQuestion","editorGlobalDeployment","editorGlobalGraderDeployment","EditingWorkspaceContainer","changeEvent","MissionCreator","fileReader","handleFileRead","parseString","entireAssessment","assessmentArr","makeEntireAssessment","newAssessment","fileInputText","handleChangeFile","makeMission","overviewTemplate","assessmentTemplate","accept","MissionCreatorContainer","ownProps","MissionControl","editingOverview","setEditingOverview","retrieveLocalAssessmentOverview","assessmentProps","closeDate","MissionControlContainer","ControlBarExecutionTime","handleError","ControlBarSessionButtons","inviteInputElem","joinElemValue","handleChange","selectInviteInputText","inviteButtonPopoverContent","inviteButton","GRAPH","createNewSession","handleSetEditorSessionId","joinButtonPopoverContent","onSubmit","checkSessionIdExists","POPOVER_DISMISS","KEY_ENTER","joinButton","leaveButton","FEED","SOCIAL_MEDIA","sharedbConnected","GREEN3","RED3","ControlBarShareButton","isLoading","isSicp","SMALL","urlShortenerBase","handleShortenURL","handleGenerateLz","handleUpdateShortURL","ControlBarStepLimit","VERTICAL_BAR_CHART_ASC","handleChangeStepLimit","HOTKEYS_INTRODUCTION","aceHotkeys","sourceHotkeys","generateSourceIntroduction","goGreen","mobileOnlyTabIds","desktopOnlyTabIds","Playground","isSicpEditor","propsRef","deviceSecret","setDeviceSecret","useHistory","shouldAddDevice","URLSearchParams","pathname","setLastEdit","isGreen","setIsGreen","remoteExecution","hasBreakpoints","setHasBreakpoints","playgroundSourceChapter","usingRemoteExecution","remoteExecutionSession","playground","hash","initialEditorValueHash","programLz","lz","prgrm","decompressFromEncodedURIComponent","language","exec","handleHash","courseSourceChapter","courseSourceVariant","onEditorValueChange","handleUsingSubst","substVisualizer","isSourceLanguage","chapterSelectHandler","playgroundSourceVariant","executionTime","stepperStepLimit","sessionButtons","setEditorSessionId","shareButton","s","playgroundIntroductionTab","mobileTabs","onLoadMethod","addFold","getSession","Range","prependLength","renderer","onChangeMethod","onCursorChangeMethod","onSelectionChangeMethod","numberOfBreakpoints","arrayItem","replDisabled","handleSetSharedbConnected","connected","setSharedbConnected","onLoad","ExternalLibraryName","hidden","inputHidden","disableScrolling","mapStateToProps","persistenceUser","googleUser","persistenceFile","githubOctokitObject","githubSaveInfo","mapDispatchToProps","PlaygroundContainer","Component","Welcome","sourceAcademyDeploymentName","resourcesForLearners","resourcesForEducators","ProfileCard","isInvalidXP","xpDetails","parseColour","getFrac","activeClassName","renderIcon","Profile","fetchTotalXp","isLoaded","setIsLoaded","numClosed","userXp","fullXp","userDetails","den","icons","LIGHTBULB","PREDICTIVE_ANALYSIS","COMPARISON","c","PULSE","summaryCallouts","excluded","toFixed","USER","DrawerSize","DropdownAbout","sourceDocs","textbook","about","DropdownCourses","courses","course","PROPERTIES","DropdownCreateCourse","setCourseConfig","sourceChapterOptions","labelInfo","tagName","handleCreateCourse","DropdownHelp","githubIssues","DropdownSettings","workspaceSettings","setWorkspaceSettings","WorkspaceSettingsContext","EditorBinding","VIM","EMACS","COG","editorBinding","titleCase","wrd","Dropdown","isSettingsOpen","setIsSettingsOpen","isAboutOpen","setIsAboutOpen","isHelpOpen","setIsHelpOpen","isProfileOpen","setIsProfileOpen","isMyCoursesOpen","setIsMyCoursesOpen","isCreateCourseOpen","setIsCreateCourseOpen","toggleSettingsOpen","oldValue","toggleAboutOpen","toggleHelpOpen","toggleProfileOpen","toggleMyCoursesOpen","toggleCreateCourseOpen","profile","myCourses","createCourse","logout","LOG_OUT","handleLogOut","LAB_TEST","CALCULATOR","AcademyNavigationBar","Alignment","BUTTON","SATELLITE","MOBILE_VIDEO","SETTINGS","NavigationBarMobileSideMenu","MUSIC","enableGitHubAssessments","BOOK","matchSourcecastAchievement","matchExceptSourcecastAchievement","NavigationBar","mobileSideMenuOpen","setMobileSideMenuOpen","playgroundOnlyNavbarLeft","MENU","SYMBOL_DIAMOND","paddingBottom","mobileNavbarLeft","handleGitHubLogIn","handleGitHubLogOut","desktopNavbarLeftPopoverContent","desktopLogoButton","isActive","enableDesktopPopoverIn","enableDesktopPopover","desktopNavbarLeft","BOTTOM_RIGHT","commonNavbarRight","HEART","playgroundOnly","loginPath","redirectToLogin","redirectToWelcome","toAcademy","ensureUserAndRouteTo","ensureUserAndRoleAndRouteTo","computeDisabledState","disablePeriods","isAfter","Application","intervalId","setIsDisabled","isMobile","userAgent","isPWA","matchMedia","matches","browserDimensions","useLocalStorageState","workspaceSettingsLocalStorageKey","defaultWorkspaceSettings","isCourseLoaded","fetchUserAndCourse","orientationChangeHandler","documentElement","setProperty","commonPaths","GitHubClassroom","isDisabledEffective","showResearchPrompt","agreedToResearch","updateCourseResearchAgreement","ApplicationContainer","logOut","loginGitHub","logoutGitHub","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","FileSystemContext","FileSystemProvider","fileSystem","setFileSystem","fs","storeName","BFSRequire","sentryDsn","Sentry","dsn","environment","sourceAcademyEnvironment","sourceAcademyVersion","userId","rootContainer","__REDUX_STORE__","origin","contentType","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","sync","triggerSyncLogs","cadetLoggerInterval","FETCH_SOURCECAST_INDEX","UPDATE_SOURCECAST_INDEX","FETCH_AUTH","FETCH_USER_AND_COURSE","FETCH_COURSE_CONFIG","FETCH_ALL_USER_XP","FETCH_GRADING","FETCH_GRADING_OVERVIEWS","LOGIN","LOGOUT_GOOGLE","LOGIN_GITHUB","LOGOUT_GITHUB","SET_TOKENS","SET_USER","SET_COURSE_CONFIGURATION","SET_COURSE_REGISTRATION","SET_ASSESSMENT_CONFIGURATIONS","SET_ADMIN_PANEL_COURSE_REGISTRATIONS","SET_GOOGLE_USER","SET_GITHUB_ASSESSMENT","SET_GITHUB_OCTOKIT_OBJECT","SET_GITHUB_ACCESS_TOKEN","SUBMIT_ANSWER","SUBMIT_ASSESSMENT","SUBMIT_GRADING","SUBMIT_GRADING_AND_CONTINUE","REAUTOGRADE_SUBMISSION","REAUTOGRADE_ANSWER","REMOVE_GITHUB_OCTOKIT_OBJECT_AND_ACCESS_TOKEN","UNSUBMIT_SUBMISSION","UPDATE_ASSESSMENT_OVERVIEWS","UPDATE_TOTAL_XP","UPDATE_ALL_USER_XP","UPDATE_ASSESSMENT","UPDATE_GRADING_OVERVIEWS","UPDATE_GRADING","FETCH_NOTIFICATIONS","ACKNOWLEDGE_NOTIFICATIONS","UPDATE_NOTIFICATIONS","UPDATE_LATEST_VIEWED_COURSE","UPDATE_COURSE_CONFIG","FETCH_ASSESSMENT_CONFIGS","UPDATE_ASSESSMENT_CONFIGS","DELETE_ASSESSMENT_CONFIG","FETCH_ADMIN_PANEL_COURSE_REGISTRATIONS","UPDATE_USER_ROLE","UPDATE_COURSE_RESEARCH_AGREEMENT","DELETE_USER_COURSE_REGISTRATION","CHANGE_DATE_ASSESSMENT","DELETE_ASSESSMENT","PUBLISH_ASSESSMENT","UPLOAD_ASSESSMENT","PERSISTENCE_OPEN_PICKER","PERSISTENCE_SAVE_FILE_AS","PERSISTENCE_SAVE_FILE","PERSISTENCE_INITIALISE","maximumTasksPerMission","jsonStringify","identity","taskDataPropertyTable","isDefaultValue","fromStringConverter","toStringConverter","starterCode","savedCode","testPrepend","testPostpend","testCases","tests","saveableTests","getMissionData","missionRepoData","octokit","briefingStringPromise","getContentAsString","repoOwner","metadataStringPromise","tasksDataPromise","getContent","owner","promises","questionFolderName","folderContents","folderContentFileNames","filteredProperties","property","stringContent","stringContents","taskData","questionNumber","getTasksData","briefingString","metadataString","missionMetadata","sourceVersion","convertMetadataStringToMissionMetadata","missionBriefing","filepath","contentString","fileInfo","Buffer","convertMissionMetadataToMetadataString","discoverFilesToBeChangedWithMissionRepoData","cachedMissionMetadata","briefingContent","cachedBriefingContent","taskList","cachedTaskList","isTeacherMode","filenameToContentMap","foldersToDelete","taskNumber","propertiesToCheck","propertyName","currentValue","onRepoFileName","cachedValue","savedCodeValue","discoverFilesToBeCreatedWithoutMissionRepoData","convertToMCQQuestionIfMCQText","possibleMCQText","isMCQText","mcqQuestion","maxGrade","trimmedText","onlyQuestionInformation","intermediateObject","studentAnswer","convertIMCQQuestionToMCQText","types_1","FETCH_GROUP_GRADING_SUMMARY","UPDATE_GROUP_GRADING_SUMMARY","isTrue","defaultTo","REACT_APP_VERSION","REACT_APP_ENVIRONMENT","REACT_APP_DEPLOYMENT_NAME","REACT_APP_SHOW_RESEARCH_PROMPT","REACT_APP_BACKEND_URL","REACT_APP_CADET_LOGGER_INTERVAL","useBackend","REACT_APP_USE_BACKEND","REACT_APP_URL_SHORTENER_BASE","urlShortenerSignature","REACT_APP_URL_SHORTENER_SIGNATURE","moduleBackendUrl","REACT_APP_MODULE_BACKEND_URL","sharedbBackendUrl","REACT_APP_SHAREDB_BACKEND_URL","REACT_APP_PLAYGROUND_ONLY","REACT_APP_ENABLE_GITHUB_ASSESSMENTS","REACT_APP_SENTRY_DSN","googleClientId","REACT_APP_GOOGLE_CLIENT_ID","googleApiKey","REACT_APP_GOOGLE_API_KEY","googleAppId","REACT_APP_GOOGLE_APP_ID","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_OAUTH_PROXY_URL","sicpBackendUrl","REACT_APP_SICPJS_BACKEND_URL","REACT_APP_CA_FULFILLMENT_LEVEL","isDefault","startStr","endStr","maxBrowseIndex","AchievementNode","descendant","parents","nodeList","goalList","textToUuid","titleToUuid","achievementsToDelete","goalsToDelete","invalidGoal","invalidAchievement","constructNodeList","constructGoalList","processNodes","processGoals","getAllReleasedAchievements","UNRELEASED","getAllCompletedAchievements","getAllAchievementUuids","hasGoal","getGoalProgress","getAchievementPositionByUuid","getAchievementsByGoal","v4","normalizePositions","definition","defaultGoalProgress","complete","modifyGoalProgress","generateXp","generateProgressFrac","generateStatus","targetUuid","hasTarget","newPrerequisiteUuids","sanitizeNode","targetIndex","findTargetIndex","taskA","taskB","sortedTask","goalLength","prereqLength","listPrerequisiteGoals","childGoalUuids","childUuid","getTextByUuid","getTitleByUuid","getTotalXp","isImmediateChild","isDescendant","getDescendants","descendantUuid","listAvailablePrerequisiteUuids","generateParentReference","generateDescendant","generateDisplayDeadline","grandchildUuid","descendantDeadlines","childDeadline","currentDeadline","allGoalsCompleted","completion","denom","achievementCompleted","hasReleased","hasUnexpiredDeadline","EXPIRED","anchorUuid","anchorPosition","nonTask","anchorAchievement","misplacedAchievement","DraggableRepl","axis","handle","top","onDrag","MobileKeyboard","isKeyboardShown","setIsKeyoardShown","buttonContent","setButtonContent","keyboardPosition","setKeyboardPosition","selectedIndex","setSelectedIndex","handlePreventDefault","keyboardProps","targetKeyboardInput","navigateLeft","navigateRight","insert","baseClass","layout","buttonTheme","class","preventMouseDownDefault","disableCaretPositioning","onMouseDown","keyboardClass","getElementsByClassName","MobileControlBar","controlBarMenu","MobileSideContent","isIOS","platform","renderedPanels","renderPanel","tabTitle","onOpening","isAndroid","isPortrait","useMediaQuery","orientation","draggableReplPosition","setDraggableReplPosition","isDraggableReplDisabled","setIsDraggableReplDisabled","querySelector","handleHideRepl","setTargetKeyboardInput","clearTargetKeyboardInput","enableMobileKeyboardForEditor","onFocus","handleShowRepl","offset","sideBarTabs","mobileEditorTab","mobileRunTab","inAssessmentWorkspace","handleTabChangeForRepl","enableMobileKeyboardForRepl","ControlBarReturnToAcademyButton","Visible","_x","_y","_width","_height","_isDrawn","createRef","isDrawn","reset","CompactConfig","ShapeDefaultProps","Config","MAX_VALUE","FontFamily","FontSize","fontStyle","FontStyle","fontVariant","FontVariant","isStringIdentifiable","_hoveredWidth","partialStr","fullStr","updatePosition","getPrintableMode","setHoveredCursor","moveToTop","draw","setUnhoveredCursor","widthOf","getTextWidth","truncatedText","Ellipsis","TextMinWidth","hoveredWidth","SA_BLUE","SA_WHITE","Layout","listening","GenericArrow","source","points","_path","unhovered_opacity","ArrowUnhoveredOpacity","hovered_opacity","calculateSteps","getStrokeWidth","ArrowStrokeWidth","setHoveredStyle","strokeWidth","ArrowHoveredStrokeWidth","Frame","setUnhoveredStyle","xa","ya","xb","yb","xc","yc","dx1","dx2","dy1","dy2","r1","sqrt","pow","r2","br","ArrowCornerRadius","stroke","hitStrokeWidth","ArrowHitStrokeWidth","strokeEnabled","pointerWidth","ArrowHeadSize","pointerLength","ArrowFromFrame","FramePaddingX","ArrowLane","getHorizontalLaneAfterSource","getPosition","FrameArrowStrokeWidth","FrameArrowHoveredStrokeWidth","ArrayEmptyUnit","ArrowFromFn","FnRadius","getVerticalLaneBeforeTarget","getHorizontalLaneBeforeTarget","Value","referencedBy","addReference","newReference","FnValue","centerX","tooltipWidth","exportTooltipWidth","radius","innerRadius","FnInnerRadius","fnName","paramsText","bodyText","exportBodyText","exportTooltip","_arrow","enclosingEnvNode","labelRef","getStage","memoizeValue","mainReference","Binding","FrameMarginX","isLastUnit","DataUnitWidth","DataUnitHeight","environmentTree","getTreeNode","getNonEmptyEnv","functionName","getParamsText","getBodyText","envTreeNode","Fragment","TextPaddingX","TextPaddingY","FnTooltipOpacity","GlobalFnValue","globalEnvNode","ArrowFromArrayUnit","emergeFromTopOrBottom","ArrayValue","potentialVerticalLaneX","getVerticalLaneAfterSource","potentialHorizontalLaneY","newX","yDiff","newY","sign","units","RoundedRect","cornerRadius","forwardRef","sceneFunc","upperLeft","lowerLeft","upperRight","lowerRight","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fillStrokeShape","ArrayNullUnit","arrayUnit","DataHitStrokeWidth","PrimitiveValue","keyString","textWidth","isNull","ArrayUnit","isFirstUnit","isMainReference","u","createValue","DataCornerRadius","addArrow","fillEnabled","emptyUnit","_arrows","parentArray","arrayLevelY","DataMinWidth","unit","arrows","setLevel","arrLevel","ArrowFromText","trackObjects","frameNames","xCoord","yCoord","totalHeight","totalWidth","totalHoveredWidth","parentFrame","offsetY","maxBindingWidth","bindingWidth","ConstantColon","isUnassigned","UnassignedData","isPrimitiveData","prevBinding","exportWidth","descriptors","getOwnPropertyDescriptors","dummyEntries","isDummyKey","actualEnv","GlobalEnvId","currBinding","writable","v","isDummyBinding","FramePaddingY","nextX","cumWidths","maxX","heights","getArrow","FrameMinWidth","maxXCoord","CanvasPaddingX","arrowToParentFrame","FrameCornerRadius","valueOf","CanvasPaddingY","Level","parentLevel","ArrayLevel","_minX","_count","_rowCount","arrays","getNumLanes","addArray","tail","visitedTail","DataUnitPaddingX","positions","arrayMargin","DataUnitPaddingY","curY","setY","minX","FrameLevel","lastXcoord","addFrame","coordinate","maxXcoord","maxYcoord","FrameMarginY","Grid","envTreeNodes","frameLevels","arrayLevels","levels","widths","destroyChildren","cumHeights","currentNode","updatedParent","flatMap","getNextChildren","oldParentCoord","d","m","p","belongsToFrame","arrayLevel","frameLevel","coord","isVertical","lane","ArrowLaneInterval","ArrowNumLanes","verticalLanes","horizontalLanes","arrayLevelLanes","lastXCoordBelow","lastYCoordBelow","TextMargin","UnassignedValue","Symbol","isConstant","keyYOffset","VariableColon","isEnvironment","isEnvTreeNode","isEnvTree","isEmptyEnvironment","env","isFunction","call","isFn","isGlobalFn","isUndefined","isString","isBoolean","reference","isCompactMainReference","font","canvas","getContext","longestLine","accText","currValue","measureText","metrics","fnString","hoveredAttrs","Group","setAttrs","attrs","HoveredColor","unhoveredAttrs","copyOwnPropertyDescriptors","destination","root","defineProperties","deepCopyTree","clone","nextChildren","gc","x1","y1","x2","y2","memoizeCompactValue","compactFrame","createCompactValue","leftSiblingFrame","compactLevel","prevFrame","newFrame","maxHeight","lastFrame","LevelPaddingX","visibleWidth","visibleHeight","stageRef","stageWidth","stageHeight","currentLight","currentDark","currentCompactLight","currentCompactDark","invisiblePaddingVertical","invisiblePaddingHorizontal","scrollContainerRef","envTree","compactValues","removeProgramEnv","removeUnreferencedGlobalFns","initializeGrid","getCompactLayout","lastLevel","compactLevels","compactHeight","CanvasMinHeight","compactWidth","CanvasMinWidth","nonCompactHeight","nonCompactWidth","programEnvNode","resetChildren","referencedGlobalFns","visitedData","findGlobalFnReferences","envNode","findGlobalFnReferencesInData","GlobalFrameDefaultText","currLevel","frontier","prevLevel","CompactLevel","nextFrontier","frontiers","existingValue","CompactUnassignedValue","CompactPrimitiveValue","CompactArrayValue","CompactFnValue","CompactGlobalFnValue","MaxExportWidth","MaxExportHeight","dx","dy","transform","prevLayout","onScroll","handleScrollPosition","scrollLeft","scrollTop","overflow","PRINT_BACKGROUND","alignSelf","borderColor","onMouseUp","toggleCompactLayout","togglePrintableMode","saveButtonText","exportImage","scrollTo","horizontalImages","verticalImages","download_next","toDataURL","mimeType","download_images","printableMode","compactLayout","setVis","setContext","togglePublishTo","currentlyActiveTabsLabel","getModuleTabs","debuggerContext","rawModuleContexts","ReactDOM","setDynamicTabs","allActiveTabs","spawnedTabs","toSpawn","getDynamicTabs","resetAlert","iconId","saveCanvas","REPEAT","ControlButtonSaveButton","updateSourcecastIndex","is_pair","array_test","xs","is_null","is_list","toText","full","dataString","ArrowDrawable","PureComponent","BackwardArrowDrawable","bottomY","leftX","topY","TreeNode","AlreadyParsedTreeNode","actualNode","DataTreeNode","DrawableTreeNode","_drawable","drawableX","drawableY","drawable","NullDrawable","ArrayDrawable","createChildText","nodeValue","isEmptyList","textValue","textToDisplay","displaySpecialContent","child","FunctionDrawable","FunctionTreeNode","createDrawable","parentX","parentY","ArrayTreeNode","arrayProps","arrayDrawable","Tree","rootNode","_rootNode","getNodeById","tree","nodeCount","constructNode","structure","alreadyDrawnNode","visitedStructures","treeNodes","constructTree","func","constructFunction","constructData","TreeDrawer","drawables","nodeWidths","minY","konvaText","Konva","drawNode","getNodeWidth","getNodeHeight","offsetX","drawnNode","arrowProps","childNode","childY","childNodeWidth","childrenWidths","childrenWidth","nodeWidth","nodeLabel","nodeToLabelMap","setSteps","structures","_instance","addStep","dataNode","createDrawing","treeDrawer","fromSourceStructure","leftMargin","topMargin","empty","ApplicationEnvironment","variantDisplay","defaultAcademy","gameCanvas","defaultApplication","Production","defaultDashboard","defaultAchievement","defaultPlayground","defaultEditorValue","createDefaultWorkspace","replHistory","browseIndex","records","originalValue","sicp","githubAssessment","defaultSession","gameState","completed_quests","playStory","defaultState","academy","application","protocolMap","getSessionUrl","ws","initial","SET_EDITOR_SESSION_ID","SET_SHAREDB_CONNECTED","HighlightRulesSelector_native","_SourceHighlightRules","acequire","exports","oop","DocCommentHighlightRules","TextHighlightRules","identifierRegex","SourceHighlightRules","keywordMapper","createKeywordMapper","escapedRegex","$rules","no_regex","getStartRule","token","regex","defaultToken","regex_character_class","function_arguments","qqstring","consumeLineEnd","qstring","noES6","unshift","onMatch","stack","nextState","shift","jsx","JSX","embedRules","getEndRule","normalizeRules","tagRegex","jsxTag","jsxJsRule","include","jsxAttributes","currentState","stateName","getTagRule","caseInsensitive","inherits","ace","externalLibrariesDocumentation","shortenCaption","MAX_CAPTION_LENGTH","mapExternalLibraryName","SourceDocumentation","ext_lib","caption","docHTML","lib","names","deviceType","deviceTypes","deviceLibraryName","internalFunctions","builtinDocumentation","builtins","chapterDoc","docs","info","Documentation","selectMode","define","modules","getModeString","Mode","ModeSelector","ADD_EVENT","BULK_UPDATE_ACHIEVEMENTS","BULK_UPDATE_GOALS","HANDLE_EVENT","GET_ACHIEVEMENTS","GET_GOALS","GET_OWN_GOALS","GET_USER_ASSESSMENT_OVERVIEWS","GET_USERS","REMOVE_ACHIEVEMENT","REMOVE_GOAL","SAVE_ACHIEVEMENTS","SAVE_GOALS","SAVE_USER_ASSESSMENT_OVERVIEWS","SAVE_USERS","UPDATE_GOAL_PROGRESS","UPDATE_OWN_GOAL_PROGRESS","generateOctokitInstance","authToken","Octokit","auth","baseUrl","warn","agent","editorControl","flowControl","editingWorkspaceControl","onButtonClickFactory","hintElement","getButtonIntent","currentOption","chosenOption","correctOptionSelected","nextProps","extraClasses","isEvaluated","secret","opaque","handleRunTestcase","parseError","goalRenderer","goalPredicate","UserSelect","userRenderer","user","userPredicate","updateGoalProcessed","user1","user2","localeCompare","manualAchievements","changeGoal","changeSelectedUser","changeCount","viewHidden","changeViewHidden","updateGroupGradingSummary","frontendifyAchievementGoal","postAuth","redirectUri","client_id","redirect_uri","tokens","refresh_token","getUser","getLatestCourseRegistrationAndConfiguration","putLatestViewedCourse","noHeaderAccept","putCourseResearchAgreement","postCreateCourse","getCourseConfig","frontendifyAchievementItem","studentCourseRegId","getAllUsers","backendifyAchievementItem","backendifyGoalDefinition","updateOwnGoalProgress","computeGradingStatus","getAllUserXp","back","password","postAnswer","postAssessment","getGradingOverviews","gradingOverview","assessmentName","groupName","getGrading","gradingQuestion","postGrading","postReautogradeSubmission","postReautogradeAnswer","postUnsubmit","getNotifications","assessment_title","postAcknowledgeNotifications","ids","notificationIds","getSourcecastIndex","postSourcecast","noContentType","getGradingSummary","putCourseConfig","getAssessmentConfigs","putAssessmentConfigs","overrideCourseId","removeAssessmentConfig","getUserCourseRegistrations","putNewUsers","putUserRole","removeUserCourseRegistration","fetchDevices","getDeviceWSEndpoint","device","opts","fetchOpts","newTokens","postRefresh","setTokens","newOpts","statusText","handleResponseError","respText","numGraded","numQuestions","consoleOverloads","bufferCallback","args","DisplayBufferService","buffer","dump","bufferCopy","resetBuffer","handleWorkspaceChange","attachConsole","defaultConsole","overload","newWorkspace","hasWorkspace","ReplInput","replInput","replInputBottom","execBrowseHistoryDown","execBrowseHistoryUp","scrollIntoView","commands","bindKey","win","mac","minLines","maxLines","showGutter","showPrintMargin","setOptions","Output","consoleLogs","cards","CARD","ELEVATION_0","EVAL_SILENT","requestFn","fetchedValue","localStorageValue","readLocalStorage","setLocalStorage","useSelector","setWidth","setHeight","resizeObserver","ResizeObserver","observer","contentRect","htmlElement","observe","disconnect","SAVE_SOURCECAST_DATA","SET_CURRENT_PLAYER_TIME","SET_CODE_DELTAS_TO_APPLY","SET_INPUT_TO_APPLY","SET_SOURCECAST_DATA","SET_SOURCECAST_PLAYBACK_DURATION","SET_SOURCECAST_PLAYBACK_STATUS","fetchAssessmentAdmin","fetchTotalXpAdmin","filterToGroup","logoutGoogle","setUser","setCourseRegistration","setAdminPanelCourseRegistrations","courseRegistrations","setGoogleUser","setGitHubAssessment","setGitHubOctokitObject","setGitHubAccessToken","removeGitHubOctokitObjectAndAccessToken","updateAssessmentOverviews","overviews","updateTotalXp","updateAllUserXp","updateGradingOverviews","updateGrading","withFilter","updateNotifications","unaryOp","LHS","RHS","FilterColors","achievementAssets","backgroundUrl","boxShadow","BLUE","WHITE","isImportDeclaration","converter","Converter","tables","dangerouslySetInnerHTML","__html","makeHtml","createBrowserHistory","selectedCourse","setAssessmentTypeOverviews","userLogin","getAuthenticated","orgLogin","userRepos","listForAuthenticatedUser","per_page","courseInfoRepo","courseInfo","types","published","prefixLogin","repoPrefix","missionRepo","acceptLink","createdAt","created_at","webSummary","dateOfCreation","dueDate","setCourses","setSelectedCourse","assessmentTypeOverviews","typeName","orgs","org","fetchCourses","changeCourseHandler","refreshAssessmentOverviews","redirectToAssessments","GitHubAssessmentWorkspaceContainer","filteredAssessments","GitHubAssessmentListing","createAssessmentButton","ownerSlashName","toDateString","hasDueDate","isOverdue","assessmentNotAccepted","buttonText","convertAssessmentOverviewToCard","GitHubClassroomWelcome","ControlBarDisplayMCQButton","mcqDisplayed","behaviour","displayTextInEditor","displayMCQInEditor","ControlBarTaskAddButton","numberOfTasks","addNewQuestion","ControlBarTaskDeleteButton","deleteCurrentQuestion","GitHubMissionCreateDialog","repositoryName","setrepositoryName","DIALOG_HEADER","filesToCreate","resolveDialog","SideContentMarkdownEditor","editorModeOn","setEditorModeOn","allowEdits","contains","setContent","growVertically","SideContentMissionEditor","changedProperty","newMetadata","assign","setMissionMetadata","setMissionMetadataWrapper","SideContentTaskEditor","taskIndex","currentTaskNumber","taskDescriptions","setTaskDescriptions","indexOutOfRange","taskBriefing","taskBriefingSetter","newDescription","newTaskDescriptions","SideContentEditableTestcaseCard","setTestcaseProgram","setTestcaseExpectedResult","deleteTestcase","testProgram","expectedAnswer","createEditor","SideContentTestcaseEditor","showsTestPrepend","setTestPrependShown","showsTestPostpend","setTestPostpendShown","setTaskTestcases","setTestPrepend","setTestPostpend","setTestcaseProgramSetterCreator","newProgram","newTestcases","setTestcaseExpectedResultSetterCreator","newExpectedResult","convertToTestcaseCard","createTestCaseButton","toggleTestPrepend","toggleTestPostpend","defaultMissionBriefing","defaultStarterCode","defaultMissionMetadata","defaultTask","defaultMCQQuestion","GitHubAssessmentWorkspace","getGitHubOctokitInstance","setCachedMissionMetadata","hasUnsavedChangesToMetadata","setHasUnsavedChangesToMetadata","setBriefingContent","setCachedBriefingContent","hasUnsavedChangesToBriefing","setHasUnsavedChangesToBriefing","setCachedTaskList","setTaskList","hasUnsavedChangesToTasks","setHasUnsavedChangesToTasks","summary","setSummary","setCurrentTaskNumber","setIsTeacherMode","setIsLoading","currentTaskIsMCQ","setCurrentTaskIsMCQ","setDisplayMCQInEditor","setMCQQuestion","setMissionRepoData","showBriefingOverlay","setShowBriefingOverlay","changeStateDueToChangedTaskNumber","newTaskNumber","currentTaskList","actualTaskIndex","setBriefingContentWrapper","newBriefingContent","newMissionMetadata","setTaskListWrapper","newTaskList","setDisplayMCQInEditorWrapper","shouldDisplayMCQ","computedHasUnsavedChanges","setUpWithAssessmentOverview","authenticatedUser","missionData","setUpWithoutAssessmentOverview","briefingOverlay","editCode","editedTaskList","resetToTemplate","originalCode","conductSave","changedFile","newFileContent","githubEmail","commitMessage","typedMissionRepoData","saveType","checkIfFileCanBeSavedAndGetSaveType","performOverwritingSave","performCreatingSave","conductDelete","performFolderDeletion","saveWithMissionRepoData","changedFiles","authUser","email","saveWithoutMissionRepoData","dialogResults","promisifyDialog","createForAuthenticatedUser","fileToCreate","fileContent","onClickReset","shouldProceedToChangeTask","onClickPrevious","activeTaskList","nextElement","newTestPrepend","newTestPostpend","BUILD","deleteAtIndex","addTaskButton","deleteTaskButton","showMCQButton","choiceId","newMCQQuestion","MissionEditor","ControlBarGitHubLoginButton","loginButton","GIT_BRANCH","onClickLogOut","onClickLogIn","GitHubAssessmentsNavigationBar","leftElement","BEGIN_INTERRUPT_EXECUTION","END_INTERRUPT_EXECUTION","EVAL_INTERPRETER_ERROR","EVAL_INTERPRETER_SUCCESS","EVAL_TESTCASE_FAILURE","EVAL_TESTCASE_SUCCESS","HANDLE_CONSOLE_LOG","BEGIN_DEBUG_PAUSE","END_DEBUG_PAUSE","DEBUG_RESUME","DEBUG_RESET","handleConsoleLog","logString","evalInterpreterSuccess","evalTestcaseSuccess","evalTestcaseFailure","evalInterpreterError","endInterruptExecution","endDebuggerPause","ConfirmDialog","onResponse","largeButtons","escapeResponse","escapeHandler","PromptDialog","enterResponse","validationFunction","inputRef","returnResponse","buttonResponse","disableOnInvalid","handleEnter","keyCode","handleValidate","onKeyDown","DialogHelper","dialogOnClose","containerElement","dialogHelper","singleton","closeDialog","DialogComponent","propFn","finally","showConfirmDialog","showSimplePromptDialog","libEntries","SOUNDS","ATNDeserializer_1","Parser_1","ParserRuleContext_1","ParserATNSimulator_1","StartContext","ClangParser","indent","exchangeAccessCode","backendLink","messageBody","octokitObject","checkIfFileCanBeOpened","canBeSaved","checkIfUserAgreesToOverwriteEditorData","checkIfUserAgreesToPerformOverwritingSave","openFileInEditor","contentEncoded","sha","createOrUpdateFileContents","committer","author","astCreator_1","walkers_1","ancestors","isWithinTimeRange","fromTime","toTime","getHours","getMinutes","leftBound","rightBound","weeksAway","daysAway","hoursAway","prettifiedDeadline","persistenceOpenPicker","persistenceSaveFile","persistenceSaveFileAs","persistenceInitialise","remoteExecFetchDevices","REMOTE_EXEC_FETCH_DEVICES","remoteExecUpdateDevices","devices","REMOTE_EXEC_UPDATE_DEVICES","remoteExecUpdateSession","REMOTE_EXEC_UPDATE_SESSION","remoteExecConnect","workspace","REMOTE_EXEC_CONNECT","remoteExecDisconnect","REMOTE_EXEC_DISCONNECT","remoteExecRun","REMOTE_EXEC_RUN","remoteExecReplInput","REMOTE_EXEC_REPL_INPUT","AchievementActions","CommonsActions","CollabEditingActions","DashboardActions","InterpreterActions","PlaygroundActions","SessionActions","WorkspaceActions","GroundControlActions","AcademyActions","PersistenceActions","RemoteExecutionActions","declarationNode","AcademyReducer","AchievementReducer","DashboardReducer","PlaygroundReducer","SourcecastReducer","SourcereelReducer","WorkspaceReducer","lastOutput","sourcecastState","sourcereelState","newRecords","lastRecords","lastIndex","newReplHistoryRecords","updatedLastOutput","playgroundWorkspace","execType","executionMethod","newOutputEntry","updatedEditorTabs","newCursorPosition","ApplicationReducer","SessionsReducer","githubAccessToken","newAssessments","newGradings","remoteExecutionDevices","createRootReducer","combineReducers","mockAssessmentConfigurations","mockAssessmentOverviews","mockLibrary","mockAssessmentQuestions","mockClosedAssessmentQuestions","errorLine","mockAssessments","mockFetchRole","mockUser","mockCourseRegistrations","mockAdminPanelCourseRegistrations","mockCourseConfigurations","mockNotifications","mockGradingOverviews","mockGrading","mockGradingSummary","avenger","ungradedMissions","submittedMissions","ungradedQuests","submittedQuests","mockBackendSaga","takeEvery","put","mockGetUserAndCourse","sublanguage","newQuestions","newOverviews","permittedRoles","mockFetchGradingOverview","mockFetchGrading","sendGrade","newGrading","notificationsToAcknowledge","newNotifications","goalIncludesEvents","j","handleUncaughtError","isIterator","throw","safeTakeEvery","pattern","worker","wrappedWorker","safeTakeLatest","takeLatest","selectTokens","AchievementSaga","saveAchievements","saveGoals","saveUsers","loggedEvents","timeoutSet","handleEvent","backendAchievements","backendGoals","updatedGoals","events","wasCompleted","incompleteAchievements","incrementCount","saveUserAssessmentOverviews","computeRedirectUri","ep","port","handleReautogradeResponse","BackendSaga","payloadProviderId","searchParams","getClientId","redirectUrl","all_users_xp","updatedAssessmentConfigs","resp1","groupOverviews","GitHubFileNodeData","childrenRetrieved","fileType","GitHubTreeNodeCreator","fileIndex","currentRepoName","getChildNodes","githubLoginID","childFiles","childFile","createNode","octokitFileData","FileExplorerDialog","repoFiles","setRepoFiles","setFilePath","setCommitMessage","getFirstLayerRepoFileNodes","setFirstLayerRepoFiles","handleClose","treeNode","_nodePath","originallySelected","newRepoFiles","cloneWithCallbacks","newFilePath","onNodeCollapse","onNodeExpand","pickerType","editorContent","treeNodeToEdit","allNodesCallback","specificNodeCallback","newTreeNodes","clonedNode","newChildNodes","RepositoryDialog","setRepoName","selectedValue","githubLoginSaga","githubOauthLoginLink","windowName","windowSpecs","onmessage","receivedMessage","githubLogoutSaga","githubOpenFile","paginate","promisifiedDialog","githubSaveFile","githubLoginId","githubSaveFileAs","promisifiedFileExplorer","GitHubPersistenceSaga","LoginSaga","updateLoginHref","epUrl","computeEndpointUrl","DISCOVERY_DOCS","UPLOAD_PATH","MIME_SOURCE","startInitialisation","initialisationPromise","gapi","client","apiKey","discoveryDocs","scope","auth2","getAuthInstance","currentUser","listen","handleUserChanged","isSignedIn","getBasicProfile","getEmail","ensureInitialised","ensureInitialisedAndAuthorised","signIn","pickFile","pickFolders","showFolders","showFiles","google","picker","DocsView","ViewId","DOCS","FOLDERS","rootFolder","setParent","setOwnedByMe","setIncludeFolders","setSelectFolderEnabled","setMode","DocsViewMode","LIST","PickerBuilder","enableFeature","Feature","NAV_HIDDEN","addView","setOAuthToken","getAuthResponse","setAppId","setDeveloperKey","Response","ACTION","Action","PICKED","parentId","picked","CANCEL","build","createFile","appProperties","createMultipartBody","uploadType","updateFile","contentsMime","metaJson","boundary","generateBoundary","persistenceSaga","toastKey","drive","fileId","fields","pickedDir","saveToDir","pickedFile","newFile","PlaygroundSaga","updateQueryString","hasTimedOut","race","shortenURLRequest","shorturl","newQueryString","compressToEncodedURIComponent","ext","signature","k","dummyLocation","ALPHANUMERIC","generateClientNonce","remoteExecutionSaga","updatedDevice","connection","oldClient","SlingClient","clientNamePrefix","deviceId","thingName","websocketEndpoint","currentSession","dispatchAction","peripheralData","peripherals","pickBy","lastUpdated","speed","ExceptionError","deviceTypesById","connectPromise","reconnect","take","sendStop","WorkspaceSaga","evalCode","break","addEvent","RUN_TESTCASE","runTestCase","newChapter","newVariant","oldVariant","oldChapter","externalSymbols","newExternalLibraryName","oldExternalLibraryName","moduleParams","runes","phaser","findDeclaration","takeLeading","updateInspector","loc","clearContext","dumpDisplayBuffer","editorCode","exploded","msg","blockExtraMethods","blockKey","toUnblock","restorer","restoreExtraMethods","interrupted","scheduler","originalMaxExecTime","throwInfiniteLoops","interrupt","InterruptedError","evalTestCode","toBeBlocked","storeValues","nullifier","useSubst","oldErrors","MainSaga","fork","PersistenceSaga","RemoteExecutionSaga","sagaMiddleware","createSagaMiddleware","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","serialize","maxAge","compose","initialStore","loadedStore","playgroundEditorValue","playgroundIsEditorAutorun","playgroundExternalLibrary","loadStore","serializedState","decompressed","decompressFromUTF16","loadStoredState","enhancers","applyMiddleware","createdStore","_createStore","subscribe","throttle","stateToBeSaved","serialized","compressToUTF16","saveState","createStore","languageChapter","EV3","SourcecastEditor","ShareAce","AceEditor","getMarkers","markerProps","lineNum","startRow","startCol","endRow","endCol","handleGutterClick","domEvent","clientX","getBoundingClientRect","getDocumentPosition","getLine","getBreakpoints","clearBreakpoint","setBreakpoint","$breakpoints","handleAnnotationChange","annotations","getAnnotations","anno","setAnnotations","handleEvaluate","clearSelection","moveCursorToPosition","showCursor","scrollCursorIntoView","getCursorPosition","editorCursorPositionToBeApplied","getDocument","applyDelta","setRange","WS","markers","keyBindings","evaluate","refactor","highlightScope","typeInferenceDisplay","useShareAce","inProps","outProps","reactAceRef","sharedbAce","WsUrl","pluginWsUrl","namespace","interval","connections","unlisten","EventT","EditorBase","handleEditorUpdateBreakpointsRef","handlePromptAutocompleteRef","makeHandleAnnotationChange","setCompleters","getCompletions","prefix","keyHandlers","aceEditorProps","lineNums","enableBasicAutocompletion","enableLiveAutocompletion","keyboardHandler","hooks","hook","hooksOnChange","eventT","currFn","Editor","editorTab","createEditorTab","createSourcecastEditorTab","createNormalEditorTab"],"mappings":"qGAAA,uMAEA,MAAMA,EAAeC,KAAQC,OAAO,CAClCC,SAAUC,IAASC,MAGRC,EAAqB,SAChCC,GAA6B,IAC7BC,EAAe,uDAAG,IAClBC,EAAY,8CAEZT,EAAaU,KACX,CACEC,OAAQC,IAAOC,QACfN,UACAC,WAEFC,IAGSK,EAAqB,SAChCP,GAA6B,IAC7BC,EAAe,uDAAG,IAClBC,EAAY,8CAEZT,EAAaU,KACX,CACEC,OAAQC,IAAOG,QACfR,UACAC,WAEFC,IAGSO,EAAoB,SAC/BT,GAA6B,IAC7BC,EAAe,uDAAG,IAClBC,EAAY,8CAEZT,EAAaU,KACX,CACEC,OAAQC,IAAOK,OACfV,UACAC,WAEFC,IAGSS,EAAc,CAACC,EAAoBV,IAAiBT,EAAaU,KAAKS,EAAOV,GAE7EW,EAAWX,GAAgBT,EAAaoB,QAAQX,I,iCClD7D,wXA4FO,SAASY,EAAa,GAAoC,IAApC,QAAEC,GAA+B,EAC5D,IACEC,IAAcC,QAAQF,GACtB,MAAOG,GACP,MAAM,IAAIC,MAAM,kCAIb,SAASC,IACd,IAAKC,OAAeC,UAGlB,MAAM,IAAIH,MAAM,wBAFfE,OAAeC,UAAUF,iBAMvB,SAASG,EAAcC,GAC5B,IAAKH,OAAeC,UAGlB,MAAM,IAAIH,MAAM,wBAFfE,OAAeC,UAAUC,cAAcC,GAmBrC,SAASC,EACdC,EACAC,GAEC,IADDC,EAAgB,uDAAGC,UAAQC,QAE3B,OAAOC,IAAsBH,EAASF,EAAWC,GAK5C,SAASK,EAAoBjB,GAClC,SAASkB,KACTA,EAAWC,UAAYnB,EAAQoB,QAAQC,aAAa,GAAGC,KAGvD,MAAMC,EAAoC,IAAIL,EAMxCM,EAAiB,IAAIC,MAAMzB,EAAQoB,QAAQC,aAAa,GAAI,CAChEK,IAAG,CAACC,EAAQC,EAAuBC,IACpB,SAATD,EACKL,EAEFI,EAAOC,KAIZE,EAAY,IAAIL,MAAMzB,EAAQoB,QAAQC,aAAc,CACxDK,IAAG,CAACC,EAAQC,EAAMC,IACH,MAATD,EACKJ,EAEFG,EAAOC,KAIZG,EAAe,IAAIN,MAAMzB,EAAQoB,QAAS,CAC9CM,IAAG,CAACC,EAAQC,EAAMC,IACH,iBAATD,EACKE,EAEFH,EAAOC,KAiBlB,OAbwB,IAAIH,MAAMzB,EAAS,CACzC0B,IAAIC,EAAQC,EAAMC,GAChB,OAAQD,GACN,IAAK,UACH,OAAO,EACT,IAAK,UACH,OAAOG,EACT,QACE,OAAOJ,EAAOC,OAQjB,SAASI,EAAuBC,EAA0BjC,GAC/D,MAAMkC,EAASD,EAAgBb,QAAQC,aAAa,GAAGC,KACjDa,EAAQnC,EAAQoB,QAAQC,aAAa,GAAGC,KAC9C,OAAOc,qBAAWC,eAAKH,GAASG,eAAKF,IAGhC,SAASG,EAA2BC,EAAoBC,GAC7D,MAAQ,cAAaA,QAAiBD,EAASE,KAAK,UAG/C,SAASC,EAA6BC,EAAmBH,GAC9D,MAAMI,EAAS,QAAOJ,IACtB,OAAOG,EACJE,KAAI,CAACC,EAAG3D,IAAe,+BAAN2D,EAAqC,GAAM,SAAQA,OAAOF,KAASzD,QACpFsD,KAAK,MAGH,SAASM,EAA2BR,GACzC,OAAOA,EACJM,KAAIC,GACG,+BAANA,EAAqC,GAAM,SAAQA,mCAAmCA,SAEvFL,KAAK,Q,iCC9MH,IAAKO,EAAZ,kCAQC,SARWA,KAAiB,UAAjBA,EAAiB,oBAAjBA,EAAiB,wBAAjBA,EAAiB,gBAAjBA,EAAiB,sBAAjBA,EAAiB,0BAAjBA,EAAiB,0BAQ5B,CARWA,MAAiB,M,wMCT7B,eAEA,SAoCA,SAAS,EAAiB,GAAkC,IAAtB,EAAO,uDAAG,CAAE,MAAO,GACvD,SAAS,EAAoB,GAC3B,OAAO,EAAiB,EAAG,GAG7B,OAAQ,EAAK,MACX,IAAK,YACH,OAAO,EAAK,KACd,IAAK,WACH,OAAI,EAAK,YAAkC,SAApB,EAAK,WACnB,EAAK,YAER,EAAK,QAAQ,IAEjB,EAAQ,EAAK,MAAQ,IAAM,EAAQ,SAE9B,EAAQ,EAAK,OACtB,IAAK,OACH,MAAO,QAAQ,EAAoB,EAAK,gBAC1C,IAAK,QACH,MAAO,SAAS,EAAoB,EAAK,gBAC3C,IAAK,OACH,MAAM,EAAW,EAAoB,EAAK,UAE1C,MACyB,SAAvB,EAAK,SAAS,MACd,IAAa,EAAoB,EAAK,SAAS,aAExC,QAAQ,KACV,IAAI,EAAoB,EAAK,cAAc,EAAoB,EAAK,aAC7E,IAAK,WACH,IAAI,EAAmB,EAAK,eAAe,IAAI,GAAqB,KAAK,MAIzE,OAHmC,IAA/B,EAAK,eAAe,QAAgD,aAAhC,EAAK,eAAe,GAAG,OAC7D,EAAmB,IAAI,MAElB,GAAG,QAAuB,EAAoB,EAAK,cAC5D,QACE,MAAO,wBAgPb,SAAgB,EAAiB,GAC/B,MAAM,EAAgC,IAAI,IACpC,EAA8B,IAAI,IAwBxC,SAAS,EACP,EACA,EACA,EACA,GAEA,MAAM,EAAa,EAAK,IAAI,GAC5B,QAAmB,IAAf,EACF,MAAO,CAAC,GAAY,GAEtB,EAAU,IAAI,EAAO,EAAU,MAC/B,MAAM,EAAY,EAAM,IAAI,GAC5B,IAAI,EAAS,EAAO,OAAS,EAAO,OAA6C,EAApC,KAAK,IAAI,EAAG,EAAU,OAAS,GACxE,GAAa,EACjB,IAAK,IAAI,EAAI,EAAGC,EAAI,EAAU,OAAQ,IAChB,MAAhB,EAAU,KAEZ,EAAU,GAAK,OAAQ,IAEzB,GAAU,EAAU,GAAG,GAAG,OAC1B,MAAe,EAAU,GAAG,IAE9B,EAAU,OAAO,GACjB,MAAM,EAAoB,CACxB,KAAM,YACN,MAAO,EAAU,KAAI,GAAK,EAAE,KAC5B,OAAQ,EACR,OAAQ,EACR,OAAQ,GAKV,OAHK,GACH,EAAK,IAAI,EAAO,GAEX,CAAC,EAAQ,GAuClB,SAAS,EAAY,GACnB,MAAM,EAAkB,EAAK,MAAM,MACnC,OAAwB,IAAjB,EAAM,OACT,CAAC,CAAE,KAAM,WAAY,IAAK,EAAM,GAAI,OAAQ,EAAM,GAAG,SAAU,GAC/D,CAAC,CAAE,KAAM,YAAa,QAAO,OAAQ,MAAY,GAGvD,SAAS,EAAQ,GACf,GAAU,OAAN,EACF,MAAO,CAAC,CAAE,KAAM,WAAY,IAAK,OAAQ,OAAQ,IAAK,GACjD,QAAU,IAAN,EACT,MAAO,CAAC,CAAE,KAAM,WAAY,IAAK,YAAa,OAAQ,IAAK,GACtD,GAAI,EAAU,IAAI,GACvB,MAAO,CAAC,CAAE,KAAM,WAAY,IAAK,gBAAiB,OAAQ,KAAM,GAC3D,GAAiB,kBAAN,EAAgB,CAChC,MAAM,EAAM,KAAK,UAAU,GAC3B,MAAO,CAAC,CAAE,KAAM,WAAY,IAAK,EAAK,OAAQ,EAAI,SAAU,GACvD,MAAiB,kBAAN,EACT,EAAY,EAAE,YACZ,EAAU,KAAO,0BACnB,CAAC,CAAE,KAAM,WAAY,IAAK,iBAAkB,OAAQ,KAAM,GAC9B,oBAAnB,EAAE,aACX,EAAY,EAAE,gBACZ,MAAM,QAAQ,GACN,IAAb,EAAE,OAvHV,SAAqB,GACnB,MAAM,EAAa,EAAK,IAAI,GAC5B,QAAmB,IAAf,EACF,MAAO,CAAC,GAAY,GAEtB,EAAU,IAAI,EAAO,EAAU,MAC/B,MAAM,EAAiB,GAChB,EAAS,GAAkB,EAAQ,EAAM,KACzC,EAAS,GAAkB,EAAQ,EAAM,IAC1C,EAAa,GAAkB,EACrC,EAAU,OAAO,GACjB,MAAM,EAAoB,CACxB,KAAM,OACN,KAAM,EACN,KAAM,EACN,OAAQ,EAAQ,OAAS,EAAQ,OAAS,GAK5C,OAHK,GACH,EAAK,IAAI,EAAO,GAEX,CAAC,EAAQ,GAoGL,CAAY,GAEZ,EAAiB,EAAG,EAAG,IAAK,KA9a3C,SAAqB,GACnB,MAC0B,kBAAjB,EAAE,YACe,kBAAjB,EAAE,YACsB,oBAAxB,EAAE,kBA4aE,CAAY,GACd,EAAiB,EAAG,EAAE,oBAAqB,EAAE,WAAY,EAAE,YAG3D,OAAO,eAAe,KAAO,OAAO,UArE/C,SAAuB,GACrB,MAAM,EAAa,EAAK,IAAI,GAC5B,QAAmB,IAAf,EACF,MAAO,CAAC,GAAY,GAEtB,EAAU,IAAI,EAAO,EAAU,MAC/B,MAAM,EAAU,OAAO,QAAQ,GACzB,EAAY,EAAQ,KAAI,GAAM,EAAQ,EAAG,MAC/C,IAAI,EAAS,EAAsC,EAAlC,KAAK,IAAI,EAAG,EAAQ,OAAS,GAA0B,EAAjB,EAAQ,OAC3D,GAAa,EACjB,MAAM,EAAuB,GAC7B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,OAAQ,IACpC,GAAU,EAAQ,GAAG,GAAG,OACxB,GAAU,EAAU,GAAG,OACvB,MAAe,EAAU,GAAG,IAC5B,EAAQ,KAAK,CACX,KAAM,SACN,IAAK,EAAQ,GAAG,GAChB,MAAO,EAAU,GAAG,GACpB,OAAQ,EAAU,GAAG,GAAG,OAAS,EAAQ,GAAG,GAAG,SAGnD,EAAU,OAAO,GACjB,MAAM,EAAoB,CACxB,KAAM,YACN,MAAO,EACP,OAAQ,IACR,OAAQ,IACR,OAAQ,GAKV,OAHK,GACH,EAAK,IAAI,EAAO,GAEX,CAAC,EAAQ,GAqCV,CAAc,GACd,EAAY,EAAE,YAItB,OAAO,EAAQ,GAAO,GAmBxB,SAAgB,EACd,EACA,EACA,GAGA,MACM,EAAiC,IADV,IAAI,OAAO,KAAK,IAAI,EAAG,EAAS,IAEvD,EAAiC,IAAI,IA2F3C,OA1FA,SAAS,EAAO,GACd,MAAM,EAAa,EAAK,IAAI,GAC5B,QAAmB,IAAf,EACF,OAAO,EAET,IAAI,EACJ,GAAiB,aAAb,EAAI,KACN,EAAS,CAAE,KAAM,OAAQ,KAAM,QAC1B,GAAiB,cAAb,EAAI,KACb,EAAS,CACP,KAAM,QACN,YAAa,GACb,WAAY,GACZ,MAAO,EAAI,MAAM,KAAI,IAAC,CACpB,KAAM,OACN,KAAM,CAAE,KAAM,WAAY,IAAK,EAAG,OAAQ,EAAE,YAE9C,WAAY,GACZ,WAAY,SAET,GAAiB,SAAb,EAAI,KAAiB,CAC9B,MAAM,EAAW,EAAO,EAAI,MACtB,EAAW,EAAO,EAAI,MAO1B,EAJA,EAAI,OAAS,EAAI,GACC,SAAlB,EAAS,MACS,SAAlB,EAAS,KAEA,CACP,KAAM,QACN,YAAa,EACb,WAAY,GACZ,MAAO,CAAC,EAAU,GAClB,WAAY,IACZ,WAAY,KAGL,CACP,KAAM,OACN,KAAM,QAGL,GAAiB,cAAb,EAAI,KAAsB,CACnC,MAAM,EAAY,EAAI,MAAM,IAAI,GAK9B,EAHA,EAAI,OAAS,EAAI,OAAO,OAAS,EAAI,OAAO,OAAS,GACrD,EAAU,MAAK,GAAgB,SAAX,EAAE,OAEb,CACP,KAAM,QACN,YAAa,EAAI,OAAS,IAAI,OAAO,KAAK,IAAI,EAAG,EAAS,EAAI,OAAO,SACrE,WAAY,IAAI,OAAO,KAAK,IAAI,EAAI,OAAO,OAAQ,IACnD,MAAO,EACP,WAAY,IACZ,WAAY,EAAI,QAGT,CACP,KAAM,OACN,KAAM,OAGL,IAAiB,WAAb,EAAI,KAqBb,KAAM,KArB0B,CAChC,MAAM,EAAY,EAAO,EAAI,OAE3B,EADE,EAAI,OAAS,GAAyC,SAAnB,EAAU,KACtC,CACP,KAAM,QACN,YAAa,GACb,WAAY,GACZ,MAAO,CACL,CAAE,KAAM,OAAQ,KAAM,CAAE,KAAM,WAAY,IAAK,KAAK,UAAU,EAAI,KAAM,OAAQ,IAChF,GAEF,WAAY,IACZ,WAAY,IAGL,CACP,KAAM,OACN,KAAM,IAOZ,OADA,EAAK,IAAI,EAAK,GACP,EAGF,CAAO,GAGhB,SAAgB,EAAsB,GA8BpC,OA7BA,SAAS,EAAM,EAAgB,GAC7B,GAAiB,cAAb,EAAI,KACN,KAAM,yDACD,GAAiB,aAAb,EAAI,KACb,EAAM,KAAK,EAAI,UACV,GAAiB,SAAb,EAAI,KACb,EAAM,KAAK,KACX,EAAM,EAAI,KAAM,GAChB,EAAM,KAAK,MACX,EAAM,EAAI,KAAM,GAChB,EAAM,KAAK,UACN,GAAiB,WAAb,EAAI,KACb,EAAM,KAAK,KAAK,UAAU,EAAI,MAC9B,EAAM,KAAK,MACX,EAAM,EAAI,MAAO,QACZ,GAAiB,cAAb,EAAI,KAAsB,CACnC,EAAM,KAAK,EAAI,QACX,EAAI,MAAM,OAAS,GACrB,EAAM,EAAI,MAAM,GAAI,GAEtB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAI,MAAM,OAAQ,IACpC,EAAM,KAAK,MACX,EAAM,EAAI,MAAM,GAAI,GAEtB,EAAM,KAAK,EAAI,QAEjB,OAAO,EAGF,CAAM,EAAK,IAAI,KAAK,IAG7B,SAAgB,EAAiB,GAC/B,IAAI,EAAQ,GACZ,MAAM,EAA8C,IAAI,IAClD,EAAyE,IAAI,IAwCnF,OAvCA,SAAS,EAAM,EAAgB,GAC7B,MAAM,EAAsB,EAAyB,IAAI,GACzD,QAA4B,IAAxB,EAAmC,CACrC,MAAM,EAAW,EAAoB,IAAI,EAAQ,QACjD,QAAiB,IAAb,EAEF,YADA,GAAS,EAAM,UAAU,EAAS,GAAI,EAAS,KAInD,MAAM,EAAQ,EAAM,OACpB,GAAkB,SAAd,EAAK,KACF,EAAoB,IAAI,EAAK,OAChC,EAAoB,IAAI,EAAK,KAAM,EAAsB,EAAK,OAEhE,GAAS,EAAoB,IAAI,EAAK,WACjC,GAAkB,UAAd,EAAK,KAAkB,CAChC,GAAS,EAAK,YACd,MAAM,EAAuB,EAAU,IAAI,OAAO,EAAK,YAAY,QAC7D,EAAsB,EAAU,EAAK,WAC3C,EAAM,EAAK,MAAM,GAAI,GACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,IACrC,GAAS,EAAK,WACd,GAAS,EACT,EAAM,EAAK,MAAM,GAAI,GAEvB,GAAS,EAAK,WAEhB,MAAM,EAAM,EAAM,OAClB,QAA4B,IAAxB,EAAmC,CACrC,MAAM,EAAS,IAAI,IACnB,EAAO,IAAI,EAAQ,OAAQ,CAAC,EAAO,IACnC,EAAyB,IAAI,EAAM,QAEnC,EAAoB,IAAI,EAAQ,OAAQ,CAAC,EAAO,IAIpD,CAAM,EAAM,MAEL,EAvnBI,YAAY,SACvB,GAGU,IAFV,yDAA0B,EAC1B,EAAkB,uDAAG,GAGrB,GADA,GAAQ,aAAQ,GACM,kBAAX,EACT,KAAM,uDAER,IAAI,EAAkB,EAItB,OAHI,EAAS,KACX,EAAU,IAEL,EAAiB,EAAoB,EAAiB,GAAQ,EAAS,KAGhF,wBAA6B,GAC3B,OAAO,EAAiB,IAwR1B,qBA4JA,wBAsGA,0BAiCA,sB,iCC5lBA,4MAAO,MAAMC,EAAsB,sBACtBC,EAAqB,qBACrBC,EAAc,cACdC,EAAmB,mBACnBC,EAAqC,qCACrCC,EAAqC,sC,iCCPlD,qEASO,MAAMC,EAA8D,IAEpE,IAFqE,sBAC1EC,GACD,EACC,OAAO,cAAC,IAAa,CAACC,MAAM,QAAQC,KAAMC,IAAUC,OAAQC,QAASL,M,iCCZvE,8EAWO,MAAMM,EAA4D,IAGlE,IAHmE,eACxEC,EAAc,UACdC,GACD,EACC,OAAOA,EAAY,KACjB,cAAC,IAAQ,CAACC,QAAQ,sCAAqC,SACrD,cAAC,IAAa,CAACR,MAAM,OAAOC,KAAMC,IAAUO,KAAML,QAASE,Q,mJCoDlDI,MA1C0BvE,IACvC,MAAM,KAAEwE,EAAI,WAAEC,EAAU,cAAEC,EAAa,gBAAEC,GAAoB3E,GAEtD4E,EAAkBC,GAAuBC,IAAMC,SAAiB,GAgBvE,OAAoB,IAAhBP,EAAKQ,OACA,qBAAKC,UAAU,sBAItB,sBAAKA,UAAU,oBAAmB,UAChC,qBAAKA,UAAU,gBAAe,SAC3BT,EAAKxB,KAAI,CAACkC,EAAKC,IACd,eAAC,IAAI,CAEHF,UAAWG,IAAW,MAAO,CAAEC,SAAUZ,GAAcG,IAAqBO,IAC5ElB,QAAS,KAzBSqB,MACtBV,KADsBU,EAyBgBH,IAhB1CN,EAAoBS,GACpBZ,KARMD,EACFE,IAEAD,KAoB6C,UAEzC,cAAC,IAAI,CAACO,UAAU,WAAWnB,KAAMoB,EAAIK,SAAUC,KAAM,KACpDN,EAAIrB,QALAsB,OASW,OAArBP,GAA6B,cAAC,IAAI,CAACK,UAAU,QAAO,SAAET,EAAKI,GAAkBa,W,uCCiDrEC,MA7BiCZ,QAC9C,IAAiG,IAAhG,cAAEa,EAAa,yBAAEC,EAAwB,YAAEC,EAAW,kBAAEC,KAAsBC,GAAY,EACzF,OACE,cAACC,EAAA,EAAkB,IACbD,EACJE,eAAgB,CAACC,EAAaC,IAC5B,qBAAKlB,UAAU,eAAc,SAC3B,cAAC,IAAI,UACH,qBAAKA,UAAU,oBAAmB,SAChC,cAAC,IAAI,CACHmB,GAAG,oBACHC,SAAUF,EACVP,yBAA0BA,EAC1BD,cAAeA,EAAc,SAE5BO,EAAYlD,KAAIkC,GAzDjB,EAChBA,EACAoB,EACAT,EACAC,KAEA,MACMS,OAAmBC,IAAXtB,EAAIkB,IAAoBlB,EAAIkB,KAAOK,IAAgBC,OAASxB,EAAIrB,MAAQqB,EAAIkB,GAZjEA,MAoBzB,MAAMO,EAAkC,CACtCP,GAAIG,EACJK,MARA,cAAC,IAAQ,CAACvC,QAASa,EAAIrB,MAAM,SAC3B,qBAAKoB,WAfgBmB,EAealB,EAAIkB,GAd1CA,IAAOK,IAAgBC,QAAUN,IAAOK,IAAgBI,YACpD,8CACA,wBAY2CT,GAAIU,YAAeP,GAAO,SACnE,cAAC,IAAI,CAACzC,KAAMoB,EAAIK,SAAUwB,SALf,SAYfC,SAAU9B,EAAI8B,SACd/B,UAAW,oBAGb,IAAKC,EAAIO,KACP,OAAO,cAAC,IAAG,IAAiBkB,GAAXJ,GAGnB,MAAMU,EAAuBX,EACzB,IACKpB,EAAIO,KACPzF,MAAO,IACFkF,EAAIO,KAAKzF,MACZsG,oBACAT,cACAC,sBAGJZ,EAAIO,KACFyB,EAAwB,qBAAKjC,UAAU,oBAAmB,SAAEgC,IAElE,OAAO,cAAC,IAAG,IAAiBN,EAAUQ,MAAOD,GAA5BX,IAmBCa,CAAUlC,EAAKa,EAAWO,kBAAmBT,EAAaC,iBAU5EuB,K,QC3EF,MAoMMC,EAA0B,CAAEC,OAAO,GACnCC,EAA2B,CAAEC,QAAQ,GACrCC,EAAmB,GAEVC,IAxM6B3H,IAC1C,MAAM4H,EAAmB9C,SAA+B,MAClD+C,EAAsB/C,SAAoC,MAC1DgD,EAAmBhD,SAAoC,MACvDiD,EAAsBjD,SAA+B,MACrDkD,EAAmBlD,SAA4B,MAC/CmD,EAAiBnD,SAAoC,OACpDoD,GAAyBC,YAAcN,IACvCO,EAA0BC,GAA+BvD,WAAuB,MAChFwD,EAAmBC,GAAwBzD,YAAwB,GAsB1E0D,IAAkBC,sBAElB3D,aAAgB,KACV9E,EAAM0I,yBAAwD,OAA7BV,EAAiBW,UACpDX,EAAiBW,QAAUV,EAAeU,QAASC,iBAIvD,MAiDMC,EAA8C,CAClDC,EACAC,EACAC,EACAC,KAIA,GADqBD,EAAWE,YADN,IAEY,CACpC,MAAMC,EAAUvB,EAAiBe,QACjC,GAAgB,OAAZQ,EACF,MAAM5I,MAAM,iDAEd4I,EAAQC,WAAW,CAAEC,MAAO,GAAIC,OAAQ,SACxCf,GAAqB,QAErBA,GAAqB,IASnBgB,EAA6C,CAACC,EAAIC,EAAIC,KAC1D,MAEMC,EACFD,EAAuBR,YAAchB,EAAyB,IAE9DyB,EAJmB,GAKrB5B,EAAoBY,QAASS,WAAW,CAAEC,MAAO,OAAQC,OAAQ,SACxDK,EAPW,GAQpB5B,EAAoBY,QAASS,WAAW,CAAEC,MAAO,KAAMC,OAAQ,UAQ7DM,EAAuC,CAACJ,EAAIC,EAAIC,KACpD1B,EAAiBW,QACfV,EAAeU,QAASC,aAAeZ,EAAiBW,QACpDV,EAAeU,QAASC,aACxBZ,EAAiBW,QACvB,MAAMkB,EAAmBH,EAAuBd,aAC1CkB,EAAqBJ,EAAIK,WAA8BnB,aACzDiB,EAAkB7B,EAAiBW,QAAW,EAAImB,EACpD7B,EAAeU,QAASqB,MAAMC,QAAU,OAExChC,EAAeU,QAASqB,MAAMC,QAAU,WAgBtCC,EAAc,cAAC,EAAW,IAAKlK,EAAMmK,mBACrCC,EACJ,eAAC,IAAS,CA9ERC,OAAQ,SACRpF,UAAW,sBACXqF,OAAQ9C,EACR+C,SAAUX,EACVY,aAPmC,CAAChB,EAAIC,EAAIC,IAC5C1J,EAAMyK,8BAA8Bf,EAAId,cAgFA,UACvCsB,EACD,qBAAKjF,UAAU,uBAAuByE,IAAKzB,OAI/C,OACE,sBAAKhD,UAAU,YAAW,UACvBjF,EAAM0K,kBACL,cAAC,IAAM,CACLtL,QAAS,4EAET,KACJ,cAACuL,EAAA,EAAU,IAAK3K,EAAM4K,kBACtB,sBAAK3F,UAAU,mBAAkB,UAC/B,cAAC,IAAS,IAtIc,MAC5B,MAWM4F,EAAuD,IAAnC7K,EAAM8K,aAAatG,KAAKQ,OAC5C+F,EAAWF,EAzCW,GAyCiC,OAC7D,MAAO,CACLP,OAAQO,EAAoBvD,EAAkBI,EAC9CqD,WACAC,SAAU,MACVT,SAAU1B,EACV2B,aAlBmC,CACnC1B,EACAC,EACAC,EACAC,KAEA,MAAMgC,EAAejC,EAAWE,YAnCN,KAoCtB+B,GACF5C,EAA4B4C,IAW9BvB,IAAK9B,EACLsD,YAAa,CAAE7B,MAAO0B,EAAUzB,OAAQ,UAiHvB6B,GAAuB,SACpC,cAAC,EAAO,IACFnL,EAAM8K,aACVrG,WAAY6D,EACZ5D,cApKY,KACpB6D,GAAqB,GACrB,MAAMY,EAAUvB,EAAiBe,QACjC,GAAgB,OAAZQ,EACF,MAAM5I,MAAM,kDAEd4I,EAAQC,WAAW,CAAEC,MAAOjB,EAA0BkB,OAAQ,UA+JtD3E,gBA5Jc,KACtB4D,GAAqB,GACrB,MAAMY,EAAUvB,EAAiBe,QACjC,GAAgB,OAAZQ,EACF,MAAM5I,MAAM,mDAEd4I,EAAQC,WAAW,CAAEC,MAjBO,GAiBuBC,OAAQ,cAyJvD,sBAAKrE,UAAU,qBAAqByE,IAAK7B,EAAoB,UAC3D,qBAAK5C,UAAU,iBAAiByE,IAAK5B,IACrC,cAAC,IAAS,CArHd7C,UAAW,4BACXqF,OAAQhD,EACRyD,SAAU,EACVR,SAAUhB,EACVG,IAAK3B,EACLmD,YAAa,CAAE7B,MAAO,MAAOC,OAAQ,QACrC8B,QAAI5E,EA+GqC,SAnCfxG,IACxBA,EAAMqL,qBACD,cAACC,EAAA,EAAe,IAAKtL,EAAMqL,uBAE3B,cAACE,EAAA,EAAU,IAAKvL,EAAMwL,WA+BeC,CAAqBzL,KAC7D,sBAAKiF,UAAU,eAAc,eACQuB,IAAlCxG,EAAM0I,yBAAyC1I,EAAM0I,wBAClD0B,EACAF,EACJ,cAACwB,EAAA,EAAI,IAAK1L,EAAM2L,0B,gCC/N5B,mCAqBA,MAAMC,EAAiB,CACrB3G,UAAW,GACX4G,WAAW,EACXC,aAAa,EACbtM,OAAQC,IAAOsM,KACfC,SAAS,GA8BIC,IA3BqC,IAM7C,IAN8C,MACnDpI,EAAQ,GAAE,KACVC,EAAI,QACJG,EAAO,QACPiI,EAAU,GAAE,WACZC,GAAa,GACd,EACC,MAAMC,EAA+B,IAAKR,KAAmBM,GACvDG,EAAcvI,GAAQ,cAAC,IAAI,CAACA,KAAMA,EAAMwI,MAAOF,EAAcG,YAEnE,OACE,cAAC,IAAM,CACLvF,SAAUmF,EACVK,KAAMJ,EAAcP,UACpBrM,OAAQ4M,EAAc5M,OACtBwM,QAASI,EAAcJ,QACvB/G,UAAWmH,EAAcnH,UACzBwH,KAAML,EAAcK,KACpBxI,QAASA,EACTH,MAAOsI,EAAcN,aAAeO,EACpCK,UAAWN,EAAcN,aAAeO,EAAY,SAEnDxI,M,iCCnDP,0aAgBO,MAAM8I,EAAwB,CAACvG,EAAYE,IAChDsG,iBAAOC,IAAyB,CAC9BzG,KACAE,sBAGSwG,EAAa,CAACC,EAAgCzG,IACzDsG,iBAAOI,IAAa,CAClBD,WACAzG,sBAGS2G,EAAc,CAACC,EAAc5G,IACxCsG,iBAAOO,IAAc,CACnBD,QACA5G,sBAGS8G,EAAc,CAACC,EAAiB/G,IAC3CsG,iBAAOU,IAAc,CACnBD,SACA/G,sBAGSiH,EAAcjH,GACzBsG,iBAAOY,IAAa,CAClBC,QAASC,KAAKC,MACdrH,sBAGSsH,EAActH,GACzBsG,iBAAOiB,IAAa,CAClBvH,sBAGSwH,EAAc,CAACC,EAAoBzH,IAC9CsG,iBAAOoB,IAAc,CACnBD,aACAN,QAASC,KAAKC,MACdrH,sBAGS2H,EAAc3H,GACzBsG,iBAAOsB,IAAa,CAClBT,QAASC,KAAKC,MACdrH,sBAGS6H,EAAa7H,GACxBsG,iBAAOwB,IAAY,CACjBX,QAASC,KAAKC,MACdrH,uB,iCCnEJ,6FAyBA,MAAM+H,EAAoD,IAAqC,IAApC,eAAEC,EAAc,WAAEC,GAAY,EACvF,MAAMC,EAAiBC,IAAiBzL,IAAIuL,GAC5C,OAAO,cAAC,IAAI,CAACG,MAAOJ,EAAe,SAAEE,KAGjCG,EAA4C,CAACC,EAAK,KAAD,IAAE,YAAEC,GAAa,SACtE,cAAC,IAAQ,CAAwB5K,QAAS4K,EAAaC,KAAMF,EAAKG,aAAnDH,EAAKG,cAGhBC,EAAyBC,IAAOC,SAEzBC,EAAkE,IAKxE,IALyE,cAC9EC,EAAa,cACbC,EAAa,oBACbC,EAAsB,SAAQ,SAC9BtI,GAAW,GACZ,EACC,OACE,cAACgI,EAAsB,CACrBO,MAAOC,IACPC,aAAcH,EACdI,aAAcf,EACdgB,iBAAkBtB,EAClBuB,YAAY,EACZ5I,SAAUA,EAAS,SAEnB,cAAC,IAAM,CACL/B,UAAW4K,IAAQC,QACnBhB,KAAMiB,YAAmBX,EAAeC,GACxC3C,UAAW1F,EAAW,KAAOjD,IAAUiM,sBACvChJ,SAAUA,Q,iCCvDlB,0KAAO,MAAMiJ,EAAc,cAEdC,EAAmB,0CACnBC,EAAgB,0CAEhBC,EAAgB,gBAChBC,EAA0B,2B,iCCNvC,uVAYO,MAAMC,EAAmB,IAAM1D,iBAAOtJ,KAEhCiN,EAAcC,GAAoB5D,iBAAOrJ,IAAaiN,GAEtDC,EAAkBC,GAAqB9D,iBAAOpJ,IAAkBkN,GAEhEC,EAAqBC,GAAwBhE,iBAAOvJ,IAAqBuN,GAEzEC,EAAmCC,GAC9ClE,iBAAOlJ,IAAoCoN,GAEhCC,EAAiC,CAC5CC,EACAC,EACAC,IACGtE,iBAAOnJ,IAAoC,CAAEuN,WAAUC,WAAUC,e,0ECzBtE,+9DAmDO,MAAMC,EAAyB7K,GACpCsG,iBAAOwE,IAA0B,CAAE9K,sBAExB+K,EAAuB/K,GAClCsG,iBAAO0E,IAAwB,CAAEhL,sBAEtBiL,EAAwB,CAACC,EAAqBlL,IACzDsG,iBAAO6E,IAAyB,CAAED,cAAalL,sBAEpCoL,EAAiB,CAACC,EAAkBrL,IAC/CsG,iBAAOgF,IAAkB,CAAED,WAAUrL,sBAE1BuL,EAA0B,CAACvI,EAAgBhD,IACtDsG,iBAAOkF,IAA4B,CAAExI,SAAQhD,sBAElCyL,EAAkB,CAACC,EAAmB1L,IACjDsG,iBAAOqF,IAAmB,CAAED,YAAW1L,sBAE5B4L,EAAgB,CAC3BC,EACAnR,EACAsF,IAEAsG,iBAAOwF,IAAgB,CACrBD,UACAnR,UACAsF,sBAGS+L,EAAwB,CACnCC,EACAhM,EACAiM,IAEA3F,iBAAO4F,IAA4B,CACjCF,sBACAhM,oBACAiM,WAAYA,IAAc,IAGjBE,EAAuBnM,GAClCsG,iBAAO8F,IAAuB,CAAEpM,sBAerBqM,EAAoB,CAC/BrM,EACAsM,EACAC,IAEAjG,iBAAOkG,IAAqB,CAC1BF,UACAtM,oBACAuM,sBAGSE,EAAkBzM,GAC7BsG,iBAAOoG,IAAkB,CAAE1M,sBAEhB2M,EAAmB3M,GAC9BsG,iBAAOsG,IAAmB,CAAE5M,sBAEjB6M,EAAuB7M,GAClCsG,iBAAOwG,IAAwB,CAAE9M,sBActB+M,EAAkB,CAACT,EAAkBtM,IAChDsG,iBAAO0G,IAAmB,CACxBV,UACAtM,sBAGSiN,EAAcjN,GACzBsG,iBAAO4G,IAAa,CAAElN,sBAEXmN,EAAYnN,GACvBsG,iBAAO8G,IAAW,CAAEpN,sBAETqN,EAAe,CAACrN,EAAsCsN,IACjEhH,iBAAOiH,IAAe,CAAEvN,oBAAmBsN,eAEhCE,EAAmBxN,GAC9BsG,iBAAOmH,IAA2B,CAAEzN,sBAEzB0N,EAAwB,CACnC1N,EACA2N,IACGrH,iBAAOsH,IAA0B,CAAE5N,oBAAmB2N,2BAE9CE,EAAoB,CAACC,EAAwB9N,IACxDsG,iBAAOyH,IAAqB,CAAED,iBAAgB9N,sBAEnCgO,EAAsB,CAACC,EAAuBjO,IACzDsG,iBAAO4H,IAA2B,CAAED,cAAajO,sBAEtCmO,EAAsB,CACjCC,EACApO,IACGsG,iBAAO+H,IAAgB,CAAED,mBAAkBpO,sBAEnCsO,EAAkB,CAACC,EAAsBvO,IACpDsG,iBAAOkI,IAAmB,CAAED,eAAcvO,sBAE/ByO,EAAwB,CAACC,EAAmB1O,IACvDsG,iBAAOqI,IAA2B,CAChCxI,KAAM,OACNnG,oBACA4O,MAAOF,IAGEG,EAAgB,CAAC7O,EAAsCnB,IAClEyH,iBAAOwI,IAAgB,CAAE9O,oBAAmBnB,UAEjCkQ,EAAwB,CACnC/O,EACAgP,IACG1I,iBAAO2I,IAAiB,CAAEjP,oBAAmBgP,mBAErCE,EAAa,CAAClP,EAAsCgP,IAC/D1I,iBAAO6I,IAAa,CAAEnP,oBAAmBgP,mBAW9BI,EAAiB,CAC5BpP,EACAqP,IAEA/I,iBAAOgJ,IAAiB,CACtBtP,oBACAqP,qBAGSE,EAAkB,CAC7BvP,EACAqP,IAEA/I,iBAAOkJ,IAAkB,CACvBxP,oBACAqP,qBAGSI,EAAsB,CACjCzP,EACA0P,IAEApJ,iBAAOqJ,IAAwB,CAC7B3P,oBACA0P,iBAAkBA,IAGTE,EAA4B,CAACC,EAAsBC,IAC9DxJ,iBAAOyJ,IAA8B,CACnCF,eACAC,eAGSE,EAA4B,CAACC,EAAsBH,IAC9DxJ,iBAAO4J,IAA8B,CACnCD,eACAH,eAGSK,EAA0B,CACrCnQ,EACAoE,IAEAkC,iBAAO8J,IAA4B,CACjCpQ,oBACAoE,sBAGSiM,EAAqBC,GAAwBhK,iBAAOiK,IAAoB,CAAED,YAE1EE,EAAqBF,GAAwBhK,iBAAOmK,IAAoB,CAAEH,YAE1EI,EAAqB,CAChC1Q,EACA2Q,EACAC,EACAC,IAEAvK,iBAAOwK,IAAqB,CAC1B9Q,oBACA2Q,MACAC,SACAC,aAGSE,EAAyB,CACpCC,EACAC,EACAC,EACArX,EACAmG,IAEAsG,iBAAO6K,IAA0B,CAC/BH,SACAC,qBACAC,OACArX,UACAmG,sBAGSoR,EAAmB,CAACC,EAAqBrR,IACpDsG,iBAAOgL,IAAoB,CAAED,aAAYrR,sBAE9BuR,EAAsB,CAACC,EAAkBxR,IACpDsG,iBAAOmL,IAAwB,CAAED,WAAUxR,uB,mUC3RtC,MAeD0R,EAA6C,GAI7CC,EAAiBC,iMAAYC,uBAC5B,SAASC,EAAIhS,EAAY8G,GA8DhC,IAAoBmL,EA7DsBJ,IA6DtBI,EA1DP,IACNnL,EACHkJ,WAAY4B,EAAiB5R,GAC7BkS,UAAWlS,GAwDN,IAAImS,SAAQ,CAACC,EAASC,KAC3BC,IAAQC,MAAKC,IACX,MAAMC,EAAcD,EAAGC,YAAY,CAACC,GAAa,aACjDD,EAAYE,WAAaP,EACzBK,EAAYG,QAAUP,EAEFI,EAAYI,YAAYH,GACXI,IAAIb,UA1DpC,SAASc,EAAY/C,EAAoBgD,GAC9C,MAAMhT,EAAKiT,cAOX,OANArB,EAAiB5R,GAAMgQ,EACvBgC,EAAIhS,EAAI,IACHgT,EACH3M,KAAM,OACN6M,KAAM5L,KAAKC,QAENvH,EAaT,MAEM0S,EAAa,OACbJ,EAwEN,SAAoBa,GAClB,IAAIC,EAAmB,KACvB,MAAO,IACAA,IACHA,EAASD,IACFC,GA7ECC,EAAQ,IACb,IAAIlB,SAAQ,CAACC,EAASC,KAE3B,MAAMiB,EAAUC,UAAUC,KALd,UADA,GAQZF,EAAQG,UAAYC,IAClBtB,EAAQkB,EAAQpC,SAGlBoC,EAAQV,QAAUc,IAChBC,QAAQC,MAAM,mBAAoBF,GAClCrB,EAAOiB,EAAQM,QAIjBN,EAAQO,gBAAkBH,KAEI,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKhY,QAAewV,OAC1C4C,kBAAkBpB,EAAY,CAC/BqB,QAAS,KACTC,eAAe,U,gJChCRC,OAnBoEra,IACjF,MAAM,MAAEmF,EAAK,OAAEmS,GAAWtX,EAE1B,OACE,sBAAKiF,UAAWG,IAAW,aAAoC,SAAtBkS,EAAOgD,WAAwB,UAAY,SAAS,SAC3F,gBAAC,IAAI,CAACC,UAAWC,IAAUC,IAAI,UAC7B,uBAAKxV,UAAU,cAAa,UAC1B,sBAAKA,UAAU,aAAY,SAAEE,EAAQ,IACrC,sBAAKF,UAAU,gBAAe,SAAEqS,EAAOgD,WAAWI,mBAEpD,eAAC,IAAG,CAACzV,UAAU,kBAAiB,SAAEqS,EAAOqD,WACzC,eAAC,IAAG,CAAC1V,UAAU,gBAAe,SACL,UAAtBqS,EAAOgD,YA9BQM,EA8BkCtD,EAAOsD,OA7BjEA,EACG5X,KAAIgX,IACH,OAAQA,EAAMa,WACZ,IAAK,UACH,MAAO,+DACT,IAAK,SACH,MAAQ,iBAAgBb,EAAMpZ,SAASoZ,EAAMc,mBAC/C,IAAK,UACH,MAAQ,kBAAiBd,EAAMpZ,SAASoZ,EAAMc,mBAChD,IAAK,cACH,MAAQ,YAAWd,EAAMe,eAC3B,QACE,MAAQ,oCAAmCf,EAAMa,gBAGtDjY,KAAK,SAcoE0U,EAAO0D,cA9B3DJ,O,UCiB1B,MAwEMK,GACJ,uBAAKhW,UAAU,0BAAyB,UACtC,4GACA,4HAGA,+GACA,mHAIEiW,GAAe,CAACC,EAAkBC,IACtC,uBAAKnW,UAAWkW,EAAS,UACtBC,EACD,eAAC,IAAI,CAACtX,KAAMC,IAAUsX,gBAIpBC,GACJ,uBAAKrW,UAAU,mBAAkB,UAC9BiW,GAAa,YAAa,YAC1BA,GAAa,kBAAmB,mBAChCA,GAAa,gBAAiB,oBAI7BK,GACJ,uBAAKtW,UAAU,iBAAgB,UAC7B,uBAAKA,UAAU,cAAa,UACzBiW,GAAa,YAAa,OAC1BA,GAAa,gBAAiB,sBAEhCA,GAAa,kBAAmB,mBAChCA,GAAa,gBAAiB,oBAI7BM,GAAiB,CAAC3X,EAAe4X,EAAiBC,IACtD,eAACzP,EAAA,EAAa,CACZpI,MAAOA,EACPC,KAAM2X,EAAS1X,IAAUsX,WAAatX,IAAU4X,YAChD1X,QAASyX,EACTxP,QAAS,CAAEjH,UAAW,kBAAmB+G,SAAS,KAIvC4P,OAtHoE5b,IACjF,MAAO6b,EAAgBC,GAAqBhX,YAAwB,IAC7DiX,EAAcC,GAAmBlX,YAAwB,IAE1D,UAAEmX,EAAS,mBAAEC,EAAkB,mBAAEC,EAAkB,kBAAE7V,GAAsBtG,EAE3Eoc,EAAgBtX,WACpB,IACEmX,EAAUjX,OAAS,EACjB,uBAAKC,UAAU,gBAAe,UAC3BqW,GACAW,EAAUjZ,KAAI,CAACqZ,EAAUlX,IACxB,eAACmX,GAAA,EAAuB,CAEtBnX,MAAOA,EACPkX,SAAUA,EACVF,mBAAoBA,EACpB7V,kBAAmBA,GAJdnB,QASX,sBAAKF,UAAU,YAAW,iEAE9B,CAACgX,EAAWE,EAAoB7V,IAG5BiW,EAAczX,WAClB,IACEoX,EAAmBlX,OAAS,EAC1B,iCACGuW,GACAW,EAAmBlZ,KAAI,CAACsU,EAAQnS,IAC/B,eAAC,GAAqB,CAAaA,MAAOA,EAAOmS,OAAQA,GAA7BnS,QAIhC,sBAAKF,UAAU,YAAW,4CAE9B,CAACiX,IAGGM,EAAkB1X,eAAkB,KACxCgX,GAAmBD,KAClB,CAACA,IAEEY,EAAgB3X,eAAkB,IAAMkX,GAAiBD,IAAe,CAACA,IAE/E,OACE,uBAAK9W,UAAU,aAAY,UACzB,gBAAC,IAAM,CACLA,UAAU,kBACVnB,KAAM+X,EAAiB9X,IAAUsX,WAAatX,IAAU4X,YACxD3P,SAAS,EACT/H,QAASuY,EAAgB,UAEzB,8CACA,eAAC,IAAQ,CAACnY,QAAS4W,GAAmByB,UAAWC,IAAgBC,KAAK,SACpE,eAAC,IAAI,CAAC9Y,KAAMC,IAAU8Y,YAG1B,eAAC,IAAQ,CAACpB,OAAQI,EAAgBiB,qBAAqB,EAAK,SACzDV,IAEFZ,GAAe,qBAAsBO,EAAcU,GACpD,eAAC,IAAQ,CAAChB,OAAQM,EAAce,qBAAqB,EAAK,SACvDP,QCzDMQ,OApBX/c,IACF,MAAM,wBAAEgd,EAAuB,aAAEC,EAAY,KAAEC,GAASld,EAExD,OACE,sBAAKiF,UAAWG,IAAW,mBAAmB,SAC5C,gBAAC,IAAI,CACHH,UAAW4K,IAAQsN,YACnB5C,UAAWC,IAAUC,IACrBxW,QAAS,kBACP+Y,EAAwBC,EAAaG,cAAuC,QAA1B,EAAEH,EAAazD,OAAOhC,YAAI,QAAI,KACjF,UAED,eAAC,IAAG,CAACvS,UAAU,uBAAsB,SAAEgY,EAAaI,eACpD,eAAC,IAAG,CAACpY,UAAU,oBAAmB,SAAEiY,IACpC,eAAC,IAAG,CAACjY,UAAU,qBAAoB,SAAEgY,EAAaK,oBCZ1D,MAAMpC,GAAe,CAACC,EAAkBC,IACtC,uBAAKnW,UAAWkW,EAAS,UACtBC,EACD,eAAC,IAAI,CAACtX,KAAMC,IAAUsX,gBAIpBkC,GACJ,uBAAKtY,UAAU,qBAAoB,UAChCiW,GAAa,iBAAkB,gBAC/BA,GAAa,mBAAoB,QACjCA,GAAa,eAAgB,YA6DnBsC,OA7CXxd,IACF,MAAM,sBAAEyd,EAAqB,wBAAET,GAA4Bhd,GACpD0d,EAAiBC,GAAsB5Y,oBAAkB,GAE1D6Y,EAAoBC,mBACxB,IACE,iCACGN,GACAE,EAAsBzY,OAAS,EAC9ByY,EAAsBza,KAAI,CAACia,EAA4B9X,IACrD,eAAC,GAA0B,CAEzB6X,wBAAyBA,EACzBC,aAAcA,EACdC,KAAM/X,EAAQ,GAHT8X,EAAaG,iBAOtB,sBAAKnY,UAAU,YAAW,0EAIhC,CAAC+X,EAAyBS,IAG5B,OACE,uBAAKxY,UAAU,qBAAoB,UACjC,gBAAC,IAAM,CACLA,UAAU,kBACVnB,KAAM4Z,EAAkB3Z,IAAUsX,WAAatX,IAAU4X,YACzD3P,SAAS,EACT/H,QAAS,IAAM0Z,GAAoBD,GAAiB,UAEpD,wDACA,eAAC,IAAQ,CAACrZ,QA9CuB,sCA8CmB,SAClD,eAAC,IAAI,CAACP,KAAMC,IAAU8Y,YAG1B,eAAC,IAAQ,CAACpB,OAAQiC,EAAiBZ,qBAAmB,WACnDc,Q,SChBME,OA1CX9d,IACF,MAAM,QACJ+d,EAAO,QACPC,EAAO,wBACPhB,EAAuB,6BACvBiB,EAA4B,aAC5BhB,EAAY,YACZiB,EAAW,SACXC,EAAQ,SACRC,GACEpe,EAEJ,OACE,sBAAKiF,UAAWG,IAAW,mBAAoB,CAAEiZ,OAAQL,IAAW,SAClE,gBAAC,IAAI,CACH/Y,UAAW4K,IAAQsN,YACnB5C,UAAWC,IAAUC,IACrBxW,QAAS,kBACP+Y,EAAwBC,EAAaG,cAAuC,QAA1B,EAAEH,EAAazD,OAAOhC,YAAI,QAAI,KACjF,UAED,eAAC,IAAG,CAACvS,UAAU,uBAAsB,SAAEiZ,IACvC,eAAC,IAAG,CAACjZ,UAAU,oBAAmB,SAChC,eAAC,IAAY,CACX+B,UAAW+W,EACX7I,MAAO+H,EAAaqB,MACpBC,cAAgBD,GACdL,EAA6BhB,EAAaG,cAAekB,GAE3DE,YAAc,yBAAwBN,IACtCO,IAAKN,EACLO,IAAKN,EACLO,4BAA0B,EAC1BnS,MAAI,EACJoS,cAAe,eCrC3B,MAAM1D,GAAe,CAACC,EAAkBC,IACtC,uBAAKnW,UAAWkW,EAAS,UACtBC,EACD,eAAC,IAAI,CAACtX,KAAMC,IAAUsX,gBAIpBkC,GACJ,uBAAKtY,UAAU,wBAAuB,UACnCiW,GAAa,iBAAkB,YAC/BA,GAAa,mBAAoB,YAkFvB2D,OAzE0E7e,IACvF,MAAM,eACJ8e,EAAc,QACdf,EAAO,QACPC,EAAO,wBACPhB,EAAuB,6BACvBiB,EAA4B,SAC5BG,EAAQ,SACRD,GACEne,GACG+e,EAAoBC,GAAyBja,oBAAkB,GAEhE6Y,EAAoBC,mBACxB,IACE,iCACGN,GACAuB,EAAe9Z,OAAS,EACvB8Z,EAAe9b,KAAI,CAACia,EAA4B9X,IAC9C,eAAC,GAA2B,CAC1B6Y,QAASA,EACTD,QAASA,EACTG,YAAa/Y,EAAQ,EAErB6X,wBAAyBA,EACzBiB,6BAA8BA,EAC9BhB,aAAcA,EACdkB,SAAUA,EACVC,SAAUA,GALLnB,EAAaG,iBAStB,sBAAKnY,UAAU,YAAW,iEAKhC,CACE+Y,EACAD,EACAe,EACA9B,EACAiB,EACAG,EACAD,IAIJ,OACE,uBAAKlZ,UAAU,qBAAoB,UACjC,gBAAC,IAAM,CACLA,UAAU,kBACVnB,KAAMib,EAAqBhb,IAAUsX,WAAatX,IAAU4X,YAC5D3P,SAAS,EACT/H,QAAS,IAAM+a,GAAuBD,GAAoB,UAE1D,mDACA,eAAC,IAAQ,CACP1a,QACE,+EAC6C8Z,EAAQ,eAAcC,EAAQ,cAE5E,SAED,eAAC,IAAI,CAACta,KAAMC,IAAU8Y,YAG1B,eAAC,IAAQ,CAACpB,OAAQsD,EAAoBjC,qBAAmB,WACtDc,QCnBMqB,OArEXjf,IACF,MAAM,QAAE+d,EAAO,eAAEe,EAAc,WAAEI,EAAU,wBAAElC,GAA4Bhd,GAClEge,EAASmB,GAAcpa,oBAAkB,IACzCqa,EAAkBC,GAAuBta,mBAAyB,IACnEoZ,EAAW,GAAKW,EAAe9Z,OAGrCsa,qBAAU,KACRD,EAAoBP,KACnB,CAACA,IA+CJ,OACE,eAAC,GAAwB,CACvBd,QAASA,EACTD,QAASA,EACTf,wBAAyBA,EACzBiB,6BAhCiC,CAAC1H,EAAsB+H,KAE1D,MAAMiB,EAAoBH,EAAiBpc,KAAIwc,GAC7CA,EAAKpC,gBAAkB7G,EAAe,IAAKiJ,EAAMlB,MAAOA,GAAUkB,IAEpEH,EAAoBE,GACpB,MAAME,EACJ,IAAIC,IAAIH,EAAkBvc,KAAIwc,GAAQA,EAAKlB,SAAQ9Y,OAAS+Z,EAAkBva,OAE1E2a,EAfqBP,IACpBA,EAAiBQ,QAAO,CAACD,EAAQH,IAC/BG,QAAyBnZ,IAAfgZ,EAAKlB,OAAsC,OAAfkB,EAAKlB,QACjD,GAYYuB,CAAoBN,GAC/BE,GAAgBE,GAvBKP,IAClBA,EAAiBQ,QAAO,CAAC5B,EAASwB,KACvC,MAAMlB,EAAQkB,EAAKlB,MACnB,OAAON,GAAWM,GAASH,GAAYG,GAd1B,MAeZ,GAmB2BwB,CAAkBP,IAC9CL,EAAWK,GAEXJ,GAAW,IACFM,GAAgBE,GACzBhgB,aACG,sDAAqDwe,WAExDgB,GAAW,KACDM,GAAgBE,GAC1BhgB,aAAmB,6DACnBwf,GAAW,IAEXA,GAAW,IAUXL,eAAgBM,EAChBjB,SAAUA,EACVC,SA3Da,MCzBnB,MAAM2B,WAA8Bjb,YAAyB,cAAD,yBAClDkb,WAAiC,KAElCC,wBACL,OAAO,EAGFC,oBACAzf,OAAe0f,YACjB1f,OAAe0f,WAAWC,kBAAkBC,KAAKL,YAI/CM,cACJ7f,OAAe0f,WAAWI,eAGtBC,kBACJ/f,OAAe0f,WAAWM,mBAGtBC,SACL,OACE,uBAAKzb,UAAU,iBAAgB,UAC7B,sBAAKA,UAAU,MAAK,SAClB,uBAAKA,UAAWG,IAAW,WAAY,YAAayK,IAAQ8Q,KAAM9Q,IAAQ+Q,cAAc,UACtF,eAAC,IAAM,CAACxa,GAAG,eAAenC,QAASoc,KAAKC,YAAY,mBAGpD,eAAC,IAAM,CAACla,GAAG,mBAAmBnC,QAASoc,KAAKG,gBAAgB,4BAKhE,sBAAKvb,UAAU,MAAK,SAClB,sBAAKA,UAAU,YAAYyE,IAAKmX,GAAMR,KAAKL,WAAaa,UAOnDd,U,8CCpCR,MAAMe,GAAaC,IACxB,MAAMC,EAAOC,IAAOF,GACdpT,EAAMsT,MACZ,OAAOD,EAAKE,SAASvT,IAaVwT,GAAiBJ,GACfE,IAAOF,GACIK,OAAO,kBCwClBC,OApD2ErhB,GACxF,sBAAKiF,UAAU,gBAAe,SAC5B,uBAAKA,UAAU,uBAAsB,UACnC,eAAC,IAAS,UACR,mCACE,gCACE,sCACA,8BACE,gBAAC,IAAI,WACFjF,EAAMshB,GAAE,MAAKthB,EAAMuhB,cAK1B,gCACE,4CACA,+BAAMvhB,EAAMwhB,UAAY,eAAC,IAAI,6BAKlCxhB,EAAMwhB,UACL,eAAC,IAAS,UACR,iCACE,8BACE,gCACE,eAAC,IAAO,IACR,eAACC,GAAA,EAAQ,CACPpd,QAASrE,EAAMwhB,SACfE,oBAAoB,EACpBC,eAAe,EACfC,WAAW,EACXC,sBAAsB,IAExB,eAAC,IAAO,aAOlB,wBAEA,sBAAK5c,UAAU,sBAAqB,SAClC,gBAAC,IAAI,wBACO,6BAAIjF,EAAM8hB,aAAe,OAAKX,GAAcnhB,EAAM+hB,oBCgEtE,MAAMzb,GAAuC,aAktB9B0b,OAhtBiDhiB,IAAU,IAAD,UACvE,MAAOiiB,EAAaC,GAAkBpd,YAAe,IAC9Cqd,EAA0BC,GAA+Btd,YAAe,IACxEwT,EAAW+J,GAAgBvd,WAAe,KAC1Cwd,EAAaC,GAAkBzd,gBACqB0B,KAAzC,QAAhB,EAAAxG,EAAMwiB,kBAAU,aAAhB,EAAkBC,UAAUziB,EAAMoW,YAAYsM,QAC1Cjc,KAAgBkc,QAChBlc,KAAgBmc,mBAEhB,mBAAEC,GAAuBC,cAEzBC,EAAWC,cAEjBle,aAAgB,KACd9E,EAAMijB,wBAAwB,MAE7B,IAOHne,aAAgB,KAMd,GALAie,EAASG,0BAAgBljB,EAAMmW,eAEN,IAArBnW,EAAMoW,YAAoBpW,EAAMmjB,cAClCjB,GAAe,IAEZliB,EAAMwiB,WACT,OAIF,IAAIpM,EAAapW,EAAMoW,WACnBpW,EAAMoW,YAAcpW,EAAMwiB,WAAWC,UAAUzd,SACjDoR,EAAapW,EAAMwiB,WAAWC,UAAUzd,OAAS,GAGnD,MAAMoe,EAAqBpjB,EAAMwiB,WAAWC,UAAUrM,GAEtD,IAAIoD,EAAS,GACT4J,EAAS3W,OAAS4W,IAAcC,cAEhC9J,EADE4J,EAAS5J,OACD4J,EAAkC5J,OAElC4J,EAAkCG,kBAIhDvjB,EAAMijB,wBAAwBzJ,KAE7B,IAMH1U,aAAgB,KACd0e,OAMF1e,aAAgB,KAEX+d,GACAP,IAAgB7b,KAAgBgd,cAC/BnB,IAAgB7b,KAAgBid,iBAElCnB,EAAe9b,KAAgBmc,oBAEhC,CAACC,EAAoB7iB,EAAOsiB,IAK/B,MAAMqB,EAAWC,IACfxL,EAAIE,EAAWsL,IAiDXC,EAAY/e,SAAawd,GAC/BuB,EAAUlb,QAAU2Z,EACpB,MAAMwB,EAAa,KAEbD,EAAUlb,UAAYlC,KAAgBsd,WACxChB,EAASjP,0BAAgBxN,KAEzByc,EAASxP,qBAAWjN,KAGtB,MAAM4G,EAAe,CACnBoM,KAAM5L,KAAKC,MACXlB,KAAM,kBACNuX,KAAMC,IAAgBC,KAGxBP,EAAQzW,IAUJsW,EAAsB,KAAO,IAAD,EAEhC,QAAyBhd,IAArBxG,EAAMwiB,WACR,OAIF,MAAMrM,EAAenW,EAAMmW,aACrBC,EAAapW,EAAMoW,WAEzB,GAAIpW,EAAMmkB,qBAAuBhO,GAAgBnW,EAAMokB,mBAAqBhO,EAC1E,OAGF,MAAMgN,EAAWpjB,EAAMwiB,WAAWC,UAAUrM,GAE5C,IAAI8F,EAA0C,GAC1CmI,EAAsB,GACtBC,EAAwB,GACxBC,EAAyB,GACzBC,EAA8B,GAElC,GAAIpB,EAAS3W,OAAS4W,IAAcC,YAAa,CAC/C,MAAMmB,EAAerB,EAYJ,IAAD,IAAhB,GAXAlH,EAAqBuI,EAAavI,mBAClCoI,EAAgBG,EAAaC,QAC7BH,EAAiBE,EAAaE,SAC9BH,EAAkBC,EAAaxI,UAE/BoI,EAAcI,EAAajL,OACtB6K,IACHA,EAAcI,EAAalB,mBAIxBjL,EACH+J,EACElJ,EAAa,GAAGnZ,EAAMwiB,WAAmBoC,UAAU5kB,EAAMoW,aAAc,CACrEjE,QAAS0S,UAAQC,MACjBC,iBAAyB,OAAR3B,QAAQ,IAARA,GAAiB,QAAT,EAARA,EAAUxQ,eAAO,OAAU,QAAV,EAAjB,EAAmBoS,gBAAQ,WAAnB,EAAR,EAA6BC,OAAQ,OACtDZ,iBAMR,GAAIjB,EAAS3W,OAAS4W,IAAc6B,OAAQ,CAC1C,MAAMT,EAAerB,EACrBkB,EAAgBG,EAAaC,QAC7BH,EAAiBE,EAAaE,SAGhC3kB,EAAMmlB,8BAA8B,IACpCpC,EAAS7M,oCAA0BC,EAAcC,IACjD2M,EACErN,yBAAepP,GAAmB,CAChC4V,qBAEAkJ,WAAY,CACV,CACElQ,MAAOmP,EACPgB,aAAcf,EACdgB,cAAef,EACf7P,iBAAkB,GAClBH,YAAa,KAGjBiQ,qBAGJzB,EACErR,yBAC6B,QADf,EACZ0R,EAASxQ,QAAQ2S,kBAAU,QAAIC,IAAwBhD,WAAW7Q,SAClErL,KAGJyc,EAASpQ,4BAAkBrM,GAAmB8c,EAASxQ,SAAS,IAChE5S,EAAMylB,+BAA8B,GAChCpB,GACFrkB,EAAMijB,wBAAwBoB,IAQ5Bla,EAAiF,CACrFnK,EACAoW,KACI,IAAD,cACH,MAAMsP,OAA8Dlf,IAAnDxG,EAAMwiB,WAAYC,UAAUrM,GAAYsM,OAEnD1F,EAA0B,CAAC2I,EAAuBnM,KACtDxZ,EAAMijB,wBAAwBzJ,IAG1BhV,EALoE,YAAX,QAAvC,EAAAxE,EAAMwiB,WAAYC,UAAUrM,UAAW,aAAvC,EAAyC3J,MAM7D,CACE,CACE5I,MAAQ,YAAWuS,EAAa,IAChC7Q,SAAUxB,IAAU6hB,MACpBngB,KAAM,eAACgc,GAAA,EAAQ,CAACpd,QAASrE,EAAMwiB,WAAYC,UAAUrM,GAAY/R,UACjE+B,GAAIK,KAAgBmc,kBAEtB,CACE/e,MAAQ,0BACR0B,SAAUxB,IAAU8hB,UACpBpgB,KAAM,eAACgc,GAAA,EAAQ,CAACpd,QAASrE,EAAMwiB,WAAYsD,cAC3C1f,GAAIK,KAAgBsf,UAEtB,CACEliB,MAAO,iBACP0B,SAAUxB,IAAUiiB,WACpBvgB,KACE,eAAC,GAAiC,CAChCsY,QAAS/d,EAAM+d,QACfmB,WAAYE,IAAgB,aAC1Bpf,EAAMkf,YACa,QAAjB,EAAClf,EAAMwiB,kBAAU,aAAhB,EAAkBC,UAAUrM,IAAuChQ,GACpEgZ,IAGJpC,wBAAyBA,EACzB8B,eAEoB,QAFN,EACK,QADL,EACX9e,EAAMwiB,kBAAU,OAAuB,QAAvB,EAAhB,EAAkBC,UAAUrM,UAAW,WAAvB,EAAjB,EACI0I,sBAAc,QAAI,KAI5B1Y,GAAIK,KAAgBwf,eAEtB,CACEpiB,MAAO,sBACP0B,SAAUxB,IAAUmiB,MACpBzgB,KACE,eAAC,GAA6B,CAC5BuX,wBAAyBA,EACzBS,sBAEwB,QAFH,EACF,QADE,EAClBzd,EAAMwiB,kBAAU,OAAuB,QAAvB,EAAhB,EAAkBC,UAAUrM,UAAW,WAAvB,EAAjB,EACI+P,0BAAkB,QAAI,KAIhC/f,GAAIK,KAAgB0f,qBAGxB,CACE,CACEtiB,MAAQ,YAAWuS,EAAa,IAChC7Q,SAAUxB,IAAU6hB,MACpBngB,KACE,eAACgc,GAAA,EAAQ,CACPxc,UAAU,uBACVZ,QAASrE,EAAMwiB,WAAYC,UAAUrM,GAAY/R,UAGrD+B,GAAIK,KAAgBmc,kBAEtB,CACE/e,MAAQ,WACR0B,SAAUxB,IAAU8hB,UACpBpgB,KACE,eAACgc,GAAA,EAAQ,CAACxc,UAAU,uBAAuBZ,QAASrE,EAAMwiB,WAAYsD,cAExE1f,GAAIK,KAAgBsf,UAEtB,CACEliB,MAAQ,aACR0B,SAAUxB,IAAUqiB,SACpB3gB,KACE,eAAC,GAAqB,CACpBwW,UAAWjc,EAAMwkB,gBACjBtI,mBAEEwJ,IAAa1lB,EAAMqmB,wBAAwBC,iBACvCtmB,EAAMkc,mBACN,GAENC,mBAAoB/V,GAAM2c,EAASpP,uBAAarN,GAAmBF,IACnEE,kBAAkB,eAGtBF,GAAIK,KAAgBsd,aAIxB2B,GACFlhB,EAAK+hB,KAAK,CACR1iB,MAAQ,cACR0B,SAAUxB,IAAUyiB,KACpB/gB,KACE,eAAC,GAAgC,CAC/Bqc,WAAY9hB,EAAMwiB,WAAYC,UAAUrM,GAAYsM,OAAQuC,KAC5DlD,SAAU/hB,EAAMwiB,WAAYC,UAAUrM,GAAY2L,SAClDT,GAAIthB,EAAMwiB,WAAYC,UAAUrM,GAAYkL,GAC5CC,MAAOvhB,EAAMwiB,WAAYC,UAAUrM,GAAYmL,MAC/CC,SAAUxhB,EAAMwiB,WAAYC,UAAUrM,GAAYoL,WAGtDpb,GAAIK,KAAgBkc,UAIA3iB,EAAMwiB,WAAYC,UAAUrM,GAAYxD,QAAQoS,SAC9ByB,QACpBC,SAAS,eAC7BliB,EAAK+hB,KAAK,CACR1iB,MAAQ,cACR0B,SAAUxB,IAAU4iB,UACpBlhB,KAAM,eAAC,GAAqB,IAC5BW,GAAIK,KAAgBmgB,aAexB,MAAO,CACLjhB,cAAe2c,EACf9d,KAAM,CACJqiB,kBAAmBriB,EACnBsiB,iBAAkB,IAEpBzgB,SAjBmB,CACnB0gB,EACAC,EACAle,KAEIie,IAAaC,GAGjBzE,EAAewE,IAUfzgB,kBAAmB,eAQjBsE,EAAmDwL,IAAwB,IAAD,EAC9E,MAAM6Q,EAAe,YAAWjnB,EAAMknB,YAAYC,aAAmBnnB,EAAMwiB,WAAY/V,QACjF2a,EAA0BH,EAAe,IAAGjnB,EAAMwiB,WAAYpc,GAAGihB,aACjEC,EAAqC,CAAClR,EAAa,EAAGpW,EAAMwiB,WAAYC,UAAUzd,QAMlFuiB,EAAc,KAClBC,KAAQjB,KAAKa,EAA2B,KAAIhR,EAAa,GAAGiR,cAC5D9E,EAAe9b,KAAgBmc,mBAE3B6E,EAAgB,IAAMD,KAAQjB,KAAKU,GAOnCS,EAAmBC,GAChB,KAGL,MAAMC,EACJ5nB,EAAMwiB,WAAYC,UAAUoF,QAAOC,GAAoB,OAAdA,EAAGtO,SAAiBxU,OAAS,EAGxE,GAAIoR,EAAawR,EACf,OAAOD,IAGT,MAAMvE,EAAqBpjB,EAAMwiB,WAAYC,UAAUrM,GACvD,GAAIgN,EAAS3W,OAAS4W,IAAc0E,IAAK,CAEvC,GAAwB,OAApB3E,EAAS5J,OACX,OAAO7Z,aAAmB,2BAA4B,KAIxD,QAA4C6G,IAAvC4c,EAA0B4E,SAC7B,OAAOL,IAET,GAAIvE,EAAS5J,SAAY4J,EAA0B4E,SACjD,OAAOroB,aAAmB,kCAAmC,UAE1D,GAAIyjB,EAAS3W,OAAS4W,IAAcC,YAAa,CAItD,IAHkBtjB,EAAMwkB,gBAAgB5E,QAAO,CAACqI,EAAK5L,IAC5C4L,GAAOC,oBAAU7L,EAAS/E,UAAY+E,EAAS7C,SACrD,GAED,OAAO7Z,aAAmB,8CAA+C,KAG7E,OAAOgoB,KAYLQ,EACJ,eAACC,EAAA,EAAoB,CACnBb,YACEvnB,EAAMwiB,WAAYC,UAAUrM,GAAYiS,SACpCX,EAAgBH,GAChBA,EAENE,cACEznB,EAAMwiB,WAAYC,UAAUrM,GAAYiS,SACpCX,EAAgBD,GAChBA,EAENH,iBAAkBA,GACd,iBAIFgB,EACJ,eAACC,EAAA,EAAwB,CACvBtkB,QAhFoB,KACtBujB,KAAQjB,KAAKa,EAA2B,KAAIhR,EAAa,GAAGiR,cAC5D9E,EAAe9b,KAAgBmc,mBA+E7B0E,iBAAkBA,GACd,qBAIFkB,EACJ,eAACC,EAAA,EAA4B,CAACnB,iBAAkBA,GAAsB,iBAGlEoB,EACJ1oB,EAAMwiB,WAAYC,UAAUrM,GAAY3J,OAAS4W,IAAc0E,IAC7D,eAACY,EAAA,EAAqB,CAAC1kB,QAnCE,KAC3Bme,GAA4B,KAkCgC,kBACxD,KAEAwG,EAAY,eAACC,EAAA,EAAmB,CAACC,iBAAkBhF,GAAgB,OAEnEiF,EACJ/oB,EAAM+d,SACN/d,EAAMwiB,WAAYC,UAAUrM,GAAY3J,OAAS4W,IAAcC,YAC7D,eAAC,IAAuB,CACtB5Y,kBAAmB1K,EAAM0K,kBACzBse,YAhDc,IAClBhpB,EAAMkf,WAAWlf,EAAMwiB,WAAYC,UAAUrM,GAAYhQ,GAAIpG,EAAMolB,WAAW,GAAGlQ,QAgDzE,QAEJ,KAIAhD,EACJ,eAAC/C,EAAA,EAAuB,CACtBG,oBAJwB,OAKxBF,cAAeyV,UAAQC,MACvBzV,cACyD,QAD5C,EACXrP,EAAMwiB,WAAYC,UAAUrM,GAAYxD,QAAQ5R,eAAO,QAAIioB,KAAUC,qBAEvEliB,UAAU,GACN,WAIR,MAAO,CACLmiB,cAAgBtG,EAEZ,CAACkG,EAAYL,GADb,CAACE,EAAWG,EAAYL,EAAaxW,GAEzCkX,YAAa,CAACd,EAAgBE,EAAcL,KAuDhD,QAAyB3hB,IAArBxG,EAAMwiB,YAAkE,IAAtCxiB,EAAMwiB,WAAWC,UAAUzd,OAC/D,OACE,eAAC,IAAa,CACZC,UAAWG,IAAW,kBAAmByK,IAAQ8Q,MACjD0I,YAAY,2BACZvlB,KAAM,eAAC,IAAO,CAAC0B,KAAM8jB,IAAYC,UAKvC,MAAMC,EACJ,eAAC,IAAM,CAACvkB,UAAU,sBAAsBwW,OAAQwG,EAAY,SAC1D,gBAAC,IAAI,WACH,eAACR,GAAA,EAAQ,CAACpd,QAASrE,EAAMwiB,WAAWsD,cACpC,eAAC,IAAM,CACL7gB,UAAU,6BACVhB,QAAS,IAAMie,GAAe,GAC9BpT,KAAK,kBAMP2a,EAAe,IAAMrH,GAA4B,GACjDsH,EACJ,gBAAC,IAAM,CACLzkB,UAAU,mBACVnB,KAAMC,IAAU4lB,MAChBC,oBAAoB,EACpBnO,OAAQ0G,EACR0H,QAASJ,EACT7iB,MAAM,8BAA6B,UAEnC,uBAAK3B,UAAW4K,IAAQia,YAAY,UAClC,eAACrI,GAAA,EAAQ,CAACpd,QAAQ,iDAClB,eAACod,GAAA,EAAQ,CAACpd,QAAQ,4FAEpB,sBAAKY,UAAW4K,IAAQka,cAAc,SACpC,gBAAC,IAAW,WACV,eAAC9d,EAAA,EAAa,CAACpI,MAAM,SAASI,QAASwlB,EAAcvd,QAAS,CAAEF,SAAS,KACzE,eAACC,EAAA,EAAa,CACZpI,MAAM,UACNI,QAAS,KACPwlB,IACAzpB,EAAMijB,wBACHjjB,EAAMwiB,WAAYC,UAAUrM,IAAqCmN,kBAEpEvjB,EAAMylB,+BAA8B,IAEtCvZ,QAAS,CAAEF,SAAS,EAAOxM,OAAQC,IAAOK,kBAQ9CsW,GACJpW,EAAMoW,YAAcpW,EAAMwiB,WAAWC,UAAUzd,OAC3ChF,EAAMwiB,WAAWC,UAAUzd,OAAS,EACpChF,EAAMoW,WACNgN,GAAqBpjB,EAAMwiB,WAAWC,UAAUrM,IAChD/K,GACJ+X,GAAS3W,OAAS4W,IAAcC,aAAeF,GAAS3W,OAAS4W,IAAc6B,OAC3E,CACE8E,cAAe,SACf5E,WAAYplB,EAAMolB,WAAWpiB,IAAIinB,KACjCC,gBAAiB,GACjB9a,cAAeyV,UAAQC,MACvBzV,cAAuC,QAA1B,EAAE+T,GAASxQ,QAAQ5R,eAAO,QAAIC,UAAQC,QACnDoR,oBAAqB8Q,GAASxQ,QAAQoS,SAASC,MAAQ,OACvDkF,0BAA4B7U,GAC1ByN,EAAS1N,gCAAsB/O,GAAmBgP,IACpDwT,iBAAkBhF,EAClBb,wBAAyBjjB,EAAMijB,wBAC/BwC,8BAA+BzlB,EAAMylB,8BACrCN,8BAA+BnlB,EAAMmlB,8BACrCiF,yBAA0B,CAACnT,EAAaoT,EAAalT,IACnD4L,EAAS/L,6BAAmB1Q,GAAmB2Q,EAAKoT,EAAKlT,IAC3DmT,iBAAiB,EACjBjkB,SAlkBe,CAACkkB,EAAiBthB,KACnCjJ,EAAMylB,+BACRzlB,EAAMylB,+BAA8B,GAGtCzlB,EAAMijB,wBAAwBsH,GAE9B,MAAMrd,EAAe,CACnBoM,KAAM5L,KAAKC,MACXlB,KAAM,YACNuX,KAAM/a,GAGR0a,EAAQzW,IAsjBFsd,eAnjBsBC,IAC5B,MAAMvd,EAAe,CACnBoM,KAAM5L,KAAKC,MACXlB,KAAM,uBACNuX,KAAMyG,EAAUC,aAGlB/G,EAAQzW,IA6iBFyd,kBA1iByBF,IAC/B,MAAMG,EAAwBH,EAAUI,WAClCC,EAAuBL,EAAUK,cACvC,IAAKC,kBAAQH,EAAMI,MAAOJ,EAAMK,KAAM,CACpC,MAAM/d,EAAe,CACnBoM,KAAM5L,KAAKC,MACXlB,KAAM,qBACNuX,KAAM,CAAE4G,QAAOE,gBAGjBnH,EAAQzW,WAkiBN1G,EACAgF,GAAW,CACfuc,IAAK3E,GACL8H,gBAAkBC,GAChBnrB,EAAMkf,WAAWlf,EAAMwiB,WAAYC,UAAUrM,IAAYhQ,GAAI+kB,IAE3Dxf,GAAY,CAChByf,wBAAyB,IAAMrI,EAAS5R,gCAAsB7K,KAC9D+kB,sBAAuB,IAAMtI,EAAS1R,8BAAoB/K,KAC1DnC,eAAgBnE,EAAMmE,eACtBmnB,sBAAwBC,GACtBxI,EAASnO,0BAAgB2W,EAAUjlB,KACrCklB,OAAQxrB,EAAMwrB,OACdC,UAAWzrB,EAAMyrB,UACjBrc,cAAeyV,UAAQC,MACvBzV,cAAuC,QAA1B,EAAE+T,GAASxQ,QAAQ5R,eAAO,QAAIC,UAAQC,QACnD6jB,iBAAyB,OAAR3B,SAAQ,IAARA,IAAiB,QAAT,EAARA,GAAUxQ,eAAO,OAAU,QAAV,EAAjB,EAAmBoS,gBAAQ,WAAnB,EAAR,EAA6BC,OAAQ,OACtDyG,YA3HkB,MAClB,MAAMC,EACJ,eAAChoB,EAAA,EAAqB,CACpBC,sBAAuB,IAAMmf,EAAS9P,0BAAgB3M,MAClD,cAYR,MAAO,CAPL,eAACpC,EAAA,EAAoB,CACnBC,eAAgBnE,EAAMmE,eACtBC,UAAWpE,EAAMoE,WACb,aAIYunB,IA2GPD,IAET5gB,GAAe,CACnBtG,KAAM,IAEFonB,GAAiC,CACrChhB,gBAAiBA,EAAgBwL,IACjC/K,qBAAsBA,GACtBZ,8BAAgCohB,GAC9B9I,EAASlR,kCAAwBga,EAAcvlB,KACjDoE,kBAAmB1K,EAAM0K,kBACzBc,SAAUA,GACVV,aAAcA,GACdhF,kBAAmB9F,EAAM8F,kBACzBqE,iBAAkBA,EAAiBnK,EAAOoW,IAC1CzK,UAAWA,IAEPmgB,GAA6C,CACjDzgB,qBAAsBA,GACtBX,kBAAmB1K,EAAM0K,kBACzBc,SAAUA,GACVG,UAAWA,GACXb,aAAcA,GACdihB,uBA/KqE3V,KAkB9D,CACL4V,sBAAuB,IAClBphB,EAAgBwL,OAElBjM,EAAiBnK,EAAOoW,GAC3B/P,SAtBmB,CACnB0gB,EACAC,EACAle,KAEIie,IAAaC,IAMbA,IAAcvgB,KAAgBsd,YAAcgD,IAAatgB,KAAgBid,iBAE3EnB,EAAewE,KAUjBphB,cAAe2c,EACfwG,iBAAkBhF,IAsJIiI,CAAuB3V,KAGjD,OACE,uBAAKnR,UAAWG,IAAW,kBAAmByK,IAAQ8Q,MAAM,UACzD6I,EACAE,EACC7G,EAGA,eAACoJ,GAAA,EAAe,IAAKH,KAFrB,eAACnkB,GAAA,EAAS,IAAKikB,SCzzBvB,MAoBMtlB,GAAuC,aAqB9B4lB,OALsBC,aApCwC,CAACC,EAAOpsB,KAC5E,CACLknB,SAAUkF,EAAMC,QAAQnF,SACxB1E,WAAY4J,EAAMC,QAAQC,YAAYzqB,IAAI7B,EAAMmW,cAChD+F,mBAAoBkQ,EAAMG,WAAW/J,WAAWtG,mBAChDsQ,qBAAsBJ,EAAMG,WAAW/J,WAAWgK,qBAClDpH,WAAYgH,EAAMG,WAAW/J,WAAW4C,WACxCZ,gBAAiB4H,EAAMG,WAAW/J,WAAWgC,gBAC7C9Z,kBAAmB0hB,EAAMG,WAAW/J,WAAW9X,kBAC/CtG,UAAWgoB,EAAMG,WAAW/J,WAAWpe,UACvCqoB,YAAaL,EAAMG,WAAW/J,WAAWiK,YACzCC,gBAAiBN,EAAMG,WAAW/J,WAAWkK,gBAC7ClB,OAAQY,EAAMG,WAAW/J,WAAWgJ,OACpCC,UAAWW,EAAMG,WAAW/J,WAAWiJ,UACvC3lB,kBAAmBsmB,EAAMG,WAAW/J,WAAW1c,kBAC/Cqe,mBAAoBiI,EAAMG,WAAW/J,WAAWmK,kBAChDvI,iBAAkBgI,EAAMG,WAAW/J,WAAWoK,oBAMiB7J,GACjE8J,YACE,CACE5J,wBAA0B6J,GAAgB3Y,4BAAkB2Y,EAAKxmB,IACjE6e,8BAAgC5Q,GAC9BD,8BAAoBC,EAAajO,IACnCnC,eAAgB,IAAMsP,mBAASnN,IAC/B4Y,WAAY6N,eACZtH,8BAAgC/a,GAC9B+L,kCAAwBnQ,GAAmBoE,IAE/CqY,IAGiCoJ,CAGnCnK,I,mBC/CK,SAASgL,GAAgC7W,GAC9C,OAAQ8W,GACNA,EAAcpF,QAAOqF,IAAMA,EAAE9P,eAAiB8P,EAAEC,gBAAkBhX,IAM/D,SAASiX,GAAgC7W,GAC9C,OAAQ0W,GACNA,EAAcpF,QAAOqF,GAAKA,EAAE9P,gBAAkB7G,IAW3C,SAAS8W,GACdC,GAEA,OAAQL,GACNA,EAAcpF,QAAOqF,GACI,YAAnBI,OACyB9mB,IAApB0mB,EAAE9P,eAEH8P,EAAE9P,eAAiBkQ,IAAmBJ,EAAEK,kB,cCNtD,MAqDMC,GAA2B/gB,IAC/B,OAAQA,GACN,KAAKtJ,KAAkBsqB,IACrB,MAAO,0BACT,KAAKtqB,KAAkBuqB,SACrB,MAAO,mCACT,KAAKvqB,KAAkBwqB,WACrB,MAAO,uCACT,KAAKxqB,KAAkByqB,UACrB,MAAO,0BACT,KAAKzqB,KAAkB0qB,YACrB,MAAO,wCACT,KAAK1qB,KAAkB2qB,OACrB,MAAO,4CACT,KAAK3qB,KAAkB4qB,YACrB,MAAO,0BACT,QACE,MAAO,yBAIEC,OA1E8ChuB,IAC3D,MAAMitB,EAAgBjtB,EAAMiuB,mBACxBjuB,EAAMiuB,mBAAmBjuB,EAAMitB,eAC/BjtB,EAAMitB,cAEV,IAAKA,EAAcjoB,OACjB,OAAO,KAGT,MAAMkpB,EACJ,eAAC,IAAG,CAAC1uB,OAAQC,IAAOK,OAAQquB,OAAO,EAAMC,MAAOpuB,EAAMouB,MAAM,SACzDnB,EAAcjoB,SAInB,IAAKhF,EAAMquB,aAAc,CACvB,MAAMC,EAAuBzvB,GAKzB,eAAC,IAAG,CACFoG,UAAU,gBAEV+G,SAAS,EACTuiB,WAAW,EACXC,SATa,KACfxuB,SAAMyuB,gCDL0BroB,ECK6BvH,EAAauH,GDJxE6mB,GAAkCA,EAAcpF,QAAOqF,GAAKA,EAAE9mB,KAAOA,MADxE,IAAiCA,GCaX,SAElBonB,GAAwB3uB,EAAa4N,OALhC,GAAE5N,EAAauH,MAUrBsoB,EAAmB,sBAAKzpB,UAAU,MAAK,SAAEgoB,EAAcjqB,IAAIsrB,KAEjE,OACE,eAAC,KAAQ,CACPrpB,UAAWjF,EAAMiF,UACjBZ,QAASqqB,EACTC,gBAAiBC,IAAuBC,MACxCnS,UAAWzd,IAAS6vB,MACpBC,eAAgB,GAChBC,gBAAiB,GACjBC,MAAM,EAAK,SAEVf,IAKP,OAAOA,GC1DMgB,OAFoB/C,aAZoCC,IAAK,CAC1Ea,cAAeb,EAAMC,QAAQY,kBAGoClK,GACjE8J,YACE,CACE4B,+BAAgCU,4BAElCpM,IAG+BoJ,CAA6C6B,ICLjEoB,OAVsB,IACnC,sBAAKnqB,UAAWG,IAAW,SAAUyK,IAAQ8Q,MAAM,SACjD,eAAC,IAAa,CACZ7c,KAAMC,IAAU4lB,MAChB/iB,MAAM,uBACNyiB,YAAY,sFCwDlB,MAsUMgG,GAAqBC,IACzB,IAAI/pB,EACA/F,EACA+vB,EAEJ,OAAQD,GACN,KAAKE,IAAgB1B,OACnBvoB,EAAWxB,IAAUyiB,KACrBhnB,EAASC,IAAOC,QAChB6vB,EAAU,eACV,MACF,KAAKC,IAAgB7M,QACnBpd,EAAWxB,IAAU0rB,KACrBjwB,EAASC,IAAOG,QAChB2vB,EAAU,sBACV,MACF,KAAKC,IAAgBE,KACnBnqB,EAAWxB,IAAU4rB,MACrBnwB,EAASC,IAAOK,OAChByvB,EAAU,iBACV,MACF,QAEEhqB,EAAWxB,IAAU6rB,QACrBpwB,EAASC,IAAOowB,QAChBN,EAAW,iBAIf,OACE,eAAC,IAAQ,CAACtqB,UAAU,wBAAwBZ,QAASkrB,EAAS7S,UAAWzd,IAAS6vB,MAAM,SACtF,eAAC,IAAI,CAAChrB,KAAMyB,EAAU/F,OAAQA,OAK9Bgc,GAAiB,CAAC3X,EAAe4X,EAAiBC,IACtD,eAACzP,EAAA,EAAa,CACZpI,MAAOA,EACPC,KAAM2X,EAAS1X,IAAUsX,WAAatX,IAAU4X,YAChD1X,QAASyX,EACTxP,QAAS,CAAEF,SAAS,EAAM/G,UAAW,qBAI1B6qB,OAnX+B9vB,IAC5C,MAAM+vB,EAASC,eACT,mBAAEnN,GAAuBC,eACxBmN,EAAkBC,GAAuBprB,WAA0C,OACnFqrB,EAAuBC,GAA4BtrB,YAAwB,IAC3EurB,EAAuBC,GAA4BxrB,YAAwB,IAC3EyrB,EAAyBC,GAA8B1rB,YAAwB,GAEhF2rB,EAA0B,IAAML,GAA0BD,GAC1DO,EAAwB,IAAMJ,GAA0BD,GACxDM,EAA4B,IAAMH,GAA4BD,GAC9DK,EAA0B,IAAMV,EAAoB,MAQpDW,EAAmBvE,GAAsCwE,iBAAOxE,EAAa,CAACyE,IAAMA,EAAE3qB,KAEtF4qB,EAAuB,CAACC,EAA8B9rB,IAC1D,gBAAC,IAAM,CACL6B,SAAUiqB,EAASC,SAAWC,IAAmBC,UACjDttB,KAAMC,IAAUstB,QAChB7xB,OAAQyxB,EAASC,SAAWC,IAAmBC,UAAY3xB,IAAOK,OAASL,IAAOsM,KAClFC,SAAS,EAGT/H,QAAS,IAAMisB,EAAoBe,GAAU,UAE7C,uBAAMhsB,UAAU,qBAAoB,sBACpC,uBAAMA,UAAU,oBAAmB,4BAIjCqsB,EAAgCL,IACpC,IAAIntB,EACAD,EACA0tB,EAAwB,GAE5B,OAAQN,EAASC,QACf,KAAKC,IAAmBK,cACtB1tB,EAAOC,IAAU0tB,KACjB5tB,EAAQ,UACR,MACF,KAAKstB,IAAmBO,WACtB5tB,EAAOC,IAAU0tB,KACjB5tB,EAAQ,WACR0tB,EAAgB,WAChB,MACF,KAAKJ,IAAmBC,UACtBttB,EAAOC,IAAU4tB,KACjB9tB,EAAQ,SACR0tB,EAAgB,WAChB,MACF,KAAKJ,IAAmBvD,UACtB9pB,EAAOC,IAAU6tB,SACjB/tB,EAAQ,SACR0tB,EAAgB,cAChB,MACF,QAEEztB,EAAOC,IAAU0tB,KACjB5tB,EAAQ,SAGZ,OACE,eAAC,IAAO,CACNguB,GAAK,YAAW7xB,EAAMknB,YAAYC,aAChC8J,EAASxkB,SACNwkB,EAAS7qB,GAAGihB,cAAc4B,KAAU6I,oBAAoB,SAE7D,gBAAC,IAAM,CACLhuB,KAAMA,EACNkI,SAAS,EACT/H,QAAS,IACPjE,EAAMyuB,+BAA+BzB,GAAgCiE,EAAS7qB,KAC/E,UAED,uBAAMnB,UAAU,qBAAoB,SAAEpB,IACtC,uBAAMoB,UAAU,oBAAmB,SAAEssB,UAevCQ,EAAmB,CACvBd,EACA9rB,EACA6sB,EACAC,KAEA,MAAMC,EACuB,WAA3BjB,EAAS3B,gBAA+BtvB,EAAMqmB,wBAAwBC,iBAClE6L,EAAQtP,EAAqB,EAAI,EACvC,OACE,+BACE,gBAAC,IAAI,CAAC5d,UAAU,cAAcsV,UAAWC,IAAUC,IAAI,UACrD,uBAAKxV,UAAY,UAASmtB,OAAOD,qBAAyB,UACxD,eAAC,GAAiB,CAChBltB,UAAU,QACVgpB,mBAAoBjB,GAAgCiE,EAAS7qB,IAC7DgoB,OAAO,IAET,sBACEiE,IAAI,aACJptB,UAAY,eAAcgsB,EAASC,SACnCoB,IAAKrB,EAASsB,WAAatB,EAASsB,WAAaC,SAGrD,uBAAKvtB,UAAY,UAASmtB,OAAO,GAAKD,kBAAsB,UACzDM,EAAsBxB,EAAU9rB,EAAO8sB,GACxC,sBAAKhtB,UAAU,aAAY,SACzB,eAAC,IAAE,UACAitB,EAAa,OAAMjB,EAAS3P,QAAQ2P,EAAS1P,QAAW,WAAU0P,EAAS1P,YAGhF,sBAAKtc,UAAU,sBAAqB,SAClC,eAACwc,GAAA,EAAQ,CAACpd,QAAS4sB,EAASyB,iBAE9B,uBAAKztB,UAAU,iBAAgB,UAC7B,iCACE,gBAAC,IAAI,CAACA,UAAU,mBAAkB,UAChC,eAAC,IAAI,CAACA,UAAU,mBAAmB8B,SAAU,GAAIjD,KAAMC,IAAU4uB,WAC/D,GAAE7R,GAAUmQ,EAAS2B,QAAU,SAAW,YAAYzR,GACtD8P,EAAS2B,aAGZ9R,GAAUmQ,EAAS2B,SAClB,gBAAC,IAAI,CAAC3tB,UAAU,mBAAkB,UAChC,eAAC,IAAI,CAACA,UAAU,mBAAmB8B,SAAU,GAAIjD,KAAMC,IAAU0rB,OAC/D,QAAOtO,GAAc8P,EAAS4B,iBAItC,sBAAK5tB,UAAU,iBAAgB,SAC5B+sB,EAAsBV,EAA6BL,GAAY,iBAxChE9rB,IAiDRstB,EAAwB,CAC5BxB,EACA9rB,EACA8sB,IAEA,uBAAKhtB,UAAU,iBAAgB,UAC7B,eAAC,IAAI,CAAC6tB,WAAW,EAAK,SACpB,gBAAC,IAAE,CAAC7tB,UAAU,gBAAe,UAC1BgsB,EAASrqB,MACTqqB,EAAS8B,QACR,eAAC,IAAQ,CACP9tB,UAAU,wBACVZ,QAAQ,yCAAwC,SAEhD,eAAC,IAAI,CAACP,KAAK,WAEX,KACHmuB,EAAsB5C,GAAkB4B,EAAS3B,eAAiB,UAGvE,sBAAKrqB,UAAU,iBAAgB,SAAE+rB,EAAqBC,SAKlD+B,oBAAqBC,EAA6B,UAAEC,GAAclzB,EACpEgzB,EAAsBluB,WAC1B,IAC+B,OAA7BmuB,QAA6B,IAA7BA,OAA6B,EAA7BA,EAA+BpL,QAAOsL,GAAMA,EAAG1mB,OAASzM,EAAMqmB,wBAAwB5Z,QACxF,CAACwmB,EAA+BjzB,EAAMqmB,wBAAwB5Z,OAE1D0J,EAA8Bid,aAAiBrD,EAAO5Z,cACtDC,EAAqBgd,aAAiBrD,EAAO3Z,aAAe6S,KAAU6I,kBAI5E,GAAqB,OAAjB3b,QAAiD3P,IAAxBwsB,EAAmC,CAC9D,MAAM/B,EAAW+B,EAAoBnL,QAAOkJ,GAAKA,EAAE3qB,KAAO+P,IAAc,GACxE,IAAK8a,EACH,OAAO,eAAC,GAAkB,IAE5B,MAAMoC,EAAwD,CAC5Dld,eACAC,aACA+M,aAAc8N,EAASC,SAAWC,IAAmBK,cACrDzT,SACG/d,EAAMkzB,WACNjC,EAASC,SAAWC,IAAmBvD,YAAc9M,GAAUmQ,EAAS4B,SAC3ExM,wBAAyBrmB,EAAMqmB,yBAEjC,OAAO,eAAC,GAA4B,IAAKgN,IAI3C,IAAIppB,EACJ,QAA4BzD,IAAxBwsB,EACF/oB,EAAU,eAAC,IAAa,CAACof,YAAY,yBAAyBvlB,KAAM,eAAC,IAAO,WACvE,GAAmC,IAA/BkvB,EAAoBhuB,OAC7BiF,EAAU,eAAC,IAAa,CAACrD,MAAM,4BAA4B9C,KAAMC,IAAUuvB,YACtE,CAEL,MAAMC,EAAsBtC,IACzBnQ,GAAUmQ,EAAS4B,WAAa/R,GAAUmQ,EAAS2B,QAEhDY,EAAgB3C,EAAgBmC,EAAoBnL,OAAO0L,IAAqBvwB,KACpF,CAACiuB,EAAU9rB,IAAU4sB,EAAiBd,EAAU9rB,GAAQ+tB,GAAW,KAI/DO,EAAoBxC,IACvBnQ,GAAUmQ,EAAS4B,UACpB/R,GAAUmQ,EAAS2B,SACnB3B,EAASC,SAAWC,IAAmBvD,UACnC8F,EAAc7C,EAClBmC,EAAoBnL,QAAOoJ,GAAYwC,EAAiBxC,MACxDjuB,KAAI,CAACiuB,EAAU9rB,IAAU4sB,EAAiBd,EAAU9rB,GAAO,GAAM,KAG7DwuB,EAAc9C,EAClBmC,EAAoBnL,QAClBoJ,IAAawC,EAAiBxC,KAAcsC,EAAmBtC,MAEjEjuB,KAAI,CAACiuB,EAAU9rB,IAAU4sB,EAAiBd,EAAU9rB,GAAO,GAAM,KAG7DyuB,EACJ,uCACGpY,GAAe,WAAY+U,EAAyBI,GACrD,eAAC,IAAQ,CAAClV,OAAQ8U,EAAwB,SAAEiD,OAI1CK,EACJ,uCACGrY,GAAe,OAAQ6U,EAAuBK,GAC/C,eAAC,IAAQ,CAACjV,OAAQ4U,EAAsB,SAAEqD,OAIxCI,EACJ,uCACGtY,GAAe,SAAU2U,EAAuBM,GACjD,eAAC,IAAQ,CAAChV,OAAQ0U,EAAsB,SAAEwD,OAI9C1pB,EACE,uCACGupB,EAAcxuB,OAAS,EAAI4uB,EAA2B,KACtDF,EAAY1uB,OAAS,EAAI6uB,EAAyB,KAClDF,EAAY3uB,OAAS,EAAI8uB,EAAyB,QAMzD,MAAMC,EAAiB9D,EACrB,oFACqDA,EAAiBxjB,KAAKunB,cAAe,IACxF,mCAAU/D,EAAiBrpB,MAAK,OAAW,OAG7C,4EAEIqtB,EACJ,uCACGF,EACD,gGACiE,IAC/D,uBAAM9uB,UAAU,UAAS,gDAIzBivB,EACJ,gBAAC,IAAM,CACLjvB,UAAU,gBACVnB,KAAMC,IAAU4lB,MAChBC,oBAAoB,EACpBnO,OAA6B,OAArBwU,EACRpG,QAAS+G,EACThqB,MAAM,uBAAsB,UAE5B,sBAAK3B,UAAW4K,IAAQia,YAAY,SAClC,eAAC,IAAI,UAAEmK,MAET,sBAAKhvB,UAAW4K,IAAQka,cAAc,SACpC,gBAAC,IAAW,WACV,eAAC9d,EAAA,EAAa,CACZpI,MAAM,SACNI,QAAS2sB,EACT1kB,QAAS,CAAEF,SAAS,KAEtB,eAACC,EAAA,EAAa,CACZpI,MAAM,WACNI,QAzSe,KACnBgsB,IACFjwB,EAAMm0B,uBAAuBlE,EAAiB7pB,IAC9CwqB,MAuSM1kB,QAAS,CAAEF,SAAS,EAAOxM,OAAQC,IAAOK,kBAQpD,OACE,uBAAKmF,UAAU,aAAY,UACzB,eAACmvB,GAAA,EAAc,CAACnqB,QAASA,EAASoqB,oBAAqBr0B,EAAMs0B,gCAC5DJ,MCtWQK,OAFapI,aAfiD,CAACC,EAAOpsB,KAAK,CACxFgzB,oBAAqB5G,EAAMC,QAAQ2G,oBACnCE,WAAW9G,EAAMC,QAAQmI,MAAOpI,EAAMC,QAAQmI,OAASC,IAAKC,QAC5DxN,SAAUkF,EAAMC,QAAQnF,aAEyCnE,GACjE8J,YACE,CACE4B,+BAAgCU,2BAChCmF,8BAA+BK,2BAC/BR,uBAAwBS,oBAE1B7R,IAGwBoJ,CAA6C2D,I,UCX1D+E,OAViB,IAC9B,sBAAK5vB,UAAWG,IAAW,SAAUyK,IAAQ8Q,MAAM,SACjD,eAAC,IAAa,CACZ7c,KAAMC,IAAU4lB,MAChB/iB,MAAM,gBACNyiB,YAAY,gD,4BCDX,MAAMyL,GAAgC,CAC3CvC,WAAa,GAAEwC,mBACf1L,YAAa,GACb2L,eAAgB,IAGLC,GAAuC,CAClD5b,KAAM,GACNzS,MAAO,yBACP0a,GAAI,EACJ4T,cAAc,EACdC,QAAQ,EACRn2B,SAAU,EACVo2B,kBAAmB,GACnBC,UAAW,GACXC,eAAiB,GAAEC,mBACnBC,KAAMV,ICKOW,OAlBf,SAA0Bz1B,GACxB,MAAM,aAAE01B,EAAY,WAAEC,GAAe31B,EAE/B41B,EAAaC,qBAAWC,MAI9B,OACE,eAAC,IAAM,CACL7wB,UAAU,iBACV+B,UAAW0uB,EACX5xB,KAAMC,IAAUgyB,WAChB9xB,QAPmB,IAAM0xB,EAAWC,EAAWI,kBAAkBf,KAQjEnmB,KAAK,wB,SCOImnB,OAtBf,SAAqBj2B,GACnB,MAAM,WAAEk2B,EAAU,KAAEC,GAASn2B,EAc7B,OACE,eAAC,IAAQ,CAACqE,QAAQ,SAAQ,SACxB,eAAC,IAAM,CAACP,KAAMC,IAAUqyB,MAAO52B,OAAO,SAASyE,QAd7BoyB,gBACEC,aAAwB,CAC5CC,SAAW,oCAAmCJ,OAC9CK,cAAe,KACfC,eAAgB,SAChBC,cAAe,iBAGfR,UCeSS,OA1Bf,SAAmB32B,GACjB,MAAM,eAAE42B,EAAc,YAAEC,GAAgB72B,EAYxC,OACE,uCACE,eAAC,IAAQ,CAACqE,QAAQ,eAAc,SAC9B,eAAC,IAAM,CAACP,KAAMC,IAAU+yB,YAAat3B,OAAO,UAAUyE,QAblC,KACxB4yB,IACA13B,aAAmB,8BAcjB,eAAC,IAAQ,CAACkF,QAAQ,kBAAiB,SACjC,eAAC,IAAM,CAACP,KAAMC,IAAU4rB,MAAOnwB,OAAO,SAASyE,QAZxB,KAC3B2yB,IACAj3B,aAAmB,8B,WC0CRo3B,OAlDf,SAA2B/2B,GACzB,MAAM,gBAAEg3B,EAAe,UAAE3B,GAAcr1B,EAEjC41B,EAAaC,qBAAWC,MACxBmB,EAAerB,EAAWsB,kBAC1BC,EAAgB9B,EAAUxN,QAC9BxO,IAASuc,EAAWwB,cAAcxB,EAAWyB,QAAQhe,MAKjDie,EAAaC,KAAYroB,SAOzBsoB,EAAgB,IAAI9X,IAAIyX,GACxBM,EAAiB,IAAI/X,IAAIgY,kBAAQT,KAAiB5B,IAQlDsC,EAAcC,SACCpxB,IAAfmxB,IAEJH,EAAcK,OAAOD,GACrBH,EAAeve,IAAI0e,GACnBZ,EAAgB,IAAIQ,MAGtB,OACE,eAACF,EAAU,CACT5nB,aAzBgD,CAACooB,EAAK,KAAD,IAAE,YAAEjpB,GAAa,SACxE,eAAC,IAAQ,CAAiB5K,QAAS4K,EAAaC,KAAMgpB,EAAKhpB,MAA5CgpB,EAAKze,OAyBlB9J,MAAO,IAAIkoB,GAAgBz0B,KAAIqW,GAAQuc,EAAWyB,QAAQhe,KAC1D0e,UAAW,eAAC,IAAQ,CAAC/wB,UAAU,EAAM8H,KAAK,sBAC1CW,aAAcqoB,IAAQE,OAnBNC,EAmBiBH,EAAKze,KAlBxCme,EAActe,IAAI+e,GAClBR,EAAeI,OAAOI,QACtBjB,EAAgB,IAAIQ,IAHFS,OAoBhBC,cAAe,IAAIV,GAAex0B,KAAIqW,GAAQuc,EAAWyB,QAAQhe,KACjE8e,cAAe,CAAE3J,SAAU1f,GAAQ6oB,EAjCtB7oB,IAAiB8mB,EAAWwC,cAActpB,GAiCTupB,CAAQvpB,EAAMuY,cAC5DiR,YAAaR,GAAQA,EAAKhpB,KAC1BypB,cA7BkD,CAACC,EAAOrC,IAC5DA,EAAKrnB,KAAKklB,cAActN,SAAS8R,EAAMxE,eA6BrCyE,eAAe,K,UCvBNC,OAxBf,SAA0B14B,GACxB,MAAM,eAAE24B,EAAc,SAAE35B,GAAagB,EAG/B44B,EADa/C,qBAAWC,MACC+C,gBAAgB7zB,OAAS,EAClD8zB,EAAkB,IAAIC,MAAMH,EAAc,GAAGp2B,QAE7Cw2B,EAAiB/pB,KAAOC,SAK9B,OACE,eAAC8pB,EAAc,CACbppB,YAAY,EACZF,aAP2C,CAAC1Q,EAAS,KAAD,IAAE,YAAE6P,GAAa,SACvE,eAAC,IAAQ,CAAgB5K,QAAS4K,EAAaC,KAAM9P,GAAtCA,IAObuQ,MAAOupB,EACPrpB,aAAckpB,EAAe,SAE7B,eAAC,IAAM,CAAC7pB,KAAM9P,OCsCLi6B,OAtDf,SAAmCj5B,GACjC,MAAM,wBAAEk5B,EAAuB,KAAE7f,EAAI,kBAAE+b,GAAsBp1B,EAIvD41B,EAAaC,qBAAWC,MACxBqD,EAEF,GACEhC,EAAgB/B,EAAkBvN,QACtCxO,IAASuc,EAAWwD,qBAAqBxD,EAAWyD,eAAehgB,MAK/DigB,EAAqB/B,KAAYroB,SAOjCqqB,EAAkB,IAAI7Z,IAAIyX,GAC1BqC,EAAmB,IAAI9Z,IAAIgY,kBAAQyB,KAAmBhC,IAgB5D,OACE,eAACmC,EAAkB,CACjB5pB,aAzBwD,CAAC+pB,EAAY,KAAD,IAAE,YAAE5qB,GAAa,SACvF,eAAC,IAAQ,CAAwB5K,QAAS4K,EAAaC,KAAM2qB,EAAY7yB,OAA1D6yB,EAAYpgB,OAyBzB9J,MAAO,IAAIiqB,GAAkBx2B,KAAIqW,GAAQuc,EAAWyD,eAAehgB,KACnE0e,UAAW,eAAC,IAAQ,CAAC/wB,UAAU,EAAM8H,KAAK,6BAC1CW,aAAcgqB,IAAeC,OAnBXzB,EAmBwBwB,EAAYpgB,KAlBxDkgB,EAAgBrgB,IAAI+e,GACpBuB,EAAiB3B,OAAOI,QACxBiB,EAAwB,IAAIK,IAHRtB,OAoBlBC,cAAe,IAAIqB,GAAiBv2B,KAAIqW,GAAQuc,EAAWyD,eAAehgB,KAC1E8e,cAAe,CAAE3J,SAAU5nB,IAfTgxB,WACDpxB,KADCoxB,EAlBLhxB,IAAkBgvB,EAAW+D,eAAe/yB,GAiCRyxB,CAAQzxB,EAAOygB,eAZlEkS,EAAgB1B,OAAOD,GACvB4B,EAAiBtgB,IAAI0e,GACrBsB,EAAwB,IAAIK,OAW1BjB,YAAamB,GAAeA,EAAY7yB,MACxC2xB,cA7B0D,CAACC,EAAOrC,IACpEA,EAAKvvB,MAAMotB,cAActN,SAAS8R,EAAMxE,eA6BtCyE,eAAe,KCWNmB,OAtDf,SAA6B55B,GAC3B,MAAM,qBACJ65B,EAAoB,gBACpB7C,EAAe,eACf2B,EAAc,wBACdO,EAAuB,mBACvBY,EAAkB,oBAClBC,GACE/5B,GACE,KAAEqZ,EAAI,eAAEic,EAAc,UAAED,EAAS,SAAEr2B,EAAQ,kBAAEo2B,EAAiB,aAAEF,GACpE6E,GAEKte,EAAQue,GAAWj1B,oBAAkB,GACtCk1B,EAAa,IAAMD,GAASve,GAElC,OACE,uCACE,eAAC,IAAQ,CAACpX,QAAQ,gBAAe,SAC/B,eAAC,IAAM,CAACP,KAAMC,IAAUm2B,OAAQj2B,QAASg2B,MAG3C,eAAC,IAAM,CAACrzB,MAAM,gBAAgB9C,KAAMC,IAAUm2B,OAAQze,OAAQA,EAAQoO,QAASoQ,EAAW,SACxF,uBAAKjwB,MAAO,CAAEmwB,QAAS,WAAY,UACjC,kDACA,eAAC,IAAY,CACX5L,WAAW,EACXloB,SAAUwzB,EACVrb,YAAY,iCACZtJ,MAAOogB,IAET,2CACA,6EACA,eAAC,GAAgB,CAACqD,eAAgBA,EAAgB35B,SAAUA,IAC5D,gDACA,eAAC,GAAyB,CACxBk6B,wBAAyBA,EACzB7f,KAAMA,EACN+b,kBAAmBA,IAErB,wCACA,eAAC,GAAiB,CAAC4B,gBAAiBA,EAAiB3B,UAAWA,IAEhE,8CACA,eAAC,IAAQ,CACPxxB,MAAO,+DACPu2B,QAASlF,EACT7uB,SAAUyzB,aCtCPO,OAlBf,SAA+Br6B,GAC7B,MAAM,KAAEqZ,GAASrZ,EAQjB,OACE,qCACE,eAAC,IAAQ,CAACqE,QARI,iCAQe,SAC3B,eAAC,IAAM,CAACP,KAAMC,IAAUu2B,UAAWr2B,QAR5B,KACXs2B,UAAUC,UAAUC,UAAUphB,GAC9Bla,aAAmB,oCCbhB,IAAKu7B,IAcX,SAdWA,KAAsB,gDAAtBA,EAAsB,kCAAtBA,EAAsB,sCAAtBA,EAAsB,kCAAtBA,EAAsB,sDAAtBA,EAAsB,gCAAtBA,EAAsB,4BAAtBA,EAAsB,2CAAtBA,EAAsB,0BAAtBA,EAAsB,sBAAtBA,EAAsB,wCAAtBA,EAAsB,kCAAtBA,EAAsB,4BAcjC,CAdWA,QAAsB,K,uBC8CnBC,OApCf,SAAsB36B,GACpB,MAAM,KAAEyM,EAAI,KAAEuU,EAAI,WAAE4Z,GAAe56B,GAE5Byb,EAAQue,GAAWj1B,oBAAkB,GACtCk1B,EAAa,IAAMD,GAASve,GAE5Bof,OAAqBr0B,IAATwa,EAAsB,MAAKvU,IAAU,GAAEquB,aAAa9Z,KAEtE,OACE,uCACE,eAAC,IAAQ,CAAC3c,QAASw2B,EAAU,SAC3B,eAAC,IAAM,CAAC7uB,SAAS,EAAM/H,QAASg2B,EAAYc,UAAU,EAAK,SAAG,GAAEtuB,QAElE,gBAAC,IAAM,CACLmd,oBAAoB,EACpBnO,OAAQA,EACRoO,QAASoQ,EACTjwB,MAAO,CACLgxB,WAAY,OACZhwB,SAAU,cACVmvB,QAAS,SACTc,UAAW,UAEbr0B,MAAQ,GAAE6F,IAAO,UAEjB,eAAC,KAAU,CACTpG,SAAUu0B,EACVM,gBAAiB,CAAEC,kBAAkB,GACrCjmB,MAAO8L,IAET,eAAC,IAAM,CAAC/c,QAAS,IAAM22B,OAAWp0B,GAAYsI,KAAO,UAASrC,aCkBvD2uB,OAlDf,SAAsBp7B,GACpB,MAAM,WAAEq7B,EAAU,KAAE7F,GAASx1B,GACvB,WAAEuyB,EAAU,YAAElJ,EAAW,eAAE2L,GAAmBQ,GAE7C/Z,EAAQue,GAAWj1B,oBAAkB,GACtCk1B,EAAa,IAAMD,GAASve,GAUlC,OACE,uCACE,eAAC,IAAQ,CAACpX,QAAQ,YAAW,SAC3B,eAAC,IAAM,CAACP,KAAMC,IAAUu3B,cAAer3B,QAASg2B,MAGlD,eAAC,IAAM,CAACrzB,MAAM,YAAY9C,KAAMC,IAAUu3B,cAAe7f,OAAQA,EAAQoO,QAASoQ,EAAW,SAC3F,uBAAKjwB,MAAO,CAAEmwB,QAAS,WAAY,UACjC,8CACA,eAAC,IAAY,CACX5L,WAAW,EACXloB,SAnBgBksB,GAAuB8I,EAAW,IAAK7F,EAAMjD,eAoB7D/T,YAAY,6BACZtJ,MAAOqd,IAET,8CACA,eAAC,IAAY,CACXhE,WAAW,EACXloB,SAxBiBgjB,GACzBgS,EAAW,IAAK7F,EAAMnM,YAAaA,IAwB3B7K,YAAY,yBACZtJ,MAAOmU,IAET,kDACA,eAAC,IAAY,CACXkF,WAAW,EACXloB,SA5BoB2uB,GAC5BqG,EAAW,IAAK7F,EAAMR,eAAgBA,IA4B9BxW,YAAY,6BACZtJ,MAAO8f,aCrBnB,MAAMuG,GAAQ9B,IACL,CACLM,oBAAqBN,EACrB+B,SAAS,IAIPC,GAAU,CAACrP,EAAcxf,KAC7B,OAAQA,EAAOH,MACb,KAAKivB,GAAWC,aACd,MAAO,IACFvP,EACHoP,SAAS,GAEb,KAAKE,GAAWE,gBACd,OAAOL,GAAK3uB,EAAOivB,SACrB,KAAKH,GAAWI,mBACd,MAAO,IACF1P,EACHoP,SAAS,GAEb,KAAKE,GAAWK,uBACd,MAAO,CACLhC,oBAAqB,IAChB3N,EAAM2N,oBACTzE,eAAgB1oB,EAAOivB,SAEzBL,SAAS,GAEb,KAAKE,GAAWM,gBACd,MAAO,CACLjC,oBAAqB,IAChB3N,EAAM2N,oBACTrM,SAAU9gB,EAAOivB,SAEnBL,SAAS,GAEb,KAAKE,GAAWO,kBACd,MAAO,CACLlC,oBAAqB,IAChB3N,EAAM2N,oBACT1E,UAAWzoB,EAAOivB,SAEpBL,SAAS,GAEb,KAAKE,GAAWQ,gBACd,MAAO,CACLnC,oBAAqB,IAChB3N,EAAM2N,oBACT5E,OAA2B,IAAnBvoB,EAAOivB,QACf78B,SAAU4N,EAAOivB,SAEnBL,SAAS,GAEb,KAAKE,GAAWS,0BACd,MAAO,CACLpC,oBAAqB,IAChB3N,EAAM2N,oBACT3E,kBAAmBxoB,EAAOivB,SAE5BL,SAAS,GAEb,KAAKE,GAAWU,eACd,MAAO,CACLrC,oBAAqB,IAChB3N,EAAM2N,oBACTsC,QAASzvB,EAAOivB,SAElBL,SAAS,GAEb,KAAKE,GAAWY,aACd,MAAO,CACLvC,oBAAqB,IAChB3N,EAAM2N,oBACTnzB,MAAOgG,EAAOivB,SAEhBL,SAAS,GAEb,KAAKE,GAAWa,YACd,MAAO,CACLxC,oBAAqB,IAChB3N,EAAM2N,oBACTvE,KAAM5oB,EAAOivB,SAEfL,SAAS,GAEb,KAAKE,GAAWc,UACd,MAAO,CACLzC,oBAAqB,IAChB3N,EAAM2N,oBACTzY,GAAI1U,EAAOivB,SAEbL,SAAS,GAEb,KAAKE,GAAWe,sBACd,MAAO,CACL1C,oBAAqB,IAChB3N,EAAM2N,oBACT7E,cAAe9I,EAAM2N,oBAAoB7E,cAE3CsG,SAAS,GAEb,QACE,OAAOpP,IA0HEsQ,OAtHf,SAAsB18B,GACpB,MAAM,KAAEqZ,EAAI,iBAAEsjB,EAAgB,YAAEC,EAAW,WAAEC,EAAU,eAAEC,GAAmB98B,EAEtE41B,EAAaC,qBAAWC,MACxB2D,EAAc7D,EAAWyD,eAAehgB,GACxC0jB,EAAmBlf,mBAAQ,IAAMmf,oBAAUvD,IAAc,CAACA,KAEzDrN,EAAOrJ,GAAYka,qBAAWxB,GAASsB,EAAkBxB,KACzD2B,EAAOC,GAAYp4B,mBAAkB43B,IACtC,oBAAE5C,EAAmB,QAAEyB,GAAYpP,GACnC,eAAEkJ,EAAc,SAAE5H,EAAQ,QAAE2O,EAAO,MAAEz1B,EAAK,KAAE4uB,EAAI,GAAElU,GAAOyY,EAuD/D,OACE,sBACE90B,UAAU,gBACV+E,MAAO,CACLgxB,WAAa,OAAM1F,mBACnB,UAEF,sBAAKrwB,UAAU,gBAAe,SAC3Bu2B,EACC,eAAC,GAAS,CAAC5E,eApDI,IACrB7T,EAAS,CAAEtW,KAAMivB,GAAWE,gBAAiBC,QAASkB,IAmDLlG,YA9D/B,KAClB9T,EAAS,CAAEtW,KAAMivB,GAAWC,eAC5B/F,EAAWwH,kBAAkBrD,GACzBmD,IACFN,IACAO,GAAS,IAEXL,OAyDM,eAAC,GAAW,CAAC5G,WAnDK,KACxBnT,EAAS,CAAEtW,KAAMivB,GAAWI,qBAC5BlG,EAAWyH,kBAAkBhkB,GACzB6jB,IACFN,IACAO,GAAS,IAEXN,EAAWxjB,GACXyjB,KA2CkD3G,KAAMvvB,MAItD,uBAAK3B,UAAU,UAAS,UACtB,qBAAIA,UAAU,QAAO,SACnB,eAAC,IAAY,CAACoB,SA3BDO,GACnBmc,EAAS,CAAEtW,KAAMivB,GAAWY,aAAcT,QAASj1B,IA0BR4X,YAAY,wBAAwBtJ,MAAOtO,MAElF,sBAAK3B,UAAU,KAAI,SACjB,eAAC,IAAQ,CAACZ,QAAQ,KAAI,SACpB,eAAC,IAAY,CACX6Q,MAAOoM,EACP7C,IAAK,EACLE,4BAA4B,EAC5B2e,SAAUv5B,IAAUw5B,YACpB/e,YAAY,KACZD,cA/BM+C,GAAeyB,EAAS,CAAEtW,KAAMivB,GAAWc,UAAWX,QAASva,UAmC3E,uBAAKrc,UAAU,UAAS,UACtB,eAAC,GAAY,CAAC21B,WA7CCyB,GACrBtZ,EAAS,CAAEtW,KAAMivB,GAAWU,eAAgBP,QAASQ,IA4CNrb,KAAMqb,EAAS5vB,KAAK,YAC7D,eAAC,GAAY,CAACmuB,WA3DElN,GACtB3K,EAAS,CAAEtW,KAAMivB,GAAWM,gBAAiBH,QAASnO,IA0DN1M,KAAM0M,EAAUjhB,KAAK,aAC/D,eAAC+wB,GAAqB,CAACnkB,KAAMA,UAIjC,uBAAKpU,UAAU,iBAAgB,UAC7B,eAAC,GAAY,CAACo2B,WA9CA7F,GAClBzS,EAAS,CAAEtW,KAAMivB,GAAWa,YAAaV,QAASrG,IA6CRA,KAAMA,IAC5C,eAAC,GAAmB,CAClBqE,qBAtEsBvE,GAC5BvS,EAAS,CAAEtW,KAAMivB,GAAWK,uBAAwBF,QAASvG,IAsEvD0B,gBAjEiB3B,IACvBtS,EAAS,CAAEtW,KAAMivB,GAAWO,kBAAmBJ,QAASxG,KAiElDsD,eA9DgB35B,GACtB+jB,EAAS,CAAEtW,KAAMivB,GAAWQ,gBAAiBL,QAAS78B,IA8DhDk6B,wBA5DyB9D,GAC/BrS,EAAS,CAAEtW,KAAMivB,GAAWS,0BAA2BN,QAASzG,IA4D1D0E,mBA/CmB,IAAM/W,EAAS,CAAEtW,KAAMivB,GAAWe,wBAgDrD1C,oBAAqBA,WC/O/B,IAAI0D,GAA+B,GAiEpBC,OA/Df,SAA2B19B,GACzB,MAAM,eAAE88B,GAAmB98B,EAErB41B,EAAaC,qBAAWC,OAavB6H,EAAShI,GAAc5wB,mBAAiB,IACzC2wB,EAA2B,KAAZiI,EACff,EAAc,IAAMjH,EAAW,IAE/BkH,EAAcxjB,IAClB,IAAIukB,EAAM,EACV,KAAOH,GAAcG,GAAKt+B,MAAQ+Z,GAAQukB,EAAMH,GAAcz4B,QAC5D44B,IAEFH,GAAcI,OAAOD,EAAK,IAGtBE,EAAuB,CAACC,EAAyBpB,IACrD,eAAC,GAAY,CAEXtjB,KAAM0kB,EACNpB,iBAAkBA,EAClBC,YAAaA,EACbC,WAAYA,EACZC,eAAgBA,GALXiB,GAuBT,OAb6B,IAAzBN,GAAcz4B,SAChBy4B,GAAgB7H,EACboI,6BACAh7B,KAAIqW,GAAQykB,EAAqBzkB,GAAM,MAW1C,uBAAKpU,UAAU,qBAAoB,UACjC,sBAAKA,UAAU,UAAS,SACtB,eAAC,GAAgB,CAACywB,aAAcA,EAAcC,WAVzBtc,IACzBsc,EAAWtc,GAEXokB,GAAcA,GAAcz4B,QAAUy4B,GAAc,GACpDA,GAAc,GAAKK,EAAqBzkB,GAAM,QAQ5C,qBAAIpU,UAAU,wBAAuB,SAAEw4B,S,SC1C9BQ,OAjBf,SAA2Bj+B,GACzB,MAAM,YAAEk+B,EAAW,KAAEp6B,EAAI,UAAEq6B,GAAcn+B,GAElCo+B,EAAcC,GAAmBH,EAExC,OACE,uBACEj5B,UAAU,SACVhB,QAAS,IAAMo6B,EAAgBF,GAC/Bn0B,MAAO,CAAEsC,MAAOgyB,aAAeF,EAAcD,IAAa,UAE1D,eAAC,IAAI,CAACr6B,KAAMA,EAAMiD,SAAU,KAC5B,6BAAIo3B,Q,mBCcKI,OA9Bf,SAA8Bv+B,GAC5B,MAAM,UAAEw+B,GAAcx+B,EAEtB,OACE,uBAAKiF,UAAU,YAAW,UACxB,gDACA,uBAAKA,UAAU,UAAS,UAAEu5B,EAAS,SAEnC,uDACA,uBAAKv5B,UAAU,UAAS,UACtB,uBAAKA,UAAU,cAAa,UAC1B,uBAAMA,UAAU,eAChB,6BAAIgkB,KAAUwV,wBAEhB,oBAAGx5B,UAAU,cAAa,8CAE5B,uBAAKA,UAAU,UAAS,UACtB,uBAAKA,UAAU,cAAa,UAC1B,uBAAMA,UAAU,eAChB,+BAAIgkB,KAAUwV,mBAAkB,UAElC,oBAAGx5B,UAAU,cAAa,uCAE5B,sBAAKA,UAAU,SAAQ,SACrB,mDAAqBgkB,KAAUwV,mBAAkB,oCCgB1CC,OApCf,SAA0B1+B,GACxB,MAAM,UAAEw+B,GAAcx+B,GAEf2+B,EAAeC,GAAoB75B,oBAAkB,GAKtD85B,EAAQC,KAAKC,MAAMP,EAAYQ,MAAc,EAC7CC,EAAWT,EAAYQ,KACvBE,EAAeD,EAAWD,KAEhC,OACE,uBAAK/5B,UAAU,QAAQk6B,aATA,IAAMP,GAAiB,GASSQ,aARnC,IAAMR,GAAiB,GAQwC,UACjF,uBAAK35B,UAAU,cAAa,UAC1B,uBAAMA,UAAU,eAChB,6BAAK,SAAQ45B,SAEf,wBAAM55B,UAAU,iBAAgB,UAC9B,eAAC,IAAW,CACVo6B,SAAS,EACTp6B,UAAU,eACVq6B,SAAS,EACTpqB,MAAOgqB,IAET,+BACGD,EAAQ,MAAKD,KAAU,YAGM,IAAjC/V,KAAUwV,oBAA4BE,GACrC,eAAC,GAAoB,CAACH,UAAWA,QCF1Be,OA1Bf,SAA6Bv/B,GAC3B,MAAM,KAAEilB,EAAI,UAAEua,GAAcx/B,GACrBy/B,GAAgBD,EACjBE,EAAmB,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAcE,YACrBC,EAAWC,aAAiB98B,GAASA,EAAMspB,QAAQsT,cAEnD5c,EAAWC,cACjB1D,qBAAU,KAGNyD,EADE2c,GAAQA,IAASE,EACV,CAAEnzB,KAAMqzB,KAAsBjE,QAAS6D,GAEvC,CAAEjzB,KAAMszB,SAElB,CAACL,EAAME,EAAU7c,IAEpB,MAAMyb,EAAYqB,aAAiB98B,GAASA,EAAMspB,QAAQ/K,KAE1D,OACE,uBAAKrc,UAAU,uBAAsB,UACnC,eAAC,GAAgB,CAACu5B,UAAWA,IAC7B,8BAAKvZ,QCxBX,MAAM+a,GAAU,IAAItyB,KAAK,EAAG,EAAG,GAAGuyB,UAAY,IAAIvyB,KAAK,EAAG,EAAG,GAAGuyB,UAmBjDC,OAjBf,SAA6BlgC,GAC3B,MAAM,SAAE0tB,GAAa1tB,EAGfmgC,OACS35B,IAAbknB,IAA2B0S,aAAU1S,IAAa2S,aAAgB3S,IAAasS,GAC3EM,KAAeC,IACfD,KAAeE,MAErB,OACE,uBAAKv7B,UAAU,WAAU,UACvB,eAAC,IAAI,CAACqH,MAAO6zB,EAAer8B,KAAMC,IAAU08B,YAC5C,oBAAGz2B,MAAO,CAAEsC,MAAO6zB,GAAgB,SAAEO,aAAiBhT,SChB5D,MAAMiT,GAAc,CAACrf,EAAYsf,KACvBA,EAAU,SAAW,IAAMtf,EAAK,MAkB3Buf,OAff,SAAuB7gC,GACrB,MAAM,QAAE4gC,EAAO,GAAEtf,GAAOthB,EAExB,OACE,sBAAKiF,UAAU,KAAI,SACT,IAAPqc,GACC,uCACE,eAAC,IAAI,CAACxd,KAAMC,IAAU+8B,eACtB,6BAAIH,GAAYrf,EAAIsf,WCwDfG,OA3Df,SAAyB/gC,GACvB,MAAM,KAAEqZ,EAAI,WAAE2nB,EAAU,eAAEC,EAAc,aAAEC,EAAY,eAAEC,GAAmBnhC,EAErE41B,EAAaC,qBAAWC,OAEvBsL,EAAWC,GAAgBL,GAE5B,eAAE1L,EAAc,MAAE1uB,GAAUgvB,EAAWyD,eAAehgB,GACtDioB,EAAkB1L,EAAW2L,mBAAmBloB,GAChDmoB,EAAY5L,EAAW6L,gBAAgBpoB,GACvC6lB,EAAetJ,EAAW8L,gBAAgBroB,GAC1C6X,EAAS0E,EAAW+L,UAAUtoB,GAG9BuoB,OACep7B,IAAnBy6B,GAA+E,IAA/CrL,EAAWiM,qBAAqBxoB,GAAM7T,KAExE,OACE,uBACEP,UAAU,mBACVhB,QAAS,IAAMo9B,EAAahoB,GAC5ByoB,eAAgBX,EAChBn3B,MAAO,IACF+3B,aAAW1oB,EAAM+nB,GACpBY,QAASd,EAAe,OAAS,MACjClG,WAAa,OAAM1F,mBACnB,UAEF,sBAAKrwB,UAAU,kBAAiB,SAC7B28B,GACC,eAAC,IAAI,CAAC99B,KAAMm9B,EAAiBl9B,IAAUsX,WAAatX,IAAU4X,gBAIlE,uBAAK1W,UAAU,UAAS,UACtB,uBAAKA,UAAU,UAAS,UACtB,8BAAK2B,EAAM8T,gBACVwW,IAAW+Q,KAAkBC,WAC5B,eAAC,IAAI,CAACp+B,KAAMC,IAAUstB,QAAS7xB,OAAQC,IAAOC,QAASsK,MAAO,CAAEmwB,QAAS,YAI7E,uBAAKl1B,UAAU,UAAS,UACtB,eAAC,GAAmB,CAACyoB,SAAU4T,IAC/B,eAAC,GAAa,CAACV,QAASgB,EAAatgB,GAAIkgB,OAG3C,eAAC,IAAW,CACVnC,SAAS,EACTp6B,UAAU,WACVzF,OAAyB,IAAjB0/B,EAAqB,UAAY,UACzCI,SAAS,EACTpqB,MAAOgqB,WCyCFiD,OA9FyC,IAAyC,IAAxC,KAAE9oB,EAAI,aAAE+oB,EAAY,WAAEpB,GAAY,EACzF,MAAMpL,EAAaC,qBAAWC,MACxBV,EAAoB,IAAIQ,EAAWiM,qBAAqBxoB,IACxDgpB,EAAYC,gBAEXrB,EAAgBsB,GAAqBx9B,oBAAkB,GAOxDy9B,EAAcnpB,IAClB,MAAM6X,EAAS0E,EAAW+L,UAAUtoB,GAEpC,OAAQ+oB,GACN,KAAKK,KAAaC,IAChB,OAAO,EACT,KAAKD,KAAaE,OAChB,OAAOzR,IAAW+Q,KAAkBU,OACtC,KAAKF,KAAaP,UAChB,OAAOhR,IAAW+Q,KAAkBC,UACtC,QACE,OAAO,IAkCb,OACE,qCAHwB7oB,IAxBJA,KACGuc,EAAWgN,eAAevpB,IAEvBmpB,EAAWnpB,GAqBI6nB,CAAa7nB,IAXrBA,IAChB,IAAIuc,EAAWiM,qBAAqBxoB,IACrCuG,QAAO,CAACijB,EAAWC,IAC1BD,GAAaL,EAAWM,KAC9B,GAO4DC,CAA0B1pB,GAItF2pB,CAAiB3pB,IAChB,sBAAIpU,UAAU,OAAM,UAClB,eAAC,GAAe,CACdoU,KAAMA,EACN2nB,WAAYA,EACZC,eAAgBA,EAChBC,aAAcsB,EAAWnpB,GACzB8nB,eA5Da,IAAMoB,GAAmBtB,KA8DxC,eAAC,IAAQ,CAACxlB,OAAQwlB,EAAgBnkB,qBAAqB,EAAK,SAC1D,sBAAK7X,UAAU,yBAAwB,SACpCmwB,EAAkBpyB,KAAIigC,GACrB,uBAAKh+B,UAAU,eAAc,UAC3B,sBACEA,UAAU,iBACV+E,MAAO,CACLk5B,aAAe,aAAYb,IAC3Bc,WAAa,aAAYd,OAG7B,eAAC,GAAe,CACdhpB,KAAM4pB,EACNjC,WAAYA,EACZE,aAAcsB,EAAWS,OAXMA,eC7BpCG,OAlDgB,IAMxB,IANyB,WAC9B5gB,EAAU,eACV6gB,GAID,EACC,MAAMnc,EAAW2Y,aAAiB98B,GAASA,EAAMspB,QAAQnF,WACnDoc,EAAYzlB,mBAChB,IAAOzH,IACL,IAAK8Q,EAEH,YADAvnB,aAAmB,uBAIrB,MACMynB,EADe,YAAWF,KAAYC,aAA6B,OAAV3E,QAAU,IAAVA,OAAU,EAAVA,EAAY/V,QAC5B,IAAa,OAAV+V,QAAU,IAAVA,OAAU,EAAVA,EAAYpc,GAAGihB,aACjEG,KAAQjB,KAAKa,EAA2B,IAAGhR,OAE7C,CAAW,OAAVoM,QAAU,IAAVA,OAAU,EAAVA,EAAYpc,GAAc,OAAVoc,QAAU,IAAVA,OAAU,EAAVA,EAAY/V,KAAMya,IAGrC,OACE,iCACE,qBAAIjiB,UAAU,sBAAqB,sBACnC,sBAAKA,UAAU,gBAAe,SAC3Bud,GACCA,EAAWC,UAAUzf,KAAI,CAACogB,EAAUje,IAClC,uBAAKF,UAAU,sBAAqB,UAClC,gCACE,qBAAIA,UAAU,kBAAiB,SAAE,KAAOE,EAAQ,OAGlD,uBAAKF,UAAU,cAAa,UAC1B,6BAA0B,OAAtBme,EAAS5B,SAAoB,cAAgB4B,EAAS5B,WAC1D,oBAAGvc,UAAU,KAAI,SAAE,OAASme,EAAS9B,GAAK,IAAM8B,EAAS7B,WAG1D8hB,GACC,yBAAQp+B,UAAU,uBAAuBhB,QAAS,IAAMq/B,EAAUn+B,GAAO,SACtE,kBAZmCA,WCbvCo+B,OAlBf,SAAmCvjC,GACjC,MAAM,UAAEwjC,EAAS,eAAExO,GAAmBh1B,EAEhCyjC,EAAazO,EAAiBA,EAAe0O,MAAM,MAAQ,CAAC,IAElE,OACE,uBAAKz+B,UAAU,aAAY,UACxBu+B,EAAY,GAAK,8BAAM,WAAUA,QACjCC,EAAWzgC,KAAI,CAAC2gC,EAAM/F,IACrB,+BACG+F,EACD,0BAFM/F,SCmCDgG,OAXf,SAA6B5jC,GAC3B,MAAM,MAAE6jC,GAAU7jC,EAElB,OACE,uCACE,qBAAIiF,UAAU,kBAAiB,sBAC9B4+B,EAAM7gC,KAAI80B,GA/BKA,KACpB,MAAM,KAAEze,EAAI,KAAEvK,EAAI,YAAEg1B,EAAW,MAAEC,EAAK,UAAEC,GAAclM,EAChDmM,EAAOnF,KAAKrgB,IAAoB,IAAhBqlB,EAAoB,EAAIC,EAAQD,EAAa,GACnE,OACE,uBAAK7+B,UAAU,OAAM,UACnB,uBAAKA,UAAU,aAAY,UACzB,uBAAMA,UAAU,cAChB,+BACG8+B,EAAK,MAAKD,QAGf,uBAAK7+B,UAAU,gBAAe,UAC5B,6BAAI6J,IACJ,eAAC,IAAW,CACVuwB,SAAS,EACTp6B,UAAU,WACVzF,OAAQwkC,EAAY,eAAYx9B,EAChC84B,SAAS,EACTpqB,MAAO+uB,SAdc5qB,IA2BN6qB,CAAapM,SC4EvBqM,OA9Ff,SAAyB,GAAiD,IAAD,MAAhD,UAAE/C,EAAS,UAAE5B,GAAiC,EACrE,MAAMrpB,EAAgBiuB,OAAOC,OAAOjD,IAA6B,KAAdA,OAA+B56B,GAAZ46B,EACtE,IAAIzB,EAEJ,GAAIH,EAAW,CACb,MAAOC,GAAgBD,EACvBG,EAA0B,OAAZF,QAAY,IAAZA,OAAY,EAAZA,EAAcE,YAE9B,MAAMC,EAAWC,aAAiB98B,GAASA,EAAMspB,QAAQsT,cACnD2E,OAAuC99B,IAAhBm5B,GAA6BA,IAAgBC,EAEpE7c,EAAWC,cACjB1D,qBAAU,KACRyD,EAAS,CAAEtW,KAAM83B,MACZpuB,GAKH4M,EAFEuhB,EAEO,CAAE73B,KAAM+3B,KAAwB3I,QAAS,CAAE1lB,eAAcwpB,gBAGzD,CAAElzB,KAAMg4B,KAAkB5I,QAAS1lB,MAE7C,CAAC4M,EAAU5M,EAAcwpB,EAAa2E,IAEzC,MAAM1O,EAAaC,qBAAWC,MAExB4O,EADc7E,aAAiB98B,GAASA,EAAMspB,QAAQC,cACGzqB,IAAIsU,GAE7DwuB,GADmF,QAA/D,EAAG9E,aAAiB98B,GAASA,EAAMspB,QAAQ2G,6BAAoB,QAAI,IACvC4R,MAAKC,GAAUA,EAAOz+B,KAAO+P,IAEnF,GAAkB,KAAdirB,EACF,OACE,uBAAKn8B,UAAU,UAAS,UACtB,eAAC,IAAI,CAACnB,KAAMC,IAAU+gC,SAAU/9B,SAAU,KAC1C,2DAIN,MAAM0yB,EAAc7D,EAAWyD,eAAe+H,IACxC,SAAE1T,EAAQ,MAAE9mB,EAAK,KAAE4uB,GAASiE,GAC5B,WAAElH,EAAU,eAAEyC,EAAc,YAAE3L,GAAgBmM,EAC9CgO,EAAY5N,EAAWmP,iBAAiB3D,GACxCyC,EAAQjO,EAAWoP,UAAU5D,GAC7BlQ,EAAS0E,EAAW+L,UAAUP,GAE9B6D,EAAwB5b,EAAcA,EAAYqa,MAAM,MAAQ,CAAC,IAEvE,OACE,uBAAKz+B,UAAU,OAAO+E,MAAO,IAAKk7B,kBAAqBC,gBAAyB,UAC9E,uBACElgC,UAAU,QACV+E,MAAO,CACLgxB,WAAa,0BAAyBzI,kBACtC6S,oBAAsB,UACtB,UAEF,8BAAKx+B,EAAM8T,gBACVgT,GAAY,6BAAK,aAAYoN,aAAapN,OAC3C,uBAAMzoB,UAAU,cAAa,SAC1BggC,EAAsBjiC,KAAI,CAAC2gC,EAAM/F,IAChC,+BACG+F,EACD,0BAFM/F,UAQb1M,IAAW+Q,KAAkBC,WAC5BwC,GACAC,GACAA,EAAyBre,kBAGvB,eAAC,GAAsB,CAAC9D,WAAYkiB,EAAoBrB,gBAAiBiB,IAG5ET,EAAM7+B,OAAS,GACd,uCACE,eAAC,GAAmB,CAAC6+B,MAAOA,IAC3B3S,IAAW+Q,KAAkBC,WAC5B,uCACE,wBACA,eAAC,GAAyB,CAACsB,UAAWA,EAAWxO,eAAgBA,cCpG/E,SAASqQ,GAAoBC,GAC3B,MACuC,WAArCA,EAAmBhW,gBACjBgW,EAAmBhf,kBAAkD,cAA9Bgf,EAAmBpU,OA0HjDqU,OAtHf,SACEvS,EACAwS,EACA5P,GAEA,MAAM6P,EAAkB,IAAIzS,GAAqB0S,MAAK,CAACC,EAAWC,IAChE3kB,IAAO0kB,EAAU9S,SAASgT,KAAK5kB,IAAO2kB,EAAU/S,YAE5C7tB,EAASguB,EAAoBhuB,OAE7B8gC,EAAkBN,EAAkBxiC,KAAI6hC,GAAUA,EAAOp4B,OAEzDs5B,EAA+BD,EAAgB9iC,KAAIgjC,GAAK,KAE9DP,EAAgBQ,SAAQ,CAACX,EAAoB1H,KAE3C,IACGsI,aAAW,IAAIx4B,KAAK43B,EAAmB1S,UACvCwN,aAAU,IAAI1yB,KAAK43B,EAAmBzS,WAA2C,cAA9ByS,EAAmBpU,OAEvE,OAEF,MAAMiV,EAAWb,EAAmBl/B,GAAGihB,WAElCuO,EAAWwQ,eAAeD,KAE7BvQ,EAAWyQ,yBACT,CACEhtB,KAAM8sB,EAAW,IACjBr3B,KAAO,aAAYw2B,EAAmB1+B,QACtC0/B,iBAAkB,CAACH,GACnBI,KAAM,CACJ95B,KAAM+5B,KAASC,WACfC,iBAAkBpB,EAAmBl/B,GACrCugC,uBAAwB,IAGE,cAA9BrB,EAAmBpU,QAIjBoU,EAAmBhf,kBACrBsP,EAAWyQ,yBACT,CACEhtB,KAAM8sB,EAAW,IACjBr3B,KAAO,UAASw2B,EAAmB1+B,QACnC0/B,iBAAkB,CAACH,GACnBI,KAAM,CACJ95B,KAAM+5B,KAASC,WACfC,iBAAkBpB,EAAmBl/B,GACrCugC,uBAAwB,IAGS,WAArCrB,EAAmBhW,eAIvBsG,EAAWgR,sBAAsB,CAC/BvtB,KAAM8sB,EACNv/B,MAAO0+B,EAAmB1+B,MAC1B0a,GAAI+jB,GAAoBC,GACpBA,EAAmBhkB,GACnBgkB,EAAmB/jB,MACvB2T,cAAc,EACdxH,SAAU,IAAIhgB,KAAK43B,EAAmBzS,SACtCwJ,QAAS,IAAI3uB,KAAK43B,EAAmB1S,QACrCuC,YACqC3uB,IAAnC8+B,EAAmBuB,aAAoCvB,EAAmBuB,YAC5E7nC,SAAU4+B,EAAM54B,EAAS,IACzBowB,kBAAmB,GACnBC,UAAYiQ,EAAmBhf,iBAE3B,CAAC6f,EAAW,IAAKA,EAAW,KAD5B,CAACA,EAAW,KAEhB7Q,eAAiB,GAAEC,mBACnBC,KAAM,CACJjD,WAAY+S,EAAmB/S,WAC/BlJ,YAAaic,EAAmB5S,aAChCsC,eAAiB,OAAMsQ,EAAmBhkB,QAAQgkB,EAAmB/jB,WAKrE8jB,GAAoBC,IACtBQ,EAAgBG,SAAQ,CAACx5B,EAAMmxB,KACzBnxB,IAAS64B,EAAmB74B,MAC9Bs5B,EAAiBnI,GAAKrX,KAAK4f,UASrCJ,EAAiBE,SAAQ,CAACa,EAAOlJ,KAC/B,MAAMtQ,EAAiBwY,EAAgBlI,GACvCkJ,EAAM9hC,OAAS,GACb4wB,EAAWgR,sBAAsB,CAC/BvtB,KAAMiU,EACN1mB,MAAO,aAAe0mB,EACtBhM,GAAI,EACJ4T,cAAc,EACdxH,cAAUlnB,EACV61B,aAAS71B,EACT2uB,QAAQ,EACRn2B,UAAW,EAAI4+B,EACfxI,kBAAmB0R,EACnBzR,UAAW,GACXC,eAAiB,GAAEC,mBACnBC,KAAM,CACJjD,WAAa,GAAEwC,mBACf1L,YAAa,kBAAoBiE,EAAiB,oBAClD0H,eAAgB,UC/EnB,MAAM+R,GAA2B,CACtCC,EACA5E,EACApB,IAEAgG,EAAUhkC,KAAIikC,GACZ,eAAC,GAAe,CAEd5tB,KAAM4tB,EACN7E,aAAcA,EACdpB,WAAYA,GAHPiG,KAsIIC,OA/Hf,SAAmBlnC,GACjB,MAAM,gBACJmnC,EAAe,YACfC,EAAW,SACXC,EAAQ,2BACRC,EAA0B,SAC1BC,EAAQ,mBACRC,EAAkB,yBAClB7S,EAAwB,MACxB8S,EAAK,WACL7R,EAAU,KACV3Q,EAAI,KACJuP,EAAI,kBACJgR,EAAiB,oBACjBxS,EAAmB,+BACnB0U,EAA8B,MAC9BC,GACE3nC,EAGE4nC,EAAc7iC,wBAAsCyB,IACnDi5B,GAAgBmI,EAKvBtoB,qBAAU,KACRmgB,EAAe4H,EAAS5H,EAAaE,aAAeyH,IAEpD3H,EACI6H,EAA2B7H,EAAaE,aACxChL,IAEJwS,MACC,CACD1H,EACA0H,EACAE,EACAD,EACAE,EACA3S,IAGF,MAAMkT,EAA0BpI,EAC5BiI,EACA1U,EAIJ6U,GACErC,GACAD,GAAuBsC,EAAyBrC,EAAmB5P,GAErE,MAAMsI,EAAcn5B,mBAAuB09B,KAAaC,MACjDN,GAAgBlE,EAMjB8C,EAAaj8B,mBAAiB,KAC7Bq8B,EAAWC,GAAgBL,EAE5B8G,EAAc/iC,oBAAkB,IAC/BgjC,GAAaD,EAOpB,OAJAxoB,qBAAU,KACR+hB,EAAa,MACZ,CAAC5B,EAAc4B,IAGhB,eAAC,KAAmB2G,SAAQ,CAAC9yB,MAAO0gB,EAAW,SAC7C,uBAAK3wB,UAAU,uBAAsB,UACnC,eAAC,GAAmB,CAClBggB,KAAMwa,EAAeA,EAAaxa,MAAQwa,EAAawI,SAAWhjB,GAAQ,OAC1Eua,UAAWoI,IAEZpT,GAAQA,IAASC,IAAKC,SACrB,eAACwT,GAAA,EAAuB,CACtB1I,UAAWoI,EACXE,YAAaA,EACbK,OAAQV,GAAS,QACjBE,MAAOA,EACPJ,SAAUA,EACVC,mBAAoBA,IAIxB,uBAAKviC,UAAU,mBAAkB,UAC/B,uBAAKA,UAAU,mBAAkB,UAC/B,eAAC,GAAiB,CAChBi5B,YAAaA,EACbp6B,KAAMC,IAAUqkC,MAChBjK,UAAWsE,KAAaC,MAE1B,eAAC,GAAiB,CAChBxE,YAAaA,EACbp6B,KAAMC,IAAUskC,OAChBlK,UAAWsE,KAAaE,SAE1B,eAAC,GAAiB,CAChBzE,YAAaA,EACbp6B,KAAMC,IAAUukC,SAChBnK,UAAWsE,KAAaP,eAI5B,qBAAIj9B,UAAU,iBAAgB,SAC3B8hC,GACCvS,IAASC,IAAKC,SAAYqT,EAEtBnS,EAAW2S,gCADX3S,EAAW4S,8BAEfpG,EACApB,KAIJ,sBAAK/7B,UAAU,iBAAgB,SAC7B,eAAC,GAAe,CAACm8B,UAAWA,EAAW5B,UAAWoI,eC1H/Ca,OAhDf,SAA4BzoC,GAC1B,MAAM,aAAE0oC,EAAY,eAAEC,GAAmB3oC,EAEnC41B,EAAaC,qBAAWC,OAGvB8S,EAAUC,GAAc5L,sBAAW6L,IAASA,IAAM,GAMnD9H,EAAaj8B,mBAAiB,KAC7Bq8B,GAAaJ,EAEpB,OACE,uBAAK/7B,UAAU,sBAAqB,UAClC,uBAAKA,UAAU,UAAS,UACtB,eAAC,IAAM,CACLA,UAAU,iBACVnB,KAAM8kC,GAAY7kC,IAAUglC,WAC5Br8B,WAAYk8B,GAAY7kC,IAAUilC,YAClCl6B,KAAM85B,EAAW,OAAS,OAC1B3kC,QAAS4kC,IAEVH,GACC,eAAC,IAAM,CACLzjC,UAAU,iBACVnB,KAAMC,IAAUklC,aAChBzpC,OAAO,UACPsP,KAAK,kBACL7K,QAAS0kC,OAIdC,EACC,sBAAK3jC,UAAU,oBAAmB,SAChC,eAAC,GAAe,CAACm8B,UAAWA,MAG9B,qBAAIn8B,UAAU,oBAAmB,SAC9B8hC,GAAyBnR,EAAWsT,sBAAuBzG,KAAaC,IAAK1B,SCrDjF,IAAKmI,IAMX,SANWA,KAAsB,0BAAtBA,EAAsB,0BAAtBA,EAAsB,0BAAtBA,EAAsB,kCAAtBA,EAAsB,4BAMjC,CANWA,QAAsB,KCO3B,MAAMC,GAAgB38B,IAC3B,OAAQA,GACN,KAAK+5B,KAASC,WACZ,MAAO,CACLh6B,KAAM+5B,KAASC,WACfC,iBAAkB,EAClBC,uBAAwB,GAE5B,KAAKH,KAAS6C,OACZ,MAAO,CACL58B,KAAM+5B,KAAS6C,OACfC,WAAW,EACXxF,YAAa,GAEjB,KAAK0C,KAAS+C,OACZ,MAAO,CACL98B,KAAM+5B,KAAS+C,OACfzF,YAAa,GAEjB,KAAK0C,KAASgD,MACZ,MAAO,CACL/8B,KAAM+5B,KAASgD,MACfC,WAAY,CAACC,KAAUC,UACvB7F,YAAa,EACbzH,aAAS71B,EACTknB,cAAUlnB,EACVojC,iBAAapjC,EACbqjC,eAAWrjC,KAKNsjC,GAAyC,CACpDzwB,KAAM,GACNvK,KAAM,iBACNw3B,iBAAkB,GAClBC,KAAM6C,GAAa5C,KAAS+C,SCCfQ,OArCf,SAAgC/pC,GAC9B,MAAM,eAAEgqC,EAAc,WAAEC,GAAejqC,GACjC,iBAAE0mC,EAAgB,uBAAEC,GAA2BqD,EAUrD,OACE,uCACE,eAAC,IAAQ,CAAC3lC,QAAQ,oBAAmB,SACnC,eAAC,IAAY,CACXsa,4BAA4B,EAC5BJ,cAbwBmoB,GAC9BuD,EAAW,IAAKD,EAAgBtD,iBAAkBA,IAa5CloB,YAAY,+BACZtJ,MAAOwxB,MAGX,eAAC,IAAQ,CAACriC,QAAQ,iCAAgC,SAChD,eAAC,IAAY,CACXsa,4BAA4B,EAC5BD,IAAK,IACLD,IAAK,EACLF,cApB0B2rB,IAChC,MAAMvD,EAAyBuD,EAAqB,IACpDD,EAAW,IAAKD,EAAgBrD,uBAAwBA,KAmBlDnoB,YAAY,4CACZ2rB,aAAc,mCACdj1B,MAAgC,IAAzByxB,UCrBV,IAAKyD,GA8BL,SAASC,KAA0D,IAAD,uBAAlDC,EAAQ,yBAARA,EAAQ,gBAC7B,MAAO,CACL79B,KAAM,MACN69B,YAIG,SAASC,KAAyD,IAAD,uBAAlDD,EAAQ,yBAARA,EAAQ,gBAC5B,MAAO,CACL79B,KAAM,KACN69B,aApCH,SAJWF,KAAU,0BAAVA,EAAU,wCAAVA,EAAU,8CAIrB,CAJWA,QAAU,KCCtB,MAAMI,GAAev7B,KAAOC,SACtBu7B,GAAuC,CAACC,EAAO,KAAD,IAAE,YAAE77B,GAAa,SACnE,eAAC,IAAQ,CAAc5K,QAAS4K,EAAaC,KAAM47B,GAApCA,IAIXC,GAAqBrB,IAEzB,GAAyB,kBAAdA,GAA0B,SAAUA,EAAW,CACxD,MAAM,KAAE78B,EAAI,SAAE69B,GAAahB,EACrBsB,EAAMN,EAAStlC,OACf6lC,EAAa,GAEnB,IAAK,IAAIznC,EAAI,EAAGA,EAAIwnC,EAAKxnC,IACvBynC,EAAWtkB,KAAKokB,GAAkBL,EAASlnC,KACvCA,IAAMwnC,EAAM,GACdC,EAAWtkB,KAAK9Z,GAIpB,OAAOo+B,EAAWC,OAElB,MAAO,CAACC,KAAK7iB,UAAUohB,KAgIZ0B,OA5Hf,SAA4BhrC,GAC1B,MAAM,WAAEirC,EAAU,WAAEhB,GAAejqC,GAC7B,UAAEspC,EAAS,YAAExF,GAAgBmH,EAE7BC,EAAoB,GACpBL,EAAuB,GACvBM,EAAsBR,GAAkBrB,GAC9C,IAAK,IAAIlmC,EAAI,EAAGA,EAAI+nC,EAAUnmC,OAAQ5B,IAChCA,EAAI,IAAM,EACZynC,EAAWA,EAAW7lC,QAAUmmC,EAAU/nC,GAE1C8nC,EAAQA,EAAQlmC,QAAUmmC,EAAU/nC,GAKxC,MAAMgoC,EAAkB,KAGtB,IAAI9B,EAAYyB,KAAKM,MAAMR,EAAW,IACtC,IAAK,IAAIznC,EAAI,EAAGA,EAAIynC,EAAW7lC,OAAQ5B,IAEnCkmC,EADqB,QAAnB4B,EAAQ9nC,EAAI,GACFinC,GAAIf,EAAWyB,KAAKM,MAAMR,EAAWznC,KAErCmnC,GAAGjB,EAAWyB,KAAKM,MAAMR,EAAWznC,KAGpD6mC,EAAW,IAAKgB,EAAY3B,UAAWA,KA8EzC,OACE,uCACE,eAAC,IAAQ,CAACjlC,QAAQ,eAAc,SAC9B,eAAC,IAAY,CACXsa,4BAA4B,EAC5B2e,SAAUv5B,IAAU+8B,aACpBriB,IAAK,EACLF,cAlFmBulB,GACzBmG,EAAW,IAAKgB,EAAYnH,YAAaA,IAkFnCtlB,YAAY,0BACZtJ,MAAO4uB,MAnDNqH,EAAUnoC,KAAI,CAACsoC,EAAY1N,IAChC,+BAGIA,EAAM,IAAM,EAEV,uCACE,eAAC,IAAQ,CAACv5B,QAAQ,YAAW,SAC3B,eAAC,IAAY,CACXgC,SAAU6O,GAhCG,EAACq2B,EAAc3N,KAC1CiN,EAAWjN,GAAO2N,EAClBH,KA8BiCI,CAAqBt2B,EAAO0oB,EAAM,GACrDrP,WAAW,EACX/P,YAAY,uBACZtJ,MAAOo2B,MAKTT,EAAW7lC,OAAS,GAClB,eAAC,IAAQ,CAACX,QAAQ,mBAAkB,SAClC,eAAC,IAAM,CAAC7E,OAAO,SAASsE,KAAK,QAAQG,QAAS,IAhCvC25B,KACvB,IAAK,IAAIx6B,EAAIw6B,EAAKx6B,EAAIynC,EAAW7lC,OAAS,EAAG5B,IAE3CynC,EAAWznC,GAAKynC,EAAWznC,EAAI,GAC/B8nC,EAAQ9nC,GAAK8nC,EAAQ9nC,EAAI,GAE3BynC,EAAW7lC,OAAS6lC,EAAW7lC,OAAS,EACxCkmC,EAAQlmC,OAASkmC,EAAQlmC,OAAS,EAClComC,KAwBoEK,CAAgB7N,UAO5E,eAAC,IAAQ,CAACv5B,QAAQ,SAAQ,SACxB,eAACmmC,GAAY,CACX56B,YAAY,EACZF,aAAc+6B,GACdl7B,MAAO,CAAC,MAAO,MACfE,aAAcyF,GAjDF,EAACw1B,EAAgB9M,KACzCsN,EAAQtN,GAAO8M,EACfU,KA+CmCM,CAAkBx2B,GAAQ0oB,EAAM,GAAK,GAAG,SAE/D,eAAC,IAAM,CAAC5xB,SAAS,EAAM+uB,UAAU,EAAMjsB,KAAMw8B,SAhC7C1N,KAsDV,wBACA,eAAC,IAAM,CAAC5xB,SAAS,EAAM+uB,UAAU,EAAMjsB,KAAK,gBAAgB7K,QArF3C,KACnBinC,EAAQ3kB,KAAK,OACbskB,EAAWtkB,KAAK,kCAChB6kB,WClCWzQ,OApCf,SAAsB36B,GACpB,MAAM,KAAEyM,EAAI,KAAEuU,EAAI,WAAE4Z,GAAe56B,GAE5Byb,EAAQue,GAAWj1B,oBAAkB,GACtCk1B,EAAa,IAAMD,GAASve,GAE5Bof,OAAqBr0B,IAATwa,EAAsB,MAAKvU,IAAU,GAAEquB,aAAa9Z,KAEtE,OACE,uCACE,eAAC,IAAQ,CAAC3c,QAASw2B,EAAU,SAC3B,eAAC,IAAM,CAAC7uB,SAAS,EAAM/H,QAASg2B,EAAYc,UAAU,EAAK,SAAG,GAAEtuB,QAElE,gBAAC,IAAM,CACLmd,oBAAoB,EACpBnO,OAAQA,EACRoO,QAASoQ,EACTjwB,MAAO,CACLgxB,WAAY,OACZhwB,SAAU,cACVmvB,QAAS,SACTc,UAAW,UAEbr0B,MAAQ,GAAE6F,IAAO,UAEjB,eAAC,KAAU,CACTpG,SAAUu0B,EACVM,gBAAiB,CAAEC,kBAAkB,GACrCjmB,MAAO8L,IAET,eAAC,IAAM,CAAC/c,QAAS,IAAM22B,OAAWp0B,GAAYsI,KAAO,UAASrC,a,UCEvDk/B,OAhCf,SAAsB3rC,GACpB,MAAM,KAAEyM,EAAI,KAAE6M,EAAI,WAAEsyB,GAAe5rC,GAE5Byb,EAAQue,GAAWj1B,oBAAkB,GACtCk1B,EAAa,IAAMD,GAASve,GAE5Bof,OAAqBr0B,IAAT8S,EAAsB,MAAK7M,IAAU,GAAEo/B,aAAavyB,KAEtE,OACE,uCACE,eAAC,IAAQ,CAACjV,QAASw2B,EAAU,SAC3B,eAAC,IAAM,CAAC7uB,SAAS,EAAM/H,QAASg2B,EAAYc,UAAU,EAAK,SAAG,GAAEtuB,QAElE,gBAAC,IAAM,CACLmd,oBAAoB,EACpBnO,OAAQA,EACRoO,QAASoQ,EACTjwB,MAAO,CACLgxB,WAAY,OACZhwB,SAAU,cACVmvB,QAAS,SACTc,UAAW,UAEbr0B,MAAQ,GAAE6F,IAAO,UAEjB,eAAC,KAAU,CAACpG,SAAUulC,EAAYzQ,kBAAkB,EAAMjmB,MAAOoE,IACjE,eAAC,IAAM,CAACrV,QAAS,IAAM2nC,OAAWplC,GAAYsI,KAAO,UAASrC,aCxBtE,MAAMq/B,GAAc78B,KAAOC,SACrB68B,GAAyC,CAACC,EAAU,KAAD,IAAE,YAAEn9B,GAAa,SACxE,eAAC,IAAQ,CAAiB5K,QAAS4K,EAAaC,KAAMk9B,GAAvCA,IAmFFC,OAhFf,SAA2BjsC,GACzB,MAAM,WAAEiqC,EAAU,UAAEiC,GAAclsC,GAC5B,WAAEypC,EAAU,YAAE3F,EAAW,QAAEzH,EAAO,SAAE3O,EAAQ,YAAEkc,EAAW,UAAEC,GAAcqC,EA8BzEC,EAAwBhnC,GAAmB6mC,GAzBzB,EAACA,EAAsB7mC,KACzC6mC,IAActC,KAAU39B,KAC1Bk+B,EAAW,IAAKiC,EAAWzC,WAAYA,EAAW5hB,QAAO,CAACme,EAAGpI,IAAQA,IAAQz4B,OAE7EskC,EAAWtkC,GAAS6mC,EACpB/B,EAAW,IAAKiC,EAAWzC,WAAYA,MAqBzC2C,CAAgBJ,EAAW7mC,GAsB7B,OACE,uCApBOskC,EAAWzmC,KAAI,CAACgpC,EAAW7mC,IAChC,eAAC,IAAQ,CAACd,QAAS,qBAAuBc,EAAM,SAC9C,eAAC2mC,GAAW,CACVl8B,YAAY,EACZL,MAAO88B,OAAOC,OAAO5C,MACrBh6B,aAAcq8B,GACdt8B,aAAc08B,EAAqBhnC,GAAO,SAE1C,eAAC,IAAM,CAAC41B,UAAU,EAAMjsB,KAAMk9B,OAPoB7mC,KAqBtD,eAAC,IAAQ,CAACd,QAAQ,YAAW,SAC3B,eAAC,IAAM,CAAC02B,UAAU,EAAMjsB,KAAM,YAAa7K,QAThC,KACfwlC,EAAWA,EAAWzkC,QAAU0kC,KAAUC,SAC1CM,EAAW,IAAKiC,EAAWzC,WAAYA,SASrC,eAAC,IAAQ,CAACplC,QAAQ,eAAc,SAC9B,eAAC,IAAY,CACXsa,4BAA4B,EAC5B2e,SAAUv5B,IAAUskC,OACpB5pB,IAAK,EACLF,cA9DmBulB,GACzBmG,EAAW,IAAKiC,EAAWpI,YAAaA,IA8DlCtlB,YAAY,0BACZtJ,MAAO4uB,MAGX,wBACA,eAAC,GAAY,CAACr3B,KAAK,UAAUuU,KAAMqb,EAASzB,WAxDzByB,IACrB4N,EAAW,IAAKiC,EAAW7P,QAASA,OAwDlC,eAAC,GAAY,CAAC5vB,KAAK,WAAWuU,KAAM0M,EAAUkN,WArD1BlN,IACtBuc,EAAW,IAAKiC,EAAWxe,SAAUA,OAqDnC,eAAC,GAAY,CAACjhB,KAAK,eAAe6M,KAAMswB,EAAagC,WAlD9BhC,IACzBK,EAAW,IAAKiC,EAAWtC,YAAaA,OAkDtC,eAAC,GAAY,CAACn9B,KAAK,aAAa6M,KAAMuwB,EAAW+B,WA/C5B/B,IACvBI,EAAW,IAAKiC,EAAWrC,UAAWA,WCjB3B0C,OArBf,SAA4BvsC,GAC1B,MAAM,WAAEiqC,EAAU,WAAEuC,GAAexsC,GAC7B,YAAE8jC,GAAgB0I,EAKxB,OACE,eAAC,IAAQ,CAACnoC,QAAQ,eAAc,SAC9B,eAAC,IAAY,CACXsa,4BAA4B,EAC5B2e,SAAUv5B,IAAU+8B,aACpBriB,IAAK,EACLF,cATqBulB,GACzBmG,EAAW,IAAKuC,EAAY1I,YAAaA,IASrCtlB,YAAY,0BACZtJ,MAAO4uB,OC2CA2I,OA7Cf,SAAsBzsC,GACpB,MAAM,WAAEiqC,EAAU,KAAE1D,GAASvmC,GACvB,KAAEyM,GAAS85B,EAEXmG,EAAaz9B,KAAOC,SAwB1B,OACE,uCACE,eAAC,IAAQ,CAAC7K,QAAQ,mBAAkB,SAClC,eAACqoC,EAAU,CACT98B,YAAY,EACZF,aA5BqC,CAACjD,EAAK,KAAD,IAAE,YAAEoC,GAAa,SACjE,eAAC,IAAQ,CAAY5K,QAAS4K,EAAaC,KAAMrC,GAAlCA,IA4BT8C,MAAO88B,OAAOC,OAAO9F,MACrB/2B,aA1BYhD,GAAmBw9B,EAAWb,GAAa38B,IA0B9B,SAEzB,eAAC,IAAM,CAACT,SAAS,EAAM+uB,UAAU,EAAMjsB,KAAMrC,QA1BxBA,KAC3B,OAAQA,GACN,KAAK+5B,KAASC,WACZ,OACE,eAAC,GAAsB,CAACuD,eAAgBzD,EAAwB0D,WAAYA,IAEhF,KAAKzD,KAAS6C,OACZ,OAAO,eAAC,GAAkB,CAAC4B,WAAY1E,EAAoB0D,WAAYA,IACzE,KAAKzD,KAAS+C,OACZ,OAAO,eAAC,GAAkB,CAACU,WAAYA,EAAYuC,WAAYjG,IACjE,KAAKC,KAASgD,MACZ,OAAO,eAAC,GAAiB,CAAC0C,UAAW3F,EAAmB0D,WAAYA,IACtE,QACE,OAAO,OAgBR0C,CAAoBlgC,OCxC3B,MAAM8uB,GAAQzD,IACL,CACL8U,aAAc9U,EACd0D,SAAS,IAIPC,GAAU,CAACrP,EAAcxf,KAC7B,OAAQA,EAAOH,MACb,KAAKivB,GAAWC,aACd,MAAO,IACFvP,EACHoP,SAAS,GAEb,KAAKE,GAAWE,gBACd,OAAOL,GAAK3uB,EAAOivB,SACrB,KAAKH,GAAWmR,YACd,MAAO,IACFzgB,EACHoP,SAAS,GAEb,KAAKE,GAAWoR,YACd,MAAO,CACLF,aAAc,IACTxgB,EAAMwgB,aACTrG,KAAM35B,EAAOivB,SAEfL,SAAS,GAEb,KAAKE,GAAWqR,YACd,MAAO,CACLH,aAAc,IACTxgB,EAAMwgB,aACT99B,KAAMlC,EAAOivB,SAEfL,SAAS,GAEb,QACE,OAAOpP,IA8DE4gB,OA1Df,SAAsBhtC,GACpB,MAAM,KAAEqZ,EAAI,UAAE4zB,EAAS,YAAErQ,EAAW,WAAEC,EAAU,eAAEC,GAAmB98B,EAE/D41B,EAAaC,qBAAWC,MACxBgC,EAAOlC,EAAWsX,kBAAkB7zB,GACpC8zB,EAAYtvB,mBAAQ,IAAMmf,oBAAUlF,IAAO,CAACA,KAE3C1L,EAAOrJ,GAAYka,qBAAWxB,GAAS0R,EAAW5R,KAClD2B,EAAOC,GAAYp4B,mBAAkBkoC,IACtC,aAAEL,EAAY,QAAEpR,GAAYpP,GAC5B,KAAEma,EAAI,KAAEz3B,GAAS89B,EA6BvB,OACE,sBAAI3nC,UAAU,gBAAgBmB,GAAIiT,EAAK,UACrC,sBAAKpU,UAAU,gBAAe,SAC3Bu2B,EACC,eAAC,GAAS,CAAC5E,eArBI,IAAM7T,EAAS,CAAEtW,KAAMivB,GAAWE,gBAAiBC,QAASsR,IAqBhCtW,YA/B/B,KAClB9T,EAAS,CAAEtW,KAAMivB,GAAWC,eAC5B/F,EAAWwX,qBAAqBR,GAC5B1P,IACFN,IACAO,GAAS,IAEXL,OA0BM,eAAC,GAAW,CAAC5G,WArBF,KACjBnT,EAAS,CAAEtW,KAAMivB,GAAWmR,cAC5BjX,EAAWyX,qBAAqBh0B,GAC5B6jB,IACFN,IACAO,GAAS,IAEXN,EAAWxjB,GACXyjB,KAa2C3G,KAAMrnB,MAG/C,8BACE,eAAC,IAAY,CAACzI,SAZAyI,GAAiBiU,EAAS,CAAEtW,KAAMivB,GAAWqR,YAAalR,QAAS/sB,IAY7C0P,YAAY,uBAAuBtJ,MAAOpG,MAEhF,sBAAK7J,UAAU,OAAM,SACnB,eAAC,GAAY,CAACglC,WAjBA1D,GAAmBxjB,EAAS,CAAEtW,KAAMivB,GAAWoR,YAAajR,QAAS0K,IAiB7CA,KAAMA,UCvFrC+G,OAlBf,SAAmBttC,GACjB,MAAM,aAAE01B,EAAY,WAAEC,GAAe31B,EAE/B41B,EAAaC,qBAAWC,MAI9B,OACE,eAAC,IAAM,CACL7wB,UAAU,iBACV+B,UAAW0uB,EACX5xB,KAAMC,IAAUgyB,WAChB9xB,QAPY,IAAM0xB,EAAWC,EAAW2X,qBAAqBzD,KAQ7Dh7B,KAAK,iBCfX,IAAI0+B,GAA+B,GA+DpBC,OA7Df,SAAoBztC,GAClB,MAAM,eAAE88B,GAAmB98B,EAErB41B,EAAaC,qBAAWC,OAavB6H,EAAShI,GAAc5wB,mBAAiB,IACzC2wB,EAA2B,KAAZiI,EACff,EAAc,IAAMjH,EAAW,IAE/BkH,EAAcxjB,IAClB,IAAIukB,EAAM,EACV,KAAO4P,GAAc5P,GAAKt+B,MAAQ+Z,GAAQukB,EAAM4P,GAAcxoC,QAC5D44B,IAEF4P,GAAc3P,OAAOD,EAAK,IAGtB8P,EAAuB,CAACC,EAAkBV,IAC9C,eAAC,GAAY,CAEX5zB,KAAMs0B,EACNV,UAAWA,EACXrQ,YAAaA,EACbE,eAAgBA,EAChBD,WAAYA,GALP8Q,GAqBT,OAX6B,IAAzBH,GAAcxoC,SAChBwoC,GAAgB5X,EAAWsB,kBAAkBl0B,KAAIqW,GAAQq0B,EAAqBr0B,GAAM,MAWpF,uBAAKpU,UAAU,cAAa,UAC1B,sBAAKA,UAAU,UAAS,SACtB,eAAC,GAAS,CAACywB,aAAcA,EAAcC,WAVzBtc,IAClBsc,EAAWtc,GAEXm0B,GAAcA,GAAcxoC,QAAUwoC,GAAc,GACpDA,GAAc,GAAKE,EAAqBr0B,GAAM,QAQ5C,qBAAIpU,UAAU,iBAAgB,SAAEuoC,SCyBvBI,OAtEf,SAA4B5tC,GAC1B,MAAM,uBACJ6tC,EAAsB,gBACtBC,EAAe,gBACf3G,EAAe,YACfC,EAAW,kBACX/J,EAAiB,WACjB1F,EAAU,WACV/B,GACE51B,EAKJsf,qBAAU,KACR6nB,IACAC,MACC,CAACD,EAAiBC,IAKrB,MAAOsB,EAAcqF,GAAmBhpC,oBAAkB,GAUpD+3B,EAAiB,KACrBiR,GAAgB,GAChBC,MAgBK,CAAEA,GAAe/Q,sBAAWh6B,GAAKA,EAAI,GAAG,GAE/C,OACE,gBAAC,KAAmB+kC,SAAQ,CAAC9yB,MAAO0gB,EAAW,UAC7C,eAAC,IAAM,CACLx2B,QAAQ,gEACR6uC,KAAMvF,IAGR,uBAAKzjC,UAAU,qBAAoB,UACjC,eAAC,GAAkB,CAACyjC,aAAcA,EAAcC,eArC/B,KAErBmF,EAAgBlY,EAAWsY,eAC3BL,EAAuBjY,EAAWuY,sBAClCvY,EAAWwY,mBAAmBnI,QAAQtO,GACtC/B,EAAWyY,0BAA0BpI,QAAQ5I,GAC7CzH,EAAW0Y,gBACXP,GAAgB,MAgCZ,eAAC,GAAiB,CAACjR,eAAgBA,IAEnC,eAAC,GAAU,CAACA,eAAgBA,WClDrByR,OALqBpiB,aAjBmCC,IAAK,CAC1EwJ,WAAY,IAAI4Y,KAAsBpiB,EAAMqN,YAAYgV,aAAcriB,EAAMqN,YAAYoK,WAGvB9gB,GACjE8J,YACE,CACEghB,iDACAC,mCACA3G,mCACAC,2BACA/J,uCACA1F,0BAEF5U,IAGgCoJ,CAGlCyhB,ICQac,OAFYviB,aAzB4CC,IAAK,CAC1Eqb,MAAOrb,EAAMC,QAAQob,MACrB7R,WAAY,IAAI4Y,KAAsBpiB,EAAMqN,YAAYgV,aAAcriB,EAAMqN,YAAYoK,OACxF5e,KAAMmH,EAAMC,QAAQpH,KACpBuP,KAAMpI,EAAMC,QAAQmI,KACpBxB,oBAAqB5G,EAAMC,QAAQ2G,oBACnC0U,+BAAgCtb,EAAMqN,YAAYzG,oBAClD2U,MAAOvb,EAAMqN,YAAYkO,MACzBnC,kBAAmBpZ,EAAMC,QAAQsiB,6BAGgC5rB,GACjE8J,YACE,CACE8H,oDACAwS,mCACAE,qBACAD,2BACAE,yDACAC,qBACAC,0CAEFzkB,IAGuBoJ,CAA6C+a,ICJzD0H,OAtBf,SAAqB5uC,GACnB,MAAM,KAAEw0B,GAASx0B,EAEX6uC,EACJra,IAASC,IAAKqa,OAASta,IAASC,IAAKsa,MAAQnB,GAAqB/Y,GAEpE,OACE,gBAAC,IAAM,WACL,eAAC,IAAK,CACJma,OAAO,EACPC,KAAK,kCACLC,UAAWC,KAEb,eAAC,IAAK,CACJF,KAAK,0CACLC,UAAWL,IAEb,eAAC,IAAK,CAACK,UAAWra,SCjBTua,OAFcjjB,aAP0CC,IAAK,CAC1EoI,KAAMpI,EAAMC,QAAQmI,SAG6CzR,GACjE8J,YAAmB,GAAI9J,IAEIoJ,CAA6CyiB,I,4BCgBnE,MAAMS,GAAmErvC,IAC9E,MAAMsvC,GAAiBtvC,EAAMysB,aAC3B,eAAC5D,EAAA,EAAmB,CAClBC,iBAAkB9oB,EAAM8oB,iBAExBxc,MAAOtM,EAAMoE,UAAY,eAAYoC,EACrCvB,UAAWjF,EAAMoE,UAAY,qBAAkBoC,GAC3C,OAIF+oC,EAAuBvvC,EAAMsqB,iBACjC,eAACre,EAAA,EAAa,CAACpI,MAAM,OAAOC,KAAMC,IAAUyrC,oBASxCC,GAAqBzvC,EAAM0vC,eAAiB1vC,EAAMoE,YAAcpE,EAAMysB,aAC1E,eAACxgB,EAAA,EAAa,CAACpI,MAAM,QAAQC,KAAMC,IAAU4rC,KAAM1rC,QAASjE,EAAM4vC,sBAG9DC,GAAsB7vC,EAAMoE,WAAapE,EAAMysB,aACnD,eAACxgB,EAAA,EAAa,CACZpI,MAAM,SACNC,KAAMC,IAAU+rC,cAChB7rC,QAASjE,EAAM+vC,uBAIbC,EAAqBnsC,GACzB7D,EAAMysB,aACJ,eAACxgB,EAAA,EAAa,CAACpI,MAAOA,EAAOC,KAAMC,IAAU4rC,KAAM1rC,QAASjE,EAAMiwC,uBAGhE,mBAAEptB,GAAuBC,cAE/B,OAAOD,EACL,uCAxBqB,MA0BlB4sB,EACAI,EACAG,EAAkB,WAGrB,wCACIhwC,EAAMkwC,iBACN,sBAAKjrC,UAAU,SAAQ,SACrB,eAAC,IAAM,CACLpB,MAAM,GACNu2B,QAASp6B,EAAMsqB,gBACfjkB,SAAUrG,EAAMmwC,8BAIrBZ,GAA0CD,EAC1CG,EACAI,EACAG,EAAkB,qB,wBC3EzB,MAAMI,GAAuB,CAC3BC,cAAe,OACfC,UAAW,SAQb,MAAMC,WAAkCzrC,YACtC0rC,YAAYxwC,GACVywC,MAAMzwC,GAAO,KA8IP0wC,kBAAoB,KAC1BrwB,KAAKswB,UAASvkB,IACL,CAAEwkB,YAAaxkB,EAAMwkB,YAAc,OAE5C,KAEMC,kBAAoB,KAC1BxwB,KAAKswB,UAASvkB,IACL,CAAEwkB,YAAaxkB,EAAMwkB,YAAc,OArJ5CvwB,KAAK+L,MAAQ,CAAE0kB,MAAO,GAAIF,YAAa,GACvCG,KAAexV,MAAKuV,IAClB,GAAIzwB,KAAK+L,MAAM0kB,MAAM9rC,OAAS,EAAG,CAE/B,MAAMlB,EAAOktC,SAASC,eAAe,wBACjC,OAAJntC,QAAI,IAAJA,KAAMotC,UAAUh4B,IAAI,0BAEtBmH,KAAKswB,SAAS,CAAEG,QAAOF,YAAa,OAIjClwB,SACL,MAAMywB,EAA2B,IAAiC,IAA3B9wB,KAAK+L,MAAMwkB,YAC5CQ,EAA2B,KAC9B/wB,KAAK+L,MAAM0kB,OAASzwB,KAAK+L,MAAMwkB,cAAgBvwB,KAAK+L,MAAM0kB,MAAM9rC,OAAS,EAEtEqsC,EAAyB,CAC7BhB,cAAehwB,KAAKqwB,kBACpBJ,UAAWjwB,KAAKwwB,mBAGlBS,qBAAU,CACRC,sBAAuBzoC,GAEJ,cAAdA,EAAMxJ,KAAuB6xC,KAA+B,eAAdroC,EAAMxJ,KAAwB8xC,IAGjFI,qCAAqC,EACrCC,mCAAmC,IAGrC,MAAMC,EAAyBrxB,KAAK+L,MAAM0kB,MAAMzwB,KAAK+L,MAAMwkB,aAE3D,OACE,eAAC,iBAAa,CAACe,OAAQvB,GAAsBwB,SAAUP,EAAuB,SAC5E,uBAAKpsC,UAAWG,IAAW,qBAAsByK,IAAQ8Q,MAAM,UAC5DN,KAAK+L,MAAM0kB,MAAM9rC,OAAS,EACzB,uBACEgF,MAAO,CACLhL,SAAU,WACViL,QAAS,OACT4nC,eAAgB,SAChBC,WAAY,SACZC,aAAc,IACd,UAEF,eAAC,IAAM,CACL/nC,MAAO,CACLhL,SAAU,WACVgzC,KAAM,GAER5jB,OAAO,EACP2M,UAAU,EACVj3B,KAAMC,IAAUglC,WAChB9kC,QAASoc,KAAKqwB,kBACd1pC,SAAUmqC,IAAY,sBAIxB,sBAAIlsC,UAAU,iBAAgB,kBACtBob,KAAK+L,MAAMwkB,YAAc,EAAC,IAAGvwB,KAAK+L,MAAM0kB,MAAM9rC,UAEtD,eAAC,IAAM,CACLgF,MAAO,CACLhL,SAAU,WACVuI,MAAO,GAET6mB,OAAO,EACP2M,UAAU,EACVj3B,KAAMC,IAAUilC,YAChB/kC,QAASoc,KAAKwwB,kBACd7pC,SAAUoqC,IAAY,qBAKxB,KACH/wB,KAAK+L,MAAM0kB,MAAM9rC,OAAS,EACzB,sBAEEgF,MAAO,CACLC,QAAS,OACTgoC,cAAe,MACfC,UAAW,QACX,SAEG,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAM1uC,KAAI,CAACmvC,EAAM/uC,IAChB,uBAAa4G,MAAO,CAAEooC,OAAQV,EAAK1sC,OAAS,EAAI,EAAI,UAAW,UAC5D,IAED,gBAAC,IAAI,CAACgF,MAAO,CAAEgxB,WAAY,UAAWb,QAAS,IAAK,UACjDuX,EAAK1sC,OAAS,GACb,sBACEC,UAAU,iCACV+E,MAAO,CAAEqoC,UAAW,EAAGN,aAAc,GAAIO,WAAY,UAAW,uBAErDlvC,EAAI,KAGlB+uC,OAZK/uC,MARPsuC,EAAK1sC,QA0BZ,qBAAGoB,GAAG,+BAA+BnB,UAAW4K,IAAQ0iC,aAAa,wEAElElyB,KAAK+L,MAAM0kB,MACZ,wBACA,wBAAM,0CACkC,IACxC,gDACa,qCAAa,MAAE,qCAAa,UAAM,qCAAY,OACpD,UACC,IACR,sCACG,wCACK,IAAG,eACE,IACb,sCACG,yCACK,IAAG,iDACmC,sCAAc,gCAE5D,wBACA,wBAAM,sEAC8D,IACpE,oBAAG0B,KAAMC,KAAMC,mBAAoBC,IAAI,sBAAsB7wC,OAAO,SAAQ,SAC1E,+HAIE,aAsBHyuC,U,UCzKf,MAAMqC,WAAiC9tC,YAIrC0rC,YAAYxwC,GACVywC,MAAMzwC,GAAO,KA2Cf6yC,aAAeC,oBAAS,KACtB,MAAMC,EAAW1yB,KAAK2yB,eAAe3yB,KAAKrgB,MAAM6F,aAC1CotC,EAAY5yB,KAAK6yB,gBAAgB7yB,KAAKrgB,MAAM8F,mBAC9CitC,IAAa1yB,KAAK+L,MAAM/iB,OAAS4pC,IAAc5yB,KAAK+L,MAAM9iB,SAC5D+W,KAAKswB,SAAS,CACZrnC,OAAQ2pC,EACR5pC,MAAO0pC,IAET3yC,KAAc+yC,iBAAiBJ,EAAUE,MAE1C,KApDD5yB,KAAK+L,MAAQ,CACXgnB,cAAe,KACf/pC,MAAOgX,KAAK2yB,eAAehzC,EAAM6F,aACjCyD,OAAQ+W,KAAK6yB,gBAAgBlzC,EAAM8F,oBAErC1F,KAAcm7B,MACZ6X,GAAiB/yB,KAAKswB,SAAS,CAAEyC,mBACjC/yB,KAAK+L,MAAM/iB,MACXgX,KAAK+L,MAAM9iB,QAIP0pC,eAAentC,GAGrB,IAAIwD,EASJ,OAPEA,OADkB7C,IAAhBX,EACMpF,OAAO4yC,WAJS,GAMhBvU,KAAKrgB,IALE,IAOZhe,OAAO4yC,YAAc,IAAMC,WAAWztC,IAAiB,IARlC,IAWnBi5B,KAAKrgB,IAAIpV,EAVC,KAaX6pC,gBAAgBptC,GAGtB,IAAIwD,EASJ,OANEA,EAFE7I,OAAO4yC,WAAapqB,KAAUsqB,uBAGD/sC,IAAtBV,EADArF,OAAO+yC,YALM,IASb1tC,EATa,IAWjBg5B,KAAKrgB,IAAInV,EAVE,KAyBpB4W,oBACEG,KAAKwyB,eACLpyC,OAAOgzC,iBAAiB,SAAUpzB,KAAKwyB,cACvCzyC,KAAcszC,SAEhBC,uBACEtzB,KAAKwyB,aAAae,SAClBnzC,OAAOozC,oBAAoB,SAAUxzB,KAAKwyB,cAG5CiB,mBAAmBC,GAEfA,EAAUjuC,oBAAsBua,KAAKrgB,MAAM8F,mBAC3CiuC,EAAUluC,cAAgBwa,KAAKrgB,MAAM6F,aAErCwa,KAAKwyB,eAIFnyB,SACL,OACE,sBAAKzb,UAAW4K,IAAQ8Q,KAAK,SAC1BN,KAAK+L,MAAMgnB,eACV,qBAAGhtC,GAAG,8BAA8BnB,UAAW4K,IAAQ0iC,aAAa,qHAE3C,IACvB,oBAAGC,KAAMC,KAAMuB,mBAAoBrB,IAAI,sBAAsB7wC,OAAO,SAAQ,SAC1E,+HAIE,IAEJ,wBACA,wBAAM,ibAaH8wC,UClEf,MAAMqB,WAAiCnvC,gBAGrC0rC,YAAYxwC,GACVywC,MAAMzwC,GAAO,KAHPk0C,WAAK,OA0DLC,aAAe,KAErB9zB,KAAK+zB,sCAAsC/zB,KAAKrgB,MAAMq0C,eACtD,KAEMC,kBAAoB,KAC1Bj0B,KAAKrgB,MAAMu0C,4BAA4Bl0B,KAAK6zB,MAAMvrC,QAAS6rC,WAC3D,KAEMC,YAAeC,IACrBr0B,KAAKrgB,MAAM20C,2BAA2BD,IACtC,KAEMN,sCAAyCC,IAC/Ch0B,KAAKswB,SACH,CACEiE,qBAAsBv0B,KAAK+L,MAAMwoB,qBAAuB,IAE1D,IAAMv0B,KAAKw0B,2BAA2BR,MAExC,KAEMQ,2BAA6Bxe,UACnC,MAAMye,EAASC,GAAe,IAAIx8B,SAAQsI,GAAKm0B,WAAWn0B,EAAGk0B,KACvDE,EAAkB50B,KAAK+L,MAAMwoB,qBACnC,IAAIM,EAAgD,IAAlC70B,KAAK6zB,MAAMvrC,QAASusC,YACtC70B,KAAKrgB,MAAMijB,wBAAwBoxB,EAAa9Y,KAAKlX,aACrDhE,KAAKrgB,MAAMm1C,qBAAqBd,EAAa9Y,KAAKxW,iBAClD1E,KAAKrgB,MAAMsP,oBAAoB+kC,EAAa9Y,KAAKppB,SACjD,MAAMijC,EAAoBf,EAAahnC,OACpCwa,QACCwtB,GAAiBA,EAAc/7B,MAAQ47B,GAAsC,cAAvBG,EAAc5oC,OAErEzJ,KAAIqyC,GAAiBA,EAAcrxB,OACtC3D,KAAKo0B,YAAYW,GAEjB,MAAME,EAAajB,EAAahnC,OAAOwa,QACrCwtB,GAAiBA,EAAc/7B,KAAO47B,IAElCtK,EAAM0K,EAAWtwC,OACvB,IAAI5B,EAAI,EACR,KAAOA,EAAIwnC,GAAOvqB,KAAK+L,MAAMwoB,uBAAyBK,GACpDC,EAAgD,IAAlC70B,KAAK6zB,MAAMvrC,QAASusC,YAC9BI,EAAWlyC,GAAGkW,KAAO47B,GACvB70B,KAAKrgB,MAAMu1C,sBAAsBD,EAAWlyC,IAC5CA,WAGI0xC,EAAM,KAEd,KAQMU,oBAAsB,KACdn1B,KAAK6zB,MAAMvrC,QAClB8sC,QACPp1B,KAAKrgB,MAAM01C,2BAA0B,GACrCr1B,KAAKrgB,MAAM21C,0BAA0BC,IAAeC,QACpDx1B,KAAKy1B,uBACL,KAEMC,oBAAsB,KACd11B,KAAK6zB,MAAMvrC,QAClBqtC,OACP31B,KAAKrgB,MAAM01C,2BAA0B,GACrCr1B,KAAKrgB,MAAM21C,0BAA0BC,IAAeK,SACpD51B,KAAK+zB,sCAAsC/zB,KAAKrgB,MAAMq0C,cAClDh0B,KAAKrgB,MAAMuiB,gBACblC,KAAKrgB,MAAMuiB,eAAe9b,KAAgBgd,eAE5C,KAEMyyB,qBAAuB,KAC7B71B,KAAKrgB,MAAM01C,2BAA0B,GACrCr1B,KAAKrgB,MAAM21C,0BAA0BC,IAAeC,QACpDx1B,KAAKrgB,MAAMm2C,2BAA2B,GACtC91B,KAAKswB,SAAS,CACZyF,sBAAuB,KAEzB,KAEMC,iBAA8DC,IACpE,MAAM,YAAEpB,GAAyCoB,EAAEx0C,OACnDue,KAAKrgB,MAAMm2C,2BAA2BjB,GACtC70B,KAAKswB,SAAS,CACZyF,sBAAuBlB,EAAc70B,KAAKrgB,MAAMw0C,WAI9Cn0B,KAAKrgB,MAAMu2C,iBAAmBX,IAAeY,cAC/Cn2B,KAAKm1B,uBAEP,KAEMiB,8BAAiCvhC,IACvC,GAAImL,KAAK6zB,MAAMvrC,QAAS,CACtB,MAAMusC,EAAc70B,KAAKrgB,MAAMw0C,SAAWt/B,EAC1CmL,KAAK6zB,MAAMvrC,QAAQusC,YAAcA,EACjC70B,KAAKrgB,MAAMm2C,2BAA2BjB,GACtC70B,KAAKswB,SAAS,CACZyF,sBAAuBlhC,MAG3B,KAEMwhC,YAAexhC,IACrB,GAAImL,KAAKrgB,MAAMw0C,SAAU,CACvB,MAAMmC,EAAYt2B,KAAKrgB,MAAMw0C,SAAWt/B,EAClCuJ,EAAMqgB,KAAKC,MAAM4X,EAAY,IAC7BC,EAAM9X,KAAKC,MAAM4X,EAAkB,GAANl4B,GAGnC,OAFkBA,EAAM,GAAK,IAAMA,EAAMA,GAEtB,KADDm4B,EAAM,GAAK,IAAMA,EAAMA,GAGzC,MAAO,SA7KTv2B,KAAK6zB,MAAQpvC,cACbub,KAAK+L,MAAQ,CACXwoB,qBAAsB,EACtBwB,sBAAuB,EACvBS,sBAAuB,KACvBrC,SAAU,GAIP9zB,SACL,MAAMo2B,EACJ,eAAC7qC,EAAA,EAAa,CACZpI,MAAM,OACNC,KAAMC,IAAU0tB,KAChBxtB,QAASoc,KAAK01B,oBACd5pC,YAAakU,KAAKrgB,MAAMw0C,WAGtBuC,EACJ,eAAC9qC,EAAA,EAAa,CAACpI,MAAM,QAAQC,KAAMC,IAAUizC,MAAO/yC,QAASoc,KAAKm1B,sBAEpE,OACE,uBAAKvwC,UAAU,uBAAsB,UACnC,wBACEqtB,IAAKjS,KAAKrgB,MAAMi3C,SAChBvtC,IAAK2W,KAAK6zB,MACVgD,QAAS72B,KAAK61B,qBACdiB,iBAAkB92B,KAAKi0B,kBACvB8C,SAAU/2B,KAAK8zB,aACfkD,aAAch3B,KAAKg2B,iBACnBiB,QAAQ,aAGV,wBACA,uBAAKryC,UAAU,gBAAe,UAC5B,gBAAC,IAAW,CAACA,UAAU,sBAAqB,UACzCob,KAAKrgB,MAAMu2C,iBAAmBX,IAAeC,QAAUiB,EACvDz2B,KAAKrgB,MAAMu2C,iBAAmBX,IAAeK,SAAWc,KAE3D,sBAAK9xC,UAAU,SAAQ,SACrB,eAAC,IAAM,CACLwZ,IAAK,EACLC,IAAK,EACL64B,SAAU,KACVlxC,SAAUga,KAAKo2B,8BACfvhC,MAAOmL,KAAK+L,MAAMgqB,sBAClBoB,cAAen3B,KAAKq2B,sBA4DxBZ,sBACNz1B,KAAKswB,SAAS,CACZiE,qBAAsBv0B,KAAK+L,MAAMwoB,qBAAuB,KAsE/CX,U,mBC1LAwD,OAlC2Dz3C,IACxE,MAAO03C,EAAcC,GAAmB5yC,oBAAS,GAE3C6yC,EAAoB,IAAMD,GAAgB,GAOhD,OACE,iCACE,eAAC1rC,EAAA,EAAa,CAACnI,KAAMC,IAAUqyB,MAAOnyB,QARjB,IAAM0zC,GAAgB,KAS3C,gBAAC,IAAM,CACL7zC,KAAK,YACL2X,OAAQi8B,EACR7tB,QAAS+tB,EACThxC,MAAM,oBACNixC,sBAAsB,EAAK,UAE3B,sBAAK5yC,UAAW4K,IAAQia,YAAY,SAClC,iFAEF,sBAAK7kB,UAAW4K,IAAQka,cAAc,SACpC,uBAAK9kB,UAAW4K,IAAQioC,sBAAsB,UAC5C,eAAC7rC,EAAA,EAAa,CAACpI,MAAM,iBAAiBC,KAAMC,IAAUqyB,MAAOnyB,QApBlD,KACnB,MAAM,KAAE+f,GAAShkB,EACjBA,EAAM+3C,4BAA4B/zB,EAAK5d,OAmB/B,eAAC6F,EAAA,EAAa,CAACpI,MAAM,SAASC,KAAMC,IAAU4rB,MAAO1rB,QAAS2zC,gBCpB1E,MAAMI,WAAiClzC,YAC9B0rC,YAAYxwC,GACjBywC,MAAMzwC,GAAO,KAePi4C,aAAe,KACrB,MAAM,KAAEj0B,GAAS3D,KAAKrgB,MACtBqgB,KAAKrgB,MAAMk4C,wBACTl0B,EAAKpd,MACLod,EAAKqF,YACLrF,EAAKm0B,IACLn0B,EAAKo0B,IACLrN,KAAKM,MAAMrnB,EAAKqwB,gBAnBb3zB,SACL,OACE,eAAC,IAAQ,CAACrc,QAAQ,4BAA2B,SAC3C,eAAC4H,EAAA,EAAa,CACZpI,MAAQ,GAAEwc,KAAKrgB,MAAMgkB,KAAKpd,QAC1B9C,KAAMC,IAAUs0C,UAChBp0C,QAASoc,KAAK43B,kBAkBTD,U,UCjCf,MAAMM,WAAgCxzC,YAG7B0rC,YAAYxwC,GACjBywC,MAAMzwC,GAAO,KAHPu4C,oBAAc,EAIpBl4B,KAAKk4B,eAAiBzzC,cACtBub,KAAKm4B,qBAAuBn4B,KAAKm4B,qBAAqBC,KAAKp4B,MAC3D,MAAM+3B,EAAO,GAAE33C,OAAOi4C,SAASC,aAAal4C,OAAOi4C,SAASE,gBAAgB54C,EAAMknB,uBAAuBlnB,EAAMgkB,KAAKm0B,MACpH93B,KAAK+L,MAAQ,CACXysB,SAAUT,GAIP13B,SACL,MAAMo4B,EACJ,iCACE,wBAAOC,aAAc14B,KAAK+L,MAAMysB,SAAUG,UAAU,EAAMtvC,IAAK2W,KAAKk4B,iBACpE,eAAC,IAAQ,CAACl0C,QAAQ,yBAAwB,SACxC,eAAC,GAAe,CAACyK,KAAMuR,KAAK+L,MAAMysB,SAAS,SACzC,eAAC5sC,EAAA,EAAa,CAACnI,KAAMC,IAAUk1C,UAAWh1C,QAASoc,KAAKm4B,6BAJpDn4B,KAAK+L,MAAMysB,UAUvB,OACE,eAAC,KAAQ,CACPK,iBAAiB,gBACjBC,kBAAkB,EAClB90C,QAASy0C,EAA0B,SAEnC,eAAC,IAAQ,CAACz0C,QAAQ,qBAAoB,SACpC,eAAC4H,EAAA,EAAa,CAACnI,KAAMC,IAAUq1C,YAM/BZ,uBAC8B,OAAhCn4B,KAAKk4B,eAAe5vC,UACtB0X,KAAKk4B,eAAe5vC,QAAQ0wC,QAC5Bh5B,KAAKk4B,eAAe5vC,QAAQ2wC,WAKnBhB,UCnBf,MAAMiB,WAAwBz0C,YAIrB0rC,YAAYxwC,GACjBywC,MAAMzwC,GAAO,KAJPw5C,uBAAiB,OACjBC,aAAO,OA4IPC,mBAAsB5wC,IAC5B,MAAM6wC,EAAY7wC,EAAMhH,OAAOoT,MAC/BmL,KAAKswB,SAAS,CAAEiJ,YAAaD,IAEzBt5B,KAAKo5B,SACPp5B,KAAKo5B,QAAQI,eAAeF,IAE9B,KAEMG,YAAe/pB,IACrB1P,KAAKo5B,QAAU1pB,EAAOgqB,IACtB15B,KAAKo5B,QAAQO,mBACbv5C,OAAOw5C,SAAW,IAAM55B,KAAKo5B,QAASO,oBAnJtC35B,KAAK+L,MAAQ,CACX8tB,WAAY,CACV,CACEC,WAAY,QACZC,MAAO,QACPC,sBAAuBrC,GACvBsC,mBAAoB,CAClBpC,wBAAyB73B,KAAKrgB,MAAMk4C,yBAEtCntC,SAAU,IACVwvC,iBAAiB,EACjBC,cAAc,EACdC,UAAW,CACT,aAAc,QAEhBC,MAAOr6B,KAAKrgB,MAAMk4C,yBAEpB,CACEiC,WAAY,QACZC,MAAO,QACPrvC,SAAU,IACVwvC,iBAAiB,EACjBC,cAAc,EACdE,OAAQr6B,KAAKrgB,MAAMk4C,yBAErB,CACEiC,WAAY,WACZC,MAAO,gBACPrvC,SAAU,IACVwvC,iBAAiB,EACjBC,cAAc,EACdC,UAAW,CACT,aAAc,WAGlB,CACEN,WAAY,OACZQ,YAAa5qB,IAAU6qB,OjEpDD75B,EiEoDiBgP,EAAO/L,KAAK62B,YjEnD9C55B,IAAOF,GACIK,OAAO,gBAFDL,OiEqDtBhW,SAAU,IACVwvC,iBAAiB,EACjBC,cAAc,GAEhB,CACEL,WAAY,QACZC,MAAO,MACPC,sBAAuB/B,GACvBgC,mBAAoB,CAClBpzB,SAAU7G,KAAKrgB,MAAMknB,UAEvBnc,SAAU,GACVwvC,iBAAiB,EACjBC,cAAc,GAEhB,CACEL,WAAY,SACZC,MAAO,GACPC,sBAAuBS,GACvBR,mBAAoB,CAClBvC,4BAA6B13B,KAAKrgB,MAAM+3C,6BAE1ChtC,SAAU,IACVC,SAAU,IACV+vC,UAAU,EACVR,iBAAiB,EACjBC,cAAc,EACdC,UAAW,CACT,aAAc,UAEhBC,MAAOr6B,KAAKrgB,MAAM+3C,6BAEpB,CAAEoC,WAAY,cAAeC,MAAO,cAAeM,MAAM,GACzD,CAAEP,WAAY,cAAeC,MAAO,cAAeM,MAAM,GACzD,CAAEP,WAAY,aAAcC,MAAO,aAAcM,MAAM,GACvD,CAAEP,WAAY,QAASC,MAAO,QAASM,MAAM,GAC7C,CAAEP,WAAY,eAAgBC,MAAO,eAAgBM,MAAM,GAC3D,CAAEP,WAAY,MAAOC,MAAO,MAAOM,MAAM,IAE3Cd,YAAa,GACboB,oBAAoB,GAGtB36B,KAAKm5B,kBAAoB,CACvB3xB,QAAQ,EACRozB,WAAW,EACXF,UAAU,GAIPr6B,SAEL,MAAMw6B,EACJ,eAAC,IAAa,CACZj2C,UAAU,aACVokB,YAAY,+BACZvlB,KAAM,eAAC,IAAO,CAAC0B,KAAM8jB,IAAYC,UAG/BvF,EAAO8M,iBAAOzQ,KAAKrgB,MAAMm7C,gBAAiB,CAAEpqB,IAAuBA,EAAE3qB,KAErEg1C,EACJ,uBAAKn2C,UAAU,sBAAqB,UAClC,wBACA,+BACE,eAAC,IAAS,CAACpB,MAAM,GAAGw3C,SAAS,aAAY,SACvC,eAAC,IAAU,CACTj1C,GAAG,YACHgoB,OAAO,EACPkP,SAAS,SACT9e,YAAY,SACZtJ,MAAOmL,KAAK+L,MAAMwtB,YAClBvzC,SAAUga,KAAKq5B,yBAIrB,eAAC,IAAO,IACR,sBAAKz0C,UAAU,kBAAiB,SAC9B,sBAAKA,UAAU,iBAAgB,SAC7B,eAAC,eAAW,CACVq2C,UAAW,aACXpB,WAAY75B,KAAK+L,MAAM8tB,WACvBqB,cAAel7B,KAAKm5B,kBACpBM,YAAaz5B,KAAKy5B,YAClB0B,QAASx3B,EACTy3B,UAAW,GACXC,YAAY,EACZC,mBAAoB,SAI1B,2BAGJ,OAAO,oCAAqCn1C,IAA/B6Z,KAAKrgB,MAAMm7C,gBAAgCD,EAAiBE,KAmB9D7B,UC3Ff,MAAMjzC,GAAuC,aA0QvCs1C,GAAe,yBAEfC,GAAoC,CACxCh4C,MAAO,kBACP0B,SAAUxB,IAAU6tB,SACpBnsB,KAAM,eAAC,GAAyB,IAChCW,GAAIK,KAAgBq1C,gBAGhBC,GAAmC,CACvCl4C,MAAO,iBACP0B,SAAUxB,IAAUqkC,MACpB3iC,KAAM,eAAC,GAAwB,IAC/BW,GAAIK,KAAgBu1C,eAGPC,OAxR+Bj8C,IAC5C,MAAM,mBAAE6iB,GAAuBC,cAEzBC,EAAWC,eAOVV,EAAaC,GAAkBzd,WAAe2B,KAAgBy1C,cAE/DC,EAAmBr3C,eAAkB,KACzC,MAAMs3C,EAASp8C,EAAMq8C,MAAMtsB,OAAOusB,aAClC,GAAIF,GAAUA,IAAWp8C,EAAMm4C,KAAOn4C,EAAMm7C,gBAAiB,CAC3D,MAAMoB,EAAOv8C,EAAMm7C,gBAAgBvW,MAAK5gB,GAAQA,EAAKm0B,MAAQiE,IACzDG,GACFv8C,EAAMk4C,wBACJqE,EAAK31C,MACL21C,EAAKlzB,YACLkzB,EAAKpE,IACLoE,EAAKnE,IACLrN,KAAKM,MAAMkR,EAAKlI,kBAIrB,CAACr0C,IAEJ8E,aAAgB,KACdie,EAASy5B,gCAAqBl2C,OAG7B,IAEHxB,aAAgB,KACdq3C,IAEA,MAAM,aAAEM,GAAiBz8C,EAEzB,GAAKy8C,EAIL,OAAQA,EAAahwC,MACnB,IAAK,kBACH8V,EAAek6B,EAAaz4B,MAC5B,MACF,IAAK,gBACHhkB,EAAMsP,oBAAoBmtC,EAAaz4B,MACvC,MACF,IAAK,wBACHhkB,EAAMm1C,qBAAqBsH,EAAaz4B,MACxC,MACF,IAAK,aACHhkB,EAAM21C,0BAA0BC,IAAeY,iBAKlD,CAAC2F,EAAkBn8C,EAAMy8C,eAK5B33C,aAAgB,KAEX+d,GACAP,IAAgB7b,KAAgBgd,cAC/BnB,IAAgB7b,KAAgBid,iBAElCnB,EAAe9b,KAAgBy1C,gBAEhC,CAACr5B,EAAoB7iB,EAAOsiB,IAE/B,MAAMo6B,EACJ,eAACrN,GAAwB,CACvBO,oBAAqB,IAAM7sB,EAAS45B,8BAAmBr2C,KACvD2pC,oBAAqB,IAAMltB,EAAS65B,yBAAct2C,KAClDypC,qBAAsB,IAAMhtB,EAAS85B,0BAAev2C,KACpDwiB,iBAAkB9oB,EAAM8oB,iBACxBg0B,oBAAqB,IAAM/5B,EAASg6B,mCAAwBz2C,KAC5D6pC,0BAA2B,IAAMptB,EAAStQ,8BAAoBnM,KAC9DmmB,YAAazsB,EAAMysB,YACnBnC,gBAAiBtqB,EAAMsqB,gBACvBlmB,UAAWpE,EAAMoE,WACb,WAOF8N,EACJ,eAAC/C,EAAA,EAAuB,CACtBG,oBALyB,CAAC,EAAmCgnC,KAAM,IAAzC,QAAEnkC,GAA+B,SAC7DnS,EAAMsP,oBAAoB6C,IAKxB/C,cAAepP,EAAMoP,cACrBC,cAAerP,EAAMqP,eACjB,WAIFsc,EACJ,eAAChoB,EAAA,EAAqB,CACpBC,sBAAuB,IAAMmf,EAAS9P,0BAAgB3M,MAClD,cAIF02C,EACJ,eAAC94C,EAAA,EAAoB,CACnBC,eAAgBnE,EAAMmE,eACtBC,UAAWpE,EAAMoE,WACb,aAIFI,EAAyB,CAC7B,CACEX,MAAO,mBACP0B,SAAUxB,IAAUk5C,KACpBx3C,KACE,iCACE,uBAAMR,UAAU,aAAY,SAC1B,eAAC,IAAG,UACDjF,EAAM4G,MACH,UAAY5G,EAAM4G,MAAQ,kBAAoB5G,EAAMqpB,YACpDuyB,OAGR,eAACsB,GAAmB,CAClBhF,wBAAyBl4C,EAAMk4C,wBAC/BiD,gBAAiBn7C,EAAMm7C,gBACvBj0B,SAAUlnB,EAAMknB,cAItB9gB,GAAIK,KAAgBy1C,cAEtBL,GACAE,IAGIoB,EAAe,CACnBp2B,EACAC,EACAle,KAEIie,IAAaC,GAGjBzE,EAAewE,IAGX1b,EAAuD,CAC3D2e,cAAe,aACf5E,WAAYplB,EAAMolB,WAAWpiB,IAAIinB,KACjCmrB,kBAAmBp1C,EAAMo1C,kBACzBp/B,iBAAkBhW,EAAMgW,iBACxBkU,gBAAiB,GACjBC,0BAA2B7U,GACzByN,EAAS1N,gCAAsB/O,GAAmBgP,IACpDwT,iBAAkB9oB,EAAM8oB,iBACxB7F,wBAAyBjjB,EAAMijB,wBAC/BqH,gBAAiBtqB,EAAMsqB,gBACvBmyB,aAAcz8C,EAAMy8C,aACpBW,UAAWp9C,EAAMu2C,iBAAmBX,IAAeK,QACnD9wB,8BAA+B5Q,GAC7BwO,EAASzO,8BAAoBC,EAAajO,MAGxCqF,EAAY,CAChB6f,OAAQxrB,EAAMwrB,OACdC,UAAWzrB,EAAMyrB,UACjBL,wBAAyB,IAAMrI,EAAS5R,gCAAsB7K,KAC9D+kB,sBAAuB,IAAMtI,EAAS1R,8BAAoB/K,KAC1DnC,eAAgBnE,EAAMmE,eACtBmnB,sBAAwBC,GACtBxI,EAASnO,0BAAgB2W,EAAUjlB,KACrC8I,cAAepP,EAAMoP,cACrBC,cAAerP,EAAMqP,cACrB0V,gBAAiB/kB,EAAMsS,oBACvBoZ,YAAa,CAACsxB,EAAYrxB,IAGtB7gB,EAAe,CACnBtG,KAAM,IAGFonB,EAAiC,CACrChhB,gBAAiB,CACfue,cAAe,CAACuzB,EAAgBxqC,IAElC7G,qBAAsBA,EACtBZ,8BAA+B4yC,GAC7Bt6B,EAASlR,kCAAwBwrC,EAAQ/2C,KAC3CqF,UAAWA,EACXb,aAAcA,EACdhF,kBAAmB9F,EAAM8F,kBACzBqE,iBAAkB,CAChBxE,cAAe2c,EACfjc,SAAU82C,EACV34C,KAAM,CACJqiB,kBAAmBriB,EACnBsiB,iBAAkB,IAEpBxgB,kBAAmB,aACnBR,kBAAmB9F,EAAM8F,oBAGvBgmB,EAA6C,CACjDzgB,qBAAsBA,EACtBM,UAAWA,EACXb,aAAcA,EACdihB,uBAAwB,CACtBC,sBAAuB,CACrB7C,cAAe,CAACuzB,EAAgBxqC,IAElCvM,cAAe2c,EACfjc,SAAU82C,EACV34C,KAAM,CACJqiB,kBAAmBriB,EACnBsiB,iBAAkB,IAEpBxgB,kBAAmB,eAIjBg3C,EAA2D,CAC/Dr6B,wBAAyBjjB,EAAMijB,wBAC/BmH,yBAA0B,CAACnT,EAAKoT,EAAKlT,IACnC4L,EAAS/L,6BAAmB1Q,GAAmB2Q,EAAKoT,EAAKlT,IAC3Dg/B,2BAA6BoH,GAC3Bx6B,EAASy6B,gCAAqBD,EAAYj3C,KAC5CquC,2BAA6BD,GAC3B3xB,EAAS06B,gCAAqB/I,EAAQpuC,KACxCovC,0BAA4BgI,GAC1B36B,EAAShN,8BAAoBzP,GAAmBo3C,IAClDnI,sBAAuBkH,GACrB15B,EAAS46B,2BAAgBlB,EAAcn2C,KACzCiuC,4BAA8BC,GAC5BzxB,EAAS66B,iCAAsBpJ,EAAUluC,KAC3CqvC,0BAA2B31C,EAAM21C,0BACjCsB,SAAUj3C,EAAMi3C,SAChB4G,kBAAmB79C,EAAM69C,kBACzBrJ,SAAUx0C,EAAM89C,iBAChBzJ,aAAcr0C,EAAMq0C,aACpBkC,eAAgBv2C,EAAMu2C,eACtBjnC,oBAAqBtP,EAAMsP,oBAC3B6lC,qBAAsBn1C,EAAMm1C,qBAC5B5yB,eAAgBA,GAGlB,OACE,uBAAKtd,UAAWG,IAAW,aAAcyK,IAAQ8Q,MAAM,UACrD,eAAC,GAAwB,IAAK28B,IAC7Bz6B,EACC,eAACoJ,GAAA,EAAe,IAAKH,IAErB,eAACnkB,GAAA,EAAS,IAAKikB,QC/VvB,MA4BM8sB,GAA8B,aA0BrBqF,OAFaC,YAAW7xB,aApDgCC,IAAK,CAC1E6qB,SAAU7qB,EAAMG,WAAW0xB,WAAWhH,SACtC4G,kBAAmBzxB,EAAMG,WAAW0xB,WAAWJ,kBAC/CzI,kBAAmBhpB,EAAMG,WAAW0xB,WAAW7I,kBAC/CxuC,MAAOwlB,EAAMG,WAAW0xB,WAAWr3C,MACnCyiB,YAAa+C,EAAMG,WAAW0xB,WAAW50B,YACzCmD,qBAAsBJ,EAAMG,WAAW0xB,WAAWzxB,qBAClDpH,WAAYgH,EAAMG,WAAW0xB,WAAW74B,WACxC9S,oBAAqB8Z,EAAMG,WAAW0xB,WAAWl5B,gBACjDuF,gBAAiB8B,EAAMG,WAAW0xB,WAAW3zB,gBAC7CtU,iBAAkBoW,EAAMG,WAAW0xB,WAAWjoC,iBAC9CymC,aAAcrwB,EAAMG,WAAW0xB,WAAWxB,aAC1Cr4C,UAAWgoB,EAAMG,WAAW0xB,WAAW75C,UACvCqoB,YAAaL,EAAMG,WAAW0xB,WAAWxxB,YACzCC,gBAAiBN,EAAMG,WAAW0xB,WAAWvxB,gBAC7ClB,OAAQY,EAAMG,WAAW0xB,WAAWzyB,OACpCsyB,iBAAkB1xB,EAAMG,WAAW0xB,WAAWH,iBAC9CzJ,aAAcjoB,EAAMG,WAAW0xB,WAAW5J,aAC1CkC,eAAgBnqB,EAAMG,WAAW0xB,WAAW1H,eAC5C9qB,UAAWW,EAAMG,WAAW0xB,WAAWxyB,UACvC3lB,kBAAmBsmB,EAAMG,WAAW0xB,WAAWn4C,kBAC/Cq1C,gBAAiB/uB,EAAMG,WAAW0xB,WAAW9C,gBAC7C/rC,cAAeyV,UAAQC,MACvBzV,cAAe+c,EAAMG,WAAW0xB,WAAW99C,QAAQa,QACnDm3C,IAAK/rB,EAAMG,WAAW0xB,WAAW9F,IACjCjxB,SAAUkF,EAAMC,QAAQnF,aAKyCnE,GACjE8J,YACE,CACEvd,oBAAsB6C,GAAqBD,wBAAcC,EAASlR,UAAQC,QAASw3C,IACnF5vB,iBAAkB,IAAMvV,qBAAWmlC,IACnCz1B,wBAA0B6J,GAAgB3Y,4BAAkB2Y,EAAK4rB,IACjEvD,qBAAuB7iC,GACrBD,gCAAsBC,EAAqBomC,IAC7Cv0C,eAAgB,IAAMsP,mBAASilC,IAC/BR,wBAAyB,CACvBtxC,EACAyiB,EACA8uB,EACAlB,EACA5C,IACG6J,6BAAkBt3C,EAAOyiB,EAAa8uB,EAAKlB,EAAU5C,EAAcqE,IACxE/C,0BAA4BY,GAC1B4H,+BAAoB5H,EAAgBmC,KAExC31B,IAGmCoJ,CAA6C8vB,K,mBCqOrEmC,OA5QmCp+C,IAChD,MAAO2nC,EAAO0W,GAAYv5C,IAAMC,SAA8B,KACvDu5C,EAAeC,GAAoBz5C,IAAMC,SAA+B,IACzE00C,EAAU30C,IAAM05C,UAChB,UAAEC,GAAcC,eA2BhBtD,EACJ,sBAAKn2C,UAAU,sCAAqC,SAClD,eAAC,eAAW,CACVq2C,UAAW,aACXpB,WA7Ba,CACjB,CACEC,WAAY,WACZC,MAAO,YAET,CACED,WAAY,OACZC,MAAO,QAET,CACED,WAAY,QACZC,MAAO,UAmBLmB,cAfoB,CACxB1zB,QAAQ,EACRozB,WAAW,EACXF,UAAU,GAaNjB,YAVe/pB,IACnB0pB,EAAQ9wC,QAAUonB,EAAOgqB,KAUrB4E,kBAAmB,kBAAqB,QAArB,EAAMlF,EAAQ9wC,eAAO,aAAf,EAAiBqxC,oBAC1CwB,QAAS7T,EACT8T,UAAW,GACXmD,uBAAuB,EACvBC,wBAAwB,EACxBnD,YAAU,MAKVoD,EAAoB,IAAI71B,KAAU81B,cAAcC,WAAWh8C,KAAI,QAAEoD,EAAI4/B,GAAE,SAAK5/B,MAC3E64C,EAAUC,GAAep6C,IAAMC,SAAS+5C,EAAkB,IA+EjE,OACE,uBAAK75C,UAAU,YAAW,UACxB,eAAC,IAAE,wBACFm2C,EACD,eAAC,IAAE,+EACH,sBAAKn2C,UAAU,mBAAkB,SAC/B,iCACE,uBAAKA,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,aAAY,SACzB,eAACw5C,EAAS,CACRU,iBAAmBC,GAvFPA,KACxB,MAAM,KAAEp7B,EAAI,OAAEpJ,GAAgDwkC,EAG9D,GAAMxkC,EAAO5V,OAIX,YAHAu5C,EACE,uFAWJ,MAAMc,EAAiC,IAAI1X,GAE3C,GAAI3jB,EAAKhf,OAAS2iC,EAAM3iC,OAAS,IAC/Bu5C,EAAiB,iDADnB,CAKA,IAAK,IAAIn7C,EAAI,EAAGA,EAAI4gB,EAAKhf,OAAQ5B,IAAK,CAEpC,GAAyB,IAAnB4gB,EAAK5gB,GAAG4B,QAAmC,IAAnBgf,EAAK5gB,GAAG4B,OAepC,YAdAu5C,EACE,uCACE,yDACwBn7C,EAAC,kFAGzB,wBACA,4CACU,+CAAoB,IAAC,oCAAS,IAAC,wDAEzC,wBACA,oGAMN,IAAKipC,OAAOC,OAAO7X,KAAM/N,SAAS1C,EAAK5gB,GAAG,IAIxC,YAHAm7C,EACG,sBAAqBn7C,iHAM5B4gB,EAAKiiB,SAAQqQ,IACX+I,EAAU94B,KAAK,CACb0hB,SAAUqO,EAAE,GACZ9hB,KAAM8hB,EAAE,GACR7O,MAAO6O,EAAE,QAKTgJ,iBAAOD,GAAWvyB,GAAOA,EAAImb,WAAUjjC,SAAWq6C,EAAUr6C,QAMhEq5C,EAASgB,GACTd,EAAiB,KANfA,EAAiB,2DAyB6BgB,CAAiBH,GACrDva,OAAQ,CACN2a,UAAW,IACXC,gBAAgB,GAChB,SAED,QAAC,aAAEC,EAAY,aAAEC,EAAY,YAAEC,EAAW,mBAAEC,GAAyB,SACpE,uCACE,eAAC,IAAS,CAAC/wC,KAAK,aAAagxC,WAAYJ,MACzC,eAAC,KAAQ,CACPr7C,QACE,iCACE,+BACE,4CAAiB,SACjB,6BACE,iDACE,qBAEJ,6BACE,0DAGJ,+BACE,6BACE,4CACE,gFAIN,+BACE,6BACE,wCACE,2CACqC,IACzC,8DAEF,+BACE,6BACE,oDACE,iEAGN,6BACE,4HAKF,6BACE,wHAMF,sCACA,6BACE,6CAEF,6BACE,0GAKF,6BACE,uHAKF,6BACE,4GAMNsqB,gBAAgB,QAChB3vB,SAAUC,IAASC,IACnBg6C,iBAAiB,qBAAoB,SAErC,eAAC,IAAI,CAACp1C,KAAMC,IAAU8Y,KAAM5X,UAAU,8BAOhD,eAAC,IAAS,CACRA,UAAU,cACVpB,MACE,uBAAKoB,UAAU,oBAAmB,UAChC,2DACA,eAAC,KAAQ,CACPZ,QAAQ,oEACRsqB,gBAAgB,eAChB3vB,SAAUC,IAASC,IACnBg6C,iBAAiB,sBAAqB,SAEtC,eAAC,IAAI,CAACp1C,KAAMC,IAAU8Y,KAAM5X,UAAU,gCAI5C86C,QAAM,WAEN,eAAC,IAAU,CACT7zC,QAAS4yC,EACT5pC,MAAO+pC,EACP54C,SAAUiwC,GAAK4I,EAAY5I,EAAEx0C,OAAOoT,cAIzCopC,GACC,eAAC,IAAO,CAAC9+C,OAAQC,IAAOK,OAAQ8G,MAAM,6BAA4B,SAC/D03C,SAKT,eAAC,IAAM,CACLr5C,UAAU,aACV6J,KAAK,YACLtP,OAAyB,IAAjBmoC,EAAM3iC,OAAevF,IAAOsM,KAAOtM,IAAOG,QAClDqE,QA5IgB,KACpBjE,EAAMggD,0BAA0BrY,EAAOsX,GACvCZ,EAAS,IACTa,EAAYJ,EAAkB,WCtInBmB,OAXiCjgD,IAC9C,MAAM,KAAEgkB,GAAShkB,EACXo6B,EAAUpW,EAAKhkB,EAAMo6C,OAErB8F,EAAgBp7C,IAAMq7C,aAAY,KACtCngD,EAAMogD,gBAAgBpgD,EAAMqgD,UAAWjmB,KACtC,CAACp6B,EAAOo6B,IAEX,OAAO,eAAC,IAAM,CAACA,QAASA,EAAS/zB,SAAU65C,KC0C9BI,OAnDqCtgD,IAClD,MAAO03C,EAAcC,GAAmB7yC,IAAMC,UAAkB,GAK1Dw7C,EAAez7C,IAAMq7C,aAAY,KACrCngD,EAAMwgD,iBAAiBxgD,EAAMqgD,UAC7B1I,GAAgB,KACf,CAAC33C,IAEJ,OACE,uCACE,eAAC,IAAM,CAAC8D,KAAMC,IAAU4rB,MAAO1rB,QAVd,KACnB0zC,GAAgB,MAUd,gBAAC,IAAM,CACL7zC,KAAMC,IAAU08C,aAChBhlC,OAAQi8B,EACR7tB,QAAS,IAAM8tB,GAAgB,GAC/B/wC,MAAM,UAAS,UAEf,uBAAK3B,UAAW4K,IAAQia,YAAY,UAClC,2DAC2B,wCAAa,wBAAqB,6BAAI9pB,EAAMgkB,KAAKvX,OAAS,OAErF,6BACE,mJAMJ,sBAAKxH,UAAW4K,IAAQka,cAAc,SACpC,uBAAK9kB,UAAW4K,IAAQioC,sBAAsB,UAC5C,eAAC7rC,EAAA,EAAa,CACZpI,MAAM,SACNC,KAAMC,IAAU4rB,MAChB1rB,QAAS,IAAM0zC,GAAgB,GAC/BzrC,QAAS,CAAEF,SAAS,KAEtB,eAACC,EAAA,EAAa,CACZpI,MAAM,KACNC,KAAMC,IAAUyiB,KAChBviB,QAASs8C,EACTr0C,QAAS,CAAEF,SAAS,EAAOxM,OAAQC,IAAOG,uBCxBzC8gD,OAnBiC1gD,IAC9C,MAAM,KAAEgkB,GAAShkB,EAEXkgD,EAAgBp7C,IAAMq7C,aACzBjrC,IACClV,EAAMogD,gBAAgBpgD,EAAMqgD,SAAUnrC,KAExC,CAAClV,IAGH,OACE,eAAC,IAAY,CACXkV,MAAO8O,EAAKhkB,EAAMo6C,OAClB37B,IAAK,EACLkiC,kBAAgB,EAChBpiC,cAAe2hC,KCqNrB,SAASU,GAAcC,EAAYC,GACjC,IAAK,IAAI19C,EAAI,EAAGA,EAAIy9C,EAAI77C,OAAQ5B,IAC9B,GAAI2nB,kBAAQ81B,EAAIz9C,GAAI09C,GAClB,OAAO19C,EAGX,OAAQ,EAGK29C,OAtOqD/gD,IAClE,MAAM,iBAAEghD,EAAgB,oBAAEC,EAAmB,6BAAEC,GAAiClhD,EAC1Ey5C,EAAU30C,IAAM05C,SA0EhBtE,EAAa,CACjB,CACEC,WAAY,kBACZC,MAAO,OACP+G,SAAS,EACTC,UAAU,GAEZ,CACEjH,WAAY,qBACZC,MAAO,mBACPC,sBAAuB4F,GACvB3F,mBAAoB,CAClB8F,gBApFsB,CAACj7C,EAAe+P,KAAoB,IAAD,IAC7D,MAAMmsC,EAAO,IAAIL,EAAiBr4C,SAClC04C,EAAKl8C,GAAS,IACTk8C,EAAKl8C,GACRmhB,iBAAkBpR,GAEpB+rC,EAAoBI,GACL,QAAf,EAAA5H,EAAQ9wC,eAAO,OAA+B,QAA/B,EAAf,EAAiB24C,uBAAuBn8C,UAAM,OAA9C,EAAgDo8C,aAAa,mBAAoBrsC,IA8E7EklC,MAAO,qBAGX,CACED,WAAY,uBACZC,MAAO,qBACPC,sBAAuB4F,GACvB3F,mBAAoB,CAClB8F,gBAnFwB,CAACj7C,EAAe+P,KAAoB,IAAD,IAC/D,MAAMmsC,EAAO,IAAIL,EAAiBr4C,SAClC04C,EAAKl8C,GAAS,IACTk8C,EAAKl8C,GACRq8C,mBAAoBtsC,GAEtB+rC,EAAoBI,GACL,QAAf,EAAA5H,EAAQ9wC,eAAO,OAA+B,QAA/B,EAAf,EAAiB24C,uBAAuBn8C,UAAM,OAA9C,EAAgDo8C,aAAa,qBAAsBrsC,IA6E/EklC,MAAO,uBAGX,CACED,WAAY,eACZC,MAAO,oBACPC,sBAAuBqG,GACvBpG,mBAAoB,CAClB8F,gBAlFa,CAACj7C,EAAe+P,KAAmB,IAAD,IACnD,MAAMmsC,EAAO,IAAIL,EAAiBr4C,SAClC04C,EAAKl8C,GAAS,IACTk8C,EAAKl8C,GACRs8C,kBAAmBvsC,GAErB+rC,EAAoBI,GACL,QAAf,EAAA5H,EAAQ9wC,eAAO,OAA+B,QAA/B,EAAf,EAAiB24C,uBAAuBn8C,UAAM,OAA9C,EAAgDo8C,aAAa,oBAAqBrsC,IA4E9EklC,MAAO,sBAGX,CACED,WAAY,2BACZC,MAAO,0BACPC,sBAAuBqG,GACvBpG,mBAAoB,CAClB8F,gBAjFsB,CAACj7C,EAAe+P,KAAmB,IAAD,IAC5D,MAAMmsC,EAAO,IAAIL,EAAiBr4C,SAClC04C,EAAKl8C,GAAS,IACTk8C,EAAKl8C,GACRu8C,wBAAyBxsC,GAE3B+rC,EAAoBI,GACL,QAAf,EAAA5H,EAAQ9wC,eAAO,OAA+B,QAA/B,EAAf,EAAiB24C,uBAAuBn8C,UAAM,OAA9C,EAAgDo8C,aAAa,0BAA2BrsC,IA2EpFklC,MAAO,4BAGX,CACED,WAAY,aACZC,MAAO,qCACPC,sBAAuBiG,GACvBhG,mBAAoB,CAClBkG,iBA7DoBr7C,IAAmB,IAAD,EAC1C,GAAI67C,EAAiBr4C,QAAQ3D,QAAU,EAErC,YADArF,aAAmB,6CAIrB,MAAM0hD,EAAO,IAAIL,EAAiBr4C,SAC5Bg5C,EAAUN,EAAKxjB,OAAO14B,EAAO,GACpB,QAAf,EAAAs0C,EAAQ9wC,eAAO,OAAf,EAAiBi5C,WAAWP,GAC5BJ,EAAoBI,GACpBH,EAA6BS,EAAQ,MAqDnC32C,SAAU,IACViwC,WAAW,IAWT4G,EAAgB/8C,IAAMq7C,aACzBr3C,IACC,MAAMg5C,EAAah5C,EAAMi5C,KACnBC,EAAWl5C,EAAMk5C,SAEvB,GADuBF,IAAeE,EAClB,CAClB,MAAMC,EAAaH,EAAW99B,KACxBk+B,EAAmB,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAUh+B,KACrBm+B,EAAYvB,GAAcI,EAAiBr4C,QAASs5C,GACpDG,EAAUxB,GAAcI,EAAiBr4C,QAASu5C,GAElDb,EAAO,IAAIL,EAAiBr4C,UAkE1C,SAAqBk4C,EAAYsB,EAAmBC,GAClD,MAAMC,EAAUxB,EAAIsB,GACpBtB,EAAIhjB,OAAOskB,EAAW,GACtBtB,EAAIhjB,OAAOukB,EAAS,EAAGC,GApEjBC,CAAYjB,EAAMc,EAAWC,GAC7BpB,EAAiBr4C,QAAU04C,KAG/B,CAACL,IAKGuB,EAAuBz5C,IAAyB,IAAD,EACpC,QAAf,EAAA2wC,EAAQ9wC,eAAO,OAAf,EAAiBi5C,WAAWZ,EAAiBr4C,SAC7C3I,EAAMwiD,+BAA8B,IAqBhCpH,EACJ,sBAAKn2C,UAAU,sCAAqC,SAClD,eAAC,eAAW,CACVq2C,UAAW,aACXpB,WAAYA,EACZqB,cAxDoB,CACxB1zB,QAAQ,EACRozB,WAAW,EACXF,UAAU,GAsDNjB,YAXe/pB,IACnB0pB,EAAQ9wC,QAAUonB,EAAOgqB,IACzBhqB,EAAOgqB,IAAIC,oBAUP2E,kBAAmB,kBAAqB,QAArB,EAAMlF,EAAQ9wC,eAAO,aAAf,EAAiBqxC,oBAC1CwB,QAASx7C,EAAMghD,iBAAiBr4C,QAChC8yC,UAAW,GACXgH,gBAAgB,EAChB7D,uBAAuB,EACvBC,wBAAwB,EACxB6D,yBAAyB,EACzBb,cAAeA,EACfc,eAAgBJ,EAChBK,aAAcL,EACdM,mBAlCsB/5C,IAC1B,GAA2B,SAAvBA,EAAMg6C,OAAO1I,MAAkB,CACjC,MAAMiH,EAAO,IAAIL,EAAiBr4C,SAClC04C,EAAKv4C,EAAMu3C,UAAa,IACnBgB,EAAKv4C,EAAMu3C,UACd5zC,KAAM3D,EAAMoM,OAEd8rC,EAAiBr4C,QAAU04C,EAC3BrhD,EAAMwiD,+BAA8B,SA+BxC,OACE,uBAAKv9C,UAAU,2BAA0B,UACvC,uBAAKA,UAAU,4CAA2C,UACxD,eAAC,IAAE,uCACH,eAAC,IAAM,CAAC6J,KAAK,UAAU7K,QApKP,KAAO,IAAD,EAC1B,GAAI+8C,EAAiBr4C,QAAQ3D,QAAU,EAErC,YADArF,aAAmB,4CAIrB,MAAM0hD,EAAO,IAAIL,EAAiBr4C,SAClC04C,EAAK96B,KAAK,CACRw8B,oBAAqB,EACrBt2C,KAAM,WACN6Z,kBAAkB,EAClBk7B,oBAAoB,EACpBE,wBAAyB,EACzBD,kBAAmB,IAErBR,EAAoBI,GACL,QAAf,EAAA5H,EAAQ9wC,eAAO,OAAf,EAAiBi5C,WAAWP,IAoJuBp8C,UAAU,sBAE1Dm2C,MC/MA,IAAK4H,IAGX,SAHWA,KAAuB,cAAvBA,EAAuB,kBAGlC,CAHWA,QAAuB,KAiKpBC,OA5J6CjjD,IAC1D,MAAM,mBAAE6iB,GAAuBC,eACxBogC,EAA2BC,GAChCr+C,WAAwCk+C,GAAwBI,QAE5D,WACJC,EAAU,gBACVC,EAAe,SACfC,EAAQ,WACRC,EAAU,mBACVC,EAAkB,iBAClBC,EAAgB,eAChBC,GACE3jD,EAAM4jD,oBAEJC,EACJ,eAAC,IAAQ,CACPz9C,GAAG,iBACHnB,UAAU,iBACVuH,MAAM,EACN0I,MAAOyuC,GAAkB,GACzBt9C,SAAUiwC,GACRt2C,EAAM8jD,uBAAuB,IACxB9jD,EAAM4jD,oBACTD,eAAgBrN,EAAEx0C,OAAOoT,UAM3B6uC,EACJ,sBAAK9+C,UAAU,iBAAgB,SAC7B,eAACwc,GAAA,EAAQ,CAACpd,QAASs/C,GAAkB,GAAI9hC,sBAAoB,MAI3Ds7B,EAAer4C,eACnB,CACEiiB,EACAC,EACAle,KAEIie,IAAaC,GAGjBm8B,EAA6Bp8B,KAE/B,CAACo8B,IAGH,OACE,uBAAKl+C,UAAU,uBAAsB,UACnC,eAAC,IAAE,UAAEo+C,IACL,eAAC,IAAE,UAAEC,IACL,uBAAKr+C,UAAU,SAAQ,UACrB,uBAAKA,UAAU,OAAM,UACnB,eAAC,IAAS,CACR++C,WAAW,uEACXjE,QAAQ,EACRl8C,MAAM,cACNw3C,SAAS,aAAY,SAErB,eAAC,IAAU,CACTj1C,GAAG,aACH2yC,aAAcsK,EACdh9C,SAAUiwC,GACRt2C,EAAM8jD,uBAAuB,IACxB9jD,EAAM4jD,oBACTP,WAAY/M,EAAEx0C,OAAOoT,YAK7B,eAAC,IAAS,CACR8uC,WAAW,8EACXjE,QAAQ,EACRl8C,MAAM,oBACNw3C,SAAS,kBAAiB,SAE1B,eAAC,IAAU,CACTj1C,GAAG,kBACH2yC,aAAcuK,EACdj9C,SAAUiwC,GACRt2C,EAAM8jD,uBAAuB,IACxB9jD,EAAM4jD,oBACTN,gBAAiBhN,EAAEx0C,OAAOoT,YAKlC,gBAAC,IAAS,CACR8uC,WAAW,iFACXjE,QAAQ,EACRl8C,MAAM,mBACNw3C,SAAS,iBAAgB,UAEzB,gBAAC,IAAI,CACH11C,cAAeu9C,EACf78C,SAAU82C,EACVl4C,UAAU,wBAAuB,UAEjC,eAAC,IAAG,CAACmB,GAAI48C,GAAwBI,MAAOx8C,MAAM,UAC9C,eAAC,IAAG,CAACR,GAAI48C,GAAwBiB,QAASr9C,MAAM,eAEjDs8C,IAA8BF,GAAwBI,OAASS,EAC/DX,IAA8BF,GAAwBiB,SAAWF,SAGpElhC,GAAsB,eAAC,IAAO,IAChC,uBAAK5d,UAAU,WAAU,UACvB,eAAC,IAAM,CACLm1B,QAASmpB,EACT1/C,MAAM,WACNwC,SAAUiwC,GACRt2C,EAAM8jD,uBAAuB,IACxB9jD,EAAM4jD,oBACTL,SAAWjN,EAAEx0C,OAA4Bs4B,YAI/C,eAAC,IAAM,CACLA,QAASopB,EACT3/C,MAAM,cACNwC,SAAUiwC,GACRt2C,EAAM8jD,uBAAuB,IACxB9jD,EAAM4jD,oBACTJ,WAAalN,EAAEx0C,OAA4Bs4B,YAIjD,eAAC,IAAM,CACLA,QAASqpB,EACT5/C,MAAM,sBACNwC,SAAUiwC,GACRt2C,EAAM8jD,uBAAuB,IACxB9jD,EAAM4jD,oBACTH,mBAAqBnN,EAAEx0C,OAA4Bs4B,YAIzD,eAAC,IAAM,CACLA,QAASspB,EACT7/C,MAAM,oBACNwC,SAAUiwC,GACRt2C,EAAM8jD,uBAAuB,IACxB9jD,EAAM4jD,oBACTF,iBAAmBpN,EAAEx0C,OAA4Bs4B,sBCpHlD8pB,OA5C6BlkD,IAC1C,MAAM,KAAEgkB,GAAShkB,EAEXkgD,EAAgBp7C,IAAMq7C,aACzB7J,IACCt2C,EAAMmkD,qBAAqBngC,EAAK2b,YAAa2W,EAAEx0C,OAAOoT,SAExD,CAAC8O,EAAMhkB,IAGHokD,EAAc,CAClB,CACEvgD,MAAO,UACPqR,MAAOuf,IAAKC,SAEd,CACE7wB,MAAO,QACPqR,MAAOuf,IAAKsa,OAEd,CACElrC,MAAO,QACPqR,MAAOuf,IAAKqa,QAGhB,OACE,eAAC,KAAQ,CACPzqC,QAAQ,oDACRsqB,gBAAgB,QAChB3vB,SAAUC,IAASC,IACnB8H,SAAUhH,EAAM2/B,cAAgB3b,EAAK2b,YAAY,SAEjD,eAAC,IAAU,CACTzzB,QAASk4C,EACT/9C,SAAU65C,EACV1zC,MAAI,EACJR,SAAO,EACPhC,MAAO,CAAEixB,UAAW,UACpB/lB,MAAO8O,EAAKwQ,KACZxtB,SAAUhH,EAAM2/B,cAAgB3b,EAAK2b,iBCmC9B0kB,OAvEuCrkD,IACpD,MAAO03C,EAAcC,GAAmB7yC,IAAMC,UAAkB,GAU1Dw7C,EAAez7C,IAAMq7C,aAAY,KACrCngD,EAAMskD,2BAA2BtkD,EAAMgkB,KAAK2b,aAC5CgY,GAAgB,KACf,CAAC33C,IAEJ,OACE,uCACE,eAAC,KAAQ,CACPqE,QAAQ,8BACRsqB,gBAAgB,QAChB3vB,SAAUC,IAASC,IACnB8H,SAAUhH,EAAMgkB,KAAKwQ,OAASC,IAAKqa,MAAM,SAEzC,eAAC,IAAM,CACLhgC,KAAK,cACLhL,KAAMC,IAAU4rB,MAChB1rB,QAxBa,KACfjE,EAAMgkB,KAAKwQ,OAASC,IAAKqa,MAI7B6I,GAAgB,GAHdh4C,aAAmB,qCAuBfqH,SAAUhH,EAAMgkB,KAAKwQ,OAASC,IAAKqa,UAGvC,gBAAC,IAAM,CACLhrC,KAAMC,IAAU08C,aAChBhlC,OAAQi8B,EACR7tB,QAAS,IAAM8tB,GAAgB,GAC/B/wC,MAAM,4BACNixC,sBAAoB,YAEpB,uBAAK5yC,UAAW4K,IAAQia,YAAY,UAClC,2DAC2B,wCAAa,YAAU,IAChD,+BACG9pB,EAAMgkB,KAAKiB,KAAI,KAAIjlB,EAAMgkB,KAAKikB,SAAQ,OACrC,OAGN,6BACE,4FAGJ,sBAAKhjC,UAAW4K,IAAQka,cAAc,SACpC,uBAAK9kB,UAAW4K,IAAQioC,sBAAsB,UAC5C,eAAC7rC,EAAA,EAAa,CACZpI,MAAM,SACNC,KAAMC,IAAU4rB,MAChB1rB,QAAS,IAAM0zC,GAAgB,GAC/BzrC,QAAS,CAAEF,SAAS,KAEtB,eAACC,EAAA,EAAa,CACZpI,MAAM,UACNC,KAAMC,IAAUqyB,MAChBnyB,QAASs8C,EACTr0C,QAAS,CAAEF,SAAS,EAAOxM,OAAQC,IAAOK,sBCwCzCykD,OA7FyCvkD,IAAU,IAAD,EAC/D,MAAMy5C,EAAU30C,IAAM05C,SAEhBgG,EAAuD,QAAhC,EAAGxkD,EAAMwkD,+BAAuB,aAA7B,EAA+BxhD,KAAIszC,GAChEA,EAAErxB,KAAoDqxB,EAA7C,IAAKA,EAAGrxB,KAAM,8BAGpBi1B,EAAuB,CAC3B,CACEC,WAAY,OACZC,MAAO,OACP1U,KAAM,OAER,CACEyU,WAAY,WACZC,MAAO,YAET,CACED,WAAY,QACZC,MAAO,SAET,CACED,WAAY,OACZC,MAAO,OACPC,sBAAuB6J,GACvB5J,mBAAoB,CAClB3a,YAAa3/B,EAAM2/B,YACnBwkB,qBAAsBnkD,EAAMmkD,sBAE9B96C,MAAO,KAET,CACE8wC,WAAY,UACZC,MAAO,UACPC,sBAAuBoK,GACvBnK,mBAAoB,CAClBgK,2BAA4BtkD,EAAMskD,4BAEpCj7C,MAAO,IACPwe,QAAQ,EACRozB,WAAW,IAcTG,EACJ,sBAAKn2C,UAAU,sCAAqC,SAClD,eAAC,eAAW,CACVq2C,UAAW,aACXpB,WAAYA,EACZqB,cAfoB,CACxB1zB,QAAQ,EACRozB,WAAW,EACXF,UAAU,GAaNjB,YAVe/pB,IACnB0pB,EAAQ9wC,QAAUonB,EAAOgqB,KAUrB4E,kBAAmB,kBAAqB,QAArB,EAAMlF,EAAQ9wC,eAAO,aAAf,EAAiBqxC,oBAC1CwB,QAASgJ,EACT/I,UAAW,GACXmD,uBAAuB,EACvBC,wBAAwB,EACxBnD,YAAU,MAKhB,OACE,uBAAKz2C,UAAU,sBAAqB,UAClC,uBAAKA,UAAU,yBAAwB,UACrC,eAAC,IAAE,oBACH,eAAC,IAAM,CACL6J,KAAK,gBACL7J,UAAU,oBACVhB,QAAS,KACHw1C,EAAQ9wC,SACV8wC,EAAQ9wC,QAAQ+7C,gBAAgB,CAC9BC,SAAW,cAAY,IAAIj3C,MAAOk3C,qBAClCC,WAAY,CAAC,OAAQ,WAAY,QAAS,gBAMnDzJ,MCmFQ0J,OAtJ+B9kD,IAC5C,MAAO+kD,EAAwBC,GAA6BlgD,IAAMC,UAAS,IACpEkgD,EAA4BzC,GAAiC19C,IAAMC,UAAS,IAE5E6+C,EAAqBE,GAA0Bh/C,IAAMC,SAAoC,CAC9Fs+C,WAAY,GACZC,gBAAiB,GACjBC,UAAU,EACVC,YAAY,EACZC,oBAAoB,EACpBC,kBAAkB,EAClBC,eAAgB,KAYZ3C,EAAmBl8C,IAAM05C,OAAOx+C,EAAM2uC,2BAGrCuW,EAA2BhE,GAAgCp8C,IAAMC,SAEtE,IAEFD,IAAMwa,WAAU,KACdtf,EAAMmlD,iCACNnlD,EAAMolD,+BACNplD,EAAMqlD,uCAEL,IAGHvgD,IAAMwa,WAAU,KACdwkC,EAAuB,CACrBT,WAAYrjD,EAAMqjD,WAClBC,gBAAiBtjD,EAAMsjD,gBACvBC,SAAUvjD,EAAMujD,SAChBC,WAAYxjD,EAAMwjD,WAClBC,mBAAoBzjD,EAAMyjD,mBAC1BC,iBAAkB1jD,EAAM0jD,iBACxBC,eAAgB3jD,EAAM2jD,iBAIxB3C,EAAiBr4C,QAAUq0B,oBAAUh9B,EAAM2uC,4BAC1C,CAAC3uC,IAEJ,MAAMslD,EAAyB,CAC7B1B,oBAAqBA,EACrBE,uBAAyByB,IACvBzB,EAAuByB,GACvBP,GAA0B,KAIxBQ,EAA6B1gD,IAAM+Y,SAAQ,KACxC,CAELmjC,iBAAkBA,EAClBC,oBAAsBn0B,IACpBk0B,EAAiBr4C,QAAUmkB,EAC3B01B,GAA8B,IAEhCtB,6BAA+BuE,IAE7B,IAA2C,IAAvCA,EAAe1C,mBAA2B,CAC5C,MAAM1B,EAAO,IAAI6D,GACjB7D,EAAK96B,KAAKk/B,GACVvE,EAA6BG,KAGjCmB,8BAA+BA,KAEhC,CAAC0C,IAEEQ,EAAuB,CAC3B/lB,YAAa3/B,EAAM2/B,YACnB6kB,wBAAyBxkD,EAAMwkD,wBAC/BL,qBAAsBnkD,EAAMmkD,qBAC5BG,2BAA4BtkD,EAAMskD,4BAG9BqB,EAAoB,CACxB3F,0BAA2BhgD,EAAMggD,2BA0B7Bh8B,EACJ,uBAAK/e,UAAU,cAAa,UAC1B,eAAC,IAAE,0BAEH,gBAAC,IAAI,CAACmB,GAAG,cAAcR,0BAAwB,YAC7C,eAAC,IAAG,CACFQ,GAAG,gBACHQ,MAAM,gBACNO,MACE,uCACE,eAAC,GAAiB,IAAKm+C,IACvB,eAAC,IAAO,IACR,eAAC,GAAqB,IAAKE,IAC3B,eAAC,IAAM,CACL12C,KAAK,OACL9E,MAAO,CAAEqoC,UAAW,QACpB7yC,OACEulD,GAA0BE,EACtBxlD,IAAOG,QACPH,IAAOsM,KAEb9H,QA1CQ,KAChB8gD,IACF/kD,EAAM4lD,yBAAyBhC,GAC/BoB,GAA0B,IAExBE,EAA0BlgD,OAAS,IACrCkgD,EAA0Bjf,SAAQ+a,IAChChhD,EAAM6lD,6BAA6B7E,MAErCE,EAA6B,KAE3B+D,IAEFjlD,EAAM8lD,4BAA4B,IAGlC9lD,EAAM+lD,8BAA8B/E,EAAiBr4C,SACrD65C,GAA8B,YA8B5B,eAAC,IAAG,CAACp8C,GAAG,QAAQQ,MAAM,QAAQO,MAAO,eAAC,GAAe,IAAKu+C,MAC1D,eAAC,IAAG,CAACt/C,GAAG,YAAYQ,MAAM,YAAYO,MAAO,eAAC,GAAY,IAAKw+C,YAKrE,OAAO,eAACvxB,GAAA,EAAc,CAACC,oBAAqB,OAAUpqB,QAAS+Z,EAAMnY,WAAW,KChJnEm6C,OAFa75B,aA9B2CC,IAAK,CAC1EuT,YAAavT,EAAMC,QAAQsT,YAC3B0jB,WAAYj3B,EAAMC,QAAQg3B,WAC1BC,gBAAiBl3B,EAAMC,QAAQi3B,gBAC/BC,SAAUn3B,EAAMC,QAAQk3B,SACxBC,WAAYp3B,EAAMC,QAAQm3B,WAC1BC,mBAAoBr3B,EAAMC,QAAQo3B,mBAClCC,iBAAkBt3B,EAAMC,QAAQq3B,iBAChCC,eAAgBv3B,EAAMC,QAAQs3B,eAC9BhV,yBAA0BviB,EAAMC,QAAQsiB,yBACxC6V,wBAAyBp4B,EAAMC,QAAQm4B,4BAG0BzhC,GACjE8J,YACE,CACEs4B,+BAAgCc,oBAChCb,6BAA8Bc,yBAC9Bb,mCAAoCc,qCACpCP,yBAA0BQ,qBAC1BL,8BAA+BM,0BAC/BP,4BAA6BA,8BAC7BD,6BAA8BS,yBAC9BnC,qBAAsBoC,iBACtBjC,2BAA4BkC,+BAC5BxG,0BAA2ByG,uBAE7B1jC,IAGwBoJ,CAA6C24B,I,UC3BzE,MAAMtL,GAA4B,CAChC3xB,QAAQ,EACRozB,WAAW,EACXF,UAAU,GAgDG7T,OA7C6BlnC,IAC1C,IAAIy5C,EAEJ,MAUMS,EAAal6C,EAAM0mD,eAAeC,KAAK3jD,KAAIszC,IACxC,CACL6D,WAAYyM,oBAAUtQ,GACtB8D,MAAO9D,MAILjyC,EACJ,sBAAKY,UAAU,YAAW,SACxB,sBAAKA,UAAU,sCAAqC,SAClD,eAAC,eAAW,CACVq2C,UAAW,aACXpB,WAAYA,EACZqB,cAAe/B,GACfM,YAxBa/pB,IACnB0pB,EAAU1pB,EAAOgqB,KAwBX4E,kBArBW,KACblF,GACFA,EAAQO,oBAoBJwB,QAASx7C,EAAM0mD,eAAeG,KAC9BpL,UAAW,GACXmD,uBAAuB,EACvBC,wBAAwB,QAMhC,OACE,+BACE,eAACzqB,GAAA,EAAc,CAACnqB,QAAS5F,EAASgwB,oBAAqBr0B,EAAM8mD,+BC9CpDpY,OAFYviB,aAZ4CC,IAAK,CAC1Es6B,eAAgBt6B,EAAM26B,UAAUL,mBAGiC3jC,GACjE8J,YACE,CACEi6B,0BAA2BE,6BAE7BjkC,IAGuBoJ,CAA6C+a,I,UCWzD+f,OA5ByB,CACtCC,WAAY,CACV5nD,IAAK,SACL6nD,QAAS,0BACTC,QAAS,2BAEXC,eAAgB,CACd/nD,IAAK,aACL6nD,QAAS,+BACTC,QAAS,2BAEXE,cAAe,CACbhoD,IAAK,eACL6nD,QAAS,kCACTC,QAAS,mCAEXG,gBAAiB,CACfjoD,IAAK,cACL6nD,QAAS,gCACTC,QAAS,iCAEXI,UAAW,CACTloD,IAAK,QACL6nD,QAAS,yBACTC,QAAS,2BCtBN,MAAMn+B,GAAY,CACvBw+B,aAAchV,KAAMiV,oBACpBC,aAAc,IACdC,aAAc,OACdC,kBAAmB,GACnBC,oBAAqB,EACrBC,cAAe,IACfC,iBAAkB,4BAClBC,iBAAkB,CAChB3oD,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAEvCC,cAAe,IAGJC,GAAa,CACxBvlD,EAAG,KACHwlD,EAAG,MAGQC,GAAe,CAC1BzlD,EAAGulD,GAAWvlD,EAAI,EAClBwlD,EAAGD,GAAWC,EAAI,GCvBPE,GAAQ,CACnBC,KAAM,UACNC,UAAW,UACXC,SAAU,UACVC,MAAO,UACPC,SAAU,UACVC,UAAW,UACXC,KAAM,UACNC,SAAU,UACVC,OAAQ,UACRC,OAAQ,UACRC,IAAK,WACLC,OAAQ,UACRC,MAAO,UACPC,OAAQ,UACRC,WAAY,WAIDC,GAAW3jB,YAAY2iB,IADvBiB,GAAgBC,SAASD,EAAIE,MAAM,GAAI,MAY7C,IAAKC,GAqBL,SAASC,GAAmB,GAOgB,IAPhB,UACjCjhD,EAAYghD,GAAUE,IAAG,WACzBC,EAAU,UACVC,EAAY3B,GAAWvlD,EAAC,UACxBmnD,EAAY5B,GAAWC,EAAC,aACxB4B,EAAe,EAAC,iBAChBC,GAAmB,GACE,EACjBC,EAAeF,GAAgBH,EACnC,MAAMM,EAAa1rB,KAAK2rB,KAAKP,EAAaK,GAE1C,OAAOvkB,QAAQkkB,GAAYQ,IACzB,MAAMC,EAAkBD,EAAaH,EAC/BK,EAAY9rB,KAAKC,MAAM2rB,EAAaH,GAM1C,OAJID,GAAoBM,IAAcJ,EAAa,IACjDD,EAAeL,EAAaM,GAAcD,GAGrCxhD,IAAcghD,GAAUE,IAC3B,CACEY,GAAkBrC,GAAWvlD,EAAGknD,EAAWQ,EAAiBJ,GAC5DM,GAAkBrC,GAAWC,EAAG2B,EAAWQ,EAAWJ,IAExD,CACEK,GAAkBrC,GAAWvlD,EAAGknD,EAAWS,EAAWJ,GACtDK,GAAkBrC,GAAWC,EAAG2B,EAAWO,EAAiBJ,OAKtE,SAASM,GACPC,EACAC,EACA5lD,EACA6lD,GAEA,MAAMC,EAAiBF,EAAYC,EACnC,OAAQF,EAAcC,EAAYE,GAAkB,EAAIA,EAAiB9lD,EAuBpE,SAAS+lD,GAAkB,GAA8D,IAA9D,WAAEhB,EAAU,SAAEiB,EAAW,GAAE,SAAEC,EAAW,IAAmB,EAC3F,MAAMC,EAAM,IAAItyB,MAEhB,IAAK,IAAI31B,EAAI,EAAGA,EAAI8mD,EAAY9mD,IAC9BioD,EAAI9kC,KAAK,CAACnjB,EAAI+nD,EAAU/nD,EAAIgoD,IAG9B,OAAOC,GApFT,SALYtB,KAAS,UAATA,EAAS,gBAKrB,CALYA,QAAS,KChCrB,MAIMuB,GAAiB,CACrBC,WAAY,UACZC,SAAU,OACVh/C,KAAMm8C,GAAME,UACZX,MAAO,OACPuD,SAAU,CAAEpiD,MAAOqiD,MAcrB,MAAMC,WAAwBxD,OAAOC,YAAYwD,UAQ/Cpb,YACEqb,EACA5oD,EACAwlD,EACA35C,GAEC,IADD9D,EAAgB,uDAnCU,IAqC1BylC,MAAMob,EAAO5oD,EAAGwlD,GAChBpoC,KAAKyrC,gBAAgBh9C,EAAM9D,GAGrB8gD,gBAAgBh9C,EAAc9D,GACpC,MAAMwgD,EAAW3B,SACfyB,GAAeE,SAASO,UAAU,EAAGT,GAAeE,SAASxmD,OAAS,IAElEqE,EAAQyF,EAAK9J,OAASwmD,EAAW,IACjCQ,EAAaltB,KAAKrgB,IAAIpV,EAAO2B,GAC7B6vB,EAAY,IAAIstB,OAAOC,YAAY6D,KACvC5rC,KAAKwrC,MACLK,GAlDU,GAoDVp9C,EACA,IACKw8C,GACHG,SAAU,CAAEpiD,MAAO2iD,EAvDX,MA0DNG,EAAc,IAAIhE,OAAOC,YAAYgE,UACzC/rC,KAAKwrC,MAzDU,GA2Df,EACAG,EACAnxB,EAAUwxB,YAAY5kD,OA/DZ,GAgEVkiD,GAASR,UAERmD,UAAU,EAAK,GACfC,SAAS,IAEZlsC,KAAKnH,IAAI,CAACizC,EAAatxB,IACvBxa,KAAKmsC,SAAS,GACdnsC,KAAKosC,YAAW,IAILd,UCjER,MAAMe,GAAmB,CAC9Bb,EACA/8C,EAAa,EAEb9E,KACI,IAFJ,EAAE/G,EAAC,EAAEwlD,EAAC,KAAEkE,EAAI,KAAEC,GAAkB,EAGhC,OAAO,IAAIzE,OAAOC,YAAYC,WAC5BwD,EACA5oD,EACAwlD,EACAz+C,EAAM1K,IACNwP,EACA9E,EAAMxE,KACNwE,EAAMk+C,OACNoE,UAAUK,EAAMC,ICpBPC,GAAuC,CAClDvtD,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWyE,YAG1BC,GAAmC,CAC9CztD,IAAK2nD,GAAWM,gBAAgBjoD,IAChCkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAG1B0E,GAAiC,CAC5C1tD,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWyE,YAG1BG,GAAiB,CAC5B1B,WAAY,UACZC,SAAU,OACVh/C,KAAMm8C,GAAME,UACZX,MAAO,SACPgF,YAAa,GACbzB,SAAU,CAAEpiD,MAAO,MAGR8jD,GAAkC,CAC7C/mD,GAAI,gBACJgnD,SAAUnkC,GAAU4+B,kBACpBwF,UAAWpkC,GAAU4+B,kBACrBjhD,MAAOqiB,GAAU4+B,kBACjBx+B,YAAa,gDACb2a,WAAW,GAMPspB,GAA8B,IAAf9E,GAAWvlD,EAC1BsqD,GAA8B,KAAf/E,GAAWC,EAC1B+E,GAAiBD,GAAc,IAoBtBE,OAjBS,CACtBC,MAAO,CAAEzqD,EAAkB,IAAfulD,GAAWvlD,EAAUwlD,EAAkB,IAAfD,GAAWC,EAAUkF,QAAS,GAAIC,OAAQ,GAAKC,OAAQ,IAC3FC,aAAc,EACdC,KAAM,CAAEC,OAAwB,KAAfxF,GAAWC,EAAUwF,OAAQ,KAC9CC,eAAgB,CAAEjrD,EAAmB,KAAfulD,GAAWvlD,EAAUwlD,EAAG,EAAGkE,KAAM,EAAKC,KAAM,KAClEuB,oBAAqB,CAAElrD,EAAGqqD,GAAa7E,GAAI,GAAIkE,KAAM,GAAKC,KAAM,IAChEwB,QAAS,CACPC,SAAU,CAAEC,QAAS,KACrBC,KAAM,CAAEC,IAVO,IAUUvrD,EAAGqqD,GAAa7E,EAAG8E,GAAaI,QAAS,GAAIW,QAAS,IAC/EhvD,IAAK,CAAE2D,EAAGqqD,GAAa7E,EAAG+E,GAAgBnkD,MAX3B,IAW8CC,OAAQ,IACrEmlD,iBAAkB,CAAExrD,EAAGqqD,GAAc,IAAK7E,EAAG+E,GAAgBb,KAAM,EAAKC,KAAM,IAC9E8B,cAAe,CAAEzrD,EAAGqqD,GAAc,GAAI7E,EAAG+E,GAAgBb,KAAM,EAAKC,KAAM,IAC1E+B,YAAa,CAAE1rD,EAAGqqD,GAAc,IAAK7E,EAAG8E,GAAc,KACtDqB,gBAAiB,CAAE3rD,EAAGqqD,GAAc,GAAI7E,EAAG8E,GAAc,IAAKZ,KAAM,GAAKC,KAAM,MC5C5E,MAAMiC,GAAiBC,GACrBA,EAAU9rD,KAAI1D,GAAOyvD,GAAazvD,KAa9ByvD,GAAgBC,IAC3B,MAAMC,EAAYC,GAAkBC,cAAcC,mBAAmBvtD,IAAImtD,GACzE,OAAOC,GAAwB,IAAK9B,GAAkBvmD,MAAOooD,ICVxD,IAAKK,GAKAC,IAFX,SAHWD,KAAS,cAATA,EAAS,gBAGpB,CAHWA,QAAS,KAQpB,SAHWC,KAAQ,wBAARA,EAAQ,gBAGnB,CAHWA,QAAQ,KCkGLC,OA9H2B,CAExCC,YAAa,CACX/iD,KAAM4iD,GAAUI,MAChBnwD,IAAK,eACL2vC,KAAM,sCAERygB,SAAU,CAAEjjD,KAAM4iD,GAAUI,MAAOnwD,IAAK,YAAa2vC,KAAM,mCAC3D0gB,YAAa,CAAEljD,KAAM4iD,GAAUI,MAAOnwD,IAAK,eAAgB2vC,KAAM,uBACjE2gB,aAAc,CAAEnjD,KAAM4iD,GAAUI,MAAOnwD,IAAK,aAAc2vC,KAAM,wBAChE4gB,WAAY,CAAEpjD,KAAM4iD,GAAUI,MAAOnwD,IAAK,cAAe2vC,KAAM,sBAC/D6gB,UAAW,CAAErjD,KAAM4iD,GAAUI,MAAOnwD,IAAK,aAAc2vC,KAAM,qBAC7D8gB,UAAW,CAAEtjD,KAAM4iD,GAAUI,MAAOnwD,IAAK,YAAa2vC,KAAM,qBAC5D+gB,WAAY,CAAEvjD,KAAM4iD,GAAUI,MAAOnwD,IAAK,aAAc2vC,KAAM,sBAC9DghB,mBAAoB,CAClBxjD,KAAM4iD,GAAUI,MAChBnwD,IAAK,cACL2vC,KAAM,2BAERihB,qBAAsB,CACpBzjD,KAAM4iD,GAAUI,MAChBnwD,IAAK,oBACL2vC,KAAM,gCAERkhB,oBAAqB,CACnB1jD,KAAM4iD,GAAUI,MAChBnwD,IAAK,mBACL2vC,KAAM,+BAERmhB,cAAe,CAAE3jD,KAAM4iD,GAAUI,MAAOnwD,IAAK,kBAAmB2vC,KAAM,yBACtEohB,aAAc,CAAE5jD,KAAM4iD,GAAUI,MAAOnwD,IAAK,iBAAkB2vC,KAAM,wBACpEqhB,eAAgB,CAAE7jD,KAAM4iD,GAAUI,MAAOnwD,IAAK,cAAe2vC,KAAM,0BACnEshB,WAAY,CAAE9jD,KAAM4iD,GAAUI,MAAOnwD,IAAK,eAAgB2vC,KAAM,sBAChEuhB,UAAW,CAAE/jD,KAAM4iD,GAAUI,MAAOnwD,IAAK,aAAc2vC,KAAM,qBAC7DwhB,QAAS,CAAEhkD,KAAM4iD,GAAUI,MAAOnwD,IAAK,UAAW2vC,KAAM,kBACxDye,MAAO,CAAEjhD,KAAM4iD,GAAUI,MAAOnwD,IAAK,QAAS2vC,KAAM,iBACpDyhB,QAAS,CAAEjkD,KAAM4iD,GAAUI,MAAOnwD,IAAK,UAAW2vC,KAAM,uBACxD0hB,YAAa,CAAElkD,KAAM4iD,GAAUI,MAAOnwD,IAAK,eAAgB2vC,KAAM,uBACjE2hB,WAAY,CAAEnkD,KAAM4iD,GAAUI,MAAOnwD,IAAK,cAAe2vC,KAAM,qBAG/D4hB,qBAAsB,CAAEpkD,KAAM4iD,GAAUI,MAAOnwD,IAAK,YAAa2vC,KAAM,sBAGvE6hB,WAAY,CAAErkD,KAAM4iD,GAAUI,MAAOnwD,IAAK,WAAY2vC,KAAM,0BAC5D8hB,aAAc,CAAEtkD,KAAM4iD,GAAUI,MAAOnwD,IAAK,eAAgB2vC,KAAM,wBAClE+hB,iBAAkB,CAChBvkD,KAAM4iD,GAAUI,MAChBnwD,IAAK,kBACL2vC,KAAM,qCAERgiB,WAAY,CAAExkD,KAAM4iD,GAAUI,MAAOnwD,IAAK,eAAgB2vC,KAAM,+BAGhEiiB,iBAAkB,CAAEzkD,KAAM4iD,GAAUI,MAAOnwD,IAAK,gBAAiB2vC,KAAM,sBAGvEkiB,KAAM,CAAE1kD,KAAM4iD,GAAUI,MAAOnwD,IAAK,OAAQ2vC,KAAM,oBAClDmiB,QAAS,CAAE3kD,KAAM4iD,GAAUI,MAAOnwD,IAAK,UAAW2vC,KAAM,mBAGxDoiB,oBAAqB,CACnB5kD,KAAM4iD,GAAUI,MAChBnwD,IAAK,iBACL2vC,KAAM,yBAERqiB,sBAAuB,CACrB7kD,KAAM4iD,GAAUI,MAChBnwD,IAAK,mBACL2vC,KAAM,2BAERsiB,SAAU,CACR9kD,KAAM4iD,GAAUI,MAChBnwD,IAAK,WACL2vC,KAAM,oBAERuiB,WAAY,CACV/kD,KAAM4iD,GAAUI,MAChBnwD,IAAK,aACL2vC,KAAM,sBAERwiB,WAAY,CACVhlD,KAAM4iD,GAAUI,MAChBnwD,IAAK,aACL2vC,KAAM,sBAERyiB,mBAAoB,CAClBjlD,KAAM4iD,GAAUI,MAChBnwD,IAAK,uBACL2vC,KAAM,iCAER0iB,oBAAqB,CACnBllD,KAAM4iD,GAAUI,MAChBnwD,IAAK,wBACL2vC,KAAM,kCAER2iB,mBAAoB,CAClBnlD,KAAM4iD,GAAUI,MAChBnwD,IAAK,uBACL2vC,KAAM,2BAIR4iB,kBAAmB,CAAEplD,KAAM4iD,GAAUI,MAAOnwD,IAAK,cAAe2vC,KAAM,sBAGtE6iB,cAAe,CAAErlD,KAAM4iD,GAAUI,MAAOnwD,IAAK,cAAe2vC,KAAM,sBAClE8iB,cAAe,CAAEtlD,KAAM4iD,GAAUI,MAAOnwD,IAAK,eAAgB2vC,KAAM,0BAGnE+iB,cAAe,CAAEvlD,KAAM4iD,GAAUI,MAAOnwD,IAAK,iBAAkB2vC,KAAM,yBACrEgjB,iBAAkB,CAChBxlD,KAAM4iD,GAAUI,MAChBnwD,IAAK,qBACL2vC,KAAM,mCAIRijB,mBAAoB,CAClBzlD,KAAM4iD,GAAUI,MAChBnwD,IAAK,sBACL2vC,KAAM,2BAERkjB,gBAAiB,CAAE1lD,KAAM4iD,GAAUI,MAAOnwD,IAAK,sBAAuB2vC,KAAM,oBC7HvE,MAEMmjB,GAAoB,CAC/BC,OAAQ,EACRC,KAAM,UAGD,IAAKC,IAGX,SAHWA,OAAa,aAAbA,IAAa,aAGxB,CAHWA,QAAa,KCgFVC,OApF2B,CAExCC,YAAa,CACXnzD,IAAK,YACL2vC,KAAM,uBACNpK,OAAQ,CAAEwtB,OAAQ,IAClBK,UAAWH,GAAcI,KAE3BC,YAAa,CACXtzD,IAAK,YACL2vC,KAAM,uBACNpK,OAAQ,CAAEwtB,OAAQ,IAClBK,UAAWH,GAAcI,KAE3BE,iBAAkB,CAChBvzD,IAAK,kBACL2vC,KAAM,4BACNpK,OAAQ,CAAEwtB,OAAQ,KAClBK,UAAWH,GAAcI,KAE3BG,gBAAiB,CACfxzD,IAAK,mBACL2vC,KAAM,2BACNpK,OAAQ,CAAEwtB,OAAQ,IAClBK,UAAWH,GAAcI,KAE3BI,WAAY,CACVzzD,IAAK,eACL2vC,KAAM,sBACNpK,OAAQ,CAAEwtB,OAAQ,KAClBK,UAAWH,GAAcI,KAE3BK,UAAW,CACT1zD,IAAK,cACL2vC,KAAM,qBACNpK,OAAQ,CAAEwtB,OAAQ,KAClBK,UAAWH,GAAcI,KAE3BM,UAAW,CACT3zD,IAAK,aACL2vC,KAAM,qBACNpK,OAAQ,CAAEwtB,OAAQ,IAClBK,UAAWH,GAAcI,KAE3BO,SAAU,CACR5zD,IAAK,YACL2vC,KAAM,oBACNpK,OAAQ,CAAEwtB,OAAQ,IAClBK,UAAWH,GAAcI,KAE3BQ,UAAW,CACT7zD,IAAK,aACL2vC,KAAM,qBACNpK,OAAQ,CAAEwtB,OAAQ,IAClBK,UAAWH,GAAcI,KAE3BS,WAAY,CACV9zD,IAAK,cACL2vC,KAAM,sBACNpK,OAAQ,CAAEwtB,OAAQ,KAClBK,UAAWH,GAAcI,KAE3BU,UAAW,CACT/zD,IAAK,aACL2vC,KAAM,qBACNpK,OAAQ,CAAEwtB,OAAQ,KAClBK,UAAWH,GAAcI,KAE3BW,YAAa,CACXh0D,IAAK,eACL2vC,KAAM,uBACNpK,OAAQ,CAAEwtB,OAAQ,IAClBK,UAAWH,GAAcI,KAI3BY,gBAAiB,CACfj0D,IAAK,mBACL2vC,KAAM,2BACNpK,OAAQ,CAAEwtB,OAAQ,IAAMmB,MAAM,GAC9Bd,UAAWH,GAAckB,MCnFtB,IAAKC,IAiBZ,SAjBYA,OAAK,qBAALA,IAAK,2BAALA,IAAK,yBAALA,IAAK,qBAALA,IAAK,iBAALA,IAAK,uBAALA,IAAK,2BAALA,IAAK,WAALA,IAAK,qBAALA,IAAK,eAALA,IAAK,oBAALA,IAAK,wBAALA,IAAK,0BAALA,IAAK,kCAiBjB,CAjBYA,QAAK,KAkBV,MAAMC,GAAuB,CAClCD,GAAME,WACNF,GAAMG,SACNH,GAAMI,QACNJ,GAAMK,KACNL,GAAMM,UACNN,GAAMO,QACNP,GAAMQ,MACNR,GAAMS,SACNT,GAAMU,WACNV,GAAMW,QACNX,GAAMxsB,UACNwsB,GAAMY,OACNZ,GAAMa,GACNb,GAAMc,e,aCpBD,SAAS1f,GAAMC,GACpB,OAAO,IAAIx8B,SAAQC,GAAWw8B,WAAWx8B,EAASu8B,KAkC7C,SAAS0f,GAAYv/C,EAAeuJ,EAAaC,GACtD,OAAOogB,KAAKrgB,IAAIqgB,KAAKpgB,IAAIxJ,EAAOuJ,GAAMC,GAUjC,SAASg2C,GAAS/P,GAAwC,IAAtBgQ,EAAW,wDAIpD,OAHIhQ,EAASiQ,WAAW,OACtBjQ,EAAWA,EAASkQ,OAAO,IAEtB5rC,GAAUw+B,cAAgBkN,EAAcG,KAAiBnQ,EAAWA,GAUtE,SAASoQ,GAAaC,EAAWl9C,GACtC,QAAetR,IAAXwuD,EACF,MAAM,IAAIz0D,MAAMuX,GAAY,oBAE9B,OAAQk9C,EAgBH,MAAM9tC,GAAW,IAAMnkB,KAAMkyD,WAAW5oC,QAAQnF,SAC1C4tC,GAAe,IAAM/xD,KAAMkyD,WAAW5oC,QAAQyoC,cAAgB,GChF9DI,GAAU,SACrBC,GAAwC,IACxC3gB,EAAQ,uDAAGvrB,GAAU0+B,aAAY,MAC7B,CACJyN,MAAO,EACPD,UACA3gB,WACA8d,KAAM,WAWK+C,GAAS,SACpBF,GAAwC,IACxC3gB,EAAQ,uDAAGvrB,GAAU0+B,aAAY,MAC7B,CACJyN,MAAO,EACPD,UACA3gB,WACA8d,KAAM,WAmBD,SAASgD,GACdzJ,EACAmJ,GAEC,IADD,aAAErN,GAAyB,uDAAG,GAEzBqN,IACLnJ,EAAM3yC,IAAIq8C,MAAML,GAAQ,CAACF,GAASrN,GAAgB1+B,GAAU0+B,eAC5D3S,YAAW,IAAMggB,EAAOQ,WAAW7N,GAAgB1+B,GAAU0+B,eAQxD,SAAS8N,GAAY5J,GAC1B,OAAO,IAAI1D,OAAOC,YAAYgE,UAC5BP,EACAnD,GAAazlD,EACbylD,GAAaD,EACbD,GAAWvlD,EACXulD,GAAWC,EACX,GA0DG,SAASiN,GACd7J,EACA8J,GAEA,IAAIvyD,EAAI,EACR,MAAMsyD,EAAQE,aAAY,KACpBxyD,EAAI,IAAM,GACZuyD,EAAWpJ,SAAS,GACpBV,EAAMgK,OAAO38C,IAAIm8C,GAAO,CAACM,GAAa,QAEtCA,EAAWpJ,SAAS,GACpBV,EAAMgK,OAAO38C,IAAIg8C,GAAQ,CAACS,GAAa,OAEzCvyD,MACC,KAKH,OAJA,WACEA,EAAI,EACJ0yD,cAAcJ,ICpJX,MAAMK,GAAkB,CAC7BtN,EAAG,EACHjU,SAAU,IACV8d,KAAM,UAOK0D,GAAiB,CAC5BvN,GAAID,GAAWC,EACfjU,SAAU,IACV8d,KAAM,UA2BK2D,IATPzN,GAAWvlD,EASuB,CACtCA,EAAG,EACHuxC,SAAU,IACV8d,KAAM,WAOK4D,GAA0B,CACrCjzD,EAAGulD,GAAWvlD,EACduxC,SAAU,IACV8d,KAAM,UC9CF6D,GAAoB,CAAElzD,EAAG,KAAMwlD,EAAG,IAAKkE,KAAM,EAAKC,KAAM,IACxDwJ,GAAgC,CACpC92D,IAAK2nD,GAAWI,eAAe/nD,IAC/BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWgO,aA6B1BC,GApBoB,MAC/B,IAAIC,EAAyBh+C,QAAQC,UAMrC,MAL2B,CAACqzC,EAAmB/8C,KAC7CynD,EAAyBA,EAAuB59C,MAAK,IA2BzD0d,eAAwCw1B,EAAmB/8C,GACzD,MAAM0nD,EAAY,IAAIrO,OAAOC,YAAYwD,UAAUC,EAAO,EAAG,GACvD4K,EAAY,IAAItO,OAAOC,YAAYsO,OACvC7K,EACArD,GAAWvlD,EACX,IACAssD,GAAYqB,WAAWtxD,KAEzBm3D,EAAUE,UAAU,IAAK,IACzB,MAAMC,EAAclK,GAAiBb,EAAO/8C,EAAMqnD,GAAmBC,IAErEI,EAAUt9C,IAAI,CAACu9C,EAAWG,IAC1B/K,EAAMgL,kBAAkBC,WAAWpD,GAAMW,QAASmC,GAClDA,EAAUO,YAAYvO,GAAWvlD,EAAG,GACpCuzD,EAAUjK,SAAS,GAEnB2C,GAAkBC,cAAc6H,kBAAkBC,UAAUzE,GAAYY,WAAW9zD,KACnFusD,EAAM3yC,IAAIq8C,MAAM,CACdJ,QAASqB,EACTpB,MAAO,KACJa,WAGCnhB,GAAMmhB,GAAyBzhB,SAnEf,KAqEtB0a,GAAkBC,cAAc6H,kBAAkBC,UAAUzE,GAAYa,UAAU/zD,KAClFusD,EAAM3yC,IAAIq8C,MAAM,CACdJ,QAASqB,EACTpB,MAAO,KACJc,WAGCphB,GAAMohB,GAAwB1hB,UACpC8gB,GAAezJ,EAAO2K,EAAW,CAAE7O,aAAc1+B,GAAU0+B,eA3DvDuP,CAAyBrL,EAAO/8C,OAgBJqoD,GCzClC,MAEMC,GAAoB,CACxBC,OAAQ,CAAEp0D,EAAG,GAAIwlD,EAAG,GAAI6O,KAAM,GAAIC,KAAM,IACxChJ,KAAM,CACJtrD,EALuB,GAMvBwlD,EAAG,IACHp/C,MAAOm/C,GAAWvlD,EAAIu0D,IAExB1oD,KAAM,CAAEwoD,KAAM,IAAKC,KAAM,IACzBE,kBAAmB,CAAEx0D,EAAG,IAAKwlD,EAAG,IAAKkE,KAAM,GAAKC,KAAM,KAG3C8K,GAAsB,CACjCnM,WAAY,UACZC,SAAU,OACVh/C,KAAMm8C,GAAME,UACZX,MAAO,OACPgF,YAAa,GACbzB,SAAU,CACRpiD,MACE+tD,GAAkB7I,KAAKllD,MAAsC,EAA9B+tD,GAAkBtoD,KAAKwoD,KAAsC,EAA3BF,GAAkB7I,KAAKtrD,IAIjF00D,GAAoC,CAC/Cr4D,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAGxB8O,UCqBAQ,OAlCR,SACL/L,EAAoB,GAEnB,IADD,EAAE5oD,EAAI,EAAC,EAAEwlD,EAAI,EAAC,UAAEoP,EAAY,GAAE,mBAAEC,EAAqB,GAAoB,EAEzE,MAAMC,EAAa,IAAI5P,OAAOC,YAAY6D,KAAKJ,EAAO5oD,EAAGwlD,EAAG,GAAIoP,GAEhE,IAEIG,EAFAp3D,EAAO,GACPq3D,EAAc,EAGlB,MAAMC,EAAc,KAClBF,GAAelC,cAAckC,IAoB/B,MAAO,CAAExB,UAAWuB,EAAYI,WAhBZ/4D,IACbA,IACLwB,EAAOxB,EAEP24D,EAAWjpD,KAAO,GAClBmpD,EAAc,EAEdC,IACAF,EAAcpC,aAAY,KACxBmC,EAAWjpD,MAAQlO,EAAKq3D,KACpBA,IAAgBr3D,EAAKoE,QACvB8wD,cAAckC,KAEfF,KAGuCI,gBCuB/BE,OAlEf,MAQE5nB,YAAY6nB,GAA2D,KAP/DC,gBAAU,OACVC,iBAAW,OACXC,qBAAe,EAMrB,MAAMC,EAAcC,GAAcvJ,cAAcwJ,iBCZ7C,IAA2B9M,EDa9BxrC,KAAKk4C,aCbyB1M,EDaO4M,ECZnB,IAAItQ,OAAOC,YAAYqH,MACzC5D,EACAnD,GAAazlD,EACbylD,GAAaD,EACb8G,GAAYQ,UAAUzwD,KACtBitD,SAAS,KDOyCqM,eAAe,CAC/DC,eAAe,EACfC,cAAc,IAEhBz4C,KAAKi4C,WCFF,SACLzM,EACA7hD,GAOA,OALmB4tD,GAAW/L,EAAO,CACnC5oD,EAAG81D,GAAkBxK,KAAKtrD,EAAI81D,GAAkBjqD,KAAKwoD,KACrD7O,EAAGsQ,GAAkBxK,KAAK9F,EAAIsQ,GAAkBjqD,KAAKyoD,KACrDM,UAAW7tD,IDLOgvD,CAAiBP,EAAaJ,GAChDh4C,KAAKm4C,gBAAkBn4C,KAAK44C,YAAYR,GAOnCS,uBACL,MAAMT,EAAcC,GAAcvJ,cAAcwJ,iBAC1CnC,EAAY,IAAIrO,OAAOC,YAAYwD,UAAU6M,EAAa,EAAG,GAEnE,OADAjC,EAAUt9C,IAAI,CAACmH,KAAKk4C,YAAal4C,KAAKm4C,gBAAgBhC,UAAWn2C,KAAKi4C,WAAW9B,YAC1EA,EAGDyC,YAAYpN,GAClB,MAAMsN,EAAgB,IAAIhR,OAAOC,YAAYqH,MAC3C5D,EACArD,GAAWvlD,EAAI81D,GAAkB1B,OAAOp0D,EAAI81D,GAAkB1B,OAAOC,KACrE9O,GAAWC,EAAIsQ,GAAkB1B,OAAO5O,EAAIsQ,GAAkB1B,OAAOE,KACrEhI,GAAYkB,QAAQnxD,KACpB85D,eAAeL,GAAkB1B,OAAOp0D,EAAG81D,GAAkB1B,OAAO5O,GAEtE,MAAO,CAAE+N,UAAW2C,EAAeE,WAAY3D,GAAM7J,EAAOsN,IAMvDG,iBACL,OAAOj5C,KAAKk4C,YAMP/C,UACL,MAAMiD,EAAcC,GAAcvJ,cAAcwJ,iBAChDt4C,KAAKi4C,WAAWJ,cAChB73C,KAAKm4C,gBAAgBa,aACrBh5C,KAAKi5C,iBAAiBC,IAAIpR,OAAOqR,MAAMC,OAAOC,uBAC9CpE,GAAemD,EAAap4C,KAAK64C,wBAM5BS,WAAWv6D,GAChBihB,KAAKi4C,WAAWH,WAAW/4D,KE5D/B,MAAMw6D,GAA8B,CAClCt6D,IAAK2nD,GAAWM,gBAAgBjoD,IAChCkG,KAAM,IACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAGjCuR,GAAkB,CACtB52D,EAAGylD,GAAazlD,EAChBwlD,EAAGsQ,GAAkBxK,KAAK9F,EAAsB,EAAlBmR,GAAWp0D,KACzCmnD,KAAM,GACNC,KAAM,IC0BD,SAASkN,GACdjO,EAAoB,GAeW,IAd/B,SACEuB,EAAQ,QACRhuD,EAAU,GAAE,WACZ26D,EAAa,CAAE92D,EAAG,EAAGwlD,EAAG,EAAGkE,KAAM,EAAGC,KAAM,GAAG,gBAC7CoN,EAAkB/wC,GAAUg/B,iBAAgB,OAC5CgS,EAAShxC,GAAU2+B,aAAY,KAC/BsS,EAAOjxC,GAAU2+B,aAAY,QAC7BuS,EAAUlxC,GAAU2+B,aAAY,MAChCwS,EAAQnxC,GAAU2+B,aAAY,cAC9ByS,EAAgBpxC,GAAU2+B,aAAY,cACtC0S,GAAgB,EAAI,aACpBC,EAAe/H,GAAYI,YAAYtzD,IAAG,aAC1Ck7D,EAAehI,GAAYC,YAAYnzD,KAC1B,EAEf,MAAMk3D,EAAY,IAAIrO,OAAOC,YAAYwD,UAAUC,EAAO,EAAG,GAGvD4O,EAAS,IAAItS,OAAOC,YAAYsO,OAAO7K,EAAO,EAAG,EAAGuB,GAC1DqN,EAAO7B,eAAe,CAAEE,cAAc,EAAMD,eAAe,IAC3D4B,EAAOC,YAAYvS,OAAOqR,MAAMC,OAAOC,uBAAuB,KAC5DxK,GAAkBC,cAAc6H,kBAAkBC,UAAUsD,GAC5DL,OAEFO,EAAOC,YAAYvS,OAAOqR,MAAMC,OAAOkB,yBAAyB,KAC9DzL,GAAkBC,cAAc6H,kBAAkBC,UAAUuD,GACxDF,GAAe9D,EAAUjK,SAxDZ,GAyDjB4N,OAEFM,EAAOC,YAAYvS,OAAOqR,MAAMC,OAAOmB,wBAAwB,KACzDN,GAAe9D,EAAUjK,SA3DX,IA4DlB6N,OAEFK,EAAOC,YAAYvS,OAAOqR,MAAMC,OAAOoB,yBAAyB,KAC9DZ,OAEFQ,EAAOC,YACLvS,OAAOqR,MAAMC,OAAOqB,yBACpB,CAACC,EAA+BC,EAAgBC,KAC9CZ,EAAcU,EAASC,EAAQC,MAKnC,MAAMnsD,EAAO49C,GAAiBb,EAAOzsD,EAAS26D,EAAYC,GAK1D,OAHAxD,EAAUt9C,IAAI,CAACuhD,EAAQ3rD,IACnBwrD,GAAe9D,EAAUjK,SA5ET,IA8EbiK,ECtFT,MAAM0E,GAAkB,CACtBC,QAAS,GACTpB,WAAY,CAAE92D,EAAG,GAAIwlD,GAAI,GAAIkE,KAAM,GAAKC,KAAM,IAC9CnE,EAAG,IACHp/C,MAAO,IACP+xD,UAAW,KAGPvD,GAAY,CAChBtM,WAAY,UACZC,SAAU,OACVh/C,KAAMm8C,GAAMG,SACZZ,MAAO,QACPgF,YAAa,GACbzB,SAAU,CAAEpiD,MAAO6xD,GAAgB7xD,MAAkC,EAA1B6xD,GAAgBC,UAGvDE,GAAkC,CACtC/7D,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAWhCjyB,eAAeilC,GACpBzP,EACA/8C,EACAysD,GAEA,MAAMC,EAAkB,IAAIrT,OAAOC,YAAYwD,UAAUC,EAAO,EAAG,GAE7D4P,EAAS,IAAItT,OAAOC,YAAY6D,KACpCJ,EACArD,GAAWvlD,EAAIi4D,GAAgBC,QAC/BD,GAAgBzS,EAChB35C,EACA+oD,IACAvL,UAAU,EAAK,GACXoP,EAAiB,IAAIvT,OAAOC,YAAYgE,UAC5CP,EACArD,GAAWvlD,EACXi4D,GAAgBzS,EAAIyS,GAAgBC,QACpCD,GAAgB7xD,MACY,GAA5BoyD,EAAOpP,YAAY5kD,OAAeyzD,GAAgBC,QAClDxR,GAASR,SACT,IACAmD,UAAU,EAAK,GACXqP,EAAW,IAAIxT,OAAOC,YAAYgE,UACtCP,EACArD,GAAWvlD,EACXi4D,GAAgBzS,EAAIyS,GAAgBC,QACpCD,GAAgB7xD,MACoB,GAApCqyD,EAAerP,YAAY5kD,QAAgB8zD,EAAQv2D,OAAS,IAAOk2D,GAAgBE,UACnFzR,GAASd,UACT,IACAyD,UAAU,EAAK,GAEjBkP,EAAgBtiD,IAAI,CAACyiD,EAAUD,EAAgBD,IAE/C,MAAMG,EAAkB1Q,GAAkB,CACxChB,WAAYqR,EAAQv2D,OACpBmmD,SAAU,EACVC,SAAU8P,GAAgBE,YAG5B1C,GAAcvJ,cAAc2H,WAAWpD,GAAMa,GAAIiH,GAEjD,MAAMK,EAA2C,IAAItjD,SAAQC,IAC3DgjD,EAAgBtiD,IACdqiD,EAAQv4D,KAAI,CAAC84D,EAAU32D,IACrB20D,GAAajO,EAAO,CAClBuB,SAAUmC,GAAYK,aAAatwD,IACnCF,QAAS08D,EACT/B,WAAYmB,GAAgBnB,WAC5BC,gBAAiBqB,GACjBnB,KAAM,KACJsB,EAAgBhG,UAChBh9C,EAAQrT,MAET4xD,YACDvO,GAAWvlD,EAAIi4D,GAAgB7xD,MAAQ,EACvCuyD,EAAgBz2D,GAAO,GAAKu2D,EAAerP,YAAY5kD,OAAS,UAOxE+zD,EAAgBzE,YAAYvO,GAAWvlD,EAAG,GAC1CisD,GAAkBC,cAAc6H,kBAAkBC,UAAUzE,GAAYY,WAAW9zD,KACnFusD,EAAM3yC,IAAIq8C,MAAM,CACdJ,QAASqG,EACTpG,MAAO,KACJa,WAECnhB,GAAMmhB,GAAyBzhB,UAErC,MAAMsnB,QAAiBD,EAavB,OAVA3M,GAAkBC,cAAc6H,kBAAkBC,UAAUzE,GAAYa,UAAU/zD,KAClFusD,EAAM3yC,IAAIq8C,MAAM,CACdJ,QAASqG,EACTpG,MAAO,KACJc,WAGCphB,GAAMohB,GAAwB1hB,UACpC8gB,GAAezJ,EAAO2P,EAAiB,CAAE7T,aAAc1+B,GAAU0+B,eAE1DmU,ECnIF,IAAKC,GAiBAC,IANZ,SAXYD,KAAa,YAAbA,EAAa,kBAAbA,EAAa,YAAbA,EAAa,YAAbA,EAAa,wBAAbA,EAAa,YAAbA,EAAa,oBAAbA,EAAa,sBAWzB,CAXYA,QAAa,KAoBxB,SAHWC,OAAqB,WAClBD,GAAcE,YAAU,aAD3BD,IAAqB,UAEnBD,GAAc70B,WAAS,YACpC,CAHW80B,QAAqB,KCcjC,MAAMtD,GAKIloB,cAAe,KAJfioB,iBAAW,OAmBZE,eAAiB,IAAM5D,GAAU10C,KAAKo4C,aAd3Cp4C,KAAKo4C,iBAAcjyD,EAGrB01D,qBAIE,OAHKxD,GAAcyD,WACjBzD,GAAcyD,SAAW,IAAIzD,IAExBA,GAAcyD,SAShBC,eAAeC,GACpBh8C,KAAKo4C,YAAc4D,EAGdC,eACL,OAAOj8C,KAAKs4C,iBAAiB4D,kBAGxBC,gBAAgBC,GACrB,OAAOp8C,KAAKs4C,iBAAiB+D,kBAAkBC,aAAaH,gBAAgBC,GAG9E,uBAA8BG,SACtBv8C,KAAKs4C,iBAAiBkE,iBAAiBD,GAOxCE,iBAAiBL,GACtB,OAAOp8C,KAAKs4C,iBAAiB+D,kBAAkBI,iBAAiBL,GAG3DM,gBAAgBN,EAAwB3zB,GAC7CzoB,KAAKs4C,iBAAiB+D,kBAAkBK,gBAAgBN,EAAY3zB,GAG/Dk0B,mBAAmBP,EAAwB3zB,GAChDzoB,KAAKs4C,iBAAiB+D,kBAAkBM,mBAAmBP,EAAY3zB,GAOlEm0B,wBAAwB72D,GAC7B,OAAOia,KAAKs4C,iBAAiB+D,kBAAkBO,wBAAwB72D,GAGlE82D,yBAAyBC,GAC9B98C,KAAKs4C,iBAAiB+D,kBAAkBQ,yBAAyBC,GAG5DC,mBAAmBh3D,GACxBia,KAAKs4C,iBAAiB+D,kBAAkBU,mBAAmBh3D,GAOtDi3D,kBAAkBC,EAA4BC,GACnDl9C,KAAKs4C,iBAAiB+D,kBAAkBW,kBAAkBC,EAAcC,GAGnEZ,aACL,OAAOt8C,KAAKs4C,iBAAiB+D,kBAAkBC,aAG1Ca,uBAAuBF,EAA4Bb,GACxD,OAAOp8C,KAAKs4C,iBAAiB+D,kBAAkBc,uBAAuBF,EAAcb,GAG/EgB,QAAQH,EAA4Bb,EAAwBiB,GACjEr9C,KAAKs4C,iBAAiB+D,kBAAkBe,QAAQH,EAAcb,EAAYiB,GAGrEC,WAAWL,EAA4Bb,EAAwBiB,GACpE,OAAOr9C,KAAKs4C,iBAAiB+D,kBAAkBiB,WAAWL,EAAcb,EAAYiB,GAO/EE,eAAeC,EAAkBC,GACtCz9C,KAAKs4C,iBAAiBoF,mBAAmBH,eAAeC,EAAUC,GAG7DE,gBAAgBH,EAAkBC,GACvCz9C,KAAKs4C,iBAAiBoF,mBAAmBC,gBAAgBH,EAAUC,GAG9DG,eAAe73D,EAAY83D,GAChC79C,KAAKs4C,iBAAiB+D,kBAAkBuB,eAAe73D,EAAI83D,GAGtDC,2BAA2B1B,GAChCp8C,KAAKs4C,iBAAiBoF,mBAAmBK,4BAA4B3B,GAGhE4B,qBACL,MAAO,IACFh+C,KAAKs4C,iBAAiBoF,mBAAmBO,qBACzCj+C,KAAKs4C,iBAAiB4F,iBAAiBD,mBAQvCE,gBAAgBp4D,EAAYq4D,GACjCp+C,KAAKs4C,iBAAiB+D,kBAAkB8B,gBAAgBp4D,EAAIq4D,GAGvDC,yBAAyBjC,GAC9Bp8C,KAAKs4C,iBAAiB4F,iBAAiBG,yBAAyBjC,GAO3DkC,2BACL,OAAOt+C,KAAKs4C,iBAAiB+D,kBAAkBiC,2BAG1CC,oBAAoBt/D,GACzB,OAAO+gB,KAAKs4C,iBAAiB+D,kBAAkBkC,oBAAoBt/D,GAG9Du/D,sBAAsBr8D,GAC3B,OAAO6d,KAAKs4C,iBAAiB+D,kBAAkBmC,sBAAsBr8D,GAGhEs8D,kBAAkBx/D,GACvB+gB,KAAKs4C,iBAAiB+D,kBAAkBoC,kBAAkBx/D,GAOrDy/D,eAAez/D,GACpB,OAAO+gB,KAAKs4C,iBAAiB+D,kBAAkBqC,eAAez/D,GAGzD0/D,iBAAiBx8D,GACtB,OAAO6d,KAAKs4C,iBAAiB+D,kBAAkBsC,iBAAiBx8D,GAG3Dy8D,aAAa3/D,GAClB+gB,KAAKs4C,iBAAiB+D,kBAAkBuC,aAAa3/D,GACrDg3D,GAAmBj2C,KAAKs4C,iBAAkB,mBAGrCuG,SAAS5/D,GACd+gB,KAAKs4C,iBAAiB+D,kBAAkBwC,SAAS5/D,GACjDg3D,GAAmBj2C,KAAKs4C,iBAAkB,kBAGrCwG,wBACL,OAAO9+C,KAAKs4C,iBAAiB+D,kBAAkByC,wBAO1CC,eAAeh5D,GACpB8oD,GAAkBC,cAAckQ,sBAAsBD,eAAeh5D,GAGvE,oBAA2Bk5D,EAA8Bl5D,GACvD,OAAO8oD,GAAkBC,cAAckQ,sBAAsBE,cAAcD,EAAel5D,GAOrFo5D,mBAAmBC,GACxBp/C,KAAKs4C,iBAAiB9B,kBAAkB2I,mBAAmBC,GAGtD3I,WAAW4I,EAAcC,GAC9Bt/C,KAAKs4C,iBAAiB9B,kBAAkBC,WAAW4I,EAAOC,GAGrDC,UAAUF,GACfr/C,KAAKs4C,iBAAiB9B,kBAAkB+I,UAAUF,GAG7CG,UAAUH,GACfr/C,KAAKs4C,iBAAiB9B,kBAAkBgJ,UAAUH,GAGpD,kBAAyBA,EAAc/X,SAC/BtnC,KAAKs4C,iBAAiB9B,kBAAkBiJ,YAAYJ,EAAO/X,GAGnE,mBAA0B+X,EAAc/X,SAChCtnC,KAAKs4C,iBAAiB9B,kBAAkBkJ,aAAaL,EAAO/X,GAMpE,yBAAgCvoD,SJ5N3Bi3B,eAAmCw1B,EAAmBzsD,GAC3D,MAAM4gE,EAAmB,IAAI5H,GAAiB,IACxC5B,EAAYwJ,EAAiB9G,uBAEnCrN,EAAMgL,kBAAkBC,WAAWpD,GAAMW,QAASmC,GAClD3K,EAAMgL,kBAAkBiJ,YAAYpM,GAAMW,SAE1C,MAAM4L,EAAYvT,GAAiBb,EAAOzsD,EAASy6D,GAAiBD,IAAYrN,SAAS,GACzFiK,EAAUt9C,IAAI+mD,GAEd/Q,GAAkBC,cAAc6H,kBAAkBC,UAAUzE,GAAYY,WAAW9zD,KACnFusD,EAAM3yC,IAAIq8C,MAAMF,GAAO,CAAC4K,GAAqC,EAAzBh3C,GAAU0+B,qBAGxC7S,GAA+B,EAAzB7rB,GAAU0+B,cAEtB,MAAMuY,EAAmB,IAAI3nD,SAAcC,IACzCwnD,EAAiB1G,iBAAiB6G,GAAGhY,OAAOqR,MAAMC,OAAOC,uBAAuB,KAC9ExK,GAAkBC,cAAc6H,kBAAkBC,UAAUzE,GAAYa,UAAU/zD,KAClFg2D,GAAezJ,EAAOoU,EAAW,CAAEtY,aAAc1+B,GAAU0+B,aAAe,IAC1EqY,EAAiBxK,UACjBh9C,gBAIE0nD,EIoMEE,CAAoB//C,KAAKs4C,iBAAkBv5D,GAOnD,yBAAgCihE,SACxBhgD,KAAKs4C,iBAAiB2H,kBAAkBC,UAAUxE,GAAcyE,gBAChEngD,KAAKs4C,iBAAiB8H,mBAAmBC,mBAAmBL,SAC5DhgD,KAAKs4C,iBAAiB2H,kBAAkBK,WAGhD,oCAA2CN,SACnChgD,KAAKs4C,iBAAiB8H,mBAAmBC,mBAAmBL,GAOpE,mBAA0BO,SAClBvgD,KAAKs4C,iBAAiB2H,kBAAkBC,UAAUxE,GAAcyE,gBAChEngD,KAAKs4C,iBAAiBkI,qBAAqBC,aAAaF,SACxDvgD,KAAKs4C,iBAAiB2H,kBAAkBK,WAGhD,8BAAqCC,SAC7BvgD,KAAKs4C,iBAAiBkI,qBAAqBC,aAAaF,GAOzDG,kBAAkBC,EAAiBC,GACxC5gD,KAAKs4C,iBAAiBuI,4BAA4BC,UAAUH,EAASC,GAGhEG,qBACL,OAAO/gD,KAAKs4C,iBAAiBuI,4BAA4BE,qBAO3D,wBAA+BC,GAC7B/K,GAAmBj2C,KAAKs4C,iBAAmB,YAAW5J,GAAasS,GAAez6D,SAClFsoD,GAAkBC,cAAckQ,sBAAsBD,eAAeiC,GAOhEC,aAAa5D,EAAgB1+D,EAAwBw1C,EAAmBhvC,GAC7E6a,KAAKs4C,iBAAiB4I,kBAAkBD,aAAa5D,EAAQ1+D,EAAUw1C,EAAUhvC,GAG5Eg8D,mBACLnhD,KAAKs4C,iBAAiB4I,kBAAkBC,mBAG1C,mBAA0BxiE,GACxBqhB,KAAKs4C,iBAAiB4I,kBAAkBE,aAAaziE,GAOvD,uBACQqhB,KAAKs4C,iBAAiB+I,iBAAiBC,WAG/C,mBAA0BC,SAClBvhD,KAAKs4C,iBAAiB+I,iBAAiBG,aAAaD,GAGrDE,qBACL,OAAOzhD,KAAKs4C,iBAAiB+I,iBAAiBI,qBAOzC9K,kBACL,OAAO9H,GAAkBC,cAAc6H,kBAGlCC,UAAU8K,GACf7S,GAAkBC,cAAc6H,kBAAkBC,UAAU8K,GAGvDC,YAAYD,GACjB7S,GAAkBC,cAAc6H,kBAAkBgL,YAAYD,GAGhE,qBACE7S,GAAkBC,cAAc6H,kBAAkBiL,eAG7CC,mBACLhT,GAAkBC,cAAc6H,kBAAkBkL,mBAG7CC,sBACLjT,GAAkBC,cAAc6H,kBAAkBmL,sBAG7CC,mBAAmBC,GACxBnT,GAAkBC,cAAc6H,kBAAkBsL,kBAAkBD,GAG/DE,WAAWC,GAChBtT,GAAkBC,cAAc6H,kBAAkBuL,WAAWC,GAOxDC,eAAer8D,EAAWs8D,EAAoBC,GACnD,MAAMC,EAAaviD,KAAKwiD,cAAcxiD,KAAKs8C,aAAamG,kBAAkB18D,IAC1Eia,KAAKs4C,iBAAiBoK,sBAAsBC,iBAAiBJ,EAAYF,EAAYC,GAGhFM,cAAc78D,GACnB,MAAM88D,EAAY7iD,KAAKwiD,cAAcxiD,KAAKs8C,aAAamG,kBAAkB18D,IACzEia,KAAKs4C,iBAAiBoK,sBAAsBE,cAAcC,GAOrDC,iBAAiBC,GACtB/iD,KAAKs4C,iBAAiB0K,kBAAkBF,iBAAiBC,GAGpDE,oBAAoBC,GACzBljD,KAAKs4C,iBAAiB0K,kBAAkBC,oBAAoBC,GAGvDC,iBAAiBD,GACtBljD,KAAKs4C,iBAAiB0K,kBAAkBG,iBAAiBD,GAGpDE,aAAa9N,EAA2C4N,GAC7DA,EACIljD,KAAKs4C,iBAAiBzrD,MAAM5C,OAAOqrD,GACnCt1C,KAAKs4C,iBAAiBzrD,MAAMw2D,QAAQ/N,GAO1C,uBACQt1C,KAAKs4C,iBAAiB2H,kBAAkBK,WAGhD,gBAAuBgD,SACftjD,KAAKs4C,iBAAiB2H,kBAAkBC,UAAUoD,GAG1D,gBAAuBA,SACftjD,KAAKs4C,iBAAiB2H,kBAAkBsD,UAAUD,GAGnDE,eAAeF,GACpB,OAAOtjD,KAAKs4C,iBAAiB2H,kBAAkBuD,eAAeF,GAOzDG,+BAA+BrH,GACpCp8C,KAAKs4C,iBAAiBoL,uBAAuBD,+BAA+BrH,GAO9E,iCAAwCtmD,GAMrB,UALMmlD,GACrB5C,GAAcvJ,cAAcwJ,iBAC3B,mCACD,CAAC,MAAO,SAGRl4D,OAAOmZ,KAAM,YAAWsN,iBAAuB/Q,MAAkB,SACjE1V,OAAO44C,SAIX,oCACQ6V,GAAkBC,cAAckQ,sBAAsB2E,kBAOvDC,sBACLC,EACAC,EACAC,GAEA,OAAO/jD,KAAKs4C,iBACT0L,sBACAJ,sBAAsBC,EAAaC,EAAoBC,GAGrDE,cAAcl+D,EAAYm+D,EAAyBC,GACxDnkD,KAAKs4C,iBAAiB+D,kBAAkB4H,cAAcl+D,EAAIm+D,EAAaC,GAGlEC,gBAAgBr+D,EAAYs+D,GACjCrkD,KAAKs4C,iBAAiB+D,kBAAkB+H,gBAAgBr+D,EAAIs+D,GAOvDC,gBAAgB/D,GACrB,OAAO7L,GAAU10C,KAAKs8C,aAAaiI,iBAAiB/iE,IAAI++D,IAGnDiE,iBAAiBX,GACtB,OAAOnP,GAAU10C,KAAKs8C,aAAamI,kBAAkBjjE,IAAIqiE,IAGpDa,cAAc5H,GACnB,OAAOpI,GAAU10C,KAAKs8C,aAAaqI,eAAenjE,IAAIs7D,IAGjD8H,cAAcpH,GACnB,OAAO9I,GAAU10C,KAAKs8C,aAAauI,mBAAmBrjE,IAAIg8D,IAGrDsH,YAAYC,GACjB,OAAOrQ,GAAU10C,KAAKs8C,aAAa0I,iBAAiBxjE,IAAIujE,IAEnDvC,cAAczV,GACnB,OAAO/sC,KAAKs8C,aAAakG,cAAczV,IAzdrCsL,GAGGyD,cAAQ,EA0dFzD,UC1fR,IAAK4M,GASAC,GCRAC,GCqCAC,IFhCZ,SANYH,KAAgB,sBAAhBA,EAAgB,gCAAhBA,EAAgB,8BAM5B,CANYA,QAAgB,KAe5B,SANYC,KAAa,4BAAbA,EAAa,0BAAbA,EAAa,4BAMzB,CANYA,QAAa,KGHV,MAAMG,GAMnB,yCAAgDC,GAM9C,aAL4BptD,QAAQqtD,IAClCD,EAAiB3iE,KACfqzB,eAA+BhW,KAAKwlD,wBAAwBC,OAG3CC,OAAMz8B,IAA2B,IAAdA,IAU1C,qCAA4C08B,GAC1C,MAAM,MAAE55C,EAAK,gBAAE65C,EAAe,QAAEC,GAAYF,EAC5C,OAAQ55C,GACN,KAAKk5C,GAAiBa,UACpB,aACSzN,GAAcvJ,cAAcoQ,cACjC0G,EAAgB3G,cAChB2G,EAAgB7/D,MACX8/D,EAEX,KAAKZ,GAAiBc,eACpB,OAAO1N,GAAcvJ,cAAcyP,oBAAoBqH,EAAgB7/D,MAAQ8/D,EACjF,KAAKZ,GAAiBe,cACpB,OAAO3N,GAAcvJ,cAAc4P,eAAekH,EAAgB7/D,MAAQ8/D,EAC5E,QACE,OAAO,KFff,SA3BYV,KAAc,8BAAdA,EAAc,kCAAdA,EAAc,sCAAdA,EAAc,sCAAdA,EAAc,4BAAdA,EAAc,oBAAdA,EAAc,kCAAdA,EAAc,kBAAdA,EAAc,wBAAdA,EAAc,4BAAdA,EAAc,oCAAdA,EAAc,gCAAdA,EAAc,8BAAdA,EAAc,wCAAdA,EAAc,kCAAdA,EAAc,oBAAdA,EAAc,kCAAdA,EAAc,gCAAdA,EAAc,kBAAdA,EAAc,kBAAdA,EAAc,kCAAdA,EAAc,4CAAdA,EAAc,gDAAdA,EAAc,cA2B1B,CA3BYA,QAAc,KGQX,MAAMc,GAMnB,+BAAsCC,EAA4BC,GAChE,MAAMC,EAAY/N,GAAcvJ,cAEhC,OAAQoX,GACN,KAAKf,GAAekB,QAElB,YADAD,EAAUhJ,QAAQ+I,EAAalJ,aAAckJ,EAAa/J,WAAY+J,EAAapgE,IAErF,KAAKo/D,GAAemB,WAElB,YADAF,EAAU9I,WAAW6I,EAAalJ,aAAckJ,EAAa/J,WAAY+J,EAAapgE,IAExF,KAAKo/D,GAAeoB,gBAElB,YADAH,EAAU1J,gBAAgByJ,EAAa/J,WAAY+J,EAAa19B,MAElE,KAAK08B,GAAeqB,mBAElB,YADAJ,EAAUzJ,mBAAmBwJ,EAAa/J,WAAY+J,EAAa19B,MAErE,KAAK08B,GAAesB,cAElB,YADAL,EAAUnC,cAAckC,EAAapgE,GAAIogE,EAAa/J,WAAY+J,EAAaxnE,UAEjF,KAAKwmE,GAAeuB,gBAElB,YADAN,EAAUhC,gBAAgB+B,EAAapgE,GAAIogE,EAAa9B,YAE1D,KAAKc,GAAewB,iBAElB,YADAP,EAAU3C,+BAA+B0C,EAAapgE,IAExD,KAAKo/D,GAAeyB,eAElB,YADAR,EAAUhE,eAAe+D,EAAapgE,GAAIogE,EAAa9D,WAAY8D,EAAa7D,WAElF,KAAK6C,GAAe0B,cAElB,YADAT,EAAUxD,cAAcuD,EAAapgE,IAEvC,KAAKo/D,GAAe2B,gBAIlB,OAHAV,EAAU3C,+BAA+B0C,EAAapgE,IACtDqgE,EAAUtI,2BAA2BqI,EAAapgE,SAClDqgE,EAAU/H,yBAAyB8H,EAAapgE,IAElD,KAAKo/D,GAAe4B,kBAElB,YADAX,EAAUY,kBAAkBb,EAAapgE,IAE3C,KAAKo/D,GAAe8B,kBAElB,YADAb,EAAU3H,kBAAkB0H,EAAapgE,IAE3C,KAAKo/D,GAAe+B,aAElB,YADAd,EAAUxH,aAAauH,EAAapgE,IAEtC,KAAKo/D,GAAegC,SAElB,YADAf,EAAUvH,SAASsH,EAAapgE,IAElC,KAAKo/D,GAAeiC,aAMlB,YALIhB,EAAU5C,eAAe9H,GAAcyE,gBACnCiG,EAAUiB,wBAAwBlB,EAAapgE,UAE/CqgE,EAAU3F,aAAa0F,EAAapgE,KAG9C,KAAKo/D,GAAemC,SAOlB,kBANMlB,EAAUnF,aACdkF,EAAapgE,GACbogE,EAAaxnE,SACbwnE,EAAahyB,SACbgyB,EAAahhE,MAGjB,KAAKggE,GAAeoC,gBAElB,kBADMnB,EAAUzI,gBAAgBwI,EAAapgE,GAAIogE,EAAa1I,QAEhE,KAAK0H,GAAeqC,eAElB,kBADMpB,EAAU7I,eAAe4I,EAAapgE,GAAIogE,EAAa1I,QAE/D,KAAK0H,GAAesC,QAElB,YADA5Y,GAAkBC,cAAc6H,kBAAkBgL,YAAYwE,EAAapgE,IAE7E,KAAKo/D,GAAeuC,QAElB,kBADM7Y,GAAkBC,cAAc6H,kBAAkBC,UAAUuP,EAAapgE,IAEjF,KAAKo/D,GAAewC,gBAElB,YADAxB,EAAajnE,KAAOknE,EAAU7G,UAAUlM,GAAMI,SAAW2S,EAAU5G,UAAUnM,GAAMI,UAErF,KAAK0R,GAAeyC,qBAElB,kBADMxB,EAAUyB,2BAA2B1B,EAAarwD,cAE1D,KAAKqvD,GAAe2C,uBAElB,kBADM1B,EAAU2B,wBAElB,KAAK5C,GAAe6C,MAElB,kBADMvzB,GAAM0xB,EAAahyB,UAE3B,QACE,QAWN,2BAAkC+xB,GAChC,OAAQA,GACN,KAAKf,GAAekB,QACpB,KAAKlB,GAAemB,WACpB,KAAKnB,GAAeoB,gBACpB,KAAKpB,GAAeqB,mBACpB,KAAKrB,GAAesB,cACpB,KAAKtB,GAAeuB,gBAClB,OAAO,EACT,KAAKvB,GAAeyC,qBACpB,KAAKzC,GAAe2C,uBACpB,KAAK3C,GAAe2B,gBACpB,KAAK3B,GAAewB,iBACpB,KAAKxB,GAAeyB,eACpB,KAAKzB,GAAe0B,cACpB,KAAK1B,GAAe4B,kBACpB,KAAK5B,GAAe8B,kBACpB,KAAK9B,GAAe+B,aACpB,KAAK/B,GAAegC,SACpB,KAAKhC,GAAeiC,aACpB,KAAKjC,GAAemC,SACpB,KAAKnC,GAAeoC,gBACpB,KAAKpC,GAAeqC,eACpB,KAAKrC,GAAesC,QACpB,KAAKtC,GAAeuC,QACpB,KAAKvC,GAAewC,gBACpB,KAAKxC,GAAe6C,MAClB,OAAO,ICrIA,MAAMC,GAOnB,6BAAoCjI,GAClC,GAAKA,EACL,IAAK,MAAMlD,KAAYkD,EAAW,CAChC,MAAM,WAAEkG,EAAU,aAAEC,GAAiB9N,GAAcvJ,cAAc4V,cAAc5H,SACzEmJ,GAAmBiC,kBAAkBhC,EAAYC,IAW3D,yBAAgCnG,GAC9B,GAAKA,EAAL,CACA,IAAK,MAAMlD,KAAYkD,QACfhgD,KAAKmoD,kBAAkBrL,SAEzBzE,GAAcvJ,cAAcwS,YAQpC,wBAA+BxE,GAC7B,MAAM,WAAEoJ,EAAU,aAAEC,EAAY,iBAAEb,EAAgB,aAAE8C,EAAY,cAAEC,GAChEhQ,GAAcvJ,cAAc4V,cAAc5H,SAElC98C,KAAKsoD,mBAAmBF,EAAcC,EAAe/C,WACvDW,GAAmBiC,kBAAkBhC,EAAYC,GACnDF,GAAmBsC,oBAAoBrC,IACzC7N,GAAcvJ,cAAc+N,yBAAyBC,GAEvDzE,GAAcvJ,cAAciO,mBAAmBD,IAenD,yBACEsL,EACAC,EACA/C,GAEA,OACG8C,IAAiB/P,GAAcvJ,cAAc8N,wBAAwByL,WAC/DhD,GAAuBmD,4BAA4BlD,KHzB/D,SAXWF,KAAY,wBAAZA,EAAY,sBAAZA,EAAY,wBAAZA,EAAY,sBAAZA,EAAY,kBAAZA,EAAY,8BAAZA,EAAY,wBAAZA,EAAY,kBAAZA,EAAY,gBAAZA,EAAY,4BAWvB,CAXWA,QAAY,KI9BT,MAAMqD,GAAsB,cAAD,KAChCC,KAAOrQ,GAAcvJ,cAAcwJ,iBAAiB,KACpDqQ,qBAAuB,IAAIC,IAA2C,KA+JtEC,SAAYC,GAAsBA,EAAM18D,OAAS4iD,GAAUqH,OApJ5D0S,YACLD,EACA/b,GACuD,IAAD,QACtD,OAAQ+b,EAAM18D,MACZ,KAAK4iD,GAAUqH,OAEb,OADAr2C,KAAKgpD,gBAAgBF,GAAmB,QAAZ,EAAAA,EAAMtkC,cAAM,aAAZ,EAAc7Z,QAAS,GAAe,QAAZ,EAAAm+C,EAAMtkC,cAAM,aAAZ,EAAc89B,YAAa,IAC1EtiD,KAAKipD,aAAaH,GAE3B,KAAK9Z,GAAUI,MACb,OAAO,IAAItH,OAAOC,YAAYqH,MAC5BpvC,KAAK0oD,MACA,OAALI,QAAK,IAALA,GAAa,QAAR,EAALA,EAAOtkC,cAAM,WAAR,EAAL,EAAe0kC,UAAW,GACrB,OAALJ,QAAK,IAALA,GAAa,QAAR,EAALA,EAAOtkC,cAAM,WAAR,EAAL,EAAe2kC,UAAW,EAC1Bpc,IAkBD4V,iBAAiBmG,EAAmBzG,EAAoBC,GAAoB,IAAD,EAChF,MAAM8G,EAAM/Q,GAAcvJ,cAAc0T,cAAcsG,EAAMl6B,MAO5D,OALIw6B,GAAOA,EAAI5kC,SACb4kC,EAAI5kC,OAAO7Z,MAAQ03C,EACnB+G,EAAI5kC,OAAO89B,UAAYA,GAGP,QAAlB,EAAQ8G,EAAI5kC,cAAM,aAAV,EAAY6kC,UAClB,KAAKpa,GAASjjB,OACZ,MAAMs9B,EAAUjR,GAAcvJ,cAAcmN,eAC5C5D,GAAcvJ,cAAcsO,QAAQgI,GAAamE,QAASD,EAASR,EAAM7pE,KACzE,MACF,KAAKgwD,GAASsE,WACZ8E,GAAcvJ,cAAc2U,+BAA+BqF,EAAM7pE,MAe/D+pE,gBAAgBF,EAAmBzG,EAAoBC,GAC7D,GAAItiD,KAAK6oD,SAASC,GAAQ,CAAC,IAAD,MACxB9oD,KAAKwpD,gBAAgBV,GACrB,MAAMW,EAAS,IAAI3hB,OAAOC,YAAYsO,OACpCr2C,KAAK0oD,MACO,QAAZ,EAAAI,EAAMtkC,cAAM,aAAZ,EAAc0kC,UAAW,GACb,QAAZ,EAAAJ,EAAMtkC,cAAM,aAAZ,EAAc2kC,UAAW,EACzBL,EAAMl6B,MAEFpK,EAAS,CACbvlC,IAAK6pE,EAAMl6B,KACX86B,OAAQ1pD,KAAK0oD,KAAKiB,MAAMC,qBAAqBd,EAAMl6B,KAAM,CACvDjkB,MAAO03C,EACPz3C,KAAiB,QAAZ,EAAAk+C,EAAMtkC,cAAM,aAAZ,EAAcqlC,WAAY,EAC/BC,MAAO,IAETxH,UAAWA,EACXyH,QAAS,GAEX/pD,KAAK0oD,KAAKiB,MAAMjrE,OAAO8lC,GACvBxkB,KAAK2oD,qBAAqBqB,IAAIlB,EAAM7pE,IAAKwqE,IAUtCrH,eAAe0G,GACpB,GAAI9oD,KAAK6oD,SAASC,GAAQ,CACxB,MAAMW,EAASzpD,KAAKipD,aAAaH,GACjCW,EAAO9zB,KAAKmzB,EAAMl6B,MAAM,GACxB5uB,KAAK0oD,KAAK7vD,IAAIoxD,SAASR,IAUpB7G,cAAckG,GACnB,MAAMW,EAASzpD,KAAK2oD,qBAAqBnnE,IAAIsnE,EAAM7pE,KAC/C+gB,KAAK6oD,SAASC,IAAUW,GAAUA,EAAOE,OAC3CF,EAAOE,MAAMO,OAYVV,gBAAgBV,GACrB,MAAMqB,EAAOnqD,KAAK2oD,qBAAqBnnE,IAAIsnE,EAAM7pE,KAC7CkrE,IACFnqD,KAAK0oD,KAAKiB,MAAMS,OAAOtB,EAAMl6B,MAC7Bu7B,EAAKhV,UACLn1C,KAAK2oD,qBAAqBnxC,OAAOsxC,EAAM7pE,MAapCgqE,aAAaH,GAClB,OAAOpU,GAAU10C,KAAK2oD,qBAAqBnnE,IAAIsnE,EAAM7pE,KAAO,UAAS6pE,EAAMl6B,mBCtJxE,SAASy7B,GACd5pB,EACAz3C,EACAC,GAEA,MAAM6oB,EAAQ2uB,EAAI6pB,cAAgB7pB,EAAI8pB,aACjCvhE,GAIHy3C,EAAI8pB,aAAevhE,EACnBy3C,EAAI6pB,cAAgBrhE,GAAUD,EAAQ8oB,IAJtC2uB,EAAI8pB,aAAethE,EAAU6oB,EAC7B2uB,EAAI6pB,cAAgBrhE,GAejB,SAASuhE,GACd/pB,EACAz3C,EACAC,GAEIw3C,EAAI8pB,aAAe9pB,EAAI6pB,cACzBD,GAAO5pB,EAAK,EAAGx3C,GAEfohE,GAAO5pB,EAAKz3C,GAYT,SAASyhE,GACdhqB,EACAz3C,EACAC,GAEIw3C,EAAI8pB,aAAe9pB,EAAI6pB,cACzBD,GAAO5pB,EAAKz3C,GAEZqhE,GAAO5pB,EAAK,EAAGx3C,GCiOJyhE,OA3Qf,MASEv6B,YAAYqb,EAAmBmf,GAA+B,KARtDnf,WAAK,OACLmf,kBAAY,OAEZC,iBAAW,OACXC,sBAAgB,OAChBC,oBAAc,OACdC,sBAAgB,EAGtB/qD,KAAKwrC,MAAQA,EACbxrC,KAAK2qD,aAAeA,EACpB3qD,KAAK+qD,iBAAmB,EAMnBC,oBACL,MAAMC,EAAiB,IAAInjB,OAAOC,YAAYwD,UAAUvrC,KAAKwrC,MAAO,EAAG,GACvExrC,KAAK4qD,YAAcK,EAGnB,MAAMC,EAAYzR,GAAaz5C,KAAKwrC,MAAO,CACzCuB,SAAUmC,GAAY7B,MAAMpuD,IAC5B46D,KAAM,IAAM75C,KAAKmrD,UAAS,KAEzB7U,SAASlJ,GAAgBC,MAAMG,OAAQJ,GAAgBC,MAAMG,QAC7D4d,aAAc,GAAK3sC,KAAK4sC,GAAM,KAC9B3U,YACCtJ,GAAgBC,MAAMzqD,EAAIwqD,GAAgBC,MAAMC,QAChDF,GAAgBC,MAAMjF,GAGpBkjB,EAAa7R,GAAaz5C,KAAKwrC,MAAO,CAC1CuB,SAAUmC,GAAY7B,MAAMpuD,IAC5B46D,KAAM,IAAM75C,KAAKmrD,UAAS,KAEzB7U,SAASlJ,GAAgBC,MAAME,OAAQH,GAAgBC,MAAMG,QAC7D4d,YAAa,GAAK3sC,KAAK4sC,GAAM,KAC7B3U,YACCtJ,GAAgBC,MAAMzqD,EAAIwqD,GAAgBC,MAAMC,QAChDF,GAAgBC,MAAMjF,GAE1B6iB,EAAepyD,IAAI,CAACqyD,EAAWI,IAG/B,MAAMrpE,EAAQ,IAAI6lD,OAAOC,YAAYsO,OACnCr2C,KAAKwrC,MACL4B,GAAgBW,QAAQG,KAAKtrD,EAC7BwqD,GAAgBW,QAAQG,KAAK9F,EAC7B8G,GAAYgB,WAAWjxD,KACvBq3D,SAAS,KASX,OARA2U,EAAepyD,IAAI5W,GAGnBgpE,EAAepyD,I3BhCZ,SAAmC2yC,GACxC,MAAM+f,EAAe,IAAIzjB,OAAOC,YAAYwD,UAC1CC,EACA4B,GAAgBW,QAAQG,KAAKZ,QAC7BF,GAAgBW,QAAQG,KAAKD,SAEzBud,EAAUpe,GAAgBW,QAAQ9uD,IAGlCwsE,EAAa,IAAI3jB,OAAOC,YAAYgE,UACxCP,EACAggB,EAAQ5oE,EACR4oE,EAAQpjB,EACRojB,EAAQxiE,MACRwiE,EAAQviE,OACRqgD,GAASd,UACT,IAEIkjB,EAAgB,IAAI5jB,OAAOC,YAAYgE,UAC3CP,EACAggB,EAAQ5oE,EAAI4oE,EAAQxiE,MAAQyiE,EAAWE,QAAU,IACjDH,EAAQpjB,EACRojB,EAAQxiE,MAAQ,EAChBwiE,EAAQviE,OACRqgD,GAASd,UACT,IAEIojB,EAAcvf,GAClBb,EACA,YACA4B,GAAgBW,QAAQK,iBACxBzB,IAIIkf,EAAY,IAAIvgB,GACpBE,EACA4B,GAAgBW,QAAQO,YAAY1rD,EACpCwqD,GAAgBW,QAAQO,YAAYlG,EDxCtC,+FCsDA,OATAsjB,EAAcnT,iBACdmT,EAAcrR,YAAYvS,OAAOqR,MAAMC,OAAOkB,yBAAyB,IACrEuR,EAAUzf,YAAW,KAEvBsf,EAAcrR,YAAYvS,OAAOqR,MAAMC,OAAOmB,wBAAwB,IACpEsR,EAAUzf,YAAW,KAGvBmf,EAAa1yD,IAAI,CAAC4yD,EAAYC,EAAeE,EAAaC,IACnDN,E2BpBcO,CAA0B9rD,KAAKwrC,QAGlDxrC,KAAK+rD,UAEEd,EASDc,UACF/rD,KAAK4qD,cACH5qD,KAAK8qD,gBAAgB9qD,KAAK8qD,eAAe3V,UAG7Cn1C,KAAK8qD,eAAiB9qD,KAAKgsD,uBAC3BhsD,KAAK4qD,YAAY/xD,IAAImH,KAAK8qD,gBAG1B9qD,KAAKisD,cAYDA,WAAWC,GACjB,GAAIlsD,KAAK4qD,YAAa,CAEpB,GADI5qD,KAAK6qD,kBAAkB7qD,KAAK6qD,iBAAiB1V,WAC5C+W,EAAO,OASZ,IAAIC,EACJ,GARAnsD,KAAK6qD,iBAAmB,IAAI/iB,OAAOC,YAAYwD,UAC7CvrC,KAAKwrC,MACL4B,GAAgBW,QAAQG,KAAKZ,QAC7BF,GAAgBW,QAAQG,KAAKD,SAK3Bie,EAAMnf,WAAankC,GAAU4+B,kBAE/B2kB,EAAe9f,GACbrsC,KAAKwrC,MACL,uBACA4B,GAAgBU,oBAChBnB,QAEG,CACL,MAAMyf,EAAchf,GAAgBW,QAAQG,KAC5Cie,EAAe,IAAIrkB,OAAOC,YAAYsO,OAAOr2C,KAAKwrC,MAAO,EAAG,EAAG0gB,EAAMnf,UACrE0d,GAAgB0B,EAAcC,EAAYje,IAAKie,EAAYje,KAC3Dge,EAAazV,YAAY0V,EAAYxpE,EAAGwpE,EAAYhkB,GAItD,MAAMikB,EAAehgB,GACnBrsC,KAAKwrC,MACL0gB,EAAM3lE,MACN6mD,GAAgBW,QAAQQ,gBACxB7B,IAII4f,EAAc,IAAIxkB,OAAOC,YAAY6D,KACzC5rC,KAAKwrC,MACL4B,GAAgBW,QAAQG,KAAKtrD,EAC7BwqD,GAAgBW,QAAQG,KAAK9F,EAAIgF,GAAgBW,QAAQC,SAASC,QAClEie,EAAMljD,YACN4jC,IACAX,UAAU,GAAK,GAGXc,GAA+B,IAApBmf,EAAMvoC,UAAsB,GAAKuoC,EAAMnf,SAClDwf,EAAalgB,GACjBrsC,KAAKwrC,MACLuB,EACAK,GAAgBW,QAAQM,cACxB1B,IAII6f,EAAY,IAAI1kB,OAAOC,YAAYgE,UACvC/rC,KAAKwrC,MACL4B,GAAgBW,QAAQG,KAAKtrD,EAC7BwqD,GAAgBW,QAAQG,KAAK9F,EAC7BgF,GAAgBW,QAAQG,KAAKC,IAC7Bf,GAAgBW,QAAQG,KAAKC,IAC7B,GACAjC,SAASggB,EAAMvoC,UAAY,EAAI,IAEjC3jB,KAAK6qD,iBAAiBhyD,IAAI,CAACszD,EAAcK,EAAWH,EAAcC,EAAaC,IAC/EvsD,KAAK4qD,YAAY/xD,IAAImH,KAAK6qD,mBAiBtBM,SAASsB,GACf,MAAMC,EAAc1sD,KAAK+qD,iBACnB4B,EAAavY,GACjBqY,EAAOC,EAAc,EAAIA,EAAc,EACvC,EACA3oC,OAAO6oC,kBAEU5sD,KAAK6sD,SAASF,GAAYhoE,OAE5B,IACfqb,KAAK+qD,iBAAmB4B,EACxB3sD,KAAK+rD,WAQDC,uBACN,MAAMlB,EAAiB,IAAIhjB,OAAOC,YAAYwD,UAAUvrC,KAAKwrC,MAAO,EAAG,GAGjEt8C,EAAQ8Q,KAAK6sD,SAAS7sD,KAAK+qD,kBAC3B+B,EAAgBjiB,GAAkB,CACtChB,WAAY36C,EAAMvK,OAClBmmD,SAAU,EACVC,SAAUqC,GAAgBM,KAAKE,SAejC,OAXAkd,EAAejyD,IACb3J,EAAMvM,KAAI,CAACisD,EAAW9pD,IACpBkb,KAAK+sD,iBACHne,EAAUroD,MACVumE,EAAchoE,GAAO,GACrBgoE,EAAchoE,GAAO,GAAKsoD,GAAgBM,KAAKC,QAC/C,IAAM3tC,KAAKisD,WAAWrd,KACE,IAAxBA,EAAUjrB,cAITmnC,EAaDiC,iBACNtsB,EACAusB,EACAC,EACAn2D,EACA6sB,GAEA,MAAMy2B,EAASX,GAAaz5C,KAAKwrC,MAAO,CACtCuB,SAAUmC,GAAYwB,aAAazxD,IACnCF,QAAS0hD,EACTiZ,WAAYtM,GAAgBS,eAC5B8L,gBAAiBnN,GACjBqN,KAAM/iD,EACNmjD,cAAet2B,IACd+yB,YAAYsW,EAAMC,GAIrB,OADKtpC,GAAWy2B,EAAOlO,SAAS,IACzBkO,EAaDyS,SAASK,GACf,MAAM/qE,EAAO6d,KAAK2qD,eACZwC,EAAW3e,GAAcrsD,GACzBirE,EAAeF,EAAU9f,GAAgBK,aAC/C,OAAO0f,EAAS1jB,MAAM2jB,EAAcA,EAAehgB,GAAgBK,gBChRxD,MAAM4f,GAAuB,cAAD,KACjCC,uBAAiB,EAMlB7J,+BAA+BrH,GACpC,MAAMrP,EAAWsL,GAAcvJ,cAAcqN,gBAAgBC,GAAYrP,SAEzE/sC,KAAKutD,sBAAsBxgB,GASrBwgB,sBAAsBxgB,GAC5BsL,GAAcvJ,cAAcqQ,mBAAmB,CAAC9L,GAAME,aACtDvzC,KAAKstD,kBAAoBjV,GAAcvJ,cAAc0T,cAAczV,GACnE,MAAMygB,EAAmBnV,GAAcvJ,cAAcwJ,iBAAiBoK,sBACtE,IAAI+K,EAEAztD,KAAKstD,oBACPG,EAAQD,EAAiBzE,YAAY/oD,KAAKstD,kBAAmBvgB,GAC7DygB,EAAiBpL,eAAepiD,KAAKstD,mBAErC9C,GAAeiD,EAAOtlB,GAAWvlD,EAAGulD,GAAWC,GAC/CiQ,GAAcvJ,cAAc2H,WAAWpD,GAAME,WAAYka,GACzDpV,GAAcvJ,cAAc2Q,YAAYpM,GAAME,cC8ErCma,OA7Gf,MAGEv9B,cAAe,KAFPw9B,YAAM,EAGZ3tD,KAAK2tD,OAAS,IAAI/E,IAClBvQ,GAAcvJ,cAAckO,kBAAkBoI,GAAawI,cAAe5tD,MASrEq+C,yBAAyBjC,GAC9B/D,GAAcvJ,cAAcqQ,mBAAmB,CAAC9L,GAAMK,OACtD,MAAMma,EAAkBxV,GAAcvJ,cAAcqO,uBAClDiI,GAAawI,cACbxR,GAIFp8C,KAAK2tD,OAAOG,QAGZD,EAAgBlrE,KAAIoD,GAAMia,KAAK+tD,UAAUhoE,KAWnCioE,WAAWC,GACjB,MAAM7V,EAAcC,GAAcvJ,cAAcwJ,kBAC1C,EAAE11D,EAAC,EAAEwlD,EAAC,MAAEp/C,EAAK,OAAEC,EAAM,UAAE+2D,EAAS,cAAEqI,GAAkB4F,EACpDC,EAAa,IAAIpmB,OAAOC,YAAYgE,UAAUqM,EAAax1D,EAAGwlD,EAAGp/C,EAAOC,EAAQ,EAAG,GAKzF,OAJIglE,EAAaE,eACfD,EAAW3V,iBAGN,CACLkR,OAAQyE,EACRE,UAAWF,EACXlO,YACAqI,iBAcG0F,UAAUhoE,GACf,MAAMsoE,EAAWhW,GAAcvJ,cAAcgW,YAAY/+D,GACnDuoE,EAAOtuD,KAAKguD,WAAWK,GAG7B,OAFAhW,GAAcvJ,cAAc2H,WAAWpD,GAAMK,KAAM4a,EAAK7E,QACxDzpD,KAAK2tD,OAAO3D,IAAIjkE,EAAIuoE,IACb,EAYFC,aAAaxoE,GAClB,OAAOia,KAAKkgC,aAAan6C,IAAOia,KAAK+tD,UAAUhoE,GAU1Cm6C,aAAan6C,GAClB,MAAMuoE,EAAOtuD,KAAK2tD,OAAOnsE,IAAIuE,GAC7B,QAAIuoE,IACFtuD,KAAK2tD,OAAOn2C,OAAOzxB,GAClBuoE,EAAK7E,OAAwCtU,WACvC,GASJ8I,kBACL,OAAOvlC,MAAM81C,KAAKxuD,KAAK2tD,OAAO1hC,YC1GnBwiC,OAPO,CACpBC,UAAW,IACXC,SAAU,CACR/rE,EAAG,CAAEgsE,KALW,IAKQC,OAAQxmB,GAAazlD,EAAGksE,MAAO3mB,GAAWvlD,EALlD,OCWL,MAAMmsE,GAGnB5+B,cAAe,KAFP6+B,wBAAkB,EAGxBhvD,KAAKgvD,mBAAqB,IAAIpG,IAC9BvQ,GAAcvJ,cAAckO,kBAAkBoI,GAAa6J,WAAYjvD,MASlEkvD,8BAA8B9S,GACnC,MAAM+S,EAAc9W,GAAcvJ,cAAcqO,uBAC9CiI,GAAa6J,WACb7S,GAIFp8C,KAAKgvD,mBAAmBlB,QAGxBqB,EAAYxsE,KAAIoD,GAAMia,KAAK+tD,UAAUhoE,KAWhC69D,sBACLC,EACAC,EACAC,GAEA,MAAMqL,EAAY/W,GAAcvJ,cAAc0V,iBAAiBX,IACzD,gBAAEwL,EAAe,kBAAEC,EAAiB,YAAEC,EAAW,MAAEC,GAAUJ,EAC7DK,EAAqBhB,GAAcE,SAAS/rE,EAAEmhE,GAAoBsL,GAClEtiB,EAAWwiB,EAAY/tE,IAAIsiE,GAAsBwL,GAEjDI,EAAkB,IAAI5nB,OAAOC,YAAYqH,MAC7CiJ,GAAcvJ,cAAcwJ,iBAC5BmX,EACAtnB,GAAWC,EACX2E,GACAd,UAAU,GAAK,GAGjB,OADAoe,GAAOqF,EAAiBjB,GAAcC,UAAYc,GAC3CE,EAWF3B,UAAUhoE,GACf,MAAM2pE,EAAkB1vD,KAAK4jD,sBAAsB79D,GAGnD,OAFAsyD,GAAcvJ,cAAc2H,WAAWpD,GAAMM,UAAW+b,GACxD1vD,KAAKgvD,mBAAmBhF,IAAIjkE,EAAI2pE,IACzB,EAaFnB,aAAaxoE,GAClB,OAAOia,KAAKkgC,aAAan6C,IAAOia,KAAK+tD,UAAUhoE,GAU1Cm6C,aAAan6C,GAClB,MAAM4pE,EAAO3vD,KAAKgvD,mBAAmBxtE,IAAIuE,GACzC,QAAI4pE,IACF3vD,KAAKgvD,mBAAmBx3C,OAAOzxB,GAC/B4pE,EAAKxa,WACE,IC1GN,MAAMya,GAAuC,CAClD3wE,IAAK2nD,GAAWM,gBAAgBjoD,IAChCkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWyE,YAUxBojB,OAPY,CACzBC,WAAY,CAAE1nB,EAAkB,GAAfD,GAAWC,GAC5B2nB,KAAM,CAAEpiB,OAAwB,IAAfxF,GAAWC,EAASwF,OAAQ,KAC7CoiB,eAAgB,CAAEptE,EAAkB,GAAfulD,GAAWvlD,EAASwlD,EAAG,EAAGkE,KAAM,GAAKC,KAAM,IAChE0jB,SAAU,CAAErtE,GAAI,IAAKwlD,GAAI,IAAKp/C,MAAsB,IAAfm/C,GAAWvlD,EAAUqG,OAAuB,IAAfk/C,GAAWC,ICdxE,IAAK8nB,IAKX,SALWA,KAAa,UAAbA,EAAa,cAAbA,EAAa,4BAAbA,EAAa,4BAKxB,CALWA,QAAa,KCyOVC,OArNf,MAWEhgC,YAAYqb,EAAmB4kB,EAAwBC,GAAuC,KAVtF7kB,WAAK,OACL4kB,WAAK,OACLC,kBAAY,OAEZC,cAAQ,OACR1F,iBAAW,OACX2F,yBAAmB,OACnBC,sBAAgB,OAChBC,mBAAa,OAyMb9Z,gBAAkB,IAAM9H,GAAkBC,cAAc6H,kBAtM9D32C,KAAKwrC,MAAQA,EACbxrC,KAAKowD,MAAQA,EACbpwD,KAAKqwD,aAAeA,EACpBrwD,KAAKswD,SAAWtwD,KAAK0wD,iBAErB1wD,KAAKwwD,iBAAmB,IAAI93C,MAAM03C,EAAMzrE,QACxCqb,KAAKywD,cAAgB,EACrBzwD,KAAKwrC,MAAMyU,kBAAkB0Q,cAAcjV,GAAc70B,UAAW7mB,MAM9D0wD,iBACN,MAAME,EAAQ,IAAI9oB,OAAOC,YAAY8oB,SAAS7wD,KAAKwrC,QAE7C,EAAE5oD,EAAC,EAAEwlD,EAAC,MAAEp/C,EAAK,OAAEC,GAAW4mE,GAAmBI,SAEnD,OADAW,EAAME,SAASluE,EAAGwlD,EAAGp/C,EAAOC,GACrB2nE,EAAMG,qBAYPhF,QAAQiF,GACd,GAAIhxD,KAAK4qD,YAAa,CAChB5qD,KAAKuwD,qBAAqBvwD,KAAKuwD,oBAAoBpb,UAGvD,MAAM8b,EAAsBjxD,KAAKwwD,iBAAiBxwD,KAAKywD,eAGnDQ,GACFA,EAAoB7kB,YAAW,GAIjCpsC,KAAKywD,cAAgBO,EACrB,IAAIE,EAAqBlxD,KAAKwwD,iBAAiBxwD,KAAKywD,eAC/CS,EAOHA,EAAmB9kB,YAAW,IAL9B8kB,EAAqBlxD,KAAKqwD,aAAarwD,KAAKywD,eAAezF,oBAC3DkG,EAAmBC,QAAQnxD,KAAKswD,UAChCtwD,KAAKwwD,iBAAiBxwD,KAAKywD,eAAiBS,EAC5ClxD,KAAK4qD,YAAY/xD,IAAIq4D,IAMvB,MAAME,EAAYpxD,KAAKqxD,sBACjBC,EAAYtxD,KAAKywD,cACjBc,EAAe,IAAIzpB,OAAOC,YAAYsO,OAC1Cr2C,KAAKwrC,MACL4lB,EAAUE,GAAW,GACrBF,EAAUE,GAAW,GAAKzB,GAAmBE,KAAKpiB,OAClDuB,GAAYyB,iBAAiB1xD,KAE/B+gB,KAAKuwD,oBAAsB,IAAIzoB,OAAOC,YAAYwD,UAAUvrC,KAAKwrC,MAAO,EAAG,EAAG,CAAC+lB,IAC/EvxD,KAAK4qD,YAAY/xD,IAAImH,KAAKuwD,sBAOtBvF,oBACN,MAAMwG,EAAqB,IAAI1pB,OAAOC,YAAYwD,UAAUvrC,KAAKwrC,MAAO,EAAG,GAErEimB,EAAgB,IAAI3pB,OAAOC,YAAYgE,UAC3C/rC,KAAKwrC,MACL,EACA,EACArD,GAAWvlD,EACX,EAAIulD,GAAWC,EACf,GAEC8D,SAAS,IACTqM,iBAEGmZ,EAAc,IAAI5pB,OAAOC,YAAYqH,MAAMpvC,KAAKwrC,MAAO,EAAG,EAAG0D,GAAYuB,WAAWxxD,KAC1FuyE,EAAmB34D,IAAI,CAAC44D,EAAeC,IAGvC,MAAMC,EAAiB3xD,KAAKowD,MAAMztE,KAAI,CAACotE,EAAMiB,KACpC,CACLviE,KAAMshE,EACNj5D,SAAU,IAAMkJ,KAAK+rD,QAAQiF,OAG3BY,EAAyB5xD,KAAKqxD,sBACpCG,EAAmB34D,IACjB84D,EAAehvE,KAAI,CAACy3D,EAAQt1D,IAC1Bkb,KAAK6xD,cACHzX,EAAO3rD,KACPmjE,EAAuB9sE,GAAO,GAC9B8sE,EAAuB9sE,GAAO,GAAK+qE,GAAmBE,KAAKpiB,OAC3DyM,EAAOtjD,aAMb,MAAMg5D,EAAa9vD,KAAK6xD,cAAc,OAAQ,EAAGhC,GAAmBC,WAAW1nB,GAAGpyB,UAC5EhW,KAAKwrC,MAAMyU,kBAAkBuD,eAAe9H,GAAc70B,kBACtD7mB,KAAKwrC,MAAMyU,kBAAkBK,cAKvC,OAFAkR,EAAmB34D,IAAIi3D,GAEhB0B,EAMDH,sBACN,OAAOxmB,GAAkB,CACvBhB,WAAY7d,OAAO7pC,KAAK+tE,IAAevrE,OACvCmmD,SAAU,EACVC,SAAU8kB,GAAmBE,KAAKniB,SAc9BikB,cAAcpjE,EAAcu+D,EAAcC,EAAcn2D,GAC9D,OAAO2iD,GAAaz5C,KAAKwrC,MAAO,CAC9BuB,SAAUmC,GAAY0B,WAAW3xD,IACjCF,QAAS0P,EACTirD,WAAYmW,GAAmBG,eAC/BrW,gBAAiBiW,GACjB/V,KAAM/iD,IACL4/C,YAAYsW,EAAMC,GASvB,mBACEjtD,KAAK4qD,YAAc5qD,KAAKgrD,oBACxBhrD,KAAKwrC,MAAMgL,kBAAkBC,WAAWpD,GAAMxsB,UAAW7mB,KAAK4qD,aAC9D5qD,KAAK22C,kBAAkBC,UAAUzE,GAAYS,UAAU3zD,KAGvD+gB,KAAK+rD,QAAQ/rD,KAAKywD,eAElBzwD,KAAK4qD,YAAYlU,YAAYrO,GAAazlD,GAAIulD,GAAWC,GACzDpoC,KAAKswD,SAASwB,aAAapb,YAAYrO,GAAazlD,GAAIulD,GAAWC,GAEnEpoC,KAAKwrC,MAAMgK,OAAO38C,IAAI,CACpBi8C,QAAS,CAAC90C,KAAK4qD,YAAa5qD,KAAKswD,SAASwB,iBACvCpc,GACHtN,EAAGC,GAAaD,IAUpB,qBACMpoC,KAAK4qD,cAEP5qD,KAAKwwD,iBAAmB,IAAI93C,MAAM1Y,KAAKowD,MAAMzrE,QAE7Cqb,KAAK4qD,YAAYlU,YAAY12C,KAAK4qD,YAAYhoE,EAAGod,KAAK4qD,YAAYxiB,GAClEpoC,KAAK22C,kBAAkBC,UAAUzE,GAAYU,SAAS5zD,KAEtD+gB,KAAKwrC,MAAMgK,OAAO38C,IAAI,CACpBi8C,QAAS,CAAC90C,KAAK4qD,YAAa5qD,KAAKswD,SAASwB,iBACvCnc,WAGClhB,GAAMkhB,GAAexhB,UAC3B8gB,GAAej1C,KAAKwrC,MAAOxrC,KAAK4qD,YAAa,CAAEtjB,aAAc,QC5NpD,MAAMyqB,GAQZ5hC,YAAY6hC,GAAkC,KAP7CC,cAAQ,OACRC,iBAAW,OACXF,qBAAe,EAMrBhyD,KAAKgyD,gBAAkBA,EACvBhyD,KAAKiyD,SAAWD,EAAgB7vE,OAAOsqE,OAAO53D,MAC9CmL,KAAKkyD,YAAc,EAOrB,yBACE,MAAMC,EAAenyD,KAAKgyD,gBAAgBxwE,IAAIwe,KAAKiyD,UAAWjyD,KAAKkyD,aACnE,IAAKC,IAAiBA,EAAa5xE,KACjC,MAAO,CAAEA,KAAM,IAGjB,GAAI4xE,EAAaC,KAAM,CACrB,IAAIH,EAA0BE,EAAaC,KAAKC,KAQhD,SAP6BC,GAA2B9J,4BACtD2J,EAAaC,KAAK5nC,cAGlBynC,EAAWE,EAAaC,KAAKG,SAG1BN,EAEE,KAAIjyD,KAAKgyD,gBAAgBxwE,IAAIywE,GAIlC,MAAO,CAAE1xE,KAAM,IAHfyf,KAAKiyD,SAAWA,EAChBjyD,KAAKkyD,YAAc,OAHnBlyD,KAAKkyD,mBAQPlyD,KAAKkyD,cAEP,OAAOC,EAMFK,eAAeJ,GACpBpyD,KAAKiyD,SAAWG,EAChBpyD,KAAKkyD,YAAc,GCAhB,IAAKO,GAWAC,IALZ,SANYD,KAAY,YAAZA,EAAY,gBAAZA,EAAY,cAMxB,CANYA,QAAY,KAiBxB,SANYC,KAAQ,cAARA,EAAQ,gBAARA,EAAQ,cAMpB,CANYA,QAAQ,KCnEL,MAAMC,GAiBnB,wBAA+BC,GAC7B,MAAMC,EAA2C,GAcjD,OAbAD,EAAMhtC,SAASrlC,IACb,GAAIA,EAAKg0D,WAAW,OAASh0D,EAAKg0D,WAAW,QAA7C,CACE,MAAMvwD,EAAUzD,EAAKg0D,WAAW,MAAQh0D,EAAKkpD,MAAM,GAAKlpD,EAAKkpD,MAAM,GACnE,GAAkC,IAA9BopB,EAAmBluE,OAErB,YADA+U,QAAQC,MAAM,mBAGEk5D,EAAmBA,EAAmBluE,OAAS,GAAG,GAC1DuhB,KAAKliB,QAGjB6uE,EAAmB3sD,KAAK,CAAC3lB,EAAKuyE,OAAQ,QAEjCD,EAaT,mBACED,EACAG,GAEA,MAAMpwE,EAAM,IAAIimE,IAChB,IAAKmK,EAAiBH,EAAM,IAE1B,OADAjwE,EAAIqnE,IAAI,IAAK4I,GACNjwE,EAET,IAAIqwE,EAAa,GASjB,OARAJ,EAAMhtC,SAAQrlC,IACZ,GAAIwyE,EAAiBxyE,GAGnB,OAFAyyE,EAAazyE,OACboC,EAAIqnE,IAAIzpE,EAAM,IAGhBoC,EAAInB,IAAIwxE,GAAa9sD,KAAK3lB,MAErBoC,EAgBT,sBAA6BpC,EAAc0yE,EAAaC,GACtD,GAAIA,GAAS,EAAG,CACd,MAAMN,EAAQryE,EAAK8iC,MAAM4vC,GACnBE,EAAaP,EAAMnpB,MAAM,EAAGypB,GAElC,OADAC,EAAWjtD,KAAK0sD,EAAMnpB,MAAMypB,GAAO3wE,KAAK0wE,IACjCE,EAAWxwE,KAAKywE,GAAmBA,EAAON,SAEnD,OAAOH,GAAYU,YAAY9yE,EAAM0yE,GAUvC,mBAA0B1yE,EAAc0yE,GACtC,OAAO1yE,EAAK8iC,MAAM4vC,GAAKtwE,KAAKywE,GAAmBA,EAAON,SAUxD,oBAA2BrkE,GACzB,OAAOA,EACJ40B,MAAM,MACN1gC,KAAIpC,GAAQA,EAAK+yE,cACjB9rD,QAAOjnB,GAAiB,KAATA,IAYpB,qCAA4CkO,GAC1C,OAAOuR,KAAKuzD,wBAAwB9kE,EAAK40B,MAAM,MAAO,KAAM,MACzD1gC,KAAIpC,GAAQyf,KAAKwzD,wBAAwBjzE,EAAM,QAC/CoC,KAAIpC,GAAQA,EAAK+yE,cACjB9rD,QAAOjnB,GAAiB,KAATA,IAmBpB,+BACEkO,EACAglE,GAEC,IADDC,IAAoB,yDAEpB,MAAMC,EAAellE,EAAKmlE,QAAQH,GAClC,OAAyB,IAAlBE,EACHllE,EACAilE,EACAjlE,EAAKg7C,MAAM,EAAGkqB,GACdllE,EAAKg7C,MAAMkqB,EAAeF,EAAa9uE,QA8B7C,+BACEiuE,EACAiB,EACAC,GAEA,MAAMC,EAAW,GACjB,IAAIC,GAAc,EAElB,IAAK,IAAIC,EAAI,EAAGA,EAAIrB,EAAMjuE,OAAQsvE,IAAK,CACrC,MAAM1zE,EAAOqyE,EAAMqB,GACbC,EAAqC,GACrCC,EAAUn0D,KAAKo0D,iBAAiB7zE,EAAMszE,GACtCQ,EAAWr0D,KAAKo0D,iBAAiB7zE,EAAMuzE,GAC7C,IAAIQ,GAAe,EACfC,EAAU,EACVC,EAAW,EACXC,EAAST,EAAc,CAAC,GAAK,GAEjC,KAAOO,EAAUJ,EAAQxvE,QAAU6vE,EAAWH,EAAS1vE,QAAQ,CAC7D,MAAM+vE,EAAaJ,EACnBA,EAAcN,EACVK,EAASG,KAAcV,EAAkBnvE,OACzCwvE,EAAQI,KACRD,GAAeI,GACjBh7D,QAAQC,MAAO,0BAAyBs6D,EAAI,WAAWK,EAAc,KACrEA,EAAcI,IAEdD,EAAOvuD,KAAKouD,GACZN,GAAeA,GAEK,IAAlBS,EAAO9vE,SACTuvE,EAAehuD,KAAK,CAACuuD,EAAO,GAAIA,EAAO,KACvCA,EAAS,IAGS,IAAlBA,EAAO9vE,QACTuvE,EAAehuD,KAAK,CAACuuD,EAAO,GAAIl0E,EAAKoE,SAEvCovE,EAAS7tD,KAAKlG,KAAK20D,qBAAqBp0E,EAAM2zE,IAEhD,OAAOH,EAmBT,4BAAmCtlE,EAAcmmE,GAC/C,IAAIC,EAAY,GACZC,EAAU,EAMd,OALAF,EAAQhvC,SAAQ4a,IACdq0B,GAAapmE,EAAKg7C,MAAMqrB,EAASt0B,EAAI,IACrCs0B,EAAUt0B,EAAI,MAEhBq0B,GAAapmE,EAAKg7C,MAAMqrB,EAASrmE,EAAK9J,QAC/BkwE,EAUT,wBAA+BpmE,EAAci9C,GAC3C,MAAMqpB,EAAU,GAChB,IAAIjwE,EAAQ2J,EAAKmlE,QAAQloB,GACzB,MAAkB,IAAX5mD,GACLiwE,EAAQ7uD,KAAKphB,GACbA,EAAQ2J,EAAKmlE,QAAQloB,EAAW5mD,EAAQ,GAE1C,OAAOiwE,EAST,kBAAyBC,GACvB,OAAOA,EAAKC,OAAO,GAAG56D,cAAgB26D,EAAKvrB,MAAM,GAWnD,0BAAiC7kC,GAG/B,OAFcA,EAAKo3B,MAAM,oBAAsB,IAElCr5C,IAAIgwE,GAAYuC,YAAY3yE,KAAK,KAShD,mBAA0B4yE,GACxB,OAAO12C,KAAKC,MAAMy2C,GAAKnuD,WAQzB,qBAA4BuiC,GAC1B,OAAOA,IAAQ3gC,GAAU4+B,mBC3Sd,MAAM4tB,GAAyB,cAAD,KACnCC,sBAAgB,OA8EjBC,YAAc,IAAMzmB,GAAkBC,cAAcymB,iBAAiB3wD,KAnErE4wD,gBAAgB5U,QACIz6D,IAArBy6D,IAEJ5gD,KAAKq1D,kBACHhd,GAAcvJ,cAAcqQ,mBAAmB,CAAC9L,GAAMO,QAASP,GAAMU,aACvE/zC,KAAKy1D,eAAe7U,IAGd6U,eAAe7U,GACjBA,IACF5gD,KAAK01D,kBAAkB9U,GACvB5gD,KAAK21D,eAAe/U,EAAiBgV,YAIjCD,eAAeC,GACrB,GAAkB,aAAdA,EAA0B,OAC9B,MAAMC,EACU,QAAdD,EACI51D,KAAK81D,iBAAiB91D,KAAKs1D,cAAe7C,GAAa3D,OACvD9uD,KAAK81D,iBACHzd,GAAcvJ,cAAc0V,iBAAiBoR,GAAWhxD,KACxD6tD,GAAa7D,MAErBvW,GAAcvJ,cAAc2H,WAAWpD,GAAMU,WAAY8hB,GAGnDH,kBAAkB,GAA4D,IAA5D,UAAEE,EAAS,gBAAEG,EAAe,WAAE1R,GAA2B,EAEjF,GADArkD,KAAKq1D,iBAAmBO,EACN,QAAdA,GAAqC,aAAdA,EACzB,OAEF,MAAMI,EAAgB3d,GAAcvJ,cAAc8U,sBAChDgS,EACAvR,EACA0R,GAEF1d,GAAcvJ,cAAc2H,WAAWpD,GAAMO,QAASoiB,GAGhDF,iBAAiBrnE,EAAc9P,GACrC,MAAMy5D,EAAcC,GAAcvJ,cAAcwJ,iBAC1CnC,EAAY,IAAIrO,OAAOC,YAAYwD,UAAU6M,EAAa,EAAG,GAC7D6d,EAAY,IAAInuB,OAAOC,YAAYqH,MACvCgJ,EACA/P,GAAazlD,EACbylD,GAAaD,EACb8G,GAAYS,WAAW1wD,KACvBitD,SAAS,IAELgqB,EAAc7pB,GAClB+L,EACA,GACArB,GAAkBK,kBAClBE,IAUF,OAPI34D,IAAa8zE,GAAa3D,QAC5BmH,EAAU1L,eAAiB,EAC3B2L,EAAYtzE,EAAIulD,GAAWvlD,EAAIszE,EAAYtzE,GAG7CuzD,EAAUt9C,IAAI,CAACo9D,EAAWC,IAC1BA,EAAYznE,KAAOkkE,GAAYuC,WAAWzmE,GACnC0nD,GC5EI,MAAMggB,GAAiB,cAAD,KAC3BC,qBAAe,OACfzW,sBAAgB,OAChB0W,uBAAiB,OA2DjBC,qBAAuB,IAAMt2D,KAAKq2D,kBAAuC,KACzEE,oBAAsB,IAAMv2D,KAAK2/C,iBAAqC,KACtE6W,mBAAqB,IAAMx2D,KAAKo2D,gBAA2C,KAE5Ed,YAAc,IAAMzmB,GAAkBC,cAAcymB,iBAAiB3wD,KAxD5E,mBAA0B27C,GACxB,MAAMkW,EAAWpe,GAAcvJ,cAAcwV,gBAAgB/D,GAE7DvgD,KAAK2/C,iBAAmB,IAAI5H,GAAiBV,IAC7Cr3C,KAAKq2D,kBAAoB,IAAItE,GAAkB0E,EAASzyE,SACxDgc,KAAKo2D,gBAAkB,IAAIhB,GAE3B/c,GAAcvJ,cAAc2H,WAC1BpD,GAAMS,SACN9zC,KAAK2/C,iBAAiB9G,wBAGxBR,GAAcvJ,cAAc2Q,YAAYpM,GAAMS,gBACxC,IAAI57C,SAAQC,GAAW6H,KAAK02D,kBAAkBv+D,KACpD6H,KAAKu2D,sBAAsBphB,UAC3Bn1C,KAAKw2D,qBAAqBhB,gBAAgB,MAG5C,wBAAgCr9D,SACxB6H,KAAK22D,aAAax+D,GACxB6H,KAAKu2D,sBACFtd,iBACA6G,GAAGhY,OAAOqR,MAAMC,OAAOC,uBAAuBrjC,eAAkBhW,KAAK22D,aAAax+D,KAGvF,mBAA2BA,GACzBkgD,GAAcvJ,cAAc8H,UAAUzE,GAAYM,gBAAgBxzD,KAClE,MAAM,KAAEsB,EAAI,cAAEq2E,EAAa,UAAE5W,EAAS,OAAEhJ,SAChCh3C,KAAKs2D,uBAAuBO,mBAC9BC,EAAev2E,EAAKw2E,QAAQ,SAAU/2D,KAAKs1D,eASjD,GARAt1D,KAAKu2D,sBAAsBjd,WAAWwd,GACtC92D,KAAKw2D,qBAAqBhB,gBAAgBoB,GAG1Cve,GAAcvJ,cAAc4R,kBAAkBoW,EAAcF,GAG5Dve,GAAcvJ,cAAcsU,aAAapjD,KAAKu2D,sBAAsBtd,kBAAkB,GAClFjC,EAAQ,CACV,MAAMyE,QAAiBR,GACrB5C,GAAcvJ,cAAcwJ,iBAC5BtB,EAAOggB,YACPhgB,EAAOkE,QAAQv4D,KAAIs0E,GAAUA,EAAO,MAEtCj3D,KAAKs2D,uBAAuB9D,eAAexb,EAAOkE,QAAQO,GAAU,UAEhEpD,GAAcvJ,cAAcooB,8BAA8BlX,GAChE3H,GAAcvJ,cAAcsU,aAAapjD,KAAKu2D,sBAAsBtd,kBAAkB,GAEjF14D,GAAM4X,KChEA,MAAMg/D,GAA4B,cAAD,KACtCC,qBAAe,OAoEhB9B,YAAc,IAAMzmB,GAAkBC,cAAcymB,iBAAiB3wD,KA3DrEk8C,UAAUH,EAAiBC,GAChC,IAAKA,EAAkB,OAElB5gD,KAAKo3D,kBACRp3D,KAAKo3D,gBAAkB,IAAI1+C,OAE7B,MAAM2+C,EAAc,CAClBC,QAASt3D,KAAKu3D,eAAe3W,GAC7BrgE,KAAMogE,GAER3gD,KAAKo3D,gBAAgBlxD,KAAKmxD,GAYpBE,eAAeX,GACrB,MAAMhB,EAAyB,OAAbgB,QAAa,IAAbA,OAAa,EAAbA,EAAehB,UAIjC,OAAQA,EAEU,QAAdA,EACA51D,KAAKs1D,cACS,aAAdM,EACA,WACAvd,GAAcvJ,cAAc0V,iBAAiBoR,GAAWhxD,KALxD,GAYC4yD,uBACLx3D,KAAKo3D,gBAAkB,IAAI1+C,MAWtBqoC,qBACL,OAAK/gD,KAAKo3D,gBAGHp3D,KAAKo3D,gBAAgBz0E,KAAI80E,GAAgB,GAAEA,EAAYH,aAAaG,EAAYl3E,SAF9E,IAAIm4B,OCxEjB,MAMMg/C,GAAOrvB,GAAazlD,EAAI+0E,IACxBC,GAAOvvB,GAAaD,EACpByvB,GAAYH,GANF,GAOVI,GAAYF,GAPF,GAcT,SAASG,GAAiBvsB,GAC/B,IAAIwsB,EACAC,EACAC,EAEJ1sB,EAAM2sB,KAAKrY,GAAG,SAAS,KACrBoY,EAAkB1sB,EAAM3yC,IAAIoxD,SAAS7U,GAAY5J,IACjDwsB,EAAcxsB,EAAM3yC,IAAIu/D,WACxBH,EAAczsB,EAAM3yC,IAAIu/D,WACxBH,EAAYI,UAAU,QAAU,IAChCJ,EAAYnH,SAAS4G,GAAME,GA1Bd,IACC,OA4BhBpsB,EAAM2sB,KAAKrY,GAAG,YAAajrD,IACzBmjE,EAAYlK,QACZkK,EAAYK,UAAU,SAAU,GAChCL,EAAYlH,SAAS+G,GAAWC,GA5BjBH,IA4ByC9iE,EA3BxCyjE,OA8BlB9sB,EAAM2sB,KAAKrY,GAAG,YAAY,WACxBkY,EAAY7iB,UACZ8iB,EAAY9iB,UACZ+iB,EAAgB/iB,aCRpB,MAAMojB,WAA0BzwB,OAAOC,YAAYwD,UA+BjDpb,YACEqb,EAAoB,EAapB5oD,EACAwlD,GAEC,IAfD,QACE8S,EAAO,iBACPsd,EAAmB,EAAC,UACpB1uB,EAAY3B,GAAWvlD,EAAC,kBACxB61E,EAAoB,CAClBC,UAAW,GACXC,WAAY,GACZC,iBAAkB,GACnB,iBACDC,EAAmB,CAAEj2E,EAAG,EAAGwlD,EAAG,EAAGkE,KAAM,GAAKC,KAAM,IAAK,gBACvDusB,EAAkBlwD,GAAUg/B,kBACV,EAGpBmxB,EAA6B,uDAAG5mB,GAAYK,iBAAiBvzD,IAE7DmxC,MAAMob,EAAO5oD,EAAGwlD,GAAG,KAhDb2wB,yBAAmB,OAEnBC,kBAAY,OACZC,qBAAe,OACf/d,aAAO,OACPK,qBAAe,OAEfkd,uBAAiB,OACjBI,sBAAgB,OAChBC,qBAAe,EAwCrB94D,KAAKi5D,gBAAkBT,EACvBx4D,KAAKk7C,QAAUA,EACfl7C,KAAK64D,iBAAmBA,EACxB74D,KAAK84D,gBAAkBA,EACvB94D,KAAKy4D,kBAAoBA,EACzBz4D,KAAK+4D,oBAAsBA,EAE3B,MAAMG,EAAUl5D,KAAKm5D,gBAAgBje,GACrCl7C,KAAKu7C,gBAAkB5R,GAAmB,CACxCE,WAAYqvB,EAAQv0E,OACpBmlD,UAAWA,IAGb9pC,KAAKo5D,mBAAmBF,EAASl5D,KAAKu7C,gBAAiBv7C,KAAKy4D,mBAC5Dz4D,KAAKq5D,SAASb,GAGRW,gBAAgBje,GACtB,OAAOA,EAAQv4D,KAAI,CAACs0E,EAAQnyE,KACnB,CACL2J,KAAMwoE,EACNngE,SAAU,IAAMkJ,KAAKq5D,SAASv0E,OAK5Bs0E,mBACNF,EACAI,EACAb,GAEAz4D,KAAKnH,IACHqgE,EAAQv2E,KAAI,CAACy3D,EAAQt1D,IACnBkb,KAAKu5D,kBACHD,EAAUx0E,GAAO,GACjBw0E,EAAUx0E,GAAO,GACjBs1D,EAAOtjD,SACP2hE,MAMAc,kBACNvM,EACAC,EACAn2D,EACA2hE,GAEA,OAAO,IAAI3wB,OAAOC,YAAYyxB,QAC5Bx5D,KAAKwrC,MACLwhB,EACAC,EACAwL,EAAkBC,UAClBD,EAAkBC,UAClBpvB,GAASd,WAERixB,eAAehB,EAAkBG,iBAAkBtvB,GAASR,UAC5DyP,eAAe,CAAEC,eAAe,IAChC6B,YAAYvS,OAAOqR,MAAMC,OAAOC,uBAAuB,KACtDxK,GAAkBC,cAAc6H,kBAAkBC,UAAU52C,KAAK+4D,qBACjEjiE,OAIEuiE,SAAStzE,GACfia,KAAKi5D,gBAAkBlzE,EAGnBia,KAAKg5D,cAAch5D,KAAKg5D,aAAa7jB,UAEzCn1C,KAAKg5D,aAAe,IAAIlxB,OAAOC,YAAYwD,UACzCvrC,KAAKwrC,MACLxrC,KAAKu7C,gBAAgBx1D,GAAI,GACzBia,KAAKu7C,gBAAgBx1D,GAAI,IAE3B,MAAM2zE,EAAartB,GACjBrsC,KAAKwrC,MACLxrC,KAAKk7C,QAAQn1D,GACbia,KAAK64D,iBACL74D,KAAK84D,iBAEDa,EAAgB,IAAI7xB,OAAOC,YAAYyxB,QAC3Cx5D,KAAKwrC,MACL,EACA,EACAxrC,KAAKy4D,kBAAkBE,WACvB34D,KAAKy4D,kBAAkBE,WACvBrvB,GAASR,UAEX9oC,KAAKg5D,aAAangE,IAAI,CAAC6gE,EAAYC,IAEnC35D,KAAKnH,IAAImH,KAAKg5D,cAGTY,cACL,OAAO55D,KAAKi5D,gBAGPY,aACL,OAAO75D,KAAKk7C,QAGP4e,kBACL,OAAI95D,KAAKi5D,gBAAkBj5D,KAAKk7C,QAAQv2D,OAC/Bqb,KAAKk7C,QAAQl7C,KAAKi5D,iBAEpBrwD,GAAU4+B,mBAIN+wB,UC9LR,MAAMwB,GAAmC,CAC9C96E,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAG1B+xB,GAAyC,CACpD/6E,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAG1BgyB,GAA0C,CACrDh7E,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAUxBiyB,OAPW,CACxBC,oBAAqB,CAAEv3E,EAAkB,IAAfulD,GAAWvlD,EAAUwlD,EAAG,EAAGkE,KAAM,GAAKC,KAAM,KACtE6tB,IAAK,CAAEx3E,EAAG,IAAKy3E,OAAuB,GAAflyB,GAAWvlD,EAASgrD,OAAuB,GAAfzF,GAAWC,GAC9DkyB,uBAAwB,CAAE13E,EAAG,EAAGwlD,GAAI,GAAIkE,KAAM,GAAKC,KAAM,KACzDguB,iBAAkB,CAAC,IAAK,OAAQ,MAAO,MAAO,MAAO,QCtBhD,MAAMC,GAAwC,CACnDv7E,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAG1BwyB,GAA2C,CACtDx7E,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAG1ByyB,GAAgC,CAC3Cz7E,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAaxB0yB,OAVS,CACtBvgB,OAAQ,CAAEhS,EAAkB,IAAfD,GAAWC,GACxBwyB,oBAAqB,CAAEh4E,EAAG,EAAGwlD,EAAG,EAAGkE,KAAM,IAAMC,KAAM,KACrDsuB,SAAU,CAAE5sB,QAA2B,IAAjB5F,GAAaD,EAASwF,OAAuB,GAAfzF,GAAWC,GAC/D0yB,mBAAoB,CAAEl4E,EAAkB,IAAfulD,GAAWvlD,EAAUwlD,EAAqB,IAAjBC,GAAaD,EAASkE,KAAM,EAAKC,KAAM,IACzFwuB,aAAc,CAAEV,OAAuB,GAAflyB,GAAWvlD,GACnCo4E,sBAAuB,CAAEp4E,EAAG,EAAGwlD,GAAI,GAAIkE,KAAM,GAAKC,KAAM,KACxD0uB,OAAQ,CAAEr4E,EAAkB,IAAfulD,GAAWvlD,IC+NXs4E,OAvOf,MAUS/qC,YAAYqb,GAAoB,KAT/B2vB,2BAAqB,OACrBC,2BAAqB,OACrB5vB,WAAK,OAgOLmL,gBAAkB,IAAM9H,GAAkBC,cAAc6H,kBAAkB,KAC1E0kB,uBAAyB,IAAMxsB,GAAkBC,cAAcuS,iBAzNrErhD,KAAKwrC,MAAQA,EACbxrC,KAAKwrC,MAAMyU,kBAAkB0Q,cAAcjV,GAAcE,WAAY57C,MAO/DgrD,oBACN,MAAMsQ,EAAsB,IAAIxzB,OAAOC,YAAYwD,UAAUvrC,KAAKwrC,MAAO,EAAG,GAEtE+vB,EAAe,IAAIzzB,OAAOC,YAAYqH,MAC1CpvC,KAAKwrC,MACLnD,GAAazlD,EACbylD,GAAaD,EACb8G,GAAYsB,qBAAqBvxD,KAEhC85D,eAAe5Q,GAAWvlD,EAAGulD,GAAWC,GACxCmQ,eAAe,CAAEE,cAAc,IAClC6iB,EAAoBziE,IAAI0iE,GAGxB,MAAMV,EAAW76D,KAAKw7D,cAChBC,EAAc9xB,GAAmB,CACrCjhD,UAAWghD,GAAUgyB,OACrB7xB,WAAYgxB,EAASl2E,OACrBolD,UAAW4wB,GAAgBE,SAASjtB,SAEtC0tB,EAAoBziE,IAClBgiE,EAASl4E,KAAI,CAACg5E,EAAS72E,IACrBunD,GACErsC,KAAKwrC,MACLmwB,EACA,IACKhB,GAAgBG,mBACnB1yB,EAAGqzB,EAAY32E,GAAO,GAAK61E,GAAgBG,mBAAmB1yB,GAEhEsyB,OAMN,MAAM,UAAEkB,EAAS,UAAEC,GAAc77D,KAAKq7D,yBAAyBG,cACzDM,EAAY5B,GAAkBK,iBAAiBwB,WACnDlnE,GAASo+B,WAAWp+B,KAAWgnE,IAE3BG,EAAY9B,GAAkBK,iBAAiBwB,WACnDlnE,GAASo+B,WAAWp+B,KAAW+mE,IAIjC57D,KAAKo7D,sBAAwBp7D,KAAKi8D,2BAA2BH,EAAWL,EAAY,GAAG,IAEvFz7D,KAAKm7D,sBAAwBn7D,KAAKi8D,2BAA2BD,EAAWP,EAAY,GAAG,IACvFH,EAAoBziE,IAAI,CAACmH,KAAKo7D,sBAAuBp7D,KAAKm7D,wBAG1D,MAAMjC,EAAUl5D,KAAKk8D,gBACf3gB,EAAkB5R,GAAmB,CACzCE,WAAYqvB,EAAQv0E,SActB,OAXA22E,EAAoBziE,IAClBqgE,EAAQv2E,KAAI,CAACy3D,EAAQt1D,IACnBkb,KAAKm8D,sBACH/hB,EAAO3rD,KACP8sD,EAAgBz2D,GAAO,GACvBy2D,EAAgBz2D,GAAO,GAAK61E,GAAgBvgB,OAAOhS,EACnDgS,EAAOtjD,aAKNwkE,EASDE,cACN,MAAO,CAAC,MAAO,OASTS,2BAA2BzD,EAA0BvL,GAC3D,OAAO,IAAIsL,GACTv4D,KAAKwrC,MACL,CACE0P,QAASgf,GAAkBK,iBAC3B/B,iBAAkBA,EAClB1uB,UAAW6wB,GAAgBI,aAAaV,OACxC5B,kBAAmB,CACjBC,UAAW,GACXC,WAAY,GACZC,iBAAkB,GAEpBC,iBAAkB8B,GAAgBK,sBAClClC,gBAAiB2B,IAEnBE,GAAgBM,OAAOr4E,GACtBylD,GAAaD,EAAI6kB,EAAO0N,GAAgBE,SAAS5sB,SAS9CiuB,gBACN,MAAO,CACL,CACEztE,KAAM,YACNqI,SAAU,KACRkJ,KAAKo8D,UACDvtB,GAAkBC,cAAcutB,WAAWC,GAASC,WACtDv8D,KAAKwrC,MAAMA,MAAM7gC,MAAM,sBAEvB3K,KAAKwrC,MAAMA,MAAM7gC,MAAM,cAI7B,CACElc,KAAM,WACNqI,SAAUkf,UACJhW,KAAKwrC,MAAMyU,kBAAkBuD,eAAe9H,GAAcE,mBACtD57C,KAAKwrC,MAAMyU,kBAAkBK,aAIzC,CACE7xD,KAAM,iBACNqI,SAAU,IAAMkJ,KAAKw8D,kBAcnBL,sBAAsB1tE,EAAcu+D,EAAcC,EAAcn2D,GACtE,OAAO2iD,GAAaz5C,KAAKwrC,MAAO,CAC9BuB,SAAUmC,GAAYK,aAAatwD,IACnCF,QAAS0P,EACTirD,WAAYihB,GAAgBC,oBAC5BjhB,gBAAiB6gB,GACjB3gB,KAAM/iD,IACL4/C,YAAYsW,EAAMC,GAOvB,sBACE,MAAMwP,EAASz8D,KAAKo7D,sBAChBnoC,WAAWjzB,KAAKo7D,sBAAsBtB,mBACtC,EAME4C,EAAc,CAAEd,UALP57D,KAAKm7D,sBAChBloC,WAAWjzB,KAAKm7D,sBAAsBrB,mBACtC,EAGqC+B,UAAWY,SAC9Cz8D,KAAKq7D,yBAAyB7Z,aAAakb,GAGjD7tB,GAAkBC,cAAc6H,kBAAkBsL,kBAAkBya,GAM9DN,UACNp8D,KAAKwrC,MAAMwX,kBAAkB2Z,iBAC7B38D,KAAKwrC,MAAMgL,kBAAkBomB,iBASxBC,aACL,MAAMvB,EAAsBt7D,KAAKgrD,oBACjChrD,KAAK22C,kBAAkBC,UAAUzE,GAAYS,UAAU3zD,KACvD+gB,KAAKwrC,MAAMgL,kBAAkBC,WAAWpD,GAAMY,OAAQqnB,GASjDwB,eACL98D,KAAK22C,kBAAkBC,UAAUzE,GAAYU,SAAS5zD,KACtD+gB,KAAKwrC,MAAMgL,kBAAkB2I,mBAAmB,CAAC9L,GAAMY,WChK5C8oB,OA7Ef,MAKE5sC,YAAYqb,GAAsB,KAJ1BA,WAAK,OACLwxB,uBAAiB,OACjBC,oBAAc,EAGpBj9D,KAAKg9D,kBAAoB,GACzBh9D,KAAKi9D,eAAiB,GACtBj9D,KAAKwrC,MAAQA,EAQRsX,iBAAiBC,GACtB/iD,KAAKwrC,MAAM3+C,MAAMi2D,iBAAiBC,GAQ7BI,iBAAiBD,GACtBljD,KAAKwrC,MAAM3+C,MAAMqwE,MAAMC,QAAUja,EAQ5BD,oBAAoBC,GACzBljD,KAAKwrC,MAAM3+C,MAAMuwE,SAASD,QAAUja,EAW/Bma,yBACLp+E,EACAwJ,EACAqO,GAEA,MACMwmE,EADSt9D,KAAKwrC,MAAM3+C,MAAMuwE,SAASG,OAAOt+E,GAChBo7D,YAAY5xD,EAAOqO,GACnDkJ,KAAKg9D,kBAAkB92D,KAAKo3D,GAUvBE,sBAAsB/0E,EAAwBqO,GACnD,MAAM2mE,EAAgBz9D,KAAKwrC,MAAM3+C,MAAMwtD,YAAY5xD,EAAOqO,GAC1DkJ,KAAKi9D,eAAeS,OAAOD,GAMtBd,iBACL38D,KAAKg9D,kBAAkBp3C,SAAQ03C,GAAoBA,EAAiBK,uBACpE39D,KAAKi9D,eAAer3C,SAAQ63C,GAAiBA,EAAcE,yBCwDhDC,OA9Hf,MAGEztC,YAAYqb,GAAsB,KAF1BqyB,YAAM,EAGZ79D,KAAK69D,OAAS,IAAIjV,IAChBtV,GAAqB3wD,KAAI08D,GAAS,CAACA,EAAO,IAAIvX,OAAOC,YAAYwD,UAAUC,EAAO,EAAG,OAEvFxrC,KAAK69D,OAAOj4C,SAAQy5B,GAAS7T,EAAM3yC,IAAIoxD,SAAS5K,KAQ3Cye,SAASC,GACd,OAAO/9D,KAAK69D,OAAOr8E,IAAIu8E,GAQlBve,UAAUue,GACf,MAAMC,EAAch+D,KAAK69D,OAAOr8E,IAAIu8E,GACpCC,GAAeA,EAAY5xB,YAAW,IAAU4xB,EAAY9xB,SAAS,GAQhEqT,UAAUwe,GACf,MAAME,EAAcj+D,KAAK69D,OAAOr8E,IAAIu8E,GACpCE,GAAeA,EAAY7xB,YAAW,IAAS6xB,EAAY/xB,SAAS,GAStE,kBAAyB6xB,GAA0D,IAAxCz2B,EAAY,uDAAG1+B,GAAU0+B,aAClE,MAAM8Q,EAAcC,GAAcvJ,cAAcwJ,iBAC1C4lB,EAAgBl+D,KAAK69D,OAAOr8E,IAAIu8E,GAEtCG,EAAc9xB,YAAW,GACzB8xB,EAAchyB,SAAS,GACvBkM,EAAY5C,OAAO38C,IAAIm8C,GAAO,CAACkpB,GAAgB52B,UACzC7S,GAAM6S,GASd,mBAA0By2B,GAA0D,IAAxCz2B,EAAY,uDAAG1+B,GAAU0+B,aACnE,MAAM8Q,EAAcC,GAAcvJ,cAAcwJ,iBAC1C6lB,EAAiBn+D,KAAK69D,OAAOr8E,IAAIu8E,GAEvCI,EAAe/xB,YAAW,GAC1B+xB,EAAejyB,SAAS,GACxBkM,EAAY5C,OAAO38C,IAAIg8C,GAAQ,CAACspB,GAAiB72B,UAC3C7S,GAAM6S,GASPmP,WAAWsnB,EAAkBzoB,GAClC,MAAM8oB,EAAiBp+D,KAAK69D,OAAOr8E,IAAIu8E,GAClCK,GAGLA,EAAevlE,IAAIy8C,GAWd6J,mBAAmBC,GACxBA,EAAWx5B,SAAQm4C,GAAa/9D,KAAKq+D,mBAAmBN,KASnDnB,iBACL58D,KAAK69D,OAAOj4C,SAAQ,CAACD,EAAGo4C,IAAc/9D,KAAKq+D,mBAAmBN,KAWzDM,mBAAmBN,GACxB,MAAMK,EAAiBp+D,KAAK69D,OAAOr8E,IAAIu8E,GACvC,GAAKK,EAGL,KAAOA,EAAe1wB,KAAK/oD,QACzBy5E,EAAe1wB,KAAK,GAAGyH,YChItB,MAAMmpB,GAAgC,CAC3Cr/E,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWyE,YAGjC8xB,GAA4B,KAAfp2B,GAAWvlD,EAkBf47E,OAfM,CACnBC,cAAe,CAAE77E,GAAmB,IAAhBulD,GAAWvlD,EAAWwlD,GAAmB,KAAhBD,GAAWC,EAAYkE,KAAM,EAAKC,KAAM,GACrFmyB,aAA6B,IAAfv2B,GAAWvlD,EACzB+7E,UAA0B,MAAfx2B,GAAWC,EACtBw2B,eAAgB,CACdh8E,EAAG27E,GACHn2B,EAAkB,KAAfD,GAAWC,EACdp/C,MATmB,EAUnBC,OAAuB,IAAfk/C,GAAWC,EACnBn8C,MAAO,SAET4yE,eAAgB,CAAEj8E,EAAG27E,GAAYv1E,MAbZ,EAamCiD,MAAO,SAC/D6yE,YAAa,IC4FAC,OA1Gf,MAQS5uC,YAAYqb,GAAoB,KAP/BA,WAAK,EAQXxrC,KAAKwrC,MAAQA,EAORwf,oBACL,MAAMgU,EAAe,IAAIl3B,OAAOC,YAAYwD,UAAUvrC,KAAKwrC,MAAO,EAAG,GAE/DyzB,EAAU5mB,GAAcvJ,cAAciS,qBAC5C,GAAuB,IAAnBke,EAAQt6E,OAEV,OAAOq6E,EAIT,MAAME,EAAa7yB,GACjBrsC,KAAKwrC,MACLyzB,EAAQ18E,KAAK,QACbi8E,GAAaC,cACbH,IACAa,YAAYX,GAAaE,cAErBU,EACJZ,GAAaC,cAAcr2B,EAAI3pB,KAAKpgB,IAAI6gE,EAAWj2E,OAASu1E,GAAaG,UAAW,GACtFO,EAAW92B,EAAIg3B,EACfJ,EAAanmE,IAAIqmE,GAGjB,MAAMN,EAAiB,IAAI92B,OAAOC,YAAYgE,UAC5C/rC,KAAKwrC,MACLgzB,GAAaI,eAAeh8E,EAC5B47E,GAAaI,eAAex2B,EAC5Bo2B,GAAaI,eAAe51E,MAC5Bw1E,GAAaI,eAAe31E,OAC5Bu1E,GAAaI,eAAe3yE,OAGxBozE,EAAuB5gD,KAAKpgB,IAC/BmgE,GAAaG,UAAYO,EAAWj2E,OAAUu1E,GAAaI,eAAe31E,OACvC,EAApCu1E,GAAaK,eAAe71E,OAExBs2E,EACJd,GAAaI,eAAex2B,EAC5Bo2B,GAAaI,eAAe31E,OAAS,EACrCo2E,EAAuB,EAInBE,GAFaf,GAAaI,eAAe31E,OAASo2E,IAEbb,GAAaC,cAAcr2B,EAAIg3B,GAEpEP,EAAiB,IAAI/2B,OAAOC,YAAYgE,UAC5C/rC,KAAKwrC,MACLgzB,GAAaK,eAAej8E,EAC5B08E,EACAd,GAAaK,eAAe71E,MAC5Bq2E,EACAb,GAAaK,eAAe5yE,OAG9B+yE,EAAanmE,IAAI+lE,GACjBI,EAAanmE,IAAIgmE,GAEbK,EAAWj2E,QAAUu1E,GAAaG,YAEpCC,EAAexyB,YAAW,GAC1ByyB,EAAezyB,YAAW,IAI5B,MAAM,EAAExpD,EAAC,EAAEwlD,EAAC,MAAEp/C,EAAK,OAAEC,GAAW4mE,GAAmBI,SAC7CuP,EAAa,IAAI13B,OAAOC,YAAY03B,KACxCz/D,KAAKwrC,MACL5oD,EAAIoG,EAAQ,EACZo/C,EAAIn/C,EAAS,EACbD,EACAC,GAgBF,OAdAu2E,EAAWjnB,iBACXinB,EAAW1f,GACT,SACA,CAACpF,EAA+BglB,EAAgBC,EAAgBC,KAC9DV,EAAW92B,EAAIgM,GACb8qB,EAAW92B,EAAIu3B,EAASnB,GAAaM,YACrCM,EACAZ,GAAaC,cAAcr2B,GAE7By2B,EAAez2B,EAAIk3B,GAAsBJ,EAAW92B,EAAIg3B,GAAYG,KAGxEP,EAAanmE,IAAI2mE,GAEVR,ICtGI,MAAMa,GAkBnB1vC,YACEqb,EACA5oD,EACAwlD,EACA2E,EACA/jD,EACAC,GACC,KAxBKuiD,WAAK,OACL2K,eAAS,OACT2pB,eAAS,OACT1R,eAAS,OACT2R,iBAAW,OACXC,kBAAY,EAoBlBhgE,KAAKwrC,MAAQA,EACbxrC,KAAKm2C,UAAY,IAAIrO,OAAOC,YAAYwD,UAAUC,EAAO5oD,EAAGwlD,GAE5DpoC,KAAK8/D,UAAY,IAAIh4B,OAAOC,YAAYqH,MAAM5D,EAAO,EAAG,EAAGuB,GACxDb,SAAS,GACT+zB,aAAan4B,OAAOo4B,WAAWC,KAClCngE,KAAKouD,UAAY,IAAItmB,OAAOC,YAAYqH,MAAM5D,EAAO,EAAG,EAAGuB,GACxDb,SAAS,KACTqM,eAAe,CAAEE,cAAc,IAElC,MAAMqQ,EAAQzQ,GAAcvJ,cAAcwN,aAAa8jB,eAAe5+E,IAAIurD,GACpEygB,EAAmBnV,GAAcvJ,cAAcwJ,iBAAiBoK,sBACtE,GAAIoG,EAAO,CACT,MAAMuX,EAAa7S,EAAiBzE,YAAYD,EAAO/b,GACvD,OAAa,OAAL+b,QAAK,IAALA,OAAK,EAALA,EAAO18D,MACb,KAAK4iD,GAAUqH,OACbr2C,KAAKouD,UAAUliB,SAAS,GACxBshB,EAAiBpL,eAAe0G,GAChC,MACF,KAAK9Z,GAAUI,MACTpmD,IACFqhE,GAAOgW,EAAYr3E,EAAOC,GAC1BohE,GAAOrqD,KAAK8/D,UAAW92E,EAAOC,GAC9BohE,GAAOrqD,KAAKouD,UAAWplE,EAAOC,IAMpC+W,KAAKm2C,UAAUt9C,IAAI,CAACwnE,EAAYrgE,KAAK8/D,UAAW9/D,KAAKouD,aAIlDkS,YACLtgE,KAAK+/D,aAAe//D,KAAK+/D,cACzB//D,KAAK+/D,YAAc1qB,GAAMr1C,KAAKwrC,MAAOxrC,KAAK8/D,WAC1C9/D,KAAK8/D,UAAU5zB,SAAS,GAGnBq0B,YACLvgE,KAAK+/D,aAAe//D,KAAK+/D,cACzB//D,KAAK8/D,UAAU5zB,SAAS,GAGnBs0B,aACLxgE,KAAKggE,aAAe3qB,GAAMr1C,KAAKwrC,MAAOxrC,KAAKygE,gBAGtCznB,aACLh5C,KAAKygE,eAAev0B,SAAS,GAC7BlsC,KAAKggE,cAAgBhgE,KAAKggE,eAGrBS,eACL,OAAOzgE,KAAKm2C,UAGPuqB,eACL,OAAO1gE,KAAKouD,WCgEDuS,OA5If,MAGExwC,cAAe,KAFPo5B,aAAO,EAGbvpD,KAAKupD,QAAU,IAAIX,IACnBvQ,GAAcvJ,cAAckO,kBAAkBoI,GAAamE,QAASvpD,MAS/D+9C,4BAA4B3B,GACjC/D,GAAcvJ,cAAcqQ,mBAAmB,CAAC9L,GAAMI,UACtD,MAAMmtB,EAAiBvoB,GAAcvJ,cAAcqO,uBACjDiI,GAAamE,QACbnN,GAIFp8C,KAAKupD,QAAQuE,QAGb8S,EAAej+E,KAAIoD,GAAMia,KAAK+tD,UAAUhoE,KAQnCw3D,eAAeC,EAAkBC,GACtC,MAAM9I,EAAS30C,KAAKupD,QAAQ/nE,IAAIg8D,GAC3B7I,IAGD8I,EACD9I,EAAO8U,OAAwB6W,YAE/B3rB,EAAO8U,OAAwB8W,aAS7B5iB,gBAAgBH,EAAkBC,GACvC,MAAM9I,EAAS30C,KAAKupD,QAAQ/nE,IAAIg8D,GAC3B7I,IAGD8I,EACD9I,EAAO8U,OAAwB+W,aAE/B7rB,EAAO8U,OAAwBzQ,cAY5B6nB,aAAaC,GACnB,MAAM1oB,EAAcC,GAAcvJ,cAAcwJ,kBAC1C,SAAEvL,EAAQ,EAAEnqD,EAAC,EAAEwlD,EAAC,MAAEp/C,EAAK,OAAEC,EAAM,UAAE+2D,EAAS,cAAEqI,GAAkByY,EAC9DnsB,EAAS,IAAIkrB,GAAaznB,EAAax1D,EAAGwlD,EAAG2E,EAAU/jD,EAAOC,GAEpE,MAAO,CACLwgE,OAAQ9U,EACRyZ,UAAWzZ,EAAO+rB,eAClB1gB,YACAqI,iBAWG0F,UAAUhoE,GACf,MAAMg7E,EAAa1oB,GAAcvJ,cAAc8V,cAAc7+D,GACvD4uD,EAAS30C,KAAK6gE,aAAaE,GAMjC,OALA1oB,GAAcvJ,cAAc2H,WAC1BpD,GAAMI,QACLkB,EAAO8U,OAAwBgX,gBAElCzgE,KAAKupD,QAAQS,IAAIjkE,EAAI4uD,IACd,EAYF4Z,aAAaxoE,GAClB,OAAOia,KAAKkgC,aAAan6C,IAAOia,KAAK+tD,UAAUhoE,GAU1Cm6C,aAAan6C,GAClB,MAAM4uD,EAAS30C,KAAKupD,QAAQ/nE,IAAIuE,GAChC,QAAI4uD,IACF30C,KAAKupD,QAAQ/xC,OAAOzxB,GACnB4uD,EAAO8U,OAAwBgX,eAAetrB,WACxC,GASJ8I,kBACL,OAAOvlC,MAAM81C,KAAKxuD,KAAKupD,QAAQt9B,YC5IpB,MAAM+0C,GAWnB7wC,YAAY8wC,EAAuCC,GAAiC,KAV7ED,cAAQ,OACPE,gBAAU,OACVD,kBAAY,OACZE,4BAAsB,OACtBC,iCAA2B,OAI3BC,wBAAkB,EAGxBthE,KAAKmhE,WAAa,CAACzlB,GAAc6lB,MACjCvhE,KAAKihE,SAAWA,EAChBjhE,KAAKohE,uBAAyB,KAAM,EACpCphE,KAAKqhE,4BAA8BrrD,SAAYpN,GAAU2+B,eACzDvnC,KAAKshE,mBAAqB14D,GAAU2+B,aACpCvnC,KAAKkhE,aAAeA,EASfvQ,cAAcrN,EAA8Bke,GACjDxhE,KAAKihE,SAASjX,IAAI1G,EAAeke,GAY5BC,0BACLvoE,GAEA8G,KAAKohE,uBAAyBloE,EAazBwoE,qBACLxoE,GAEA8G,KAAKqhE,4BAA8BnoE,EAS9ByoE,YAAYzoE,GACjB8G,KAAKshE,mBAAqBpoE,EAO5B,iBACE,MAAM0oE,EAAY5hE,KAAKmhE,WAAWU,YAC5B7hE,KAAK8hE,uBAAuBF,EAAW5hE,KAAK+hE,mBAUpD,gBAAuBC,GACrB,MAAMJ,EAAY5hE,KAAK+hE,kBACnBC,IAAaJ,IACjB5hE,KAAKmhE,WAAWj7D,KAAK87D,SACfhiE,KAAK8hE,uBAAuBF,EAAWI,IAS/C,gBAAuBA,GACrB,MAAMJ,EAAY5hE,KAAK+hE,kBACnBC,IAAaJ,IACjB5hE,KAAKmhE,WAAWU,MAChB7hE,KAAKmhE,WAAWj7D,KAAK87D,SACfhiE,KAAK8hE,uBAAuBF,EAAWI,IAgB/C,6BAAqCJ,EAA0BI,GAM7D,GAJAhiE,KAAKkhE,aAAaje,qBAAoB,GACtCjjD,KAAKkhE,aAAa/d,kBAAiB,SAC7BnjD,KAAKihE,SAASz/E,IAAIogF,GAAY9E,eAEhC98D,KAAKohE,uBAAuBQ,EAAWI,GAKzC,OAHAhiE,KAAKkhE,aAAa/d,kBAAiB,GACnCnjD,KAAKkhE,aAAaje,qBAAoB,cAChCjjD,KAAKqhE,4BAA4BO,EAAWI,GAIpDhiE,KAAKshE,mBAAmBM,EAAWI,SAG7BhiE,KAAKihE,SAASz/E,IAAIwgF,GAAWnF,aACnC78D,KAAKkhE,aAAa/d,kBAAiB,GACnCnjD,KAAKkhE,aAAaje,qBAAoB,GASjCO,eAAeye,GACpB,OAAOjiE,KAAK+hE,oBAAsBE,EAQ7BC,yBACL,OAAOl2C,OAAOC,OAAO0vB,IAAuBt1C,SAASrG,KAAK+hE,mBASrDA,kBAIL,OAHK/hE,KAAKmhE,WAAWx8E,SACnBqb,KAAKmhE,WAAa,CAACzlB,GAAc6lB,OAE5BvhE,KAAKmhE,WAAWnhE,KAAKmhE,WAAWx8E,OAAS,IC3KrCw9E,OAZQ,CACrBrZ,MAAO,CAAExb,QAAS,GAAIW,QAAS,IAC/BC,KAAM,CACJtrD,EAAG,CAAEgsE,KALY,IAKQC,OAAQxmB,GAAazlD,EAAGksE,MAAO3mB,GAAWvlD,EALlD,KAMjBwlD,EAAG,CAAEg6B,MAAO,IAAKC,OAAQ,IAAKC,MAAO,KACrC9S,MAAO,CAAE4S,MAAO,GAAKC,OAAQ,EAAGC,MAAO,KACvCt5E,MAAO,IACPC,OAAQ,KAEVs5E,cAAe,KCoHFC,OAlHf,MAGEryC,cAAe,KAFPsyC,eAAS,EAGfziE,KAAKyiE,UAAY,IAAI7Z,IAcvB,mBACEvL,EACA1+D,GAGC,IAFDw1C,EAAQ,uDAAGvrB,GAAU8+B,cACrBviD,EAAc,uDAAGutE,GAAS2P,OAG1BriE,KAAKohD,aAAaziE,GAElB,MAAMy5D,EAAcC,GAAcvJ,cAAcwJ,iBAC1CnC,EAAY,IAAIrO,OAAOC,YAAYwD,UAAU6M,EAAa,EAAG,GAG7DsqB,EAAgB,IAAI56B,OAAOC,YAAYqH,MAC3CgJ,EACA+pB,GAAej0B,KAAKtrD,EAAEjE,GACtBwjF,GAAej0B,KAAK9F,EAAEjjD,GACtB+pD,GAAYgB,WAAWjxD,KACvBq3D,SAAS6rB,GAAej0B,KAAKshB,MAAMrqE,IAG/B4nD,EAAW/sC,KAAK2iE,YAAYtlB,GAClC,IAAKtQ,EAAU,OAGf,MAAM61B,EAAa,IAAI96B,OAAOC,YAAYqH,MACxCgJ,EACA+pB,GAAej0B,KAAKtrD,EAAEjE,GAAYwjF,GAAerZ,MAAMxb,QACvD60B,GAAej0B,KAAK9F,EAAEjjD,GAAQg9E,GAAerZ,MAAM7a,QACnDlB,GAIF0d,GAAgBmY,EAFCT,GAAej0B,KAAKllD,MAAQm5E,GAAej0B,KAAKshB,MAAMrqE,GACrDg9E,GAAej0B,KAAKjlD,OAASk5E,GAAej0B,KAAKshB,MAAMrqE,IAGzEgxD,EAAUt9C,IAAI,CAAC6pE,EAAeE,IAC9B5iE,KAAKyiE,UAAUzY,IAAIrrE,EAAUw3D,GAC7BkC,GAAcvJ,cAAc2H,WAAWpD,GAAMQ,MAAOsC,GACpDkC,GAAcvJ,cAAc8H,UAAUzE,GAAYO,WAAWzzD,KAE7Dk3D,EAAU0sB,WAAU,GACpB1sB,EAAU/J,YAAW,GACrB+J,EAAUG,SAAS,EAAK,GAExB8B,EAAY5C,OAAO38C,ICrEI,SAACi8C,GAAwD,MAAM,CACxFguB,OAAQ,EACRhuB,UACA3gB,SAH4E,uDAAG,IAI/E8d,KAAM,UDiEmB8wB,CAAY,CAAC5sB,GAAYgsB,GAAeI,sBACzD9tC,GAAM0tC,GAAeI,eAE3B5tC,YAAW,IAAM30B,KAAKohD,aAAaziE,IAAWw1C,GAMzCgtB,mBACLnhD,KAAKyiE,UAAU78C,SAAQ,CAACo9C,EAAOrkF,EAAUgE,KACvCqd,KAAKohD,aAAaziE,MAStB,mBAA0BA,GACxB,MAAMskF,EAAiBjjE,KAAKyiE,UAAUjhF,IAAI7C,GACrCskF,IAEL5qB,GAAcvJ,cACXwJ,iBACA9C,OAAO38C,IChFY,SAACi8C,GAAwD,MAAM,CACvFguB,OAAQ,EACRhuB,UACA3gB,SAH2E,uDAAG,IAI9E8d,KAAM,UD4EUixB,CAAW,CAACD,GAAiBd,GAAeI,sBACpD9tC,GAAM0tC,GAAeI,eAE3BU,EAAe72B,YAAW,GAC1B62B,EAAeJ,WAAU,GACzBI,EAAe9tB,UAEfn1C,KAAKyiE,UAAUjrD,OAAO74B,GACtB05D,GAAcvJ,cAAc8H,UAAUzE,GAAYQ,UAAU1zD,MAQtD0jF,YAAYtlB,GAClB,MACM8lB,EADgB9qB,GAAcvJ,cAAcwN,aAAauI,mBACjCrjE,IAAI67D,GAClC,GAAI8lB,EACF,OAAOA,EAAQp2B,WErEd,MAkBMq2B,GAA2B,KAC/B,CACLC,qBAAsB,EACtBC,qBAAiBn9E,EACjBo9E,aAAc7nB,GAAc8nB,KAC5BC,uBAAuB,EACvBC,gBAAiB,GACjBC,eAAgB,GAChBC,oBAAqB,GACrBC,sBAAuB,GACvBC,4BAA6B,KAW1B,SAASC,GAAkBC,GAChC,OAAOtrD,MAAM81C,KAAKwV,GACfx8D,QAAO,QAAEy8D,EAAYpe,GAA2B,SAAKA,KACrDljE,KAAI,QAAEuhF,GAA6B,SAAKA,KC0Z9BC,OAhef,MAeEh0C,YAAYi0C,GAAiC,KAbrCC,iBAAW,OAGXC,aAAO,OACPC,yBAAmB,OACnBC,oBAAc,OACdf,2BAAqB,OAGrBgB,sBAAgB,OAChBZ,2BAAqB,OACrBC,iCAA2B,OA4c5BxnB,WAAa,IAAMt8C,KAAKskE,QAAQ,KAChCI,iBAAoB3+E,GAAe2uD,GAAU10C,KAAKskE,QAAQ7f,kBAAkBjjE,IAAIuE,IAAK,KAEpFs7D,eAAiB,IAAMxS,GAAkBC,cAAcuS,iBAAiB,KACzEsjB,yBAA2B,IAAM3kE,KAAKyjE,sBA7c3CzjE,KAAKqkE,YAAc,IAAIzb,IAEvB5oD,KAAKskE,QAAUF,EAAezhF,IAC9Bqd,KAAKukE,oBAAsBH,EAAeQ,WAC1C5kE,KAAKwkE,eAAiBJ,EAAeS,MACrC7kE,KAAKyjE,uBAAwB,EAE7BzjE,KAAKykE,iBAAmB,IAAIplE,IAAIW,KAAKskE,QAAQQ,kBAC7C9kE,KAAK6jE,sBAAwB,IAAIjb,IACjC5oD,KAAK8jE,4BAA8B,GAEnC9jE,KAAK+kE,4BAMCA,4BACN/kE,KAAK8jE,4BAA8B9jE,KAAKqhD,iBAAiB2jB,iCAEzDhlE,KAAKqhD,iBACF4jB,2BACAr/C,SAAQyiC,GAAiBroD,KAAK+8C,mBAAmBsL,KAEpDroD,KAAKqhD,iBACF6jB,yBACAt/C,SAAQs+C,GAAalkE,KAAKukE,oBAAoBY,aAAajB,GAAW,KAEzElkE,KAAKqhD,iBACF+jB,oBACAx/C,SAAQy/C,IACPrlE,KAAKwkE,eAAec,QAAQD,GAAM,GAClCrlE,KAAKwkE,eAAe3lB,SAASwmB,MAGjCrlE,KAAKqhD,iBACFkkB,qBACA3/C,SAAQy/C,IACPrlE,KAAKwkE,eAAec,QAAQD,GAAM,GAClCrlE,KAAKwkE,eAAe3lB,SAASwmB,MAGjCrlE,KAAKyjE,sBAAwBzjE,KAAKqhD,iBAAiBsjB,2BAa9C3nB,kBAAkBC,EAA4BC,GACnDl9C,KAAKqkE,YAAYra,IAAI/M,EAAcC,GAQ7BsoB,yBAAyBvoB,GAC/B,OAAOj9C,KAAKqkE,YAAY7iF,IAAIy7D,GAYvBF,mBAAmBh3D,GACxBia,KAAK6jE,sBAAsB7Z,IAAIjkE,GAAI,GAU9B82D,yBAAyBC,GAC9B98C,KAAK8jE,4BAA4B59D,KAAK42C,GASjCF,wBAAwB72D,GAC7B,OAAOia,KAAK6jE,sBAAsBriF,IAAIuE,GAYjC0/E,iBAAiBrpB,GACtBp8C,KAAKykE,iBAAiB5rE,IAAIujD,GAQrBspB,oBAAoBtpB,GACzBp8C,KAAKykE,iBAAiBjtD,OAAO4kC,GAQxBupB,iBAAiBvpB,GACtB,OAAOp8C,KAAKykE,iBAAiBmB,IAAIxpB,GAQ5BypB,kBAAkBzpB,GACvB,OAAOA,IAAe/D,GAAcvJ,cAAcmN,eAa7CQ,iBAAiBL,GACtB,OAAO1jC,MAAM81C,KAAKxuD,KAAKskE,QAAQnoB,gBAAgBC,GAAY0pB,QAAU,GAUhEppB,gBAAgBN,EAAwB3zB,GAC7CzoB,KAAKskE,QAAQnoB,gBAAgBC,GAAY0pB,MAAMjtE,IAAI4vB,IAClDzoB,KAAK6lE,kBAAkBzpB,IAAep8C,KAAKylE,iBAAiBrpB,GAUxDO,mBAAmBP,EAAwB3zB,GAChDzoB,KAAKskE,QAAQnoB,gBAAgBC,GAAY0pB,MAAMtuD,OAAOiR,IACrDzoB,KAAK6lE,kBAAkBzpB,IAAep8C,KAAKylE,iBAAiBrpB,GAcxDe,uBAAuBF,EAA4Bb,GACxD,OAAO1jC,MAAM81C,KAAKxuD,KAAKskE,QAAQnoB,gBAAgBC,GAAYa,KAAkB,GAYxEG,QAAQH,EAA4Bb,EAAwBiB,GAAiB,IAAD,IAC3B,QAAtD,EAAAr9C,KAAKskE,QAAQnoB,gBAAgBC,GAAYa,UAAa,OAAtD,EAAwDpkD,IAAIwkD,GAE5Dr9C,KAAK6lE,kBAAkBzpB,GACwB,QADb,EAC9Bp8C,KAAKwlE,yBAAyBvoB,UAAa,OAA3C,EAA6C8Q,UAAU1Q,GACvDr9C,KAAKylE,iBAAiBrpB,GAarBkB,WAAWL,EAA4Bb,EAAwBiB,GAAiB,IAAD,IAC9B,QAAtD,EAAAr9C,KAAKskE,QAAQnoB,gBAAgBC,GAAYa,UAAa,OAAtD,EAAwDzlC,OAAO6lC,GAE/Dr9C,KAAK6lE,kBAAkBzpB,GACwB,QADb,EAC9Bp8C,KAAKwlE,yBAAyBvoB,UAAa,OAA3C,EAA6C/c,aAAamd,GAC1Dr9C,KAAKylE,iBAAiBrpB,GAUrBwB,eAAe73D,EAAY83D,GAChC79C,KAAKskE,QAAQyB,aAAa3gB,GAAamE,QAASxjE,EAAI83D,GAGpD79C,KAAKskE,QAAQ0B,eAAepgD,SAAQ,CAACyS,EAAU4tC,KAAW,IAAD,EAClD5tC,EAASkxB,QAAQqc,IAAI7/E,KAE1Bia,KAAK6lE,kBAAkBI,GACgC,QAD1B,EACzBjmE,KAAKwlE,yBAAyBpgB,GAAamE,gBAAQ,OAAnD,EAAqDgF,aAAaxoE,GAClEia,KAAKylE,iBAAiBQ,OAWvB9nB,gBAAgBp4D,EAAYq4D,GACjCp+C,KAAKskE,QAAQyB,aAAa3gB,GAAawI,cAAe7nE,EAAIq4D,GAG1Dp+C,KAAKskE,QAAQ0B,eAAepgD,SAAQ,CAACyS,EAAU4tC,KAAW,IAAD,EAClD5tC,EAASu1B,cAAcgY,IAAI7/E,KAEhCia,KAAK6lE,kBAAkBI,GACsC,QADhC,EACzBjmE,KAAKwlE,yBAAyBpgB,GAAawI,sBAAc,OAAzD,EAA2DW,aAAaxoE,GACxEia,KAAKylE,iBAAiBQ,OAWvBhiB,cAAcl+D,EAAYm+D,EAAyBC,GAExDnkD,KAAK0kE,iBAAiB3+E,GAAIspE,gBAAkBlL,EAG5CnkD,KAAKskE,QAAQ0B,eAAepgD,SAAQ,CAACyS,EAAU4tC,KACxC5tC,EAAS42B,WAAW2W,IAAI7/E,IAC7Bia,KAAKs9C,WAAW8H,GAAa6J,WAAYgX,EAAOlgF,MAIlDia,KAAKo9C,QAAQgI,GAAa6J,WAAY/K,EAAan+D,GAS9Cq+D,gBAAgBr+D,EAAYmgF,GACjClmE,KAAK0kE,iBAAiB3+E,GAAIupE,kBAAoB4W,EAG9ClmE,KAAKskE,QAAQ0B,eAAepgD,SAAQ,CAACyS,EAAU4tC,KAAW,IAAD,EAClD5tC,EAAS42B,WAAW2W,IAAI7/E,KAE7Bia,KAAK6lE,kBAAkBI,GACmC,QAD7B,EACzBjmE,KAAKwlE,yBAAyBpgB,GAAa6J,mBAAW,OAAtD,EAAwDV,aAAaxoE,GACrEia,KAAKylE,iBAAiBQ,OAYvB3nB,2BACL,OAAOt+C,KAAKukE,oBAAoB4B,gBAU3B5nB,oBAAoBt/D,GACzB,OAAO+gB,KAAKukE,oBAAoB6B,kBAAkBnnF,GAW7Cu/D,sBAAsBr8D,GAC3B,IAAI8U,GAAS,EAEb,OADA9U,EAAKyjC,SAAQ3mC,GAAQgY,EAASA,GAAU+I,KAAKu+C,oBAAoBt/D,KAC1DgY,EAQFwnD,kBAAkBx/D,GACvB+gB,KAAKukE,oBAAoBY,aAAalmF,GAAK,GActCy/D,eAAez/D,GACpB,OAAO+gB,KAAKwkE,eAAe6B,aAAapnF,GAWnC0/D,iBAAiBx8D,GACtB,IAAI8U,GAAS,EAEb,OADA9U,EAAKyjC,SAAQ3mC,GAAQgY,EAASA,GAAU+I,KAAK0+C,eAAez/D,KACrDgY,EAQF2nD,aAAa3/D,GAClB+gB,KAAKwkE,eAAec,QAAQrmF,GAAK,GAQ5B4/D,SAAS5/D,GACd+gB,KAAKwkE,eAAe3lB,SAAS5/D,GAGxB6/D,wBACL,OAAO9+C,KAAKwkE,eAAe1lB,wBAYtBomB,yBACL,OAAOnB,GAAkB/jE,KAAKukE,oBAAoB+B,iBAQ7ClB,oBACL,OAAOrB,GAAkB/jE,KAAKwkE,eAAe+B,eAQxChB,qBACL,OAAOvlE,KAAKwkE,eAAegC,wBAQtBvB,2BACL,OAAOlB,GAAkB/jE,KAAK6jE,uBASzBmB,iCACL,OAAOhlE,KAAK8jE,8BC3eT,MAAM2C,GAAiC,CAC5CxnF,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWyE,YAGjC8xB,GAA4B,KAAfp2B,GAAWvlD,EAuBf8jF,OApBU,CACvBC,eAAgB,CAAE/jF,GAAmB,IAAhBulD,GAAWvlD,EAAWwlD,GAAmB,KAAhBD,GAAWC,EAAYkE,KAAM,EAAKC,KAAM,GACtFmyB,aAA6B,IAAfv2B,GAAWvlD,EACzBgkF,UAAW,CACThkF,GAAmB,KAAhBulD,GAAWvlD,EACdwlD,GAAmB,KAAhBD,GAAWC,EACdy+B,SAAU33B,GAAYc,aAAa/wD,KAErC0/E,UAA0B,MAAfx2B,GAAWC,EACtBw2B,eAAgB,CACdh8E,EAAG27E,GACHn2B,EAAkB,KAAfD,GAAWC,EACdp/C,MAdmB,EAenBC,OAAuB,IAAfk/C,GAAWC,EACnBn8C,MAAO,SAET4yE,eAAgB,CAAEj8E,EAAG27E,GAAYv1E,MAlBZ,EAkBmCiD,MAAO,SAC/D6yE,YAAa,ICiJAgI,OArKf,MAQS32C,YAAYqb,GAAoB,KAP/BA,WAAK,EAQXxrC,KAAKwrC,MAAQA,EAORwf,oBACL,MAAM+b,EAAmB,IAAIj/B,OAAOC,YAAYwD,UAAUvrC,KAAKwrC,MAAO,EAAG,GAGnEw7B,EAAY3uB,GAAcvJ,cAAcgQ,wBACxCmoB,EAAoB,IAAIn/B,OAAOC,YAAYwD,UAAUvrC,KAAKwrC,MAAO,EAAG,GAC1E,IAAI07B,EAAkB,EAEtB,GAAyB,IAArBF,EAAUriF,OAAc,CAE1B,MAAM5F,EAAUstD,GACdrsC,KAAKwrC,MACL,sBACAk7B,GAAiBC,eACjBF,IACAtH,YAAYuH,GAAiBhI,cAC/BuI,EAAkBpuE,IAAI9Z,GACtBmoF,EAAkBnoF,EAAQkK,YAE1B,IAAK,IAAIlG,EAAI,EAAGA,EAAIikF,EAAUriF,OAAQ5B,IAAK,CACzC,MAAMsiF,EAAO2B,EAAUjkF,GAAG,GAG1B,GAFmBikF,EAAUjkF,GAAG,GAEhB,CAEd,MAAM6jF,EAAY,IAAI9+B,OAAOC,YAAYqH,MACvCpvC,KAAKwrC,MACLk7B,GAAiBE,UAAUhkF,EAC3B8jF,GAAiBE,UAAUx+B,EAAI8+B,EAC/BR,GAAiBE,UAAUC,UAE7BI,EAAkBpuE,IAAI+tE,GAGxB,MAAMO,EAAY96B,GAChBrsC,KAAKwrC,MACL65B,EAAK9+E,MACL,IACKmgF,GAAiBC,eACpBv+B,EAAGs+B,GAAiBC,eAAev+B,EAAI8+B,GAEzCT,IACAtH,YAAYuH,GAAiBhI,cAIzB0I,EAAY/6B,GAChBrsC,KAAKwrC,MACL,IACA,IACKk7B,GAAiBC,eACpBv+B,EAAGs+B,GAAiBC,eAAev+B,EAAI8+B,GAEzCT,IAEFW,EAAU9wB,SAAS6wB,EAAUn+E,MAAQo+E,EAAUp+E,MAAO,GAEtDi+E,EAAkBpuE,IAAIsuE,GACtBF,EAAkBpuE,IAAIuuE,GACtBF,GAAmBC,EAAUl+E,OAE7B,MAAMo+E,EAAkBh7B,GACtBrsC,KAAKwrC,MACL65B,EAAKr8D,aAAejmB,EAAIikF,EAAUriF,OAAS,EAAI,MAAQ,IACvD,IACK+hF,GAAiBC,eACpBv+B,EAAGs+B,GAAiBC,eAAev+B,EAAI8+B,GAEzCT,IACAtH,YAAYuH,GAAiBhI,cAE/BuI,EAAkBpuE,IAAIwuE,GACtBH,GAAmBG,EAAgBp+E,OAIvC,MAAMq+E,GAAyB7oD,KAAKpgB,IAAI6oE,EAAkBR,GAAiB/H,UAAW,GACtFsI,EAAkB7+B,EAAIk/B,EACtBP,EAAiBluE,IAAIouE,GAGrB,MAAMrI,EAAiB,IAAI92B,OAAOC,YAAYgE,UAC5C/rC,KAAKwrC,MACLk7B,GAAiB9H,eAAeh8E,EAChC8jF,GAAiB9H,eAAex2B,EAChCs+B,GAAiB9H,eAAe51E,MAChC09E,GAAiB9H,eAAe31E,OAChCy9E,GAAiB9H,eAAe3yE,OAG5BozE,EAAuB5gD,KAAKpgB,IAC/BqoE,GAAiB/H,UAAYuI,EAAmBR,GAAiB9H,eAAe31E,OACzC,EAAxCy9E,GAAiB7H,eAAe71E,OAE5Bs2E,EACJoH,GAAiB9H,eAAex2B,EAChCs+B,GAAiB9H,eAAe31E,OAAS,EACzCo2E,EAAuB,EAInBE,GAFamH,GAAiB9H,eAAe31E,OAASo2E,IAEjBiI,EAErCzI,EAAiB,IAAI/2B,OAAOC,YAAYgE,UAC5C/rC,KAAKwrC,MACLk7B,GAAiB7H,eAAej8E,EAChC08E,EACAoH,GAAiB7H,eAAe71E,MAChCq2E,EACAqH,GAAiB7H,eAAe5yE,OAGlC86E,EAAiBluE,IAAI+lE,GACrBmI,EAAiBluE,IAAIgmE,GAEjBqI,GAAmBR,GAAiB/H,YAEtCC,EAAexyB,YAAW,GAC1ByyB,EAAezyB,YAAW,IAI5B,MAAM,EAAExpD,EAAC,EAAEwlD,EAAC,MAAEp/C,EAAK,OAAEC,GAAW4mE,GAAmBI,SAC7CuP,EAAa,IAAI13B,OAAOC,YAAY03B,KACxCz/D,KAAKwrC,MACL5oD,EAAIoG,EAAQ,EACZo/C,EAAIn/C,EAAS,EACbD,EACAC,GAiBF,OAfAu2E,EAAWjnB,iBACXinB,EAAW1f,GACT,SACA,CAACpF,EAA+BglB,EAAgBC,EAAgBC,KAC9DqH,EAAkB7+B,EAAIgM,GACpB6yB,EAAkB7+B,EAAIu3B,EAAS+G,GAAiB5H,YAChDwI,EACA,GAEFzI,EAAez2B,EACbk3B,GAAsB2H,EAAkB7+B,EAAIk/B,GAAyB/H,KAG3EwH,EAAiBluE,IAAI2mE,GAEduH,ICjKX,MAAMQ,GAAuC,CAC3C,CAEEx6B,SAAUmC,GAAY4B,KAAK7xD,IAC3B46D,KAAMrO,GAASx1B,UACb,MAAMwxD,EAAeh8B,EAAMyU,kBACvBunB,EAAahkB,eAAe9H,GAAcE,kBACtC4rB,EAAalnB,WACVknB,EAAatF,+BAChBsF,EAAajkB,UAAU7H,GAAcE,kBAErC4rB,EAAatnB,UAAUxE,GAAcE,cAIjD,CAEE7O,SAAUmC,GAAY6B,QAAQ9xD,IAC9B46D,KAAMrO,GAASx1B,UACb,MAAMwxD,EAAeh8B,EAAMyU,kBACvBunB,EAAahkB,eAAe9H,GAAc70B,iBACtC2gD,EAAalnB,WACVknB,EAAatF,+BAChBsF,EAAajkB,UAAU7H,GAAc70B,iBAErC2gD,EAAatnB,UAAUxE,GAAc70B,cAYpC4gD,OANU,CACvBC,YAAa,CAAE9kF,EAAGulD,GAAWvlD,EAAI,GAAIwlD,EAAG,IACxCkF,QAAS,GACTi6B,kBCuBaI,OAzDf,MASSx3C,YAAYqb,GAAoB,KAR/Bof,iBAAW,OACXpf,WAAK,EAQXxrC,KAAKwrC,MAAQA,EAMPwf,oBACN,MAAM4c,EAAmB,IAAI9/B,OAAOC,YAAYwD,UAAUvrC,KAAKwrC,MAAO,EAAG,GAWzE,OATAo8B,EAAiB/uE,IACf4uE,GAAiBF,cAAc5kF,KAAI,CAACklF,EAAc/iF,IAChDkb,KAAK8nE,oBACHL,GAAiBC,YAAY9kF,EAAI6kF,GAAiBn6B,QAAUxoD,EAC5D2iF,GAAiBC,YAAYt/B,EAC7By/B,MAICD,EAWDE,oBAAoB9a,EAAcC,EAAc4a,GACtD,OAAOpuB,GAAaz5C,KAAKwrC,MAAO,CAC9BuB,SAAU86B,EAAa96B,SACvB8M,KAAMguB,EAAahuB,KAAK75C,KAAKwrC,SAC5BkL,YAAYsW,EAAMC,GAQvB,+BACEjtD,KAAK4qD,YAAc5qD,KAAKgrD,oBACxBhrD,KAAKwrC,MAAMgL,kBAAkBC,WAAWpD,GAAMa,GAAIl0C,KAAK4qD,eC1D3D,MACMmd,GAAiC,MAAjB1/B,GAAaD,EAC7B4/B,GAAmC,CACvC/oF,IAAK2nD,GAAWI,eAAe/nD,IAC/BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAUvC,MAAMggC,WAAyBngC,OAAOC,YAAYwD,UAKhDpb,YAAYqb,EAAqB10C,GAC/Bs5B,MAAMob,EAAO,EAAG,GAChBxrC,KAAKkoE,iBAAiBpxE,GAGhBoxE,iBAAiBpxE,GACvB,MAAMg5D,EAAarW,GAAaz5C,KAAKwrC,MAAO,CAC1CuB,SAAUmC,GAAYO,UAAUxwD,IAChCF,QA5BW,OA6BX26D,WAAY,CAAE92D,EAAG,EAAGwlD,EAAG2/B,GAAcz7B,KAAM,GAAKC,KAAM,KACtDoN,gBAAiBquB,GACjBnuB,KAAM/iD,IACL4/C,YAAYrO,GAAazlD,EAAGylD,GAAaD,GAC5CpoC,KAAKnH,IAAIi3D,IAIEmY,UCnCAE,OANc,CAC3BC,OAAS,OAAM/zB,GAAS,sBAAsB,eAC9Cg0B,MAAQ,OAAMh0B,GAAS,4BAA4B,eACnDt6B,QAAU,OAAMs6B,GAAS,4BAA4B,gBCqKxCi0B,OAvJf,MAA0C,cAAD,KAC/B1d,iBAAW,EAMZI,oBACL,MAAM5S,EAAcC,GAAcvJ,cAAcwJ,iBAC1CiwB,EAAuB,IAAIzgC,OAAOC,YAAYwD,UAAU6M,EAAa,EAAG,GAExE0X,EAAa,IAAImY,GACrB7vB,GACApiC,eAAkBqiC,GAAcvJ,cAAcyU,UAAU7H,GAAc8nB,QAGxE,OADA+E,EAAqB1vE,IAAIi3D,GAClByY,EAST,mBACE,MAAMnwB,EAAcC,GAAcvJ,cAAcwJ,iBAEhDt4C,KAAK4qD,YAAc5qD,KAAKgrD,oBACxB3S,GAAcvJ,cAAc2H,WAAWpD,GAAMa,GAAIl0C,KAAK4qD,aAEtD5qD,KAAK4qD,YAAYlU,YAAY12C,KAAK4qD,YAAYhoE,GAAIulD,GAAWC,GAE7DpoC,KAAKwoE,qBAELpwB,EAAY5C,OAAO38C,IAAI,CACrBi8C,QAAS90C,KAAK4qD,eACXlV,KAIL2C,GAAcvJ,cAAcgU,iBAAiBqlB,GAAqBC,QAClE/vB,GAAcvJ,cAAc8H,UAAUzE,GAAYW,UAAU7zD,KAS9D,qBACE,MAAMm5D,EAAcC,GAAcvJ,cAAcwJ,iBAGhDD,GAAcvJ,cAAcgU,iBAAiBl6C,GAAUs/B,eAEvDloC,KAAKyoE,sBAEDzoE,KAAK4qD,cACP5qD,KAAK4qD,YAAYlU,YAAY12C,KAAK4qD,YAAYhoE,EAAG,GAEjDw1D,EAAY5C,OAAO38C,IAAI,CACrBi8C,QAAS90C,KAAK4qD,eACXjV,WAGClhB,GAAM,KACZwgB,GAAemD,EAAap4C,KAAK4qD,cAW7B4d,qBACNnwB,GAAcvJ,cACXkP,qBACAp4B,SAAS8iD,IACHA,EAAY1oB,WAAc0oB,EAAY1oB,UAAUr7D,SAGrD+jF,EAAYta,UAAUtO,GAAG,cAAc,IAAM9/C,KAAK2oE,sBAClDD,EAAYta,UAAUtO,GAAG,eAAe,IACtC9/C,KAAK4oE,mBAAmBF,EAAYrgB,iBAEtCqgB,EAAYta,UAAUtO,GAAG,aAAa9pC,UACpChW,KAAK6oE,iBAAiBH,EAAYrgB,qBAC5BhQ,GAAcvJ,cAAcuR,mBAAmBqoB,EAAY1oB,kBASjEyoB,sBACNpwB,GAAcvJ,cACXkP,qBACAp4B,SAAS8iD,IACRA,EAAYta,UAAUlV,IAAI,cAC1BwvB,EAAYta,UAAUlV,IAAI,eAC1BwvB,EAAYta,UAAUlV,IAAI,gBAYxB0vB,mBAAmB7iF,GACJsyD,GAAcvJ,cAAc8N,wBAAwB72D,GAEvEsyD,GAAcvJ,cAAcgU,iBAAiBqlB,GAAqBpuD,SAElEs+B,GAAcvJ,cAAcgU,iBAAiBqlB,GAAqBE,OAQ9DM,oBACNtwB,GAAcvJ,cAAcgU,iBAAiBqlB,GAAqBC,QAW5DS,iBAAiB9iF,GACvBsyD,GAAcvJ,cAAcgU,iBAAiBl6C,GAAUs/B,eACvDmQ,GAAcvJ,cAAciO,mBAAmBh3D,GAC/CsyD,GAAcvJ,cAAcgU,iBAAiBqlB,GAAqBC,UCpK/D,IAAKU,IAKX,SALWA,KAAQ,YAARA,EAAQ,kBAARA,EAAQ,YAARA,EAAQ,YAKnB,CALWA,QAAQ,KAOb,MAAMC,GAAkB,CAC7BC,KAAMttB,GAAcstB,KACpBC,QAASvtB,GAAcutB,QACvBC,KAAMxtB,GAAcwtB,KACpB1F,KAAM9nB,GAAc8nB,MCTT2F,GAAmC,CAC9ClqF,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAiBxBmhC,OAdW,CACxBhvB,OAAQ,CAAEnM,QAAwB,GAAf9F,GAAWC,GAC9BsN,gBAAiB,CACftN,EAAG,EACHjU,SAAU,IACV8d,KAAM,UAER0D,eAAgB,CACdvN,EAAkB,GAAfD,GAAWC,EACdjU,SAAU,IACV8d,KAAM,WC0IKo3B,OAzIf,MAAuC,cAAD,KAC5Bze,iBAAW,EAKX0e,yBACN,MAAMC,EAAYlxB,GAAcvJ,cAAcmN,eAC9C,IAAIutB,EAAmBnxB,GAAcvJ,cAAc2N,iBAAiB8sB,GAWpE,OAJ0B,IANPlxB,GAAcvJ,cAAcqO,uBAC7CiI,GAAaqkB,WACbF,GAIa5kF,SACb6kF,EAAmBA,EAAiBhiE,QAAOihB,GAAQA,IAASqgD,GAASI,QAGhEM,EAODxe,oBACN,MAAM5S,EAAcC,GAAcvJ,cAAcwJ,iBAC1CoxB,EAAoB,IAAI5hC,OAAOC,YAAYwD,UAAU6M,EAAa,EAAG,GAErEuxB,EAAa,IAAI7hC,OAAOC,YAAYqH,MACxCgJ,EACA/P,GAAazlD,EACbylD,GAAaD,EACb8G,GAAYe,eAAehxD,KAE7ByqF,EAAkB7wE,IAAI8wE,GAEtB,MAAM7D,EAAQ9lE,KAAKspE,yBACbpQ,EAAUl5D,KAAK4pE,eAAe9D,GAC9BvqB,EAAkB5R,GAAmB,CACzCE,WAAYqvB,EAAQv0E,SAatB,OAVA+kF,EAAkB7wE,IAChBqgE,EAAQv2E,KAAI,CAACy3D,EAAQt1D,IACnBkb,KAAK6pE,iBACHzvB,EAAO3rD,KACP8sD,EAAgBz2D,GAAO,GACvBy2D,EAAgBz2D,GAAO,GAAKskF,GAAkBhvB,OAAOnM,QACrDmM,EAAOtjD,aAIN4yE,EAUDE,eAAe9D,GACrB,OAAOA,EAAMzgD,OAAO1iC,KAAI8lC,IACf,CACLh6B,KAAMg6B,EACN3xB,SAAUkf,eAAkBqiC,GAAcvJ,cAAcyU,UAAUwlB,GAAgBtgD,QAchFohD,iBAAiBp7E,EAAcu+D,EAAcC,EAAcn2D,GAEjE,OAAO2iD,GADapB,GAAcvJ,cAAcwJ,iBACf,CAC/BvL,SAAUmC,GAAYI,YAAYrwD,IAClCF,QAAS0P,EACTirD,WAAY,CAAE92D,EAAG,EAAGwlD,EAAG,EAAGkE,KAAM,GAAKC,KAAM,KAC3CoN,gBAAiBwvB,GACjBtvB,KAAM/iD,IACL4/C,YAAYsW,EAAMC,GASvB,mBACE,MAAM7U,EAAcC,GAAcvJ,cAAcwJ,iBAChDt4C,KAAK4qD,YAAc5qD,KAAKgrD,oBACxB3S,GAAcvJ,cAAc2H,WAAWpD,GAAMa,GAAIl0C,KAAK4qD,aAEtD5qD,KAAK4qD,YAAYlU,YAAY12C,KAAK4qD,YAAYhoE,EAAGulD,GAAWC,GAE5DgQ,EAAY5C,OAAO38C,IAAI,CACrBi8C,QAAS90C,KAAK4qD,eACXwe,GAAkB1zB,wBAEjBjhB,GAAM,KACZ4jB,GAAcvJ,cAAc8H,UAAUzE,GAAYW,UAAU7zD,KAS9D,qBACE,MAAMm5D,EAAcC,GAAcvJ,cAAcwJ,iBAE5Ct4C,KAAK4qD,cACP5qD,KAAK4qD,YAAYlU,YAAY12C,KAAK4qD,YAAYhoE,EAAG,GAEjDw1D,EAAY5C,OAAO38C,IAAI,CACrBi8C,QAAS90C,KAAK4qD,eACXwe,GAAkBzzB,uBAGjBlhB,GAAM,KACZwgB,GAAemD,EAAap4C,KAAK4qD,gBCrJhC,MAAMkf,GAAmC,CAC9C7qF,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAgBxB8hC,OAbW,CACxB3vB,OAAQ,CAAE4vB,QAAwB,IAAf7hC,GAAWvlD,EAAUgrD,OAAuB,GAAfzF,GAAWC,GAC3D2F,QAAS,CACPG,KAAM,CACJtrD,EAAkB,MAAfulD,GAAWvlD,EACdwlD,EAAkB,KAAfD,GAAWC,EACdp/C,MAAsB,KAAfm/C,GAAWvlD,EAClBqG,OAAuB,IAAfk/C,GAAWC,GAErBnmD,MAAO,CAAEW,EAAkB,GAAfulD,GAAWvlD,KC2LZqnF,OAzLf,MAAuC,cAAD,KAC5Brf,iBAAW,EAQXqB,WAAWxC,EAAmC1c,GACpD0c,EACGygB,WAAWn9B,GACXgM,eAAegxB,GAAkBh8B,QAAQG,KAAKllD,MAAO+gF,GAAkBh8B,QAAQG,KAAKjlD,QACpFytD,YAAYqzB,GAAkBh8B,QAAQG,KAAKtrD,EAAGmnF,GAAkBh8B,QAAQG,KAAK9F,GAM1E+hC,uBACN,OAAO9xB,GAAcvJ,cAAcqO,uBACjCiI,GAAaglB,WACb/xB,GAAcvJ,cAAcmN,gBASxB+O,oBACN,MAAM5S,EAAcC,GAAcvJ,cAAcwJ,iBAC1C+xB,EAAoB,IAAIviC,OAAOC,YAAYwD,UAAU6M,EAAa,EAAG,GAGrEkyB,EAAe,IAAIxiC,OAAOC,YAAYsO,OAC1C+B,EACA2xB,GAAkBh8B,QAAQ9rD,MAAMW,EAChCylD,GAAaD,EACb8G,GAAYW,qBAAqB5wD,KAE7BsrF,EAAc,IAAIziC,OAAOC,YAAYsO,OACzC+B,EACA/P,GAAazlD,EACbylD,GAAaD,EACb8G,GAAYY,oBAAoB7wD,KAElCorF,EAAkBxxE,IAAI,CAACyxE,EAAcC,IAGrC,MAAMC,EAAcxqE,KAAKmqE,uBACnBjR,EAAUl5D,KAAKyqE,eAAeD,EAAaD,GAC3ChvB,EAAkB5R,GAAmB,CACzCE,WAAYqvB,EAAQv0E,OACpBqlD,aAAc,EACdD,UAAWggC,GAAkB3vB,OAAOxM,SAGtCy8B,EAAkBxxE,IAChBqgE,EAAQv2E,KAAI,CAACy3D,EAAQt1D,IACnBkb,KAAK0qE,iBACHtwB,EAAO3rD,KACP8sD,EAAgBz2D,GAAO,GAAKilF,GAAkB3vB,OAAO4vB,QACrDzuB,EAAgBz2D,GAAO,GACvBs1D,EAAOtjD,SACPsjD,EAAON,QACPM,EAAOL,UAKb,MAAM+V,EAAa,IAAImY,GACrB7vB,GACApiC,eAAkBqiC,GAAcvJ,cAAcyU,UAAU7H,GAAc8nB,QAOxE,OALA6G,EAAkBxxE,IAAIi3D,GAGtB9vD,KAAKisD,WAAWse,EAAar7B,GAAYU,mBAAmB3wD,KAErDorF,EAYDI,eAAeD,EAA2BG,GAChD,MAAMC,EAAc79B,GAAqB/sC,KAAKisD,WAAW0e,EAAe59B,GAClE89B,EAAiB,IAAM7qE,KAAKisD,WAAW0e,EAAez7B,GAAYU,mBAAmB3wD,KAE3F,OAAOurF,EAAY7nF,KAAImoF,IACrB,MAAMzyC,EAAWggB,GAAcvJ,cAAcqN,gBAAgB2uB,GAC7D,MAAO,CACLr8E,KAAM4pC,EAASzzB,KACf9N,SAAUkf,gBACFqiC,GAAcvJ,cAAcyU,UAAU7H,GAAcyE,gBACpD9H,GAAcvJ,cAAc0N,iBAAiBsuB,IAErDhxB,QAAS,IAAM8wB,EAAWvyC,EAASk0B,YAAcl0B,EAAS0U,UAC1DgN,MAAO,IAAM8wB,QAgBXH,iBACNj8E,EACAu+D,EACAC,EACAn2D,EACAgjD,EACAC,GAGA,OAAON,GADapB,GAAcvJ,cAAcwJ,iBACf,CAC/BvL,SAAUmC,GAAYM,WAAWvwD,IACjCF,QAAS0P,EACTirD,WAAY,CAAE92D,EAAG,EAAGwlD,EAAG,EAAGkE,KAAM,GAAKC,KAAM,KAC3CoN,gBAAiBmwB,GACjBjwB,KAAM/iD,EACNgjD,QAASA,EACTC,MAAOA,IACNrD,YAAYsW,EAAMC,GASvB,mBACE,MAAM7U,EAAcC,GAAcvJ,cAAcwJ,iBAChDt4C,KAAK4qD,YAAc5qD,KAAKgrD,oBACxB3S,GAAcvJ,cAAc2H,WAAWpD,GAAMa,GAAIl0C,KAAK4qD,aAEtD5qD,KAAK4qD,YAAYlU,YAAY12C,KAAK4qD,YAAYhoE,GAAIulD,GAAWC,GAE7DgQ,EAAY5C,OAAO38C,IAAI,CACrBi8C,QAAS90C,KAAK4qD,eACXlV,KAEL2C,GAAcvJ,cAAc8H,UAAUzE,GAAYW,UAAU7zD,KAS9D,qBACE,MAAMm5D,EAAcC,GAAcvJ,cAAcwJ,iBAE5Ct4C,KAAK4qD,cACP5qD,KAAK4qD,YAAYlU,YAAY12C,KAAK4qD,YAAYhoE,EAAG,GAEjDw1D,EAAY5C,OAAO38C,IAAI,CACrBi8C,QAAS90C,KAAK4qD,eACXjV,WAGClhB,GAAM,KACZwgB,GAAemD,EAAap4C,KAAK4qD,gBC5LxBmgB,OALf,MACSlO,cACAC,kBCNF,MAAMkO,GAAmC,CAC9C/rF,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAOxBgjC,OAJW,CACxB7wB,OAAQ,CAAExM,OAAuB,GAAfzF,GAAWC,ICkKhB8iC,OAvJf,MAAuC,cAAD,KAC5BtgB,iBAAW,EAKXugB,sBACN,OAAO9yB,GAAcvJ,cAAcqO,uBACjCiI,GAAaqkB,WACbpxB,GAAcvJ,cAAcmN,gBASxB+O,oBACN,MAAM5S,EAAcC,GAAcvJ,cAAcwJ,iBAC1C8yB,EAAoB,IAAItjC,OAAOC,YAAYwD,UAAU6M,EAAa,EAAG,GAGrEqxB,EAAazpE,KAAKmrE,sBAClBjS,EAAUl5D,KAAKqrE,oBAAoB5B,GACnCluB,EAAkB5R,GAAmB,CACzCjhD,UAAWghD,GAAUgyB,OACrB7xB,WAAYqvB,EAAQv0E,OACpBolD,UAAWkhC,GAAkB7wB,OAAOxM,SAGtCw9B,EAAkBvyE,IAChBqgE,EAAQv2E,KAAI,CAACy3D,EAAQt1D,IACnBkb,KAAKsrE,sBACHlxB,EAAO3rD,KACP8sD,EAAgBz2D,GAAO,GACvBy2D,EAAgBz2D,GAAO,GACvBs1D,EAAOtjD,aAMboiE,EAAQtzC,SAAQ,CAACw0B,EAAQt1D,KACvB,MAAMymF,EAAgB,IAAIzjC,OAAOC,YAAYsO,OAC3C+B,EACAmD,EAAgBz2D,GAAO,GACvBy2D,EAAgBz2D,GAAO,GACvBoqD,GAAYc,aAAa/wD,OAIvBm7D,EAAOiO,eACThQ,GAAcvJ,cAAc8N,wBAAwBxC,EAAOiO,gBAG3D+iB,EAAkBvyE,IAAI0yE,MAI1B,MAAMzb,EAAa,IAAImY,GACrB7vB,GACApiC,eAAkBqiC,GAAcvJ,cAAcyU,UAAU7H,GAAc8nB,QAGxE,OADA4H,EAAkBvyE,IAAIi3D,GACfsb,EAUDC,oBAAoBG,GAC1B,OAAOA,EAAY7oF,KAAI49D,IAEd,CACL9xD,KAFeimD,GAAU2D,GAAcvJ,cAAcwV,gBAAgB/D,IAEtDh6D,MACfuQ,SAAUkf,UACRqiC,GAAcvJ,cAAciO,mBAAmBwD,SACzClI,GAAcvJ,cAAc2R,aAAaF,IAEjD8H,cAAe9H,MAcb+qB,sBAAsB78E,EAAcu+D,EAAcC,EAAcn2D,GAEtE,OAAO2iD,GADapB,GAAcvJ,cAAcwJ,iBACf,CAC/BvL,SAAUmC,GAAYa,cAAc9wD,IACpCF,QAAS0P,EACTirD,WAAY,CAAE92D,EAAG,EAAGwlD,EAAG,EAAGkE,KAAM,GAAKC,KAAM,IAC3CoN,gBAAiBqxB,GACjBnxB,KAAM/iD,IACL4/C,YAAYsW,EAAMC,GASvB,mBACE,MAAM7U,EAAcC,GAAcvJ,cAAcwJ,iBAChDt4C,KAAK4qD,YAAc5qD,KAAKgrD,oBACxB3S,GAAcvJ,cAAc2H,WAAWpD,GAAMa,GAAIl0C,KAAK4qD,aAEtD5qD,KAAK4qD,YAAYlU,YAAY12C,KAAK4qD,YAAYhoE,GAAIulD,GAAWC,GAE7DgQ,EAAY5C,OAAO38C,IAAI,CACrBi8C,QAAS90C,KAAK4qD,eACXlV,KAEL2C,GAAcvJ,cAAc8H,UAAUzE,GAAYW,UAAU7zD,KAS9D,qBACE,MAAMm5D,EAAcC,GAAcvJ,cAAcwJ,iBAC5Ct4C,KAAK4qD,cACP5qD,KAAK4qD,YAAYlU,YAAY12C,KAAK4qD,YAAYhoE,EAAG,GAEjDw1D,EAAY5C,OAAO38C,IAAI,CACrBi8C,QAAS90C,KAAK4qD,eACXjV,WAGClhB,GAAM,KACZwgB,GAAemD,EAAap4C,KAAK4qD,gBCrHvC,MAAM6gB,WAAoB3jC,OAAO4jC,MAwB/Bv7C,cACEC,MAAM,eAAe,KAxBhB8rB,uBAAiB,OACjByvB,qBAAe,OACdC,kBAAY,OACZC,kBAAY,OACZC,mBAAa,OACbC,sBAAgB,OAChBC,qBAAe,OACfC,mBAAa,OACbC,wBAAkB,OAClBC,kBAAY,OACZ3E,kBAAY,OACZ4E,uBAAiB,OACjB5e,sBAAgB,OAChB0T,kBAAY,OACZmL,mBAAa,OACbC,wBAAkB,OAClBC,wBAAkB,OAClBC,gBAAU,OACVC,4BAAsB,OACtBC,oBAAc,OACdC,oBAAc,OACdC,sBAAgB,OAiTjBvrB,eAAiB,IAAMxS,GAAkBC,cAAcuS,iBAAiB,KACxEhF,gBAAkB,IAAM3H,GAAU10C,KAAK4rE,cAAc,KACrDluB,iBAAmB,IAAMhJ,GAAU10C,KAAK8rE,eAAe,KACvDtrB,mBAAqB,IAAM9L,GAAU10C,KAAKgsE,iBAAiB,KAC3DhoB,oBAAsB,IAAMtP,GAAU10C,KAAK+rE,kBAAkB,KAC7D7tB,eAAiB,IAAMxJ,GAAU10C,KAAKksE,oBAAoB,KAC1D9rB,iBAAmB,IAAM1L,GAAU10C,KAAKisE,eAAe,KACvDjpB,gBAAkB,IAAMtO,GAAU10C,KAAKkhE,cAAc,KACrD1qB,gBAAkB,IAAM9B,GAAU10C,KAAK6rE,cAAc,KACrD5rB,gBAAkB,IAAMvL,GAAU10C,KAAKwnE,cAAc,KACrD9jB,qBAAuB,IAAMhP,GAAU10C,KAAKosE,mBAAmB,KAC/D1pB,oBAAsB,IAAMhO,GAAU10C,KAAKwtD,kBAAkB,KAC7DtM,gBAAkB,IAAMxM,GAAU10C,KAAKmsE,cAAc,KACrDU,iBAAmB,IAAMn4B,GAAU10C,KAAKqsE,eAAe,KACvDS,sBAAwB,IAAMp4B,GAAU10C,KAAKssE,oBAAoB,KACjES,sBAAwB,IAAMr4B,GAAU10C,KAAKusE,oBAAoB,KACjES,cAAgB,IAAMt4B,GAAU10C,KAAKwsE,YAAY,KACjD3rB,0BAA4B,IAAMnM,GAAU10C,KAAKysE,wBAAwB,KACzEQ,kBAAoB,IAAMv4B,GAAU10C,KAAK0sE,gBAAgB,KACzDQ,kBAAoB,IAAMx4B,GAAU10C,KAAK2sE,gBAAgB,KACzDQ,oBAAsB,IAAMz4B,GAAU10C,KAAK4sE,kBAjUhD5sE,KAAKk8C,kBAAoBtzC,GAAU4+B,kBACnCxnC,KAAK2rE,iBAAkB,EAGlBzwD,KAAK,GAAgF,IAAhF,eAAEkpD,EAAc,aAAEgJ,EAAY,WAAEC,EAAU,cAAEC,GAAiC,EACvFj1B,GAAcvJ,cAAciN,eAAe/7C,MAC3C6uC,GAAkBC,cAAcy+B,mBAAmBvtE,MACnDA,KAAKqhD,iBAAiBmsB,iBAAiBH,EAAYC,EAAeF,GAClEptE,KAAKk8C,kBACHl8C,KAAKqhD,iBAAiBosB,qBAAuBrJ,EAAesJ,YAC9D1tE,KAAK2rE,iBAAkB,EAEvB3rE,KAAK4rE,aAAe,IAAIzH,GAAiBC,GACzCpkE,KAAK6rE,aAAe,IAAIjO,GAAiB59D,MACzCA,KAAKkhE,aAAe,IAAInE,GAAiB/8D,MACzCA,KAAKwnE,aAAe,IAAIxG,GCjFnB,IAAIpY,IAAI,CACb,CAAClN,GAAc8nB,KAAM,IAAI6F,IACzB,CAAC3tB,GAAcstB,KAAM,IAAIiB,IACzB,CAACvuB,GAAcutB,QAAS,IAAIX,IAC5B,CAAC5sB,GAAcwtB,KAAM,IAAIgC,IACzB,CAACxvB,GAAcyE,SAAU,IAAI4qB,IAC7B,CAACrvB,GAAc6lB,KAAM,IAAIwJ,MD2EoC/qE,KAAKkhE,cAClElhE,KAAK+rE,iBAAmB,IAAI4B,GAC5B3tE,KAAK8rE,cAAgB,IAAInL,GACzB3gE,KAAKgsE,gBAAkB,IAAI4B,GAC3B5tE,KAAKisE,cAAgB,IAAIhkB,GACzBjoD,KAAKksE,mBAAqB,IAAI2B,GAC9B7tE,KAAKosE,kBAAoB,IAAI/e,GAC7BrtD,KAAKwtD,iBAAmB,IAAI/E,GAC5BzoD,KAAKmsE,aAAe,IAAI3J,GACxBxiE,KAAKqsE,cAAgB,IAAInR,GAAkBl7D,MAC3CA,KAAKssE,mBAAqB,IAAI5hB,GAC5B1qD,KACA6uC,GAAkBC,cAAckQ,sBAAsB8uB,iBAExD9tE,KAAKusE,mBAAqB,IAAI7hB,GAC5B1qD,KACA6uC,GAAkBC,cAAckQ,sBAAsBl4B,iBAExD9mB,KAAKwsE,WAAa,IAAIzN,GAAe/+D,MACrCA,KAAKysE,uBAAyB,IAAItV,GAClCn3D,KAAK0sE,eAAiB,IAAI/E,GAAmB3nE,MAC7CA,KAAK2sE,eAAiB,IAAI7F,GAAmB9mE,MAC7CA,KAAK4sE,iBAAmB,IAAIzc,GAC1BnwD,KACA,CACEkwD,GAAc6d,IACd7d,GAAc8d,MACd9d,GAAc+d,aACd/d,GAAcge,cAEhB,CAACluE,KAAKwsE,WAAYxsE,KAAK2sE,eAAgB3sE,KAAKssE,mBAAoBtsE,KAAKusE,qBAQlEt1C,UACL8gC,GAAiB/3D,MACjBA,KAAKigD,kBAAkBwhB,2BACrB,CAACG,EAA0BI,IACzBhiE,KAAKmuE,kBAAkBvM,EAAWI,KAEtChiE,KAAKigD,kBAAkByhB,sBACrB1rD,MAAO4rD,EAA0BI,UAAkChiE,KAAKouE,yBAE1EpuE,KAAKigD,kBAAkB0hB,aACrB3rD,MAAO4rD,EAA0BI,UACzBhiE,KAAKquE,qBAAqBzM,EAAWI,KAE/ChiE,KAAKsuE,yBACLtuE,KAAKuuE,uBAMCD,yBACN,MAAMhK,EAAUtkE,KAAKq8C,kBAAkBC,aACvCjE,GAAcvJ,cAAcoT,WAAWoiB,EAAQkK,kBAC/ClK,EAAQlE,eAAex6C,SAAQ,CAACkjC,EAAO/b,KACrC/sC,KAAKyuE,UAAU3lB,EAAO/b,MAUlB0hC,UAAU3lB,EAAmB/b,GACnC,OAAQ+b,EAAM18D,MACZ,KAAK4iD,GAAUI,MACbpvC,KAAKm4D,KAAKrP,MAAM/b,EAAUsH,GAASyU,EAAMl6B,MAAM,IAC/C,MACF,KAAKogB,GAAUqH,OACbr2C,KAAKm4D,KAAKuW,YAAY3hC,EAAUsH,GAASyU,EAAMl6B,MAAM,GAAOk6B,EAAMtkC,SAWxE,eACE6zB,GAAcvJ,cAAc0Q,UAAUnM,GAAMM,iBACtC3zC,KAAKw8C,iBAAiBx8C,KAAKk8C,mBAAmB,SAC9C7D,GAAcvJ,cAAcwS,WAepC,qBAA6BlF,EAAwBuyB,GACnD,MAAMC,EAAev2B,GAAcvJ,cAAcqN,gBAAgBC,GAGjEp8C,KAAKitE,oBAAoB4B,+BAGnBx2B,GAAcvJ,cAAc6S,YAAYitB,EAAaE,QAG3D9uE,KAAK0jD,uBAAuBD,+BAA+BrH,GAC3Dp8C,KAAK09C,mBAAmBK,4BAA4B3B,GACpDp8C,KAAKk+C,iBAAiBG,yBAAyBjC,GAC/Cp8C,KAAKgkD,sBAAsBkL,8BAA8B9S,SAEnDp8C,KAAKigD,kBAAkBsD,UAAU7H,GAAcyE,UAEjDwuB,UAEI3uE,KAAKogD,mBAAmB2uB,uBAC5B/uE,KAAKq8C,kBAAkB2oB,wCAGnBhlE,KAAKogD,mBAAmBC,mBAC5BrgD,KAAKq8C,kBAAkBC,aAAa0yB,8BAKlChvE,KAAKogD,mBAAmBC,mBAAmBuuB,EAAa5uB,WAG1DhgD,KAAKq8C,kBAAkBspB,iBAAiBvpB,WACpC/D,GAAcvJ,cAAcmgC,mBAAmBL,EAAahqE,MAClE5E,KAAKq8C,kBAAkBqpB,oBAAoBtpB,IAGzCp8C,KAAKigD,kBAAkBuD,eAAe9H,GAAcyE,iBAChDngD,KAAKigD,kBAAkBsD,UAAU7H,GAAc8nB,MAYzD,uBAA8BpnB,GAAuD,IAA/BuyB,EAAoB,wDACxE3uE,KAAKk8C,kBAAoBE,OlE/IJpmC,OACvBw1B,EACAlE,EACA4nC,EACAp4E,KAEA,MAAMq4E,EAAY/5B,GAAY5J,GAC9BA,EAAMgL,kBAAkBC,WAAWpD,GAAMW,QAASm7B,GAElDA,EAAUjjC,SAAS,GACnBV,EAAMgK,OAAO38C,IAAIm8C,GAAO,CAACm6B,GAAY7nC,UAC/B7S,GAAM6S,SAENxwC,UACA29B,GAAMy6C,GAEZC,EAAUjjC,SAAS,GACnBV,EAAMgK,OAAO38C,IAAIg8C,GAAQ,CAACs6B,GAAY7nC,UAChC7S,GAAM6S,GAEZ6nC,EAAUh6B,WkE8HFi6B,CAAUpvE,KAAM,IAAK,KAAKgW,gBACxBhW,KAAKw2C,kBAAkBomB,uBACvB58D,KAAKqvE,eAAejzB,EAAYuyB,MAIxC3uE,KAAKq8C,kBAAkBU,mBAAmBX,GAMpCmyB,uBACNvuE,KAAKgjD,kBAAkBqa,yBACrBv1B,OAAOqR,MAAMm2B,SAASC,SAASC,IAC/B,MACAx5D,UACMhW,KAAKigD,kBAAkBiiB,+BACnBliE,KAAKigD,kBAAkBK,iBAEvBtgD,KAAKigD,kBAAkBC,UAAUxE,GAAcE,eAI3D57C,KAAKgjD,kBAAkBqa,yBACrBv1B,OAAOqR,MAAMm2B,SAASC,SAASE,IAC/B,MACAz5D,UACMhW,KAAKigD,kBAAkBuD,eAAe9H,GAAc70B,iBAChD7mB,KAAKigD,kBAAkBK,WACpBtgD,KAAKigD,kBAAkBiiB,+BAC1BliE,KAAKigD,kBAAkBsD,UAAU7H,GAAc70B,iBAE/C7mB,KAAKigD,kBAAkBC,UAAUxE,GAAc70B,cAStDu1C,UACLp8D,KAAKgjD,kBAAkB2Z,iBACvB38D,KAAKw2C,kBAAkBomB,iBACvB58D,KAAK6gD,4BAA4B2W,uBAsB5B2W,kBAAkBvM,EAA0BI,GACjD,OACGhiE,KAAK2rE,iBACN3J,IAAatmB,GAAcyE,UAC3B9H,GAAcvJ,cAAcwP,6BAC3Bt+C,KAAKq8C,kBAAkBsoB,2BAU5B,6BACE3kE,KAAK2rE,iBAAkB,QAEjB3rE,KAAKogD,mBAAmBC,mBAC5BrgD,KAAKq8C,kBAAkBC,aAAaozB,gCAItC1vE,KAAKgjD,kBAAkBF,iBAAiBl6C,GAAUs/B,eAClDloC,KAAKgjD,kBAAkBG,kBAAiB,GACxCnjD,KAAKgjD,kBAAkBC,qBAAoB,GAE3CjjD,KAAKw1C,OAAO38C,IAAIm8C,GAAO,CAACI,GAAYp1C,MAAMksC,SAAS,IAAKtjC,GAAU0+B,qBAC5D7S,GAAM7rB,GAAU0+B,cAGtBtnC,KAAKo8D,UAGLp8D,KAAKwrC,MAAM7gC,MAAM,wBAcnB,2BAAkCi3D,EAA0BI,GACtDJ,IAAclmB,GAAc8nB,MAC9BnrB,GAAcvJ,cAAc4Q,aAAarM,GAAMM,WAG7CquB,IAAatmB,GAAc8nB,MAC7BnrB,GAAcvJ,cAAc2Q,YAAYpM,GAAMM,YA2BrC83B,UErYA,MAAMkE,GAMnBx/C,cAAe,KALPy/C,mBAAa,OAEbvC,gBAAU,OACVC,mBAAa,OAiIdtI,+BAAiC,IAAMhlE,KAAK6vE,mBAAmB/L,4BAA4B,KAC3FmB,yBAA2B,IAAMjlE,KAAK6vE,mBAAmBhM,sBAAsB,KAC/EqB,uBAAyB,IAAMllE,KAAK6vE,mBAAmBjM,oBAAoB,KAC3EwB,kBAAoB,IAAMplE,KAAK6vE,mBAAmBlM,eAAe,KACjE4B,mBAAqB,IAAMvlE,KAAK6vE,mBAAmBnM,gBAAgB,KACnEoM,eAAiB,IAAM9vE,KAAK6vE,mBAAmBtM,aAAa,KAC5DoB,yBAA2B,IAAM3kE,KAAK6vE,mBAAmBpM,sBAAsB,KAE/EsM,cAAgB,IAAMr7B,GAAU10C,KAAKqtE,YAAY,KACjD2C,iBAAmB,IAAMt7B,GAAU10C,KAAKstE,eAAe,KACvD2C,iBAAmB,IAAMjwE,KAAK4vE,cAxInC5vE,KAAK4vE,cnBoCA,CACLM,eAAgB,GAChBC,cAAe,CACbC,aAAc,GACdvV,SAAU,CAAEe,UAAW,EAAGC,UAAW,GACrCwU,yBAA0B,EAAE,GAAI,GAChCC,yBAA0B,ImBnC9B,0BACEtwE,KAAK4vE,oBCaF55D,iBAAmD,IAAD,EACvD,MAAMnqB,EAAU,CACd0kF,OAAQ,MACRC,QAASC,GAAc5hC,GAAkBC,cAAcymB,iBAAiBmb,cAGpEC,QAAaC,MAAO,GAAEhoE,KAAUioE,qBAAsBhlF,GACtD9M,QAAgB4xF,EAAKliF,OAErBqiF,EAA6C,QAAzC,EAAGpmD,KAAKM,MAAMjsC,GAASgyF,0BAAkB,aAAtC,EAAwCC,WACrD,OAAOrrD,IAAEsrD,QAAQH,GpBKV,CACLZ,eAAgB,GAChBC,cAAe,CACbC,aAAc,GACdvV,SAAU,CAAEe,UAAW,EAAGC,UAAW,GACrCwU,yBAA0B,EAAE,GAAI,GAChCC,yBAA0B,IoBXoBQ,EDvBrBI,GAatB1D,iBAAiBH,EAAoBC,EAAuBF,GACjEptE,KAAKqtE,WAAaA,EAClBrtE,KAAKstE,cAAgBA,EAChBF,IACHptE,KAAK4vE,cAAcM,eAAe7C,GAAcjK,MAiBpD,iBACMv0B,GAAkBC,cAAcqiC,+BAAgC1F,KAClEzrE,KAAK4vE,cnBhDJ,SACLwB,EACA/D,EACAC,GAEA,MAAMl1B,EAAcC,GAAcvJ,cAAcwJ,iBAC1C+4B,EAAmBj5B,EAAYiE,kBAC/BmrB,EAAepvB,EAAY6H,kBAEjC,MAAO,CACLiwB,eAAgB,IACXkB,EAAclB,eACjB,CAAC7C,GAAa,CACZhK,qBAAsBiK,EACtBhK,gBAAiBlrB,EAAY8D,kBAC7BqnB,aAAciE,EAAazF,kBAC3B0B,sBAAuB4N,EAAiB1M,2BACxCjB,gBAAiB2N,EAAiB9L,qBAClC5B,eAAgB0N,EAAiBjM,oBACjCxB,oBAAqByN,EAAiBnM,yBACtCrB,sBAAuBwN,EAAiBpM,2BACxCnB,4BAA6BuN,EAAiBrM,mCAGlDmL,cAAe,CACbtV,SAAUuW,EAAcjB,cAActV,SACtCwV,yBAA0B,CAAChD,EAAYC,GACvC8C,aAAcvhC,GAAkBC,cAAckQ,sBAAsB8uB,kBACpEwC,wBAAyBc,EAAcjB,cAAcG,0BmBoBhCgB,CACnBtxE,KAAK4vE,cACL5vE,KAAK+vE,gBACL/vE,KAAKgwE,0BAEDuB,GAASvxE,KAAK4vE,gBAWxB,0BAAiC4B,GAC/BxxE,KAAK4vE,cAAcM,eAAesB,GAAkB/N,uBAAwB,EACxE+N,EAAmBxxE,KAAKyxE,kCAC1BzxE,KAAK4vE,cAAcO,cAAcG,wBAA0BkB,SAEvDD,GAASvxE,KAAK4vE,eAStB,mBAA0BruB,GACxBvhD,KAAK4vE,cAAcO,cAActV,SAAWtZ,QACtCgwB,GAASvxE,KAAK4vE,eAYfpU,cACL,OAAOx7D,KAAK4vE,cAAcO,cAActV,SAMnCpZ,qBACL,OAAOzhD,KAAK4vE,cAAcO,cAMrBsB,gCACL,OAAOzxE,KAAK4vE,cAAcO,cAAcG,wBAMnCT,mBACL,OAAO7vE,KAAK4vE,cAAcM,eAAelwE,KAAK+vE,kBAAoB3M,KAM7DqK,oBACL,OAAOztE,KAAK6vE,mBAAmBvM,gBAK1BoO,oBAAoB5sF,GACzB,OAAOkb,KAAK4vE,cAAcM,eAAeprF,IAAUs+E,ME1IvD,MAAMuO,GAAsC,CAC1C1yF,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cCGvC,MAAM2pC,GAAe,CACnB,yDACA,GACA,8CACA,gDACA,cAGIC,GAAe,CACnB,yCACA,8CACA,GACA,gDACA,6CACA,iBAGIC,GACO,GADPA,GAEa,IAgBZ,SAASC,GACdvmC,EACAwmC,EACApvF,EACAwlD,GAGC,IAFDp/C,EAAa,uDAAG,GAChBC,EAAc,uDAAG,GAEjB,MAAMilD,EAAO,IAAIpG,OAAOC,YAAYgE,UAAUP,EAAO5oD,EAAGwlD,EAAGp/C,EAAOC,EAAQ,EAAG,GACvE2pE,EAAqB,MAAbof,EAAmBJ,GAAeC,GAEhD3jC,EAAKqK,eAAe,CAAEC,eAAe,IACrCtK,EAAKmM,YAAYvS,OAAOqR,MAAMC,OAAOC,uBAAuB,IAAM44B,GAAUzmC,EAAOonB,KAEnFpnB,EAAMgL,kBAAkBC,WAAWpD,GAAMa,GAAIhG,GAW/Cl4B,eAAei8D,GAAUzmC,EAAsBonB,GAE7C,MAAMsf,EAAe98B,GAAY5J,GAAO+M,iBAAiBrM,SAAS,GAE5DimC,EAAWtnC,GAAkB,CACjChB,WAAY+oB,EAAMjuE,OAClBmmD,SAAU,EACVC,SAAU+mC,KAINp4B,EAAa,CAAE92D,EAAGylD,GAAazlD,EAAGwlD,EAAG,EAAGkE,KAAM,GAAKC,KAAM,IACzD6lC,EAAY/pC,GAAaD,EAAIwqB,EAAMjuE,OAASmtF,GAA4B,GAE9EtmC,EAAMgL,kBAAkBC,WAAWpD,GAAMc,cAAe+9B,GACxD1mC,EAAM3yC,IAAIq8C,MAAMF,GAAO,CAACk9B,GAAetpE,GAAU0+B,eAGjDuH,GAAkBC,cAAc6H,kBAAkBC,UAAUzE,GAAYc,YAAYh0D,WAE9Ew1C,GAAM7rB,GAAU0+B,cAGtBsrB,EAAMhtC,SAAQ,CAACrlC,EAAMuE,KACnB,MAAMutF,EDlEH,SACL7mC,EACA/8C,GAMC,IALD6jF,EAA0B,uDAAG,CAAE1vF,EAAG,EAAGwlD,EAAG,EAAGkE,KAAM,GAAKC,KAAM,IAC5D5iD,EAAsB,uDAAGgoF,GACzBY,EAAmB,uDAAG,EACtBC,EAAwB,uDAAG,EAC3BC,EAAwB,uDAAG,EAE3B,MAAMJ,EAAa,GACnB,IAAK,IAAItvF,EAAI,EAAGA,EAAIwvF,EAAaxvF,IAAK,CACpC,MAAM22D,EAAa,CACjB92D,EAAG0vF,EAAe1vF,EAAI4vF,EAAmB/zD,KAAKi0D,SAC9CtqC,EAAGkqC,EAAelqC,EAAIqqC,EAAmBh0D,KAAKi0D,SAC9CpmC,KAAMgmC,EAAehmC,KACrBC,KAAM+lC,EAAe/lC,MAEjB2yB,EAAa7yB,GAAiBb,EAAO/8C,EAAMirD,EAAY/vD,GAC7Du1E,EAAWhzB,SAAS,IAAK+zB,aAAan4B,OAAOo4B,WAAWyS,QACxDN,EAAWnsE,KAAKg5D,GAgBlB,OAbAmT,EAAWzsD,SAAQs5C,IACjB1zB,EAAMgK,OAAO38C,IAAI,CACfi8C,QAASoqB,EACTt8E,EAAGs8E,EAAWt8E,EAAI4vF,EAAmB/zD,KAAKi0D,SAC1CtqC,EAAG82B,EAAW92B,EAAIqqC,EAAmBh0D,KAAKi0D,SAC1C39B,MAAO,GACP5gB,SAAU,GACVy+C,MAAM,EACNz/B,MAAO,EACP0/B,UAAW,IAAOp0D,KAAKi0D,cAIpBL,EC+BcS,CAAuBtnC,EAAOjrD,EAAM,IAClDm5D,EACHtR,EAAG+pC,EAASrtF,GAAO,GAAKstF,IAE1BC,EAAWzsD,SAAQ3jC,GAASupD,EAAMgL,kBAAkBC,WAAWpD,GAAMc,cAAelyD,KACpF0yC,YAAW,IAAM09C,EAAWzsD,SAAQ3jC,GAASA,EAAMkzD,aAAY28B,aAG3Dr9C,GAAMq9C,IAEZ78B,GAAezJ,EAAO0mC,GCnGjB,MAAMa,GAAsB,CACjCjU,YAAa,GACbkU,QAAS,KACTC,gBAAiB,EACjB5lC,MAAO,CAAEC,QAAS,KAClB4e,MAAO,CAAEmO,OAAQ,IAAK1sB,OAAQ,IAAKC,OAAQvF,GAAaD,EAAI,GAAI+F,IAAK,KACrE+kC,UAAW,CAAElqF,MAAO,KACpBmqF,OAAQ,CAAE7lC,QAAyB,KAAfnF,GAAWvlD,GAC/BwwF,iBAAkB,CAAExwF,EAAG,GAAIwlD,EAAG,EAAGkE,KAAM,EAAKC,KAAM,KAGvC8mC,GAAwC,CACnDp0F,IAAK2nD,GAAWM,gBAAgBjoD,IAChCkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWyE,YAG1B6mC,GAAyB,CACpCpoC,WAAY,UACZC,SAAU,OACVh/C,KAAMm8C,GAAME,UACZX,MAAO,SACPuD,SAAU,CAAEpiD,MAAO+pF,GAAoB7mB,MAAM/d,IAAM,KAGxColC,GAAuB,CAClCroC,WAAY,UACZC,SAAU,OACVh/C,KAAMm8C,GAAME,UACZX,MAAO,OACPuD,SAAU,CAAEpiD,MAAO+pF,GAAoBG,UAAUlqF,MAAQ,KAG9CwqF,GAAqB,CAChCtoC,WAAY,UACZC,SAAU,OACVh/C,KAAMm8C,GAAMG,SACZZ,MAAO,OACPuD,SAAU,CAAEpiD,MAAO+pF,GAAoBG,UAAUlqF,MAAQ,KAG9CyqF,GAAsB,CACjCvoC,WAAY,UACZC,SAAU,OACVh/C,KAAMm8C,GAAME,UACZX,MAAO,OACPuD,SAAU,CAAEpiD,MAAO+pF,GAAoBG,UAAUlqF,MAAQ,KCzB3D,MAAM0qF,WAAmB5rC,OAAO4jC,MAY9Bv7C,cACEC,MAAM,cAAc,KAZfy7C,kBAAY,OACZ3K,kBAAY,OAEXyS,oBAAc,OACdC,qBAAe,OAEfC,kBAAY,OACZC,mBAAa,OACbC,eAAS,OACTC,iBAAW,OA0RZh1B,oBAAsB,IAAMnQ,GAAkBC,cAAckQ,sBAAsB,KAClFgE,gBAAkB,IAAMtO,GAAU10C,KAAKkhE,cAAc,KACrD1qB,gBAAkB,IAAM9B,GAAU10C,KAAK6rE,cAxR5Ch9B,GAAkBC,cAAcy+B,mBAAmBvtE,MAEnDA,KAAK6zE,cAAe,EACpB7zE,KAAK8zE,eAAgB,EACrB9zE,KAAK+zE,UAAY,EACjB/zE,KAAKg0E,YAAc,EAGd94D,OACLlb,KAAK6rE,aAAe,IAAIjO,GAAiB59D,MACzCA,KAAKkhE,aAAe,IAAInE,GAAiB/8D,MAGpCi3B,UACL8gC,GAAiB/3D,MAGnB,eAGE,MAAMi0E,EAAoBj0E,KAAKg/C,sBAAsBl4B,kBAAkBniC,OACjEuvF,EAAoBl0E,KAAKg/C,sBAAsB8uB,kBAAkBnpF,OACvEqb,KAAKg0E,YACHv1D,KAAK2rB,KACH3rB,KAAKpgB,IAAI41E,EAAmBC,GAAqBnB,GAAoBE,iBACnEF,GAAoB7mB,MAAMmO,OAGhCr6D,KAAK+zE,UAAY/zE,KAAKg0E,YAAc7rC,GAAWvlD,EAAI,EAAIod,KAAKg0E,YAAc7rC,GAAWvlD,EACrFod,KAAKm0E,mBACLn0E,KAAKo0E,eAELrC,GAAiB/xE,KAAM,IAAoB,IAAfmoC,GAAWvlD,EAAyB,IAAfulD,GAAWC,GAGvDisC,SACL,IAAKr0E,KAAK2zE,iBAAmB3zE,KAAK4zE,gBAAiB,OAGnD,IAAIU,EAAUt0E,KAAK4zE,gBAAgBhxF,EAC/Bod,KAAK8zE,cACPQ,GAAWvB,GAAoBjU,YACtB9+D,KAAK6zE,eACdS,GAAWvB,GAAoBjU,aAEjCwV,EAAUlgC,GAAYkgC,GAAUt0E,KAAK+zE,UAAW,GAGhD/zE,KAAK2zE,eAAeY,eAAiBD,EACrCt0E,KAAK4zE,gBAAgBhxF,EAAI0xF,EAOnBH,mBACFn0E,KAAK2zE,gBAAgB3zE,KAAK2zE,eAAex+B,UAE7Cn1C,KAAK2zE,eAAiB,IAAI7rC,OAAOC,YAAYysC,WAC3Cx0E,KACA,EACA,EACA+yE,GAAoBC,QACpBD,GAAoBC,QACpB9jC,GAAY2B,iBAAiB5xD,KAC7BgtD,UAAU,EAAG,KACfjsC,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAYvzC,KAAK2zE,gBAGzD,MAAMc,EAAU,CAAC,eAAgB,gBAC3BrjB,EAAYznB,GAAmB,CACnCjhD,UAAWghD,GAAUgyB,OACrB7xB,WAAY4qC,EAAQ9vF,SAEtB8vF,EAAQ7uD,SAAQ,CAACutD,EAAQruF,KACvB,MAAM4vF,EAAa10E,KAAK20E,aAAaxB,EAAQ/hB,EAAUtsE,GAAO,IAC9Dkb,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAIwgC,MAG9C,MAAME,EAAYn7B,GAAaz5C,KAAM,CACnC+sC,SAAUmC,GAAYqC,mBAAmBtyD,IACzC26D,OAAQ,IAAO55C,KAAK6zE,cAAe,EACnCh6B,KAAM,IAAO75C,KAAK6zE,cAAe,EACjC95B,MAAO,IAAO/5C,KAAK6zE,cAAe,IACjCn9B,YAAYrO,GAAazlD,EAAImwF,GAAoB1lC,MAAMC,QAASjF,GAAaD,GAE1EysC,EAAap7B,GAAaz5C,KAAM,CACpC+sC,SAAUmC,GAAYqC,mBAAmBtyD,IACzC26D,OAAQ,IAAO55C,KAAK8zE,eAAgB,EACpCj6B,KAAM,IAAO75C,KAAK8zE,eAAgB,EAClC/5B,MAAO,IAAO/5C,KAAK8zE,eAAgB,IAElCp9B,YAAYrO,GAAazlD,EAAImwF,GAAoB1lC,MAAMC,QAASjF,GAAaD,GAC7EkO,UAAU,EAAG,GAEVwZ,EAAa,IAAImY,GAAiBjoE,MAAM,KAC5CA,KAAKo8D,UACLp8D,KAAKwrC,MAAM7gC,MAAM,eAGnB3K,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI0gC,GAC5C50E,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI2gC,GAC5C70E,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI4b,GAMtCskB,eACFp0E,KAAK4zE,iBAAiB5zE,KAAK4zE,gBAAgBz+B,UAE/Cn1C,KAAK4zE,gBAAkB,IAAI9rC,OAAOC,YAAYwD,UAAUvrC,KAAM,EAAG,GAGjE,MAAMouB,EAAepuB,KAAK80E,UAAU90E,KAAKg/C,sBAAsBl4B,mBACzDiuD,EAAkBprC,GAAmB,CACzCjhD,UAAWghD,GAAUgyB,OACrB7xB,WAAYzb,EAAazpC,OACzBqlD,aAAc+oC,GAAoBE,gBAClChpC,kBAAkB,EAClBH,UAAW9pC,KAAKg0E,YAChBjqC,UAAWgpC,GAAoB7mB,MAAMte,SAIvC5tC,KAAK4zE,gBAAgB/6E,IACnBu1B,EAAazrC,KAAI,CAACy2B,EAAat0B,IAC7Bkb,KAAKg1E,YACH57D,EACA27D,EAAgBjwF,GAAO,GACvBiwF,EAAgBjwF,GAAO,GAAKiuF,GAAoB7mB,MAAMve,OAAStF,GAAaD,MAMlF,MAAMgoC,EAAepwE,KAAK80E,UAAU90E,KAAKg/C,sBAAsB8uB,mBACzDmH,EAAkBtrC,GAAmB,CACzCjhD,UAAWghD,GAAUgyB,OACrB7xB,WAAYumC,EAAazrF,OACzBqlD,aAAc+oC,GAAoBE,gBAClChpC,kBAAkB,EAClBH,UAAW9pC,KAAKg0E,YAChBjqC,UAAWgpC,GAAoB7mB,MAAMte,SAIvC5tC,KAAK4zE,gBAAgB/6E,IACnBu3E,EAAaztF,KAAI,CAACuyF,EAAapwF,IAC7Bkb,KAAKg1E,YACHE,EACAD,EAAgBnwF,GAAO,GACvBmwF,EAAgBnwF,GAAO,GAAKiuF,GAAoB7mB,MAAMve,WAK5D3tC,KAAKw2C,kBAAkBC,WAAWpD,GAAMI,QAASzzC,KAAK4zE,iBAOhDkB,UAAU3yF,GAEhB,OADmBqsD,GAAcrsD,GAa3B6yF,YAAY9oB,EAAsBc,EAAcC,GACtD,MAAMkoB,EAAY,IAAIrtC,OAAOC,YAAYwD,UAAUvrC,KAAMgtD,EAAMC,GAE/D,IAAInE,EACJ,GAAIoD,EAAMnf,WAAankC,GAAU4+B,kBAAmB,CAElDshB,EAAQ,IAAIhhB,OAAOC,YAAYgE,UAC7B/rC,KACA,EACA,EACA+yE,GAAoB7mB,MAAM/d,IAC1B4kC,GAAoB7mB,MAAM/d,IAC1B7E,GAASR,SACT,IAEFggB,EAAMvQ,iBAEN,MAAM9pD,EAAO,IAAIq5C,OAAOC,YAAY6D,KAClC5rC,KACA,EACA,EACAksD,EAAM3lE,MACN+sF,IACArnC,UAAU,GAAK,IACjBkpC,EAAUt8E,IAAI,CAACiwD,EAAOr6D,SAEtBq6D,EAAQ,IAAIhhB,OAAOC,YAAYsO,OAAOr2C,KAAM,EAAG,EAAGksD,EAAMnf,UAAUd,UAAU,IAC5Ewe,GAAgB3B,EAAOiqB,GAAoB7mB,MAAM/d,IAAK4kC,GAAoB7mB,MAAM/d,KAChF2a,EAAMvQ,eAAe,CAAEE,cAAc,EAAMD,eAAe,IAE1D28B,EAAUt8E,IAAIiwD,GAIhB,MAAM0D,EAAY,IAAI1kB,OAAOC,YAAYgE,UACvC/rC,KACA,EACA,EACA+yE,GAAoB7mB,MAAM/d,IAC1B4kC,GAAoB7mB,MAAM/d,IAC1B,GACAjC,SAASggB,EAAMvoC,UAAY,EAAI,IACjCwxD,EAAUt8E,IAAI2zD,GAGd,MAAMX,ECrPgC,EAACrgB,EAAqB0gB,KAC9D,MAAMkpB,EAAiB,IAAIttC,OAAOC,YAAYwD,UAAUC,EAAO,EAAG,GAE5D6pC,EAAa,IAAIvtC,OAAOC,YAAY6D,KAAKJ,EAAO,GAAI,GAAI0gB,EAAM3lE,MAAOgtF,IACrE+B,EAAgB,IAAIxtC,OAAOC,YAAY6D,KAC3CJ,EACA,GACA6pC,EAAWrpC,YAAY5kD,OAAS,GAChC8kE,EAAMnf,SACNymC,IAEI+B,EAAY,IAAIztC,OAAOC,YAAY6D,KACvCJ,EACA,GACA8pC,EAActpC,YAAY5kD,OAAS,GACnC8kE,EAAMljD,YACNyqE,IAGI3nC,EAAc,IAAIhE,OAAOC,YAAYgE,UACzCP,EACA,EACA,EACAunC,GAAoBG,UAAUlqF,MAC9BusF,EAAUvpC,YAAY5kD,OAAS,GAC/BkiD,GAASR,UAERmD,UAAU,EAAK,GACfC,SAAS,IAENspC,EAAiB,IAAI1tC,OAAOC,YAAYsO,OAC5C7K,EACAunC,GAAoBG,UAAUlqF,MAAQ,EACtC,EACAkmD,GAAYoB,YAAYrxD,KAEpBw2F,EAAiB,IAAI3tC,OAAOC,YAAYsO,OAC5C7K,EACAunC,GAAoBG,UAAUlqF,MAAQ,EACtC8iD,EAAYE,YAAY5kD,OACxB8nD,GAAYoB,YAAYrxD,KAS1B,OANAm2F,EAAev8E,IAAI,CAACizC,EAAaupC,EAAYE,EAAWC,EAAgBC,IAGxEvpB,EAAMvoC,WAAayxD,EAAev8E,IAAIy8E,GAEtCF,EAAehpC,YAAW,GACnBgpC,GDoMaM,CAA2B11E,KAAMksD,GAgBnD,OAfApD,EAAMzO,YAAYvS,OAAOqR,MAAMC,OAAOkB,yBAAyB,IAC7DuR,EAAUzf,YAAW,KAEvB0c,EAAMzO,YAAYvS,OAAOqR,MAAMC,OAAOmB,wBAAwB,IAC5DsR,EAAUzf,YAAW,KAEvB0c,EAAMzO,YACJvS,OAAOqR,MAAMC,OAAOqB,yBACnBC,IACCmR,EAAUjpE,EAAI83D,EAAQ93D,EAAI,GAC1BipE,EAAUzjB,EAAIsS,EAAQtS,EAAI,MAI9BpoC,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI2X,GACrCspB,EAMD/Y,UACNp8D,KAAKgjD,kBAAkB2Z,iBACvB38D,KAAKw2C,kBAAkBomB,iBAYjB+X,aAAalmF,EAAcw+D,GACjC,MAAM0oB,EAAkB,IAAI7tC,OAAOC,YAAYwD,UAAUvrC,KAAM,EAAGitD,GAC5D2oB,EAAW,IAAI9tC,OAAOC,YAAYsO,OACtCr2C,KACA+yE,GAAoBI,OAAO7lC,QAC3B,EACA4B,GAAY0B,WAAW3xD,KAEnB42F,EAAaxpC,GACjBrsC,KACAvR,EACAskF,GAAoBK,iBACpBC,IAGF,OADAsC,EAAgB98E,IAAI,CAAC+8E,EAAUC,IACxBF,GAQIjC,UE/TR,MAAMoC,GAAmB,CAC9BznC,cAAe,CAAEzrD,EAAGylD,GAAazlD,EAAI,IAAKwlD,EAAG,EAAGkE,KAAM,GAAKC,KAAM,IACjEwpC,kBAAmB,CAAEnzF,EAAGylD,GAAazlD,EAAI,IAAKwlD,EAAG,EAAGkE,KAAM,GAAKC,KAAM,IACrEttD,IAAK,CAAE0uD,OAAyB,GAAjBtF,GAAaD,EAAS2S,UAAW,KAChDt3D,KAAM,CAAEb,EAAGylD,GAAazlD,EAAI,MAGjBozF,GAA4B,CACvC/2F,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAG1BguC,GAAgC,CAC3Ch3F,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cCLvC,MAAMiuC,WAAiBpuC,OAAO4jC,MAI5Bv7C,cACEC,MAAM,YAAY,KAJby7C,kBAAY,OACZ3K,kBAAY,OAuHZle,gBAAkB,IAAMtO,GAAU10C,KAAKkhE,cAAc,KACrD1qB,gBAAkB,IAAM9B,GAAU10C,KAAK6rE,cAlHvC3wD,OACLlb,KAAK6rE,aAAe,IAAIjO,GAAiB59D,MACzCA,KAAKkhE,aAAe,IAAInE,GAAiB/8D,MAGpCthB,SACLshB,KAAKm0E,mBACLn0E,KAAKm2E,iBAMChC,mBACN,MAAMx5D,EAAa,IAAImtB,OAAOC,YAAYqH,MACxCpvC,KACAqoC,GAAazlD,EACbylD,GAAaD,EACb8G,GAAYC,YAAYlwD,KAEpBizF,EAAe,IAAIpqC,OAAOC,YAAYgE,UAC1C/rC,KACAqoC,GAAazlD,EACbylD,GAAaD,EACbD,GAAWvlD,EACXulD,GAAWC,EACX,GACA8D,SAAS,IACXlsC,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAY54B,GACpD3a,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAY2+B,GAM9CiE,iBACN,MAAMC,EAAoB,IAAItuC,OAAOC,YAAYwD,UAAUvrC,KAAM,EAAG,GAE9Dq2E,EAAWr2E,KAAKs2E,cAChBC,EAAmB1rC,GAAkB,CACzChB,WAAYwsC,EAAS1xF,OACrBmmD,SAAU,EACVC,SAAU+qC,GAAiB72F,IAAI87D,YAGjCq7B,EAAkBv9E,IAChBw9E,EAAS1zF,KAAI,CAAC6zF,EAAS1xF,IACrBkb,KAAKy2E,cACHD,EAAQv3F,IACRu3F,EAAQ/nF,KACR8nF,EAAiBzxF,GAAO,GACxByxF,EAAiBzxF,GAAO,GAAKgxF,GAAiB72F,IAAI0uD,WAIxD,MAAMmiB,EAAa,IAAImY,GAAiBjoE,MAAM,KAC5CA,KAAKw2C,kBAAkBomB,iBACvB58D,KAAKwrC,MAAM7gC,MAAM,eAGnB3K,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAIkiC,GAC5Cp2E,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI4b,GAMtCwmB,cACN,MAAO,CACL,CACEr3F,IAAK,MACLwP,KAAM,eAER,CACExP,IAAK,MACLwP,KAAM,cAcJgoF,cAAcx3F,EAAay3F,EAAc1pB,EAAcC,GAC7D,MAAM0pB,EAAmB,IAAI7uC,OAAOC,YAAYwD,UAAUvrC,KAAMgtD,EAAMC,GAGhE2pB,EAAU,IAAI9uC,OAAOC,YAAYsO,OACrCr2C,KACA81E,GAAiBryF,KAAKb,EACtB,EACAssD,GAAY2C,mBAAmB5yD,KAEjC,GACO,QADCA,EAEJ23F,EAAQ1M,WAAWh7B,GAAY4C,gBAAgB7yD,KAMnD,MAAM43F,EAAUxqC,GAAiBrsC,KAAM/gB,EAAK62F,GAAiBznC,cAAe2nC,IACtEc,EAAUzqC,GAAiBrsC,KAAM02E,EAAMZ,GAAiBC,kBAAmBE,IAGjF,OADAU,EAAiB99E,IAAI,CAAC+9E,EAASC,EAASC,IACjCH,GAMIT,UCxHR,MAAMzH,GAAY,CAACjjC,EAAqBuB,EAAoBC,IACjE,IAAI90C,SAAkBC,IACqB,cAArCqzC,EAAMurC,SAASv1F,IAAIurD,GAAU9tD,IAC/BkZ,EAAQ40C,IAERvB,EAAM2sB,KAAKrP,MAAM/b,EAAUC,GAC3BxB,EAAM2sB,KAAK6e,KAAM,sBAAqBjqC,IAAY50C,GAClDqzC,EAAM2sB,KAAK6e,KAAM,YAAY7+E,GAC7BqzC,EAAM2sB,KAAKxtD,YAYJssE,GAAW,CAACzrC,EAAqBuB,EAAoBC,IAChE,IAAI90C,SAAkBC,IAChBqzC,EAAM0rC,MAAMzoF,KAAK0oF,OAAOpqC,GAC1B50C,EAAQ40C,IAERvB,EAAM2sB,KAAK1pE,KAAKs+C,EAAUC,GAC1BxB,EAAM2sB,KAAK6e,KAAM,qBAAoBjqC,IAAY50C,GACjDqzC,EAAM2sB,KAAKxtD,YC3CJysE,GAAqC,CAChDn4F,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAG1BovC,GAAqC,CAChDp4F,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAG1BqvC,GAAmC,CAC9Cr4F,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cA6CxBsvC,OAhCO,CACpBlqC,MAAO,CAAEC,QAAS,KAClB4rB,QAAS,CAAE1J,MAAO,KAClBnnD,YAAa,CAAEilC,QAAS,IAAKW,QAAS,IACtCupC,WAAY,CAAElqC,QAAS,GAAIW,QAAS,IACpChsD,MAAO,CAAEqrD,QAAS,GAAkBW,SAAS,GAC7C6wB,YAAa,IACb2Y,gBAAiB,CAAE70F,EAAG,EAAGwlD,GAAI,IAAKkE,KAAM,GAAKC,KAAM,IACnDgC,gBAAiB,CAAE3rD,EAAG,EAAGwlD,GAAI,GAAIkE,KAAM,GAAKC,KAAM,IAClDmrC,qBAAsB,CAAE90F,EAAGylD,GAAazlD,EAAGwlD,EAAGD,GAAWC,EAAI,GAAIkE,KAAM,GAAKC,KAAM,IAClForC,UAAW,CACT3uF,MAAO4uF,IACP3uF,OAAQ4uF,KAEVC,WAAY,CACVl1F,EArBgB,GAsBhBwlD,EArBgB,IAuBlB2vC,aAAc,CACZ3vC,EAAG,GACHn/C,OAAQ,GACRwF,KAAM,qBAERssC,KAAM,CACJi9C,WA3Be,EA4BfC,WA3Be,EA4BfC,YAAaF,EACbG,SAAU,GACVC,SAAU,KC1DP,MAAMC,GAAazpD,GAAiBylB,GAAU,YAAWzlB,KAAQ,GAElE0pD,GAAa,CACjBC,kBAAmB,CAAEt5F,IAAK,eAAgB2vC,KAAMypD,GAAU,0BAC1DG,cAAe,CAAEv5F,IAAK,iBAAkB2vC,KAAMypD,GAAU,sBACxDI,mBAAoB,CAAEx5F,IAAK,oBAAqB2vC,KAAMypD,GAAU,4BAGrDK,GAAiB,CAC5BH,kBAAmB,CAAEt5F,IAAK,oBAAqB2vC,KAAM,0CACrD4pD,cAAe,CAAEv5F,IAAK,sBAAuB2vC,KAAM,sCACnD6pD,mBAAoB,CAClBx5F,IAAK,yBACL2vC,KAAM,4CAIK0pD,UCyIAK,OAjIf,MAYExoD,cAAe,KAXPgyB,iBAAW,OACXy2B,eAAS,OACTC,eAAS,OACTC,eAAS,OACTvvB,aAAO,OACPqE,mBAAa,OACbqB,gBAAU,OACV8pB,aAAO,OACPC,sBAAgB,OAChBC,+BAAyB,OAqG1B98B,gBAAmB8pB,GACxBvxB,GAAU10C,KAAK64E,UAAUr3F,IAAIykF,GAAS,YAAWA,oBAAwB,KAEpEzjB,cAAiBvjE,GACtBy1D,GAAU10C,KAAK44E,UAAUp3F,IAAIvC,GAAO,SAAQA,gBAtG5C+gB,KAAKmiD,YAAc,GACnBniD,KAAK44E,UAAY,IAAIhwB,IAErB5oD,KAAK64E,UAAY,IAAIjwB,IACrB5oD,KAAK84E,UAAY,IAAIlwB,IACrB5oD,KAAKupD,QAAU,IAAIX,IACnB5oD,KAAK4tD,cAAgB,IAAIhF,IACzB5oD,KAAKivD,WAAa,IAAIrG,IACtB5oD,KAAK+4E,QAAU,IAAInwB,IAEnB5oD,KAAKg5E,iBAAmB,GACxBh5E,KAAKi5E,0BAA4B,GAG5BC,cAAcC,GACnBn5E,KAAKmiD,YAAYj8C,KAAKizE,GAGjBC,YAAYrsC,EAAoBszB,GACrCrgE,KAAK44E,UAAU5uB,IAAIjd,EAAUszB,GAGxBD,eACL,OAAOpgE,KAAK44E,UAGPS,YAAYj9B,EAAwB/jB,GACzCr4B,KAAK64E,UAAU7uB,IAAI5N,EAAY/jB,GAG1BihD,WAAWvzF,EAAgB+/E,GAChC9lE,KAAKm8C,gBAAgBp2D,GAAI+/E,MAAQ,IAAIzmE,IAAIymE,GAGpCyT,kBAAkBxzF,EAAgBqkF,GACvCpqE,KAAKm8C,gBAAgBp2D,GAAIqkF,WAAa,IAAI/qE,IAAI+qE,GAGzCoP,kBAAkBzzF,GACvB,OAAOia,KAAKm8C,gBAAgBp2D,GAAIqkF,WAG3BqP,oBAAoBz5B,GACzBhgD,KAAKg5E,iBAAmBh5B,EAGnB05B,6BAA6B15B,GAClChgD,KAAKi5E,0BAA4Bj5B,EAG5BgvB,sBACL,OAAOhvE,KAAKg5E,iBAGPtJ,+BACL,OAAO1vE,KAAKi5E,0BAGPjT,eACL,OAAOhmE,KAAK64E,UAGPh0B,mBACL,OAAO7kD,KAAKupD,QAGPvE,iBACL,OAAOhlD,KAAK4tD,cAGPrJ,iBACL,OAAOvkD,KAAK84E,UAGPr0B,kBACL,OAAOzkD,KAAKivD,WAGPtK,eACL,OAAO3kD,KAAK+4E,QAGPvK,iBACL,OAAOxuE,KAAKmiD,YAGP4jB,aAAa9oB,EAA4BI,EAAgBvnC,GAC9D9V,KAAKi9C,GAAc+M,IAAI3M,EAAQvnC,GAG1B6jE,kBAAkB1T,EAAmBhpB,EAA4BI,GACtEr9C,KAAKm8C,gBAAgB8pB,GAAOhpB,GAAcpkD,IAAIwkD,GAGzCu8B,aAAa3T,EAAmBvkB,GACrC1hD,KAAKm8C,gBAAgB8pB,GAAO6I,OAASptB,EAShCojB,iBACL,OAAOpsD,MAAM81C,KAAKxuD,KAAK64E,UAAU12F,QAG5BsgE,kBAAkB18D,GAAsB,IAAD,IAC5C,OAAO2uD,IACe,QAApB,EAAA10C,KAAKupD,QAAQ/nE,IAAIuE,UAAG,aAApB,EAAsBgnD,YAAkC,QAA1B,EAAI/sC,KAAK64E,UAAUr3F,IAAIuE,UAAG,aAAtB,EAAwBgnD,UACzD,MAAKhnD,kBC7DG8zF,OAnFf,MAKE1pD,cAAe,KAJP+zC,eAAS,OACT4V,0BAAoB,OACpBC,8BAAwB,EAG9B/5E,KAAKkkE,UAAY,IAAItb,IACrB5oD,KAAK85E,qBAAuB,EAC5B95E,KAAK+5E,yBAA2B,EAS3B5U,aAAalmF,EAAa4V,GAC/B,MAAMmlF,EAAYh6E,KAAKkkE,UAAU1iF,IAAIvC,GACrC+gB,KAAKkkE,UAAUla,IAAI/qE,EAAK4V,QAEN1O,IAAd6zF,GAA2BA,IAAcnlF,GAC3CmL,KAAK+5E,2BASFE,aAAah7F,GAClB+gB,KAAKkkE,UAAUla,IAAI/qE,GAAK,GACxB+gB,KAAK85E,uBAQAI,cAAc/3F,GACnBA,EAAKyjC,SAAQ3mC,GAAO+gB,KAAKi6E,aAAah7F,KAMjCknF,gBACL,OAAOnmE,KAAK+5E,0BAA4B/5E,KAAK85E,qBASxC1T,kBAAkBnnF,GACvB,MAAMk7F,EAAWn6E,KAAKkkE,UAAU1iF,IAAIvC,GACpC,QAAiBkH,IAAbg0F,EACF,MAAM,IAAIj6F,MAAO,iDAAgDjB,MAEnE,OAAOk7F,EAMF7T,gBACL,OAAOtmE,KAAKkkE,UAQPkW,cAAclW,GACnBlkE,KAAKkkE,UAAYA,IC6CNmW,OA1Hf,MAIElqD,cAAe,KAHP00C,WAAK,OACLyV,iBAAW,EAGjBt6E,KAAK6kE,MAAQ,IAAIjc,IACjB5oD,KAAKs6E,YAAc,IAAI1xB,IAUlB0c,QAAQrmF,EAAa4V,GAC1BmL,KAAK6kE,MAAM7a,IAAI/qE,EAAK4V,GAQfgqD,SAAS5/D,GACd,MAAMs7F,EAAav6E,KAAKs6E,YAAY94F,IAAIvC,GAGxC,QAAmBkH,IAAfo0F,EAA0B,CAC5B,MAAMC,EAAwB,IACzBD,EACHE,SAAS,GAEXz6E,KAAKs6E,YAAYtwB,IAAI/qE,EAAKu7F,IASvBE,QAAQC,GACb,MAAM17F,EAAM07F,EAAQC,OACpB56E,KAAK6kE,MAAM7a,IAAI/qE,GAAK,GACpB+gB,KAAKs6E,YAAYtwB,IAAI/qE,EAAK07F,GAQrBE,SAASC,GACdA,EAASl1D,SAAQy/C,GAAQrlE,KAAK06E,QAAQrV,KASjCgB,aAAapnF,GAClB,MAAM87F,EAAY/6E,KAAK6kE,MAAMrjF,IAAIvC,GACjC,QAAkBkH,IAAd40F,EACF,MAAM,IAAI76F,MAAO,4CAA2CjB,MAE9D,OAAO87F,EASFC,cAAc/7F,GACnB,MAAMg8F,EAAaj7E,KAAKs6E,YAAY94F,IAAIvC,GACxC,QAAmBkH,IAAf80F,EACF,MAAM,IAAI/6F,MAAO,4CAA2CjB,MAE9D,OAAOg8F,EAMF1U,cACL,OAAOvmE,KAAK6kE,MAMP2B,wBACL,MAAM9C,EAAiC,IAAIhrD,MAC3C,IAAK,MAAMz5B,KAAO+gB,KAAK6kE,MAAM1iF,OAAQ,CAAC,IAAD,GAC9B6d,KAAK6kE,MAAMrjF,IAAIvC,IAAiC,QAA7B,EAAI+gB,KAAKs6E,YAAY94F,IAAIvC,UAAI,OAAzB,EAA2Bw7F,SACrD/W,EAAgBx9D,KAAKjnB,GAGzB,OAAOykF,EAMF5kB,wBACL,MAAMo8B,EAA+C,IAAIxiE,MACzD,IAAK,MAAMz5B,KAAO+gB,KAAK6kE,MAAM1iF,OAAQ,CACnC,MAAM44F,EAAY/6E,KAAKqmE,aAAapnF,GAC9Bg8F,EAAaj7E,KAAKg7E,cAAc/7F,QACpBkH,IAAd40F,QAA0C50F,IAAf80F,GAA4BA,EAAWR,SACpES,EAAeh1E,KAAK,CAAC+0E,EAAYF,IAGrC,OAAOG,ICxHX,MAAMC,GAAkB,CACtBC,MAAO1oB,GAAS0P,MAChBiZ,OAAQ3oB,GAAS2P,OACjBt0D,MAAO2kD,GAAS4P,OAGZgZ,GAAsB,CAC1B3pD,KAAM8gC,GAAa7D,KACnB2sB,OAAQ9oB,GAAa5D,OACrB3nE,MAAOurE,GAAa3D,OAGhB0sB,GAAsB,CAC1BC,KAAM3S,GAASI,KACfwS,QAAS5S,GAASG,QAClB0S,KAAM7S,GAASE,KACf4S,KAAM9S,GAAStF,MAGXqY,GAAsB,CAC1BzR,WAAYhlB,GAAaglB,WACzBX,WAAYrkB,GAAaqkB,WACzBlgB,QAASnE,GAAamE,QACtBqE,cAAexI,GAAawI,cAC5BqB,WAAY7J,GAAa6J,WACzB8pB,QAAS3zB,GAAa2zB,QACtBjK,OAAQ1pB,GAAa0pB,OACrBsB,aAAchrB,GAAagrB,cAGvB0L,GAAwB,CAC5BC,eAAgB52B,GAAesB,cAC/Bu1B,iBAAkB72B,GAAeuB,gBACjCu1B,mBAAoB92B,GAAe4B,kBACnCm1B,mBAAoB/2B,GAAe8B,kBACnCk1B,cAAeh3B,GAAe+B,aAC9Bk1B,UAAWj3B,GAAegC,SAC1Bk1B,SAAUl3B,GAAekB,QACzBi2B,YAAan3B,GAAemB,WAC5Bi2B,kBAAmBp3B,GAAewB,iBAClC61B,gBAAiBr3B,GAAeyB,eAChC61B,eAAgBt3B,GAAe0B,cAC/B61B,cAAev3B,GAAeiC,aAC9Bu1B,SAAUx3B,GAAeoB,gBACzBq2B,YAAaz3B,GAAeqB,mBAC5Bq2B,UAAW13B,GAAemC,SAC1Bw1B,iBAAkB33B,GAAeqC,eACjCu1B,kBAAmB53B,GAAeoC,gBAClCy1B,SAAU73B,GAAesC,QACzBw1B,SAAU93B,GAAeuC,QACzBw1B,iBAAkB/3B,GAAe2B,gBACjCq2B,kBAAmBh4B,GAAewC,gBAClCy1B,uBAAwBj4B,GAAeyC,qBACvCy1B,yBAA0Bl4B,GAAe2C,uBACzConB,MAAO/pB,GAAe6C,OAGlBs1B,GAA8B,CAClCC,UAAWt4B,GAAiBc,eAC5By3B,SAAUv4B,GAAiBe,cAC3By3B,UAAWx4B,GAAiBa,WAGxB43B,GAA2B,CAC/BzxE,YAAai5C,GAAcj5C,YAC3BmiB,aAAc82B,GAAc92B,aAC5BgiD,aAAclrB,GAAckrB,cAYf,MAAMuN,GACnB,oBAA2Bp0C,GACzB,OAAO4xC,GAAgB5xC,IAAQmpB,GAAS2P,OAG1C,wBAA+B94B,GAC7B,OAAO+xC,GAAoB/xC,IAAQkpB,GAAa5D,OAGlD,wBAA+BtlB,GAC7B,OAAOmL,GAAU8mC,GAAoBjyC,GAAO,0BAAyBA,KAGvE,0BAAiCA,GAC/B,OAAOmL,GAAUonC,GAAsBvyC,GAAO,wBAAuBA,KAGvE,gCAAuCA,GACrC,OAAOmL,GAAU4oC,GAA4B/zC,GAAO,2BAA0BA,KAGhF,4BAAmCA,GACjC,OAAOmL,GAAUmnC,GAAoBtyC,GAAO,wBAAuBA,KAGrE,uBAA8BA,GAC5B,MAAe,UAARA,EAGT,6BAAoCA,GAClC,OAAOmL,GAAUgpC,GAAyBn0C,GAAO,2BAA0BA,MC9GxE,IAAKq0C,IAMX,SANWA,KAAc,sBAAdA,EAAc,wBAAdA,EAAc,cAAdA,EAAc,YAAdA,EAAc,YAMzB,CANWA,QAAc,KAuCX,MAAMC,GAYnB1tD,cAAe,KAXP2tD,qBAAe,OACfC,uBAAiB,OACjBC,qBAAe,OACfC,aAAe,CAErBC,GAAOC,WAAWx7F,IAAIqjF,eAEtBkY,GAAOC,WAAWx7F,IAAIyiE,GAAamE,UACnC,KACM60B,gBAAU,EAGhBp+E,KAAK89E,gBAAkB,IAAIl1B,IAC3B5oD,KAAK+9E,kBAAoB,IAAIn1B,IAC7B5oD,KAAKg+E,gBAAkB,GACvBh+E,KAAKo+E,WAAa,IAAI/+E,IAajBg/E,WAAWt4F,GAChB,GAAIia,KAAKo+E,WAAWxY,IAAI7/E,GACtB,MAAM,IAAI7F,MAAO,qBAAoB6F,KAEvCia,KAAKo+E,WAAWvlF,IAAI9S,GAOfu4F,mBACLt+E,KAAKu+E,uBACLv+E,KAAKw+E,0BACLx+E,KAAKy+E,wBAeAC,eAAezhC,EAA4BI,EAAgB6I,GAC5DjJ,IAAiBmI,GAAaqkB,WAChCxsB,EAAemI,GAAa0zB,UACnB77B,IAAiBmI,GAAaglB,aACvCntB,EAAemI,GAAayzB,WAEzB74E,KAAK89E,gBAAgBt8F,IAAIy7D,IAC5Bj9C,KAAK89E,gBAAgB9zB,IAAI/M,EAAc,IAEzCj9C,KAAK89E,gBAAgBt8F,IAAIy7D,GAAe/2C,KAAK,CAAEm3C,SAAQ6I,eAOjDq4B,uBACNv+E,KAAK89E,gBAAgBl4D,SACnB,CAAC+4D,EAAqC1hC,KACpC0hC,EAAiB/4D,SAASg5D,IACxB,MAAM,OAAEvhC,EAAM,WAAE6I,GAAe04B,EAC/B,IAAKV,GAAOC,WAAWx7F,IAAIs6D,GAAc2oB,IAAIvoB,GAI3C,MAHI6I,GACFlmD,KAAK6+E,qBAAqBxhC,EAAQJ,EAAciJ,GAE5C,IAAIhmE,MAAO,mBAAkBm9D,YAAiBJ,uBAevD6hC,gBAAgB7hC,EAA4B8hC,EAAmB74B,GACpE64B,EAAQn5D,SAAQy3B,GAAUr9C,KAAK0+E,eAAezhC,EAAcI,EAAQ6I,KAgB/D84B,iBAAiBC,EAAgCl5F,EAAYmgE,GAC7DlmD,KAAK+9E,kBAAkBv8F,IAAIy9F,IAC9Bj/E,KAAK+9E,kBAAkB/zB,IAAIi1B,EAAgB,IAE7Cj/E,KAAK+9E,kBAAkBv8F,IAAIy9F,GAAiB/4E,KAAK,CAAEm3C,OAAQt3D,EAAImgE,eAYzDs4B,0BACNx+E,KAAK+9E,kBAAkBn4D,SACrB,CAAC+4D,EAAqCM,KACpCN,EAAiB/4D,SAASg5D,IACxB,MAAM,OAAEvhC,EAAM,WAAE6I,GAAe04B,EAC/B,OAAQK,GACN,KAAKrB,GAAe/E,UAClBqF,GAAOC,WAAWx7F,IAAIw5D,gBAAgBkB,GACtC,MAEF,KAAKugC,GAAehZ,WAClB,QAAiEz+E,IAA7D+3F,GAAOC,WAAWvZ,WAAW0B,gBAAgB9kF,IAAI67D,GAInD,MAHI6I,GACFlmD,KAAK6+E,qBAAqBxhC,EAAQ4hC,EAAgB/4B,GAE9C,IAAIhmE,MAAO,6BAA4Bm9D,MAE/C,MAEF,KAAKugC,GAAe/Y,MAClB,QAA0D1+E,IAAtD+3F,GAAOC,WAAWtZ,MAAM0B,cAAc/kF,IAAI67D,GAI5C,MAHI6I,GACFlmD,KAAK6+E,qBAAqBxhC,EAAQ4hC,EAAgB/4B,GAE9C,IAAIhmE,MAAO,wBAAuBm9D,MAE1C,MAEF,KAAKugC,GAAesB,KAClB,MAAMC,EAAcjB,GAAOC,WAAWx7F,IACnC6rF,iBACAhnE,QACC43E,GAASA,EAAM/sC,YAAcH,GAAckB,KAAOgsC,EAAMngG,MAAQo+D,IAChE14D,OACJ,GAAoB,IAAhBw6F,EACF,MAAM,IAAIj/F,MAAO,wBAAuBm9D,MACnC,GAAI8hC,EAAc,EACvB,MAAM,IAAIj/F,MAAO,wBAAuBm9D,MAE1C,MAEF,KAAKugC,GAAeyB,KAClB,MAAMC,EAAcpB,GAAOC,WAAWx7F,IACnC6rF,iBACAhnE,QACC43E,GAASA,EAAM/sC,YAAcH,GAAcI,KAAO8sC,EAAMngG,MAAQo+D,IAChE14D,OACJ,GAAoB,IAAhB26F,EACF,MAAM,IAAIp/F,MAAO,wBAAuBm9D,MACnC,GAAIiiC,EAAc,EACvB,MAAM,IAAIp/F,MAAO,wBAAuBm9D,aAmB/CkiC,eAAeliC,EAAgB6I,GACpClmD,KAAKg+E,gBAAgB93E,KAAK,CAAEm3C,SAAQ6I,eAQ9Bu4B,wBACNz+E,KAAKg+E,gBAAgBp4D,SAASg5D,IAC5B,MAAM,OAAEvhC,EAAM,WAAE6I,GAAe04B,EAC/B,IAAIY,GAAU,EACdx/E,KAAKi+E,aAAar4D,SAAQjjC,IACpBA,EAAInB,IAAI67D,KACVmiC,GAAU,MAGTA,GACHx/E,KAAK6+E,qBAAqBxhC,EAAQ,uBAAwB6I,MAKxD24B,qBAAqBxhC,EAAgBoiC,EAAmBv5B,GAC9D,MAAM,IAAIhmE,MACP,qBAAoBu/F,uBAA+Bv5B,iBAA0B7I,kDCpQrE,MAAMqiC,GAOnB,aAAoBC,GAClB,MAAMC,EAAyC,MAAxBD,EAAiB,GACpCC,IACFD,EAAmBA,EAAiBl2C,MAAM,IAE5C,MAAOo2C,KAAqBC,GAAcntB,GAAYU,YAAYssB,EAAkB,KACpF,OAAQhC,GAAgBoC,yBAAyBF,IAC/C,KAAK56B,GAAiBc,eAEpB,OADAm4B,GAAO8B,UAAUhB,iBAAiBpB,GAAehZ,WAAYkb,EAAW,IACjE,CACL/zE,MAAOk5C,GAAiBc,eACxBH,gBAAiB,CACf7/D,GAAI+5F,EAAW,IAEjBj6B,SAAU+5B,GAGd,KAAK36B,GAAiBe,cAEpB,OADAk4B,GAAO8B,UAAUhB,iBAAiBpB,GAAe/Y,MAAOib,EAAW,IAC5D,CACL/zE,MAAOk5C,GAAiBe,cACxBJ,gBAAiB,CACf7/D,GAAI+5F,EAAW,IAEjBj6B,SAAU+5B,GAGd,KAAK36B,GAAiBa,UACpB,MAAO,CACL/5C,MAAOk5C,GAAiBa,UACxBF,gBAAiB,CACf3G,cAAe0+B,GAAgBsC,sBAAsBH,EAAW,IAChE/5F,GAAI+5F,EAAW,IAEjBj6B,SAAU+5B,GAEd,QACE,MAAM,IAAI1/F,MAAM,4CCvCT,MAAMggG,GAQnB,oBAA2BC,GACzB,OAAOA,EAAkBx9F,KAAIy9F,GAAoBpgF,KAAKqgF,YAAYD,KAUpE,mBAA0BE,GACxB,MAAOC,EAAcC,GAAsB7tB,GAAYU,YAAYitB,EAAiB,MAE9EG,EAAazgF,KAAK0gF,mBAAmBH,GAS3C,OARIC,IACFC,EAAWn7B,iBAAmBqN,GAAYU,YAAYmtB,EAAoB,OAAO79F,KAC/EsmC,GAAay2D,GAAgB10D,MAAM/B,MAIvCi1D,GAAOC,WAAWx7F,IAAIojF,aAAa3gB,GAAa2zB,QAAS0H,EAAWp4B,cAAeo4B,GAE5EA,EAAWp4B,cAapB,0BAAiCk4B,GAC/B,MAAOh0F,EAAQo0F,GAAqBhuB,GAAYU,YAAYktB,EAAc,KAC1E,IAAIK,GAAa,EACb16B,EAAa35D,EACiB,MAA9BA,EAAOA,EAAO5H,OAAS,KACzBi8F,GAAa,EACb16B,EAAaA,EAAWzc,MAAM,GAAI,IAGpC,MAAMo3C,EAAiBlD,GAAgBmD,mBAAmB56B,GACpDC,EAAewM,GAAYU,YAAYstB,EAAkBl3C,MAAM,GAAI,GAAI,KACvEs3C,EAAsB,GAE5B,OAAQF,GACN,KAAK17B,GAAe4B,kBAClBg6B,EAAeh7F,GAAKogE,EAAa,GACjC,MAEF,KAAKhB,GAAe8B,kBAClB85B,EAAeh7F,GAAKogE,EAAa,GACjC+3B,GAAO8B,UAAUhB,iBAAiBpB,GAAehZ,WAAYze,EAAa,GAAID,GAC9E,MAEF,KAAKf,GAAe+B,aAKpB,KAAK/B,GAAegC,SAClB45B,EAAeh7F,GAAKogE,EAAa,GACjC+3B,GAAO8B,UAAUhB,iBAAiBpB,GAAe/Y,MAAO1e,EAAa,GAAID,GACzE,MAEF,KAAKf,GAAe2B,gBACpB,KAAK3B,GAAewB,iBAClBo6B,EAAeh7F,GAAKogE,EAAa,GACjC+3B,GAAO8B,UAAUhB,iBAAiBpB,GAAe/E,UAAW1yB,EAAa,GAAID,GAC7E,MACF,KAAKf,GAAeyB,eAClBm6B,EAAeh7F,GAAKogE,EAAa,GACjC46B,EAAe1+B,YAAc8D,EAAa,GAC1C46B,EAAez+B,WAAa6D,EAAa,GACzC46B,EAAeC,cAAgB76B,EAAa,GAC5C+3B,GAAO8B,UAAUT,eAAep5B,EAAa,GAAID,GACjD,MACF,KAAKf,GAAe0B,cAClBk6B,EAAeh7F,GAAKogE,EAAa,GACjC+3B,GAAO8B,UAAUT,eAAep5B,EAAa,GAAID,GACjD,MACF,KAAKf,GAAeiC,aAClB25B,EAAeh7F,GAAKogE,EAAa,GACjC+3B,GAAO8B,UAAUtB,eAAet5B,GAAa0zB,UAAW3yB,EAAa,GAAID,GACzE,MAEF,KAAKf,GAAekB,QACpB,KAAKlB,GAAemB,WAClB,MAAMrJ,EAAe0gC,GAAgBsD,qBAAqB96B,EAAa,IACvE46B,EAAe9jC,aAAeA,EAE9B8jC,EAAe3kC,WAAa+J,EAAa,GACzC+3B,GAAO8B,UAAUhB,iBAAiBpB,GAAe/E,UAAW1yB,EAAa,GAAID,GAE7E66B,EAAeh7F,GAAKogE,EAAa,GACjC+3B,GAAO8B,UAAUtB,eAAezhC,EAAckJ,EAAa,GAAID,GAC/D,MAEF,KAAKf,GAAeoB,gBACpB,KAAKpB,GAAeqB,mBAClB03B,GAAO8B,UAAUhB,iBAAiBpB,GAAe/E,UAAW1yB,EAAa,GAAID,GAC7E66B,EAAe3kC,WAAa+J,EAAa,GACzC46B,EAAet4D,KAAOk1D,GAAgBuD,iBAAiB/6B,EAAa,IACpE,MAEF,KAAKhB,GAAemC,SAClB42B,GAAO8B,UAAUtB,eAAet5B,GAAamE,QAASpD,EAAa,GAAID,GACvE66B,EAAeh7F,GAAKogE,EAAa,GACjC46B,EAAepiG,SAAWg/F,GAAgBwD,iBAAiBh7B,EAAa,IACxEA,EAAa,KAAO46B,EAAe5sD,SAAuC,IAA5BqV,SAAS2c,EAAa,KACpEA,EAAa,KAAO46B,EAAe57F,KAAOw4F,GAAgByD,aAAaj7B,EAAa,KACpF,MAEF,KAAKhB,GAAeoC,gBAMpB,KAAKpC,GAAeqC,eAClB02B,GAAO8B,UAAUtB,eAAet5B,GAAamE,QAASpD,EAAa,GAAID,GACvE66B,EAAeh7F,GAAKogE,EAAa,GACjC46B,EAAetjC,OAASkgC,GAAgB0D,gBAAgBl7B,EAAa,IACrE,MAEF,KAAKhB,GAAesC,QAClBs5B,EAAeh7F,GAAKogE,EAAa,GACjC+3B,GAAO8B,UAAUhB,iBAAiBpB,GAAesB,KAAM/4B,EAAa,GAAID,GACxE,MAEF,KAAKf,GAAeuC,QAClBq5B,EAAeh7F,GAAKogE,EAAa,GACjC+3B,GAAO8B,UAAUhB,iBAAiBpB,GAAeyB,KAAMl5B,EAAa,GAAID,GACxE,MAEF,KAAKf,GAAewC,gBAClBo5B,EAAe7hG,KAAOy+F,GAAgB0D,gBAAgBl7B,EAAa,IACnE,MAEF,KAAKhB,GAAeuB,gBAClBw3B,GAAO8B,UAAUtB,eAAet5B,GAAa6J,WAAY9I,EAAa,GAAID,GAC1E66B,EAAeh7F,GAAKogE,EAAa,GACjC46B,EAAe18B,WAAa8B,EAAa,GACzC,MAEF,KAAKhB,GAAesB,cAClBy3B,GAAO8B,UAAUtB,eAAet5B,GAAa6J,WAAY9I,EAAa,GAAID,GAC1Eg4B,GAAO8B,UAAUhB,iBAAiBpB,GAAe/E,UAAW1yB,EAAa,GAAID,GAC7E66B,EAAeh7F,GAAKogE,EAAa,GACjC46B,EAAe3kC,WAAa+J,EAAa,GACzC46B,EAAepiG,SAAWg/F,GAAgBwD,iBAAiBh7B,EAAa,IACxE,MAEF,KAAKhB,GAAeyC,qBAClBm5B,EAAejrF,aAAeqwD,EAAa,GAC3C,MAEF,KAAKhB,GAAe6C,MAClB+4B,EAAe5sD,SAAuC,IAA5BqV,SAAS2c,EAAa,IAKpD,MAAO,CACLD,WAAY26B,EACZ16B,aAAc46B,EACdz7B,iBAAkB,GAClB+C,cALe61B,GAAOoD,mBAMtBnzB,eAAe,EACf/F,aAAcw4B,IC7LL,MAAMW,GAQnB,mBAA0Bh7F,EAAe20D,GAKvC,MAJe,CACb8b,YAAazwE,EAAM88B,MAAM,WAAW,GAAGyvC,OACvC5X,QAASA,EAAQv4D,IAAIqd,KAAKwhF,cAa9B,mBAA0BC,GACxB,MAAMxqB,EAAStE,GAAY+uB,eAAeD,EAAW,KAAM,GAC3D,MAAO,CAACxqB,EAAO,GAAGnE,OAAQmE,EAAO,GAAG5zC,MAAM,KAAK,GAAGyvC,SCrBvC,MAAM6uB,GAQnB,aAAoBvlC,EAAwBwlC,GAC1CA,EAAch8D,SAAQi8D,GACpB7hF,KAAK8hF,sBAAsB1lC,EAAYylC,KAU3C,yBAAgCh+B,EAAqBQ,GACnD,OAAOR,EAAc,IAAMQ,EAS7B,0BAAiCR,EAAqBQ,GACpD,MAAQ,YAAWR,KAAeA,KAAeQ,QAUnD,6BAAqCjI,EAAwBylC,GAC3D,MAAME,EAAmC,MAAxBF,EAAiB,GAC9BE,IACFF,EAAmBA,EAAiBp4C,MAAM,IAG5C,MAAO1jD,EAAI6e,EAAM0qD,EAAmBD,EAAiBG,GAASmD,GAAYU,YACxEwuB,EACA,KAEF3D,GAAO8B,UAAU3B,WAAWt4F,GAE5B,MAAMwpE,EAAc,IAAI3G,IAElBwG,EAAuB,CAC3BrpE,KACA6e,OACA2qD,cACAD,oBACAD,gBAAiBsuB,GAAgBwD,iBAAiB9xB,GAClDG,MAAOA,EAAQv8B,WAAWu8B,GAAS,GAIrCD,EAAYvF,IAAIsF,EAAmBtvD,KAAKgiF,kBAAkBj8F,EAAIupE,IAG9D4uB,GAAOC,WAAWx7F,IAAIy2F,YAAYp5E,KAAKgiF,kBAAkBj8F,EAAIupE,GAAoB,CAC/EljE,KAAM4iD,GAAUI,MAChBxgB,KAAM5uB,KAAKiiF,mBAAmBl8F,EAAIupE,GAClCrwE,IAAK8G,IAIPm4F,GAAOC,WAAWx7F,IAAIojF,aAAa3gB,GAAa6J,WAAYlpE,EAAIqpE,GAG5D2yB,GACF7D,GAAOC,WAAWx7F,IAAIg3F,kBAAkBv9B,EAAYgJ,GAAa6J,WAAYlpE,IC5EpE,MAAMm8F,GAQnB,aAAoBC,GAClB,MAAOvsB,EAAWvR,EAAY+9B,GAAsBzvB,GAAYU,YAC9D8uB,EAAO14C,MAAM,GACb,KAEIssB,EAAkB4nB,GAAgBwD,iBAAiBiB,GAIzD,OAFApiF,KAAKqiF,sBAAsBzsB,EAAWvR,GAE/B,CACLuR,YACAvR,aACA0R,mBAaJ,6BAAqCusB,EAAgBj+B,GACnD,GAAe,QAAXi+B,GAA+B,aAAXA,EACtB,OAEF,MAAMlzB,EAAY8uB,GAAOC,WAAWx7F,IAAI8hE,kBAAkBjjE,IAAI8gG,GAE9D,IAAKlzB,EACH,MAAM,IAAIlvE,MAAO,cAAaoiG,iBAGhC,MAAMC,EAAiBl+B,GAAc+K,EAAUE,kBAE/CF,EAAUG,YAAYvF,IACpB3F,EACAs9B,GAAgBK,kBAAkBM,EAAQj+B,GAAck+B,IAG1DrE,GAAOC,WAAWx7F,IAAIy2F,YAAYuI,GAAgBK,kBAAkBM,EAAQC,GAAiB,CAC3F3zD,KAAM+yD,GAAgBM,mBAAmBK,EAAQC,GACjDn2F,KAAM4iD,GAAUI,MAChBnwD,IAAKqjG,KC+EX,MAAME,GAAajiG,GAAiB,IAAIkiG,OAAO,YAAYC,KAAKniG,GAC1DoiG,GAAepiG,GAAiB,IAAIkiG,OAAO,mBAAmBC,KAAKniG,GACnEqiG,GAAiBriG,GAAiBA,IAAqB,OAAZA,EAAK,IAAoC,SAArBA,EAAKkpD,MAAM,EAAG,IAC7Eo5C,GAAatiG,GAAiBA,GAAoB,MAAZA,EAAK,GAC3CuiG,GAAYviG,GAAiBA,EAAKuyE,OAAOve,WAAW,WACpDwuC,GAAkBxiG,GAAiB,IAAIkiG,OAAO,YAAYC,KAAKniG,GC/ItD,MAAMyiG,GAWnB,aAAoB5mC,EAAwB6mC,EAAqB5wC,GAC/D4wC,EAAUr9D,SAAQ,CAACs9D,EAAcC,KAC/B,MAAOp9F,EAAIinD,EAAWgF,GAAU2gB,GAAYU,YAAY6vB,EAAc,KACtEhF,GAAO8B,UAAU3B,WAAWt4F,GAE5Bm4F,GAAOC,WAAWx7F,IAAIu2F,cAAc,CAClCj6F,IAAK8G,EACL6oC,KAAMoe,EACNxoB,OAAQ,CACNwtB,OAAQ/e,WAAW+e,GACnBmB,KAAMd,IAAcH,GAAckB,KAEpCf,cAGEA,IAAcH,GAAckB,KAAsB,IAAf+vC,GACrCjF,GAAOC,WAAWx7F,IAAIi3F,aAAax9B,EAAYr2D,OCdvD,MAAMm4F,GAKJ,0BAEE,OADAA,GAAOkF,cACC,UAASlF,GAAOkF,cAG1B,cACElF,GAAOkF,YAAc,EAErBlF,GAAOC,WAAa,CAClBx7F,IAAK,IAAIg2F,GACTjL,YAAa,GACb9I,WAAY,IAAIiV,GAChBhV,MAAO,IAAIwV,IAGb6D,GAAO8B,UAAY,IAAInC,GAGzB,aAAoBwF,GAAkC,yDAElDnF,GAAOhjE,OAGT,MAAMooE,EAAkB3wB,GAAY4wB,8BAA8BF,GACrC1wB,GAAY6wB,iBAAiBF,GAErC19D,SAAQ,IAAyC,IAAvCw1B,EAAQh2D,GAAyB,EAC1C,IAAhBA,EAAKT,QAAgBy2D,EAAO/0C,SAAS,KACvC63E,GAAOuF,sBAAsBroC,GAE7B8iC,GAAOwF,0BAA0BtoC,EAAQh2D,ICzClC,MASb,aAAoBg3D,EAAwBunC,GAC1C,MAAMtrD,EAAW6lD,GAAOC,WAAWx7F,IAAIw5D,gBAAgBC,GAC5BuW,GAAY6wB,iBAAiBG,GAErC/9D,SAAQ,IAAyC,IAAvCw1B,EAAQh2D,GAAyB,EACxC,IAAhBA,EAAKT,QAAgBy2D,EAAO/0C,SAAS,KACvCrG,KAAK4jF,oBAAoBvrD,EAAU+iB,GAEnCp7C,KAAK6jF,wBAAwBxrD,EAAU+iB,EAAQh2D,MAYrD,2BAAmCizC,EAAwByrD,GACzD,MAAO7kG,EAAK4V,GAAS89D,GAAYU,YAAYywB,EAAgB,KACvDC,EAAepxB,GAAYU,YAAYx+D,EAAO,KACpD,OAAQ5V,GACN,IAAK,QACH8kG,EAAan+D,SAAQ6C,IACnB,MAAMu7D,EAAWrG,GAAgBuD,iBAAiBz4D,GAClD4P,EAASytC,MAAMjtE,IAAImrF,MAErB,MACF,IAAK,MACHD,EAAan+D,SAAQq+D,IACnB/F,GAAO8B,UAAUhB,iBAAiBpB,GAAe/E,UAAWoL,GAC5D5rD,EAAS+xC,WAAWvxE,IAAIorF,MAE1B,MACF,IAAK,aACH,MAAMxa,EAAasa,EACnB7F,GAAO8B,UAAUlB,gBAAgB15B,GAAa0zB,UAAWrP,GACzDpxC,EAASoxC,WAAa,IAAIpqE,IAAIoqE,GAC9B,MACF,IAAK,UACH,MAAOya,GAAeH,EACtB,GAAIG,EAAa,CACf,MAAM33B,EAAa,WAAa23B,EAChChG,GAAOC,WAAWx7F,IAAIy2F,YAAY7sB,EAAY,CAC5CngE,KAAM4iD,GAAUI,MAChBnwD,IAAKo5C,EAAStyC,GAAK,UACnB6oC,KAAMs1D,IAER7rD,EAASk0B,WAAaA,EAExB,MACF,QACE,MAAM,IAAIrsE,MAAO,uBAAsBjB,gCAAkCo5C,EAAStyC,QAYxF,+BACEsyC,EACA8rD,EACA/+F,GAEA,OAAQ++F,GACN,IAAK,WCvFI,MAWb,aAAoB/nC,EAAwBgoC,GACjBzxB,GAAY6wB,iBAAiBY,GAErCx+D,SAAQ,IAAyC,IAAvCw1B,EAAQh2D,GAAyB,EAC1D,MAAMuvD,EAAS30C,KAAKqkF,kBAAkBjoC,EAAYhB,GAC9Ch2D,EAAKT,SACPgwD,EAAOwZ,eAAgB,EACvBxZ,EAAOqL,UAAYkgC,GAAaoE,aAAal/F,OAUnD,sBAA8Bm/F,GAC5B,OAAOA,EAQT,kBAA0BA,GACxB,OAAOA,EAcT,yBAAiCnoC,EAAwBooC,GACvD,MAAMzC,EAAgC,MAArByC,EAAc,GAC3BzC,IACFyC,EAAgBA,EAAc/6C,MAAM,IAGtC,MAAO+T,EAAU+mC,EAAW3hG,EAAGwlD,EAAGp/C,EAAOC,EAAQmD,EAAMnK,GAAS0wE,GAAYU,YAC1EmxB,EACA,KAEFtG,GAAO8B,UAAU3B,WAAW7gC,GAE5B,MAAMsjB,EAAiC,CACrC/zB,SAAU/sC,KAAKykF,eAAeF,GAC9B3hG,EAAG4mD,SAAS5mD,GACZwlD,EAAGoB,SAASpB,GACZp/C,MAAOwgD,SAASxgD,SAAU7C,EAC1B8C,OAAQugD,SAASvgD,SAAW9C,EAC5BgoE,eAAe,EACf9F,cAAe7K,GAsBjB,OAnBA0gC,GAAOC,WAAWx7F,IAAIy2F,YAAYp5E,KAAKykF,eAAeF,GAAY,CAChEn4F,KAAM4iD,GAAU5iD,IAAS4iD,GAAUI,MACnCnwD,IAAKu+D,EACL5uB,KAAM5uB,KAAK0kF,WAAWH,GACtB//D,OAAQ,CACNmgE,YAAan7C,SAASvgD,KAAY,EAClC27F,WAAYp7C,SAASxgD,KAAW,EAChCkgE,QAAS,EACTC,QAAS,EACTU,SAAUrgB,SAASvnD,GAAS,GAAK,EACjConE,SAAUpa,GAASjjB,UAIvBkyD,GAAOC,WAAWx7F,IAAIojF,aAAa3gB,GAAamE,QAAS/L,EAAUsjB,GAC/DihB,GACF7D,GAAOC,WAAWx7F,IAAIg3F,kBAAkBv9B,EAAYgJ,GAAamE,QAAS/L,GAGrEsjB,KDLU91C,MAAMqN,EAAStyC,GAAIX,GAChC,MACF,IAAK,iBE3FI,MAQb,aAAoBg3D,EAAwByoC,GACZlyB,GAAY6wB,iBAAiBqB,GAErCj/D,SAAQ,IAAyC,IAAvCw1B,EAAQh2D,GAAyB,EAC/D,MAAM0/F,EAAc9kF,KAAK+kF,gBAAgB3oC,EAAYhB,GACjDh2D,EAAKT,SACPmgG,EAAY32B,eAAgB,EAC5B22B,EAAY9kC,UAAYkgC,GAAaoE,aAAal/F,OAaxD,uBAA+Bg3D,EAAwB4oC,GACrD,MAAMjD,EAA8B,MAAnBiD,EAAY,GACzBjD,IACFiD,EAAcA,EAAYv7C,MAAM,IAGlC,MAAOsb,EAAQniE,EAAGwlD,EAAGp/C,EAAOC,GAAU0pE,GAAYU,YAAY2xB,EAAa,KACrE/2B,EAA6B,CACjCrrE,EAAG4mD,SAAS5mD,GACZwlD,EAAGoB,SAASpB,GACZp/C,MAAOwgD,SAASxgD,GAChBC,OAAQugD,SAASvgD,GACjBklE,eAAe,EACf9F,cAAetD,GASjB,OANAm5B,GAAO8B,UAAU3B,WAAWt5B,GAC5Bm5B,GAAOC,WAAWx7F,IAAIojF,aAAa3gB,GAAawI,cAAe7I,EAAQkJ,GACnE8zB,GACF7D,GAAOC,WAAWx7F,IAAIg3F,kBAAkBv9B,EAAYgJ,GAAawI,cAAe7I,GAG3EkJ,KF0CejjC,MAAMqN,EAAStyC,GAAIX,GACrC,MACF,IAAK,aACHu8F,GAAgB32D,MAAMqN,EAAStyC,GAAIX,GACnC,MACF,IAAK,MACH49F,GAAYh4D,MAAMqN,EAAStyC,GAAIX,EAAM8sD,GAAckB,KACnD,MACF,IAAK,MACH4vC,GAAYh4D,MAAMqN,EAAStyC,GAAIX,EAAM8sD,GAAcI,KACnD,MACF,IAAK,UACHja,EAAS2nB,UAAYkgC,GAAaoE,aAAal/F,GAC/C,MACF,QACE,MAAM,IAAIlF,MAAO,sCAAqCikG,SD3DWn5D,MAAMowB,EAAQh2D,MAInF84F,GAAO8B,UAAU1B,mBAGnB,6BAAqC2G,GACnC,MAAOhmG,EAAK4V,GAAS89D,GAAYU,YAAY4xB,EAAkB,KAC/D,GACO,gBADChmG,EAMJ,MAAM,IAAIiB,MAAO,mCAAkC+kG,MAJnD/G,GAAO8B,UAAUhB,iBAAiBpB,GAAe/E,UAAWhkF,GAC5DqpF,GAAOC,WAAWzQ,YAAc74E,EAOtC,iCAAyCumD,EAAgBh2D,GACvD,OAAQg2D,GACN,IAAK,aACH8iC,GAAOC,WAAWvZ,WAAWsV,cAAc90F,GAC3C,MACF,IAAK,SIxEI,MAiBb,aAAoBk1F,GAClB,MAAMzV,EAAsB,GAC5ByV,EAAY10D,SAAQq1D,IAClB,MAAOL,EAAQr0F,EAAOmwF,GAAQ/jB,GAAY+uB,eAAezG,EAAY,IAAK,GACpEN,EAAsB,CAC1BC,OAAQA,EACRr0F,MAAOA,EACPyiB,YAAa0tE,EACb+D,SAAS,GAEX5V,EAAM3+D,KAAKy0E,MAEbuD,GAAOC,WAAWtZ,MAAMgW,SAAShW,MJ4CjB75C,MAAM5lC,GAClB,MACF,IAAK,aKzEI,MAQb,aAAoB8/F,GAClBA,EAAgBt/D,SAAQu/D,IACtB,MAAOp/F,EAAIw+F,EAAW3/E,EAAMxY,EAAMnK,GAAS0wE,GAAYU,YAAY8xB,EAAgB,KACnFjH,GAAO8B,UAAU3B,WAAWt4F,GAE5Bm4F,GAAOC,WAAWx7F,IAAI02F,YAAYtzF,EAAI,CCjBxCA,GAAI,GACJ6e,KAAM,GACNmoC,SAAU,GACVwf,WAAY,KACZuZ,MAAO,IAAIzmE,IAAI,IACf+qE,WAAY,IAAI/qE,IAAI,IACpBoqE,WAAY,IAAIpqE,IAAI,IACpBkqD,QAAS,IAAIlqD,IAAI,IACjBuuD,cAAe,IAAIvuD,IAAI,IACvByvE,OAAQ,GACR7f,WAAY,IAAI5vD,IAAI,IDShBtZ,KACA6e,OACAmoC,SAAU/sC,KAAKolF,iBAAiBb,KAGlCrG,GAAOC,WAAWx7F,IAAIy2F,YAAYp5E,KAAKolF,iBAAiBb,GAAY,CAClEn4F,KAAM4iD,GAAU5iD,IAAS4iD,GAAUI,MACnCnwD,IAAK8G,EACL6oC,KAAM5uB,KAAKqlF,aAAad,GACxB//D,OAAQ,CACNogE,WAAYz8C,GAAWvlD,EACvB+hG,YAAax8C,GAAWC,EACxB8gB,QAAS7gB,GAAazlD,EACtBumE,QAAS9gB,GAAaD,EACtByhB,SAAUrgB,SAASvnD,GAAS,GAAK,EACjConE,SAAUpa,GAASsE,iBAW3B,wBAAgCgxC,GAC9B,OAAOA,EAQT,oBAA4BA,GAC1B,OAAOA,KLuBav5D,MAAM5lC,GACtB,MACF,IAAK,mBACH84F,GAAOC,WAAWx7F,IAAI82F,oBAAoByG,GAAaoE,aAAal/F,IACpE,MACF,IAAK,4BACH84F,GAAOC,WAAWx7F,IAAI+2F,6BAA6BwG,GAAaoE,aAAal/F,IAC7E,MACF,IAAK,aF9EI,MAQb,aAAoBkgG,GACU3yB,GAAY6wB,iBAAiB8B,GAErC1/D,SAAQ,IAA0D,IAAxD2/D,EAAiBC,GAAiC,EAClD,IAAxBA,EAAa7gG,OAIjBqb,KAAKylF,cAAcF,EAAiBC,GAHlC9rF,QAAQC,MAAM,uCAapB,qBAA6B4rF,EAAyBC,GACpD,MAAOjlC,EAAYh6D,GAASosE,GAAY+uB,eAAe6D,EAAiB,IAAK,GAC7ErH,GAAO8B,UAAU3B,WAAW99B,GAE5B,MACMkW,EAAqB,CAAElwE,QAAOvC,QADpBgc,KAAK0lF,qBAAqBF,IAIrC/uB,EAASlwE,QACZkwE,EAASlwE,MAAQosE,GAAYgzB,mBAAmBplC,IAGlD29B,GAAOC,WAAWx7F,IAAIojF,aAAa3gB,GAAa0zB,UAAWv4B,EAAYkW,GAYzE,4BAAoC+uB,GAUlC,O3F9CG,SAA4B7iG,EAAgBuW,GACjD,MAAM0sF,EAAS,IAAIh9B,IAKnB,OAJAjmE,EAAIijC,SAAQ,CAAC/wB,EAAU5V,KACrB,MAAMgY,EAAYiC,EAAGrE,EAAO5V,GAC5B2mG,EAAO57B,IAAI/qE,EAAKgY,MAEX2uF,E2FoCiDC,CALFlzB,GAAYmzB,YAC9DN,EACAhD,IAKAxiF,KAAK+lF,qBAcT,2BAAmCnzB,GACjC,MAAMozB,EAAgC,GACtC,IAAIC,EAAY,EAEhB,KAAOA,IAAcrzB,EAAMjuE,QAAQ,CACjC,MAAMw9F,EAASvvB,EAAMqzB,GACrB,QAAQ,GACN,KAAKtD,GAAYR,GACf,MAAO+D,EAAY5hF,GAAYquD,GAAYU,YAAY8uB,EAAQ,OACxD3B,EAAoBjuB,GAAWjuD,EAClCquD,GAAYU,YAAY/uD,EAAU,QAClC,CAAC,KAAM,MACLkmB,EAAag2D,EACf7tB,GAAYU,YAAYmtB,EAAoB,OAAO79F,KAAIsmC,GACrDy2D,GAAgB10D,MAAM/B,KAExB,GACJ+8D,EAAcA,EAAcrhG,OAAS,GAAGytE,KAAO,CAC7C5nC,aACA6nC,KAAM6zB,EAAW7iE,MAAM,KAAK,GAC5BkvC,QAASA,GAEX,MACF,KAAKuwB,GAASX,GACZ,MAAMgE,EAAWhE,EACXiE,EAAuB,GAC7B,KAAOxzB,EAAMqzB,EAAY,IAAMlD,GAAenwB,EAAMqzB,EAAY,KAC9DA,IACAG,EAAWlgF,KAAK0sD,EAAMqzB,GAAWnzB,QAEnC,MAAM9b,EAASuqC,GAAa8E,YAAYF,EAAUC,GAClDJ,EAAcA,EAAcrhG,OAAS,GAAGqyD,OAASA,EACjD,MACF,KAAK4rC,GAAcT,GACjB,MAAMmE,EAAWN,EAAcA,EAAcrhG,OAAS,IACrD2hG,EAAStmC,YAAcsmC,EAAStmC,UAAY,IAC7CsmC,EAAStmC,UAAU95C,KAAKg6E,GAAaG,YAAY8B,IACjD,MACF,KAAKU,GAAUV,GACb8D,IACA,MAAMM,EAAW3zB,EAAMqzB,GACvB,IAAKM,EACH,MAAM,IAAIrmG,MAAM,0DAElB8lG,EAAc9/E,KAAK,CAAE3lB,KAAMgmG,IAC3BP,EAAcA,EAAcrhG,OAAS,GAAGiyE,cAAgBsrB,GAAcl3D,MAAMm3D,GAC5E,MACF,QAGE6D,EAAc9/E,KAAK,CAAE3lB,KAAM4hG,IAC3B6D,EAAcA,EAAcrhG,OAAS,GAAGiyE,cAAgBsrB,GAAcl3D,MAAM,aAGhFi7D,IAEF,OAAOD,KEjDah7D,MAAM5lC,GACtB,MACF,QACE,OAAO,EAEX,OAAO,GA7EL84F,GACUC,gBAAU,EADpBD,GAEWkF,iBAAW,EAFtBlF,GAGU8B,eAAS,EA8EV9B,UOzFRloE,eAAewwE,GACpBpZ,EACAC,EACAC,GAEA,MAAMmZ,EAAa53C,GAAkBC,cAAc43C,iBAAmBhO,GAAiBJ,GACjF9sC,EAAQqD,GAAkBC,cAAcqiC,qBAExCwV,EADe93C,GAAkBC,cAAc83C,kBACvBvZ,GAAYwZ,UAAUvZ,GACpD,IAAKqZ,EACH,aAGI1P,GAASzrC,EAAOm7C,EAAUA,SAC1B1P,GAASzrC,EAAOi7C,EAAWlO,kBAAkBt5F,IAAKwnG,EAAWlO,kBAAkB3pD,MAErF,MAAMngC,EAAO+8C,EAAM0rC,MAAMzoF,KAAKjN,IAAImlG,GAC5BG,EAAwBt7C,EAAM0rC,MAAMzoF,KAAKjN,IAAIilG,EAAWlO,kBAAkBt5F,KAEhFi/F,GAAOlzD,MAAM87D,GACb5I,GAAOlzD,MAAMv8B,GAAM,GACnB,MAAM21E,EAAiB8Z,GAAOC,WAE9B3yC,EAAMA,MAAM7gC,MAAM,cAAe,CAC/By5D,iBACAgJ,eACAC,aACAC,kBAQGt3D,eAAe+wE,KACpB,MAAMv7C,EAAQqD,GAAkBC,cAAcqiC,qBACxC6V,EAAsBn4C,GAAkBC,cAAcm4C,2BAC5D,IAAKD,EAAoBriG,OAEvB,YADA6mD,EAAMA,MAAM7gC,MAAM,sBAGpB,MAAMg8E,EAAWK,EAAoBnlB,YAC/BoV,GAASzrC,EAAOm7C,EAAUtO,GAAUsO,UACpC1P,GAASzrC,EAAO8sC,GAAWC,kBAAkBt5F,IAAKq5F,GAAWC,kBAAkB3pD,MAErF,MAAMngC,EAAO+8C,EAAM0rC,MAAMzoF,KAAKjN,IAAImlG,GAC5BG,EAAwBt7C,EAAM0rC,MAAMzoF,KAAKjN,IAAI82F,GAAWC,kBAAkBt5F,KAEhFi/F,GAAOlzD,MAAM87D,GACb5I,GAAOlzD,MAAMv8B,GAAM,GACnB,MAAM21E,EAAiB8Z,GAAOC,WAO9B,OALA3yC,EAAMA,MAAM7gC,MAAM,cAAe,CAC/By5D,iBACAiJ,YAAa,EACbC,eAAgB,KAEX,EC7CF,SAAS4Z,GACd17C,EAAqB,EAErB1mD,GACC,IAFD,MAAEyB,EAAK,SAAEsgF,GAAuB,EAGhC,MAAOjkF,EAAGwlD,GA8HZ,SAA0BilC,GACxB,MAAMtd,EAAOtxC,KAAKC,MAAM2uD,EAAakK,GAAcx8C,KAAKm9C,aACxD7K,GAAckK,GAAcx8C,KAAKm9C,YACjC,MAAMthF,EAAM6nB,KAAKC,MAAM2uD,EAAakK,GAAcx8C,KAAKi9C,YACjDhuE,EAAMqjE,EAAakK,GAAcx8C,KAAKi9C,WAEtCmP,GAAa5P,GAAcx8C,KAAKi9C,WAAa,GAAK,EAClDoP,GAAa7P,GAAcx8C,KAAKk9C,WAAa,GAAK,EAExD,IAAIr1F,EAAImtE,EAAO5nB,GAAWvlD,EAAIylD,GAAazlD,EAC3CA,IAAMonB,EAAMm9E,IAAc5P,GAAcI,UAAU3uF,MAAQuuF,GAAcx8C,KAAKo9C,UAC7E,IAAI/vC,EAAIC,GAAaD,EAGrB,OAFAA,IAAMxxC,EAAMwwF,IAAc7P,GAAcI,UAAU1uF,OAASsuF,GAAcx8C,KAAKq9C,UAEvE,CAACx1F,EAAGwlD,GA5IIi/C,CAAiBviG,GAC1BwiG,EAAmB,IAAIx/C,OAAOC,YAAYwD,UAAUC,EAAO5oD,EAAGwlD,GAE9Dm/C,EACJziG,GAAS+pD,GAAkBC,cAAcuS,iBAAiBowB,gCAGtD+V,EAAiB,IAAI1/C,OAAOC,YAAYqH,MAAM5D,EAAO,EAAG,EAAGq7B,GAAU9tB,eACzEw+B,GAAcI,UAAU3uF,MACxBuuF,GAAcI,UAAU1uF,QAIpBw+F,EAAe,IAAI3/C,OAAOC,YAAYsO,OAC1C7K,EACA+rC,GAAct1F,MAAMqrD,QACpBiqC,GAAct1F,MAAMgsD,QACpBiB,GAAYmC,mBAAmBpyD,KAC/Bq3D,SAAS,IAAOihC,GAAcO,WAAWl1F,EAAG,IAAO20F,GAAcO,WAAW1vC,GAGxEs/C,EAAmB,IAAI5/C,OAAOC,YAAYgE,UAC9CP,EACA,EACA+rC,GAAcQ,aAAa3vC,EAC3BmvC,GAAcI,UAAU3uF,MACxBuuF,GAAcQ,aAAa9uF,OAC3B,GAECgjD,UAAU,IACVC,SAAS,IACTqM,iBACAnM,WAAWm7C,GAGRI,EAAmBt7C,GACvBb,EACA+rC,GAAcQ,aAAatpF,KAC3B,CAAE7L,EAAG,EAAGwlD,EAAGmvC,GAAcQ,aAAa3vC,EAAGkE,KAAM,GAAKC,KAAM,IAC1D6qC,IACAhrC,WAAWm7C,GAGPK,EAAqB,IAAIt8C,GAC7BE,EACA+rC,GAAclvE,YAAYilC,QAAU,EACpCiqC,GAAclvE,YAAY4lC,QAAU,GACpC,kBAEI45C,EAAuB,IAAIv8C,GAC/BE,EACA+rC,GAAcC,WAAWlqC,QAAU,EACnCiqC,GAAcC,WAAWvpC,QAAU,GACnC,iBAII65C,EAAgBruC,GAAajO,EAAO,CACxCuB,SAAUmC,GAAY8B,oBAAoB/xD,IAC1C46D,KAAM7jC,eAAkBwwE,IAAyB,EAAO1hG,EAAO,GAC/Dg1D,QAAS,IAAM8tC,EAAmBx7C,YAAW,GAC7C2N,MAAO,IAAM6tC,EAAmBx7C,YAAW,KAE1CsK,YAAY6gC,GAAclvE,YAAYilC,QAASiqC,GAAclvE,YAAY4lC,SACzEqI,SAASihC,GAAcre,QAAQ1J,OAE5B6T,EAAuBx0B,GAAkBC,cAC5CuS,iBACAqwB,oBAAoB5sF,GAAOu+E,qBAExB0kB,EAAkBtuC,GAAajO,EAAO,CAC1CuB,SAAUmC,GAAY+B,sBAAsBhyD,IAC5C46D,KAAM7jC,eAAkBwwE,IAAyB,EAAM1hG,EAAOu+E,GAC9DvpB,QAAS,IAAM+tC,EAAqBz7C,YAAW,GAC/C2N,MAAO,IAAM8tC,EAAqBz7C,YAAW,KAE5CsK,YAAY6gC,GAAcC,WAAWlqC,QAASiqC,GAAcC,WAAWvpC,SACvEqI,SAASihC,GAAcre,QAAQ1J,OAG5Bw4B,EAAmB37C,GACvBb,EACC,WAAU1mD,IACXyyF,GAAcE,gBACdL,IAGI6Q,EAAmB57C,GACvBb,EACAjlD,EACAgxF,GAAchpC,gBACd8oC,IAGI6Q,EACJpjG,GAAS+pD,GAAkBC,cAAcuS,iBAAiBowB,gCAAkC,EAExFjlB,EAAY,IAAI1kB,OAAOC,YAAYgE,UACvCP,EACA,EACA,EACA+rC,GAAcI,UAAU3uF,MACxBuuF,GAAcI,UAAU1uF,OACxB,GAECgjD,UAAU,IACVC,SAASg8C,EAAoB,EAAI,IACjC3vC,iBAgBH,OAdA+uC,EAAiBzuF,IAAI,CACnB2uF,EACAC,EACAC,EACAC,EACAG,EACAC,EACAH,EACAC,EACAG,EACAC,EACAz7B,IAGK86B,ECxIT,MAAMa,WAAsBrgD,OAAO4jC,MAQjCv7C,cACEC,MAAM,iBAAiB,KARlBy7C,kBAAY,OAEXuc,uBAAiB,OACjBC,yBAAmB,OACnBC,oBAAc,OACdC,gBAAU,OA4JV3B,gBAAkB,IAAM/3C,GAAkBC,cAAc83C,kBAAkB,KA2B3EpwC,gBAAkB,IAAM9B,GAAU10C,KAAK6rE,cAlL5C7rE,KAAKooF,uBAAoBjiG,EACzB6Z,KAAKqoF,yBAAsBliG,EAC3B6Z,KAAKsoF,oBAAiBniG,EACtB6Z,KAAKuoF,WAAa,EAGbtxD,UACL8gC,GAAiB/3D,MAGnB,eACE6uC,GAAkBC,cAAcy+B,mBAAmBvtE,MACnDA,KAAK6rE,aAAe,IAAIjO,GAAiB59D,YACnCA,KAAKwoF,uBACXxoF,KAAKm0E,mBACLn0E,KAAKyoF,iBAGApU,SACL,IAAKr0E,KAAKooF,kBAAmB,OAE7B,MAAMM,GAAW1oF,KAAKuoF,WAAapgD,GAAWvlD,EAC9C,GAAIod,KAAKooF,kBAAkBxlG,EAAI8lG,EAAS,CAEtC,MAAMpU,EAAUt0E,KAAKooF,kBAAkBxlG,EAAI20F,GAAczY,YACzD9+D,KAAKooF,kBAAkBxlG,EAAI67B,KAAKpgB,IAAIi2E,EAASoU,QACxC,GAAIA,EAAU1oF,KAAKooF,kBAAkBxlG,EAAG,CAE7C,MAAM0xF,EAAUt0E,KAAKooF,kBAAkBxlG,EAAI20F,GAAczY,YACzD9+D,KAAKooF,kBAAkBxlG,EAAI67B,KAAKrgB,IAAIk2E,EAASoU,IAO1CtsB,UACLp8D,KAAKw2C,kBAAkBomB,iBAMzB,mCACQ1kE,QAAQqtD,IACZvlD,KAAK4mF,kBAAkBjkG,KACrBqzB,eACQy4D,GAAUzuE,KAAM2oF,EAAc9hB,SAAUxyB,GAASs0C,EAAc9hB,UAAU,OAQ/EsN,mBACN,MAAMx5D,EAAa,IAAImtB,OAAOC,YAAYqH,MACxCpvC,KACAqoC,GAAazlD,EACbylD,GAAaD,EACb8G,GAAYC,YAAYlwD,KAEpBizF,EAAe,IAAIpqC,OAAOC,YAAYgE,UAC1C/rC,KACAqoC,GAAazlD,EACbylD,GAAaD,EACbD,GAAWvlD,EACXulD,GAAWC,EACX,GACA8D,SAAS,IACXlsC,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAY54B,GACpD3a,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAY2+B,GAO9CuW,iBACNzoF,KAAKqoF,oBAAsB,IAAIpgB,GAAiBjoE,MAAM,KACpDA,KAAKo8D,UACLp8D,KAAKwrC,MAAM7gC,MAAM,eAEnB3K,KAAKooF,kBAAoBpoF,KAAK4oF,0BAE9B5oF,KAAKsoF,eAAiBj8C,GACpBrsC,KACC,OAAMA,KAAK6oF,aACZtR,GAAcG,qBACdJ,IAIF,MAAMwR,EAAgBrqE,KAAKrgB,IACzBywC,GAAkBC,cAAcuS,iBAAiBowB,gCAAkC,EACnFzxE,KAAK4mF,kBAAkBjiG,OAAS,GAElCqb,KAAKuoF,WAAa9pE,KAAKC,MAAMoqE,EAAgBvR,GAAcx8C,KAAKm9C,aAC5Dl4E,KAAKuoF,WAAa,IAEpBvoF,KAAKuoF,WAAa,GAEpBvoF,KAAKsoF,eAAeS,QAAS,GAAE/oF,KAAKuoF,WAAa,OAAOvoF,KAAK6oF,cAE7D,MAAMG,EAAS,IAAIlhD,OAAOC,YAAYqH,MACpCpvC,KACAqoC,GAAazlD,EACbylD,GAAaD,EACb8G,GAAYoC,oBAAoBryD,KAG5B21F,EAAYn7B,GAAaz5C,KAAM,CACnC+sC,SAAUmC,GAAYqC,mBAAmBtyD,IACzC46D,KAAM,IAAM75C,KAAKipF,mBAChBvyC,YAAYrO,GAAazlD,EAAI20F,GAAclqC,MAAMC,QAASjF,GAAaD,GAEpEysC,EAAap7B,GAAaz5C,KAAM,CACpC+sC,SAAUmC,GAAYqC,mBAAmBtyD,IACzC46D,KAAM,IAAM75C,KAAKkpF,mBAEhBxyC,YAAYrO,GAAazlD,EAAI20F,GAAclqC,MAAMC,QAASjF,GAAaD,GACvEkO,UAAU,EAAG,GAEhBt2C,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAIl0C,KAAKooF,mBACjDpoF,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAIl0C,KAAKqoF,qBACjDroF,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAIl0C,KAAKsoF,gBACjDtoF,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI80C,GAC5ChpF,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI0gC,GAC5C50E,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI2gC,GAUtC+T,0BACN,MAAMR,EAAoB,IAAItgD,OAAOC,YAAYwD,UAAUvrC,KAAM,EAAG,GASpE,OARAooF,EACGvvF,IACCmH,KAAK4mF,kBAAkBjkG,KAAI,CAACgmG,EAAeQ,IAClCjC,GAAclnF,KAAM2oF,EAAeQ,MAG7C9jE,KAAK,SACL+jE,UACIhB,EAQDS,WACN,MAAMz4B,EAAQ3xC,KAAK2rB,KAAKpqC,KAAK4mF,kBAAkBjiG,OAAS4yF,GAAcx8C,KAAKm9C,aAC3E,OAAOz5D,KAAKpgB,IAAI+xD,EAAO,GAMjB64B,iBAAkB,IAAD,EACvBjpF,KAAKuoF,WAAa9pE,KAAKpgB,IAAI2B,KAAKuoF,WAAa,EAAG,GAC7B,QAAnB,EAAAvoF,KAAKsoF,sBAAc,OAAnB,EAAqBS,QAAS,GAAE/oF,KAAKuoF,WAAa,OAAOvoF,KAAK6oF,cAMxDK,iBAAkB,IAAD,EACvB,MAAML,EAAW7oF,KAAK6oF,WACtB7oF,KAAKuoF,WAAa9pE,KAAKrgB,IAAI4B,KAAKuoF,WAAa,EAAGM,EAAW,GACxC,QAAnB,EAAA7oF,KAAKsoF,sBAAc,OAAnB,EAAqBS,QAAS,GAAE/oF,KAAKuoF,WAAa,OAAOM,MAM9CV,UC/MR,MAAMkB,GAAuC,CAClDpqG,IAAK2nD,GAAWK,cAAchoD,IAC9BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAGjCs6B,GAAgB,KAkBP+mB,OAhBa,CAC1B76F,KAAM,CAAEqD,QAAS,qBAAsBqsF,WAAY,uBACnDoL,qBAAsB,CAAE3mG,EAAGylD,GAAazlD,EAAGwlD,EAAGC,GAAaD,EAAGkE,KAAM,GAAKC,KAAM,IAC/Eg2B,cAAeA,GACfinB,WAAY,CACVz0C,MAAO,EACP5gB,SAAUouC,GACVtwB,KAAM,UAERw3C,UAAW,CACT10C,MAAO,EACP5gB,SAAUouC,GACVtwB,KAAM,WCHV,MAAMy3C,WAA6B5hD,OAAO4jC,MACxCv7C,cACEC,MAAM,wBAGD6G,UACL4X,GAAkBC,cAAcy+B,mBAAmBvtE,MAGrD,eACE,GAAI6uC,GAAkBC,cAAcutB,WAAWC,GAASC,WAGtD,aAFMv8D,KAAK2pF,mBAAmBL,GAAoB76F,KAAK0vF,uBACjD4I,KAKR,MAAM6C,EAAkB/6C,GAAkBC,cAAcuS,iBAAiB4uB,mBACnE4Z,EAAiBh7C,GAAkBC,cAAc83C,mBAEhDkD,EAAaC,GAAkBH,EAAgBzZ,cAAcE,yBAEpE,OAAIrwE,KAAKgqF,iBAAiBH,EAAgBC,EAAaC,UAE/Cl7C,GAAkBC,cAAcuS,iBAAiB4oC,oBAAoBH,SACrE9pF,KAAK2pF,mBAAmBL,GAAoB76F,KAAKqD,SACnDkO,KAAKkqF,cAAcL,EAAgBC,QAErC9pF,KAAKwrC,MAAM7gC,MAAM,4BAIX67E,IAAyB,EAAMsD,EAAc,EAAG,WAKlD9pF,KAAK2pF,mBAAmBL,GAAoB76F,KAAK0vF,uBACjDqI,IAAyB,EAAOsD,EAAaC,EAAiB,IAUxE,yBAAiCt7F,GAC/B,MAAM07F,EAAiB99C,GACrBrsC,KACAvR,EACA66F,GAAoBC,qBACpBF,IACAn9C,SAAS,GAEXlsC,KAAKnH,IAAIoxD,SAASkgC,GAGlBnqF,KAAKw1C,OAAO38C,IAAI,CACdi8C,QAASq1C,KACNb,GAAoBE,mBAGnB/0D,GAA0C,EAApC60D,GAAoB/mB,eAGhCviE,KAAKw1C,OAAO38C,IAAI,CACdi8C,QAASq1C,KACNb,GAAoBG,kBAGnBh1D,GAAM60D,GAAoB/mB,eAW1BynB,iBACNH,EACAC,EACAC,GAEA,OAAOA,GAAkBF,EAAeC,GAAajD,UAAUliG,OAAS,EASnEulG,cAAcL,EAA+BC,GAClD,OAAOA,GAAeD,EAAellG,OAAS,GAInC+kG,UCvHR,MAAMU,GAAiC,CAC5CnrG,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWgO,aA8BxBq0C,OAxBW,CACxB57F,KAAM,CACJoD,cAAe,eACfy4F,YAAa,gBACbC,OAAQ,cACR1vB,SAAU,WACVwb,SAAU,gBAEZj8B,OAAQ,CAAExM,OAAuB,GAAfzF,GAAWC,GAC7BoiD,iBAAkB,CAAE5nG,EAAG,IAAKwlD,EAAG,EAAGkE,KAAM,EAAKC,KAAM,IACnD4mC,OAAQ,CAAEsX,MAZO,KAajBC,aAAc,CACZ9nG,EAAGylD,GAAazlD,EAfD,IAgBfuxC,SAAU,IACV8d,KAAM,UAER04C,cAAe,CACb/nG,EAAGylD,GAAazlD,EAnBD,IAoBfuxC,SAAU,IACV8d,KAAM,UAER5C,SAAU,CAAEzsD,EAAkB,GAAfulD,GAAWvlD,EAASwlD,EAAkB,GAAfD,GAAWC,IChBnD,MAAMwiD,WAAiB9iD,OAAO4jC,MAG5Bv7C,cACEC,MAAM,YAAY,KAHZy7C,kBAAY,OAqJbr1B,gBAAkB,IAAM9B,GAAU10C,KAAK6rE,cA/I9C,eACEh9B,GAAkBC,cAAcy+B,mBAAmBvtE,MACnDA,KAAK6rE,aAAe,IAAIjO,GAAiB59D,MACzCA,KAAKm0E,mBACLn0E,KAAK6qF,sBAEL9Y,GAAiB/xE,KAAM,IAAsB,KAAjBqoC,GAAazlD,EAA2B,IAAjBylD,GAAaD,GAEhEyG,GAAkBC,cAAc6H,kBAAkBgL,YAAYxP,GAAYe,gBAAgBj0D,KAMpFk1F,mBACN,MAAM2W,EAAgB,IAAIhjD,OAAOC,YAAYqH,MAC3CpvC,KACAqoC,GAAazlD,EACbylD,GAAaD,EACb8G,GAAYC,YAAYlwD,KACxB85D,eAAe5Q,GAAWvlD,EAAGulD,GAAWC,GACpC8pC,EAAe98B,GAAYp1C,MAAMksC,SAAS,KAC1CmD,EAAW,IAAIvH,OAAOC,YAAYqH,MACtCpvC,KACAqqF,GAAkBh7C,SAASzsD,EAC3BynG,GAAkBh7C,SAASjH,EAC3B8G,GAAYG,SAASpwD,KACrBitD,SAAS,IACXlsC,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAYu3C,GACpD9qF,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAY2+B,GACpDlyE,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAYlE,GAO9Cw7C,sBACN,MAAME,EAAmB,IAAIjjD,OAAOC,YAAYwD,UAAUvrC,KAAM,EAAG,GAC7Dk5D,EAAUl5D,KAAKgrF,mBAEfzvC,EAAkB5R,GAAmB,CACzCjhD,UAAWghD,GAAUgyB,OACrB7xB,WAAYqvB,EAAQv0E,OACpBolD,UAAWsgD,GAAkBjwC,OAAOxM,SAGtCm9C,EAAiBlyF,IACfqgE,EAAQv2E,KAAI,CAACy3D,EAAQt1D,IACnBkb,KAAKirF,mBACH7wC,EAAO3rD,KACP8sD,EAAgBz2D,GAAO,GAAKulG,GAAkBlX,OAAOsX,MACrDlvC,EAAgBz2D,GAAO,GACvBs1D,EAAOtjD,aAKbkJ,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI62C,GAYtCE,mBAAmBx8F,EAAcu+D,EAAcC,EAAcn2D,GAEnE,MAAMo0F,EAAgBzpG,IACpBue,KAAKw1C,OAAO38C,IAAI,CACdi8C,QAASrzD,KACN4oG,GAAkBK,gBAGnBS,EAAiB1pG,IACrBue,KAAKw1C,OAAO38C,IAAI,CACdi8C,QAASrzD,KACN4oG,GAAkBM,iBAKnBS,EAA0C3xC,GAAaz5C,KAAM,CACjE+sC,SAAUmC,GAAYsC,kBAAkBvyD,IACxCF,QAAS0P,EACTirD,WAAY2wC,GAAkBG,iBAC9B7wC,gBAAiBywC,GACjBvwC,KAAM/iD,EACNgjD,QAAS,IAAMoxC,EAAaE,GAC5BrxC,MAAO,IAAMoxC,EAAcC,GAC3BnxC,eAAe,IACdvD,YAAYsW,EAAMC,GAErB,OAAOm+B,EAODJ,mBACN,MAAO,CACL,CACEv8F,KAAM47F,GAAkB57F,KAAKoD,cAC7BiF,SAAU,KACRkJ,KAAKw2C,kBAAkBomB,iBACvB58D,KAAKwrC,MAAM7gC,MAAM,mBAGrB,CACElc,KAAM47F,GAAkB57F,KAAK87F,OAC7BzzF,SAAU,KACRkJ,KAAKw2C,kBAAkBomB,iBACvB58D,KAAKwrC,MAAM7gC,MAAM,gBAGrB,CACElc,KAAM47F,GAAkB57F,KAAK67F,YAC7BxzF,SAAU,KACRkJ,KAAKw2C,kBAAkBomB,iBACvB58D,KAAKwrC,MAAM7gC,MAAM,iBAGrB,CACElc,KAAM47F,GAAkB57F,KAAKosE,SAC7B/jE,SAAU,KACRkJ,KAAKw2C,kBAAkBomB,iBACvB58D,KAAKwrC,MAAM7gC,MAAM,cAGrB,CACElc,KAAM47F,GAAkB57F,KAAK4nF,SAC7Bv/E,SAAU,KACRkJ,KAAKw2C,kBAAkBomB,iBACvB58D,KAAKwrC,MAAM7gC,MAAM,gBAQZigF,U,mBCvKR,MAAMS,GAAmB,68BA8BnBC,GAAiC,CAC5CrsG,IAAK2nD,GAAWO,UAAUloD,IAC1BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAG1BsjD,GAAgB,CAC3BllE,iBAAkB,SAClBmlE,aAAc,WACdC,IAAK,CAAEziG,MAAO,IAAKC,OAAQ,IAC3ByiG,mBAAoB,CAAE9oG,EAAG,GAAIwlD,EAAG,EAAGkE,KAAM,GAAKC,KAAM,KACpDo/C,cAAe,CAAE/oG,EAAG,IAAOulD,GAAWvlD,EAAGwlD,EAAG,IAAOD,GAAWC,I,aC3BzDpyB,eAAe41E,KACpB,MAAMC,QAkBR71E,iBACE,MAGM81E,SAHoBC,aACxBl9C,GAAkBC,cAAcymB,mBAEK,IAAIhxC,MACzCpiB,GAAcA,EAAWoC,SAAWgnF,GAAcllE,mBAEpD,OAAOylE,EAAiBA,EAAe/lG,GAAK,KAzBbimG,GAC/B,IAAKH,EAEH,OAAOI,GAAmB,MAO5B,OADoBA,SAJEC,aACpBL,EACAh9C,GAAkBC,cAAcymB,mBA+BpC,SAAS02B,GAAmBE,GAC1B,GAAIA,EAAS,CACX,MAAMC,EAASD,EAAQ/pF,UAAU,GAC3BjJ,EAASizF,EAAOjzF,OACtB,OAAOA,GAA8BizF,EAAOlpF,iBAE9C,OAAOmoF,GCpBM,MAAMgB,WAAoBvkD,OAAO4jC,MAmB9Cv7C,cACEC,MAAM,eAAe,KAnBfy7C,kBAAY,OACZ3K,kBAAY,OACZsG,kBAAY,OACZ6E,mBAAa,OACbC,wBAAkB,OAClBC,wBAAkB,OAClBG,oBAAc,OACdE,sBAAgB,OAEhB0f,iBAAW,OACXC,qBAAe,OACfC,qBAAe,OACfC,2BAAqB,OAErBC,eAAS,OAET5sG,aAAO,OAkSP6sG,aAAe,IAAMj4C,GAAU10C,KAAK0sF,WAAW,KAC/C1tC,oBAAsB,IAAMnQ,GAAkBC,cAAckQ,sBAAsB,KAEnFgE,gBAAkB,IAAMtO,GAAU10C,KAAKkhE,cAAc,KACrD1qB,gBAAkB,IAAM9B,GAAU10C,KAAK6rE,cAAc,KACrD5rB,gBAAkB,IAAMvL,GAAU10C,KAAKwnE,cAAc,KACrDqF,iBAAmB,IAAMn4B,GAAU10C,KAAKqsE,eAAe,KACvDS,sBAAwB,IAAMp4B,GAAU10C,KAAKssE,oBAAoB,KACjES,sBAAwB,IAAMr4B,GAAU10C,KAAKusE,oBAAoB,KACjEU,kBAAoB,IAAMv4B,GAAU10C,KAAK0sE,gBAAgB,KACzDS,oBAAsB,IAAMz4B,GAAU10C,KAAK4sE,kBAxShD5sE,KAAKusF,gBAAkB,IAAI3jC,IAC3B5oD,KAAKwsF,gBAAkB,IAAI5jC,IAC3B5oD,KAAKysF,sBAAwB,IAAI7jC,IACjC5oD,KAAKssF,YAAcjB,GAGdnwE,OACL2zB,GAAkBC,cAAcy+B,mBAAmBvtE,MACnDA,KAAKssF,YAAcz9C,GAAkBC,cAAc89C,cACnD5sF,KAAKxf,gBAGAy2C,UACL8gC,GAAiB/3D,MAGjBA,KAAK0sF,UDDoClhD,KAC3C,MAAM4pC,EAAiB,IAAIttC,OAAOC,YAAYwD,UAAUC,EAAO,EAAG,GAE5DM,EAAc,IAAIhE,OAAOC,YAAYgE,UACzCP,EACA,EACA,EACA+/C,GAAcE,IAAIziG,MAClBuiG,GAAcE,IAAIxiG,OAClBqgD,GAASR,UAERmD,UAAU,EAAK,IACfC,SAAS,IAEN2gD,EAAiB,IAAI/kD,OAAOC,YAAYsO,OAC5C7K,EACA,EACA,EACA0D,GAAYyC,cAAc1yD,KAC1BgtD,UAAU,EAAK,IAEX6gD,EAAY,IAAIhlD,OAAOC,YAAYgE,UACvCP,EACA,EACsB,IAArBM,EAAY7iD,OACb6iD,EAAY9iD,MACS,IAArB8iD,EAAY7iD,OACZqgD,GAASb,UACTwD,UAAU,EAAK,GAEXzxB,EAAY6xB,GAChBb,EACA+/C,GAAcC,aACdD,GAAcG,mBACdJ,IACArrB,aAAan4B,OAAOo4B,WAAW6sB,YAcjC,OAZAvhD,EAAMgK,OAAO38C,IAAI,CACfi8C,QAASg4C,EACT/3C,MAAO,GACP3M,EAAwB,IAArB0D,EAAY7iD,OACfkrC,SAAU,IACV8d,KAAM,SACN2gC,MAAM,EACNz/B,MAAO,IAGTiiC,EAAev8E,IAAI,CAACizC,EAAatxB,EAAWsyE,EAAWD,IACvDzX,EAAehpC,YAAW,GACnBgpC,GChDY4X,CAA6BhtF,MAGhD,qBAEQA,KAAKitF,KAAKjtF,KAAKssF,aAErBtsF,KAAKktF,gCAaCltF,KAAKitF,KAAM,oBAGX/0F,QAAQqtD,IACZ7sC,MAAM81C,KAAKxuD,KAAKusF,iBAAiB5pG,KAAIqzB,UAAwB,IAAhB/2B,EAAK2vC,GAAK,QAC/C6/C,GAAUzuE,KAAM/gB,EAAK2vC,aAGzB12B,QAAQqtD,IACZ7sC,MAAM81C,KAAKxuD,KAAKwsF,iBAAiB7pG,KAAIqzB,UAAwB,IAAhB/2B,EAAK2vC,GAAK,E/BlDpC,IAAC4c,EAAqBuB,EAAoBC,QAAzCxB,E+BmDFxrC,K/BnDuB+sC,E+BmDjB9tD,E/BnDqC+tD,E+BmDhCpe,E/BlDjC,IAAI12B,SAAkBC,IACc,OAA9BqzC,EAAM4zC,MAAM59F,IAAIurD,GAClB50C,EAAQ40C,IAERvB,EAAM2sB,KAAKtkC,MAAMkZ,EAAUC,GAAW8S,GAAG,eAAgB3nD,GACzDqzC,EAAM2sB,KAAKxtD,uB+BgDPzS,QAAQqtD,IACZ7sC,MAAM81C,KAAKxuD,KAAKysF,uBAAuB9pG,KAAIqzB,UAAkC,IAA1B/2B,GAAM2vC,EAAMpK,IAAQ,O/BpC9C,EAC7BgnB,EACAuB,EACAC,EACAxoB,IAEA,IAAItsB,SAAkBC,IACqB,cAArCqzC,EAAMurC,SAASv1F,IAAIurD,GAAU9tD,IAC/BkZ,EAAQ40C,IAERvB,EAAM2sB,KAAKuW,YAAY3hC,EAAUC,EAAWxoB,GAC5CgnB,EAAM2sB,KAAK6e,KAAM,4BAA2BjqC,IAAY50C,GACxDqzC,EAAM2sB,KAAK6e,KAAM,YAAY7+E,GAC7BqzC,EAAM2sB,KAAKxtD,Y+BwBHwiF,CAAgBntF,KAAM/gB,EAAK2vC,EAAMpK,OAI3C,MAAM4oE,EAAmB,IAAI9hD,GAC3BtrC,KACAurF,GAAcI,cAAc/oG,EAAI,IAChC2oG,GAAcI,cAAcvjD,EAAI,GAChC,gBAGIujD,EAAgBlyC,GAAaz5C,KAAM,CACvC+sC,SAAUmC,GAAY8B,oBAAoB/xD,IAC1C46D,KAAM7jC,gBACE64B,GAAkBC,cAAcu+C,eACtCrtF,KAAKssF,YAAcz9C,GAAkBC,cAAc89C,cACnD5sF,KAAKw2C,kBAAkBomB,iBACvB58D,KAAKo/E,MAAMkO,UACXttF,KAAKwrC,MAAM+hD,WAEbzzC,QAAS,IAAMszC,EAAiBhhD,YAAW,GAC3C2N,MAAO,IAAMqzC,EAAiBhhD,YAAW,KACxCsK,YAAY60C,GAAcI,cAAc/oG,EAAG2oG,GAAcI,cAAcvjD,SAGpEpoC,KAAKitF,KAAM,aACjBp+C,GAAkBC,cAAc6H,kBAAkBgL,YAAY/4C,GAAU4+B,mBAKxExnC,KAAKwtF,qBAGLxtF,KAAKuuE,uBAGLvuE,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAIl0C,KAAK2sF,gBACjD3sF,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAIy3C,GAC5C3rF,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAIk5C,GAE5CptF,KAAKitE,oBAAoB4B,yBAGpBwF,SASLr0E,KAAKitF,KAAM,aAGNzsG,gBACLwf,KAAKlgB,QAAUU,aAAc,GAAI,aAAcI,UAAQC,SACvDmf,KAAKlgB,QAAQ2tG,eAAe/kC,KAAO,CACjCvkE,KAAM,KACN4nB,MAAO,CACLy/B,MAAOxrC,KACPusF,gBAAiBvsF,KAAKusF,gBACtBC,gBAAiBxsF,KAAKwsF,gBACtBC,sBAAuBzsF,KAAKysF,sBAC5BiB,WAAaj9F,GAAiB4jD,GAAS5jD,GAAM,GAC7C03C,WAAYA,GACZ6sC,YAAa,CAACpyF,EAAWwlD,EAAWnpD,IAAgB+gB,KAAKg1E,YAAYpyF,EAAGwlD,EAAGnpD,KAKjF,WAAmBkY,SAEXw2F,wBAAax2F,EAAM6I,KAAKlgB,SAMxByuF,uBACNvuE,KAAKgjD,kBAAkBqa,yBACrBv1B,OAAOqR,MAAMm2B,SAASC,SAASC,IAC/B,MACAx5D,UACMhW,KAAKigD,kBAAkBiiB,+BACnBliE,KAAKigD,kBAAkBK,iBAEvBtgD,KAAKigD,kBAAkBC,UAAUxE,GAAcE,eAI3D57C,KAAKgjD,kBAAkBqa,yBACrBv1B,OAAOqR,MAAMm2B,SAASC,SAASE,IAC/B,MACAz5D,UACMhW,KAAKigD,kBAAkBuD,eAAe9H,GAAc70B,iBAChD7mB,KAAKigD,kBAAkBK,WACpBtgD,KAAKigD,kBAAkBiiB,+BAC1BliE,KAAKigD,kBAAkBsD,UAAU7H,GAAc70B,iBAE/C7mB,KAAKigD,kBAAkBC,UAAUxE,GAAc70B,cAStDu1C,UACLp8D,KAAKgjD,kBAAkB2Z,iBACvB38D,KAAKw2C,kBAAkBomB,iBAoBjBoY,YAAYpyF,EAAWwlD,EAAWuG,GACxC,MAAMvgB,EAAepuB,KAAKg/C,sBAAsBl4B,kBAC1CspD,EAAepwE,KAAKg/C,sBAAsB8uB,kBAC1C8f,EAAe,IAAI9lD,OAAOC,YAAYsO,OAAOr2C,KAAMpd,EAAGwlD,EAAG8G,GAAYmB,QAAQpxD,KAEnF,IAAKmvC,EAAa/nB,SAASsoC,KAAcyhC,EAAa/pE,SAASsoC,GAAW,OAAOi/C,EAEjF,MAAMh/C,EAAYF,GAAaC,GAC/B,IAAKC,EAAUjrB,UAAW,OAAOiqE,EAEjC,MAAM1hC,EAAQ,IAAIpkB,OAAOC,YAAYsO,OAAOr2C,KAAMpd,EAAGwlD,EAAGwG,EAAU7B,UAClE,OAAO/sC,KAAK6tF,sBAAsB3hC,GAY5B2hC,sBAAsBpkC,GAC5B,MAAMijC,EAAY1sF,KAAK2sF,eAgBvB,OAdAljC,EAAOlR,eAAe,CAAEE,cAAc,EAAMD,eAAe,IAC3DiR,EAAOpP,YAAYvS,OAAOqR,MAAMC,OAAOkB,yBAAyB,IAC9DoyC,EAAUtgD,YAAW,KAEvBqd,EAAOpP,YAAYvS,OAAOqR,MAAMC,OAAOmB,wBAAwB,IAC7DmyC,EAAUtgD,YAAW,KAEvBqd,EAAOpP,YACLvS,OAAOqR,MAAMC,OAAOqB,yBACnBC,IACCgyC,EAAU9pG,EAAI83D,EAAQ93D,EAAI,GAC1B8pG,EAAUtkD,EAAIsS,EAAQtS,EAAI,MAGvBqhB,EAMDyjC,0BACN,MAAMY,EAAkB,IAAIhmD,OAAOC,YAAYqH,MAC7CpvC,KACAqoC,GAAazlD,EACbylD,GAAaD,EACbpoC,KAAK+tF,2BAEPvjC,GAAesjC,EAAiB3lD,GAAWvlD,EAAGulD,GAAWC,GAGzDpoC,KAAKnH,IAAIoxD,SAAS6jC,GAOZC,0BAEN,MAAMC,EAAyBhuF,KAAKg/C,sBAAsBivC,iBAAiB7E,UACrE8E,EAAoBr/C,GAAkBC,cAAcq/C,wBAG1D,IAAK,IAAIprG,EAAI,EAAGA,EAAIirG,EAAuBrpG,OAAQ5B,IACjD,GAAImrG,EAAkBtoB,IAAIooB,EAAuBjrG,IAC/C,OAAOirG,EAAuBjrG,GAKlC,OAAOmsD,GAAY0C,iBAAiB3yD,IAM9BuuG,qBACNxtF,KAAK6rE,aAAe,IAAIjO,GAAiB59D,MACzCA,KAAKkhE,aAAe,IAAInE,GAAiB/8D,MACzCA,KAAKwnE,aAAe,IAAIxG,GDtQnB,IAAIpY,IAAI,CAAC,CAAClN,GAAc6lB,KAAM,IAAIwJ,MCsQyB/qE,KAAKkhE,cACrElhE,KAAKqsE,cAAgB,IAAInR,GAAkBl7D,MAC3CA,KAAKssE,mBAAqB,IAAI5hB,GAC5B1qD,KACA6uC,GAAkBC,cAAckQ,sBAAsB8uB,iBAExD9tE,KAAKusE,mBAAqB,IAAI7hB,GAC5B1qD,KACA6uC,GAAkBC,cAAckQ,sBAAsBl4B,iBAExD9mB,KAAK0sE,eAAiB,IAAI/E,GAAmB3nE,MAC7CA,KAAK4sE,iBAAmB,IAAIzc,GAC1BnwD,KACA,CAACkwD,GAAc+d,aAAc/d,GAAcge,cAC3C,CAACluE,KAAKssE,mBAAoBtsE,KAAKusE,sBCrUrC,MAAM6hB,WAAiBtmD,OAAO4jC,MAK5Bv7C,cACEC,MAAM,YAAY,KALZ+qC,2BAAqB,OACrBC,2BAAqB,OACrByQ,kBAAY,OAmKbxqB,eAAiB,IAAMxS,GAAkBC,cAAcuS,iBAAiB,KACxE7K,gBAAkB,IAAM9B,GAAU10C,KAAK6rE,cA9J9C,eACEh9B,GAAkBC,cAAcy+B,mBAAmBvtE,MACnDA,KAAK6rE,aAAe,IAAIjO,GAAiB59D,MACzCA,KAAKm0E,mBACLn0E,KAAKquF,gBAMCla,mBACN,MAAMx5D,EAAa,IAAImtB,OAAOC,YAAYqH,MACxCpvC,KACAqoC,GAAazlD,EACbylD,GAAaD,EACb8G,GAAYC,YAAYlwD,KAGpBqvG,EAAe,IAAIxmD,OAAOC,YAAYqH,MAC1CpvC,KACAqoC,GAAazlD,EACbylD,GAAaD,EACb8G,GAAYuC,cAAcxyD,KAE5B+gB,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAY54B,GACpD3a,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAY+6C,GAO9CD,gBAEN,MAAME,EAAU,IAAIzmD,OAAOC,YAAYwD,UAAUvrC,KAAM,EAAG,GACpDwuF,EAAYxuF,KAAKyuF,oBACjBC,EAAe/kD,GAAmB,CACtCjhD,UAAWghD,GAAUgyB,OACrB7xB,WAAY2kD,EAAU7pG,OACtBolD,UAAWmwB,GAAkBE,IAAIxsB,SAEnC2gD,EAAQ11F,IACN21F,EAAU7rG,KAAI,CAACy4D,EAAQt2D,IAAUkb,KAAK2uF,mBAAmBvzC,EAAQszC,EAAa5pG,GAAO,OAIvF,MAAM,UAAE82E,EAAS,UAAEC,GAAc77D,KAAKqhD,iBAAiBma,cACjDM,EAAY5B,GAAkBK,iBAAiBwB,WACnDlnE,GAASo+B,WAAWp+B,KAAWgnE,IAE3BG,EAAY9B,GAAkBK,iBAAiBwB,WACnDlnE,GAASo+B,WAAWp+B,KAAW+mE,IAIjC57D,KAAKo7D,sBAAwBp7D,KAAK4uF,sBAAsB9yB,EAAW4yB,EAAa,GAAG,IAEnF1uF,KAAKm7D,sBAAwBn7D,KAAK4uF,sBAAsB5yB,EAAW0yB,EAAa,GAAG,IAGnF,MAAMG,EAAsBp1C,GAAaz5C,KAAM,CAC7C+sC,SAAUmC,GAAYK,aAAatwD,IACnCF,QAAS,iBACT26D,WAAY,CAAE92D,EAAG,EAAGwlD,EAAG,EAAGkE,KAAM,IAAMC,KAAM,KAC5CoN,gBAAiBsgB,GACjBpgB,KAAM,IAAM75C,KAAKw8D,kBAChB9lB,YAAYrO,GAAazlD,EAAkB,KAAfulD,GAAWC,GAGpC0nB,EAAa,IAAImY,GAAiBjoE,MAAM,KAC5CA,KAAKw2C,kBAAkBomB,iBACvB58D,KAAKwrC,MAAM7gC,MAAM,eAGnB3K,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAIq6C,GAC5CvuF,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAIl0C,KAAKo7D,uBACjDp7D,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAIl0C,KAAKm7D,uBACjDn7D,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI26C,GAC5C7uF,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI4b,GAMtC2+B,oBACN,MAAO,CAAC,MAAO,OAUTE,mBAAmBvzC,EAAgB6R,GACzC,MAAM6hC,EAAgB,IAAIhnD,OAAOC,YAAYwD,UAAUvrC,KAAM,EAAGitD,GAC1D8hC,EAAY,IAAIjnD,OAAOC,YAAYqH,MACvCpvC,KACAqoC,GAAazlD,EACb,EACAssD,GAAYwC,cAAczyD,KAEtB+vG,EAAa3iD,GACjBrsC,KACAo7C,EACA8e,GAAkBC,oBAClBH,IAGF,OADA80B,EAAcj2F,IAAI,CAACk2F,EAAWC,IACvBF,EASDF,sBAAsBp2B,EAA0BvL,GACtD,OAAO,IAAIsL,GACTv4D,KACA,CACEk7C,QAASgf,GAAkBK,iBAC3B/B,iBAAkBA,EAClB1uB,UAAWowB,GAAkBE,IAAIC,OACjCxB,iBAAkBqB,GAAkBI,uBACpCxB,gBAAiBiB,IAEnBG,GAAkBE,IAAIx3E,GACrBylD,GAAaD,EAAI6kB,GAUtB,sBACE,MAAMwP,EAASz8D,KAAKo7D,sBAChBnoC,WAAWjzB,KAAKo7D,sBAAsBtB,mBACtC,EACEm1B,EAASjvF,KAAKm7D,sBAChBloC,WAAWjzB,KAAKm7D,sBAAsBrB,mBACtC,QAGE95D,KAAKqhD,iBAAiBG,aAAa,CAAEoa,UAAWqzB,EAAQpzB,UAAWY,IAGzE5tB,GAAkBC,cACf6H,kBACAsL,kBAAkBjiD,KAAKqhD,iBAAiBma,gBAOhC4yB,UCqDAc,OAxOf,MAQE/+D,cAAe,KAPPg/D,mBAAa,OACbF,YAAM,OACNxyB,YAAM,OAEN2yB,oBAAc,OACdC,iBAAW,OA6NZC,oBAAsB,IAC3BtvF,KAAKuvF,kBAAkBnQ,MAA2C,KAC7DmQ,gBAAkB,IAAM76C,GAAU7F,GAAkBC,cAAcqiC,sBA5NvEnxE,KAAKmvF,cAAgB,IAAIvmC,IACzB5oD,KAAKivF,OAAS,EACdjvF,KAAKy8D,OAAS,EACdz8D,KAAKovF,eAAiBxmF,GAAU4+B,kBAY3Bya,kBAAkB4Y,GAKvB,GAJA76D,KAAKivF,YAAgC9oG,IAAvB00E,EAASe,UAA0Bf,EAASe,UAAY,EACtE57D,KAAKy8D,YAAgCt2E,IAAvB00E,EAASgB,UAA0BhB,EAASgB,UAAY,EAGlE77D,KAAKqvF,aAAervF,KAAKqvF,YAAYtyD,UAAW,CAClD,MAAMo8C,EAAazkC,GAAU10C,KAAKwvF,cAAcxvF,KAAKovF,iBAC/CH,OAAsC9oG,IAA7BgzF,EAAW30D,OAAOwtB,OAAuBmnC,EAAW30D,OAAOwtB,OAAS,EACnFhyC,KAAKqvF,YAAYI,UAAUR,EAASjvF,KAAKivF,SAWrC/V,cAAcC,GACpBn5E,KAAKmvF,cAAcnlC,IAAImvB,EAAWl6F,IAAKk6F,GASjCqW,cAAcvwG,GACpB,OAAO+gB,KAAKmvF,cAAc3tG,IAAIvC,GAQzBijE,WAAWC,GAChBA,EAAYv8B,SAAQ6nC,IAClBztD,KAAKk5E,cAAczrB,GACnBztD,KAAK0vF,UAAUjiC,EAAMxuE,IAAKo1D,GAASoZ,EAAM7+B,MAAM,OAS5C+gE,kBAAkBC,GACvB5jE,OAAOC,OAAO2jE,GAAUhqE,SAAQ6nC,IAC9BztD,KAAKk5E,cAAczrB,GACnBztD,KAAK0vF,UAAUjiC,EAAMxuE,IAAKo1D,GAASoZ,EAAM7+B,MAAM,OAU3C8gE,UAAU3iD,EAAoBC,GACpChtC,KAAKuvF,kBAAkBp3B,KAAKtkC,MAAMkZ,EAAUC,GAYvC4J,UAAU8K,GACf,MAAMy3B,EAAan5E,KAAKwvF,cAAc9tC,GACtC,GAAIy3B,EAAY,CACd,MAAM0W,OAAmC1pG,IAA7BgzF,EAAW30D,OAAOwtB,OAAuBmnC,EAAW30D,OAAOwtB,OAAS,EAChFhyC,KAAKsvF,sBAAsB35D,KAAKwjD,EAAWl6F,IAAK,IAC3Ck6F,EAAW30D,OACdwtB,OAAQ69C,EAAM7vF,KAAKy8D,UAmBlB9a,YAAYD,EAAoBpa,GAErC,IAAKuH,GAAkBC,cAAcghD,UACnC,OAIF,GAAI9vF,KAAKovF,iBAAmB1tC,EAC1B,OAIF,GAAIA,IAAa94C,GAAU4+B,mBAAqBxnC,KAAKqvF,YAInD,OAHArvF,KAAK+vF,uBAAuB/vF,KAAKqvF,YAAa/nD,GAC9CtnC,KAAKqvF,iBAAclpG,OACnB6Z,KAAKovF,eAAiB1tC,GAKpB1hD,KAAKqvF,aAAarvF,KAAK+vF,uBAAuB/vF,KAAKqvF,aAGvD,MAAMlW,EAAazkC,GAAU10C,KAAKwvF,cAAc9tC,IAC1CutC,OAAsC9oG,IAA7BgzF,EAAW30D,OAAOwtB,OAAuBmnC,EAAW30D,OAAOwtB,OAAS,EAEnFhyC,KAAKqvF,YAAcrvF,KAAKsvF,sBAAsBz2F,IAAIsgF,EAAWl6F,IAAK,IAC7Dk6F,EAAW30D,OACdwtB,OAAQi9C,EAASjvF,KAAKivF,SAExBjvF,KAAKovF,eAAiBjW,EAAWl6F,IAGjC+gB,KAAKqvF,YAAY15D,OASXo6D,uBACN3Q,GAEC,IADD93C,EAAoB,uDlHrLW,IkHuL/BtnC,KAAKuvF,kBAAkB/5C,OAAO38C,IAAI,CAChCi8C,QAASsqC,KACNrtC,GACH5d,SAAUmT,IAKZ3S,YAAW,IAAMyqD,EAAMjqC,WAA0B,EAAf7N,GAM7Bsa,eACL5hD,KAAKsvF,sBAAsBhC,UAMtBzrC,mBACD7hD,KAAKuvF,mBAAqBvvF,KAAKqvF,aAAervF,KAAKqvF,YAAYtyD,WACjE/8B,KAAKqvF,YAAYj6D,QAOd0sB,sBACD9hD,KAAKuvF,mBAAqBvvF,KAAKqvF,aAAervF,KAAKqvF,YAAYW,UACjEhwF,KAAKqvF,YAAY15D,SCpMRs6D,OAjByB,CACtC,CACE1pG,MAAO,sBACPsgF,SAAU,yCACVggB,UAAW,CAAC,gCAAiC,oCAE/C,CACEtgG,MAAO,eACPsgF,SAAU,mCACVggB,UAAW,CAAC,kCAEd,CACEtgG,MAAO,cACPsgF,SAAU,kCACVggB,UAAW,CAAC,mCCPhB,MAAMqJ,GAUJ,aAAoBC,GAClBD,GAAY1X,cAAgB,IAAI5vB,IAEhC,MAAMwnC,EAAaz9B,GAAY09B,aAAaF,GAM5C,OALwBx9B,GAAY6wB,iBAAiB4M,GAErCxqE,SAAQ,IAAwC,IAAtC,CAAE0qE,GAA8B,EACxDJ,GAAYK,qBAAqBD,MAE5BtwF,KAAKw4E,cASd,4BAAoC8X,GACX39B,GAAY6wB,iBAAiB8M,GACrC1qE,SAAQ,IAAgD,IAA9C7/B,EAAIyqG,GAAoC,EAC/D,MAAOzjD,EAAUC,EAAWzmD,EAAOyiB,GAAe2pD,GAAY+uB,eAC5D8O,EAAgB,GAChB,IACA,GAEFN,GAAY1X,cAAcxuB,IAAIjkE,EAAI,CAChCA,KACAgnD,WACAC,UAAWqH,GAASrH,GAAW,GAC/BzmD,QACAyiB,cACA2a,WAAW,QA1CbusE,GACU1X,mBAAa,EA+Cd0X,UCjDf,MAAMO,GASJ,aAAoBN,GAClBM,GAAkBvC,kBAAoB,IAAItlC,IAE1C,MAAMwnC,EAAaz9B,GAAY09B,aAAaF,GAM5C,OALwBx9B,GAAY6wB,iBAAiB4M,GAErCxqE,SAAQ,IAAmD,IAAjD8qE,EAAa1jD,GAA8B,EACnEyjD,GAAkBvC,kBAAkBlkC,IAAI0mC,EAAar8C,GAASrH,EAAU,IAAI,OAEvEyjD,GAAkBvC,mBAlBvBuC,GACUvC,uBAAiB,EAqBlBuC,UCdf,MAAME,WAAc7oD,OAAO4jC,MACzBv7C,cACEC,MAAM,SAGR,gBACEye,GAAkBC,cAAcy+B,mBAAmBvtE,MACnDA,KAAK4wF,gBACL74B,GAAiB/3D,YAEX6uC,GAAkBC,cAAc+hD,yBAChChiD,GAAkBC,cAAcu+C,qBAChCx+C,GAAkBC,cAAcuS,iBAAiByvC,oBAGzD,qBACQ9wF,KAAK+wF,sBACLliD,GAAkBC,cAAckQ,sBAAsBgyC,sBACtDhxF,KAAKixF,gCAEXjxF,KAAKkxF,sBAELlxF,KAAKwrC,MAAM7gC,MAAM,YAMXumF,sBACN,MAAMlvC,EAAenT,GAAkBC,cAAcuS,iBAAiBma,cACtE3sB,GAAkBC,cAAc6H,kBAAkBsL,kBAAkBD,GAOtE,sBACE,MAAMmvC,EAAmBnxF,KAAKk3E,MAAMzoF,KAAKjN,IAAI82F,GAAWE,cAAcv5F,MAAQ,GACxEu5F,EAAgB0X,GAAYllE,MAAMmmE,GACxCtiD,GAAkBC,cAAcsiD,iBAAiB5Y,SAC3CtgF,QAAQqtD,IACZ7sC,MAAM81C,KAAKgqB,EAAcvsD,UAAUtpC,KACjCqzB,eAAyBy4D,GAAUzuE,KAAMkzE,EAAUnmC,SAAUmmC,EAAUlmC,cAS7E,sCACE,MAAMqkD,EAAwBrxF,KAAKk3E,MAAMzoF,KAAKjN,IAAI82F,GAAWG,mBAAmBx5F,MAAQ,GAClFw5F,EAAqBgY,GAAkBzlE,MAAMqmE,GACnDxiD,GAAkBC,cAAcwiD,sBAAsB7Y,SAChDvgF,QAAQqtD,IACZ7sC,MAAM81C,KAAKiqB,EAAmB95C,WAAWh8C,KACvCqzB,UAAA,IAAQ/2B,EAAK4V,GAAM,eAAW45E,GAAUzuE,KAAM/gB,EAAK4V,OAQjD+7F,gBACN/hD,GAAkBC,cAAc6H,kBAAkBg5C,kBAAkBx9C,IACpEnmB,OAAOC,OAAOijB,IAAatpB,SAAQ6nC,GACjCztD,KAAKm4D,KAAKrP,MAAM2E,EAAMxuE,IAAKo1D,GAASoZ,EAAM7+B,MAAM,MAElD5C,OAAOC,OAAO2a,IAAYhhB,SAAQ6nC,GAChCztD,KAAKm4D,KAAKo5B,WAAW9jC,EAAMxuE,IAAKwuE,EAAM3mB,QAAS2mB,EAAM1mB,WAEvD/a,OAAOC,OAAOqsD,IAAY1yD,SAAQ6nC,GAASztD,KAAKm4D,KAAK1pE,KAAKg/D,EAAMxuE,IAAKwuE,EAAM7+B,SAIhE+hE,UChFA,MAAMa,GAKnBrhE,cAAe,KAJPigD,kBAAY,OACZhiD,kBAAY,OACZniB,iBAAW,OA8FZ6hE,gBAAkB,IAAMp1D,MAAM81C,KAAKxuD,KAAKowE,cAAc,KACtDtpD,gBAAkB,IAAMpO,MAAM81C,KAAKxuD,KAAKouB,cAAc,KACtD6/D,eAAiB,IAAMv1E,MAAM81C,KAAKxuD,KAAKiM,aA7F5CjM,KAAKowE,aAAe,IAAI/wE,IAAI,IAC5BW,KAAKouB,aAAe,IAAI/uB,IAAI,IAC5BW,KAAKiM,YAAc,IAAI5M,IAAI,IAG7B,sBACMwvC,GAAkBC,cAAcutB,WAAWC,GAASC,mBAClDv8D,KAAKyxF,yBACLzxF,KAAK2jD,kBACX3jD,KAAKowE,aAAe,IAAI/wE,IACtBwvC,GAAkBC,cAAcuS,iBAAiBI,qBAAqB2uB,eASnErxB,eAAeiC,GACpBhhD,KAAKowE,aAAav3E,IAAImoD,GASxB,wBACE,MAAM/0C,QAAoB8/E,aACxBl9C,GAAkBC,cAAcymB,kBAElCv1D,KAAKiM,YAAc,IAAI5M,KACpB4M,GAAe,IACbzE,QAAOrF,GAAoC,cAAtBA,EAAW0O,SAChCwU,MAAK,CAAC3U,EAAGghF,IAAOhhF,EAAE8B,SAAWk/E,EAAEl/E,SAAW,EAAI,IAC9C7vB,KAAIwf,GAAcA,EAAWpc,GAAGihB,cAYvC,oBAA2Bi4C,EAA8Bl5D,GACvD,GAAI8oD,GAAkBC,cAAcutB,WAAWC,GAASq1B,MACtD,OAAO3xF,KAAKi/C,GAAe2mB,IAAI7/E,GAO/B,OAAoB,UALGk1D,GACrB5C,GAAcvJ,cAAcwJ,iBAC3B,GAAEqa,GAAYuC,WAAWjW,MAAkBl5D,KAC5C,CAAC,MAAO,OASd,yBACE,MAAMyyF,EAAgB3pC,GAAkBC,cAAcC,mBAChD3gB,EAAeygB,GAAkBC,cAAchoB,kBAC/CtD,EAAQqrB,GAAkBC,cAAc9nB,WAGxC4qE,EAAc,IAAIhpC,IACxBplC,EAAMoC,SAAQnO,GAAQm6E,EAAY5nC,IAAIvyC,EAAKze,KAAMye,KAEjD2W,EAAaxI,SAAQxM,IACnB,MAAMsE,EAAkBtE,EAAYpgB,KAAKgO,WACnC6qF,EAAcz4E,EAAYpE,UAAUzV,QACxC,CAACtI,EAAQq2B,KAAQ,aAAKr2B,KAAqC,QAA1B,EAAC26F,EAAYpwG,IAAI8rC,UAAS,QAAzB,EAA2B3J,cAC7D,GAEIirB,EAAY4pC,EAAch3F,IAAIk8B,GAEpC,GAAIkxB,EAAW,CAEb,MAAMkjD,EAAe,IAAKljD,EAAWjrB,UAAWkuE,GAChDhjD,GAAkBC,cAAcijD,gBAAgBD,EAAa/kD,SAAU+kD,GACvE9xF,KAAKouB,aAAav1B,IAAIi5F,EAAa/kD,eC1EpC,IAAKuvB,IAGX,SAHWA,KAAQ,sBAARA,EAAQ,YAGnB,CAHWA,QAAQ,KAuBL,MAAMztB,WAA0B/G,QAK7C3X,YAAY3L,EAAsCwtE,GAChD5hE,MAAM5L,GAAQ,KAJNytE,YAAM,OACTnC,eAAS,OAuFT/gD,iBAAmB,IAAM2F,GAAU10C,KAAKiyF,OAAOzZ,eAAe,KAC9DjjB,eAAiB,IAAM7gB,GAAU10C,KAAKiyF,OAAOC,aAAa,KAC1DprE,gBAAkB,IAAM4tB,GAAU10C,KAAKiyF,OAAO7jE,cAAc,KAC5DuoB,gBAAkB,IAAMjC,GAAU10C,KAAKiyF,OAAOE,cAAc,KAC5DnrE,SAAW,IAAM0tB,GAAU10C,KAAKiyF,OAAOzuE,OAAO,KAC9C2qE,sBAAwB,IAAMz5C,GAAU10C,KAAKiyF,OAAOxZ,oBAAoB,KACxEz5B,oBAAsB,IAAMtK,GAAU10C,KAAKiyF,OAAOG,kBAAkB,KACpE/wC,eAAiB,IAAM3M,GAAU10C,KAAKiyF,OAAOI,aAAa,KAC1DlhB,mBAAqB,IAAMz8B,GAAU10C,KAAKiyF,OAAOK,iBAAiB,KAClEj2B,WAAc21B,GAAuBhyF,KAAKiyF,OAAOD,WAAaA,EAAS,KACvE/K,yBAA2B,IAAMjnF,KAAKiyF,OAAOM,sBAAsB,KACnE7L,eAAiB,IAAM1mF,KAAKiyF,OAAOO,YAAY,KAC/C5F,YAAc,IAAM5sF,KAAKiyF,OAAOQ,SAAS,KACzC7L,gBAAkB,IACvB5mF,KAAKiyF,OAAOO,YAAcvC,GAAmBjwF,KAAKiyF,OAAOS,aAjGzD7jD,GAAkBiN,SAAW97C,KAC7BA,KAAK8vF,WAAY,EACjB9vF,KAAKiyF,OAAS,CACZzZ,cAAe,IAAI5vB,IACnBspC,iBAAa/rG,EACbioC,kBAAcjoC,EACdmsG,qBAAiBnsG,EACjBusG,aAAc,GACdV,SAAUA,EACVxuE,WAAOr9B,EACPqsG,aAAa,EACbC,SAAU,GACVha,mBAAoB,IAAI7vB,IACxBypC,YAAa,IAAI1iB,GACjBgjB,iBAAkB/pF,GAAU2+B,aAC5B4qD,aAAc,IAAIjD,GAClBqD,sBAAuB,GACvBH,iBAAkB,IAAIZ,IAMnBoB,gBACL5yF,KAAKo/E,MAAMkO,UAGNuF,eAAejrF,GACpB5H,KAAKiyF,OAAOC,YAActqF,EAGrBkrF,gBAAgB1kE,GACrBpuB,KAAKiyF,OAAO7jE,aAAeA,EAGtBgjE,iBAAiB5Y,GACtBx4E,KAAKiyF,OAAOzZ,cAAgBA,EAGvBuZ,gBAAgBgB,EAAiBnkD,GACtC5uC,KAAKiyF,OAAOzZ,cAAcxuB,IAAI+oC,EAASnkD,GAGlCokD,SAASxvE,GACdxjB,KAAKiyF,OAAOzuE,MAAQA,EAGfyvE,uBAAuBN,GAC5B3yF,KAAK2yF,iBAAmBA,EAGnBrB,sBAAsB4B,GAC3BlzF,KAAKiyF,OAAOxZ,mBAAqBya,EAGnC,yBACElzF,KAAKiyF,OAAOS,mBCzGT18E,iBACL,MAAMnP,EAAWnkB,KAAMkyD,WAAW5oC,QAAQnF,SACpC40C,QAAiBpiD,aAAS,WAAUwN,YAAoB,MAAO,CACnE6pE,YAAa7hC,GAAkBC,cAAcymB,iBAAiBmb,YAC9DyiB,aAActkD,GAAkBC,cAAcymB,iBAAiB49B,aAC/DC,kBAAkB,EAClBC,eAAe,IAEjB,IAAK53C,EAAU,MAAO,GACtB,MAAMouC,EAAqC,MAApBpuC,EAAS5qC,aAAuB4qC,EAASq1B,OAAS,GACnEwiB,EAAiB3tE,IAAElV,OAAOo5E,GAAgBlB,GAAiB,IAAIt7F,KAAKs7F,EAAcp2E,UAExF,OADA+gF,EAAe1tE,SAAQ9zB,GAAYA,EAAQ+0F,UAAY/0F,EAAQ+0F,UAAUlkG,IAAI01F,MACtEib,ED6F4BC,GAGnC,qBACEvzF,KAAKiyF,OAAOQ,eAAiB7G,KAGxB+G,iBAAiB5mF,GACtB/L,KAAKiyF,OAAOU,iBAAiB5mF,GAGxBwhE,mBAAmB/hC,GACxBxrC,KAAKiyF,OAAOK,gBAAkB9mD,EAGzBgoD,gBAAgB3+F,GAEnBmL,KAAKiyF,OAAOO,iBADArsG,IAAV0O,GACyBmL,KAAKiyF,OAAOO,YAEb39F,EAIvB4+F,mBAAmBzM,GACxBhnF,KAAKiyF,OAAOM,sBAAwBvL,EAAoBoC,WAvFvCv6C,GACZiN,cAAQ,EADIjN,GA4BZC,YAAc,IAAM4F,GAAU7F,GAAkBiN,UA+EzD,MAAMt3B,GAAS,CACbkvE,OAAO,EACPtnG,KAAM07C,UACN9+C,MAAOm/C,GAAWvlD,EAClBqG,OAAQk/C,GAAWC,EACnBurD,QAAS,CACPC,QAAS,UAEXpkC,MAAO,CACL/mC,KAAMqf,SAAa+rD,IACnBC,OAAQ,gBAEVC,IAAK,CACHtyG,OAAQ,IAEV+pD,MAAO,CACLmlD,GACA/F,GACAwD,GACAjG,GACA1c,GACAie,GACAhW,GACA2Y,GACAnW,K/C7KGlgE,eAAeu7D,GAAS3B,GAC7B,GAA8D,YAA1D/gC,GAAkBC,cAAcymB,iBAAiBphD,KACnD,OAGF,MAAMtoB,EAAU,CACd0kF,OAAQ,MACRC,QAASC,GAAc5hC,GAAkBC,cAAcymB,iBAAiBmb,aACxEtrF,KAAMslC,KAAK7iB,UAAU,CACnBmpE,WAAYpB,KAIVe,QAAaC,MAChB,GAAEhoE,KAAUioE,yBAAyBhqE,wBACtChb,GAGF,OAAI8kF,GAAQA,EAAKqjB,GACRrjB,OADT,EA2BF,SAASF,GAAcC,GACrB,MAAMF,EAAU,IAAIyjB,QAIpB,OAHAzjB,EAAQ0jB,OAAO,SAAU,oBACzB1jB,EAAQ0jB,OAAO,gBAAkB,UAASxjB,KAC1CF,EAAQ0jB,OAAO,eAAgB,oBACxB1jB,EiDgBMmhB,OApEf,WACE,MAAM3lF,EAAUwT,aAAiBzT,GAASA,EAAMC,UAC1CtJ,EAAWC,cAEXyrB,EAAe5O,aAAiBzT,GAASA,EAAMqN,YAAYgV,eAC3D5K,EAAQhE,aAAiBzT,GAASA,EAAMqN,YAAYoK,SAEnD2wE,EAAeC,GAAoB3vG,YAAe,IAClD+tG,EAAa6B,GAAkB5vG,YAAe,GAiCrD,OA/BAA,aAAgB,KACdie,EAASokB,8BACTpkB,EAASqkB,4BACR,CAACrkB,IAEJje,aAAgB,KACd,MAAMikE,EFoKD,IAAI7Z,GAAkBrqB,GAAQ83C,GAASq1B,MEnK5C,MAAO,KACLjpC,EAAKonC,WAAY,EACjBpnC,EAAKkqC,gBACLlqC,EAAKvT,SAAQ,MAEd,IAEH1wD,aAAgB,KACdoqD,GAAkBC,cAAc+jD,eAAe,CAC7CniB,YAAa1kE,EAAQ0kE,YACrByiB,aAAcnnF,EAAQmnF,aACtBh/E,KAAMnI,EAAQmI,KACdvP,KAAMoH,EAAQpH,OAEhBiqC,GAAkBC,cAAcgkD,gBAAgB1kE,GAChDygB,GAAkBC,cAAckkD,SAASxvE,KAOxC,CAACxX,EAASoiB,EAAc5K,IAGzB,uCACE,sBAAKz9B,GAAG,iBACPouG,GACC,uBAAKvvG,UAAU,aAAY,UACzB,yBACEhB,QAASoyB,gBACDu7D,GAAS,IACf+iB,MAAM,iCACN,wBAIJ,yBACE1wG,QAAS,KACPywG,GAAgB7B,GAChB3jD,GAAkBC,cAAc0kD,mBAChC,SAEDhB,EAAc,oBAAsB,6B,UC/DjD,SAAS+B,GAAiBC,GACxB,OAAQ70G,GACN,eAAC,IAAY,CACXiE,QAAU6E,IACR,IACM+rG,EAAkB5wG,SACpB4wG,EAAkB5wG,QAAQ6E,GAE5B,MAAOgsG,GAEP,MADAhsG,EAAMisG,iBACAD,EAILhsG,EAAMksG,kBACU,IAAjBlsG,EAAM2xD,QACJo6C,EAAkB/yG,QAAuC,UAA7B+yG,EAAkB/yG,QAC/CgH,EAAMmsG,SACNnsG,EAAMosG,QACNpsG,EAAMqsG,SACNrsG,EAAMssG,WAEPtsG,EAAMisG,iBACN/0G,EAAMq1G,aAGV7iE,KAAMxyC,EAAMwyC,QACRqiE,IAgBK,SAASS,GAAiB,GAIiC,IAJjC,GACvCzjF,EAAE,QACFulD,KACGy9B,GACkE,EACrE,OAAO,eAAC,IAAI,CAAChjF,GAAIA,EAAIulD,QAASA,EAASloC,UAAW0lE,GAAiBC,KC6BtDU,OA/D+Cv1G,IAC5D,MA2BMw1G,EAAkBx1G,EAAM2/B,aAAe3/B,EAAM2/B,cAAgB3/B,EAAMgkB,KAAKyxF,UACxEC,EAAiBF,GAAmD,cAAhCx1G,EAAMgkB,KAAK2xF,iBAC/CC,EAC4B,cAAhC51G,EAAMgkB,KAAK2xF,kBACX31G,EAAM2/B,cACL3/B,EAAM2/B,cAAgB3/B,EAAMgkB,KAAK6xF,eAChCL,GACAx1G,EAAMw0B,OAASC,IAAKqa,OAExB,OACE,uCACE,eAACwmE,GAAgB,CACfzjF,GAAK,YAAW7xB,EAAMknB,oBAAoBlnB,EAAMgkB,KAAKzN,eACrDzS,KAAK,aACLkI,SAAO,EACPpF,MAAM,UAER,eAAC,IAAM,CACL9C,KAAK,UACLkI,SAAO,EACP/H,QApC2BoyB,gBACTC,aAAwB,CAC5CC,SACE,uCACE,8DACA,qFAGJE,eAAgB,SAChBC,cAAe,iBAGf12B,EAAM81G,4BAA4B91G,EAAMgkB,KAAKzN,eAyB3CvP,UAAW0uG,EACX9uG,MAAM,gBAER,eAAC,IAAM,CACL9C,KAAK,aACLkI,SAAO,EACP/H,QAtDwBoyB,gBACNC,aAAwB,CAC5CC,SAAU,qCACVE,eAAgB,SAChBC,cAAe,cAGf12B,EAAM+1G,yBAAyB/1G,EAAMgkB,KAAKzN,eAgDxCvP,UAAW4uG,EACXhvG,MAAM,iBCxBCovG,OAxCuCh2G,IAEpD,IAAIuF,EACAgqB,EACA/vB,EAEJ,OALsBQ,EAAMgkB,KAAKsL,eAM/B,KAAKE,IAAgB1B,OACnBvoB,EAAWxB,IAAUyiB,KACrB+I,EAAW,iBAAgBvvB,EAAMgkB,KAAKiyF,6BAChCj2G,EAAMgkB,KAAKkyF,gBACjB12G,EAASC,IAAOC,QAChB,MACF,KAAK8vB,IAAgB7M,QACnBpd,EAAWxB,IAAU0rB,KACrBF,EAAW,qBAAoBvvB,EAAMgkB,KAAKiyF,6BACpCj2G,EAAMgkB,KAAKkyF,gBACjB12G,EAASC,IAAOG,QAChB,MACF,KAAK4vB,IAAgBE,KACnBnqB,EAAWxB,IAAU4rB,MACrBJ,EAAW,eAAcvvB,EAAMgkB,KAAKiyF,6BAC9Bj2G,EAAMgkB,KAAKkyF,gBACjB12G,EAASC,IAAOK,OAChB,MACF,QACEyF,EAAWxB,IAAU6rB,QACrBL,EAAU,iBACV/vB,EAASC,IAAOowB,QAGpB,OACE,+BACE,eAAC,IAAQ,CAACxrB,QAASkrB,EAAS7S,UAAWzd,IAAS2d,KAAMmS,eAAgB,GAAIE,MAAM,EAAK,SACnF,eAAC,IAAI,CAACnrB,KAAMyB,EAAU/F,OAAQA,S,qBCKtC,MAAM22G,GAA2B,wBAsR3BC,GAAgF,CACpF36C,OAAQ,CAAC13D,IAAUsyG,OAAQ,iBAC3BC,KAAM,CAACvyG,IAAUwyG,KAAM,QACvBC,OAAQ,CAACzyG,IAAU0yG,OAAQ,UAC3B90F,cAAe,CAAC5d,IAAU2yG,cAAe,iBACzCC,KAAM,CAAC5yG,IAAU6yG,KAAM,QACvBC,MAAO,CAAC9yG,IAAU+yG,SAAU,SAC5Bt/F,KAAM,CAACzT,IAAUO,KAAM,cACvB6kE,MAAO,CAACplE,IAAUgzG,MAAO,SACzB,iBAAkB,CAAChzG,IAAUizG,gBAAiB,WAC9C,eAAgB,CAACjzG,IAAUkzG,cAAe,aAC1C,eAAgB,CAAClzG,IAAUmzG,OAAQ,eAa/BC,GAA6BlyF,IACjC,OAAQA,GACN,IAAK,SACL,IAAK,OACL,IAAK,SACL,IAAK,gBACL,IAAK,OACL,IAAK,QACL,IAAK,OACL,IAAK,QACL,IAAK,iBACL,IAAK,eACL,IAAK,eACH,MAAO1f,EAAUqB,GAASwvG,GAAsBnxF,GAChD,MAAO,CAAE1f,WAAUqB,SACrB,QAEE,MAAO,CACLrB,SAAUxB,IAAU8Y,QAKbu6F,OAnUqCp3G,IAOlD,MAAOq3G,EAAmBC,GAAwBvyG,mBAChD/E,EAAMu3G,aAAalwF,aAKdhD,EAAamzF,GAAkBzyG,mBAAS/E,EAAMwhB,WAI9Cc,EAAaC,GAAkBxd,mBAAuC,UAYtE0yG,EAAiBC,GAAsB3yG,oBAAS,GAEvDua,qBAAU,KACRq4F,MAEC,CAAC33G,EAAMuW,aAAcvW,EAAMoW,aAE9B,MAAMuhG,EAAmB,KACvBL,EAAqBt3G,EAAMu3G,aAAalwF,YACxCmwF,EAAex3G,EAAMwhB,UACrBe,EAAe,SACfm1F,GAAmB,IAmBrB,MAAME,EACHC,GACD,KACE,MAAMC,EAAuB1kF,aAAiBikF,QAAqB7wG,SAAcA,EAC3E8a,EAAKthB,EAAM+3G,WAAaD,GAAwB,GAClDx2F,EAAK,GAAKA,EAAKthB,EAAMuhB,MACvB5hB,aACG,MAAK2hB,EAAG+F,8CAA8CrnB,EAAMuhB,MAAM8F,eAIrEwwF,EAAa73G,EAAMuW,aAAcvW,EAAMoW,WAAY0hG,EAAsBzzF,IA6DzE2zF,EAAyB,KAC7B,MAAMF,EAAuB1kF,aAAiBikF,QAAqB7wG,GACnE,OAAOxG,EAAMu3G,eAAiBO,GAAwB93G,EAAMwhB,WAAa6C,GAerE3Z,EAAoBstG,IACpBC,EAAiB,CACrBz4G,OAAQkL,EAAoBjL,IAAOG,QAAUH,IAAOsM,KACpDC,SAAUtB,EACVzF,UAAWkxG,IAEP+B,EAAoB,CACxB14G,OAAQkL,EAAoBjL,IAAOK,OAASL,IAAOsM,KACnDC,SAAUtB,EACVzF,UAAWkxG,IAEPgC,EAA4B,CAChC34G,OAAQkL,EAAoBjL,IAAOC,QAAUD,IAAOsM,KACpDC,SAAUtB,EACVzF,UAAWkxG,IAKPiC,EAAUp4G,EAAM+3G,WAAa3kF,aAAiBikF,QAAqB7wG,IAAc,GACjF6xG,EAAiB,GAAEr4G,EAAM+3G,UAAY,EAAI,IAAM,KAAK/3G,EAAM+3G,gBAC9D/3G,EAAMuhB,MAAQvhB,EAAM+3G,YAGtB,OACE,uBAAK9yG,UAAU,gBAAe,WAC1BwyG,GAAmB/sG,EACnB,eAAC,IAAM,CAACtL,QAAS,8DACf,KAEJ,sBAAK6F,UAAU,wBAAuB,SACpC,gBAAC,IAAE,iCAAqBjF,EAAMs4G,iBAEZ,OAAnBt4G,EAAMgoB,SACL,sBAAK/iB,UAAU,gCAA+B,SAC5C,gBAAC,IAAG,WAAEjF,EAAMgoB,SAASX,WAAU,SAE/B,KAEJ,sBAAKpiB,UAAU,2BAA0B,SACvC,uBAAKA,UAAU,oBAAmB,UAChC,uBAAKA,UAAU,gBAAe,UAC5B,kDACA,iCACI,GAAEjF,EAAM+3G,eAAe/3G,EAAMuhB,QAAS,IACxC,eAAC,IAAM,CAACzd,KAAK,UAAU23F,OAAK,EAACzvF,SAAO,EAAC/H,QArGhBoyB,gBACTC,aAAwB,CAC5CC,SACE,uCACE,0DACA,iFAGJG,cAAe,cACfD,eAAgB,YAGhBz2B,EAAMu4G,wBAAwBv4G,EAAMuW,aAAcvW,EAAMoW,qBA4FpD,uBAAKnR,UAAU,gBAAe,UAC5B,kDACA,+BACE,eAAC,IAAY,CACXA,UAAU,mBACVsZ,cA1EoB,CAACi6F,EAAuBC,KACxDnB,EAAqBmB,IA0ETvjG,MAAOmiG,GAAqB,GAC5BqB,eAAgBz5G,IAAS6vB,MACzBtiB,MAAM,EACNgS,YAAa65F,EACb74G,OAAQ44G,EAAU,GAAKA,EAAUp4G,EAAMuhB,MAAQ9hB,IAAOK,OAASL,IAAOsM,KACtE0S,IAAK,EAAIze,EAAM+3G,UACfr5F,IAAK1e,EAAMuhB,MAAQvhB,EAAM+3G,UAAY/3G,EAAMuhB,MAAQvhB,EAAM+3G,eAAYvxG,EACrE+wC,SAAU,GACV34B,cAAe,GACf+5F,cAAe,WAIrB,uBAAK1zG,UAAU,WAAU,UACvB,6CACA,+BAAO,GAAEmzG,OAAap4G,EAAMuhB,kBAKlC,sBAAKtc,UAAU,mBAAkB,SAC/B,eAAC,KAAQ,CACPiQ,MAAOmP,EACPhe,SAAUmxG,EACVl1F,YAAaA,EACbs2F,YA/Da1zG,GAAsCqd,EAAerd,GAgElE2zG,wBA5FyBC,GAC/BvgG,QAAQC,QACN,eAACiJ,GAAA,EAAQ,CACPpd,QAASy0G,EACTp3F,oBAAkB,EAClBC,eAAa,EACbC,WAAS,EACTC,sBAAoB,KAsFlBk3F,gBAAiB,IACjBC,gBAAiB,IACjBC,iBAAkB,IAClBC,QAvLR,SAA+Bj0F,GAC7B,MAAMk0F,EAAgBhC,GAA0BlyF,GAChD,OAAO,eAAC,IAAI,CAACnhB,KAAMq1G,EAAc5zG,SAAU6zG,UAAWD,EAAcvyG,aAyLjD,UAAhB0b,GACC,uBAAKrd,UAAU,+BAA8B,UAC3C,sBAAKA,UAAU,6BAA4B,SACzC,eAACgH,EAAA,EAAa,CACZpI,MAAM,eACNC,KAAMC,IAAU+yB,YAChB7yB,QAAS2zG,EAAqB53G,EAAMq5G,mBACpCntG,QAAS+rG,MAGb,sBAAKhzG,UAAU,gCAA+B,SAC5C,eAACgH,EAAA,EAAa,CACZpI,MAAM,kBACNC,KAAMC,IAAUqyB,MAChBnyB,QA1IW,KAChB+zG,MAA4Bv3G,OAAO64G,QAAQ,+CAC9ChC,EAAqBt3G,EAAMu3G,aAAclwF,YACzCmwF,EAAex3G,EAAMwhB,UAErBriB,aAAmB,aAAc,OAsIzB+M,QAASgsG,SAKjB,sBAAKjzG,UAAU,sCAAqC,SAClD,eAACgH,EAAA,EAAa,CACZpI,MAAM,oBACNC,KAAMC,IAAUw1G,QAChBt1G,QAAS2zG,GAtLmC,CAClDrhG,EACAH,EACAmhG,EACA/1F,KAKAk2F,GAAmB,GAFjB13G,EAAMw5G,6BAA6BjjG,EAAcH,EAAYmhG,EAAc/1F,MAgLvEtV,QAASisG,MAGZn4G,EAAM8hB,YAAc9hB,EAAM+hB,UACzB,uCACE,eAAC,IAAO,IACR,uBAAK9c,UAAU,qCAAoC,4BAClC,6BAAIjF,EAAM8hB,aAAe,OAAKX,GAAcnhB,EAAM+hB,oBC9S9D03F,OAFgBttF,YAAQ,MAV4BpJ,GACjE8J,YACE,CACEwsF,kBAAmBK,gBACnBF,6BAA8BG,2BAC9BpB,wBAAyBqB,qBAE3B72F,IAG2BoJ,CAAkCirF,IC0EjE,MAAMyC,WAAyB/0G,YACtB0rC,YAAYxwC,GACjBywC,MAAMzwC,GAAO,KAkMPmK,iBAA8E,CACpFnK,EACAoW,KACI,IAAD,EACH,MAAM5R,EAAyB,CAC7B,CACEX,MAAQ,qBAAoBuS,EAAa,IACzC7Q,SAAUxB,IAAUyiB,KAEpB/gB,KACE,eAAC,GAAa,CACZuiB,SAAUhoB,EAAM2iB,QAASvM,GAAYgN,SAAS4E,SAC9C5R,WAAYpW,EAAM2iB,QAASvM,GAAYgN,SAAShd,GAChDmQ,aAAcvW,EAAMuW,aACpBwhG,UAAW/3G,EAAM2iB,QAASvM,GAAY0jG,MAAMx4F,GAC5Ci2F,aAAcv3G,EAAM2iB,QAASvM,GAAY0jG,MAAMvC,aAC/Ch2F,MAAOvhB,EAAM2iB,QAASvM,GAAYgN,SAAS7B,MAC3C+2F,YAAat4G,EAAM2iB,QAASvM,GAAY2jG,QAAQ90F,KAChDzD,SAAmD,QAA3C,EAAExhB,EAAM2iB,QAASvM,GAAY0jG,MAAMt4F,gBAAQ,QAAI,GACvDM,WACE9hB,EAAM2iB,QAASvM,GAAY0jG,MAAMp3F,OAC7B1iB,EAAM2iB,QAASvM,GAAY0jG,MAAMp3F,OAAQuC,UACzCze,EAENub,SACE/hB,EAAM2iB,QAASvM,GAAY0jG,MAAMp3F,OAC7B1iB,EAAM2iB,QAASvM,GAAY0jG,MAAM/3F,cACjCvb,IAIVJ,GAAIK,KAAgBkc,SAEtB,CACE9e,MAAQ,YAAWuS,EAAa,IAChC7Q,SAAUxB,IAAU6hB,MACpBngB,KAAM,eAACgc,GAAA,EAAQ,CAACpd,QAASrE,EAAM2iB,QAASvM,GAAYgN,SAAS/e,UAC7D+B,GAAIK,KAAgBmc,kBAEtB,CACE/e,MAAQ,aACR0B,SAAUxB,IAAUqiB,SACpB3gB,KACE,eAAC,GAAqB,CACpBwW,UAAWjc,EAAMwkB,gBACjBtI,mBAAoBlc,EAAMkc,mBAC1BC,mBAAoBkE,KAAKrgB,MAAMmc,mBAC/B7V,kBAAkB,YAGtBF,GAAIK,KAAgBsd,aAGA/jB,EAAM2iB,QAASvM,GAAYgN,SAASxQ,QAAQoS,SAC1ByB,QACpBC,SAAS,eAC7BliB,EAAK+hB,KAAK,CACR1iB,MAAQ,cACR0B,SAAUxB,IAAU4iB,UACpBlhB,KAAM,eAAC,GAAqB,IAC5BW,GAAIK,KAAgBmgB,aAsBxB,MAlB2C,CACzCvgB,SAAU,CACR0gB,EACAC,EACAle,KAEIie,IAAaC,GAGjB3G,KAAKswB,SAAS,CAAEruB,YAAayE,KAE/BviB,KAAM,CACJqiB,kBAAmBriB,EACnBsiB,iBAAkB,IAEpBxgB,kBAAmB,YAIrB,KAGMsE,gBAAmDwL,IACzD,MAAM6Q,EAAe,YAAW5G,KAAKrgB,MAAMknB,mBACrC8yF,EAAuB/yF,EAAe,IAAG5G,KAAKrgB,MAAMuW,eACpD+Q,EAAqC,CAAClR,EAAa,EAAGiK,KAAKrgB,MAAM2iB,QAAS3d,QAQ1EmjB,EACJ,eAACC,EAAA,EAAoB,CACnBb,YANgB,IAClBC,KAAQjB,KAAKyzF,EAAwB,KAAI5jG,EAAa,GAAGiR,cAMvDI,cALkB,IAAMD,KAAQjB,KAAKU,GAMrCK,iBAAkBA,GACd,iBAIFgB,EACJ,eAACC,EAAA,EAAwB,CACvBtkB,QAjBoB,IACtBujB,KAAQjB,KAAKyzF,EAAwB,KAAI5jG,EAAa,GAAGiR,cAiBvDC,iBAAkBA,GACd,qBAIFkB,EACJ,eAACC,EAAA,EAA4B,CAACnB,iBAAkBA,GAAsB,iBAKxE,MAAO,CACL6B,cAAe,CAHC,eAACN,EAAA,EAAmB,CAACC,iBAAkBzI,KAAKyD,YAAgB,QAI5EsF,YAAa,CAACd,EAAgBE,EAAcL,KA1T9C9H,KAAK+L,MAAQ,CACX9J,YAAa7b,KAAgBkc,SAG/BtC,KAAKyD,WAAazD,KAAKyD,WAAW20B,KAAKp4B,MAOlCH,oBAGL,GAFAG,KAAKrgB,MAAMi6G,mBAAmB55F,KAAKrgB,MAAMuW,eAEpC8J,KAAKrgB,MAAM2iB,QACd,OAGF,IAAIvM,EAAaiK,KAAKrgB,MAAMoW,WACxBiK,KAAKrgB,MAAMoW,YAAciK,KAAKrgB,MAAM2iB,QAAQ3d,SAC9CoR,EAAaiK,KAAKrgB,MAAM2iB,QAAQ3d,OAAS,GAG3C,MAAMoe,EAA6B/C,KAAKrgB,MAAM2iB,QAAQvM,GAAYgN,SAClE,IAAI5J,EAAiB,GAEjB4J,EAAS3W,OAAS4W,IAAcC,cAEhC9J,EADE4J,EAAS5J,OACF4J,EAAS5J,OAET4J,EAASG,kBAAoB,IAI1ClD,KAAKrgB,MAAMijB,wBAAwBzJ,GAO9Bs6B,qBAEL,QAA2BttC,IAAvB6Z,KAAKrgB,MAAM2iB,QACb,OAEF,MAAMvM,EAAaiK,KAAKrgB,MAAMoW,gBAUS5P,IAAnC6Z,KAAKrgB,MAAM2iB,QAAQvM,GACrBoR,KAAQjB,KAAM,YAAWlG,KAAKrgB,MAAMknB,oBAEpC7G,KAAKmD,oBAAoBnD,KAAKrgB,OAI3B0gB,SAAU,IAAD,gBACd,QAA2Bla,IAAvB6Z,KAAKrgB,MAAM2iB,QACb,OACE,eAAC,IAAa,CACZ1d,UAAWG,IAAW,kBAAmByK,IAAQ8Q,MACjD0I,YAAY,8BACZvlB,KAAM,eAAC,IAAO,CAAC0B,KAAM8jB,IAAYC,UAMvC,MAAMnT,EACJiK,KAAKrgB,MAAMoW,YAAciK,KAAKrgB,MAAM2iB,QAAQ3d,OACxCqb,KAAKrgB,MAAM2iB,QAAQ3d,OAAS,EAC5Bqb,KAAKrgB,MAAMoW,WAEXgN,EAAW/C,KAAKrgB,MAAM2iB,QAAQvM,GAAYgN,SAC1CwI,EAAiC,CACrChhB,gBAAiByV,KAAKzV,gBAAgBwL,GACtC/K,qBACE+X,EAAS3W,OAAS4W,IAAcC,aAAeF,EAAS3W,OAAS4W,IAAc6B,OAC3E,CACE8E,cAAe,SACf5E,WAAY/E,KAAKrgB,MAAMolB,WAAWpiB,IAAIinB,KACtCC,gBAAiB,GACjBC,0BAA2B9J,KAAKrgB,MAAMmqB,0BACtCrB,iBAAkBzI,KAAKyD,WACvBb,wBAAyB5C,KAAKrgB,MAAMijB,wBACpCkC,8BAA+B9E,KAAKrgB,MAAMmlB,8BAC1CiF,yBAA0B/J,KAAKrgB,MAAMoqB,yBACrCE,iBAAiB,EACjBlb,cAAeyV,UAAQC,MACvBzV,cAAyC,QAA5B,EAAU,OAAR+T,QAAQ,IAARA,GAAiB,QAAT,EAARA,EAAUxQ,eAAO,WAAT,EAAR,EAAmB5R,eAAO,QAAIC,UAAQC,QACrDoR,qBAA6B,OAAR8Q,QAAQ,IAARA,GAAiB,QAAT,EAARA,EAAUxQ,eAAO,OAAU,QAAV,EAAjB,EAAmBoS,gBAAQ,WAAnB,EAAR,EAA6BC,OAAQ,aAE5Dze,EACNiE,8BAA+B4V,KAAKrgB,MAAMyK,8BAC1Ce,SAAU,CACRuc,IAAK3E,EACL8H,gBAAkB9nB,OAEpB0H,aAAc,CACZtG,KAAM,IAERsB,kBAAmBua,KAAKrgB,MAAM8F,kBAC9BqE,iBAAkBkW,KAAKlW,iBAAiBkW,KAAKrgB,MAAOoW,GACpDzK,UAAW,CACTyf,wBAAyB/K,KAAKrgB,MAAMorB,wBACpCC,sBAAuBhL,KAAKrgB,MAAMqrB,sBAClClnB,eAAgBkc,KAAKrgB,MAAMmE,eAC3BmnB,sBAAuBjL,KAAKrgB,MAAMsrB,sBAClCE,OAAQnL,KAAKrgB,MAAMwrB,OACnBC,UAAWpL,KAAKrgB,MAAMyrB,UACtBrc,cAAeyV,UAAQC,MACvBzV,cAAyC,QAA5B,EAAU,OAAR+T,QAAQ,IAARA,GAAiB,QAAT,EAARA,EAAUxQ,eAAO,WAAT,EAAR,EAAmB5R,eAAO,QAAIC,UAAQC,QACrD6jB,iBAAyB,OAAR3B,QAAQ,IAARA,GAAiB,QAAT,EAARA,EAAUxQ,eAAO,OAAU,QAAV,EAAjB,EAAmBoS,gBAAQ,WAAnB,EAAR,EAA6BC,OAAQ,OACtDyG,YAAarL,KAAKqL,gBAGtB,OACE,sBAAKzmB,UAAWG,IAAW,kBAAmByK,IAAQ8Q,MAAM,SAC1D,eAAChZ,GAAA,EAAS,IAAKikB,MAWbpI,oBAAoBxjB,GAA+B,IAAD,EAExD,MAAMuW,EAAevW,EAAMuW,aACrBH,EAAapW,EAAMoW,WAEzB,GAAIpW,EAAMk6G,qBAAuB3jG,GAAgBvW,EAAMokB,mBAAqBhO,EAC1E,OAEF,MAAMgN,EAAWpjB,EAAM2iB,QAASvM,GAAYgN,SAE5C,IAAIlH,EAA0C,GAC1CmI,EAAsB,GACtBC,EAAwB,GACxBC,EAAyB,GACzBC,EAA8B,GAElC,GAAIpB,EAAS3W,OAAS4W,IAAcC,YAAa,CAC/C,MAAMmB,EAAerB,EACrBlH,EAAqBuI,EAAavI,mBAClCoI,EAAgBG,EAAaC,QAC7BH,EAAiBE,EAAaE,SAC9BH,EAAkBC,EAAaxI,UAE/BoI,EAAcI,EAAajL,OACtB6K,IACHA,EAAcI,EAAalB,kBAI/BvjB,EAAMmlB,8BAA8B,IACpCnlB,EAAMm6G,gCAAgC5jG,EAAcH,GACpDpW,EAAMo6G,qBAAqB,CACzBl+F,qBAEAkJ,WAAY,CACV,CACElQ,MAAOmP,EACPgB,aAAcf,EACdgB,cAAef,EACf7P,iBAAkB,GAClBH,YAAa,KAGjBiQ,oBAEFxkB,EAAMq6G,qBACuB,QADH,EACxBj3F,EAASxQ,QAAQ2S,kBAAU,QAAIC,IAAwB7C,QAAQhR,UAEjE3R,EAAMs6G,mBAAmBl3F,EAASxQ,SAAS,GAC3C5S,EAAMylB,+BAA8B,GAChCpB,GACFrkB,EAAMijB,wBAAwBoB,GAmI1BqH,cACN,MAAMC,EACJ,eAAChoB,EAAA,EAAqB,CACpBC,sBAAuByc,KAAKrgB,MAAM4D,uBAC9B,cAYR,MAAO,CAPL,eAACM,EAAA,EAAoB,CACnBC,eAAgBkc,KAAKrgB,MAAMmE,eAC3BC,UAAWic,KAAKrgB,MAAMoE,WAClB,aAIYunB,GAGd7H,aACNzD,KAAKrgB,MAAM8oB,mBAGPzI,KAAK+L,MAAM9J,cAAgB7b,KAAgBsd,YAC7C1D,KAAKrgB,MAAMu6G,yBAKFV,UCxZf,MAAMvzG,GAAuC,UA8D9Bk0G,OAFmBruF,aA1D2C,CAACC,EAAOpsB,KAC5E,CACLkc,mBAAoBkQ,EAAMG,WAAW5J,QAAQzG,mBAC7CsQ,qBAAsBJ,EAAMG,WAAW5J,QAAQ6J,qBAC/CpH,WAAYgH,EAAMG,WAAW5J,QAAQyC,WACrCZ,gBAAiB4H,EAAMG,WAAW5J,QAAQ6B,gBAC1C7B,QAASyJ,EAAMC,QAAQouF,SAAS54G,IAAI7B,EAAMuW,cAC1C7L,kBAAmB0hB,EAAMG,WAAW5J,QAAQjY,kBAC5CtG,UAAWgoB,EAAMG,WAAW5J,QAAQve,UACpCqoB,YAAaL,EAAMG,WAAW5J,QAAQ8J,YACtCC,gBAAiBN,EAAMG,WAAW5J,QAAQ+J,gBAC1ClB,OAAQY,EAAMG,WAAW5J,QAAQ6I,OACjCC,UAAWW,EAAMG,WAAW5J,QAAQ8I,UACpC3lB,kBAAmBsmB,EAAMG,WAAW5J,QAAQ7c,kBAC5Co0G,mBAAoB9tF,EAAMG,WAAW5J,QAAQ+3F,kBAC7Ct2F,iBAAkBgI,EAAMG,WAAW5J,QAAQiK,gBAC3C1F,SAAUkF,EAAMC,QAAQnF,aAIuCnE,GACjE8J,YACE,CACEzB,wBAAyB,IAAMja,gCAAsB7K,IACrD+kB,sBAAuB,IAAMha,8BAAoB/K,IACjDg0G,mBAAoB,CAAC1nG,EAAkBC,IACrCF,4BAAkBrM,GAAmBsM,EAASC,GAChDsX,0BAA4B7U,GAC1BD,gCAAsB/O,GAAmBgP,GAC3CwT,iBAAkB,IAAMvV,qBAAWjN,IACnC2c,wBAA0B6J,GAAgB3Y,4BAAkB2Y,EAAKxmB,IACjE6e,8BAAgC5Q,GAC9BD,8BAAoBC,EAAajO,IACnC2zG,mBAAoBU,eACpB79D,oBAAqB,IAAMC,mCAAwBz2C,IACnDnC,eAAgB,IAAMsP,mBAASnN,IAC/B1C,sBAAuB,IAAMqP,0BAAgB3M,IAC7CglB,sBAAwBC,GAAqB3W,0BAAgB2W,EAAUjlB,IACvEs0G,4BAA8BpjG,GAAiBzC,gCAAsByC,EAAMlR,IAC3E8zG,qBAAuBluG,GACrBwJ,yBAAepP,GAAmB4F,GACpCmuG,qBAAuB90F,GAAuB7T,yBAAe6T,EAAYjf,IACzEmE,8BAAgCohB,GAC9Bha,kCAAwBga,EAAcvlB,IACxC6V,mBAAqBvI,GAAuBD,uBAAarN,GAAmBsN,GAC5E2mG,sBAAuB,IAAMzmG,0BAAgBxN,IAC7C6zG,gCAAiC7jG,4BACjCmP,8BAAgCo1F,GAC9BpkG,kCAAwBnQ,GAAmBu0G,GAC7CjrE,oBAAqB,IAAM+M,8BAAmBr2C,IAC9CypC,qBAAsB,IAAM8M,0BAAev2C,IAC3C2pC,oBAAqB,IAAM2M,yBAAct2C,IACzC8jB,yBAA0B,CAACnT,EAAaoT,EAAalT,IACnDH,6BAAmB1Q,GAAmB2Q,EAAKoT,EAAKlT,IAEpD4L,IAG8BoJ,CAA6C0tF,ICnEhEiB,OAjBmC96G,IAChD,GAAIA,EAAMgkB,KAAKzC,OAASvhB,EAAMgkB,KAAK+2F,QAAS,CAC1C,MAAMxrF,EAAW,eAAcvvB,EAAMgkB,KAAK+zF,uBACnC/3G,EAAMgkB,KAAK+2F,QAAU,EAAK,IAAG/6G,EAAMgkB,KAAK+2F,iBAAmB,eAC5D/6G,EAAMgkB,KAAKuzF,cAAgB,EAAI,IAAM,KAAKv3G,EAAMgkB,KAAKuzF,qBAC3D,OACE,+BACE,eAAC,IAAQ,CAAClzG,QAASkrB,EAAS7S,UAAWzd,IAAS2d,KAAMmS,eAAgB,GAAIE,MAAM,EAAK,SACjF,GAAEjvB,EAAMgkB,KAAKg3F,UAAYh7G,EAAMgkB,KAAK+2F,aAAa/6G,EAAMgkB,KAAKzC,YAKpE,OAAO,2CCyCX,MAAM05F,WAAgBn2G,YAKb0rC,YAAYxwC,GACjBywC,MAAMzwC,GAAO,KALPk6C,gBAAU,OACVV,uBAAiB,OACjBC,aAAO,OAqPPyhE,cAAiBl7G,GAChB,eAAC,GAAiB,CAACgkB,KAAMhkB,EAAMgkB,OACtC,KAEMm3F,sBAAyBn7G,GAE7B,eAAC,GAAiB,CAChBiuB,mBAAoBb,GAAgCptB,EAAMgkB,KAAKzN,gBAGnE,KAGM6kG,WAAcp7G,GACb,eAAC,GAAa,CAACgkB,KAAMhkB,EAAMgkB,OAClC,KAIMq3F,WAAa,KACfh7F,KAAKo5B,SACPp5B,KAAKo5B,QAAQO,oBAEf,KAEMshE,sBAAwB,KAC9B,GAAIj7F,KAAKo5B,QAAS,CAChB,MAAM8hE,EAAgBl7F,KAAKo5B,QAAQ+hE,0BAC7BC,EAAgC,IAAlBF,EAAsB,EAAIl7F,KAAKo5B,QAAQiiE,2BAA6B,EACxFr7F,KAAKswB,SAAS,CACZgrE,SAAUF,EACVG,SAAUL,EACVM,eAAgBx7F,KAAKy7F,qBACnB,GACAL,EACAF,EACAl7F,KAAKo5B,QAAQsiE,yBAEfC,eAAkC,IAAlBT,GAAuC,IAAhBE,EACvCQ,kBAAqC,IAAlBV,GAAuBE,IAAgBF,MAG9D,KAEMO,qBAAuB,CAC7BI,EACAP,EACAC,EACAO,IAEoB,IAAbP,EACH,SACAD,IAAaC,EACZ,KAAIM,EAAWP,EAAW,SAASO,EAAWP,KAC9C,KAAIO,EAAWP,EAAW,SAASQ,KACxC,KAEMC,qBAAwBtzG,IACZ,UAAdA,EAAMxJ,KACR+gB,KAAKg8F,YAAYvzG,EAAMwzG,cAAcpnG,QAEvC,KAEMqnG,kBAAqBzzG,IAC3BuX,KAAKg8F,YAAYvzG,EAAMhH,OAAOoT,QAC9B,KAEMsnG,mBAAqB,KACvBn8F,KAAKo5B,UACPp5B,KAAKswB,SAAS,CAAEqK,oBAAqB36B,KAAK+L,MAAM4uB,qBAChD36B,KAAKrgB,MAAMy8G,4BAA4Bp8F,KAAK+L,MAAM4uB,sBAEpD,KAEMqhE,YAAex0F,IAAoB,IAAD,EAC5B,QAAZ,EAAAxH,KAAKo5B,eAAO,OAAZ,EAAcI,eAAehyB,IAC7B,KAEMiyB,YAAe/pB,IACrB1P,KAAKo5B,QAAU1pB,EAAOgqB,IACtB15B,KAAKo5B,QAAQO,mBACb35B,KAAKi7F,yBACL,KAEMoB,UAAY,KACdr8F,KAAKo5B,SACPp5B,KAAKo5B,QAAQiL,gBAAgB,CAC3BC,SAAW,oBAAkB,IAAIj3C,MAAOk3C,qBAExCC,WAAY,CACV,iBACA,qBACA,cACA,YACA,mBACA,gBACA,gBACA,cACA,eACA,kBACA,eACA,WACA,YACA,eACA,YACA,QACA,cAIN,KAEM83D,qBAAwBlwG,GACvB,KACL,GAAI4T,KAAKo5B,QACP,OAAQhtC,GACN,IAAK,QACH,OAAO4T,KAAKo5B,QAAQmjE,0BACtB,IAAK,OACH,OAAOv8F,KAAKo5B,QAAQojE,6BACtB,IAAK,OACH,OAAOx8F,KAAKo5B,QAAQqjE,yBACtB,IAAK,OACH,OAAOz8F,KAAKo5B,QAAQsjE,2BAK5B,KAOMC,+BAAiC,IAClC38F,KAAKrgB,MAAMi9G,iBAIR58F,KAAKrgB,MAAMi9G,iBAChBj6G,KAAIiuB,IAAQ,IACRA,EACHhE,cAAeG,GAAgC6D,EAAS1a,aAAzC6W,CACb/M,KAAKrgB,MAAMitB,mBAGdyY,MAAK,CAACw3E,EAAMC,IAASA,EAAKlwF,cAAcjoB,OAASk4G,EAAKjwF,cAAcjoB,SAV9D,GAzXTqb,KAAK65B,WAAa,CAChB,CACEC,WAAY,GACZC,MAAO,gBACPC,sBAAuBh6B,KAAK86F,sBAC5B9xG,MAAO,GACPwe,QAAQ,EACRozB,WAAW,EACXF,UAAU,EACVqiE,mBAAmB,GAErB,CAAEjjE,WAAY,kBAAmBC,MAAO,kBACxC,CAAED,WAAY,WAAYC,MAAO,iBAAkBpvC,SAAU,KAC7D,CAAEmvC,WAAY,eAAgBC,MAAO,eACrC,CACED,WAAY,QACZC,MAAO,YACPpvC,SAAU,KAEZ,CACEmvC,WAAY,SACZC,MAAO,mBACPpvC,SAAU,IACVqyG,eAAiBttF,IACf,MAAM65B,EAAM75B,EAAO7a,MACnB,OAAO00C,EAAI0rB,OAAO,GAAG56D,cAAgBkvC,EAAIE,MAAM,IAEjDrP,UAAY1qB,GAC2B,cAAjCA,EAAO/L,KAAK2xF,iBACP,CAAE2H,gBAAiBC,UAAOC,QAE5B,CAAEF,gBAAiBC,UAAOE,OAGrC,CACEtjE,WAAY,UACZC,MAAO,gBACPC,sBAAuBh6B,KAAK66F,cAC5BlwG,SAAU,KAEZ,CACEmvC,WAAY,KACZC,MAAO,GACPC,sBAAuBh6B,KAAK+6F,WAC5BpwG,SAAU,IACV0yG,WAAY,CAACC,EAAQC,EAAQC,EAAOC,EAAOC,IACrCF,GAASC,EACJD,EAAM75F,KAAKg3F,UAAY8C,EAAM95F,KAAKg3F,UAEpC2C,EAASC,GAGpB,CACEzjE,WAAY,UACZ6jE,MAAO,UACP30G,MAAO,IACP+wC,MAAO,GACPC,sBAAuBk7D,GACvBj7D,mBAAoB,CAClBpzB,SAAU7G,KAAKrgB,MAAMknB,SACrByY,YAAatf,KAAKrgB,MAAM2/B,YACxBo2E,yBAA0B11F,KAAKrgB,MAAM+1G,yBACrCD,4BAA6Bz1F,KAAKrgB,MAAM81G,4BACxCthF,KAAMnU,KAAKrgB,MAAMw0B,MAEnB3M,QAAQ,EACRozB,WAAW,EACXF,UAAU,EACVqiE,mBAAmB,EACnB3iE,UAAW,CACTtgB,QAAS,IAGb,CAAEggB,WAAY,iBAAkBC,MAAO,gBAAiBM,MAAM,GAC9D,CAAEP,WAAY,mBAAoBC,MAAO,cAAeM,MAAM,GAC9D,CAAEP,WAAY,gBAAiBC,MAAO,eAAgBM,MAAM,GAC5D,CAAEP,WAAY,mBAAoBC,MAAO,kBAAmBM,MAAM,GAClE,CAAEP,WAAY,aAAcC,MAAO,YAAaM,MAAM,GACtD,CAAEP,WAAY,gBAAiBC,MAAO,eAAgBM,MAAM,GAC5D,CAAEP,WAAY,gBAAiBC,MAAO,eAAgBM,MAAM,GAC5D,CAAEP,WAAY,YAAaC,MAAO,WAAYM,MAAM,GACpD,CAAEP,WAAY,2BAA4BC,MAAO,YAAaM,MAAM,GACpE,CAAEP,WAAY,SAAUC,MAAO,QAASM,MAAM,GAC9C,CAAEP,WAAY,WAAYC,MAAO,UAAWM,MAAM,IAGpDr6B,KAAKm5B,kBAAoB,CACvB3xB,QAAQ,EACRozB,WAAW,EACXF,UAAU,GAGZ16B,KAAK+L,MAAQ,CACX4uB,oBAAoB,EACpB2gE,SAAU,EACVC,SAAU,EACVC,eAAgB,SAChBG,gBAAgB,EAChBC,mBAAmB,GAIhBv7F,SACL,MAAMnK,EAA8B6c,aAAiB/S,KAAKrgB,MAAMq8C,MAAMtsB,OAAOxZ,cAEvEH,EAAqBgd,aAAiB/S,KAAKrgB,MAAMq8C,MAAMtsB,OAAO3Z,aAAe,EAGnF,GAAqB,OAAjBG,EAAuB,CACzB,MAAMvW,EAAkC,CACtCuW,eACAH,cAEF,OAAO,eAAC,GAAyB,IAAKpW,IAIxC,MAAMk7C,EACJ,eAAC,IAAa,CACZj2C,UAAU,UACVokB,YAAY,0BACZvlB,KAAM,eAAC,IAAO,CAAC0B,KAAM8jB,IAAYC,UAI/BvF,EAAO3D,KAAK28F,iCAAiCh6G,KAAIszC,GACpDA,EAAEgiE,YAAkEhiE,EAApD,IAAKA,EAAGgiE,YAAa,8BAGlC2F,EACJ,uBAAKh5G,UAAU,mBAAkB,UAC/B,eAAC,IAAS,CAACpB,MAAM,UAAUw3C,SAAS,aAAa0E,QAAQ,EAAK,SAC5D,eAAC,IAAU,CACT35C,GAAG,YACHgoB,OAAO,EACPkP,SAAS,SACT9e,YAAY,gCACZ0/F,WAAY79F,KAAK+7F,qBACjB+B,OAAQ99F,KAAKk8F,sBAIjB,uBAAKt3G,UAAU,gCAA+B,UAC5C,sBAAKA,UAAU,gBAAe,SAC5B,eAAC,IAAM,CACLs+D,OAAQljD,KAAK+L,MAAM4uB,mBACnBl3C,KAAMC,IAAUq6G,SAChB5+G,OAAQ6gB,KAAK+L,MAAM4uB,mBAAqBv7C,IAAOowB,QAAUpwB,IAAOsM,KAChE9H,QAASoc,KAAKm8F,mBAAmB,SAEjC,uBAAMv3G,UAAU,YAAW,iCAG/B,uBAAKA,UAAU,kBAAiB,UAC9B,eAAC,IAAM,CACLnB,KAAMC,IAAUs6G,iBAChBp6G,QAASoc,KAAKs8F,qBAAqB,SACnC3wG,SAAS,EACThF,SAAUqZ,KAAK+L,MAAM4vF,iBAEvB,eAAC,IAAM,CACLl4G,KAAMC,IAAUu6G,aAChBr6G,QAASoc,KAAKs8F,qBAAqB,QACnC3wG,SAAS,EACThF,SAAUqZ,KAAK+L,MAAM4vF,iBAEvB,gBAAC,IAAM,CAAC/2G,UAAU,+BAA+B+B,UAAU,EAAMgF,SAAS,EAAK,UAC7E,+BAAO,QAAOqU,KAAK+L,MAAMuvF,eAAet7F,KAAK+L,MAAMwvF,aACnD,+BAAMv7F,KAAK+L,MAAMyvF,oBAEnB,eAAC,IAAM,CACL/3G,KAAMC,IAAU+rC,cAChB7rC,QAASoc,KAAKs8F,qBAAqB,QACnC3wG,SAAS,EACThF,SAAUqZ,KAAK+L,MAAM6vF,oBAEvB,eAAC,IAAM,CACLn4G,KAAMC,IAAUw6G,gBAChBt6G,QAASoc,KAAKs8F,qBAAqB,QACnC3wG,SAAS,EACThF,SAAUqZ,KAAK+L,MAAM6vF,uBAGzB,sBAAKh3G,UAAU,iBAAgB,SAC7B,eAAC,IAAM,CAACnB,KAAMC,IAAUy6G,OAAQv6G,QAASoc,KAAKq8F,UAAU,SACtD,uBAAMz3G,UAAU,YAAW,qCAO/Bm2C,EACJ,sBAAKn2C,UAAU,sCAAqC,SAClD,eAAC,eAAW,CACVq2C,UAAW,aACXpB,WAAY75B,KAAK65B,WACjBqB,cAAel7B,KAAKm5B,kBACpBM,YAAaz5B,KAAKy5B,YAClB6E,kBAAmBt+B,KAAKg7F,WACxBoD,oBAAqBp+F,KAAKi7F,sBAC1B9/D,QAASx3B,EACTy3B,UAAW,GACXC,YAAY,EACZC,mBAAoB,GACpBiD,uBAAuB,EACvBC,wBAAwB,EACxB6D,yBAAyB,MAKzBr+C,EACJ,uBAAKY,UAAU,UAAS,UACrBg5G,EACD,eAAC,IAAO,IACP7iE,KAIL,OACE,+BACE,eAAChnB,GAAA,EAAc,CACbC,oBAAqBhU,KAAKrgB,MAAMy8G,4BAChCxyG,aAAyCzD,IAAhC6Z,KAAKrgB,MAAMi9G,iBAAiC/hE,EAAiB72C,EACtEwH,WAAW,MAMZioC,mBAAmBC,EAAyBsmD,GAE7Ch6E,KAAKo5B,SAAWp5B,KAAKrgB,MAAMitB,cAAcjoB,SAAW+uC,EAAU9mB,cAAcjoB,QAE9Eqb,KAAKo5B,QAAQmI,WAAWvhC,KAAK28F,mCA4JpB/B,UCjbAyD,OAFUvyF,aAnB8CC,IAAK,CAC1E6wF,iBAAkB7wF,EAAMC,QAAQ4wF,iBAChCt9E,YAAavT,EAAMC,QAAQsT,YAC3B1S,cAAeb,EAAMC,QAAQY,cAC7BuH,KAAMpI,EAAMC,QAAQmI,KACpBtN,SAAUkF,EAAMC,QAAQnF,aAGyCnE,GACjE8J,YACE,CACE4B,+BAAgCU,2BAChCstF,4BAA6BkC,wBAC7B5I,yBAA0B6I,qBAC1B9I,4BAA6B+I,yBAE/B97F,IAGqBoJ,CAA6C8uF,I,UC0FvD6D,OA/FkE9+G,IAC/E,MAAM,wBAAE++G,GAA4B/+G,GAC9B,cAAEoP,EAAa,cAAEC,GAAkBrP,GAElCg/G,EAAeC,GAAkBn6G,WAA2B0K,IAAgB,KAC5EkoC,EAAcwnE,GAAkBp6G,YAAwB,GAEzDq6G,EAAmBr6G,eACtBwyE,IACC4nC,GAAe,GACfD,EAAe3nC,KAEjB,CAAC4nC,EAAgBD,IAEbrnE,EAAoB9yC,eAAkB,KAC1Co6G,GAAe,KACd,CAACA,IACEE,EAAsBt6G,eAAkB,KAC5Co6G,GAAe,GACfH,EAAwBC,KACvB,CAACA,EAAeE,EAAgBH,IAE7BpwG,EAA4C7J,eAChD,CAAC8J,EAAK,KAAD,IAAE,YAAEC,GAAa,SACpB,eAAC,IAAQ,CAAwB5K,QAAS4K,EAAaC,KAAMF,EAAKG,aAAnDH,EAAKG,eAEtB,IAGIV,EAAoDvJ,eACxD,IAAqC,IAApC,eAAEwJ,EAAc,WAAEC,GAAY,EAC7B,MAAMC,EAAiBC,IAAiBzL,IAAIuL,GACtC8wG,EAAiBC,IAAiBt8G,IAAIuL,GAE5C,OACE,gBAAC,IAAI,CAACG,MAAOJ,EAAe,UACzBE,EACD,eAAC,IAAQ,CAAoBM,KAAK,WAAWhL,KAAK,MAAK,SACpDu7G,GADW,qBAMpB,IAGIE,EAAgCtwG,KAAOC,SAEvCswG,EACJ,gBAAC,IAAM,CACLC,mBAAmB,EACnB5nE,sBAAsB,EACtB5yC,UAAU,6BACVnB,KAAMC,IAAU4lB,MAChBC,oBAAoB,EACpBnO,OAAQi8B,EACR7tB,QAAS+tB,EACThxC,MAAM,sCAAqC,UAE3C,uBAAK3B,UAAW4K,IAAQia,YAAY,iDACE,uEAA4C,QAAM,IACrF/Z,YAAmBX,EAAeC,GAAc,OAAK,6BAAI2vG,EAAcjwG,cAAgB,OAE1F,sBAAK9J,UAAW4K,IAAQka,cAAc,SACpC,uBAAK9kB,UAAW4K,IAAQioC,sBAAsB,UAC5C,eAAC7rC,EAAA,EAAa,CAACpI,MAAM,SAASI,QAAS2zC,EAAmB1rC,QAAS,CAAEF,SAAS,KAC9E,eAACC,EAAA,EAAa,CACZpI,MAAM,UACNI,QAASm7G,EACTlzG,QAAS,CAAEF,SAAS,EAAOxM,OAAQC,IAAOK,kBAOpD,OACE,uCACE,eAACy/G,EAA6B,CAC5BhwG,MAAOC,IACPC,aAAc0vG,EACdzvG,aAAcf,EACdgB,iBAAkBtB,EAClBuB,YAAY,EAAM,SAElB,gBAAC,IAAM,CAAClD,UAAW3I,IAAUiM,sBAAsB,UACjD,uBAAM/K,UAAU,sBAAqB,mCACrC,gCAAO8K,YAAmBX,EAAeC,UAG5CmwG,MCzFQE,OALuBvzF,aAdiCC,IAAK,CAE1Ehd,cAAegd,EAAMC,QAAQjd,eAAiB6Z,KAAU02F,qBACxDtwG,cAAe+c,EAAMC,QAAQhd,eAAiB4Z,KAAUC,yBAGSnG,GACjE8J,YACE,CACEkyF,wBAAyBpoG,qBAE3BoM,IAGkCoJ,CAGpC2yF,IC6Cac,OArD8C5/G,IAC3D,MAAO03C,EAAcwnE,GAAkBp6G,YAAwB,GAEzDq6G,EAAmBr6G,eAAkB,IAAMo6G,GAAe,IAAO,IACjEtnE,EAAoB9yC,eAAkB,IAAMo6G,GAAe,IAAQ,KAEnE,uBAAEW,EAAsB,KAAE77F,GAAShkB,EAEnCugD,EAAez7C,eAAkB,KACrC,MAAM,GAAEsB,GAAO4d,EACf67F,EAAuBz5G,GACvBwxC,MACC,CAAC5zB,EAAM4zB,EAAmBioE,IAE7B,OACE,uCACE,eAAC5zG,EAAA,EAAa,CAACnI,KAAMC,IAAUqyB,MAAOnyB,QAASk7G,IAC/C,gBAAC,IAAM,CACLr7G,KAAMC,IAAU08C,aAChBhlC,OAAQi8B,EACR7tB,QAAS+tB,EACThxC,MAAM,sBACNixC,sBAAsB,EAAK,UAE3B,uBAAK5yC,UAAW4K,IAAQia,YAAY,UAClC,2DAC2B,wCAAa,mBAAgB,6BAAI9F,EAAKpd,QAAU,OAE3E,6BACE,iGAGJ,sBAAK3B,UAAW4K,IAAQka,cAAc,SACpC,uBAAK9kB,UAAW4K,IAAQioC,sBAAsB,UAC5C,eAAC7rC,EAAA,EAAa,CACZpI,MAAM,SACNC,KAAMC,IAAU4rB,MAChB1rB,QAAS2zC,EACT1rC,QAAS,CAAEF,SAAS,KAEtB,eAACC,EAAA,EAAa,CACZpI,MAAM,UACNC,KAAMC,IAAUqyB,MAChBnyB,QAASs8C,EACTr0C,QAAS,CAAEF,SAAS,EAAOxM,OAAQC,IAAOK,sB,UCmHzCggH,OA5JkD9/G,IAC/D,MAAO8Q,EAAMivG,GAAWj7G,gBAAiC0B,IAClDw5G,EAAgBC,GAAkBn7G,YAAwB,IAC1DkpC,EAAakyE,GAAkBp7G,YAAwB,IACvDi+C,EAAoBo9D,GAAyBr7G,YAAwB,GAE5EA,aAAgB,KACV9E,EAAM2uC,2BAAoD,IAAxBoU,GACpCo9D,EAAsBngH,EAAM2uC,yBAAyB,GAAGoU,sBAEzD,CAAC/iD,EAAM2uC,yBAA0BoU,IAEpC,MAAM,uBAAEq9D,GAA2BpgH,EAE7B8+C,EAAoBh6C,WAAc,KAAO,IAAD,EAC5C,OAAqC,QAArC,EAAO9E,EAAM2uC,gCAAwB,aAA9B,EAAgC3rC,KAAIszC,IAClC,CACLphC,MAAOohC,EAAEyM,mBACTl/C,MAAOyyC,EAAE7pC,WAGZ,CAACzM,EAAM2uC,2BAEJ0xE,EAAsBv7G,eAAkB,MAChB,IAAxBi+C,GAIAjyC,IACFsvG,EAAuBtvG,EAAMk9B,EAAa+U,GAC1Cm9D,GAAe,IAEjBH,OAAQv5G,IAPN7G,aAAmB,6DAQpB,CAACmR,EAAMk9B,EAAaoyE,EAAwBr9D,IACzCu9D,EAAqBx7G,eAAkB,IAAMi7G,OAAQv5G,IAAY,CAACu5G,IAElEQ,EAAqBz7G,eACxB07G,IACCT,EAAQS,EAAc,IACtBN,GAAe,KAEjB,CAACH,IAEGU,EAAqB37G,eAAmB47G,IACxCA,EAAc17G,OAAS,GACzBrF,aAAmB,+DAAgE,OAEpF,KAEG,aAAE+/C,EAAY,cAAEihE,EAAa,UAAEC,EAAS,aAAEC,EAAY,aAAEC,EAAY,aAAEC,GAC1EC,aAAY,CACVC,UAAU,EACVC,eAAgBX,EAChBY,eAAgBV,IAGdvvE,EAAYpsC,WAAc,IACvBM,IACL,gBACAw7G,GAAaC,EAAe,uBAAoBr6G,EAChDs6G,EAAe,uBAAoBt6G,EACnCu6G,EAAe,uBAAoBv6G,IAEpC,CAACo6G,EAAWC,EAAcC,EAAcC,IAErCK,EAAuBt8G,eAAkB,KACxCkpC,EAGHkyE,GAAe,GAFfD,GAAe,KAIhB,CAACjyE,EAAaiyE,EAAgBC,IAE3BmB,EAAev8G,WACnB,IACE,sBAAKG,UAAU,wBAAuB,SACpC,eAAC,IAAM,CAACm1B,QAAS4T,EAAa3nC,SAAU+6G,OAG5C,CAACpzE,EAAaozE,IAGVE,EAA2Bx8G,eAAkB,KACjDo7G,GAAe,GACfD,GAAe,KACd,CAACC,IACEqB,EAA0Bz8G,eAAkB,KAChDm7G,GAAe,KACd,CAACA,IAEEuB,EAAqB18G,WACzB,IACE,uBAAKG,UAAU,oBAAmB,UAChC,eAACgH,EAAA,EAAa,CACZpI,MAAM,MACNC,KAAMC,IAAUstB,QAChBptB,QAASq9G,EACTp1G,QAAS,CAAEF,SAAS,EAAOxM,OAAQC,IAAOK,UAE5C,eAACmM,EAAA,EAAa,CACZpI,MAAM,KACNC,KAAMC,IAAU4rB,MAChB1rB,QAASs9G,EACTr1G,QAAS,CAAEF,SAAS,SAI1B,CAACu1G,EAAyBD,IAG5B,OACE,uCACE,eAAC,IAAI,CAAC/mG,UAAWC,IAAUinG,IAAKC,aAAa,EAAK,SAChD,0BAAShiE,EAAa,CAAEz6C,UAAWisC,IAAY,UAC7C,2BAAWyvE,MACX,2FAGH7vG,GACC,gBAAC,IAAI,CAAC7L,UAAU,kBAAkBsV,UAAWC,IAAUinG,IAAKC,aAAa,EAAK,UAC5E,8BAAS,OAAJ5wG,QAAI,IAAJA,OAAI,EAAJA,EAAMmU,QACT+6F,GACA,uCACE,uBAAK/6G,UAAU,oBAAmB,UAChC,eAAC,IAAU,CACTiH,QAAS4yC,EACTz4C,SAAUiwC,GAAK6pE,EAAsBt2D,SAASvT,EAAEx0C,OAAOoT,QACvDA,MAAO6tC,IAET,eAAC92C,EAAA,EAAa,CACZpI,MAAM,iBACNC,KAAMC,IAAU49G,OAChB19G,QAASo8G,EACTn0G,QAAS,CAAEF,SAAS,EAAOxM,OAAQC,IAAOK,UAE5C,eAACmM,EAAA,EAAa,CACZpI,MAAM,gBACNC,KAAMC,IAAU69G,OAChB39G,QAASq8G,EACTp0G,QAAS,CAAEF,SAAS,QAGxB,uBAAK/G,UAAU,oBAAmB,UAChC,gEACCo8G,QAINrB,GAAkB,4FAClBA,GAAkBwB,S,WCpJ7B,MAAMK,GAAoB,yBAsGXC,OApG0C9hH,IACvD,MAAM+hH,EAAU,IAAIr0G,KAAK,KAAM,EAAG,GAC5Bs0G,EAAU,IAAIt0G,KAAK,KAAM,GAAI,KAE7B,KAAEsW,EAAI,YAAEi+F,GAAgBjiH,EACxBkiH,EAAoBD,EAAcj+F,EAAK4O,OAAS5O,EAAK6O,QACrDsvF,EAAclhG,EAAOihG,EAAmBjhG,YAAiB,IAExDy2B,EAAcwnE,GAAkBp6G,YAAwB,IACxDs9G,EAASC,GAAcv9G,WAAqCq9G,GAE7DhD,EAAmBr6G,eAAkB,IAAMo6G,GAAe,IAAO,IACjEtnE,EAAoB9yC,eAAkB,IAAMo6G,GAAe,IAAQ,KAEnE,2BAAEoD,GAA+BtiH,EAEjCuiH,EAAmBz9G,eAAkB,KACzC,GAAKs9G,EAIE,CACL,MAAM,GAAEh8G,EAAE,OAAEwsB,EAAM,QAAEC,GAAY7O,EAChCs+F,EACEl8G,EACA67G,EAAcG,EAAQx9D,cAAgBhyB,EACtCqvF,EAAcpvF,EAAUuvF,EAAQx9D,eAElChN,SATAj4C,aAAmB,6BAA8B,KACjD0iH,EAAWF,KAUZ,CAACC,EAASD,EAAan+F,EAAMs+F,EAA4BL,EAAarqE,IAQnE4qE,EAAmB19G,eACtB29G,GAA8BJ,EAAWphG,EAAOwhG,KACjD,IAEIC,EAAkB59G,eAAkB,KAExCnF,aAAmB,2DAA4D,KAC/E0iH,EAAWF,KACV,CAACA,IAEEQ,EACJ,eAAC,KAAS,CACRC,WAdsB5hG,GAAeC,EAAOD,GAAMI,OAAOygG,IAezDx7G,SAAUm8G,EACVK,QAASH,EACTI,UArBqBl5D,IACvB,MAAM5oC,EAAOC,EAAO2oC,EAAKi4D,IAAmB,GAC5C,QAAO7gG,EAAKhD,WAAYgD,EAAK+hG,UAoB3BvkG,YAAc,GAAEqjG,sBAChB3sG,MAAc,OAAPktG,QAAO,IAAPA,OAAO,EAAPA,EAASW,SAChBC,cAAe,SACfx2G,MAAM,EACNu1G,QAASA,EACTC,QAASA,EACTiB,kBAAkB,IAItB,OACE,uCACE,uBAAMh+G,UAAU,iBAAgB,SAAEk9G,EAAY/gG,OAAOygG,MACrD,eAAC51G,EAAA,EAAa,CAACnI,KAAMC,IAAU4tB,KAAM1tB,QAASk7G,IAC9C,gBAAC,IAAM,CACLr7G,KAAMC,IAAUm/G,UAChBznG,OAAQi8B,EACR7tB,QAAS+tB,EACThxC,MAAM,+BACNixC,sBAAsB,EAAK,UAE3B,uBAAK5yC,UAAW4K,IAAQia,YAAY,UAClC,+BAAIm4F,EAAc,UAAY,UAAS,qBACtCU,KAEH,sBAAK19G,UAAW4K,IAAQka,cAAc,SACpC,uBAAK9kB,UAAW4K,IAAQioC,sBAAsB,UAC5C,eAAC7rC,EAAA,EAAa,CACZpI,MAAM,SACNC,KAAMC,IAAU4rB,MAChB1rB,QAAS2zC,EACT1rC,QAAS,CAAEF,SAAS,KAEtB,eAACC,EAAA,EAAa,CACZpI,MAAM,UACNC,KAAMC,IAAUyiB,KAChBviB,QAASs+G,EACTr2G,QAAS,CAAEF,SAAS,EAAOxM,OAAQC,IAAOK,sBCnCzCqjH,OA9DgDnjH,IAC7D,MAAM,KAAEgkB,GAAShkB,GAEV03C,EAAcwnE,GAAkBp6G,YAAwB,IACxD+hC,GAAe/hC,aAA0Bkf,EAAK6iB,aAE/Cs4E,EAAmBr6G,eAAkB,IAAMo6G,GAAe,IAAO,IACjEtnE,EAAoB9yC,eAAkB,IAAMo6G,GAAe,IAAQ,KAEnE,wBAAEkE,GAA4BpjH,EAE9BqjH,EAAwBv+G,eAAkB,KAC9C,MAAM,GAAEsB,GAAO4d,EACfo/F,GAAyBv8E,EAAazgC,GACtCwxC,MACC,CAAC5zB,EAAM6iB,EAAa+Q,EAAmBwrE,IAE1C,OACE,uCACE,eAAC,IAAM,CAACn+G,UAAU,eAAem1B,QAASyM,EAAaxgC,SAAU84G,IACjE,gBAAC,IAAM,CACLr7G,KAAMC,IAAU08C,aAChBhlC,OAAQi8B,EACR7tB,QAAS+tB,EACThxC,OAAUigC,EAAc,YAAc,WAA9B,cACRgR,sBAAsB,EAAK,UAE3B,uBAAK5yC,UAAW4K,IAAQia,YAAY,UAClC,2DAC2B,6BAAI+c,EAAc,YAAc,YAAc,kBAAgB,IACvF,6BAAI7iB,EAAKpd,QAAU,OAEpBigC,EACC,6BACE,8JAKA,QAEN,sBAAK5hC,UAAW4K,IAAQka,cAAc,SACpC,uBAAK9kB,UAAW4K,IAAQioC,sBAAsB,UAC5C,eAAC7rC,EAAA,EAAa,CACZpI,MAAM,SACNC,KAAMC,IAAU4rB,MAChB1rB,QAAS2zC,EACT1rC,QAAS,CAAEF,SAAS,KAEtB,eAACC,EAAA,EAAa,CACZpI,MAAM,UACNC,KAAMC,IAAUstB,QAChBptB,QAASo/G,EACTn3G,QAAS,CAAEF,SAAS,EAAOxM,OAAQC,IAAOK,sBC9BxD,MAAMwjH,WAAsBx+G,YAMnB0rC,YAAYxwC,GACjBywC,MAAMzwC,GAAO,KANPk6C,gBAAU,OACVV,uBAAiB,OACjBC,aAAO,OACP8pE,eAAS,OA2JTC,YAAc,KAEpBnjG,KAAKrgB,MAAMs0B,gCACXjU,KAAKrgB,MAAMyjH,4BACX,KAKMC,qBAAuB,CAACC,EAAkBC,KAChD,MAAMC,EAAW,IAAIn2G,KAAKk2G,GAE1B,OAAOC,EAAWF,GAAc,EAAIE,EAAWF,EAAa,EAAI,GAChE,KAEM7pE,YAAe/pB,IACrB1P,KAAKo5B,QAAU1pB,EAAOgqB,IACtB15B,KAAKkjG,UAAYxzF,EAAOwzF,UACxBljG,KAAKo5B,QAAQO,mBAGb35B,KAAKkjG,UAAUO,iBAAiB,CAC9B13F,MAAO,CACL,CAAE4xF,MAAO,SAAUt4E,KAAM,QACzB,CAAEs4E,MAAO,UAAWt4E,KAAM,YAG9B,KAEM21E,WAAa,KACfh7F,KAAKo5B,SACPp5B,KAAKo5B,QAAQO,oBAEf,KAEM+pE,eAAiB,KACvB1jG,KAAKswB,SAAS,CAAEqzE,cAAe3jG,KAAK+L,MAAM43F,gBA1L1C3jG,KAAK+L,MAAQ,CACX43F,cAAc,GAGhB3jG,KAAK65B,WAAa,CAChB,CACEE,MAAO,SACPD,WAAY,KACZ9wC,MAAO,IAET,CACE8wC,WAAY,QACZC,MAAO,SAET,CACED,WAAY,WACZC,MAAO,OACP/wC,MAAO,KAET,CACE8wC,WAAY,YACZC,MAAO,SACPvyB,OAAQ,qBACRo8F,aAAc,CACZvG,WAAYr9F,KAAKqjG,qBACjBQ,kBAAkB,GAEpBC,aAAc,CAAC,OAAQ,MAAO,MAC9B9pE,sBAAuBynE,GACvBxnE,mBAAoB,CAClBgoE,2BAA4BjiG,KAAKrgB,MAAMsiH,2BACvCL,aAAa,GAEf54G,MAAO,KAET,CACE8wC,WAAY,aACZC,MAAO,UACPvyB,OAAQ,qBACRo8F,aAAc,CACZvG,WAAYr9F,KAAKqjG,qBACjBQ,kBAAkB,GAEpBC,aAAc,CAAC,OAAQ,MAAO,MAC9B9pE,sBAAuBynE,GACvBxnE,mBAAoB,CAClBgoE,2BAA4BjiG,KAAKrgB,MAAMsiH,2BACvCL,aAAa,GAEf54G,MAAO,KAET,CACE8wC,WAAY,UACZC,MAAO,GACPC,sBAAuB8oE,GACvB7oE,mBAAoB,CAClB8oE,wBAAyB/iG,KAAKrgB,MAAMojH,yBAEtC/5G,MAAO,IACPwe,QAAQ,EACRozB,WAAW,EACXF,UAAU,EACVN,UAAW,CACTtgB,QAAS,IAGb,CACEggB,WAAY,SACZC,MAAO,GACPC,sBAAuBulE,GACvBtlE,mBAAoB,CAClBulE,uBAAwBx/F,KAAKrgB,MAAM6/G,wBAErCx2G,MAAO,IACPwe,QAAQ,EACRozB,WAAW,EACXF,UAAU,EACVN,UAAW,CACTtgB,QAAS,KAKf9Z,KAAKm5B,kBAAoB,CACvB3xB,QAAQ,EACRozB,WAAW,EACXF,UAAU,GAIPr6B,SACL,MAAMu9F,EACJ,uBAAKh5G,UAAU,uCAAsC,UACnD,eAAC,IAAM,CACLs+D,OAAQljD,KAAK+L,MAAM43F,aACnBlgH,KAAMC,IAAUklC,aAChBzpC,OAAQ6gB,KAAK+L,MAAM43F,aAAevkH,IAAOowB,QAAUpwB,IAAOsM,KAC1D9H,QAASoc,KAAK0jG,eAAe,SAE7B,uBAAM9+G,UAAU,YAAW,iCAE7B,eAAC,GAAoB,IACrB,eAAC,IAAM,CAACnB,KAAMC,IAAUqgH,QAASngH,QAASoc,KAAKrgB,MAAMs0B,8BAA8B,SACjF,uBAAMrvB,UAAU,YAAW,sCAK3Bo/G,EACJ,eAAC,IAAQ,CAAC5oG,OAAQ4E,KAAK+L,MAAM43F,aAAclnG,qBAAqB,EAAK,SACnE,eAAC,GAAQ,CACPsjG,uBAAwB//F,KAAKrgB,MAAMogH,uBACnCzxE,yBAA0BtuB,KAAKrgB,MAAM2uC,6BAKrCyM,EACJ,sBAAKn2C,UAAU,sCAAqC,SAClD,eAAC,eAAW,CACVq2C,UAAW,aACXpB,WAAY75B,KAAK65B,WACjBqB,cAAel7B,KAAKm5B,kBACpBM,YAAaz5B,KAAKy5B,YAClB6E,kBAAmBt+B,KAAKg7F,WACxB7/D,QAASn7B,KAAKrgB,MAAMgzB,oBACpByoB,UAAW,GACXmD,uBAAuB,EACvBC,wBAAwB,EACxB6D,yBAAyB,MAKzBr+C,EACJ,uBAAKY,UAAU,gBAAe,UAC3Bg5G,EACAoG,EACD,eAAC,IAAO,IACPjpE,KAIL,OACE,+BACE,eAAChnB,GAAA,EAAc,CAACnqB,QAAS5F,EAASgwB,oBAAqBhU,KAAKmjG,iBA6CrDF,UC3MAgB,OAFgBn4F,aAlBwCC,IAAK,CAC1E4G,oBAAqB5G,EAAMC,QAAQ2G,oBACnC2b,yBAA0BviB,EAAMC,QAAQsiB,6BAGyB5rB,GACjE8J,YACE,CACEy1F,2BAA4BiC,wBAC5BjwF,8BAA+BK,2BAC/BkrF,uBAAwB2E,oBACxBpE,uBAAwBqE,oBACxBrB,wBAAyBsB,qBACzBjB,yBAA0Bx9D,qBAE5BljC,IAG2BoJ,CAA6Cm3F,I,+BCwB5E,MAAMqB,WAA6B7/G,gBAGjC0rC,YAAYxwC,GACVywC,MAAMzwC,GAAO,KAHP4kH,cAAsBp+G,EAAU,KAyIhCoxC,kBAAoB,IAAMv3B,KAAKswB,SAAS,CAAEk0E,YAAY,IAAS,KAE/D1F,iBAAmB,IAAM9+F,KAAKswB,SAAS,CAAEk0E,YAAY,IAAQ,KAE7DC,oBAAsB,KAC5BzkG,KAAKswB,SAAS,CAAE6D,SAAUn0B,KAAKrgB,MAAM+kH,sBACrC,KAEMC,2BAA6B,KACnC,MAAMC,EAAkB5kG,KAAKrgB,MAAMq0C,aAAahnC,OAAOwa,QACrDwtB,GAAiBA,EAAc/7B,MAAuC,IAA/B+G,KAAKrgB,MAAM69C,oBAEpDx9B,KAAKrgB,MAAMklH,kBAAkBD,IAC7B,KAEME,sBAAwB,KAC9B,IAAK9kG,KAAKukG,SACR,OAEF,MAAM,0BAAElvE,EAAyB,wBAAEwC,EAAuB,iBAAEktE,GAAqB/kG,KAAKrgB,MACtF81D,cAAcz1C,KAAK+L,MAAMi5F,SACzB3vE,GAA0B,GAC1B0vE,IACA/kG,KAAKukG,SAASnvE,QAEdyC,EAAwB,GAAI,GAAI,GADfz3C,OAAO6kH,IAAIC,gBAAgBllG,KAAKukG,SAASY,aACZnlG,KAAKrgB,MAAMq0C,eACzD,KAEMoxE,uBAAyB,KAC/BplG,KAAKukG,SAAW,IAAIc,KACpB,MAAM,iBAAEC,EAAgB,0BAAEjwE,EAAyB,iBAAEkwE,GAAqBvlG,KAAKrgB,MAC/EqgB,KAAKukG,SAAS55F,QAAQrS,MACpB,KACEgtG,IACAjwE,GAA0B,GAC1BkwE,IACA,MAAMP,EAAUzvD,YAAYv1C,KAAKykG,oBAAqB,KACtDzkG,KAAKswB,SAAS,CAAE00E,eAGjBrrG,IACC26F,MAAM,yBAA2B36F,OAGrC,KAEM6rG,uBAAyB,KAC/B,IAAKxlG,KAAKukG,SACR,OAEF,MAAM,0BAAElvE,EAAyB,kBAAEowE,GAAsBzlG,KAAKrgB,MAC9D01C,GAA0B,GAE1BowE,GAAmB,GACnB,MAAMT,EAAUzvD,YAAYv1C,KAAKykG,oBAAqB,KACtDzkG,KAAKswB,SAAS,CAAE00E,YAChBhlG,KAAKukG,SAASmB,UACd,KAEMC,kCAAoC,KAC1C,IAAK3lG,KAAKukG,SACR,OAEF,MAAM,kBAAE/mE,EAAiB,0BAAEnI,EAAyB,kBAAEowE,GAAsBzlG,KAAKrgB,MACjFqgB,KAAK2kG,6BACLtvE,GAA0B,GAC1BowE,EAAsC,IAApBjoE,GAClB,MAAMwnE,EAAUzvD,YAAYv1C,KAAKykG,oBAAqB,KACtDzkG,KAAKswB,SAAS,CAAE00E,YAChBhlG,KAAKukG,SAASmB,OAAOloE,IACrB,KAEMooE,uBAAyB,KAC/B,IAAK5lG,KAAKukG,SACR,OAEF,MAAM,0BAAElvE,EAAyB,gBAAEwwE,GAAoB7lG,KAAKrgB,MAC5D01C,GAA0B,GAC1BwwE,IACApwD,cAAcz1C,KAAK+L,MAAMi5F,SACzBhlG,KAAKukG,SAASr6C,OACdlqD,KAAKswB,SAAS,CACZw1E,aAAc9lG,KAAKukG,SAASY,cAE9BnlG,KAAKukG,SAASz2C,SACd,KAEMi4C,wBAA0B,KAChC,MAAM,0BAAE1wE,EAAyB,iBAAE2wE,GAAqBhmG,KAAKrgB,MAC7D01C,GAA0B,GAC1B2wE,IACAvwD,cAAcz1C,KAAK+L,MAAMi5F,SACzBhlG,KAAKswB,SAAS,CAAE6D,SAAU,IACtBn0B,KAAKukG,WACPvkG,KAAKukG,SAASr6C,OACdlqD,KAAKukG,SAASz2C,UAEhB,KAEMm4C,qBAAuB,KACxBjmG,KAAK+L,MAAM+5F,aAIhB9lG,KAAKrgB,MAAMumH,yBACTlmG,KAAK+L,MAAMo6F,UACXnmG,KAAK+L,MAAMq6F,gBACXpmG,KAAK+L,MAAMs6F,QACXrmG,KAAK+L,MAAM+5F,aACX9lG,KAAKrgB,MAAMq0C,cARXsgE,MAAM,uBAUR,KAEMj+D,YAAexhC,IACrB,MAAMuJ,EAAMqgB,KAAKC,MAAM7pB,EAAQ,IACzB0hC,EAAM9X,KAAKC,MAAM7pB,EAAc,GAANuJ,GAG/B,OAFkBA,EAAM,GAAK,IAAMA,EAAMA,GAEtB,KADDm4B,EAAM,GAAK,IAAMA,EAAMA,IAEzC,KAEM+vE,2BAA8B79G,IACpCuX,KAAKswB,SAAS,CAAE61E,UAAW19G,EAAMhH,OAAOoT,SACxC,KAEM0xG,iCAAoC99G,IAC1CuX,KAAKswB,SAAS,CAAE81E,gBAAiB39G,EAAMhH,OAAOoT,SAC9C,KAEM2xG,yBAA4B/9G,IAClCuX,KAAKswB,SAAS,CAAE+1E,QAAS59G,EAAMhH,OAAOoT,SAvQtCmL,KAAK+L,MAAQ,CACXy4F,YAAY,EACZrwE,SAAU,EACV6wE,aAAS7+G,EACTggH,UAAW,GACXC,gBAAiB,GACjBC,QAAS,IAIb,0BACEhB,KAASoB,gBAAgBnuG,MACvB,SACCqB,IACC26F,MAAM,yBAA2B36F,MAKhC0G,SACL,MAAMqmG,EACJ,eAAC96G,EAAA,EAAa,CACZpI,MAAM,eACNC,KAAMC,IAAUijH,UAChB/iH,QAASoc,KAAKrgB,MAAMinH,oBAGlBC,EACJ,eAACj7G,EAAA,EAAa,CAACpI,MAAM,QAAQC,KAAMC,IAAUizC,MAAO/yC,QAASoc,KAAK8kG,wBAE9DgC,EACJ,eAACl7G,EAAA,EAAa,CAACpI,MAAM,SAASC,KAAMC,IAAU0tB,KAAMxtB,QAASoc,KAAKwlG,yBAE9DuB,EACJ,eAACn7G,EAAA,EAAa,CACZpI,MAAM,cACNC,KAAMC,IAAU0tB,KAChBxtB,QAASoc,KAAK2lG,oCAGZqB,EACJ,eAACp7G,EAAA,EAAa,CAACpI,MAAM,SAASC,KAAMC,IAAU0tB,KAAMxtB,QAASoc,KAAKolG,yBAE9D6B,EACJ,eAACr7G,EAAA,EAAa,CAACpI,MAAM,OAAOC,KAAMC,IAAU4rC,KAAM1rC,QAASoc,KAAK4lG,yBAE5DsB,EACJ,eAACt7G,EAAA,EAAa,CACZpI,MAAM,QACNC,KAAMC,IAAUqgH,QAChBngH,QAASoc,KAAK+lG,0BAGZoB,EACJ,eAACv7G,EAAA,EAAa,CAACpI,MAAM,SAASC,KAAMC,IAAU+yB,YAAa7yB,QAASoc,KAAK8+F,mBAE3E,OACE,iCACE,gBAAC,IAAM,CACLr7G,KAAK,YACL2X,OAAQ4E,KAAK+L,MAAMy4F,WACnBh7F,QAASxJ,KAAKu3B,kBACdhxC,MAAM,oBACNixC,sBAAsB,EAAK,UAE3B,uBAAK5yC,UAAW4K,IAAQia,YAAY,UAClC,eAAC,IAAU,CACT1jB,GAAG,QACHk3B,SAAUv5B,IAAUsyG,OACpBhwG,SAAUga,KAAKsmG,2BACfnoG,YAAY,QACZtJ,MAAOmL,KAAK+L,MAAMo6F,YAEpB,wBACA,eAAC,IAAU,CACTpgH,GAAG,cACHk3B,SAAUv5B,IAAU0jH,iBACpBphH,SAAUga,KAAKumG,iCACfpoG,YAAY,cACZtJ,MAAOmL,KAAK+L,MAAMq6F,kBAEpB,wBACA,eAAC,IAAU,CACTrgH,GAAG,MACHk3B,SAAUv5B,IAAU2jH,IACpBrhH,SAAUga,KAAKwmG,yBACfroG,YAAY,iEACZtJ,MAAOmL,KAAK+L,MAAMs6F,aAGtB,sBAAKzhH,UAAW4K,IAAQka,cAAc,SACpC,uBAAK9kB,UAAW4K,IAAQioC,sBAAsB,UAC5C,eAAC7rC,EAAA,EAAa,CACZpI,MAAM,iBACNC,KAAMC,IAAUyiB,KAChBviB,QAASoc,KAAKimG,uBAEhB,eAACr6G,EAAA,EAAa,CACZpI,MAAM,SACNC,KAAMC,IAAU4rB,MAChB1rB,QAASoc,KAAKu3B,4BAKtB,wBACA,sBAAK3yC,UAAU,QAAO,SACpB,eAAC,IAAI,CAACsV,UAAW,EAAGvQ,MAAO,CAAEgxB,WAAY,WAAY,SACnD,eAAC,IAAE,UACA3a,KAAKq2B,YACJr2B,KAAKrgB,MAAM2nH,kBAAoBC,IAAgB/xE,OAC3Cx1B,KAAK+L,MAAMooB,SAAW,IACtBn0B,KAAKrgB,MAAM69C,yBAKvB,wBACA,uBAAK54C,UAAU,kBAAiB,UAC7Bob,KAAKrgB,MAAM2nH,kBAAoBC,IAAgBC,YAAcR,EAC7DhnG,KAAKrgB,MAAM2nH,kBAAoBC,IAAgB/xE,QAAUsxE,EACzD9mG,KAAKrgB,MAAM2nH,kBAAoBC,IAAgB/xE,QAAUuxE,EACzD/mG,KAAKrgB,MAAM2nH,kBAAoBC,IAAgBE,WAAaZ,EAC5D7mG,KAAKrgB,MAAM2nH,kBAAoBC,IAAgBE,WAAaf,EAC5D1mG,KAAKrgB,MAAM2nH,kBAAoBC,IAAgB/xE,QAAUyxE,EACzDjnG,KAAKrgB,MAAM2nH,kBAAoBC,IAAgBG,UAAYP,EAC3DnnG,KAAKrgB,MAAM2nH,kBAAoBC,IAAgBC,YAAcN,KAEhE,4BA2IO5C,UCvNf,MAAMr+G,GAAuC,aAqSvCs1C,GAAe,yBAEfC,GAAoC,CACxCh4C,MAAO,kBACP0B,SAAUxB,IAAU6tB,SACpBnsB,KAAM,eAAC,GAAyB,IAChCW,GAAIK,KAAgBq1C,gBAGhBC,GAAmC,CACvCl4C,MAAO,iBACP0B,SAAUxB,IAAUqkC,MACpB3iC,KAAM,eAAC,GAAwB,IAC/BW,GAAIK,KAAgBu1C,eAGPgsE,OAnT+BhoH,IAC5C,MAAOsiB,EAAaC,GAAkBxd,mBAAS0B,KAAgBwhH,YACzDllG,EAAWC,cAEjB1D,qBAAU,KACRk9B,gCAAqB,gBACpB,IAEHl9B,qBAAU,KACR,MAAM,aAAEm9B,GAAiBz8C,EAEzB,GAAKy8C,EAIL,OAAQA,EAAahwC,MACnB,IAAK,kBACH8V,EAAek6B,EAAaz4B,MAC5B,MACF,IAAK,gBACHhkB,EAAMsP,oBAAoBmtC,EAAaz4B,MACvC,MACF,IAAK,wBACHhkB,EAAMm1C,qBAAqBsH,EAAaz4B,MACxC,MACF,IAAK,aACHhkB,EAAM21C,0BAA0BC,IAAeY,iBAIlD,CAACx2C,EAAMy8C,eAEV,MAAMsoE,EAAmB,IAAM/kH,EAAMkoH,uBAAyBx6G,KAAKC,MAAQ3N,EAAMmoH,YA8B3EzrE,EACJ,eAACrN,GAAwB,CACvBO,oBAAqB,IAAM7sB,EAAS45B,8BAAmBr2C,KACvDypC,qBAAsB,IAAMhtB,EAAS85B,0BAAev2C,KACpD2pC,oBAAqB,IAAMltB,EAAS65B,yBAAct2C,KAClDwiB,iBAhBsB,KACxB9oB,EAAM8oB,mBACF9oB,EAAM2nH,kBAAoBC,IAAgBE,WAG9C9nH,EAAMooH,kBAAkB,CACtB9uG,KAAMyrG,IACNt4G,KAAM,kBACNuX,KAAMC,IAAgBC,OAStB44B,oBAAqB,IAAM/5B,EAASg6B,mCAAwBz2C,KAC5D6pC,0BAA2B,IAAMptB,EAAStQ,8BAAoBnM,KAC9DmmB,YAAazsB,EAAMysB,YACnBnC,gBAAiBtqB,EAAMsqB,gBACvBlmB,UAAWpE,EAAMoE,WACb,WAgBF8N,EACJ,eAAC/C,EAAA,EAAuB,CACtBG,oBAdyB,CAAC,EAAmCgnC,KAAY,IAA/C,QAAEnkC,GAA+B,EAC7DnS,EAAMsP,oBAAoB6C,GACtBnS,EAAM2nH,kBAAoBC,IAAgBE,WAG9C9nH,EAAMooH,kBAAkB,CACtB9uG,KAAMyrG,IACNt4G,KAAM,gBACNuX,KAAM7R,KAON/C,cAAepP,EAAMoP,cACrBC,cAAerP,EAAMqP,eACjB,WAIFsc,EACJ,eAAChoB,EAAA,EAAqB,CACpBC,sBAAuB,IAAMmf,EAAS9P,0BAAgB3M,MAClD,cAIF02C,EACJ,eAAC94C,EAAA,EAAoB,CACnBC,eAAgBnE,EAAMmE,eACtBC,UAAWpE,EAAMoE,WACb,aAuCFwnB,EAAiC,CACrChhB,gBAAiB,CACfue,cAAe,CAACuzB,EAAgBxqC,IAElC7G,qBAvC2D,IACxD26B,IAAEqiF,KACHroH,EACA,oBACA,mBACA,0BACA,kBACA,eACA,oBACA,oBAEFgqB,cAAe,aACf5E,WAAYplB,EAAMolB,WAAWpiB,IAAIinB,KACjCE,0BAA2B7U,GACzByN,EAAS1N,gCAAsB/O,GAAmBgP,IACpD6P,8BAA+B5Q,GAC7BwO,EAASzO,8BAAoBC,EAAajO,KAC5C4jB,gBAAiB,GACjB66F,iBAAkBA,EAClB3nE,UAAWp9C,EAAMu2C,iBAAmBX,IAAeK,QACnDqyE,YAAatoH,EAAM2nH,kBAAoBC,IAAgBE,WAoBvDr9G,8BAA+BohB,GAC7B9I,EAASlR,kCAAwBga,EAAcvlB,KACjDqF,UAAW,CACT6f,OAAQxrB,EAAMwrB,OACdC,UAAWzrB,EAAMyrB,UACjBL,wBAAyB,IAAMrI,EAAS5R,gCAAsB7K,KAC9D+kB,sBAAuB,IAAMtI,EAAS1R,8BAAoB/K,KAC1DnC,eAAgBnE,EAAMmE,eACtBmnB,sBAAuBC,GAAYxI,EAASnO,0BAAgB2W,EAAUjlB,KACtE8I,cAAepP,EAAMoP,cACrBC,cAAerP,EAAMqP,cACrB0V,gBAAiB/kB,EAAMsS,oBACvBoZ,YAAa,CAACsxB,EAAYrxB,IAE5B7gB,aAAc,CACZtG,KAAM,IAERsB,kBAAmB9F,EAAM8F,kBACzBqE,iBAAkB,CAChB9D,SApC4Bwd,IAC9BtB,EAAesB,GACX7jB,EAAM2nH,kBAAoBC,IAAgBE,WAG9C9nH,EAAMooH,kBAAkB,CACtB9uG,KAAMyrG,IACNt4G,KAAM,kBACNuX,KAAMH,KA6BNle,cAAe2c,EAOf9d,KAAM,CACJqiB,kBAAmB,CACjB,CACEhjB,MAAO,kBACP0B,SAAUxB,IAAUwkH,QACpB9iH,KACE,iCACE,uBAAMR,UAAU,aAAY,SAC1B,gBAAC,IAAG,eAAG22C,GAAY,SAErB,eAAC,GAAoB,CACnBiC,kBAAmB79C,EAAM69C,kBAEzBx5B,YAAarkB,EAAMolB,WAAW,GAAGlQ,MACjC6vG,iBAAkBA,EAClB1wE,aAAcr0C,EAAMq0C,aACpBsxE,iBAlKS,KACvB,MAAM54G,EAAiC,CACrCoF,QAASnS,EAAMoP,cACf2V,gBAAiB/kB,EAAMsS,oBAEvB+R,YAAarkB,EAAMolB,WAAW,GAAGlQ,OAEnC6N,EAASjW,sBAAWC,EAAUzG,MA4JhB2gH,kBAzJU,IACxBjnH,EAAMooH,kBAAkB,CACtB9uG,KAAMyrG,IACNt4G,KAAM,aACNuX,KAAM,OAsJMkhG,kBAAoB73G,GAClB0V,EAAS3V,uBAAYC,EAAQ/G,KAE/BigH,yBAA0B,CAAC3/G,EAAOyiB,EAAa8uB,EAAKjE,EAAOG,IACzDtxB,EACEylG,8BAAmB5hH,EAAOyiB,EAAa8uB,EAAKjE,EAAOG,EAAc,eAGrE6D,wBAAyB,CAACtxC,EAAOyiB,EAAa8uB,EAAKlB,EAAU5C,IAC3DtxB,EACEm7B,6BACEt3C,EACAyiB,EACA8uB,EACAlB,EACA5C,EACA,eAINqB,0BAA2B11C,EAAM01C,0BACjC0vE,iBAAkB,IAAMriG,EAASxV,sBAAWjH,KAC5C+/G,iBAAkB,IAAMtjG,EAASnV,sBAAWtH,KAC5Cw/G,kBAAmB/3G,GACjBgV,EAASjV,uBAAYC,EAAYzH,KAEnCs/G,iBAAkB,IAAM7iG,EAAS9U,sBAAW3H,KAC5C4/G,gBAAiB,IAAMnjG,EAAS5U,qBAAU7H,KAC1CqhH,gBAAiB3nH,EAAM2nH,qBAI7BvhH,GAAIK,KAAgBwhH,YAEtB,CACEpkH,MAAO,mBACP0B,SAAUxB,IAAU4tB,KACpBlsB,KACE,+BACE,eAAC,GAAe,CACdsyC,4BAA6B3xC,GAC3B2c,EAASpW,iCAAsBvG,EAAI,eAErC+0C,gBAAiBn7C,EAAMm7C,gBACvBj0B,SAAUlnB,EAAMknB,aAItB9gB,GAAIK,KAAgBy1C,cAEtBL,GACAE,IAEFj1B,iBAAkB,IAEpBxgB,kBAAmB,eAGjBg3C,EAA2D,IAC5DtX,IAAEqiF,KACHroH,EACA,0BACA,4BACA,4BACA,WACA,oBACA,eACA,iBACA,sBACA,wBAEFm2C,2BAA4BoH,GAC1Bx6B,EAASy6B,gCAAqBD,EAAY,eAC5C5I,2BAA6BD,GAC3B3xB,EAAS06B,gCAAqB/I,EAAQ,eACxCa,sBAAwBkH,GACtB15B,EAAS46B,2BAAgBlB,EAAc,eACzClI,4BAA6BC,GAC3BzxB,EAAS66B,iCAAsBpJ,EAAU,eAC3CpqB,yBAA0B,CAACnT,EAAKoT,EAAKlT,IACnC4L,EAAS/L,6BAAmB1Q,GAAmB2Q,EAAKoT,EAAKlT,IAC3Dq9B,SAAUx0C,EAAM89C,kBAElB,OACE,uBAAK74C,UAAWG,IAAW,aAAcyK,IAAQ8Q,MAAM,UACpD3gB,EAAM2nH,kBAAoBC,IAAgB/xE,OACzC,eAAC,GAAwB,IAAKyH,SAC5B92C,EACJ,eAACmB,GAAA,EAAS,IAAKikB,QC/XrB,MA4BM8sB,GAA8B,aAqBrB+vE,OAFat8F,aA/C2CC,IAAK,CAC1E6qB,SAAU7qB,EAAMG,WAAW0xB,WAAWhH,SACtC4G,kBAAmBzxB,EAAMG,WAAW0xB,WAAWJ,kBAC/CzI,kBAAmBhpB,EAAMG,WAAW0xB,WAAW7I,kBAC/C5oB,qBAAsBJ,EAAMG,WAAW07F,WAAWz7F,qBAClDpH,WAAYgH,EAAMG,WAAW07F,WAAW7iG,WACxCsH,gBAAiBN,EAAMG,WAAW07F,WAAWv7F,gBAC7Cpa,oBAAqB8Z,EAAMG,WAAW07F,WAAWljG,gBACjD03B,aAAcrwB,EAAMG,WAAW0xB,WAAWxB,aAC1ChwB,YAAaL,EAAMG,WAAW07F,WAAWx7F,YACzCnC,gBAAiB8B,EAAMG,WAAW07F,WAAW39F,gBAC7CtU,iBAAkBoW,EAAMG,WAAW07F,WAAWjyG,iBAC9C5R,UAAWgoB,EAAMG,WAAW07F,WAAW7jH,UACvConB,OAAQY,EAAMG,WAAW07F,WAAWz8F,OACpC6oB,aAAcjoB,EAAMG,WAAW07F,WAAW5zE,aAC1CyJ,iBAAkB1xB,EAAMG,WAAW0xB,WAAWH,iBAC9CvH,eAAgBnqB,EAAMG,WAAW0xB,WAAW1H,eAC5CoxE,gBAAiBv7F,EAAMG,WAAW07F,WAAWN,gBAC7Cl8F,UAAWW,EAAMG,WAAW07F,WAAWx8F,UACvC3lB,kBAAmBsmB,EAAMG,WAAW07F,WAAWniH,kBAC/Cq1C,gBAAiB/uB,EAAMG,WAAW0xB,WAAW9C,gBAC7C/rC,cAAeyV,UAAQC,MACvBzV,cAAe+c,EAAMG,WAAW07F,WAAW9nH,QAAQa,QACnDknH,uBAAwB97F,EAAMG,WAAW07F,WAAWC,uBACpDC,YAAa/7F,EAAMG,WAAW07F,WAAWE,YACzCjhG,SAAUkF,EAAMC,QAAQnF,aAKyCnE,GACjE8J,YACE,CACEvd,oBAAsB6C,GAAqBD,wBAAcC,EAASlR,UAAQC,QAASw3C,IACnF5vB,iBAAkB,IAAMvV,qBAAWmlC,IACnCz1B,wBAA0B6J,GAAgB3Y,4BAAkB2Y,EAAK4rB,IACjEvD,qBAAuB7iC,GACrBD,gCAAsBC,EAAqBomC,IAC7C0vE,kBAAoBl7G,GAAiBD,uBAAYC,EAAOwrC,IACxDv0C,eAAgB,IAAMsP,mBAASilC,IAC/B/C,0BAA4BY,GAC1B4H,+BAAoB5H,EAAgB,cACtCb,0BAA4BgzE,GAAsB3yG,8BAAoB2iC,GAAUgwE,IAElF3lG,IAGwBoJ,CAA6C67F,ICnElE,IAAKW,IAMX,SANWA,KAAa,kBAAbA,EAAa,kCAAbA,EAAa,8BAAbA,EAAa,8BAAbA,EAAa,wBAMxB,CANWA,QAAa,KCIzB,MAAMC,GACHC,GACDxyF,eACEyyF,EACAl4B,GAGI,IAFJm4B,EAAoB,uDAAG,GACvBC,EAAsB,uDAAG,GAEzB,IACE,MAEMn4B,EAAUC,GAFI5hC,GAAkBC,cAAcymB,iBAAiBmb,aAAe,IAGpF1kD,OAAO2S,QAAQ+pE,GAAc9iF,SAAQ,IAA6B,IAA3B3mC,EAAK4V,GAAgB,EAC1D27E,EAAQ0jB,OAAOj1G,EAAK4V,MAGtB,MAAM2vB,EAAS,CACb+rD,SACAC,aACGm4B,GAGL,OAAO/3B,MACLhoE,KAAUioE,WAAc,eAAchqE,QAAc2hG,KAAWC,EAC/DjkF,GAEH,WAIQokF,GAAmBL,GAAa,gBAChCM,GAAmBN,GAAa,WAChCO,GAAwBP,GAAa,iBAE3C,SAAS93B,GAAcC,GAC5B,MAAMF,EAAU,IAAIyjB,QAGpB,OAFAzjB,EAAQ0jB,OAAO,SAAU,oBACzB1jB,EAAQ0jB,OAAO,gBAAkB,UAASxjB,KACnCF,EClCF,MAAMu4B,GAAiB,CAC5B,YACA,UACA,SACA,UACA,KACA,MACA,MACA,WAWK,MAAMC,GAAkBhzF,gBAAmCizF,GAAY,YANzEzhG,QAAOwlC,GAAaA,EAAUuH,WAAW,YAAcvH,EAAUk8D,SAAS,SAC1EvmH,KACCqqD,GAAaA,EAAUvD,MAAM,KAW5BzzB,eAAemzF,KAOpB,aANoBjxG,QAAQqtD,IAC1BwjD,GAAepmH,KAAIqzB,UACjB,MAAMozF,QAAcH,GAAYI,GAChC,OAAOD,EAAMzkH,OAASykH,EAAQ,CAAE,GAAEC,UAGzB9pG,QAAO,CAAC+pG,EAAcC,IAAYD,EAAa5rC,OAAO6rC,IAAU,IAS/EvzF,eAAeizF,GAAYI,GACzB,MAAM5tD,QAAiBmtD,GAAiBS,EAAY,MAAO,CACzD,eAAgB,qBAElB,OAA2B,MAApB5tD,EAAS5qC,OAAiB4qC,EAASq1B,OAAS,GAsB9C96D,eAAewzF,GAAiBC,EAAoBJ,GACzD,MAAMK,QAAkBxxG,QAAQqtD,IAC9B7sC,MAAM81C,KAAKi7C,GAAU9mH,KAAIqzB,UACvB,MAAMylC,QAcLzlC,eAA+BvlB,EAAY44G,GAChD,MAAMM,EAAW,IAAIC,SACrBD,EAAS3/C,IAAI,SAAUv5D,GAEvB,MAAMgrD,QAAiBmtD,GACpB,GAAES,KAAc54G,EAAKmU,OACtB,OACA,GACA,CAAExf,KAAMukH,EAAUlhF,KAAM,SAG1B,OAAOgzB,EAAWA,EAAShtD,OAAS,GAzBTo7G,CAAgBp5G,EAAM44G,GAC7C,OAAO54G,EAAKmU,KAAO,OAAS62C,MAGhC,OAAOiuD,EAAUnnH,KAAK,MA8BjByzB,eAAe8zF,KACpB,MAAMruD,QAAiBotD,GAAiB,GAAI,OACtChf,EAAqC,MAApBpuC,EAAS5qC,aAAuB4qC,EAASq1B,OAAS,GACzE,OAAOnrD,IAAElV,OAAOo5E,GAAiBlB,GAAiC,IAAIt7F,KAAKs7F,EAAcp2E,UAQpFyD,eAAe+zF,GAAqBhkH,EAAYX,GACrD,MAAMq2D,QAAiBqtD,GACrB/iH,EACA,OACA,CACE,eAAgB,oBAElB,CACEX,KAAMslC,KAAK7iB,UAAUziB,KAGzB,OAA2B,MAApBq2D,EAAS5qC,OAAiB,uCAAyC4qC,EAAShtD,OC/HrF,MAAMu7G,GAAoB,wBA4EXC,OArEW,KACxB,MAAOR,EAAUS,GAAezlH,IAAMC,YAC/BylH,EAAcC,GAAmB3lH,IAAMC,SAAiBqkH,GAAe,KAEvEsB,EAAiBC,GAAsB7lH,IAAMC,YAC7C6lH,EAAqBC,GAA0B/lH,IAAMC,UAAkB,GAe9E,SAAS+lH,EAAyBx0E,GAC3BA,EAAEx0C,OAAOipH,YACdN,EAAgBn0E,EAAEx0C,OAAOipH,WACzBF,GAAuB,IAazB,MAAMG,EACJ,gBAAC,IAAI,WACF5B,GAAepmH,KAAIioH,GAClB,eAAC,IAAQ,CAAChnH,QAAS6mH,EAA0B1kH,GAAI6kH,EAAqBn8G,KAAMm8G,GAAdA,KAEhE,eAAC,IAAQ,CACPhnH,QAZN,SAA2BqyC,GACpBA,EAAEx0C,OAAOipH,YACdN,EAAgBn0E,EAAEx0C,OAAOipH,WACzBF,GAAuB,KAUnBzkH,GAAIikH,GAEJv7G,KAAMu7G,IADDA,OAKX,OACE,uBAAKplH,UAAU,YAAW,UACxB,gDACA,eAAC,KAAQ,CAACyX,UAAWzd,IAASisH,OAAQ7mH,QAAS2mH,EAA2B,SACxE,eAAC,IAAM,CAACl8G,KAAM07G,MAEfI,GACC,eAAC,IAAU,CACTpsG,YA/DyB,gDAgEzBnY,SAhCR,SAAqCiwC,GACnCq0E,EAAmBr0E,EAAEx0C,OAAOoT,UAkC1B,wBACA,8CACA,wBAAOzI,KAAK,OAAOw0G,UAAQ,EAAC56G,SAxDhC,SAAwBiwC,GACtB,IAAKA,EAAEx0C,OAAO2nH,MAAO,OACrB,MAAM0B,EAAc70E,EAAEx0C,OAAO2nH,MAC7Bc,EAAYY,MAsDV,eAAC,IAAM,CAAClnH,QAnDZoyB,iBACE,MAAM+0F,EAAcV,GAAmBF,EACvC,IAAKV,IAAasB,EAAa,OAC/B,MAAMtvD,QAAiB+tD,GAAiBC,EAAUsB,GAClDzW,MAAM74C,IA+CqC,wBCtExC,SAASuvD,GAAQC,EAAgC/xG,GACtD+xG,GACEA,EAAMrlF,SAAQ8b,IACZxoC,EAAGwoC,GACHspE,GAAQtpE,EAAKwpE,WAAYhyG,MAkBxB,SAASiyG,GACdC,EACAC,GAEc,IADdC,EAAqB,uDAAG,GAExB,MAAMC,EAAW,GAQjB,SAASC,EAAOC,EAAyBF,GACvC,OAAOv/E,OAAO7pC,KAAKopH,GAAU5oH,KAAI8N,IAC/B,MAAM8zF,EAAY,IAAMknB,EAAclpH,KAAK,KAAO,IAAMkO,EACxD,MAAO,CACL1K,GAAIw+F,EACJ/gG,MAAOiN,EACPi7G,eAAgBL,EAAa9mB,GAC7B2mB,WACqB,SAAnBK,EAAS96G,QAAmBtK,EAAYqlH,EAAO,IAAIC,EAAeh7G,GAAO86G,EAAS96G,QAI1F,OAnBA26G,EAAWxlF,SAAQonB,GAAarnB,IAAEqkC,IAAIuhD,EAAUv+D,EAAU3pB,MAAM,KAAM,UACtEioF,EAAY1lF,SAAQglF,IACbW,EAASX,IAAgC,SAArBW,EAASX,KAChCW,EAASX,GAAU,OAgBhBY,EAAO,GAAID,GCxBLI,OAlBKC,gBAAK,IAAgC,IAA/B,UAAE5+D,GAAuB,EACjD,MAAM6+D,EAAmB7+D,GAAapkC,GAAU++B,iBAChD,OACE,qCACE,sBACE31B,IAAI,QACJ85F,YAAa,YACb75F,IAAKoiC,GAASw3D,IAAoB7+D,GAClChkD,MAAM,QACNw5G,QAASvsE,IACNA,EAAEx0C,OAAekX,QAAU,KAC3Bs9B,EAAEx0C,OAAewwB,IAAMoiC,GAASzrC,GAAU++B,kBAAkB,WCFvE,MAoCMokE,GAAan7G,GACjB,eAAC,IAAQ,CAAC5M,QAAQ,SAAQ,SACxB,eAAC,IAAI,CAACP,KAAK,QAAQG,QAASooH,GAAWp7G,OASrCo7G,GAAcp7G,GAAqBolB,UACvC,MAAMijF,EAAU74G,OAAO64G,QACpB,mCAAkCroG,wCAErC0jG,MAAM2E,QJXDjjF,eAA4Bg3B,GACjC,MAAMyO,QAAiBmtD,GAAiB57D,EAAW,UAEnD,aADsByO,EAAShtD,QACb,uBIQIw9G,CAAar7G,GAAY,SAGlCs7G,OAtDsB,KACnC,MAAQr3G,MAAOu2G,GAAee,YAAqBhD,GAAiB,KAE7DiD,EAAcC,GAAmB5nH,IAAMC,SAAS,KAChD4nH,EAAWC,GAAgB9nH,IAAMC,SAAoB,CAAEumH,MAAO,KAErExmH,IAAMwa,WAAU,KACdstG,EAAa,CAAEtB,MAAOE,GAAiBC,EAAYW,GAAWhD,QAC7D,CAACqC,IAcJ,OACE,uCACE,eAACoB,GAAyB,CAACx/D,UAAWo/D,IACtC,eAAC,KAAI,CAACl2F,SAAUo2F,EAAUrB,MAAOwB,YAfZC,IACvB1B,GAAQsB,EAAUrB,OAAQvpE,GAAqBA,EAAKirE,YAAa,IACjED,EAASC,YAAcD,EAASC,WAChCD,EAAStoH,YAAcsoH,EAAStoH,WAChC,MAAMwoH,EAAeF,EAAS3mH,GAAGihB,WAC5B0lG,EAASxB,aACZmB,EAAgBO,GAChBC,eAAeC,QAAQ,gBAAiBF,IAE1CL,EAAa,IAAKD,W,oBCrCtB,MAAMS,GAAetoH,IAAMmnH,KACzBoB,cAAgB,QAAC,MAAEn4G,GAAY,SAC7B,+BACE,eAAC,IAAM,UAAEA,UAKFo4G,GAAexoH,IAAMmnH,KAChCsB,cAAkB,IAAqB,IAApB,MAAEh+G,GAAY,EAC/B,OACE,+BACGA,GACCA,EAAMvM,KAAI,CAACkS,EAAY/P,IACrB,eAACioH,GAAY,CAAuBjoH,MAAOA,EAAO+P,MAAOA,GAArC,QAAOA,aCsKxBs4G,OAzJO1oH,IAAMmnH,MAAK,IAA8D,IAA7D,cAAEjjB,EAAa,oBAAE3B,GAAsC,EACvF,MAAM,GAAEjhG,GAAO4iG,GACP9zF,MAAOtO,EAAO6mH,SAAUC,EAAU5tE,WAAY6tE,GAAeC,YAAS,KACtE14G,MAAOgyE,EAAUumC,SAAUI,EAAa/tE,WAAYguE,GAAkBF,YAAS,KAC/Er+G,MAAOw+G,EAAaC,SAAUC,EAAc,UAAEC,GDVzB,MAC7B,MAAO3+G,EAAOy+G,GAAYlpH,IAAMC,SAAmB,IAE7CmpH,EAAYppH,IAAMq7C,aAAY,IAAkC,IAAjC,SAAEguE,EAAQ,SAAEC,GAAe,EAC9DJ,GAAS3zB,GAAag0B,aAAmBh0B,EAAW8zB,EAAUC,OAC7D,IAEH,MAAO,CACL7+G,QACAy+G,WACAE,cCAkEI,IAE7DznF,EAAa0nF,GAAkBzpH,IAAMC,UAAS,IAC9CypH,EAAUC,GAAe3pH,IAAMC,SAAe,IAAI2I,OAClDghH,EAAeC,GAAoB7pH,IAAMC,SAAmB,KAC5D6pH,EAAUC,GAAa/pH,IAAMC,UAAS,GAE7CD,IAAMwa,WAAU,KACdouG,EAAS1kB,EAAcpiG,OACvBinH,EAAY7kB,EAAc9hB,UAC1BunC,EAAY,IAAI/gH,KAAKs7F,EAAcp2E,SACnCq7F,EAAejlB,EAAc9B,WAC7BqnB,EAAevlB,EAAcniE,aAC7B8nF,GACGtnB,GAAuB,IAAIx/E,QAAOinG,IAAc9lB,EAAc9B,UAAUxgF,SAASooG,QAEnF,CACD9lB,EACAilB,EACAJ,EACAY,EACAf,EACArmB,EACAunB,IAGF,MAEMG,EAAuBjqH,IAAMq7C,aAChC6uE,IACCf,GAAegB,GAAgBA,EAAapnG,QAAOsO,GAAQA,IAAS64F,MACpEL,GAAiBM,GAAgB,IAAIA,EAAcD,OAErD,CAACf,IAGGiB,EAAkBpqH,IAAMq7C,aAC3B6uE,IACCf,GAAegB,GAAgB,IAAIA,EAAcD,KACjDL,GAAiBM,GAAgBA,EAAapnG,QAAOsO,GAAQA,IAAS64F,QAExE,CAACf,IAgDH,OACE,uCACE,0CACS,wBAAOhpH,UAAU,YAAYwH,KAAK,UAAWkhH,OAEtD,6CACCa,IlPnG6BztG,EkPmGGytG,EAAS5pE,clPlGjC3jC,IAAOF,GACIK,OAAO,wBkPkG3B,eAAC,KAAU,CACT/a,SAAW2a,IACTA,GAAQytG,EAAYztG,MAGxB,8CACa,wBAAO/b,UAAU,YAAYwH,KAAK,UAAWqhH,IACxD,eAAC,IAAM,CAAC7pH,QAAU+hC,GAAWvlC,OAAOmZ,KAAK86C,GAASwyB,GAAU,IAAO,qBAErE,sDACA,eAAComC,GAAY,CAAC/9G,MAAOw+G,EAAaG,UAAWA,IAC7C,wBACCH,EAAY/oH,OAAS,GACpB,eAAC,IAAM,CAAClB,KAAM,SAAUG,QAnFF,IAAM8pH,EAAY/qH,IAAI+rH,GAmFS,oCAIvD,wBACA,+CACCL,GACCA,EAAc1rH,KAAImsH,GAEd,+BACE,eAAC,IAAM,CAAClrH,QAAS,IAAMirH,EAAgBC,GAAWrrH,KAAM,MAAM,SAC3DqrH,KAFM,UAASA,OAO1B,wBACA,eAAC,IAAM,CAACrrH,KAAK,OAAOG,QA1CAoyB,UACtB64B,GAAkBC,cAAc2kD,mBAAmBia,SAC7C3mB,MAwCyC,8BAG7C,wBACA,wBACA,eAAC,IAAM,CACLhtE,QAASyM,EACTuoF,aAAc,YACd/oH,SAAU,IAAMkoH,GAAgB1nF,KAElC,eAAC,IAAM,CAAC5iC,QA5FQoyB,UAClB,MAAMg5F,EAAiB,CACrBz8F,OAAQ47F,EAAS5pE,cACjB/xB,QAASy8F,GAAQd,GAAU5pE,cAC3Bh+C,QACAsgG,UAAW6mB,EACX7mC,WACArgD,eAMF,IAHgBpmC,OAAO64G,QACpB,4CAA2CvuE,KAAK7iB,UAAUmnG,MAG3D,OAEF,MAAMvzD,EACJjS,SAASzjD,KAAQmpH,SACPnF,GAAqB,GAAI,CAAEoF,MAAOH,UAClCjF,GAAqBhkH,EAAI,CAAEopH,MAAOH,IAE9C1a,MAAM74C,IAuEyB,0BAC7B,eAAC,IAAM,CAACt8D,OAAQC,IAAOG,QAASqE,QA7Df,KACHxD,OAAO64G,QAAQ,yDAE7BuV,GAAWD,GACXja,MAAM,qBAyDgD,2BAGtD,wBACA,wBACA,eAAC,IAAM,CAAC7wG,KAAK,QAAQtE,OAAQC,IAAOK,OAAQmE,QA1E1BoyB,UAEpB,GADgB51B,OAAO64G,QAAQ,iDAClB,CACX,MAAMx9C,QNoCLzlC,eAAoCjwB,GACzC,MAAM01D,QAAiBqtD,GAAsB/iH,EAAI,UACjD,OAA2B,MAApB01D,EAAS5qC,OAAiB,+BAAiC4qC,EAAShtD,OMtChD2gH,CAAqBrpH,GAC5CuuG,MAAM74C,KAsE6D,+BlPlJrC/6C,SmPzB7B,MAAMuuG,GAAWtuG,IACtBA,EAAK0uG,YAAY1uG,EAAK2uG,cAAgB,GAC/B3uG,GAGIuuG,IAAsB,EAC7BK,GAAiB,CACrBxpH,GAAImpH,GACJ3oH,MAAO,kBACPsgF,SAAU,mCACVt0D,QAAQ,IAAIllB,MAAOk3C,cACnB/xB,QAASy8F,GAAQ,IAAI5hH,MAAQk3C,cAC7B/d,aAAa,EACbqgE,UAAW,IAoCE2oB,OA3BI/qH,IAAMmnH,MAAK,KAC5B,MAAQ/2G,MAAO4xF,GAAe0lB,YAAqBnD,GAAiB,KAC5Dn0G,MAAO46G,GAAatD,YAA4BrC,GAAe,KAEhE4F,EAAaC,GAAkBlrH,IAAMC,SAASwqH,IAErD,OACE,uCACE,oDACA,0BAAQtqH,UAAU,WAAWoB,SAAWiwC,GAAW05E,EAAe15E,EAAEx0C,OAAOoT,OAAO,UAC/E46G,EAAS9sH,KAAI,CAACmP,EAASq3F,IACtB,yBAAQt0F,MAAOs0F,EAAa,SACxB,WAAUA,MAAiBr3F,EAAQvL,SADL4iG,KAIpC,yBAAQt0F,MAAOq6G,GAAmB,SAC9B,sBADoCA,OAI1C,wBACA,eAACU,GAA2B,CAC1BjnB,cAAe8mB,EAASC,IAAgBH,GACxCvoB,oBAAqBP,UC/CtB,MAAMopB,GAAoC,CAC/C5wH,IAAK2nD,GAAWI,eAAe/nD,IAC/BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWC,cAYxB6nE,OATa,CAC1BC,iBAAkB,EAClB3kB,UAAW,CAAE/wB,OAAuB,GAAflyB,GAAWvlD,EAASgrD,OAAuB,GAAfzF,GAAWC,GAC5D4nE,mBAAoB,CAClBT,eAAgB,iBAChBU,cAAe,kB,OCmDnB,MAAMC,GAAkB,CAACC,EAAqBxB,KAC5C,MAAMyB,EAAS,IAAIC,WACnBD,EAAOE,WAAW3B,GAClByB,EAAOG,UAAY5qF,IACZyqF,EAAOn5G,QAGZ41G,eAAeC,QAAQqD,EAAaC,EAAOn5G,OAAO+P,cAIvCwpG,OAzDf,SAA6B,GAAqC,IAArC,YAAEL,EAAW,WAAEM,GAAmB,EAC7D,MAAOC,EAAgBC,GAAqBlsH,IAAMC,SAAS+rH,EAAW,IAkBhEG,EAAe,wBAAOxkH,KAAK,OAAOpG,SAhBxC,SAAmBiwC,GACjB,IAAKA,EAAEx0C,OAAO2nH,MAAO,OACrB,MAAO34G,GAAQwlC,EAAEx0C,OAAO2nH,MACxB8G,GAAgBC,EAAa1/G,IAa8B9G,MAAO,CAAEX,MAAO,WAEvE6nH,EACJ,uCACE,yBAAQjsH,UAAU,WAAWoB,SAdjCgwB,eAAoCigB,GAClC,MAAM0wD,EAAW1wD,EAAEx0C,OAAOoT,MAC1B87G,EAAkBhqB,GAClB,MAAMlrC,QAAiBm1B,MAAMv8B,GAAU,YAAWsyC,KAAY,GAAO,CACnEnW,QAASsgC,OAELC,QAAYt1D,EAAShtD,OAC3Bo+G,eAAeC,QAAQqD,EAAaY,IAO0B,SACzDN,EAAW9tH,KAAI8N,GACd,yBAAQoE,MAAOpE,EAAK,SACjBA,GADuBA,OAK9B,eAAC,IAAM,CAAChN,KAAM,WAAYG,QAAS,IAAMxD,OAAOmZ,KAAK8+E,GAAUq4B,SAInE,OACE,uBAAK9rH,UAAU,YAAW,UACxB,wBACA,gBAAC,IAAI,CAACmB,GAAG,OAAsBR,0BAA0B,EAAK,UAC5D,eAAC,IAAG,CAACQ,GAAG,MAAMQ,MAAM,QAAQO,MAAO8pH,IACnC,eAAC,IAAG,CAAC7qH,GAAG,KAAKQ,MAAM,KAAKO,MAAO+pH,MAFb,YAIpB,4BAkBN,SAASC,KACP,MAAMtgC,EAAU,IAAIyjB,QAEpB,OADAzjB,EAAQ0jB,OAAO,8BAA+B,KACvC1jB,ECjEM,SAASwgC,KACtB,MAAQn8G,MAAO4xF,GAAe0lB,YAAqBnD,GAAiB,IAMpE,OACE,uCACE,yDACA,mEACA,eAAC,GAAmB,CAClByH,WAAYhqB,EACZ0pB,YAAac,GAAkBjB,mBAAmBT,iBAEpD,gEACA,eAAC,GAAmB,CAClBkB,WAAYhqB,EACZ0pB,YAAac,GAAkBjB,mBAAmBC,gBAEpD,wBACA,eAAC,IAAM,CAACrsH,QAlBZ,WACGirD,GAAkBC,cAAcqiC,qBAAkC+/B,sBAiB5BztH,KAAK,OAAM,iCAGhD,wBACA,wBACA,eAAC,IAAM,CAACG,QAASutH,GAAoB,6BACrC,2BAKN,SAASA,GAAoBl7E,GAC3B42E,eAAeC,QAAQmE,GAAkBjB,mBAAmBC,cAAe,IAC3EpD,eAAeC,QAAQmE,GAAkBjB,mBAAmBT,eAAgB,IC1B/D6B,OAvB6B,CAC1CC,WAAY,CACVjlH,KAAM4iD,GAAUI,MAChBnwD,IAAK,eACL2vC,KAAM,6CAER0gB,YAAa,CAAEljD,KAAM4iD,GAAUI,MAAOnwD,IAAK,eAAgB2vC,KAAM,uBACjE0iF,eAAgB,CACdllH,KAAM4iD,GAAUI,MAChBnwD,IAAK,kBACL2vC,KAAM,+BAER2iF,aAAc,CAAEnlH,KAAM4iD,GAAUI,MAAOnwD,IAAK,gBAAiB2vC,KAAM,wBACnE6gB,UAAW,CAAErjD,KAAM4iD,GAAUI,MAAOnwD,IAAK,aAAc2vC,KAAM,qBAC7D4iF,UAAW,CAAEplH,KAAM4iD,GAAUI,MAAOnwD,IAAK,aAAc2vC,KAAM,qBAC7D6iF,UAAW,CAAErlH,KAAM4iD,GAAUI,MAAOnwD,IAAK,aAAc2vC,KAAM,qBAC7D8iF,SAAU,CAAEtlH,KAAM4iD,GAAUI,MAAOnwD,IAAK,YAAa2vC,KAAM,oBAC3D+iF,SAAU,CAAEvlH,KAAM4iD,GAAUI,MAAOnwD,IAAK,YAAa2vC,KAAM,oBAC3DgjF,SAAU,CAAExlH,KAAM4iD,GAAUI,MAAOnwD,IAAK,YAAa2vC,KAAM,oBAC3DijF,UAAW,CAAEzlH,KAAM4iD,GAAUI,MAAOnwD,IAAK,aAAc2vC,KAAM,sBAC7DkjF,OAAQ,CAAE1lH,KAAM4iD,GAAUI,MAAOnwD,IAAK,UAAW2vC,KAAM,uBCCzD,MAAMg8D,WAAiB9iD,OAAO4jC,MAG5Bv7C,cACEC,MAAM,sBAAsB,KAHtBy7C,kBAAY,OA2Ibr1B,gBAAkB,IAAM9B,GAAU10C,KAAK6rE,cArIvC50C,UACL4X,GAAkBC,cAAcy+B,mBAAmBvtE,MACnDA,KAAK6rE,aAAe,IAAIjO,GAAiB59D,MAEzC+3D,GAAiB/3D,MACjBgsB,OAAOC,OAAOijB,IAAatpB,SAAQ6nC,GACjCztD,KAAKm4D,KAAKrP,MAAM2E,EAAMxuE,IAAKo1D,GAASoZ,EAAM7+B,MAAM,MAElD5C,OAAOC,OAAOmlF,IAAexrF,SAAQ6nC,GACnCztD,KAAKm4D,KAAKrP,MAAM2E,EAAMxuE,IAAKo1D,GAASoZ,EAAM7+B,MAAM,MAElD5C,OAAOC,OAAO2a,IAAYhhB,SAAQ6nC,GAChCztD,KAAKm4D,KAAKo5B,WAAW9jC,EAAMxuE,IAAKwuE,EAAM3mB,QAAS2mB,EAAM1mB,WAEvD8H,GAAkBC,cAAc6H,kBAAkBg5C,kBAAkBx9C,IAGtE,eACgE,YAA1DtD,GAAkBC,cAAcymB,iBAAiBphD,MAIrDnU,KAAKm0E,mBACLn0E,KAAK6qF,uBAJHnxF,QAAQ3B,IAAI,iCAOR8yF,sBACN,MAAME,EAAmB,IAAIjjD,OAAOC,YAAYwD,UAAUvrC,KAAM,EAAG,GAC7Dk5D,EAAUl5D,KAAKgrF,mBAEfzvC,EAAkB5R,GAAmB,CACzCE,WAAYqvB,EAAQv0E,OACpBmlD,UAAWmnE,GAAkB7lB,UAAU/wB,OACvCtwB,UAAWknE,GAAkB7lB,UAAUx9C,OACvC5D,aAAcinE,GAAkBlB,iBAChC9lE,kBAAkB,IAGpB8gD,EAAiBlyF,IACfqgE,EAAQv2E,KAAI,CAACy3D,EAAQt1D,IACnBkb,KAAK+xG,gBACH33D,EAAO3rD,KACP8sD,EAAgBz2D,GAAO,GACvBy2D,EAAgBz2D,GAAO,GACvBs1D,EAAOtjD,aAIbkJ,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI62C,GAGtCC,mBACN,MAAO,CACL,CACEv8F,KAAM,mBACNqI,SAAU,KACR+3C,GAAkBC,cAAc6jD,iBAAiB2V,GAAc0J,iBAC/DhyG,KAAKw2C,kBAAkBomB,iBACvB58D,KAAKwrC,MAAM7gC,MAAM,qBAGrB,CACElc,KAAM,uBACNqI,SAAU,KACR+3C,GAAkBC,cAAc6jD,iBAAiB2V,GAAc0I,iBAGnE,CACEviH,KAAM,iBACNqI,SAAU,KACR+3C,GAAkBC,cAAc6jD,iBAAiB2V,GAAc2J,iBAGnE,CACExjH,KAAM,oBACNqI,SAAU,KACR+3C,GAAkBC,cAAc6jD,iBAAiB2V,GAAckH,eAM/DuC,gBAAgBtjH,EAAcu+D,EAAcC,EAAcn2D,GAChE,OAAO2iD,GAAaz5C,KAAM,CACxB+sC,SAAUqkE,GAAcE,eAAeryH,IACvCF,QAAS0P,EACTirD,WAAY,CAAE92D,EAAG,EAAGwlD,EAAG,EAAGkE,KAAM,GAAKC,KAAM,IAC3CoN,gBAAiBk2D,GACjBh2D,KAAM/iD,IACL4/C,YAAYsW,EAAMC,GAGhBikD,qBACL,MAAMgB,EACJrF,eAAesF,QAAQlB,GAAkBjB,mBAAmBT,iBAAmB,GAC3EU,EACJpD,eAAesF,QAAQlB,GAAkBjB,mBAAmBC,gBAAkB,GAChF,GAA2B,KAAvBiC,GAA+C,KAAlBjC,EAC/B,OAGFjwG,KAAKw2C,kBAAkBomB,iBAEvBshB,GAAOlzD,MAAMknF,GACTjC,GACF/xB,GAAOlzD,MAAMilF,GAAe,GAE9B,MAAM7rC,EAAiB8Z,GAAOC,WAE9Bn+E,KAAKwrC,MAAM7gC,MAAM,cAAe,CAC9By5D,iBACAiJ,YAAa,EACbC,eAAgB,IAIZ6G,mBACN,MAAM2W,EAAgB,IAAIhjD,OAAOC,YAAYqH,MAC3CpvC,KACAqoC,GAAazlD,EACbylD,GAAaD,EACbgpE,GAAcC,WAAWpyH,KAE3B6rG,EAAc/xC,eAAe5Q,GAAWvlD,EAAGulD,GAAWC,GACtD,MAAMgqE,EAAqB,IAAItqE,OAAOC,YAAYqH,MAChDpvC,KACAqoC,GAAazlD,EACbylD,GAAaD,EACbgpE,GAAcG,aAAatyH,KAC3BitD,SAAS,IACXlsC,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAYu3C,GACpD9qF,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAY6+D,IAKzCxnB,UC1JA,MAAMynB,GAMZliF,cAAe,KALdmiF,yBAAmB,OACnBC,qBAAe,OAChB3vH,OAAC,OACDwlD,OAAC,OAkDAoqE,mBAAqB,IAAM99D,GAAU10C,KAAKuyG,iBA/ChDvyG,KAAKpd,EAAIylD,GAAazlD,EACtBod,KAAKooC,EAAIC,GAAaD,EAGjBl2C,WAAWqgH,GAChBvyG,KAAKuyG,gBAAkBA,EASzB,uBACE,MAAMhuB,EAAYsoB,eAAesF,QAAQ,iBACzC,IAAK5tB,IAAcA,EAAUhwC,WAAW,eACtC,OAEFv0C,KAAKsyG,oBAAsB/tB,EAE3B,MAAMkuB,EAAsB,IAAGluB,IAC/BvkF,KAAKwyG,qBAAqBE,SAASD,EAAoBluB,GAEvD,MAAMouB,QAAuBlkC,GAC3BzuE,KAAKwyG,qBACLC,EACAp+D,GAASkwC,GAAW,IAEtBvkF,KAAKm0E,iBAAiBw+B,GAGhBx+B,iBAAiBs+B,GACvB,GAA8B,MAA1BA,EAAmB,GACrB,OAGFzyG,KAAKwyG,qBAAqBh8D,kBAAkB6nB,mBAAmBhrB,GAAME,YACrE,MAAMq/D,EAAmB,IAAI9qE,OAAOC,YAAYqH,MAC9CpvC,KAAKwyG,qBACLnqE,GAAazlD,EACbylD,GAAaD,EACbqqE,GACAl6D,iBACFv4C,KAAKwyG,qBAAqBh8D,kBAAkBC,WAAWpD,GAAME,WAAYq/D,GAKpEC,yBACL,OAAO7yG,KAAKsyG,oBAGPQ,YACL,OAAO9yG,KAAKsyG,oBAAsB,MCzE/B,IAAKS,IAGX,SAHWA,OAAU,uBAAVA,IAAU,iCAGrB,CAHWA,QAAU,KCoBP,MAAMC,GAQnB7iF,cAAe,KAPR8iF,gBAAkB,gBAAgB,KAEjCV,qBAAe,OACfW,oBAAc,OACdC,yBAAmB,OACnBC,mBAAa,OA4GbZ,mBAAqB,IAAM99D,GAAU10C,KAAKuyG,iBAzGhDvyG,KAAKozG,cAAgB,IAAIxqD,IAGpB12D,WAAWqgH,GAChBvyG,KAAKuyG,gBAAkBA,EACvBvyG,KAAKqzG,iBAAiBd,GAYhBc,iBAAiBd,GACvBvyG,KAAKwyG,qBACFxvD,kBACAwa,sBAAsB,eAAe,KAChCx9D,KAAKwyG,qBAAqBc,aAAaP,GAAWQ,YACpDvzG,KAAKkzG,eAAiBlzG,KAAKwzG,oBAIjCxzG,KAAKwyG,qBACFxvD,kBACAwa,sBAAsB,aAAa,KAClC,GAAIx9D,KAAKwyG,qBAAqBc,aAAaP,GAAWQ,WAAavzG,KAAKkzG,eAAgB,CACtF,GAAIlzG,KAAKkzG,eAAe3oD,cAAgB,GAAKvqD,KAAKkzG,eAAe5oD,eAAiB,EAEhF,YADAtqD,KAAKkzG,eAAe/9D,UAGtBn1C,KAAKkzG,eAAetwH,GAAKod,KAAKkzG,eAAe3oD,aAAe,EAC5DvqD,KAAKkzG,eAAe9qE,GAAKpoC,KAAKkzG,eAAe5oD,cAAgB,EAC7DtqD,KAAKkzG,eAAejnE,UAAU,IAC9BjsC,KAAKyzG,aAAazzG,KAAKkzG,gBAEvBX,EAAgB1lH,MAAM6mH,aAAa1zG,KAAKkzG,gBACxClzG,KAAKwyG,qBAAqBmB,mBAAmB3zG,KAAKkzG,gBAElDlzG,KAAKmzG,yBAAsBhtH,EAC3B6Z,KAAKkzG,oBAAiB/sH,MAStBqtH,gBACN,MAAO5wH,EAAGwlD,GAAKpoC,KAAKwyG,qBAAqBoB,iBACnCV,EAAiB,IAAIprE,OAAOC,YAAYgE,UAC5C/rC,KAAKwyG,qBACL5vH,EACAwlD,EACA,EACA,EACAkB,GAASZ,OAERuD,UAAU,GACVC,SAAS,IACTqM,iBACAs7D,iBAIH,OAFA7zG,KAAKmzG,oBAAsB,CAACvwH,EAAGwlD,GAC/BpoC,KAAKwyG,qBAAqBh8D,kBAAkBC,WAAWpD,GAAMK,KAAMw/D,GAC5DA,EAODO,aAAavlD,GACnB,MAAM7Q,EAAS,OAASr9C,KAAKwyG,qBAAqBsB,uBAE5CC,EAA6B,CACjChuH,GAAIs3D,EACJz6D,EAAGsrE,EAAWtrE,EACdwlD,EAAG8lB,EAAW9lB,EACdp/C,MAAOklE,EAAW3D,aAClBthE,OAAQilE,EAAW5D,eAGrBtqD,KAAKozG,cAAcppD,IAAI3M,EAAQ02D,GAE/B7lD,EAAWvqD,KAAKqmD,IAAI,SAAU3M,GAC9B6Q,EAAWvqD,KAAKqmD,IAAI,OAAQ,QAOvBgqD,eACL,MAAO,IAAIh0G,KAAKozG,cAAcnnF,UAGzBgoF,YAAY52D,GACjB,OAAOr9C,KAAKozG,cAAc5xH,IAAI67D,GAWzB62D,sBAAsB3B,GAC3B,IACGvyG,KAAKwyG,qBAAqBc,aAAaP,GAAWQ,YAClDvzG,KAAKmzG,sBACLnzG,KAAKkzG,eAEN,OAEF,MAAOiB,EAAQC,GAAUp0G,KAAKmzG,oBACxBkB,EAAW9B,EAAgB1lH,MAAMjK,EACjC0xH,EAAW/B,EAAgB1lH,MAAMu7C,EACvCiiB,GAAOrqD,KAAKkzG,eAAgBmB,EAAWF,EAAQG,EAAWF,GASrDG,mBACL,MAAM5xH,EAAgB,GAatB,OAZAqd,KAAKozG,cAAcxtF,SAAS4uF,IAC1B,MAAMC,EAAkB,CACtB,IAAMD,EAAWzuH,GACjB4sE,GAAY+hD,YAAYF,EAAW5xH,GACnC+vE,GAAY+hD,YAAYF,EAAWpsE,GACnCuqB,GAAY+hD,YAAYF,EAAWxrH,OACnC2pE,GAAY+hD,YAAYF,EAAWvrH,SAGrCtG,EAAIujB,KAAKuuG,EAAgBlyH,KAAK,OAC9BI,EAAIujB,KAAK,gCAEJvjB,EAWFgyH,aACLr/D,EACAmqC,EACA5qF,GAEA,MAAMwoD,EAAS/H,EAAW3xC,KAAKniB,IAAI,UAC7BgzH,EAAax0G,KAAKozG,cAAc5xH,IAAI67D,GACrCm3D,IACLA,EAAW/0B,GAAa5qF,GAGnB+/G,YACL50G,KAAKozG,cAActlD,QAGdt2C,OAAO89B,GACZ,MAAM+H,EAAS/H,EAAW3xC,KAAKniB,IAAI,UACnCwe,KAAKozG,cAAc57F,OAAO6lC,ICrMfw3D,OALe,CAC5BpxH,KAAM,CAAEqxH,OAHS,GAGW3vH,KAAM,GAAI41D,UAAW,IACjDhG,MAAO,CAAEggE,SAAU,GAAK1sC,MAAO,EAAKnlB,OAAQ,KCS/B,MAAM8xD,WAAqBltE,OAAOC,YAAYwD,UAM3Dpb,YACEqb,EACA5oD,EACAwlD,GAEC,IADD6sE,EAA6B,uDAAGlC,GAAWmC,cAE3C9kF,MAAMob,EAAO5oD,EAAGwlD,GAAG,KAXb+sE,aAAO,OACPC,oBAAc,OACdC,iBAAW,OACXC,uBAAiB,EASvBt1G,KAAKo1G,eAAiBH,EACtBj1G,KAAKm1G,QAAU,IAAIz8F,MACnB1Y,KAAKq1G,YAAc,IAAI38F,MACvB1Y,KAAKs1G,kBAAoB1sG,GAAU6+B,mBAG9B8tE,oBACL,OAAOv1G,KAAKo1G,eAGPI,cAAcC,GACnBz1G,KAAKo1G,eAAiBK,EAGjBC,cACLlqE,EACAuB,GAMC,IALD4oE,IAAe,yDACflnH,EAAY,uDAAG,GACf7K,EAAmB,uDAAGglB,GAAU2+B,aAChCuS,EAAmB,uDAAGlxC,GAAU2+B,aAChCwS,EAAiB,uDAAGnxC,GAAU2+B,aAG9B,MAAMquE,EAAsB,IAAI9tE,OAAOC,YAAYwD,UAAUC,EAAO,EAAG,GAGvExrC,KAAKm1G,QAAQjvG,KAAKyvG,GAClB31G,KAAKq1G,YAAYnvG,KAAK0vG,GACtB,MAAMC,EAAU71G,KAAKq1G,YAAY1wH,OAAS,EAGpC61B,EAAY,IAAI8wB,GAAgBE,EAAO,EAAG,EAAG/8C,GAuB7CqnH,EAAar8D,GAAajO,EAAO,CACrCuB,SAAUqkE,GAAcU,OAAO7yH,IAC/B46D,KAvBW,KACP75C,KAAKm1G,QAAQU,KAAU71G,KAAKs1G,kBAAoBO,GACpDjyH,IACAoc,KAAK+1G,8BAqBLj8D,QAlBqB,KACR,KAATrrD,GAAa+rB,EAAU4xB,YAAW,GACtCwpE,EAAoB1pE,SAAS2oE,GAAsB9/D,MAAMszB,OACzDvuB,KAgBAC,MAbmB,KACnBv/B,EAAU4xB,YAAW,GACrB,MAAM4pE,EAAaH,IAAY71G,KAAKs1G,mBAAqBt1G,KAAKm1G,QAAQU,GACtED,EAAoB1pE,SAClB8pE,EAAanB,GAAsB9/D,MAAMmO,OAAS2xD,GAAsB9/D,MAAMggE,UAEhFh7D,KAQAC,cAAgBU,IACdlgC,EAAU53B,EAAI83D,EAAQ93D,EAAIgzH,EAAoBhzH,EAAI,IAClD43B,EAAU4tB,EAAIsS,EAAQtS,EAAIwtE,EAAoBxtE,EAAI,KAEpD6R,eAAe,IAIXg8D,EAAW,IAAInuE,OAAOC,YAAYsO,OAAO7K,EAAO,EAAG,EAAGuB,GAAUgM,eACpE87D,GAAsBpxH,KAAK0B,KAC3B0vH,GAAsBpxH,KAAK0B,MAG7B2wH,EAAWj9G,IAAIo9G,GAEfL,EAAoB/8G,IAAI,CAACi9G,EAAYt7F,IAGhCu7F,6BACL/1G,KAAKk2G,WAAU,GACf,IAAIC,EAAU,EACdn2G,KAAKq1G,YAAYzvF,SAAQ,CAAC6C,EAAM3jC,KAC9B2jC,EAAKiuB,YAAY,EAAGy/D,GACpB,MAAMH,EAAalxH,IAAUkb,KAAKs1G,mBAAqBt1G,KAAKm1G,QAAQrwH,GACpE2jC,EAAKyjB,SACH8pE,EAAanB,GAAsB9/D,MAAMmO,OAAS2xD,GAAsB9/D,MAAMggE,UAEhF/0G,KAAKnH,IAAI4vB,GACT0tF,GAAWtB,GAAsBpxH,KAAKqxH,OAASD,GAAsBpxH,KAAKs3D,cC/GzE,MAAMq7D,GAAiC,CAC5Cn3H,IAAK2nD,GAAWC,WAAW5nD,IAC3BkG,KAAM,GACN0iD,MAAOC,OAAOC,YAAYC,WAAWyE,YCJhC,SAAS4pE,GAAmB9xB,GACjC,OAAOA,EAAUlhE,MAAM,KAAKw+C,MAAOx+C,MAAM,KAAK,GAGzC,MAAMizF,GAAc/sE,GAAgB,OAASA,ECWrC,MAAMgtE,GAAc,cAAD,KACxBC,wBAAkB,OAClBjE,qBAAe,OAkHfC,mBAAqB,IAAM99D,GAAU10C,KAAKuyG,iBAhH3CrgH,WAAWqgH,GAChBvyG,KAAKuyG,gBAAkBA,EASlBkE,kBAGJ,IAFDC,EAA4B,uDAAG,qCAC/BC,EAAwC,uCAExC,MAAMv6D,EAAmC,KAAtBs6D,EAA2B,UAAYL,GAAmBK,GAEvEE,EAAYD,EAAkBh0H,KAAIk0H,IACtC,MAAM9F,EAAM8F,EAAiBtC,mBAC7B,IAAKxD,EACH,MAAO,GAOT,MALiB,GAAE8F,EAAiB5D,oBAAoBlC,EACrDpuH,IAAI2zH,IACJ3zH,IAAI2zH,IACJ/zH,KAAK,WAKJ47F,EAAc,kBACT/hC,+CAMTA,MAAes6D,MAAsB/jD,GAAYgzB,mBAAmB+wB,SAExEt6D,uEAIAw6D,EAAUj0H,IAAI2zH,IAAY/zH,KAAK,sIAQ7B+xG,MAAM,kBACN56F,QAAQ3B,IAAIomF,GAUP24B,cAAcF,GACnB52G,KAAKw2G,mBAAqB,IAAI1uE,OAAOC,YAAYwD,UAAUvrC,KAAKwyG,qBAAsB,EAAG,GAEzFoE,EAAUhxF,SAASmxF,IACjB,MAAMC,EAAkB,IAAIlvE,OAAOC,YAAYgE,UAC7C/rC,KAAKwyG,qBACLuE,EAASn0H,EACTm0H,EAAS3uE,EACT,IACA,IACAkB,GAASR,UAERmD,UAAU,EAAK,IACfC,SAAS,IAEN+qE,EAAa5qE,GACjBrsC,KAAKwyG,qBACLxyG,KAAKk3G,oBAAoBH,GACzB,CAAEn0H,EAAGm0H,EAASn0H,EAAI,GAAIwlD,EAAG2uE,EAAS3uE,EAAI,GAAIkE,KAAM,EAAKC,KAAM,IAC3D6pE,IACAe,iBAAiB,GAEnBn3G,KAAKw2G,mBAAoB39G,IAAI,CAACm+G,EAAiBC,OAEjDj3G,KAAKwyG,qBAAqB35G,IAAIoxD,SAASjqD,KAAKw2G,oBAQtCU,oBAAoBH,GAC1B,OAAO/qF,OAAO2S,QAAQo4E,GACnBp0H,KACC,QAAE1D,EAAK4V,GAAM,QACV,GAAE5V,MAAyB,kBAAV4V,EAAqB89D,GAAY+hD,YAAY7/G,GAASA,EAAMmS,gBAEjFzkB,KAAK,MAOH60H,gBACDp3G,KAAKw2G,oBACPx2G,KAAKw2G,mBAAmBrhE,WC7Gf,MAAMkiE,GAMnBlnF,cAAe,KALR8iF,gBAAkB,UAAU,KAE3BV,qBAAe,OACf+E,qBAAe,OA2Hf9E,mBAAqB,IAAM99D,GAAU10C,KAAKuyG,iBAxHhDvyG,KAAKs3G,gBAAkB,IAAI1uD,IAGtB12D,WAAWqgH,GAChBvyG,KAAKuyG,gBAAkBA,EACvBvyG,KAAKs3G,gBAAkB,IAAI1uD,IAO7B,mBACE,MAAM27B,EAAYsoB,eAAesF,QAAQ,iBACzC,IAAK5tB,EAAW,OAChB,MAAME,EAAkB,IAAGF,IAC3BvkF,KAAKwyG,qBAAqBE,SAASjuB,EAAgBF,GAEnD,MAAMouB,QAAuBlkC,GAC3BzuE,KAAKwyG,qBACL/tB,EACApwC,GAASkwC,GAAW,IAEtBvkF,KAAKu3G,aAAa5E,GAQZ4E,aAAa9yB,GACnB,GAA0B,MAAtBA,EAAe,GACjB,OAEF,MAAM+yB,EAAe,IAAI1vE,OAAOC,YAAYqH,MAC1CpvC,KAAKwyG,qBACLnqE,GAAazlD,EACbylD,GAAaD,EACbq8C,GAEClsC,iBACAs7D,iBACH7zG,KAAKwyG,qBAAqB3lH,MAAM6mH,aAAa8D,GAC7Cx3G,KAAKwyG,qBAAqBh8D,kBAAkBC,WAAWpD,GAAMI,QAAS+jE,GAEtEx3G,KAAKy3G,eAAehzB,EAAgB+yB,GAS9BC,eAAehzB,EAA0B+yB,GAC/C,MAAMn6D,EAASr9C,KAAK03G,eAClBjzB,EACAzkF,KAAKwyG,qBAAqBsB,wBAKtBC,EAA+B,CACnChuH,GAAIs3D,EACJtQ,SAAU03C,EACVz3C,UALqB0H,GAAU10C,KAAKwyG,qBAAqBmF,aAAalzB,IAMtE7hG,EAAGylD,GAAazlD,EAChBwlD,EAAGC,GAAaD,GAGlBpoC,KAAKs3G,gBAAgBttD,IAAI3M,EAAQ02D,GAEjCyD,EAAa7zG,KAAKqmD,IAAI,SAAU3M,GAChCm6D,EAAa7zG,KAAKqmD,IAAI,OAAQ,UAE9BhqD,KAAKwyG,qBAAqBmB,mBAAmB6D,GASvCE,eAAe3qE,EAAkB6qE,GAEvC,MAAQ,GADSvB,GAAmBtpE,KACf6qE,IAOhB5D,eACL,MAAO,IAAIh0G,KAAKs3G,gBAAgBrrF,UAS3BsoF,mBACL,OAAO77F,MAAM81C,KAAKxuD,KAAKs3G,gBAAgBrrF,UAAUtpC,KAAKoxH,IACpD,MAAM8D,EAAoB,CACxB,IAAM9D,EAAahuH,GACnBguH,EAAa/mE,UACb2lB,GAAY+hD,YAAYX,EAAanxH,GACrC+vE,GAAY+hD,YAAYX,EAAa3rE,IAMvC,OAJI2rE,EAAa/qH,QACf6uH,EAAkB3xG,KAAKysD,GAAY+hD,YAAYX,EAAa/qH,QAC5D6uH,EAAkB3xG,KAAKysD,GAAY+hD,YAAYX,EAAa9qH,UAEvD4uH,EAAkBt1H,KAAK,SAc3BoyH,aACLr/D,EACAmqC,EACA5qF,GAEA,MAAMwoD,EAAS/H,EAAW3xC,KAAKniB,IAAI,UAC7Bs2H,EAAa93G,KAAKs3G,gBAAgB91H,IAAI67D,GACvCy6D,IACLA,EAAWr4B,GAAa5qF,GAGnB+/G,YACL50G,KAAKs3G,gBAAgBxpD,QAGhBt2C,OAAO89B,GACZ,MAAM+H,EAAS/H,EAAW3xC,KAAKniB,IAAI,UACnCwe,KAAKs3G,gBAAgB9/F,OAAO6lC,ICzKjB06D,OALY,CACzBC,mBAAoB,GACpBC,YAAa,MCeA,MAAMC,GAAoB,cAAD,KAC9BC,qBAAe,OACfC,sBAAgB,OAChB7F,qBAAe,OAgHfC,mBAAqB,IAAM99D,GAAU10C,KAAKuyG,iBA9G3CrgH,WAAWqgH,GAChBvyG,KAAKuyG,gBAAkBA,EACvBvyG,KAAKq4G,gBAAgB9F,GACrBvyG,KAAKs4G,uBACLt4G,KAAKu4G,gBAGCD,uBACNt4G,KAAKo4G,iBAAmB,IAAItwE,OAAOC,YAAYgE,UAC7C/rC,KAAKwyG,qBACL,EACA,EACA,EACA,EACA,GACAtmE,SAAS,IACXlsC,KAAKwyG,qBAAqBh8D,kBAAkBC,WAAWpD,GAAMG,SAAUxzC,KAAKo4G,kBAGtEC,gBAAgB9F,GACtBA,EACGvvD,kBACAwa,sBACC,QACA,CACE9iB,EACApF,EACAkjE,EACAC,KAEKlG,EAAgBe,aAAaP,GAAWQ,YAC3ChB,EAAgBmG,mBAAmBlD,cAAczC,GAAWmC,eAC5D5/D,EAAW1yD,EAAI41H,EACfljE,EAAWlN,EAAIqwE,GAGmB,WAAhCnjE,EAAW3xC,KAAKniB,IAAI,UACtB+wH,EAAgBoG,gBAAgBrjE,EAAY,IAAKkjE,GACjDjG,EAAgBoG,gBAAgBrjE,EAAY,IAAKmjE,GACjDz4G,KAAK2zG,mBAAmBr+D,IAGU,SAAhCA,EAAW3xC,KAAKniB,IAAI,UACtB+wH,EAAgBqG,iBAAiBtjE,EAAY,IAAKkjE,GAClDjG,EAAgBqG,iBAAiBtjE,EAAY,IAAKmjE,GAClDz4G,KAAK2zG,mBAAmBr+D,OAM3BujE,aAAaC,GAClB,MAAMvG,EAAkBvyG,KAAKwyG,qBAC7B,IAAKxyG,KAAKm4G,kBAAoBn4G,KAAKo4G,iBACjC,OAEF,MAAMW,EAASD,EAAUf,GAAmBE,YAAc,EAAIF,GAAmBE,alJL9E,SACLx3E,EACAs4E,GAEAt4E,EAAI8pB,cAAgBwuD,EACpBt4E,EAAI6pB,eAAiByuD,EkJCnBC,CAAmBh5G,KAAKm4G,gBAAiBY,GACzC/4G,KAAKo4G,iBAAiB9tD,cACpBtqD,KAAKm4G,gBAAgB7tD,cAAgBytD,GAAmBC,mBAC1Dh4G,KAAKo4G,iBAAiB7tD,aACpBvqD,KAAKm4G,gBAAgB5tD,aAAewtD,GAAmBC,mBAEX,WAA1Ch4G,KAAKm4G,gBAAgBx0G,KAAKniB,IAAI,UAChC+wH,EAAgBoG,gBACd34G,KAAKm4G,gBACL,QACA15F,KAAKw6F,IAAIj5G,KAAKm4G,gBAAgB5tD,eAEhCgoD,EAAgBoG,gBACd34G,KAAKm4G,gBACL,SACA15F,KAAKw6F,IAAIj5G,KAAKm4G,gBAAgB7tD,iBAIY,SAA1CtqD,KAAKm4G,gBAAgBx0G,KAAKniB,IAAI,UAChC+wH,EAAgBqG,iBACd54G,KAAKm4G,gBACL,QACA15F,KAAKw6F,IAAIj5G,KAAKm4G,gBAAgB5tD,eAEhCgoD,EAAgBqG,iBACd54G,KAAKm4G,gBACL,SACA15F,KAAKw6F,IAAIj5G,KAAKm4G,gBAAgB7tD,iBAK7BqpD,mBAAmBr+D,GACnBt1C,KAAKo4G,mBAGVp4G,KAAKo4G,iBAAkBlsE,SAAS,IAChClsC,KAAKm4G,gBAAkB7iE,EACvBt1C,KAAKo4G,iBAAiBx1H,EAAI0yD,EAAW1yD,EACrCod,KAAKo4G,iBAAiBhwE,EAAIkN,EAAWlN,EAErCpoC,KAAKo4G,iBAAiB9tD,cACpBhV,EAAWgV,cAAgBytD,GAAmBC,mBAChDh4G,KAAKo4G,iBAAiB7tD,aACpBjV,EAAWiV,aAAewtD,GAAmBC,oBAG1CkB,WACLl5G,KAAKo4G,iBAAkBlsE,SAAS,GAChClsC,KAAKm4G,qBAAkBhyH,EAKjBoyH,gBACa,CACjBzwE,OAAOqR,MAAMm2B,SAASC,SAAS4pC,UAC/BrxE,OAAOqR,MAAMm2B,SAASC,SAASgyB,QAEtB37E,SAAQ3mC,GACjB+gB,KAAKwyG,qBACFxvD,kBACAqa,yBAAyBp+E,EAAK,MAAM,KACnC+gB,KAAKo5G,wBACLp5G,KAAKk5G,gBAKLE,wBACN,GAAKp5G,KAAKm4G,gBAAV,CACA,OAAQn4G,KAAKq5G,QAAQr5G,KAAKm4G,kBACxB,IAAK,SACHn4G,KAAKwyG,qBAAqB8G,UAAUt5G,KAAKm4G,iBACzC,MACF,IAAK,OACHn4G,KAAKwyG,qBAAqB+G,WAAWv5G,KAAKm4G,iBAG9Cn4G,KAAKm4G,gBAAgBhjE,WAGfkkE,QAAQ/jE,GAAsE,IAAD,EACnF,OAA2B,QAA3B,EAAOt1C,KAAKm4G,uBAAe,aAApB,EAAsBx0G,KAAKniB,IAAI,SC/J3Bg4H,OAJe,CAC5Bz2D,OAAQ,CAAEngE,EAAG,IAAKwlD,EAAG,MCuBR,MAAM4pE,WAAwBlqE,OAAO4jC,MAgBlDv7C,cACEC,MAAM,mBAAmB,KAhBpBy7C,kBAAY,OACZ3K,kBAAY,OACXu4C,sBAAgB,OAChBpE,iBAAW,OACXqE,iBAAW,OACX5tC,mBAAa,OACbM,uBAAiB,OACjBI,gBAAU,OAEVojB,cAAQ,OACR+pB,kBAAY,OAEZC,iBAAW,OACXC,mBAAa,OA6JdnB,iBAAmB,IAAMhkE,GAAU10C,KAAKq1G,aAAa,KAuDrDryD,gBAAkB,IAAMtO,GAAU10C,KAAKkhE,cAAc,KACrD1qB,gBAAkB,IAAM9B,GAAU10C,KAAK6rE,cAjN5C7rE,KAAK8rE,cAAgB,IAAIurC,GACzBr3G,KAAK05G,YAAc,IAAI1G,GACvBhzG,KAAKosE,kBAAoB,IAAIimC,GAC7BryG,KAAKwsE,WAAa,IAAI+pC,GACtBv2G,KAAKy5G,iBAAmB,IAAIvB,GAE5Bl4G,KAAKq1G,iBAAclvH,EACnB6Z,KAAK25G,aAAe,EACpB35G,KAAK4vF,SAAW,IAAIhnC,IAGf1tC,OACLlb,KAAK6rE,aAAe,IAAIjO,GAAiB59D,MACzCA,KAAKkhE,aAAe,IAAInE,GAAiB/8D,MACzCA,KAAK8rE,cAAgB,IAAIurC,GACzBr3G,KAAK05G,YAAc,IAAI1G,GACvBhzG,KAAKosE,kBAAoB,IAAIimC,GAC7BryG,KAAKwsE,WAAa,IAAI+pC,GACtBv2G,KAAKy5G,iBAAmB,IAAIvB,GAE5Bl4G,KAAKq1G,iBAAclvH,EACnB6Z,KAAK25G,aAAe,EACpB35G,KAAK4vF,SAAW,IAAIhnC,IAGflqE,SACLmwD,GAAkBC,cAAcy+B,mBAAmBvtE,MAEnDA,KAAKm0E,mBACLn0E,KAAK85G,kBACL95G,KAAKosE,kBAAkBl6E,WAAW8N,MAClCA,KAAK8rE,cAAc55E,WAAW8N,MAC9BA,KAAK05G,YAAYxnH,WAAW8N,MAC5BA,KAAKy5G,iBAAiBvnH,WAAW8N,MACjCA,KAAKwsE,WAAWt6E,WAAW8N,MAE3BA,KAAK45G,YAAc55G,KAAKnT,MAAMuwE,SAASG,OAAOz1B,OAAOqR,MAAMm2B,SAASC,SAASwqC,cAC7E/5G,KAAK65G,cAAgB75G,KAAKnT,MAAMuwE,SAASG,OAAOz1B,OAAOqR,MAAMm2B,SAASC,SAASyqC,gBAG1E3lC,SACDr0E,KAAK45G,aAAe55G,KAAK45G,YAAYK,QACvCj6G,KAAKy5G,iBAAiBZ,cAAa,GAEjC74G,KAAK65G,eAAiB75G,KAAK65G,cAAcI,QAC3Cj6G,KAAKy5G,iBAAiBZ,cAAa,GAGrC74G,KAAK05G,YAAYxF,sBAAsBl0G,MAGjC85G,kBACN,MAAMlvD,EAAc,IAAI9iB,OAAOC,YAAYwD,UAAUvrC,KAAM,EAAG,GACxD8vD,EAAa,IAAImY,GAAiBjoE,MAAM,KAC5CA,KAAKo8D,UACLvtB,GAAkBC,cAAc6jD,iBAAiB2V,GAAc4R,SAC/Dl6G,KAAKwrC,MAAM7gC,MAAM,yBAGnB3K,KAAKq1G,YAAc,IAAIL,GACrBh1G,KACAw5G,GAAsBz2D,OAAOngE,EAC7B42H,GAAsBz2D,OAAO3a,GAE/BpoC,KAAKm6G,sBAELvvD,EAAY/xD,IAAImH,KAAKq1G,aACrBzqD,EAAY/xD,IAAIi3D,GAEhB9vD,KAAKw2C,kBAAkBC,WAAWpD,GAAMa,GAAI0W,GAGvCupB,mBACL,MAAM2W,EAAgB,IAAIhjD,OAAOC,YAAYqH,MAC3CpvC,KACAqoC,GAAazlD,EACbylD,GAAaD,EACbgpE,GAAcC,WAAWpyH,KAE3B6rG,EAAc/xC,eAAe5Q,GAAWvlD,EAAGulD,GAAWC,GAEtDpoC,KAAKw2C,kBAAkBC,WAAWpD,GAAME,WAAYu3C,GAG9CqvB,sBACFn6G,KAAKq1G,cAEPr1G,KAAKq1G,YAAYK,cACf11G,KACAoxG,GAAcI,UAAUvyH,KACxB,EACA,kBACA+2B,eAAkBhW,KAAKosE,kBAAkBguC,mBAI3Cp6G,KAAKq1G,YAAYK,cACf11G,KACAoxG,GAAcK,UAAUxyH,KACxB,EACA,uBACA+2B,eAAkBhW,KAAK8rE,cAAcuuC,eAIvCr6G,KAAKq1G,YAAYK,cACf11G,KACAoxG,GAAcM,SAASzyH,KACvB,EACA,uBACA,IAAM+gB,KAAKq1G,YAAaG,cAAczC,GAAWQ,YAInDvzG,KAAKq1G,YAAYK,cAAc11G,KAAMoxG,GAAcO,SAAS1yH,KAAK,EAAM,kBAAkB,IACvF+gB,KAAKq1G,YAAaG,cAAczC,GAAWmC,iBAI7Cl1G,KAAKq1G,YAAYK,cACf11G,KACAoxG,GAAcQ,SAAS3yH,KACvB,EACA,qBACA,IACE+gB,KAAKwsE,WAAWiqC,gBAAgBz2G,KAAKosE,kBAAkBymC,yBAA0B,CAC/E7yG,KAAK8rE,cACL9rE,KAAK05G,gBAET,IACE15G,KAAKwsE,WAAWsqC,cAAc,IACzB92G,KAAK8rE,cAAckoC,kBACnBh0G,KAAK05G,YAAY1F,mBAExB,IAAMh0G,KAAKwsE,WAAW4qC,kBAIxBp3G,KAAKq1G,YAAYK,cAAc11G,KAAMoxG,GAAcS,UAAU5yH,KAAK,EAAO,aAAa,KACpEmB,OAAO64G,QAAQ,sCAG/Bj5F,KAAKw2C,kBAAkB2I,mBAAmB,CAAC9L,GAAME,WAAYF,GAAMK,KAAML,GAAMI,UAC/EzzC,KAAK8rE,cAAc8oC,YACnB50G,KAAK05G,YAAY9E,YACjB50G,KAAKy5G,iBAAiBP,WACtBl5G,KAAKm0E,uBAGPn0E,KAAKq1G,YAAYU,8BAMdnC,iBACL,MAAO,CAAC5zG,KAAKnT,MAAMjK,EAAGod,KAAKnT,MAAMu7C,GAG5BkrE,aAAagH,GAClB,OAAOt6G,KAAK04G,mBAAmBnD,sBAAwB+E,EAGjDl+C,UACNp8D,KAAKgjD,kBAAkB2Z,iBACvB38D,KAAKw2C,kBAAkBomB,iBAGlB81C,SAAS3lE,EAAoBC,GAClChtC,KAAK4vF,SAAS5lC,IAAIjd,EAAUC,GAGvB2qE,aAAa5qE,GAClB,OAAO/sC,KAAK4vF,SAASpuG,IAAIurD,GAGpB+mE,uBACL,OAAO9zG,KAAK25G,eAGPhG,mBAAmBr+D,GACxBt1C,KAAKy5G,iBAAiB9F,mBAAmBr+D,GAGpCqjE,gBACLnB,EACA/3B,EACA5qF,GAEAmL,KAAK8rE,cAAc6oC,aAAa6C,EAAc/3B,EAAW5qF,GAGpDykH,UAAU9B,GACfx3G,KAAK8rE,cAAct0D,OAAOggG,GAGrBoB,iBACL1qD,EACAuxB,EACA5qF,GAEAmL,KAAK05G,YAAY/E,aAAazmD,EAAYuxB,EAAW5qF,GAGhD0kH,WAAWrrD,GAChBluD,KAAK05G,YAAYliG,OAAO02C,IC/O5B,MAAM1pC,GAAS,CACbkvE,OAAO,EACPtnG,KAAM07C,UACN9+C,MAAOm/C,GAAWvlD,EAClBqG,OAAQk/C,GAAWC,EACnBurD,QAAS,CACPC,QAAS,UAEXpkC,MAAO,CACL/mC,KAAMqf,SAAa+rD,IACnBC,OAAQ,gBAEVC,IAAK,CACHtyG,OAAQ,KCmDG84H,OAjDf,WACE,MAAMvuG,EAAUwT,aAAiBzT,GAASA,EAAMC,WACzCwuG,EAAe7nB,GAAoBluG,WAAuB6jH,GAAc4R,SAe/E,OAbAz1H,aAAgB,KDFsB,MACtC,MAAMikE,EAAO,IAAI7Z,GAAkBrqB,GAAQ83C,GAASC,WAKpD,OAJA7T,EAAKld,MAAM3yC,IAAI,qBAAsB+xF,IAAU,GAC/CliC,EAAKld,MAAM3yC,IAAI,kBAAmBm5G,IAClCtpD,EAAKld,MAAM3yC,IAAI,cAAe4yE,IAC9B/iB,EAAKld,MAAM3yC,IAAI,uBAAwB6wF,IAChChhC,GCHL+xD,GAA2BxnB,uBAAuBN,KACjD,IAEHluG,aAAgB,KACdoqD,GAAkBC,cAAc+jD,eAAe,CAC7CniB,YAAa1kE,EAAQ0kE,YACrByiB,aAAcnnF,EAAQmnF,aACtBh/E,KAAMnI,EAAQmI,KACdvP,KAAMoH,EAAQpH,SAEf,CAACoH,IAGF,qCACE,uBAAKpnB,UAAU,wBAAuB,UACpC,sBAAKmB,GAAG,iBACR,uBAAKnB,UAAU,gCAA+B,UAC3C41H,IAAkBlS,GAAc4R,SAC/B,qCACE,gEAGHM,IAAkBlS,GAAc0I,eAAiB,eAAC,GAA2B,IAC7EwJ,IAAkBlS,GAAc0J,iBAC/B,uCACE,kDACA,eAAC,GAA4B,OAGhCwI,IAAkBlS,GAAc2J,eAC/B,uCACE,iDACA,eAACyI,GAA+B,IAChC,+CACA,eAAC,GAA4B,OAGhCF,IAAkBlS,GAAckH,YAAc,eAACmL,GAAwB,aCrClF,MAAM9gF,GAAa,CACjB,CAAEE,MAAO,QACT,CAAEA,MAAO,cACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,mBAGLmB,GAAgB,CACpBN,WAAW,EACXF,UAAU,GAsLN+gE,GAAuB,CAC3BI,EACAP,EACAC,EACAO,IAEoB,IAAbP,EACH,SACAD,IAAaC,EACZ,KAAIM,EAAWP,EAAW,SAASO,EAAWP,KAC9C,KAAIO,EAAWP,EAAW,SAASQ,KAG3B8e,OAhMiB,KAC9B,MAAMl4G,EAAWC,cACXk4G,EAAYr7F,aAAiBzT,GAASA,EAAMC,QAAQ6uG,aAEnD1/E,EAASoG,GAAc78C,mBAAoB,KAC3C00C,EAAS0hF,GAAcp2H,sBACvBq2H,EAAWC,GAAgBt2H,mBAAoB,CACpD42G,SAAU,EACVC,SAAU,EACVC,eAAgB,SAChBG,gBAAgB,EAChBC,mBAAmB,IAGrB38F,qBAAU,KACR,GAAI47G,EAAW,CACb,MAAM1/E,EAAU0/E,EAAUl4H,KAAIghB,IAC5B,MAAOiB,EAAMq2G,EAAUC,EAAcC,GAAiBx3G,EACtD,MAAO,CACLiB,KAAU,OAAJA,QAAI,IAAJA,IAAQ,GACd,aAAsB,OAARq2G,QAAQ,IAARA,IAAY,GAC1B,gBAA6B,OAAZC,QAAY,IAAZA,IAAgB,IACjC,iBAA+B,OAAbC,QAAa,IAAbA,IAAiB,QAGvC55E,EAAWpG,MAEZ,CAAC0/E,IAEJ,MAAMxe,EAAYv8D,uBAAY,KACxB1G,GACFA,EAAQiL,gBAAgB,CACtBC,SAAW,iBAAe,IAAIj3C,MAAOk3C,qBAErCC,WAAY,CAAC,OAAQ,aAAc,gBAAiB,sBAGvD,CAACpL,IAIE4hE,EAAal7D,uBAAY,KACzB1G,GACFA,EAAQO,qBAET,CAACP,IAEEkjE,EAAuBx8D,uBAC1B1zC,GACQ,KACL,GAAIgtC,EACF,OAAQhtC,GACN,IAAK,QACH,OAAOgtC,EAAQmjE,0BACjB,IAAK,OACH,OAAOnjE,EAAQojE,6BACjB,IAAK,OACH,OAAOpjE,EAAQqjE,yBACjB,IAAK,OACH,OAAOrjE,EAAQsjE,4BAMzB,CAACtjE,IAGG6hE,EAAwBn7D,uBAAY,KACxC,GAAI1G,EAAS,CACX,MAAM8hE,EAAgB9hE,EAAQ+hE,0BACxBC,EAAgC,IAAlBF,EAAsB,EAAI9hE,EAAQiiE,2BAA6B,EACnF2f,EAAa,CACX1f,SAAUF,EACVG,SAAUL,EACVM,eAAgBC,GACd,GACAL,EACAF,EACA9hE,EAAQsiE,yBAEVC,eAAkC,IAAlBT,GAAuC,IAAhBE,EACvCQ,kBAAqC,IAAlBV,GAAuBE,IAAgBF,OAG7D,CAAC9hE,EAAS4hF,IAEPvhF,EAAcqG,uBACjBpwB,IACCorG,EAAWprG,EAAOgqB,KAClBuhE,MAEF,CAAC6f,EAAY7f,IAGTmgB,EAAW,IAEb,sBAAKx2H,UAAU,mBAAkB,SAC/B,uBAAKA,UAAU,gCAA+B,UAC5C,sBAAK+E,MAAO,CAAEX,MAAO,SAAWpE,UAAU,kBAC1C,uBAAKA,UAAU,kBAAiB,UAC9B,eAAC,IAAM,CACLnB,KAAMC,IAAUs6G,iBAChBp6G,QAAS04G,EAAqB,SAC9B3wG,SAAS,EACThF,SAAUo0H,EAAUpf,iBAEtB,eAAC,IAAM,CACLl4G,KAAMC,IAAUu6G,aAChBr6G,QAAS04G,EAAqB,QAC9B3wG,SAAS,EACThF,SAAUo0H,EAAUpf,iBAEtB,gBAAC,IAAM,CAAC/2G,UAAU,+BAA+B+B,UAAU,EAAMgF,SAAS,EAAK,UAC7E,+BAAO,QAAOovH,EAAUzf,eAAeyf,EAAUxf,aACjD,+BAAMwf,EAAUvf,oBAElB,eAAC,IAAM,CACL/3G,KAAMC,IAAU+rC,cAChB7rC,QAAS04G,EAAqB,QAC9B3wG,SAAS,EACThF,SAAUo0H,EAAUnf,oBAEtB,eAAC,IAAM,CACLn4G,KAAMC,IAAUw6G,gBAChBt6G,QAAS04G,EAAqB,QAC9B3wG,SAAS,EACThF,SAAUo0H,EAAUnf,uBAGxB,sBAAKh3G,UAAU,iBAAgB,SAC7B,eAAC,IAAM,CAACnB,KAAMC,IAAUy6G,OAAQv6G,QAASy4G,EAAU,SACjD,uBAAMz3G,UAAU,YAAW,oCAOjCy2H,EACJ,eAAC,IAAa,CACZz2H,UAAU,UACVokB,YAAY,iBACZvlB,KAAM,eAAC,IAAO,CAAC0B,KAAM8jB,IAAYC,UAI/BoyG,EACJ,uBAAK12H,UAAU,UAAS,UACtB,eAACw2H,EAAQ,IACT,eAAC,IAAO,IACR,eAAC,eAAW,CACVngF,UAAW,aACXr2C,UAAU,iCACVi1C,WAAYA,GACZJ,YAAaA,EACb2kE,oBAAqBnD,EACrB38D,kBAAmB08D,EACnB9/D,cAAeA,GACfC,QAASA,EACTC,UAAW,GACXC,YAAY,EACZC,mBAAoB,GACpBiD,uBAAuB,EACvBC,wBAAwB,EACxB6D,yBAAyB,OAK/B,OACE,eAACtuB,GAAA,EAAc,CACbC,oBAAqB,IAAMtR,EAAS64G,4BACpC3xH,QAAUixH,EAA6BS,EAAjBD,EACtB7vH,WAAW,KC5LjB,MAAMgwH,GAAwB,KAC5B,MAAM,KAAE5sF,EAAI,IAAEmJ,GAAQ0jF,cAChB/4G,EAAWC,cACjBle,aAAgB,KACdie,EAASg5G,kCACR,CAACh5G,IAEJ,MAAM4rB,EAA2B9O,aAC/BzT,GAASA,EAAMC,QAAQsiB,2BAEnB6U,EAAa3jB,aAAiBzT,GAASA,EAAMC,QAAQm3B,aACrDhvB,EAAOqL,aAAiBzT,GAASA,EAAMC,QAAQmI,OAE/CwnG,EACK,YAATxnG,EACI,CACE,eAAC,IAAK,CAACya,KAAO,GAAEA,kBAAsBC,UAAWo0E,IAAoB,GACrE,eAAC,IAAK,CAACr0E,KAAO,GAAEA,aAAgB9+B,OAAiB++B,UAAW+rE,IAAc,GAC1E,eAAC,IAAK,CAAChsE,KAAO,GAAEA,kBAAsBC,UAAW+rF,IAAoB,GACrE,eAAC,IAAK,CAAChsF,KAAO,GAAEA,eAAmBC,UAAW84E,IAAiB,GAC/D,eAAC,IAAK,CAAC/4E,KAAO,GAAEA,mBAAuBC,UAAW0rF,IAAqB,GACvE,eAAC,IAAK,CAAC3rF,KAAO,GAAEA,cAAkBC,UAAWR,IAAyB,IAExE,KACN,OACE,sBAAKzpC,UAAU,UAAS,SACtB,gBAAC,IAAM,WACoB,OAAxB0pC,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA0B3rC,KAAIqjB,GAC7B,eAAC,IAAK,CACJ4oB,KAAO,GAAEA,KAAQ9nB,aAAmBd,EAAwB5Z,SAASyD,OAAmB,SAGxF,eAAC,GAAmB,CAACmW,wBAAyBA,KAFzCA,EAAwB5Z,QAKhC+2C,GAAc,eAAC,IAAK,CAACvU,KAAO,GAAEA,SAAaC,UAAW8iE,KACvD,eAAC,IAAK,CAAC/iE,KAAO,GAAEA,8BAAkCC,UAAW+M,KAC7D,eAAC,IAAK,CAAChN,KAAO,GAAEA,iBAAqBC,UAAWN,KAChD,eAAC,IAAK,CAACI,OAAO,EAAMC,KAAMA,EAAK,SAC7B,eAAC,IAAQ,CACP1oB,MAAM,EACNsL,GACE2xB,EACK,GAAEpL,SACHzJ,GAA4BA,EAAyB3pC,OAAS,EAC7D,GAAEozC,KAAOjxB,aAAmBwnB,EAAyB,GAAGliC,QAChD,UAAT+nB,EACC,GAAE4jB,eACH,WAIT4jF,EACS,UAATxnG,GAAoB,eAAC,IAAK,CAACya,KAAO,GAAEA,eAAmBC,UAAW4V,KACnE,eAAC,IAAK,CAAC5V,UAAWra,WAgCXonG,OA1B8B,KAC3C,MAAMl5G,EAAWC,cACXkE,EAAW2Y,aAAiBzT,GAASA,EAAMC,QAAQnF,YACjDA,SAAUg1G,GAAqBlsG,cACjCmsG,EAAoC,MAApBD,EAA2BryE,SAASqyE,EAAkB,SAAM11H,EAQlF,OANA1B,aAAgB,UACQ0B,IAAlB21H,GAA+Bj1G,IAAai1G,GAC9Cp5G,EAASq5G,mCAAyBD,MAEnC,CAACj1G,EAAUnE,EAAUo5G,IAEjBA,IAAkBj1G,EACvB,eAAC20G,GAAO,IAER,sBAAK52H,UAAWG,IAAW,4BAA6ByK,IAAQ8Q,MAAM,SACpE,eAAC,IAAI,CAAC1b,UAAW4K,IAAQwsH,YAAY,SACnC,eAAC,IAAa,CACZhzG,YAAY,uBACZvlB,KAAM,eAAC,IAAO,CAAC0B,KAAM8jB,IAAYC,eCpG3C,MAAM+yG,GAAM,uBAAMr3H,UAAU,MAAK,oBAqRlBs3H,OAnRuB,IACpC,sBAAKt3H,UAAU,iBAAgB,SAC7B,gBAAC,IAAI,CAACA,UAAU,sBAAsBsV,UAAWC,IAAUC,IAAI,UAC7D,eAAC,IAAE,iDACH,qBAAGxV,UAAU,cAAa,iBACpB,gDAAqB,qNAE4B,wCAAa,6BAA2B,IAC7F,sCAAW,YAAS,wCAAa,eAAY,uCAAY,kHAG3D,uBAAKA,UAAU,aAAY,UACzB,eAAC,IAAE,UACD,kCACE,8DAGJ,+CAEE,wBAAM,eAEN,wBACA,oDAEDq3H,GACD,4CAEE,wBACA,mDAEDA,GACD,8CAEE,wBAAM,iBAEN,wBACA,gDAEDA,GACD,+CAEE,wBAAM,YAEN,wBACA,kDAEDA,GACD,yCAEE,wBAAM,YAEN,wBACA,mDAEDA,GACD,kDAEE,wBACA,oDAEDA,GACD,gDAEE,wBAAM,eAEN,wBAAM,eAEN,wBAAM,eAEN,wBAAM,kBAEN,wBACA,2DAGJ,uBAAKr3H,UAAU,aAAY,UACzB,eAAC,IAAE,UACD,kCACE,kDAGJ,6BACE,wDAEF,gDACA,6BACE,wDAEF,4DAC6Bq3H,GAAG,kBAAiBA,GAAG,oBAAmBA,GAAG,eAAcA,GAAK,IAAG,kBAGhG,6BACE,uDAEF,6CACcA,GAAG,aAAYA,GAAG,eAAcA,GAAG,2BAGnD,uBAAKr3H,UAAU,aAAY,UACzB,6BACE,wDAEF,wBACA,+CAEE,wBAAM,eAGPq3H,GACD,4CAEE,wBAAM,gBAGPA,GACD,8CAEE,wBAAM,cAGPA,GACD,2CAEE,wBAAM,cAGPA,GACD,2CAEE,wBAAM,gBAIV,uBAAKr3H,UAAU,aAAY,UACzB,oBAAGA,UAAU,YAAW,SACtB,iEAEF,wBACA,+CAEE,wBAAM,YAGPq3H,GACD,+CAEE,wBAAM,oBAGPA,GACD,mDAEE,wBAAM,gBAGPA,GACD,mDAEE,wBAAM,gBAGPA,GACD,2CAEE,wBAAM,cAGPA,GACD,qBAAGr3H,UAAU,QAAO,wBAElB,wBAAM,2BAIV,uBAAKA,UAAU,aAAY,UACzB,6BACE,wDAEF,wBACA,+CAEE,wBAAM,YAGPq3H,GACD,+CAEE,wBAAM,gBAGPA,GACD,qBAAGr3H,UAAU,YAAW,kCAEtB,wBAAM,cAGPq3H,GACD,qBAAGr3H,UAAU,QAAO,wBAElB,wBAAM,2BAIV,uBAAKA,UAAU,aAAY,UACzB,oBAAGA,UAAU,YAAW,SACtB,+DAEF,wBACA,6CAEE,wBAAM,WAGPq3H,GACD,8CAEE,wBAAM,gBAGPA,GACD,4CAEE,wBAAM,eAGPA,GACD,6CAEE,wBAAM,eAGPA,GACD,8CAEE,wBAAM,iBAEN,wBAAM,YAGPA,GACD,+CAEE,wBAAM,YAEN,wBAAM,aAEN,wBAAM,cAGPA,GACD,4CAEE,wBAAM,cAEN,wBAAM,kBAIV,uBAAKr3H,UAAU,eAAc,UAC3B,eAAC,IAAE,UACD,kCACE,sDAGJ,mEACoC,IAClC,oBAAGutC,KAAMC,KAAM+pF,UAAU,uDAA8C,qCC5QjF,MACMC,GAAwB,CAAC,cAAe,QAAS,mBACjDC,GAA+B,CAAC,kBAAmB,2BC2C1CC,OA7CoB,KACjC,MAAOC,EAAOC,GAAY93H,mBAAiB,KACpC+3H,EAAcC,GAAmBh4H,mBAA0B,IAElEua,qBAAU,KDAc+W,WACxB,MAAMylC,QAAiBm1B,MALM,oDAMvB7xC,QAAgB0c,EAASq1B,OAa/B,aAZoB/xC,EACjBv3B,QAAQm1G,IACCP,GAAY/1G,SAASs2G,EAAK/3G,QAEnCjiB,KAAKg6H,IACG,CACL19H,IAAK09H,EAAK52H,GACV6e,KAAM+3G,EAAK/3G,KACXoE,YAAa2zG,EAAK3zG,YAClBstF,KAAMqmB,EAAKC,sBCXfC,GAAavkH,MAAMikH,IDiBUvmG,WAC/B,MAAM0zF,QAAkBxxG,QAAQqtD,IAC9Bu3D,EAAUn6H,KAAKo6H,GACNnsC,MAAMmsC,EAASzmB,SAGpBv3D,QAAgB7mC,QAAQqtD,IAC5BmkD,EAAU/mH,KAAKq6H,GACNA,EAAIlsC,UAoBf,aAjBiC54E,QAAQqtD,IACvCxmB,EAAQp8C,KAAK85H,GACJA,EACJj1G,QAAQy1G,IACCZ,GAAmBh2G,SAAS42G,EAAYC,SAEjDv6H,KAAKs6H,IACG,CACLh+H,IAAKg+H,EAAYl3H,GACjBo3H,MAAOF,EAAYG,WACnBC,WAAYJ,EAAYK,SACxBC,WAAYN,EAAYC,MACxBM,QAASP,EAAYQ,sBCvC3BC,CAAkBnB,GAAOjkH,MAAMmkH,IAC7BD,EAASD,GACTG,EAAgBD,WAGnB,IAEH,MAAMkB,EAAkBlB,EAAa93H,OACnC83H,EAAa95H,KAAI,CAACi7H,EAAsB94H,KACtC,MAAM63H,EAAOJ,EAAMz3H,GACb+4H,EAAcD,EAAMj7H,KAAKs6H,GAE3B,iCACE,sBAAKhrG,IAAKgrG,EAAYE,MAAOnrG,IAAI,gBACjC,6BACE,oBAAGmgB,KAAM8qF,EAAYI,WAAY/qF,IAAI,sBAAsB7wC,OAAO,SAAQ,SACvEw7H,EAAYM,eAGjB,2CAAaN,EAAYO,aAPjBP,EAAYh+H,OAW1B,OACE,gBAAC,IAAI,CAAgB2F,UAAU,qBAAqBsV,UAAWC,IAAUC,IAAI,UAC3E,uBAAKxV,UAAU,uBAAsB,UACnC,eAAC,IAAE,UAAE+3H,EAAK/3G,OACV,eAAC,IAAE,UAAE+3G,EAAK3zG,iBAEZ,sBAAKpkB,UAAU,cAAa,SAAEi5H,MALrBlB,EAAK19H,QAUpB,eAAC,IAAE,yBAEL,OAAO,+BAAM0+H,KCjCAG,OATgB,IAC7B,sBAAKl5H,UAAU,WAAU,SACvB,gBAAC,IAAI,CAACA,UAAU,mBAAmBsV,UAAWC,IAAU4jH,MAAM,UAC5D,eAAC,GAAmB,IACpB,eAAC,GAAgB,SCWRC,OAZ2B,QAAC,OAAEC,GAAQ,SACnD,sBAAKr5H,UAAWG,IAAW,SAAUyK,IAAQ8Q,MAAM,SACjD,eAAC,IAAa,CACZ7c,KAAMC,IAAU4lB,MAChB/iB,MAAM,WACNyiB,YAAc,uCACZi1G,EAAU,qBAAoBA,IAAW,W,8BCF1C,SAASC,GAAW/lG,GACzB,MAAMgmG,EAASC,SAASjmG,GACxB,IAAK,MAAOl5B,EAAKwtB,KAAQuf,OAAO2S,QAAQw/E,GAClCE,mBAAQ5xG,GACV0xG,EAAOl/H,GAAOwtB,EAAIlqB,KAAK,KACN,OAARkqB,UACF0xG,EAAOl/H,GAIlB,OAAOk/H,E,aCwET,SAASG,GAAQ,GAA2D,IAA3D,MAAE/3H,EAAK,SAAEg4H,GAA+C,EACvE,OACE,sBAAK35H,UAAWG,IAAW,SAAUyK,IAAQ8Q,MAAM,SACjD,eAAC,IAAa,CAAC7c,KAAMC,IAAU4lB,MAAO/iB,MAAOA,EAAOyiB,YAAau1G,MAKxDC,OAvFf,SAAwB,GAAwC,IAAxC,SAAEnmF,GAAmC,EAC3D,MAAMomF,EAAaP,GAAW7lF,EAASqmF,QAAQvnH,MAExC4U,EAAOukB,GAAY5rC,mBAA0C,WAQpE,OAPAua,qBAAU,KACM,YAAV8M,GAAuBnD,KAAU+1G,gBAAkBF,IACrDnuF,EAAS,WAmCfta,eACEyoG,EACAG,EACApc,GAEA,MAAMqc,QAAuBC,KAC3Bl2G,KAAUm2G,oBACVX,aAAa,CACXjnH,KAAMsnH,EACNG,SAAUA,KAId,IAAInjE,EAEJ,IAIE,GAFAA,QAAiBojE,EAAe/tC,OAEK,qBAA1Br1B,EAASujE,aAClB,MAAM,IAAI9+H,MAAM,qCAElB,MAAOD,GAEP,YADAuiH,IAIF,IAE2B,IAAIyc,iBAAiB,0BAC7BC,YAAYzjE,EAASujE,cACtC5+H,OAAO++H,QACP,MAAOl/H,KAlELm/H,CAA4BX,EAAY71G,KAAU+1G,gBAAgB,IAAMruF,EAAS,cAElF,CAACmuF,EAAY1yG,IAEXnD,KAAU+1G,eASVF,EASY,UAAV1yG,EACL,eAACuyG,GAAO,CAAC/3H,MAAM,2CAA0C,sIAKzD,sBAAK3B,UAAWG,IAAW,SAAUyK,IAAQ8Q,MAAM,SACjD,eAAC,IAAa,CAAC0I,YAAY,gBAAgBvlB,KAAM,eAAC,IAAO,CAAC0B,KAAM8jB,IAAYC,YAd5E,eAACo1G,GAAO,CAAC/3H,MAAM,2CAA0C,2GATzD,eAAC+3H,GAAO,CAAC/3H,MAAM,2CAA0C,6GCR/D,MAAM84H,GAAY,IAAIz2G,KAAU81B,cAAcC,WAAWh8C,KAAI,QAAEoD,GAAI,KAAE6e,IAAO,QAAM,CAChF7e,KACA6e,WAoDI06G,GAAc,IAQb,IARc,YACnB9wH,EAAW,GACXzI,EAAE,KACF6e,GAKD,EACC,OACE,eAAC,IAAM,CACLhgB,UAAW4K,IAAQ0Z,MACnB7c,UAAW3I,IAAU67H,OACrB37H,QAASa,eAAkB,IAAM+J,EAAYzI,IAAK,CAACyI,EAAazI,IAAK,SAEnE,eAAc6e,OAKP46G,OArE4B,KACzC,MAAM98G,EAAWC,cACX01B,EAAWonF,eACX,KAAEtoH,EAAMynC,SAAU8gF,GAAexB,GAAW7lF,EAASqmF,QAErDiB,EAAcl7H,eAAkBi7H,GAAch9G,EAASw6G,gBAAMwC,KAAc,CAACh9G,IAQlF,OANAje,aAAgB,KACV0S,GACFuL,EAASk9G,oBAAUzoH,EAAMuoH,MAE1B,CAACvoH,EAAMuoH,EAAYh9G,IAElBvL,EAEA,sBAAKvS,UAAWG,IAAW,QAASyK,IAAQ8Q,MAAM,SAChD,eAAC,IAAI,CAAC1b,UAAWG,IAAW,aAAcyK,IAAQwsH,aAAa,SAC7D,sBAAKp3H,UAAU,aAAY,SACzB,eAAC,IAAa,CACZokB,YAAY,gBACZvlB,KAAM,eAAC,IAAO,CAAC0B,KAAM8jB,IAAYC,gBAS3C,sBAAKtkB,UAAWG,IAAW,QAASyK,IAAQ8Q,MAAM,SAChD,gBAAC,IAAI,CAAC1b,UAAWG,IAAW,aAAcyK,IAAQwsH,aAAa,UAC7D,sBAAKp3H,UAAU,eAAc,SAC3B,gBAAC,IAAE,WACD,eAAC,IAAI,CAACnB,KAAMC,IAAUm8H,OAAQ,aAIlC,sBAAKj7H,UAAU,aAAY,SACzB,eAAC,IAAW,CAACuH,MAAM,EAAM2zH,UAAU,EAAK,SACrCT,GAAU18H,KAAI,QAAC,GAAEoD,EAAE,KAAE6e,GAAM,SAC1B,eAAC06G,GAAW,CAAC9wH,YAAamxH,EAAa/6G,KAAMA,EAAM7e,GAAIA,GAASA,gB,oBC/DvE,MC6BDg6H,GAAyBx2E,GACtBA,EAAI0rB,OAAO,GAAG56D,cAAgBkvC,EAAIE,MAAM,GAGpCu2E,GAA0B,KACrC,MAAM79G,EAAa89G,aAAa9N,QAAQ,8BACxC,OAAIhwG,EACKuoB,KAAKM,MAAM7oB,GAEX,MAaE+9G,GAAwB/9G,IACnC89G,aAAanT,QAAQ,6BAA8BpiF,KAAK7iB,UAAU1F,KAGvDg+G,GAAgCvvG,IAC3CqvG,aAAanT,QAAQ,2BAA4BpiF,KAAK7iB,UAAU+I,KAS5DwvG,GAAyB,CAACnpH,EAAaopH,KAC3C,MAAMh7C,EAAwBpuE,EAAOqpH,QAAQC,KAAK,GAC5CC,EAAmCn7C,EAAKo7C,EAC9C,MAAO,CACLr0H,KAAM2zH,GAAsBS,EAAYE,MACxCz6G,kBAAkB,EAClBuM,QAASguG,EAAYG,QACrBzuG,WAAYsuG,EAAYI,WACxB76H,IDzEsB,EC0EtBmb,MAAOm/G,EACP97G,OAAQi8G,EAAYj8G,QAAU,GAC9BgO,OAAQiuG,EAAYK,UACpBt6H,MAAOi6H,EAAYj6H,MACnBu6H,QAASz7C,EAAK07C,QAAU17C,EAAK07C,QAAQ,GAAK,GAC1C1uG,aAAcgzD,EAAK27C,WAAa37C,EAAK27C,WAAW,GAAK,GACrDnwG,OAAQC,IAAmBO,WAC3B89F,MAAOqR,EAAYrR,MACnBluG,GAAI,EACJgO,cAAe,SAIbgyG,GAAkBhqH,IACtB,MAAMouE,EAAwBpuE,EAAOqpH,QAAQC,KAAK,GAC5CC,EAAmCn7C,EAAKo7C,EACxCS,EAAcC,GAAc97C,GAClC,MAAO,CACL,CACEj5E,KAAM2zH,GAAsBS,EAAYE,MACxC36H,ID9FoB,EC+FpBq7H,iBAAkBC,GAAYh8C,EAAKi8C,YACnCC,iBAAkBF,GAAYh8C,EAAKm8C,kBACnC/7G,YAAa4/D,EAAKo8C,KAAK,GACvBC,WAAY,aACZt/G,UAAW8+G,EAAY,GACvB36H,MAAOi6H,EAAYj6H,OAErB26H,EAAY,KASVG,GAAeM,IACnB,QAAsBx7H,IAAlBw7H,EACF,OAAOC,cACF,CACL,MAAMC,EAAaF,EAAc,GAC3Bh9G,EAAWk9G,EAAWC,QAAUD,EAAWE,SAQjD,MAAO,CACLp9G,SAAU,CACRC,KATYD,EAAWA,EAAS,GAAG87G,EAAE77G,KAAO,OAU5CwB,QATezB,GAAWA,EAAS,GAAGq9G,QAAe,IAWvDC,QAViBJ,EAAWK,OACzBL,EAAWK,OAAOv/H,KAAIC,IAAK,OAACA,EAAEu/H,WAAW,IAdjC54E,EAc6C3mD,EAAEw/H,MAAM,GAZ7DC,SAAS,wBAA0B94E,EAAM,IAAzC84E,IAYkEz/H,EAAEw/H,MAAM,IAdlE74E,SAiBT,MAWF43E,GAAiB97C,IACrB,IAAInkE,EAAQ,EACZ,MAAMkB,EAAwD,GAqB9D,OApBAijE,EAAKi9C,SAAS,GAAGC,QAAQ38F,SAAQ,CAAC48F,EAA6BC,KAC7D,MAAMC,EAAaF,EAAQ/B,EAAEkC,MAAQn5E,SAASg5E,EAAQ/B,EAAEkC,MAAO,IAAM,EAC/D5/G,EAAyB,CAC7B5J,OAAQ,KACRnV,QAASw+H,EAAQf,KAAK,GACtB17H,GAAI08H,EACJlwH,QAAS8uH,GAAYmB,EAAQlB,YAC7BsB,cAAevB,GAAYmB,EAAQhB,kBACnCp1H,KAAMo2H,EAAQ/B,EAAEr0H,KAChB6U,GAAI,EACJC,MAAOwhH,GAETxhH,GAASwhH,EACa,gBAAlB3/G,EAAS3W,MACXgW,EAAU8D,KAAK28G,GAAgBL,EAAgCz/G,IAE3C,QAAlBA,EAAS3W,MACXgW,EAAU8D,KAAK48G,GAAQN,EAAgCz/G,OAGpD,CAACX,EAAWlB,IAGf4hH,GAAU,CAACN,EAA8Bz/G,KAC7C,MAAMggH,EAA0B,GAC1Bp7G,EAAW66G,EAAQQ,QAAUR,EAAQQ,QAAQ,GAAGC,cAAW98H,EACjE,IAAI+8H,EAAc,EAQlB,OAPAV,EAAQW,OAAOv9F,SAAQ,CAACqxC,EAAkCl0E,KACxDggI,EAAW78G,KAAK,CACdliB,QAASizE,EAAOwqD,KAAK,GACrB2B,KAAM,OAERF,EAAmC,SAArBjsD,EAAOwpD,EAAE4C,QAAqBtgI,EAAImgI,KAE3C,IACFngH,EACH3W,KAAM,MACN+M,OAAQwO,EAAW6hC,SAAS7hC,EAAS,GAAI,IAAM,EAC/CuzC,QAAS6nE,EACTp7G,SAAUu7G,IAIRL,GAAkB,CACtBL,EACAz/G,KAEA,MAAMnH,EAAY4mH,EAAQQ,QAAQ,GAAGM,UAC/BC,EAAkB3nH,GAAYA,EAAU,GAAG4nH,QAAe,GAC1DC,EAAmB7nH,GAAYA,EAAU,GAAG8nH,SAAgB,GAC5Dr/G,EAAUm+G,EAAQQ,QAAQ,GAAGW,QAC7Br/G,EAAWk+G,EAAQQ,QAAQ,GAAGY,SAC9Bj8G,EAAW66G,EAAQQ,QAAQ,GAAGC,SAE9BhsH,EAA+B,IAChC8L,EACHlH,mBAAoB,GACpBwI,QAASA,EAAWA,EAAQ,GAAcyuD,OAAS,GACnD5vD,iBAAkBs/G,EAAQQ,QAAQ,GAAGa,SAAS,GAAG/wD,OACjDxuD,SAAUA,EAAYA,EAAS,GAAcwuD,OAAS,GACtDl3D,UAAW2nH,EAAgB5gI,KAAIqZ,GAAY8nH,GAAa9nH,KACxD+nH,iBAAkBN,EAAiB9gI,KAAIqZ,GAAY8nH,GAAa9nH,KAChE7C,OAAQwO,EAAYA,EAAS,GAAcmrD,OAAS,GACpD1mE,KAAM,eAKR,OAHIo2H,EAAQQ,QAAQ,GAAGgB,SACrB/sH,EAAOgtH,eAAiBzB,EAAQQ,QAAQ,GAAGgB,OAAO,IAE7C/sH,GAGH6sH,GAAgB9nH,IACb,CACL5P,KAAM83H,IAAcC,OACpBhrH,OAAQ6C,EAASykH,EAAEtnH,OACnB8E,MAAOurC,SAASxtC,EAASykH,EAAExiH,MAAO,IAClCmmH,QAASpoH,EAAS2pB,IA2BhB0+F,GAAW,CAAC19B,EAAkBl4F,KAClC,MAAMuzC,EAAUrR,SAAS2zF,cAAc,KACvCtiF,EAAQ2yE,aAAa,OAAQ,iCAAmC4P,mBAAmB91H,IACnFuzC,EAAQ2yE,aAAa,WAAYhuB,GAEjC3kD,EAAQr4C,MAAMC,QAAU,OACxB+mC,SAASvrC,KAAKo/H,YAAYxiF,GAE1BA,EAAQyiF,QAER9zF,SAASvrC,KAAKs/H,YAAY1iF,IAGtB2iF,GAAiBpyH,IACrB,MAAMsvH,EAAa,CACjBpB,EAAG,CACDmE,YAAapgH,UAAQC,MAAMuC,YAE7B+6G,SAAU,CACRtB,EAAG,CACD77G,KAAMrS,EAAQoS,SAASC,QAkB7B,OAbwC,IAApCrS,EAAQoS,SAASyB,QAAQzhB,SAE3Bk9H,EAAWE,SAAiB,OAAIxvH,EAAQoS,SAASyB,SAEpB,IAA3B7T,EAAQ0vH,QAAQt9H,SAElBk9H,EAAmB,OAAItvH,EAAQ0vH,QAAQt/H,KAAIC,IAClC,CACLu/H,WAAYv/H,EAAE,GACdw/H,MAAOx/H,EAAE,QAIRi/H,GAGIgD,GAAkB,CAC7B1iH,EACAyO,KAEA,MAAMy0D,EAAY,GACZm7C,EAAmC,CACvCI,WAAYhwG,EAASsB,WACrByuG,QAAS/vG,EAAS4B,QAClBkuG,KAAM9vG,EAASxkB,KAAKunB,cACpBpP,OAAQqM,EAASrM,QAAU,GAC3Bs8G,UAAWjwG,EAAS2B,OACpB48F,MAAOv+F,EAASu+F,MAChB5oH,MAAOqqB,EAASrqB,OAmGlB,OAjGA8+E,EAAKo7C,EAAID,EAEL5vG,EAASkwG,SAAgC,KAArBlwG,EAASkwG,UAC/Bz7C,EAAK07C,QAAUnwG,EAASkwG,SAG1Bz7C,EAAK27C,WAAapwG,EAASyB,aAC3BgzD,EAAKo8C,KAAOt/G,EAAWsD,YACvB4/D,EAAKi9C,SAAW,CAAEC,QAAS,IAE3Bl9C,EAAKi8C,WAAaqD,GAAcxiH,EAAWi/G,kBAE3C/7C,EAAKm8C,iBAAmBmD,GAAcxiH,EAAWo/G,kBAEjDp/G,EAAWC,UAAUwjB,SAAS7iB,IAC5B,MAAMy/G,EAAU,CACd/B,EAAG,CACDr0H,KAAM2W,EAAS3W,MAEjB42H,QAAS,CACPC,SAAUlgH,EAAS5J,QAErBsoH,KAAM1+G,EAAS/e,QACfm/H,OAAQ,IAcV,GAVAX,EAAQ/B,EAAc,WAAIkE,GAAc5hH,EAASxQ,SAGjDiwH,EAAQ/B,EAAoB,iBAAIkE,GAAc5hH,EAAS6/G,eAEnD7/G,EAAS7B,QAEXshH,EAAQ/B,EAAS,MAAI19G,EAAS7B,OAGV,gBAAlB6B,EAAS3W,KAAwB,CAC/B2W,EAASkhH,iBAEXzB,EAAQQ,QAAgB,OAAIjgH,EAASkhH,gBAEvC,MAAMa,EAAU,IACXtC,EAAQQ,QACXa,SAAU9gH,EAASG,iBACnBygH,QAAS5gH,EAASsB,QAClBu/G,SAAU7gH,EAASuB,SACnBg/G,UAAW,IAGb,GAAIvgH,EAASnH,UAAUjX,QAAUoe,EAASghH,iBAAkBp/H,OAAQ,CAGlE,GADAmgI,EAAQxB,UAAY,GAChBvgH,EAASnH,UAAUjX,OAAQ,CAC7B,MAAMogI,EAAchiH,EAASnH,UAAUjZ,KAAIqZ,IAClC,CACLykH,EAAG,CACDtnH,OAAQ6C,EAAS7C,OACjB8E,MAAOjC,EAASiC,OAElB0nB,EAAG3pB,EAASooH,YAGhBU,EAAQxB,UAAkB,OAAIyB,EAGhC,GAAIhiH,EAASghH,kBAAoBhhH,EAASghH,iBAAiBp/H,OAAQ,CACjE,MAAMqgI,EAAejiH,EAASghH,iBAAiBphI,KAAIqZ,IAC1C,CACLykH,EAAG,CACDtnH,OAAQ6C,EAAS7C,OACjB8E,MAAOjC,EAASiC,OAElB0nB,EAAG3pB,EAASooH,YAGhBU,EAAQxB,UAAmB,QAAI0B,GAInCxC,EAAQQ,QAAU8B,EAGE,QAAlB/hH,EAAS3W,MACX2W,EAASm4C,QAAQt1B,SAAQ,CAACqxC,EAAmBl0E,KAC3Cy/H,EAAQW,OAAOj9G,KAAK,CAClBu6G,EAAG,CACD4C,QAAStgH,EAAS4E,WAAa5kB,EAAI,OAAS,SAE9C0+H,KAAMxqD,EAAOjzE,aAKnBqhF,EAAKi9C,SAASC,QAAQr8G,KAAKs8G,MAGtBn9C,GC7VF,MAAM4/C,WAA4BxgI,YAChC0rC,YAAYxwC,GAAkC,IAAD,EAClDywC,MAAMzwC,GAAO,EAAD,UAiBNulI,iBAAoBnrF,GAAqC9D,IAC/D,MAAMrlB,EAAW,IACZ5Q,KAAKrgB,MAAMixB,SACd,CAACmpB,GAAQ/5B,KAAK+L,MAAMo5G,YAEtBnlH,KAAKswB,SAAS,CACZ80F,qBAAsB,GACtBD,WAAY,KAEdhF,GAA6BvvG,GAC7B5Q,KAAKrgB,MAAM0lI,sBAAsBz0G,IACjC,KAEM00G,mBAAqB,IAAOrvF,IAClCj2B,KAAKswB,SAAS,CACZ60F,WAAYlvF,EAAEx0C,OAAOoT,SAEvB,KAEM0wH,gBAAmBxrF,GAAqC9D,IAC1Dj2B,KAAK+L,MAAMq5G,uBAAyBrrF,GACtC/5B,KAAKswB,SAAS,CACZ80F,qBAAsBrrF,EACtBorF,WAAYnlH,KAAKrgB,MAAMixB,SAASmpB,MAGpC,KAEMyrF,qBAAuB,KAC7BxlH,KAAKswB,SAAS,CACZm1F,oBAAqBzlH,KAAK+L,MAAM05G,sBAElC,KAEMC,gBAAmBzvF,IDyHJ,MACvB,MAAM0vF,EAAgB1F,aAAa9N,QAAQ,8BACrCyT,EAAc3F,aAAa9N,QAAQ,4BACzC,GAAIwT,GAAiBC,EAAa,CAChC,MAAMzjH,EAAyBuoB,KAAKM,MAAM26F,GACpC/0G,EAA+B8Z,KAAKM,MAAM46F,GAC1Cj/B,EAAW/1E,EAAS0zB,UAAY1zB,EAASrqB,MACzCs/H,EAAU,IAAIC,WAEdC,EAAM,CACVzF,QAAS,CACPG,EAAG,CACD,YAAa,6CAEfF,KAN6BsE,GAAgB1iH,EAAYyO,KAS7D,IAAIo1G,EAASH,EAAQI,YAAYF,GACjCC,EAASA,EAAOjvD,QAAQ,YAAa,IACrCstD,GAAS19B,EAAW,OAAQq/B,KC3I5BE,IACA,KAEMC,4BAA+BpsF,GACrC,eAAC,KAAQ,CACPqsF,WAAW,EACXxhI,UAAW,mBACXoB,SAAUga,KAAKslH,qBACfxnB,OAAQ99F,KAAKklH,iBAAiBnrF,GAC9BllC,MAAOmL,KAAK+L,MAAMo5G,aAEpB,KAEMkB,wBAA2Bz1G,GACjC,+BACE,gBAAC,IAAI,CAAChsB,UAAU,cAAcsV,UAAWC,IAAUC,IAAI,UACrD,sBAAKxV,UAAU,2BAA2BhB,QAASoc,KAAKulH,gBAAgB,cAAc,SAC/C,eAApCvlH,KAAK+L,MAAMq5G,qBACVplH,KAAKmmH,4BAA4B,cAEjC,sBACEn0G,IAAI,mBACJptB,UAAY,eAAcgsB,EAASC,SACnCoB,IAAKrB,EAASsB,WAAatB,EAASsB,WAAaC,QAKvD,uBAAKvtB,UAAU,wBAAuB,UACnCob,KAAKsmH,6BAA6B11G,EAAUA,EAASrqB,OACtD,sBAAK3B,UAAU,iBAAgB,SAC7B,gBAAC,IAAE,eAAI,WAAUgsB,EAAS1P,QAAO,SAEnC,sBAAKtc,UAAU,0BAA0BhB,QAASoc,KAAKulH,gBAAgB,gBAAgB,SAChD,iBAApCvlH,KAAK+L,MAAMq5G,qBACVplH,KAAKmmH,4BAA4B,gBAEjC,eAAC/kH,GAAA,EAAQ,CAACpd,QAASuiI,GAAkB31G,EAASyB,kBAGlD,uBAAKztB,UAAU,mBAAkB,UAC/B,gBAAC,IAAI,CAACA,UAAU,mBAAkB,UAChC,eAAC,IAAI,CAACA,UAAU,mBAAmB8B,SAAU,GAAIjD,KAAMC,IAAU0rB,OACjE,sBAAKxqB,UAAU,iBAAgB,2BAC/B,sBAAKA,UAAU,iBAAiBhB,QAASoc,KAAKulH,gBAAgB,UAAU,SACjC,WAApCvlH,KAAK+L,MAAMq5G,qBACRplH,KAAKmmH,4BAA4B,UAChC,GAAErlH,GAAc8P,EAAS2B,YAGhC,sBAAK3tB,UAAU,iBAAgB,8BAC/B,sBAAKA,UAAU,iBAAiBhB,QAASoc,KAAKulH,gBAAgB,WAAW,SAClC,YAApCvlH,KAAK+L,MAAMq5G,qBACRplH,KAAKmmH,4BAA4B,WAChC,GAAErlH,GAAc8P,EAAS4B,gBAGlC,eAAC,IAAM,CAAC/uB,KAAMC,IAAUm2B,OAAQluB,SAAS,EAAM/H,QAASoc,KAAKwlH,qBAAqB,2BAGlF,eAAC,IAAO,CACNh0G,GAAK,GAAExR,KAAKrgB,MAAMinB,eAAegK,EAAS7qB,GAAGihB,cAC3C4B,KAAU6I,oBACT,SAEH,eAAC7lB,EAAA,EAAa,CAACpI,MAAM,eAAeC,KAAMC,IAAU4tB,oBAM9D,KAEMg1G,6BAA+B,CAAC11G,EAA8BrqB,IACpE,uBAAK3B,UAAU,oBAAmB,UAChC,eAAC,IAAI,CAAC6tB,WAAW,EAAM7tB,UAAW,YAAY,SAC5C,eAAC,IAAE,CAAChB,QAASoc,KAAKulH,gBAAgB,SAAS,SACJ,UAApCvlH,KAAK+L,MAAMq5G,qBACRplH,KAAKmmH,4BAA4B,SACjCI,GAAkBhgI,OAG1B,sBAAK3B,UAAU,WAAU,SAAEob,KAAKwmH,iBAAiB51G,QAEnD,KAEM41G,iBAAoB51G,GAC1B,eAAC,IAAM,CACLntB,KAAMC,IAAUy6G,OAChBh/G,OAAQC,IAAOK,OACfkM,SAAS,EACT/H,QAASoc,KAAK0lH,gBAAgB,yBAIhC,KAEMe,aAAe,CAAC1jI,EAAmBkzC,KACzC,MAAMrlB,EAAW,IACZ5Q,KAAKrgB,MAAMixB,SACd81G,SAAU3jI,GAEZo9H,GAA6BvvG,GAC7B5Q,KAAKrgB,MAAM0lI,sBAAsBz0G,IACjC,KAEM+1G,eAAiB,IACvB,eAAC,IAAM,CACLnvF,sBAAsB,EACtB5yC,UAAU,mBACVnB,KAAMC,IAAUm2B,OAChBtQ,oBAAoB,EACpBnO,OAAQ4E,KAAK+L,MAAM05G,mBACnBj8G,QAASxJ,KAAKwlH,qBACdj/H,MAAM,gBAAe,SAErB,uBAAK3B,UAAW4K,IAAQia,YAAY,UAClC,eAAC,IAAE,8BACFzJ,KAAK4mH,qBAAqB5mH,KAAKrgB,MAAMixB,SAASxkB,KAAM4T,KAAKymH,cAC1D,eAAC,IAAE,qBACH,sBAAK7iI,QAASoc,KAAKulH,gBAAgB,UAAU,SACN,WAApCvlH,KAAK+L,MAAMq5G,qBACRplH,KAAKmmH,4BAA4B,UACjCI,GAAkBvmH,KAAKrgB,MAAMixB,SAASrM,QAAU,MAEtD,eAAC,IAAE,oBACH,sBAAK3gB,QAASoc,KAAKulH,gBAAgB,SAAS,SACL,UAApCvlH,KAAK+L,MAAMq5G,qBACRplH,KAAKmmH,4BAA4B,SACjCI,GAAkBvmH,KAAKrgB,MAAMixB,SAASu+F,OAAS,MAErD,wBACA,eAAC,IAAE,uBACH,sBAAKvrH,QAASoc,KAAKulH,gBAAgB,YAAY,SACR,aAApCvlH,KAAK+L,MAAMq5G,qBACRplH,KAAKmmH,4BAA4B,YACjCI,GAAkBvmH,KAAKrgB,MAAMixB,SAAS0zB,UAAY,WAI5D,KAEMsiF,qBAAuB,SAC7B35G,GAA8B,IAC9B2qB,EAAY,uDAAG,CAAC70C,EAAmBkzC,OAA4C,OAE/E,eAAC4wF,GAA6B,CAC5BjiI,UAAW4K,IAAQC,QACnBP,MAAO,EAAKvP,MAAM8lC,gBAClBr2B,aAAcwoC,EACdvoC,aAAcy3H,GACdv3H,YAAY,EAAM,SAElB,eAAC,IAAM,CACL3K,UAAW4K,IAAQC,QACnBhB,KAAMwe,EACN5gB,UAAW3I,IAAUiM,2BA/MzBqQ,KAAK+L,MAAQ,CACXq5G,qBAAsB,GACtBD,WAAY,GACZM,oBAAoB,GAIjBplH,SACL,OACE,iCACGL,KAAK2mH,iBACL3mH,KAAKqmH,wBAAwBrmH,KAAKrgB,MAAMixB,cA0MjD,MAAM21G,GAAqBh9E,GACrBA,EAAIvN,MAAM,aACL,mCAEAuN,EAILs9E,GAAgCj4H,KAAOC,SAEvCi4H,GAAuD,CAC3D75G,EAAe,KAAD,IACd,YAAEze,EAAW,UAAEu4H,EAAS,MAAE5uG,GAAO,SAC9B,eAAC,IAAQ,CAAC+qC,QAAQ,EAA4Bt/D,QAAS4K,EAAaC,KAAMwe,GAA5CA,ICxQtB+5G,GAAgF,IAGtF,IAHuF,eAC5FC,EAAc,YACdC,GACD,EACC,MAAMC,EAA2B,aAAhBD,EAA6B,SAAW,oBACzD,OACE,eAAC,IAAQ,CAACljI,QAAS,aAAemjI,EAAW,gBAAgB,SAC3D,eAACv7H,EAAA,EAAa,CACZpI,MAAO2jI,EAAW,gBAClB1jI,KAAMC,IAAUqgH,QAChBngH,QAASqjI,OCrBJG,GAAmB,CAACx4F,EAA8B6R,KAC7D,IAAK,MAAMgsB,KAAQ79B,EACjB6R,EAAMA,EAAIgsB,GAEZ,OAAOhsB,GAGI4mF,GAAe,CAACz4F,EAA8B/5B,EAAY4rC,KACrE,IAAI19C,EAAI,EACR,IAAKA,EAAI,EAAGA,EAAI6rC,EAAKjqC,OAAS,EAAG5B,IAC/B09C,EAAMA,EAAI7R,EAAK7rC,IAEjB09C,EAAI7R,EAAK7rC,IAAM8R,GAGJyyH,GACX,eAAClpH,EAAkB,uDAAG,EAAGC,EAAkB,uDAAG,KAAI,OACjDxJ,IAEC,IAAIoC,EAQJ,OATApC,EAAyB,kBAAVA,EAAqB20C,SAAS30C,EAAO,IAAMA,EAGxDoC,EADU,OAARmH,GAAgBvJ,EAAQuJ,EACjBA,EACQ,OAARC,GAAgBxJ,EAAQwJ,EACxBA,EAEAxJ,EAEJoC,ICNEswH,GAAkD5nI,IAC7D,MAAM6nI,EAAc7nI,EAAM8nI,WAAY,GAE/BC,EAAWC,GAAgBjjI,oBAAS,IACpC+iI,GAAY/iI,mBAAS8iI,IACrBrC,EAAYyC,GAAiBljI,mBAAS,KACtCmjI,GAAenjI,mBAAS/E,EAAMkoI,aAAeL,GAE9CM,EAAsB7xF,IAC1B,IAAI8xF,EACAN,GACFM,EAAmBv+E,SAAS27E,EAAY,IACpCnhG,MAAM+jG,KACRA,EAAmBX,GAAiBznI,EAAMivC,KAAMjvC,EAAMwiB,cAGxD4lH,EAAmB5C,EAErB,MAAM6C,EAAcZ,GAAiBznI,EAAMivC,KAAMjvC,EAAMwiB,YAIvD,GAHIxiB,EAAMsoI,iBACRF,EAAmBpoI,EAAMsoI,eAAeF,IAEtCA,IAAqBC,EAAa,CACpC,MAAME,EAAgBvoI,EAAMwiB,WAC5BklH,GAAa1nI,EAAMivC,KAAMm5F,EAAkBG,GAC3CvoI,EAAMwoI,iBAAiBD,GAGzBP,GAAa,IAGTS,EAAwBnyF,IAC5B2xF,EAAc3xF,EAAEx0C,OAAOoT,QAqBzB,IAAIjL,EACJ,GAAI89H,EACF99H,EAnBA,eAAC,KAAQ,CACPw8H,WAAW,EACXxhI,UAAW,mBACXoB,SAAUoiI,EACVtqB,OAAQgqB,EACRjzH,MAAOswH,QAeJ,CACL,MAAMkD,EAAS,qCACf,IAAIxzH,EAAQuyH,GAAiBznI,EAAMivC,KAAMjvC,EAAMwiB,YAC1CxiB,EAAM8nI,WACT5yH,EAAQA,GAAS,GACjBA,EAAQA,EAAMmnC,MAAM,SAAWqsF,EAASxzH,GAGxCjL,EADEi+H,EACQhzH,EAEA,eAACuM,GAAA,EAAQ,CAACpd,QAAS6Q,IAGjC,OAAO,sBAAKjR,QAxBmBqyC,IAC7B,IAAKyxF,EAAW,CACd,MAAMY,EAAWlB,GAAiBznI,EAAMivC,KAAMjvC,EAAMwiB,aAAe,GACnEwlH,GAAa,GACbC,EAAkC,kBAAbU,EAAwBA,EAAWA,EAASthH,cAoB9B,SAAEpd,KAG5B29H,UCnER,MAAMgB,GAA2C5oI,IACtD,MAAM6oI,EAAe5sH,GAA0B,KAC7CA,EAAUsK,KAAKuiH,eACf9oI,EAAMwoI,iBAAiBxoI,EAAMwiB,aAQzBumH,EAAiB,CAACC,EAAsC7jI,KAC5D,MAAM8W,EAAYwrH,GAAiBuB,EAAchpI,EAAMwiB,YACjDnG,EAAWJ,EAAU9W,GAE3B,OACE,+BACE,eAAC,IAAI,CAACF,UAAU,cAAcsV,UAAWC,IAAUC,IAAI,SACrD,uBAAKxV,UAAU,wBAAuB,UAEpC,sBAAKA,UAAU,sBAAqB,SAClC,gBAAC,IAAE,2BAED,eAAC,GAAe,CACdud,WAAYxiB,EAAMwiB,WAClBysB,KAAM+5F,EAAajrD,OAAO,CAAC54E,EAAO,YAClC+iI,aAAa,EACbM,iBAAkBxoI,EAAMwoI,wBAI9B,sBAAKvjI,UAAU,uBAAsB,SACnC,gBAAC,IAAE,oBAED,eAAC,GAAe,CACdud,WAAYxiB,EAAMwiB,WAClBslH,UAAU,EACV74F,KAAM+5F,EAAajrD,OAAO,CAAC54E,EAAO,UAClCqjI,iBAAkBxoI,EAAMwoI,wBAI9B,sBAAKvjI,UAAU,uBAAsB,SACnC,gBAAC,IAAE,8BAED,eAAC,GAAe,CACdud,WAAYxiB,EAAMwiB,WAClBysB,KAAM+5F,EAAajrD,OAAO,CAAC54E,EAAO,WAClC+iI,aAAa,EACbM,iBAAkBxoI,EAAMwoI,wBAI9B,sBAAKvjI,UAAU,mBAAkB,SAC/B,iCACE,eAACgH,EAAA,EAAa,CACZpI,MAAM,OACNC,KAAMC,IAAU0tB,KAChBxtB,QAAS,IAAMjE,EAAMmc,mBAAmBE,KAE1C,eAACpQ,EAAA,EAAa,CACZpI,MAAM,SACNC,KAAMC,IAAU69G,OAChB39G,QAAS,IAzDF,EAACgY,EAAuB7V,KAC7C6V,EAAU4hB,OAAOz3B,EAAI,GACrBpG,EAAMwoI,iBAAiBxoI,EAAMwiB,aAuDAymH,CAAehtH,EAAW9W,kBAUnDie,EAAWpjB,EAAMwiB,WAAWC,UAAUziB,EAAMoW,YAC5C8yH,EAAiB,CAAC,YAAalpI,EAAMoW,WAAY,aAEjDwtH,EAAkBxgH,EAASnH,UAAUjZ,KAAI,CAACqZ,EAAUlX,IACxD,+BAAkB4jI,EAAeG,EAAgB/jI,IAAvCA,KAGNgkI,EAAkB,CAAC,YAAanpI,EAAMoW,WAAY,oBAClD0tH,EAAmB1gH,EAASghH,iBAAkBphI,KAAI,CAACqZ,EAAUlX,IACjE,+BAAkB4jI,EAAeI,EAAiBhkI,IAAxCA,KAGZ,OACE,oDAEGy+H,EACD,eAAC33H,EAAA,EAAa,CACZpI,MAAM,sBACNC,KAAMC,IAAUqlI,KAChBnlI,QAAS4kI,EAAYzlH,EAASnH,aAEhC,wBACA,wBAAM,oBAEL6nH,EACD,eAAC73H,EAAA,EAAa,CACZpI,MAAM,uBACNC,KAAMC,IAAUqlI,KAChBnlI,QAAS4kI,EAAYzlH,EAASghH,wB,aC/FtC,MAAMiF,WAAsBvkI,YAAyC,cAAD,sCAwB1DwkI,cAAgB,KACtB,MAAMC,EAAiBlpH,KAAKrgB,MAAMwpI,cAC5BtH,EAAauF,GAAiB8B,EAAgBlpH,KAAKrgB,MAAMwiB,YAEzDiE,EAAUy7G,EAAWl9G,SAASyB,QAAQzjB,KAAI,CAACymI,EAAQrmI,IACvD,gCACE,8BAAKid,KAAKqpH,gBAAgBH,EAAexrD,OAAO,CAAC,WAAY,UAAW36E,OACxE,qBAAI4G,MAAO,CAAEX,MAAO,SAAU,SAC5B,eAAC4C,EAAA,EAAa,CACZpI,MAAM,SACNC,KAAMC,IAAU4lI,MAChB1lI,QAASoc,KAAKupH,mBAAmBxmI,SAN9BA,KAYLk/H,EAAUJ,EAAWI,QAAQt/H,KAAI,CAACymI,EAAQrmI,IAC9C,gCACE,qBAAI4G,MAAO,CAAEX,MAAO,SAAU,SAC3BgX,KAAKqpH,gBAAgBH,EAAexrD,OAAO,CAAC,UAAW36E,EAAG,OAE7D,8BAAKid,KAAKwpH,2BAA2BzmI,KACrC,qBAAI4G,MAAO,CAAEX,MAAO,QAAS,SAC3B,eAAC4C,EAAA,EAAa,CACZpI,MAAM,SACNC,KAAMC,IAAU4lI,MAChB1lI,QAASoc,KAAKypH,mBAAmB1mI,SAT9BA,KAeL2mI,EACJ,eAAC99H,EAAA,EAAa,CACZpI,MAAM,mBACNC,KAAMC,IAAUqgH,QAChBngH,QAAS,IAAMoc,KAAKrgB,MAAMgqI,qBAAqB9H,KAI7C+H,EACJ,gBAAC,WAAc,+BAEb,wBACCC,GAAehI,EAAWl9G,SAASC,KAAM5E,KAAK80B,sBAC/C,eAAC,IAAO,IACR,4CACA,wBACA,wBAAOnrC,MAAO,CAAEX,MAAO,QAAS,SAC9B,iCAAQod,MAEV,eAACxa,EAAA,EAAa,CAACpI,MAAM,aAAaC,KAAMC,IAAUqlI,KAAMnlI,QAASoc,KAAK8pH,qBAIpEC,EACJ,gBAAC,WAAc,WACb,4CACA,wBACA,wBAAOpgI,MAAO,CAAEX,MAAO,OAAQghI,cAAe,OAAQ,SACpD,iCAAQ/H,MAEV,eAACr2H,EAAA,EAAa,CAACpI,MAAM,aAAaC,KAAMC,IAAUqlI,KAAMnlI,QAASoc,KAAKiqH,qBAI1E,OACE,iCAGE,eAAC,IAAO,IACPP,EACD,eAAC,IAAO,IAAG,eAEX,wBACC73H,GAAcgwH,EAAWlhI,QAASqf,KAAK/Q,qBACxC,eAAC,IAAO,IACP26H,EACD,eAAC,IAAO,IACPG,MAGL,KAEMV,gBAAmBz6F,GAEvB,eAAC,GAAe,CACdzsB,WAAYnC,KAAKrgB,MAAMwiB,WACvBysB,KAAMA,EACNq5F,eAAgBiC,GAChB/B,iBAAkBnoH,KAAKrgB,MAAMwoI,iBAC7BN,aAAa,IAGjB,KAEM2B,2BAA8BzmI,IACpC,MAAMonI,EAAUnqH,KAAKrgB,MAAMwpI,cAAczrD,OAAO,CAAC,UAAW36E,EAAG,IAC/D,OACE,eAAC,GAAe,CACdof,WAAYnC,KAAKrgB,MAAMwiB,WACvBysB,KAAMu7F,EACNhC,iBAAkBnoH,KAAKoqH,wBAAwBrnI,GAC/C8kI,aAAa,KAGjB,KAEMuC,wBAA2BrnI,GAAeof,IAChD,MACM8vF,EADam1B,GAAiBpnH,KAAKrgB,MAAMwpI,cAAenpH,KAAKrgB,MAAMwiB,YAC/C8/G,QAAQl/H,GAClC,IACEkvG,EAAO,GAAKo4B,GAAQp4B,EAAO,IAC3BjyF,KAAKrgB,MAAMwoI,iBAAiBhmH,GAC5B,MAAO8zB,GACPg8D,EAAO,GAAK,yBAEd,KAEMs3B,mBAAsBzkI,GAAkB,KAC9C,MAAMqd,EAAanC,KAAKrgB,MAAMwiB,WACXilH,GAAiBpnH,KAAKrgB,MAAMwpI,cAAehnH,GACnCwC,SAASyB,QAC5BoX,OAAO14B,EAAO,GACtBkb,KAAKrgB,MAAMwoI,iBAAiBhmH,IAC5B,KAEM2nH,gBAAkB,KACxB,MAAM3nH,EAAanC,KAAKrgB,MAAMwiB,WACXilH,GAAiBpnH,KAAKrgB,MAAMwpI,cAAehnH,GACnCwC,SAASyB,QAC5BF,KAAK,cACblG,KAAKrgB,MAAMwoI,iBAAiBhmH,IAC5B,KAEMsnH,mBAAsB3kI,GAAkB,KAC9C,MAAMqd,EAAanC,KAAKrgB,MAAMwiB,WACXilH,GAAiBpnH,KAAKrgB,MAAMwpI,cAAehnH,GACnD8/G,QAAQzkG,OAAO14B,EAAO,GACjCkb,KAAKrgB,MAAMwoI,iBAAiBhmH,IAC5B,KAEM8nH,gBAAkB,KACxB,MAAM9nH,EAAanC,KAAKrgB,MAAMwiB,WACXilH,GAAiBpnH,KAAKrgB,MAAMwpI,cAAehnH,GACnD8/G,QAAQ/7G,KAAK,CAAC,aAAc,KAAM,SAC7ClG,KAAKrgB,MAAMwoI,iBAAiBhmH,IAC5B,KAEMlT,oBAAsB,CAAClM,EAAeunI,KAC5C,MAAMnoH,EAAanC,KAAKrgB,MAAMwiB,WAC9BnC,KAAKrgB,MAAMwoI,iBAAiBhmH,IAC5B,KAEM2yB,qBAAuB,CAAC/xC,EAAaunI,KAC3C,MAAMnoH,EAAanC,KAAKrgB,MAAMwiB,WACxB0/G,EAAauF,GAAiBpnH,KAAKrgB,MAAMwpI,cAAehnH,GAC9D0/G,EAAWl9G,SAASC,KAAO7hB,EAAE6hB,KAC7Bi9G,EAAWl9G,SAASyB,QAAUskB,KAAKM,MAAMN,KAAK7iB,UAAU0iH,KAAkB/oI,IAAIuB,EAAE6hB,QAChF5E,KAAKrgB,MAAMwoI,iBAAiBhmH,IAC5B,KAEMqoH,uBAAyB,KAC/B,MAAMroH,EAAanC,KAAKrgB,MAAMwiB,WAC9B,GAAInC,KAAKyqH,iBAAkB,CACzB,IAAIl4H,EAAU60H,GACZpnH,KAAKrgB,MAAM+qI,YAAc,CAAC,oBAC1BvoH,GAEF5P,EAAUm4B,KAAKM,MAAMN,KAAK7iB,UAAUtV,IACpC80H,GAAarnH,KAAKrgB,MAAMwpI,cAAe52H,EAAS4P,QAEhDklH,GAAarnH,KAAKrgB,MAAMwpI,cAAevH,cAAgBz/G,GAEzDnC,KAAKrgB,MAAMwoI,iBAAiBhmH,IAC5B,KAEMsoH,eAAiB,WAA8D,IAA7D77F,EAA4B,uDAAG,EAAKjvC,MAAMwpI,cAClE,OAA8E,IAAvE/B,GAAiBx4F,EAAK8uC,OAAO,CAAC,YAAa,EAAK/9E,MAAMwiB,aA1MxD9B,SACL,OAAKL,KAAKrgB,MAAMgrI,qBAUZ,iCACE,eAAC,IAAM,CACL5wG,SAAU/Z,KAAKyqH,iBACfjnI,MAAO,UAAYwc,KAAKrgB,MAAM6D,MAAQ,cACtCwC,SAAUga,KAAKwqH,yBAEhBxqH,KAAKyqH,iBAAmB,KAAOzqH,KAAKipH,mBAdvC,iCACGjpH,KAAKrgB,MAAM6D,MAAQ,cACpB,wBACCwc,KAAKipH,oBAwMhB,MAAMiB,GAAgB3gF,GACE,kBAARA,EAAmBA,EAAIwtB,QAAQ,OAAQ,IAAMxtB,EAGvD8gF,GAAW9gF,GAER84E,SAAS,wBAA0B94E,EAAM,IAAzC84E,GAGHxwH,GAAgB,eACpBlR,EAAgB,uDAAGC,UAAQC,QAC3B+2C,EAAY,uDAAG,CAAC70C,EAAekzC,OAA4C,OAE3E,eAACtnC,GAAsB,CACrB/J,UAAW4K,IAAQC,QACnBP,MAAOC,IACPC,aAAcwoC,EACdvoC,aAAcf,GACdiB,YAAY,EAAM,SAElB,eAAC,IAAM,CACL3K,UAAW4K,IAAQC,QACnBhB,KAAMiB,YAAmB8U,UAAQC,MAAO9jB,GACxC0L,UAAW3I,IAAUiM,2BAKrBhB,GAAyBC,KAAOC,SAEhCP,GAA4C,CAACs8H,EAAK,KAAD,IAAE,YAAEp8H,EAAW,UAAEu4H,EAAS,MAAE5uG,GAAO,SACxF,eAAC,IAAQ,CAAC+qC,QAAQ,EAA8Bt/D,QAAS4K,EAAaC,KAAMm8H,EAAKl8H,aAAnDk8H,EAAKl8H,cAG/Bm8H,GAAanyG,MAAM81C,KAAK+7D,KAAkB5rF,WAAWh8C,KAAI,CAACmoI,EAAOhmI,KAAK,CAC1E8f,KAAMkmH,EAAM,GACZ7rI,IAAK6F,EACLshB,QAAS0kH,EAAM,OAGXjB,GAAiB,CACrBkB,EACAnzF,IAEA,eAACozF,GAAuB,CACtBpmI,UAAW4K,IAAQC,QACnBP,MAAO27H,GACPz7H,aAAcwoC,EACdvoC,aAAc47H,GACd17H,YAAY,EAAM,SAElB,eAAC,IAAM,CACL3K,UAAW4K,IAAQC,QACnBhB,KAAMs8H,EACN1+H,UAAW3I,IAAUiM,0BAKrBq7H,GAA0Bp8H,KAAOC,SAEjCo8H,GAA2C,CAACtmH,EAAS,KAAD,IAAE,YAAEnW,EAAW,UAAEu4H,EAAS,MAAE5uG,GAAO,SAC3F,eAAC,IAAQ,CAAC+qC,QAAQ,EAA0Bt/D,QAAS4K,EAAaC,KAAMkW,EAASC,MAAnDD,EAAS1lB,MAG1B+pI,UC1QAkC,OArB+BvrI,IAa5C,OACE,4CAbuBivC,EAeJjvC,EAAMivC,KAAK8uC,OAAO,CAAC,UAbpC,eAAC,GAAe,CACdv7D,WAAYxiB,EAAMwiB,WAClBslH,UAAU,EACV74F,KAAMA,EACNq5F,eAAgBX,GAAiB,GACjCa,iBAAkBxoI,EAAMwoI,uBAPLv5F,OCG3B,MAgJMu8F,GAAY3qF,GACT9V,KAAKM,MAAMN,KAAK7iB,UAAU24B,IAGpB4qF,OApJ6CzrI,IAC1D,MAAO0rI,EAAiBC,GAAsB5mI,oBAAS,IAChD6mI,EAAkBC,GAAuB9mI,oBAAuB,SAEjE+mI,EAAqB3mI,GAEvB,iCACE,eAAC8G,EAAA,EAAa,CACZpI,MAAM,QACNC,KAAMC,IAAUgoI,SAChB9nI,QAAS+nI,EACPC,GAAa,IAAMT,GAASxrI,EAAMwiB,WAAWC,UAAUtd,KAASA,MAGpE,eAAC8G,EAAA,EAAa,CACZpI,MAAM,SACNC,KAAMC,IAAUC,OAChBC,QAAS+nI,EAAYE,EAAe/mI,MAEtC,eAAC8G,EAAA,EAAa,CACZpI,MAAM,WACNC,KAAMC,IAAUooI,SAChBloI,QAAS+nI,EAAYI,GAAe,EAAGjnI,IACvCgH,WAAsB,IAAVhH,IAEd,eAAC8G,EAAA,EAAa,CACZpI,MAAM,aACNC,KAAMC,IAAUsX,WAChBpX,QAAS+nI,EAAYI,EAAc,EAAGjnI,IACtCgH,WAAYhH,GAASnF,EAAMwiB,WAAWC,UAAUzd,OAAS,IAE3D,wBACA,eAACiH,EAAA,EAAa,CACZpI,MAAM,8BACNC,KAAMC,IAAUsoI,KAChBpoI,QAAS+nI,EAAYC,EAAaK,IAAqBnnI,MAEzD,eAAC8G,EAAA,EAAa,CACZpI,MAAM,sBACNC,KAAMC,IAAUstB,QAChBptB,QAAS+nI,EAAYC,EAAaM,IAAapnI,SAMjDinI,EAAgB,CAACI,EAAarnI,IAAkB,KACpD,MAAMqd,EAAaxiB,EAAMwiB,WACnB4rG,EAAWjpH,EAAQqnI,EACzB,GAAIpe,GAAY,GAAKA,EAAW5rG,EAAWC,UAAUzd,OAAQ,CAC3D,MAAMoe,EAAWZ,EAAWC,UAAUtd,GAChCsd,EAAYD,EAAWC,UAC7BA,EAAUtd,GAASsd,EAAU2rG,GAC7B3rG,EAAU2rG,GAAYhrG,EACtBZ,EAAWC,UAAYA,EACvBziB,EAAMwoI,iBAAiBhmH,GACvBgF,KAAQjB,KAAK,uBAAyB6nG,EAAS/mG,cAI7C4kH,EAAe,CAACQ,EAAqBtnI,IAAkB,KAC3D,MAAMqd,EAAaxiB,EAAMwiB,WACzBrd,GAAgB,EAChB,MAAMsd,EAAYD,EAAWC,UAC7BA,EAAUob,OAAO14B,EAAO,EAAGsnI,KAC3BjqH,EAAWC,UAAYA,EACvBziB,EAAMwoI,iBAAiBhmH,GACvBgF,KAAQjB,KAAK,uBAAyBphB,EAAMkiB,aAGxC6kH,EAAkB/mI,GAAkB,KACxC,MAAMqd,EAAaxiB,EAAMwiB,WACzB,IAAIC,EAAYD,EAAWC,UACvBA,EAAUzd,OAAS,IACrByd,EAAYA,EAAUqnC,MAAM,EAAG3kD,GAAO44E,OAAOt7D,EAAUqnC,MAAM3kD,EAAQ,KAEvEqd,EAAWC,UAAYA,EACvBziB,EAAMwoI,iBAAiBhmH,IAGnBwpH,EAAeJ,GAAiC,KAChD5rI,EAAM0K,mBACRihI,GAAmB,GACnBE,EAAoBD,IAEpBA,KAOEc,EACJ,gBAAC,IAAM,CACLznI,UAAU,mBACVnB,KAAMC,IAAU4lB,MAChBC,oBAAoB,EACpBnO,OAAQiwH,EACR9kI,MAAM,sCAAqC,UAE3C,sBAAK3B,UAAW4K,IAAQia,YAAY,SAClC,eAACrI,GAAA,EAAQ,CAACpd,QAAQ,+DAEpB,sBAAKY,UAAW4K,IAAQka,cAAc,SACpC,gBAAC,IAAW,WACV,eAAC9d,EAAA,EAAa,CACZpI,MAAM,SACNI,QAAS,IAAM0nI,GAAmB,GAClCz/H,QAAS,CAAEF,SAAS,KAEtB,eAACC,EAAA,EAAa,CACZpI,MAAM,UACNI,QAAS,KACP2nI,IACAD,GAAmB,IAErBz/H,QAAS,CAAEF,SAAS,EAAOxM,OAAQC,IAAOK,kBAOpD,OACE,iCACG4sI,EACA1sI,EAAMwiB,WAAWC,UAAUzf,KAAI,CAAC2pI,EAAGxnI,IAClC,6CACYA,EAAQ,EAClB,wBACA,eAAC,IAAM,CAACF,UAAU,uBAAuB+G,SAAS,EAAK,SACrD,eAACyV,GAAA,EAAQ,CACPpd,QAASsoI,EAAEtoI,QAAQW,OAAS,IAAM2nI,EAAEtoI,QAAQ0nD,UAAU,EAAG,KAAO,MAAQ4gF,EAAEtoI,YAG7EynI,EAAkB3mI,GACnB,wBACA,0BAVQA,SC5CHynI,OApFuD5sI,IACpE,MAuBM0pI,EAAkB,SACtBz6F,GAGI,IAFJ64F,EAAiB,wDACjBl9G,EAAe,uDAAG,CAAC,GAEnB,OAAIk9G,EAEA,eAAC,GAAe,CACdtlH,WAAYxiB,EAAMwiB,WAClBslH,UAAU,EACV74F,KAAMA,EACNq5F,eAAgBX,GAAiB/8G,EAAM,GAAIA,EAAM,IACjD49G,iBAAkBxoI,EAAMwoI,mBAK1B,eAAC,GAAe,CACdhmH,WAAYxiB,EAAMwiB,WAClBysB,KAAMA,EACNu5F,iBAAkBxoI,EAAMwoI,qBAO1B,WAAEpyH,GAAepW,EACjBojB,EAAWpjB,EAAMwiB,WAAYC,UAAUrM,GACvCy2H,EAAYzpH,EAASm4C,QAAQv4D,KAAI,CAACs0E,EAAQl0E,IAC9C,uBAAa6B,UAAU,uBAAsB,oBACnC7B,EAAC,IAAGsmI,EAAgB,CAAC,YAAatzH,EAAY,UAAWhT,EAAG,YACpE,wBAAM,QAELsmI,EAAgB,CAAC,YAAatzH,EAAY,UAAWhT,EAAG,WAJjDA,KAON0pI,EACJ,eAAC7gI,EAAA,EAAa,CAACpI,MAAM,gBAAgBC,KAAMC,IAAUC,OAAQC,QA/C7C,KAChB,MAAM,WAAEue,EAAU,WAAEpM,GAAepW,EAC7BojB,EAAWZ,EAAYC,UAAUrM,GACjCmlD,EAAUn4C,EAASm4C,QAAQzR,MAAM,EAAG1mC,EAASm4C,QAAQv2D,OAAS,GACpEoe,EAASm4C,QAAUA,EACnB/4C,EAAYC,UAAUrM,GAAcgN,EACpCpjB,EAAMwoI,iBAAiBhmH,MA4CzB,OACE,sBAAKvd,UAAU,iBAAgB,SAC7B,eAAC,IAAI,CAACA,UAAU,yCAAwC,SACtD,uBAAKA,UAAU,oCAAmC,UAC/C4nI,EAAS,YAETnD,EAAgB,CAAC,YAAatzH,EAAY,aAAa,EAAM,CAC5D,EACAgN,EAASm4C,QAAQv2D,SAEnB,wBACA,eAACiH,EAAA,EAAa,CAACpI,MAAM,aAAaC,KAAMC,IAAUstB,QAASptB,QA3EjD,KAChB,MAAM,WAAEue,EAAU,WAAEpM,GAAepW,EAC7BojB,EAAWZ,EAAYC,UAAUrM,GACjCmlD,EAAUn4C,EAASm4C,QAAQwiB,OAAO,CACtC,CACE15E,QAAS,IACTo/H,KAAM,QAGVrgH,EAASm4C,QAAUA,EACnB/4C,EAAYC,UAAUrM,GAAcgN,EACpCpjB,EAAMwoI,iBAAiBhmH,MAiEhBY,EAASm4C,QAAQv2D,OAAS,EAAI8nI,OAAetmI,U,qBCxExD,MAIMumI,GAAuB99H,KAAOC,SAQ9B89H,GAAoC,CACxC,CACEnpI,MAAO,UACPC,KAAMC,IAAUkpI,WAChB7mI,GAAI,WAEN,CACEvC,MAAO,WACPC,KAAMC,IAAUmpI,aAChB9mI,GAAI,YAEN,CACEvC,MAAO,oBACPC,KAAMC,IAAUwlC,OAChBnjC,GAAI,oBAEN,CACEvC,MAAO,mBACPC,KAAMC,IAAUyiB,KAChBpgB,GAAI,WAuJO+mI,OAhJuDntI,IACpE,MAAOotI,EAAcC,GAAmBtoI,mBAASioI,GAAgB,KAC1DM,EAAeC,GAAoBxoI,mBAAS,KAC5CyoI,EAAiBC,GAAsB1oI,oBAAS,GAwEjD2oI,EAAUz+F,IACd,MAAM/5B,EAAQs4H,EAAkBF,EAAgB7F,GAAiBx4F,EAAMjvC,EAAMwiB,YAE7E,OACE,sBAAKve,QAAS0pI,EAAY1+F,GAAOkvE,OAAQyvB,EAAc3+F,GAAM,SAC3D,eAAC,KAAS,CACRhqC,UAAU,YACV4oI,YAAa,CACXC,gBAAiBC,KAEnBviF,SAAU,GACVwiF,qBAAqB,EACrBllG,KAAK,aACLziC,SAAUknI,EACVU,MAAM,SACN/4H,MAAOA,EACP7L,MAAM,YAMRskI,EACH1+F,GACAqH,IACMk3F,IACHD,EAAiB9F,GAAiBx4F,EAAMjvC,EAAMwiB,aAC9CirH,GAAmB,KAInBG,EACH3+F,GACAqH,IACC,GAAIk3F,EAAiB,CAEnB,GADc/F,GAAiBx4F,EAAMjvC,EAAMwiB,cAC7B8qH,EAAe,CAC3B,MAAM/E,EAAgBvoI,EAAMwiB,WAC5BklH,GAAaz4F,EAAMq+F,EAAe/E,GAClCvoI,EAAMwoI,iBAAiBD,GAGzB,GAAwB,YAApB6E,EAAahnI,GAAkB,CACjC,MAAMke,EAAgBgpH,EACtBttI,EAAMkuI,4BAA4B,CAAE7oH,aAAcf,SAC7C,GAAwB,aAApB8oH,EAAahnI,GAAmB,CACzC,MAAMme,EAAiB+oH,EACvBttI,EAAMkuI,4BAA4B,CAAE5oH,cAAef,IAGrDgpH,EAAiB,IACjBE,GAAmB,KAInBU,EAAwBl/F,GAAiC,KAC7D,MAAMzsB,EAAaxiB,EAAMwiB,WACzBklH,GAAaz4F,EAAMjvC,EAAMqkB,YAAa7B,GACtCxiB,EAAMwoI,iBAAiBhmH,IAGnB4rH,EAAsBn/F,GAAiC,KAC3D,MAAM/5B,EAAQuyH,GAAiBx4F,EAAMjvC,EAAMwiB,YAC3CxiB,EAAMijB,wBAAwB/N,IAGhC,MAxIuB,MACrB,MACM+5B,EADS,CAAC,YAAajvC,EAAMoW,YACf2nE,OAAOqvD,EAAahnI,IAElCioI,EACJ,eAACpiI,EAAA,EAAa,CACZpI,MAAM,mBACNC,KAAMC,IAAUo+H,OAChBl+H,QAASkqI,EAAqBl/F,KAI5Bq/F,EACJ,eAACriI,EAAA,EAAa,CACZpI,MAAM,iBACNC,KAAMC,IAAUy6G,OAChBv6G,QAASmqI,EAAmBn/F,KAI1Bs/F,EACJ,iCACGF,EACAC,EACD,eAAC,IAAO,IACPZ,EAAOz+F,MAINu/F,EAA6C,CAACd,EAAO,KAAD,IAAE,YAAE7+H,GAAa,SACzE,eAAC,IAAQ,CACP00D,QAAQ,EAERt/D,QAAS4K,EACTC,KAAM4+H,EAAO7pI,MACbC,KAAM4pI,EAAO5pI,MAHR4pI,EAAOtnI,KA2BhB,OACE,sBAAKnB,UAAU,eAAc,SAC3B,gBAAC,IAAI,YArBPwpI,EAsBkBrB,EArBlBn1F,EAqBgCo1F,EAnBhC,eAACN,GAAoB,CACnB9nI,UAAW4K,IAAQC,QACnBP,MAAOy9H,GACPt9H,aAAc8+H,EACd/+H,aAAcwoC,EACdroC,YAAY,EAAM,SAElB,eAAC,IAAM,CACL3K,UAAW4K,IAAQC,QACnBhB,KAAM2/H,EAAc5qI,MACpBC,KAAMC,IAAU4tB,KAChBjlB,UAAW3I,IAAUiM,2BASrB,eAAC,IAAO,IACR,sBAAK/K,UAAU,oBAAmB,SAAEspI,SAzBrB,IACnBE,EACAx2F,GA+FGy2F,ICscT,SAASC,GAAK59G,GACZ,MAAM69G,EAAO,GACb,OAAO79G,EAAElJ,QAAOsO,IAASy4G,EAAKC,eAAe14G,KAAiBy4G,EAAKz4G,IAAQ,KAG9D24G,OAziB2C9uI,IAAU,IAAD,IACjE,MAAOwiB,EAAYusH,GAAiBhqI,mBAASs7H,OACtCkH,EAAayH,GAAkBjqI,mBAAS,aACxC2F,EAAmBukI,GAAwBlqI,oBAAS,IACpDod,EAA0BC,GAA+Brd,oBAAS,IAClEmqI,EAAeC,GAAoBpqI,mBAAS,GAqBnD,GAdAua,qBAAU,KACJkD,IACF4sH,IACAD,EAAiBE,QAGlB,IAMH/vH,qBAAU,IAkEV,WAEE,QAAmB9Y,IAAfgc,EACF,OAIF,MAAMrM,GAAgB,EAChBC,EAAak5H,IAEftvI,EAAMmkB,qBAAuBhO,GAAgBnW,EAAMokB,mBAAqBhO,IAC1Eg5H,IACApvI,EAAMuvI,gCAAgCp5H,EAAcC,GACpDpW,EAAMylB,+BAA8B,GAChC/a,IACFqkI,EAAc1O,MACd4O,GAAqB,IAEvBjF,KApFYxmH,KAEG,OAAfhB,GAAwD,IAAjCA,EAAYC,UAAUzd,OAC/C,OACE,eAAC,IAAa,CACZC,UAAWG,IAAW,kBAAmByK,IAAQ8Q,MACjD0I,YAAY,2BACZvlB,KAAM,eAAC,IAAO,CAAC0B,KAAM8jB,IAAYC,UAMvC,MAAM+lH,EAAqB,KACzB,IAAIl5H,EAAapW,EAAMoW,WAMvB,OALIA,EAAa,EACfA,EAAa,EACJA,GAAcoM,EAAYC,UAAUzd,SAC7CoR,EAAaoM,EAAYC,UAAUzd,OAAS,GAEvCoR,GAoET,MAAM4zH,EAAuB,WAA+C,IAA9Cp3H,EAA4B,4DAAGpM,EAC3D,MAAM4c,EAAWZ,EAAYC,UAAU6sH,KAIvC,GAHK18H,IACHA,EAAUwQ,EAASxQ,SAEjBA,GAAWA,EAAQ0vH,QAAQt9H,OAAS,EAAG,CACzC,MAAMwqI,EAAa58H,EAAQ0vH,QAAQt/H,KAAKC,GAAWA,EAAE,KAC/CwsI,EAAa78H,EAAQoS,SAASyB,QAAQs3D,OAAOyxD,GACnD58H,EAAU,IACLA,EACHoS,SAAU,CACRC,KAAMrS,EAAQoS,SAASC,KACvBwB,QAASkoH,GAAKc,KAIpBzvI,EAAMs6G,mBAAmB1nG,GAAS,IAG9Bw8H,EAAuB,KAC3B,MAAMhsH,EAAqBZ,EAAYC,UAAU6sH,KACjD,IAAIjrH,EACAC,EAAgB,GAChBC,EAAiB,GACjBnB,EAAS3W,OAAS4W,IAAcC,aAEhCe,EADEjB,EAASiB,YACGjB,EAASiB,YAERjB,EAAkCG,iBAEnDe,EAAiBlB,EAAkCsB,QACnDH,EAAkBnB,EAAkCuB,UAEpDN,EAAc,uDAGhBrkB,EAAMo6G,qBAAqB,CAEzBh1F,WAAY,CACV,CACElQ,MAAOmP,EACPgB,aAAcf,EACdgB,cAAef,EACf7P,iBAAkB,GAClBH,YAAa,OAInBvU,EAAMijB,wBAAwBoB,IAG1BlI,EAAsBE,IAC1B,MAAMmI,EAAkB,CAACnI,GACzBrc,EAAM0vI,sBAAsB,CAAElrH,oBAC9BxkB,EAAMmc,mBAAmB,IAGrB+C,EAAa,KAEjBsD,EAAYC,UAAU6sH,KAAsBjrH,YAAcrkB,EAAMolB,WAAW,GAAGlQ,MAC9E65H,EAAcvsH,GACdysH,GAAqB,GACrB1O,GAAqB/9G,GAErBmtH,KAGIA,EAAe,KACnB,MAAMC,EAAQP,IACRQ,EAAWD,EAAQV,EACzB,GAAiB,IAAbW,EAAgB,CAClB,MAAM5+G,EAAWjxB,EAAMslC,mBACN,IAAbuqG,IACF5+G,EAAS1P,MAAQquH,GAEnBT,EAAiBS,GACjB5vI,EAAM8vI,yBAAyB7+G,GAC/BuvG,GAA6BvvG,KAI3Bo+G,EAAW,KACf,IAAI/tH,EAAK,EACT,MAAMmB,EAAYD,EAAYC,UAC9B,IAAK,MAAMW,KAAYX,EACrBnB,GAAM8B,EAAS7B,MAEjB,OAAOD,GAEHyuH,EAA6BxH,IACjCwG,EAAcxG,GACd0G,GAAqB,IAGjBe,EAA2BzH,IAC/BwG,EAAcxG,GACdyB,IACA9qH,IACAkwH,KAGIa,EAAoB,KAExBjB,EAD+B,aAAhBzH,EAA6B,SAAW,aA0QzD,MAAMnxH,EAAak5H,IACblsH,EAAqBZ,EAAWC,UAAUrM,GAE1CwV,EAAiC,CACrChhB,gBArFuDwL,KACvD,MAAM6Q,EAAc,mBACdG,EAAyC,oBAAG5E,EAAYpc,GAAGihB,aAC3DC,EAAqC,CAAClR,EAAa,EAAGoM,EAAYC,UAAUzd,QAY5EmjB,EACJ,eAACC,EAAA,EAAoB,CACnBb,YAVgB,IAClBC,KAAQjB,KAAKa,EAA2B,KAAIhR,EAAa,GAAGiR,cAU1DI,cATkB,IAAMD,KAAQjB,KAAKU,GAUrCK,iBAAkBA,GACd,iBAIFgB,EACJ,eAACC,EAAA,EAAwB,CACvBtkB,QArBoB,IACtBujB,KAAQjB,KAAKa,EAA2B,KAAIhR,EAAa,GAAGiR,cAqB1DC,iBAAkBA,GACd,qBAIFkB,EACJ,eAACC,EAAA,EAA4B,CAACnB,iBAAkBA,GAAsB,iBAGlEoB,EACJ,eAACC,EAAA,EAAqB,CAAC1kB,QA1BI,KAC3Bme,GAA4B,IAAM1X,MAyBwB,kBAqB5D,MAAO,CACLye,cAAe,CAnBC,eAACN,EAAA,EAAmB,CAACC,iBAAkB9oB,EAAM8oB,kBAAsB,OAGnF,eAAC,IAAuB,CACtBpe,kBAAmBA,EACnBse,YAAa9J,GACT,QAaiCwJ,GACvCU,YAAa,CAACd,EAAgBE,EAAcL,GAC5C+nH,wBAAyB,CAVzB,eAAC7I,GAA8B,CAC7BE,YAAaA,EACbD,eAAgB2I,GACZ,uBA+BSrlI,CAAgBwL,GACjC/K,qBACE+X,EAAS3W,OAAS4W,IAAcC,YAC5B,CACE0G,cAAe,SACf5E,WAAYplB,EAAMolB,WACfpiB,IAAIinB,KACJjnB,KAAI,CAACmtI,EAAqBhrI,IAGX,IAAVA,EACKgrI,EAEF,IACFA,EACH9rH,YACE8rH,EAAoB9rH,aACpBjB,EAASiB,aACRjB,EAAkCG,oBAG3C2G,gBAAiB,GACjBC,0BAA2BnqB,EAAMmqB,0BACjCrB,iBAAkB9oB,EAAM8oB,iBACxB7F,wBAAyBjjB,EAAMijB,wBAC/BkC,8BAA+BnlB,EAAMmlB,8BACrCM,8BAA+BzlB,EAAMylB,8BACrC2E,yBAA0BpqB,EAAMoqB,yBAChCE,iBAAiB,QAEnB9jB,EACNiE,8BAA+BzK,EAAMyK,8BACrCC,kBAAmBA,EACnBc,SAAU,CACRuc,IAAK3E,EACL8H,gBAAkBC,GAChBnrB,EAAMkf,WAAWsD,EAAYC,UAAUrM,GAAYhQ,GAAI+kB,IAE3DrgB,aAAc,CACZtG,KAAM,IAERsB,kBAAmB9F,EAAM8F,kBACzBqE,iBAnTkF,EAClFnK,EACAoW,KAEA,MAAMuW,EAAoBnK,EAC1B,IAAIhe,EACJ,GAAoB,aAAhB+iI,EAA4B,CAC9B,MAAM6I,EAASzjH,EAAmBlK,UAAUziB,EAAMoW,YAAY3J,KACxD4jI,EACO,QAAXD,EACE,eAAC,GAAsB,CACrB5tH,WAAYmK,EACZvW,WAAYA,EACZoyH,iBAAkBuH,IAGpB,eAAC,GAA8B,CAC7BvtH,WAAYmK,EACZvW,WAAYA,EACZoyH,iBAAkBuH,EAElB1rH,YAAarkB,EAAMolB,WAAW,GAAGlQ,MACjC+N,wBAAyBjjB,EAAMijB,wBAC/BirH,4BAA6BluI,EAAMkuI,8BAIzC1pI,EAAO,CACL,CACEX,MAAQ,YAAWuS,EAAa,IAChC7Q,SAAUxB,IAAU6hB,MACpBngB,KACE,eAACmiI,GAAe,CACdplH,WAAYmK,EACZsiB,KAAM,CAAC,YAAa74B,EAAY,WAChCoyH,iBAAkBuH,IAGtB3pI,GAAIK,KAAgB6pI,wBAEtB,CACEzsI,MAAQ,oBACR0B,SAAUxB,IAAUgoI,SACpBtmI,KAAM4qI,EACNjqI,GAAIK,KAAgB8pI,wBAEtB,CACE1sI,MAAQ,0BACR0B,SAAUxB,IAAUk5C,KACpBx3C,KACE,eAAC,GAAa,CACZ+c,WAAYmK,EACZ9oB,MAAO,oBACPmmI,qBAAsBA,EACtBR,cAAe,CAAC,YAAapzH,EAAY,WACzCoyH,iBAAkBuH,EAClB/E,sBAAsB,IAG1B5kI,GAAIK,KAAgB+pI,uBAEtB,CACE3sI,MAAQ,iCACR0B,SAAUxB,IAAUstB,QACpB5rB,KACE,eAAC,GAAa,CACZ+c,WAAYmK,EACZ9oB,MAAO,2BACPmmI,qBAAsBA,EACtBR,cAAe,CAAC,YAAapzH,EAAY,iBACzC20H,WAAY,CAAC,YAAa30H,EAAY,WACtCoyH,iBAAkBuH,EAClB/E,sBAAsB,IAG1B5kI,GAAIK,KAAgBgqI,6BAEtB,CACE5sI,MAAQ,UACR0B,SAAUxB,IAAUyiB,KACpB/gB,KACE,eAAC,GAAU,CACT+c,WAAYmK,EACZsiB,KAAM,CAAC,YAAa74B,GACpBoyH,iBAAkBuH,IAGtB3pI,GAAIK,KAAgBiqI,gBAGT,gBAAXN,GACF5rI,EAAK+hB,KAAK,CACR1iB,MAAQ,aACR0B,SAAUxB,IAAUqiB,SACpB3gB,KACE,eAACmjI,GAAa,CACZpmH,WAAYmK,EACZvW,WAAYA,EACZ+F,mBAAoBA,EACpBqsH,iBAAkBuH,IAGtB3pI,GAAIK,KAAgBkqI,mBAGEhkH,EAAmB80G,iBAAkBz8G,SAASyB,QAClDC,SAAS,eAC7BliB,EAAK+hB,KAAK,CACR1iB,MAAQ,cACR0B,SAAUxB,IAAU4iB,UACpBlhB,KAAM,eAAC,GAAqB,IAC5BW,GAAIK,KAAgBmgB,kBAIxBpiB,EAAO,CACL,CACEX,MAAQ,GAAE8oB,EAAmBlgB,gBAC7BlH,SAAUxB,IAAU8hB,UACpBpgB,KACE,eAACmiI,GAAe,CACdplH,WAAYmK,EACZsiB,KAAM,CAAC,eACPu5F,iBAAkBuH,IAGtB3pI,GAAIK,KAAgBmqI,gBAEtB,CACE/sI,MAAQ,kBACR0B,SAAUxB,IAAUm2B,OACpBz0B,KACE,eAAC,GAAiB,CAChB+c,WAAYmK,EACZjiB,kBAAmBA,EACnB0L,WAAYA,EACZoyH,iBAAkBwH,IAGtB5pI,GAAIK,KAAgBoqI,sBAEtB,CACEhtI,MAAQ,2BACR0B,SAAUxB,IAAUqkC,MACpB3iC,KACE,eAAC,GAAa,CACZ+c,WAAYmK,EACZ9oB,MAAO,SACPmmI,qBAAsBA,EACtBR,cAAe,CAAC,oBAChBhB,iBAAkBuH,EAClB/E,sBAAsB,IAG1B5kI,GAAIK,KAAgBqqI,wBAEtB,CACEjtI,MAAQ,kCACR0B,SAAUxB,IAAUstB,QACpB5rB,KACE,eAAC,GAAa,CACZ+c,WAAYmK,EACZ9oB,MAAO,gBACPmmI,qBAAsBA,EACtBR,cAAe,CAAC,oBAChBhB,iBAAkBuH,EAClB/E,sBAAsB,IAG1B5kI,GAAIK,KAAgBsqI,+BAK1B,MAAO,CACLvsI,KAAM,CAAEqiB,kBAAmBriB,EAAMsiB,iBAAkB,MAoInC3c,CAAiBnK,EAAOoW,GAC1CzK,UAAW,CACTyf,wBAAyBprB,EAAMorB,wBAC/BC,sBAAuBrrB,EAAMqrB,sBAC7BlnB,eAAgBnE,EAAMmE,eACtBmnB,sBAAuBtrB,EAAMsrB,sBAC7BE,OAAQxrB,EAAMwrB,OACdC,UAAWzrB,EAAMyrB,UACjBrc,cAAeyV,UAAQC,MACvBzV,cAAepO,UAAQC,QACvB6jB,iBAAyB,OAAR3B,QAAQ,IAARA,GAAiB,QAAT,EAARA,EAAUxQ,eAAO,OAAU,QAAV,EAAjB,EAAmBoS,gBAAQ,WAAnB,EAAR,EAA6BC,OAAQ,OACtDyG,YAzEJ,WACE,MAAMC,EACJ,eAAChoB,EAAA,EAAqB,CAACC,sBAAuB5D,EAAM4D,uBAA2B,cAWjF,MAAO,CAPL,eAACM,EAAA,EAAoB,CACnBC,eAAgBnE,EAAMmE,eACtBC,UAAWpE,EAAMoE,WACb,aAIYunB,GA4DLD,KAGjB,OACE,uBAAKzmB,UAAWG,IAAW,kBAAmByK,IAAQ8Q,MAAM,UA1e5D,gBAAC,IAAM,CACL1b,UAAU,mBACVnB,KAAMC,IAAU4lB,MAChBC,oBAAoB,EACpBnO,OAAQ0G,EACRvb,MAAM,8BAA6B,UAEnC,sBAAK3B,UAAW4K,IAAQia,YAAY,SAClC,eAACrI,GAAA,EAAQ,CAACpd,QAAQ,wDAEpB,sBAAKY,UAAW4K,IAAQka,cAAc,SACpC,gBAAC,IAAW,WACV,eAAC9d,EAAA,EAAa,CACZpI,MAAM,SACNI,QAAS,IAAMme,GAA4B,GAC3ClW,QAAS,CAAEF,SAAS,KAEtB,eAACC,EAAA,EAAa,CACZpI,MAAM,UACNI,QAAS,KACP,MAAMue,EAAa69G,KACnB0O,EAAcvsH,GACdysH,GAAqB,GACrB7sH,GAA4B,GAC5B+sH,EAAiBE,KACjBrF,IACAoF,KAEFljI,QAAS,CAAEF,SAAS,EAAOxM,OAAQC,IAAOK,kBAgdhD,eAAC6H,GAAA,EAAS,IAAKikB,QCvmBrB,MAgBMtlB,GAAuC,aA6C9B0qI,OAFmB7kH,aA3D2C,CAACC,EAAOpsB,KAC5E,CACLwsB,qBAAsBJ,EAAMG,WAAW/J,WAAWgK,qBAClDpH,WAAYgH,EAAMG,WAAW/J,WAAW4C,WACxC1a,kBAAmB0hB,EAAMG,WAAW/J,WAAW9X,kBAC/CtG,UAAWgoB,EAAMG,WAAW/J,WAAWpe,UACvCqoB,YAAaL,EAAMG,WAAW/J,WAAWiK,YACzCC,gBAAiBN,EAAMG,WAAW/J,WAAWkK,gBAC7ClB,OAAQY,EAAMG,WAAW/J,WAAWgJ,OACpCC,UAAWW,EAAMG,WAAW/J,WAAWiJ,UACvC3lB,kBAAmBsmB,EAAMG,WAAW/J,WAAW1c,kBAC/Cqe,mBAAoBiI,EAAMG,WAAW/J,WAAWmK,kBAChDvI,iBAAkBgI,EAAMG,WAAW/J,WAAWoK,oBAMiB7J,GACjE8J,YACE,CACEzB,wBAAyB,IAAMja,gCAAsB7K,IACrD+kB,sBAAuB,IAAMha,8BAAoB/K,IACjDgJ,oBAAqB,CAAC6C,EAAkB8+H,IACtC/+H,wBAAcC,EAASlR,UAAQC,QAASoF,IAC1Cg0G,mBAAoB,CAAC1nG,EAAkBC,IACrCF,4BAAkBrM,GAAmBsM,EAASC,GAChDsX,0BAA4B7U,GAC1BD,gCAAsB/O,GAAmBgP,GAC3CwT,iBAAkB,IAAMvV,qBAAWjN,IACnC2c,wBAA0B6J,GAAgB3Y,4BAAkB2Y,EAAKxmB,IACjE6e,8BAAgC5Q,GAC9BD,8BAAoBC,EAAajO,IACnCw2C,oBAAqB,IAAMC,mCAAwBz2C,IACnDnC,eAAgB,IAAMsP,mBAASnN,IAC/B1C,sBAAuB,IAAMqP,0BAAgB3M,IAC7CglB,sBAAwBC,GAAqB3W,0BAAgB2W,EAAUjlB,IACvE8zG,qBAAuBluG,GACrBwJ,yBAAepP,GAAmB4F,GACpCwjI,sBAAwBxjI,GACtB2J,0BAAgBvP,GAAmB4F,GACrCgiI,4BAA8BhiI,GAC5B8H,gCAAsB1N,GAAmB4F,GAC3CgT,WAAY6N,eACZtiB,8BAAgCohB,GAC9Bha,kCAAwBga,EAAcvlB,IACxC6V,mBAAqBvI,GAAuBD,uBAAarN,GAAmBsN,GAC5E6R,8BAAgC/a,GAC9B+L,kCAAwBnQ,GAAmBoE,GAC7C6kI,gCAAiCr5H,4BACjC05B,oBAAqB,IAAM+M,8BAAmBr2C,IAC9CypC,qBAAsB,IAAM8M,0BAAev2C,IAC3C2pC,oBAAqB,IAAM2M,yBAAct2C,IACzC8jB,yBAA0B,CAACnT,EAAaoT,EAAalT,IACnDH,6BAAmB1Q,GAAmB2Q,EAAKoT,EAAKlT,IAEpD4L,IAG8BoJ,CAA6C2iH,IChE/E,MAAMoC,WAAuBpsI,YAEpB0rC,YAAYxwC,GACjBywC,MAAMzwC,GAAO,KAFPmxI,gBAA0B3qI,EAAU,KAwCpC4qI,eAAkBtgI,GAAewlC,IACvC,IAAKj2B,KAAK8wH,WACR,OAEF,MAAM9sI,EAAUgc,KAAK8wH,WAAW75H,OAC5BjT,GACFgtI,uBAAYhtI,GAAS,CAAC/D,EAAUgX,KAE9ByC,QAAQyyH,IAAI17H,GACZ,IACE,MAAMwgI,EbtBqBh6H,KACnC,MAAMi6H,EAAgBjQ,GAAehqH,GAErC,MAAO,CADUmpH,GAAuBnpH,EAAQi6H,EAAc,IAC5CA,EAAc,KamBmCC,CAAqBl6H,GAChFg6H,EAAiB,GAAG3sF,SAAW7zC,EAAKmU,KAAK6kC,MAAM,GAAI,GACnD02E,GAA6B8Q,EAAiB,IAC9CjxH,KAAKrgB,MAAM0lI,sBAAsB4L,EAAiB,IAElD/Q,GAAqB+Q,EAAiB,IACtCjxH,KAAKrgB,MAAMyxI,cAAcH,EAAiB,IAC1CjxH,KAAKswB,SAAS,CACZ+gG,cAAe,aAEjB,MAAOpxI,GAEPyZ,QAAQ3B,IAAI9X,GACZ+f,KAAKswB,SAAS,CACZ+gG,cAAe,sBAKvB,KAEMC,iBAAoBr7F,IAC1B,MAAMmzE,EAAQnzE,EAAEx0C,OAAO2nH,MACnBnzE,EAAEx0C,OAAO2nH,QACXppG,KAAK8wH,WAAa,IAAIzgB,WACtBrwG,KAAK8wH,WAAWvgB,UAAYvwG,KAAK+wH,eAAe3nB,EAAM,IACtDppG,KAAK8wH,WAAWxgB,WAAWlH,EAAM,MAEnC,KAEMmoB,YAAc,KACpBpR,GAA6BqR,eAC7BxxH,KAAKrgB,MAAM0lI,sBAAsBmM,eACjCtR,GAAqBuR,eACrBzxH,KAAKrgB,MAAMyxI,cAAcK,gBAjFzBzxH,KAAK+wH,eAAiB/wH,KAAK+wH,eAAe34F,KAAKp4B,MAC/CA,KAAKsxH,iBAAmBtxH,KAAKsxH,iBAAiBl5F,KAAKp4B,MACnDA,KAAKuxH,YAAcvxH,KAAKuxH,YAAYn5F,KAAKp4B,MACzCA,KAAK+L,MAAQ,CACXslH,cAAe,cAIZxxH,oBACL,MAAMsC,EAAa69G,KACf79G,GACFnC,KAAKrgB,MAAMyxI,cAAcjvH,GAItB9B,SACL,OACE,iCACE,qFACA,+BACE,eAAC,IAAS,CACR5R,KAAMuR,KAAK+L,MAAMslH,cACjB5xF,WAAY,CAAEiyF,OAAQ,QACtB1rI,SAAUga,KAAKsxH,qBAGnB,+BACE,eAAC1lI,EAAA,EAAa,CACZpI,MAAM,mBACNC,KAAMC,IAAUgyB,WAChB9xB,QAASoc,KAAKuxH,oBAuDXV,UCxGAc,OAFiB7lH,aAVsB,CAACC,EAAO6lH,IAAaA,IAERlvH,GACjE8J,YACE,CACE4kH,cAAejJ,oBAEjBzlH,IAG4BoJ,CAA6C+kH,ICO7E,MAAMtpF,GAAe,OAiDNsqF,OA/CuClyI,IACpD,MAAOmyI,EAAiBC,GAAsBrtI,mBfmBD,MAC7C,MAAMyd,EAAa89G,aAAa9N,QAAQ,4BACxC,OAAIhwG,EACKuoB,KAAKM,MAAM7oB,GAEX,MexB8C6vH,IAEjDl8H,EAA8Bid,aAAiBpzB,EAAMq8C,MAAMtsB,OAAO5Z,cAClEC,EACJgd,aAAiBpzB,EAAMq8C,MAAMtsB,OAAO3Z,aAAe6S,KAAU6I,kBAG/D,IAAsB,IAAlB3b,GAAuBg8H,EAAiB,CAC1C,MAAMlhH,EAAWkhH,EACXG,EAA4C,CAChDn8H,eACAC,aACAkvB,mBAAoBrU,EACpB6+G,yBAA0BsC,EAC1BjvH,aAAc8N,EAASC,SAAWC,IAAmBK,cACrD+gH,UAAWthH,EAAS4B,SAEtB,OACE,sBAAK5tB,UAAU,UAAS,SACtB,eAAC,GAAyB,IAAKqtI,MAKrC,MAAMroI,EACJ,uCACE,eAAC,GAAc,CAACy7H,sBAAuB0M,IACtCD,GACC,eAAC,GAAmB,CAClBlhH,SAAUkhH,EACVzM,sBAAuB0M,EACvBnrH,YAAY,mBACZ6e,gBAAiB9lC,EAAM8lC,qBAO/B,OACE,sBAAK7gC,UAAU,qBAAoB,SACjC,eAACmvB,GAAA,EAAc,CAACnqB,QAASA,EAASoqB,oBAAqBuzB,QCvD9C4qF,OAFiBx0F,YAAW7xB,aAJ4BC,IAAK,YAAK,CAC/E0Z,iBAAuD,QAAtC,EAAA1Z,EAAMC,QAAQsiB,gCAAwB,aAAtC,EAAwC3rC,KAAIszC,GAAKA,EAAE7pC,SAAS,MAGpC0f,CAAyB+lH,K,wCCM7D,MAAMO,GAAkEzyI,GAE3E,eAAC,IAAQ,CAACqE,QAAQ,iBAAiBqY,UAAWzd,IAASC,IAAI,SACzD,eAAC,IAAY,CACXo+B,SAAUv5B,IAAU0rB,KACpBzlB,MAAO,CAAEX,MAAO,IAChBoV,IAAK,IACLvJ,MAAOlV,EAAM2R,SACb4M,cAAeve,EAAMq6G,yB,cCG7B,SAASq4B,GAAY14H,GACnBra,aAAoB,sBAAsBqa,GAASA,EAAM5a,SAAY4a,GAAS,mBAGzE,MAAM24H,WAAiC7tI,gBAM5C0rC,YAAYxwC,GACVywC,MAAMzwC,GAAO,KAHP4yI,qBAAe,EAIrBvyH,KAAK+L,MAAQ,CAAEymH,cAAe,IAE9BxyH,KAAKyyH,aAAezyH,KAAKyyH,aAAar6F,KAAKp4B,MAC3CA,KAAKuyH,gBAAkB9tI,cACvBub,KAAK0yH,sBAAwB1yH,KAAK0yH,sBAAsBt6F,KAAKp4B,MAGxDK,SACL,MASMsyH,EACJ,uCACE,wBAAO99H,MAAOmL,KAAKrgB,MAAMkqB,gBAAiB8uB,UAAU,EAAMtvC,IAAK2W,KAAKuyH,kBACpE,eAAC,GAAe,CAAC9jI,KAAM,GAAKuR,KAAKrgB,MAAMkqB,gBAAgB,SACrD,eAACje,EAAA,EAAa,CAACnI,KAAMC,IAAUk1C,UAAWh1C,QAASoc,KAAK0yH,6BAKxDE,EACJ,eAAC,KAAQ,CACP/5F,iBAAiB,gBACjBC,kBAAkB,EAClB90C,QAAS2uI,EAA2B,SAEpC,eAAC/mI,EAAA,EAAa,CAACpI,MAAM,SAASC,KAAMC,IAAUmvI,MAAOjvI,QAxB/B,KAEW,KAA/Boc,KAAKrgB,MAAMkqB,iBACbipH,aAAiB9yH,KAAKrgB,MAAMqkB,aAAe,IAAI1L,MAAKL,IAClD+H,KAAKrgB,MAAMozI,yBAA0B96H,KACpCo6H,SA0CDW,EAEJ,wBAAMC,SArBoBxqI,IAC1BA,EAAMisG,iBAENw+B,aAAqBlzH,KAAK+L,MAAMymH,eAAel6H,MAC7C6+E,IACMA,EACFn3E,KAAKrgB,MAAMozI,yBAA0B/yH,KAAK+L,MAAOymH,gBAEjDxyH,KAAKrgB,MAAMozI,yBAA0B,IACrCzzI,aAAmB,8CAGvBqa,IACEqG,KAAKrgB,MAAMozI,yBAA0B,IACrCV,GAAY14H,OAOmB,UACjC,wBAAOvN,KAAK,OAAOyI,MAAOmL,KAAK+L,MAAMymH,cAAexsI,SAAUga,KAAKyyH,eACnE,uBAAM7tI,UAAW4K,IAAQ2jI,gBAAgB,SACvC,eAACvnI,EAAA,EAAa,CAACnI,KAAMC,IAAU0vI,UAAWvnI,QAAS,CAAEO,KAAM,iBAK3DinI,EACJ,eAAC,KAAQ,CACPx6F,iBAAiB,gBACjBC,kBAAkB,EAClB90C,QAASgvI,EAAyB,SAElC,eAACpnI,EAAA,EAAa,CAACpI,MAAM,OAAOC,KAAMC,IAAU67H,WAI1C+T,EACJ,eAAC1nI,EAAA,EAAa,CACZpI,MAAM,QACNC,KAAMC,IAAU6vI,KAChB3vI,QAAS,KAEPoc,KAAKrgB,MAAMozI,yBAA0B,IACrC/yH,KAAKswB,SAAS,CAAEkiG,cAAe,QAKrC,OACE,eAAC,KAAQ,CACPxuI,QACE,gBAAC,IAAI,CAAC+pB,OAAO,EAAK,UACf6kH,EAC+B,KAA/B5yH,KAAKrgB,MAAMkqB,gBAAyBwpH,EAAaC,KAErD,SAED,eAAC1nI,EAAA,EAAa,CACZpI,MAAM,UACNC,KAAMC,IAAU8vI,aAChB3nI,QAAS,CACPK,UACiC,KAA/B8T,KAAKrgB,MAAMkqB,qBACP1jB,EACA6Z,KAAKrgB,MAAM8zI,iBACXv2B,UAAOw2B,OACPx2B,UAAOy2B,UAOfjB,wBAC+B,OAAjC1yH,KAAKuyH,gBAAgBjqI,UACvB0X,KAAKuyH,gBAAgBjqI,QAAQ0wC,QAC7Bh5B,KAAKuyH,gBAAgBjqI,QAAQ2wC,UAIzBw5F,aAAahqI,GACnBuX,KAAKswB,SAAS,CAAEkiG,cAAe/pI,EAAMhH,OAAOoT,SClIzC,MAAM++H,WAA8BnvI,gBAGzC0rC,YAAYxwC,GACVywC,MAAMzwC,GAAO,KAHPu4C,oBAAc,EAIpBl4B,KAAKm4B,qBAAuBn4B,KAAKm4B,qBAAqBC,KAAKp4B,MAC3DA,KAAKyyH,aAAezyH,KAAKyyH,aAAar6F,KAAKp4B,MAC3CA,KAAKghG,aAAehhG,KAAKghG,aAAa5oE,KAAKp4B,MAC3CA,KAAKk4B,eAAiBzzC,cACtBub,KAAK+L,MAAQ,CAAE5b,QAAS,GAAI0jI,WAAW,GAGlCxzH,SACL,MAAMo4B,OACuBtyC,IAA3B6Z,KAAKrgB,MAAM4Q,YACT,eAAC,IAAI,2GAIHyP,KAAKrgB,MAAMm0I,OACb,iCACE,wBAAOp7F,aAAc14B,KAAKrgB,MAAM4Q,YAAcooC,UAAU,EAAMtvC,IAAK2W,KAAKk4B,iBACxE,eAAC,IAAQ,CAACl0C,QAAQ,yBAAwB,SACxC,eAAC,GAAe,CAACyK,KAAMuR,KAAKrgB,MAAM4Q,YAAa,SAC7C,eAAC3E,EAAA,EAAa,CAACnI,KAAMC,IAAUk1C,UAAWh1C,QAASoc,KAAKm4B,8BAK9D,qCACIn4B,KAAKrgB,MAAM0Q,UAAoC,UAAxB2P,KAAKrgB,MAAM0Q,SA2BlC,iCACE,wBAAOqoC,aAAc14B,KAAKrgB,MAAM0Q,SAAUsoC,UAAU,EAAMtvC,IAAK2W,KAAKk4B,iBACpE,eAAC,IAAQ,CAACl0C,QAAQ,yBAAwB,SACxC,eAAC,GAAe,CAACyK,KAAMuR,KAAKrgB,MAAM0Q,SAAS,SACzC,eAACzE,EAAA,EAAa,CAACnI,KAAMC,IAAUk1C,UAAWh1C,QAASoc,KAAKm4B,6BAJpDn4B,KAAKrgB,MAAM0Q,UA1BpB2P,KAAK+L,MAAM8nH,WAAqC,UAAxB7zH,KAAKrgB,MAAM0Q,SAkBlC,+BACE,eAAC,IAAa,CACZ2Y,YAAY,+BACZvlB,KAAM,eAAC,IAAO,CAAC0B,KAAM8jB,IAAY8qH,YApBrC,iCACGnrH,KAAUorH,iBAAgB,OAC3B,wBACE71H,YAAa,2BACbnY,SAAUga,KAAKyyH,aACf9oI,MAAO,CAAEX,MAAO,OAElB,eAAC4C,EAAA,EAAa,CACZpI,MAAM,WACNC,KAAMC,IAAUq1C,MAChBn1C,QAAS,KACPoc,KAAKrgB,MAAMs0I,iBAAiBj0H,KAAK+L,MAAM5b,SACvC6P,KAAKswB,SAAS,CAAEujG,WAAW,YAyB3C,OACE,eAAC,KAAQ,CACPh7F,iBAAiB,gBACjBC,kBAAkB,EAClB90C,QAASy0C,EAA0B,SAEnC,eAAC,IAAQ,CAACz0C,QAAQ,qBAAqBqY,UAAWzd,IAASC,IAAI,SAC7D,eAAC+M,EAAA,EAAa,CAACpI,MAAM,QAAQC,KAAMC,IAAUq1C,MAAOn1C,QAAS,IAAMoc,KAAKghG,qBAMzEvtE,mBAAmBC,GACpB1zB,KAAKrgB,MAAM0Q,WAAaqjC,EAAUrjC,UACpC2P,KAAKswB,SAAS,CAAEngC,QAAS,GAAI0jI,WAAW,IAIpC7yB,eACFhhG,KAAKrgB,MAAMu0I,kBACbl0H,KAAKrgB,MAAMu0I,mBAIbl0H,KAAKrgB,MAAMw0I,qBAAqB,IAChCn0H,KAAKswB,SAAS,CAAEngC,QAAS,GAAI0jI,WAAW,IAGlCpB,aAAahqI,GACnBuX,KAAKswB,SAAS,CAAEngC,QAAS1H,EAAMwzG,cAAcpnG,QAGvCsjC,uBAC8B,OAAhCn4B,KAAKk4B,eAAe5vC,UACtB0X,KAAKk4B,eAAe5vC,QAAQ0wC,QAC5Bh5B,KAAKk4B,eAAe5vC,QAAQ2wC,WCtH3B,MAAMm7F,GAA0Dz0I,GAEnE,eAAC,IAAQ,CAACqE,QAAQ,aAAaqY,UAAWzd,IAASC,IAAI,SACrD,eAAC,IAAY,CACXo+B,SAAUv5B,IAAU2wI,uBACpB1qI,MAAO,CAAEX,MAAO,IAChBoV,IAAK,IACLC,IAAK,IACLxJ,MAAOlV,EAAMgS,UACbuM,cAAeve,EAAM20I,0BCjBvBC,GAAwB,6EAE0CniG,KAAMoiG,oEACzBpiG,KAAMqiG,sBAQ9CC,GAA6B,CAAC3lI,EAAwBC,IAfxC,gDAYEulI,GCoHvBjjG,GAAS,CAAEqjG,QAAS,WAyB1B,MA6fMC,GAA+C,CACnDxuI,KAAgBgd,aAChBhd,KAAgBid,iBAEZwxH,GAAgD,CAACzuI,KAAgBy1C,cAExDi5F,OAngB+B,IAAqD,IAApD,kBAAE7uI,EAAoB,gBAAiBtG,GAAO,EAC3F,MAAM,aAAEo1I,GAAiBp1I,GACnB,mBAAE6iB,GAAuBC,cACzBuyH,EAAWvwI,SAAa9E,GAC9Bq1I,EAAS1sI,QAAU3I,EAEnB,MAAM+iB,EAAWC,eAEVsyH,EAAcC,GAAmBzwI,aAClC4zC,EAAWonF,cACXt4G,EAAUguH,cAEVC,EADe,IAAIC,gBAAgBh9F,EAASqmF,QACbl9H,IAAI,cAIrC4zI,IAAoBH,IACtBC,EAAgBE,GAChBjuH,EAAQ4vD,QAAQ1+B,EAASi9F,WAG3B,MAAO,CAAEC,GAAe9wI,WAAe,IAAI4I,OACpCmoI,EAASC,GAAchxI,YAAe,IACtCwd,EAAaC,GAAkBzd,WACpC2wI,EAAkBhvI,KAAgBsvI,gBAAkBtvI,KAAgBy1C,eAE/D85F,EAAgBC,GAAqBnxI,YAAe,IACpDwT,EAAW+J,GAAgBvd,YAAe,IAC/CqU,EAAY,aAAc,CAExBkL,YAAagxH,EAAS1sI,QAAQyc,WAAW,GAAGlQ,MAC5C/C,QAASkjI,EAAS1sI,QAAQutI,4BAIxBC,EACJt2G,aAAiBzT,KAAWA,EAAMC,QAAQ+pH,2BAA4BhB,EAGlE9iI,EAAsButB,aAC1BzT,GAASA,EAAMG,WAAW8pH,WAAWtxH,kBAGvCjgB,aAAgB,KAEdud,EACElJ,EAAY,aAAc,CAExBkL,YAAagxH,EAAS1sI,QAAQyc,WAAW,GAAGlQ,MAC5C/C,QAASkjI,EAAS1sI,QAAQutI,6BAG7B,CAACl2I,EAAMkqB,kBAEV,MAAMosH,EAAOlB,EAAep1I,EAAMu2I,uBAAyBv2I,EAAM04C,SAAS49F,KAE1ExxI,aAAgB,KACTwxI,EAhFFjgH,eAA0BigH,EAAct2I,GAAyB,IAAD,MACrE,MAAMy+H,EAAKF,GAAW+X,GAEhBnkI,EAAUihB,aAAiBqrG,EAAGwM,YAASzkI,EACvCgwI,EAAiB,QAAR,EAAG/X,EAAGgY,UAAE,QAAIhY,EAAGiY,MACxBjS,EAAU+R,GAAaG,6CAAkCH,GAC3D/R,GACFzkI,EAAMijB,wBAAwBwhH,GAEhC,MAAMzjI,EAGM,QAHU,EAGnB,QAHmB,EACpBwO,IAAgBo1B,MACdgyG,GAAYA,EAASzkI,UAAYA,GAAWykI,EAAS51I,UAAYy9H,EAAGz9H,iBACrE,aAFD,EAEGA,eAAO,QAAIC,UAAQC,QACpBiR,GACFnS,EAAMsP,oBAAoB6C,EAASnR,GAGrC,MAAM2Q,EAAWmtB,KAAKpgB,IAAI0U,aAAiBqrG,EAAGoY,MAAQ,SAAW,IAAM,KACnEllI,GACF3R,EAAMq6G,qBAAqB1oG,GAoE3BmlI,CAAWR,EAAMjB,EAAS1sI,SALpB3I,EAAM+2I,qBAAuB/2I,EAAMg3I,qBACrC3B,EAAS1sI,QAAQ2G,oBAAoBtP,EAAM+2I,oBAAqB/2I,EAAMg3I,uBAKzE,CAACV,EAAMt2I,EAAM+2I,oBAAqB/2I,EAAMg3I,sBAK3ClyI,aAAgB,KACV+d,GAAsBqyH,GAAkBxuH,SAASpE,GACnDC,EAAe9b,KAAgBgd,eACrBZ,GAAsBoyH,GAAiBvuH,SAASpE,IAC1DC,EAAe9b,KAAgBy1C,gBAEhC,CAACr5B,EAAoBP,IAExB,MAAMsvB,EAAW9sC,WACf,MACEkwI,QAAS,IAAMc,GAAYD,MAE7B,CAACA,IAGGoB,EAAsBnyI,eAAkBgoB,IAC5C8oH,EAAY,IAAIloI,MAChB2nI,EAAS1sI,QAAQsa,wBAAwB6J,KACxC,IAEGqwB,EAAer4C,eACnB,CACEiiB,EACAC,EACAle,KAEA,GAAIie,IAAaC,EACf,OAGF,MAAM,iBAAEkwH,EAAgB,sBAAEtzI,EAAqB,wBAAEsyI,GAA4Bb,EAAS1sI,QAOlFqe,IAAcvgB,KAAgB0wI,iBAC9BpwH,IAAatgB,KAAgBid,kBAG3BwyH,GAA2B,GAAKnvH,IAAatgB,KAAgB0wI,iBAC/DD,GAAiB,GAGflwH,IAAcvgB,KAAgB0wI,iBAAoBnB,IACpDpyI,IACAszI,GAAiB,IAGnB30H,EAAewE,MAGnB,CAACivH,IAGGryH,EAAU7e,eACb8e,IACCxL,EAAIE,EAAWsL,KAEjB,CAACtL,IAGGwQ,EAAmBhkB,eACvB,IAAMie,EAASxP,qBAAWjN,KAC1B,CAACyc,EAAUzc,IAGPo2C,EAAiB53C,WAAc,IAEjC,wBAACuqC,GAAwB,IACnBrJ,IAAEqiF,KAAKroH,EAAO,cAAe,kBAAmB,aACpD88C,oBAAqB,IAAM/5B,EAASg6B,mCAAwBz2C,IAC5D6pC,0BAA2B,IAAMptB,EAAStQ,8BAAoBnM,IAC9DwiB,iBAAkBA,EAClB8mB,oBAAqB,IAAM7sB,EAAS45B,8BAAmBr2C,IACvD2pC,oBAAqB,IAAMltB,EAAS65B,yBAAct2C,IAClDypC,qBAAsB,IAAMhtB,EAAS85B,0BAAev2C,IACpDhH,IAAI,UACJ4wC,gBAAiBimG,EACjB/mI,cAAepP,EAAMk2I,wBAErBxmG,cAAeymG,IAAyBiB,YAAiBp3I,EAAMk2I,4BAGlE,CAACnzH,EAAU+F,EAAkB9oB,EAAOm2I,EAAsB7vI,IAEvD+wI,EAAuBvyI,eAC3B,CAAC,EAA8DwxC,KAAY,IAA1E,QAAEnkC,EAAO,QAAEnR,GAAiD,EAC3D,MAAM,iBAAEk2I,EAAgB,sBAAEtzI,EAAqB,oBAAE0L,GAAwB+lI,EAAS1sI,SAC7EwJ,GAAW,GAAK6jI,GAAmB1zH,IAAgB7b,KAAgB0wI,kBACtED,GAAiB,GAEf/kI,EAAU,IACZvO,IACAszI,GAAiB,IAGnB,MAAMhqI,EAAe,CACnBoM,KAAM5L,KAAKC,MACXlB,KAAM,gBACNuX,KAAM7R,GAGRwR,EAAQzW,GAERoC,EAAoB6C,EAASnR,KAE/B,CAACg1I,EAAgB1zH,EAAaqB,IAG1BzR,EAAgBpN,WACpB,IACE,eAACqK,EAAA,EAAuB,CACtBG,oBAAqB+nI,EACrBjoI,cAAepP,EAAMk2I,wBACrB7mI,cAAerP,EAAMs3I,wBAErBtwI,SAAUmvI,GADN,YAIR,CACEkB,EACAr3I,EAAMk2I,wBACNl2I,EAAMs3I,wBACNnB,IAIExqH,EAAc7mB,WAClB,IACEwd,IAAgB7b,KAAgB0wI,gBAAkB,KAChD,eAACxzI,EAAA,EAAqB,CACpBC,sBAAuB5D,EAAM4D,uBACzB,eAGV,CAAC5D,EAAM4D,sBAAuB0e,IAG1B06B,EAAal4C,WACjB,IACEwd,IAAgB7b,KAAgB0wI,gBAAkB,KAChD,eAACjzI,EAAA,EAAoB,CACnBC,eAAgBnE,EAAMmE,eACtBC,UAAWpE,EAAMoE,WACb,cAGV,CAACpE,EAAMmE,eAAgBnE,EAAMoE,UAAWke,IAGpCi1H,EAAgBzyI,WACpB,IACE,eAAC2tI,GAAuB,CACtB9gI,SAAU3R,EAAM2R,SAChB0oG,qBAAsBr6G,EAAMq6G,sBACxB,mBAGR,CAACr6G,EAAM2R,SAAU3R,EAAMq6G,uBAGnBm9B,EAAmB1yI,WACvB,IACE,eAAC2vI,GAAmB,CAClBziI,UAAWhS,EAAMgS,UACjB2iI,sBAAuBphE,GAASxwD,EAAShR,0BAAgBwhE,EAAOjtE,KAC5D,eAGR,CAACyc,EAAU/iB,EAAMgS,UAAW1L,KAGxB,wBAAE2c,IAA4BjjB,EAG9By3I,GACJ,eAAC,GAAwB,CACvBvtH,gBAAiBlqB,EAAMkqB,gBAEvB7F,YAAarkB,EAAMolB,WAAW,GAAGlQ,MACjCk+H,yBAA0BhtI,GAAM2c,EAAS20H,8BAAmBpxI,EAAmBF,IAC/E0tI,iBAAkB9zI,EAAM8zI,kBACpB,WAIF6D,GAAc7yI,WAAc,KAChC,MAAM8L,EAAcwkI,EAChB3iG,KAAM4jG,WAAa,IAAMr2I,EAAMu2I,uBAC/Bv2I,EAAM4Q,YACV,OACE,eAAC,GAAqB,CACpB2jI,iBAAkB,IAAMxxH,EAASzS,+BACjCgkI,iBAAkBsD,GAAK70H,EAASxS,sBAAWqnI,IAC3CpD,qBAAsBoD,GAAK70H,EAAStS,0BAAemnI,IACnDhnI,YAAaA,EACbF,SAAU1Q,EAAM0Q,SAChByjI,OAAQiB,GACJ,WAGP,CAACryH,EAAUqyH,EAAcp1I,EAAMu2I,uBAAwBv2I,EAAM4Q,YAAa5Q,EAAM0Q,WAE7EmnI,GAA4C/yI,WAChD,MACEjB,MAAO,eACP0B,SAAUxB,IAAUk5C,KACpBx3C,KACE,eAACgc,GAAA,EAAQ,CACPpd,QAAS0wI,GACP/0I,EAAMk2I,wBACNl2I,EAAMs3I,yBAERz1H,sBAAsB,IAG1Bzb,GAAIK,KAAgBy1C,gBAEtB,CAACl8C,EAAMk2I,wBAAyBl2I,EAAMs3I,0BAGlC9yI,GAAOM,WAAc,IACM,CAAC+yI,KAG/B,CAACA,KAGEC,GAAa,IAAItzI,IAAMqjB,QAAO,QAAC,GAAEzhB,GAAI,UAAOA,GAAM8uI,GAAkBxuH,SAAStgB,OAE7E2xI,GAAejzI,eAClB4oI,IACC,MAAMsK,EAAU,KACdtK,EAAOuK,aAAaD,QAAQ,OAAQ,IAAIE,SAAM,EAAG,EAAGl4I,EAAMm4I,cAAgB,IAC1EzK,EAAO0K,SAAS7+E,IAAI,cAAey+E,IAGrCtK,EAAO0K,SAASj4E,GAAG,cAAe63E,KAEpC,CAACh4I,EAAMm4I,gBAGHE,GAAiBvzI,eACrB,CAACylB,EAAiBthB,KAChBga,GAAwBsH,GAExB,MAAMrd,EAAe,CACnBoM,KAAM5L,KAAKC,MACXlB,KAAM,YACNuX,KAAM/a,GAGR0a,EAAQzW,KAEV,CAAC+V,GAAyBU,IAGtB20H,GAAuBxzI,eAC1B2lB,IACC,MAAMvd,EAAe,CACnBoM,KAAM5L,KAAKC,MACXlB,KAAM,uBACNuX,KAAMyG,EAAUC,aAGlB/G,EAAQzW,KAEV,CAACyW,IAGG40H,GAA0BzzI,eAC7B2lB,IACC,MAAMG,EAAwBH,EAAUI,WAClCC,EAAuBL,EAAUK,cACvC,IAAKC,kBAAQH,EAAMI,MAAOJ,EAAMK,KAAM,CACpC,MAAM/d,EAAe,CACnBoM,KAAM5L,KAAKC,MACXlB,KAAM,qBACNuX,KAAM,CAAE4G,QAAOE,gBAGjBnH,EAAQzW,MAGZ,CAACyW,IAGGwB,GAAgCrgB,eACnCyP,IAEC,MAAMikI,EAAsBjkI,EAAYsT,QAAO4wH,KAAeA,IAAWzzI,OACrEwzI,EAAsB,IACxBvC,GAAkB,GACdZ,EAAS1sI,QAAQutI,yBAA2B,GAM9Cb,EAAS1sI,QAAQuuI,kBAAiB,IAGV,IAAxBsB,IACFvC,GAAkB,GAEd3zH,IAAgB7b,KAAgB0wI,kBAClC9B,EAAS1sI,QAAQ/E,wBACjByxI,EAAS1sI,QAAQuuI,kBAAiB,KAGtC7B,EAAS1sI,QAAQwc,8BAA8B5Q,KAEjD,CAAC+N,IAGGo2H,GAAevC,EAEf9qI,GAAmD,IACpD26B,IAAEqiF,KAAKroH,EAAO,kBAAmB,mBACpCgqB,cAAe,SACf5E,WAAYplB,EAAMolB,WAAWpiB,IAAIinB,KACjCE,0BAA4B7U,GAC1ByN,EAAS1N,gCAAsB/O,EAAmBgP,IACpDwT,mBACAsB,yBAA0B,CAACnT,EAAaoT,EAAalT,IACnD4L,EAAS/L,6BAAmB1Q,EAAmB2Q,EAAKoT,EAAKlT,IAC3DyjG,4BAA8BpjG,GAC5BuL,EAAShO,gCAAsByC,EAAMlR,IACvCqyI,0BAA4BC,GAC1B71H,EAAS81H,+BAAoBvyI,EAAmBsyI,IAClDvyI,SAAUgyI,GACV7tH,eAAgB8tH,GAChB3tH,kBAAmB4tH,GACnBO,OAAQ1D,GAAgBp1I,EAAMm4I,cAAgBJ,QAAevxI,EAC7D4I,cAAepP,EAAMk2I,wBACrB5jI,sBACAjD,cAAerP,EAAMs3I,wBACrBr0H,wBAAyBg0H,EACzB9xH,8BAA+BA,IAG3BxZ,GAAY,IACbq6B,IAAEqiF,KAAKroH,EAAO,SAAU,YAAa,iBAAkB,cAC1DorB,wBAAyB,IAAMrI,EAAS5R,gCAAsB7K,IAC9D+kB,sBAAuB,IAAMtI,EAAS1R,8BAAoB/K,IAC1DglB,sBAAwBC,GACtBxI,EAASnO,0BAAgB2W,EAAUjlB,IACrC8I,cAAepP,EAAMk2I,wBACrB7mI,cAAerP,EAAMs3I,wBACrBvyH,gBAAiBg0H,KAAoBhtI,KACrCitI,OAAQ12H,IAAgB7b,KAAgB0wI,gBACxC8B,YAAaP,GACbhtH,YAAa,CAACgtH,GAAe,KAAO17F,EAAYrxB,GAChDutH,iBAAkB9D,GAGdtqI,GAAe,CACnBtG,KAAM,IAWFonB,GAAiC,CACrChhB,gBAAiB,CACfue,cAAe,CACbuzB,EACAxqC,EACAikI,IAAyBiB,YAAiBp3I,EAAMk2I,yBAC5C,KACAl2I,EAAM2X,WACN6/H,EACAD,IAGRlsI,qBAAsBA,GACtBZ,8BAA+B4yC,GAC7Bt6B,EAASlR,kCAAwBwrC,EAAQ/2C,IAC3CqF,UAAWA,GACXb,aAAcA,GACdhF,kBAAmB9F,EAAM8F,kBACzBqE,iBAAkB,CAChBxE,cAAe2c,EACfjc,SAAU82C,EACV34C,KAAM,CACJqiB,kBAAmBriB,GACnBsiB,iBAAkB,IAEpBxgB,kBAAmB8uI,EAAe,OAAS,aAC3CtvI,kBAAmB9F,EAAM8F,mBAE3B4C,wBAAyB4Z,IAAgB7b,KAAgB0wI,iBAGrDrrH,GAA6C,CACjDzgB,qBAAsBA,GACtBM,UAAWA,GACXb,aAAcA,GACdihB,uBAAwB,CACtBC,sBAAuB,CACrB7C,cAAe,CACbuzB,EACAxqC,EACAylI,GACAvC,EAAe,KAAOqC,KAG1B9xI,cAAe2c,EACfjc,SAAU82C,EACV34C,KAAM,CACJqiB,kBAAmBixH,GACnBhxH,iBAAkB,IAEpBxgB,kBAAmB8uI,EAAe,OAAS,eAI/C,OAAOvyH,EACL,sBAAK5d,UAAWG,IAAW,aAAcyK,IAAQ8Q,KAAMk1H,EAAU,mBAAgBrvI,GAAW,SAC1F,eAACylB,GAAA,EAAe,IAAKH,OAGvB,eAAC,WAAO,CACN7mB,UAAWG,IAAW,aAAcyK,IAAQ8Q,KAAMk1H,EAAU,mBAAgBrvI,GAC5EmrC,OAAQA,GACRC,SAAUA,EAAS,SAEnB,eAACjqC,GAAA,EAAS,IAAKikB,QCloBrB,MAAMutH,GAAiE/sH,IAAK,IACvE4Z,IAAEqiF,KACHj8F,EAAMG,WAAW8pH,WACjB,uBACA,aACA,kBACA,WACA,YACA,kBACA,YACA,cACA,kBACA,SACA,YACA,oBACA,mBACA,cAEFzlI,YAAawb,EAAMiqH,WAAWzlI,YAC9BF,SAAU0b,EAAMiqH,WAAW3lI,SAC3BwlI,wBAAyBrxH,UAAQC,MACjCwyH,wBAAyBlrH,EAAMG,WAAW8pH,WAAWl2I,QAAQa,QAC7D+1I,oBAAqB3qH,EAAMC,QAAQjd,cACnC4nI,oBAAqB5qH,EAAMC,QAAQhd,cACnC+pI,gBAAiBhtH,EAAMC,QAAQgtH,WAC/BC,gBAAiBltH,EAAMiqH,WAAWiD,gBAClCC,oBAAqBntH,EAAMC,QAAQktH,oBACnCC,eAAgBptH,EAAMiqH,WAAWmD,iBAG7BlzI,GAAuC,aAEvCmzI,GAA6D12H,GACjE8J,YACE,CACEwtF,qBAAuB1oG,GAAqBD,yBAAeC,EAAUrL,IACrEgJ,oBAAqB,CAAC6C,EAAkBnR,IACtCkR,wBAAcC,EAASnR,EAASsF,IAClC2c,wBAA0B6J,GAAgB3Y,4BAAkB2Y,EAAKxmB,IACjE6e,8BAAgC5Q,GAC9BD,8BAAoBC,EAAajO,IACnCnC,eAAgB,IAAMsP,mBAASnN,IAC/B1C,sBAAuB,IAAMqP,0BAAgB3M,IAC7C4wI,iBAAmBv/H,GAAwBD,2BAAiBC,EAAYrR,KAE1Eyc,GAQW22H,OALa,KAC1B,MAAMC,EAAY37F,YAAW7xB,YAAQgtH,GAAiBM,GAAzBttH,CAA6CgpH,KAC1E,OAAO,eAACwE,EAAS,CAACrzI,kBAAmBA,MC3BxBszI,OAtCW,KACxB,MAAM30H,EAAO4a,aAAiB98B,GAASA,EAAMspB,QAAQpH,OAErD,OACE,sBAAKhgB,UAAU,WAAU,SACvB,eAAC,IAAI,CAACA,UAAU,mBAAkB,SAChC,sBAAK+E,MAAO,CAAEqoC,UAAW,OAAQpoC,QAAS,OAAQ4nC,eAAgB,UAAW,SAC3E,iCACE,gBAAC,IAAE,yBAAa5oB,KAAU4wH,+BAC1B,0DACwB,kCAAS50H,IAAc,KAAGgE,KAAU4wH,4BAA6B,IAAG,4DAG5F,sBAAK7vI,MAAO,CAAEC,QAAS,OAAQ4nC,eAAgB,UAAW,SACxD,gBAAC,KAAE,CAAC7nC,MAAO,CAAEixB,UAAW,QAAS,UAC/B,iJAIA,iFACiD,IAC/C,oBAAGuX,KAAMC,KAAMqnG,qBAAqB,kBAAS,8CAG/C,8FAC8D,IAC5D,oBAAGtnG,KAAMC,KAAMsnG,sBAAsB,kBAAS,6D,qBCgCjDC,OAzCiCh6I,IAC9C,MAAM,KAAEm2B,GAASn2B,EAEXi6I,EAAc9jH,EAAK5U,OAAS,GAAiB,IAAZ4U,EAAK7U,GAEtC44H,EACJ,uBAAKj1I,UAAU,aAAY,UACzB,sBAAKA,UAAU,QAAO,gBACtB,uBAAKA,UAAU,QAAO,UACnBkxB,EAAK7U,GAAE,MAAK6U,EAAK5U,SAEpB,eAAC,IAAW,CACV8d,SAAS,EACTp6B,UAAW,YAAcjF,EAAMm6I,YAAYn6I,EAAMo6I,QAAQjkH,EAAK7U,GAAI6U,EAAK5U,QACvE+d,SAAS,EACTpqB,MAAOlV,EAAMo6I,QAAQjkH,EAAK7U,GAAI6U,EAAK5U,YAKzC,OAEE,cADA,CACC,IAAO,CACNtc,UAAU,0BAEVnD,OAAO,SACP+vB,GAAK,YAAW7xB,EAAMknB,YAAYC,aAAmBgP,EAAK1pB,SAAS0pB,EAAK/vB,OACxEi0I,gBAAgB,0BAAyB,SAEzC,eAAC,IAAO,CACNp1I,UAAU,0BAEVnB,KAAM9D,EAAMs6I,WAAWnkH,EAAK1pB,MAC5B7F,MAAOuvB,EAAKvvB,MAAM,SAEjBqzI,EAAc,GAAKC,GAJd,GAAE/jH,EAAKvvB,SAASuvB,EAAK/vB,OAPvB,GAAE+vB,EAAKvvB,SAASuvB,EAAK/vB,OCuJlBm0I,OAlKyBv6I,IAGtC,MAAM,KAAEilB,EAAI,KAAEuP,EAAI,oBAAExB,EAAmB,yBAAE2b,EAAwB,GAAErtB,EAAE,SAAE4F,GACrE2Y,aAAiBzT,GAASA,EAAMC,UAE5BtJ,EAAWC,cACjB1D,qBAAU,KACJ2F,GAAQuP,IAASxB,GAEnBjQ,EAAS4R,wCAEV,CAAC3B,EAAqBjQ,EAAUkC,EAAMuP,EAAMlT,IAE/ChC,qBAAU,KACJ4H,IAAa5F,GACfyB,EAASy3H,4BAEV,CAACtzH,EAAUnE,EAAUzB,IAExB,MAAOm5H,EAAUC,GAAe31I,mBAASkgB,GAAQuP,GAAQxB,GAOzD,IAAI3uB,EAEJ,GAPAib,qBAAU,KACRo7H,EAAYz1H,GAAQuP,GAAQxB,KAC3B,CAACA,EAAqB/N,EAAMuP,IAK1BimH,EAEE,CAEL,MAAME,EAAY3nH,EAAqBnL,QACrCsO,GAAQA,EAAKjF,SAAWC,IAAmBvD,YAC3C5oB,OAEI41I,EAASt5H,GAAM,EACfmd,EAAqBxV,KAAUwV,mBAC/Bo8G,EAA8B,IAArBp8G,EAETq8G,EACJ,sBAAK71I,UAAU,iBAAgB,SAC7B,uBAAKA,UAAU,mBAAkB,UAC/B,sBAAKA,UAAU,OAAM,SAAEggB,IACvB,sBAAKhgB,UAAU,OAAM,SAAEuvB,SAK7B,GAAkB,IAAdmmH,EACFt2I,EACE,uBAAKY,UAAU,kBAAiB,UAC7B61I,EACD,sBAAK71I,UAAU,sBAAqB,+EAKnC,CAEL,MAAMm1I,EAAU,CAAC5kE,EAAaulE,IACrBA,GAAO,GAAKvlE,EAAMulE,EAAM,EAAI,EAAIvlE,EAAMulE,EAIzCZ,EAAel2G,GACZA,EAAO,EACV,GACAA,GAAQ,GACR,sBACAA,GAAQ,IACR,wBACA,oBAIAq2G,EAAchtH,IAClB,MAAM0tH,EAAoB,CACxBj3I,IAAUuvB,MACVvvB,IAAUk3I,UACVl3I,IAAUm3I,oBACVn3I,IAAUo3I,WACVp3I,IAAUwlC,QAEZ,GAAIoF,EAA0B,CAC5B,MAAMxpC,EAAQwpC,EAAyBytC,WAAUg/D,GAAKA,EAAE3uI,OAAS6gB,IAIjE,OAAOnoB,EAAQ,EAAI61I,EAAM71I,GAASpB,IAAUs3I,MAI5C,OAAOt3I,IAAUs3I,OAKfC,EAAkBtoH,EACrBnL,QACCsO,GACEA,EAAKjF,SAAWC,IAAmBvD,YAClCuI,EAAK7G,gBAAkBE,IAAgB1B,QACtCqI,EAAK7G,gBAAkBE,IAAgB+rH,YAE5Cv4I,KAAI,CAACwf,EAAYrd,IAEd,eAAC,GAAW,CAEVgxB,KAAM3T,EACN43H,QAASA,EACTD,YAAaA,EACbG,WAAYA,EACZpzH,SAAUA,GALL/hB,KAUbd,EACE,uBAAKY,UAAU,kBAAiB,UAC7B61I,EAED,sBAAK71I,UAAU,mBAAkB,SAC/B,uBAAKA,UAAU,aAAY,UACzB,eAAC,IAAO,CACNA,UAAW,kBAAoBk1I,EAAYC,EAAQQ,EAAQC,IAC3Dr1I,KAAM,IACN0P,MAAOklI,EAAQQ,EAAQC,KAEzB,sBAAK51I,UAAU,OAAM,yBACrB,uBAAKA,UAAU,cAAa,UACzB21I,EAAM,MAAKC,EAAM,OAEpB,uBAAK51I,UAAU,aAAY,WAA6B,IAA1Bm1I,EAAQQ,EAAQC,IAAeW,QAAQ,GAAE,YAG3E,uBAAKv2I,UAAU,oBAAmB,cAC9B41I,EAAM,uCAAsCp8G,KAEhD,sBAAKx5B,UAAU,mBAAkB,SAAEq2I,aA9GzCj3I,EAAU,eAAC,IAAa,CAACglB,YAAY,aAAavlB,KAAM,eAAC,IAAO,MAoHlE,OACE,eAAC,IAAM,CACLmB,UAAU,UACVnB,KAAMC,IAAU03I,KAChB7xH,oBAAoB,EACpBnO,OAAQzb,EAAMyb,OACdoO,QAAS7pB,EAAM6pB,QACfjjB,MAAM,eACN5H,SAAS,OACTwG,KAAMk2I,IAAWtH,MAAM,SAEtB/vI,KCrJQs3I,OA/B+B37I,GAC5C,eAAC,IAAM,CACLiF,UAAU,QACVnB,KAAMC,IAAU8Y,KAChB+M,oBAAoB,EACpBnO,OAAQzb,EAAMyb,OACdoO,QAAS7pB,EAAM6pB,QACfjjB,MAAM,QAAO,SAEb,sBAAK3B,UAAW4K,IAAQia,YAAY,SAClC,uBAAK7kB,UAAU,MAAK,UAClB,sCACM,gDAAqB,uNAEqC,IAC9D,oBAAGutC,KAAMC,KAAMmpG,WAAW,oBAAY,8BAA2B,IACjE,oBAAGppG,KAAMC,KAAMopG,SAAS,mFAEpB,OAGN,yHAC0F,IACxF,oBAAGrpG,KAAMC,KAAM+pF,UAAU,4BAAmB,yDACrC,oBAAGhqF,KAAMC,KAAMqpG,MAAM,yBAAgB,oCCiBvCC,OArCgC/7I,IAC7C,MAAM,QAAEg8I,GAAYh8I,EAEdkM,EAAU8vI,EAAQh5I,KAAIi5I,IAAM,CAChC/mI,MAAO+mI,EAAO/0H,SACdrjB,MAAOo4I,EAAO54F,WAAW06B,OAAQk+D,EAAO14F,SAA2B,GAAhB,eACnDv8C,UAAWi1I,EAAO14F,UAAY04F,EAAOznH,OAASC,IAAKqa,UAQrD,OACE,eAAC,IAAM,CACL7pC,UAAU,aACVnB,KAAMC,IAAUm4I,WAChBtyH,oBAAoB,EACpBnO,OAAQzb,EAAMyb,OACdoO,QAAS7pB,EAAM6pB,QACfjjB,MAAM,aAAY,SAElB,uBAAK3B,UAAW4K,IAAQia,YAAY,UAClC,iEACA,eAAC,IAAU,CACT5U,MAAOlV,EAAMknB,SACbhb,QAASA,EACTM,MAAI,EACJnG,SApBiBiwC,IACvB9uB,KAAQjB,KAAM,YAAW+vB,EAAEgmE,cAAcpnG,SACzClV,EAAM6pB,WAmBA7iB,SAAUg1I,EAAQh3I,QAAU,UC2NvBm3I,OA3OqCn8I,IAClD,MAAOulD,EAAc62F,GAAmBt3I,WAA0C,CAChFu+C,WAAY,GACZC,gBAAiB,GACjBC,UAAU,EACVC,YAAY,EACZC,oBAAoB,EACpBC,kBAAkB,EAClBt0C,cAAeyV,UAAQC,MACvBzV,cAAepO,UAAQC,QACvByiD,eAAgB,MAGXT,EAA2BC,GAChCr+C,WAAwCk+C,GAAwBI,OAE5Di5F,EAAuB,CAAC,CAAEnnI,MAAO2P,UAAQC,QAsBzCq4B,EAAer4C,eACnB,CACEiiB,EACAC,EACAle,KAEIie,IAAaC,GAGjBm8B,EAA6Bp8B,KAE/B,CAACo8B,IAGH,OACE,eAAC,IAAM,CACLl+C,UAAU,gBACVnB,KAAMC,IAAUy8E,IAChB52D,oBAAoB,EACpBiuB,sBAAsB,EACtBp8B,OAAQzb,EAAMyb,OACdoO,QAAS7pB,EAAM6pB,QACfjjB,MAAM,gBAAe,SAErB,uBAAK3B,UAAW4K,IAAQia,YAAY,UAClC,+BACE,uGAEF,wBACA,eAAC,IAAS,CACRk6B,WAAW,sEACXngD,MAAM,cACNy4I,UAAU,eACVjhG,SAAS,aAAY,SAErB,eAAC,IAAU,CACTj1C,GAAG,aACH8O,MAAOqwC,EAAalC,WACpBh9C,SAAUiwC,GACR8lG,EAAgB,IACX72F,EACHlC,WAAY/M,EAAEx0C,OAAOoT,YAK7B,eAAC,IAAS,CACR8uC,WAAW,iFACXngD,MAAO,oBACPy4I,UAAU,aACVjhG,SAAS,kBAAiB,SAE1B,eAAC,IAAU,CACTj1C,GAAG,kBACH8O,MAAOqwC,EAAajC,gBACpBj9C,SAAUiwC,GACR8lG,EAAgB,IACX72F,EACHjC,gBAAiBhN,EAAEx0C,OAAOoT,YAKlC,gBAAC,IAAS,CACR8uC,WAAW,+DACX3I,SAAS,iBAAgB,UAEzB,eAAC,IAAI,CAACkhG,QAAQ,OAAM,kCACpB,eAAC,IAAI,CAACA,QAAQ,OAAOt3I,UAAU,gBAAe,wBAG9C,gBAAC,IAAI,CACHU,cAAeu9C,EACf78C,SAAU82C,EACVl4C,UAAU,wBAAuB,UAEjC,eAAC,IAAG,CAACmB,GAAI48C,GAAwBI,MAAOx8C,MAAM,UAC9C,eAAC,IAAG,CAACR,GAAI48C,GAAwBiB,QAASr9C,MAAM,eAEjDs8C,IAA8BF,GAAwBI,OACrD,eAAC,IAAQ,CACPh9C,GAAG,iBACHnB,UAAU,iBACVuH,MAAM,EACN0I,MAAOqwC,EAAa5B,eACpBt9C,SAAUiwC,GACR8lG,EAAgB,IACX72F,EACH5B,eAAgBrN,EAAEx0C,OAAOoT,UAKhCguC,IAA8BF,GAAwBiB,SACrD,sBAAKh/C,UAAU,iBAAgB,SAC7B,eAACwc,GAAA,EAAQ,CAACpd,QAASkhD,EAAa5B,gBAAkB,GAAI9hC,sBAAoB,SAKhF,uBAAK5c,UAAU,oBAAmB,UAChC,iCACE,eAAC,IAAM,CACLm1B,QAASmrB,EAAahC,SACtBxD,QAAM,EACNl8C,MAAM,WACNwC,SAAUiwC,GACR8lG,EAAgB,IACX72F,EACHhC,SAAWjN,EAAEx0C,OAA4Bs4B,YAI/C,eAAC,IAAM,CACLA,QAASmrB,EAAa9B,mBACtB1D,QAAM,EACNl8C,MAAM,sBACNwC,SAAUiwC,GACR8lG,EAAgB,IACX72F,EACH9B,mBAAqBnN,EAAEx0C,OAA4Bs4B,eAK3D,iCACE,eAAC,IAAM,CACLA,QAASmrB,EAAa/B,WACtBzD,QAAM,EACNl8C,MAAM,cACNwC,SAAUiwC,GACR8lG,EAAgB,IACX72F,EACH/B,WAAalN,EAAEx0C,OAA4Bs4B,YAKjD,eAAC,IAAM,CACLA,QAASmrB,EAAa7B,iBACtB3D,QAAM,EACNl8C,MAAM,oBACNwC,SAAUiwC,GACR8lG,EAAgB,IACX72F,EACH7B,iBAAmBpN,EAAEx0C,OAA4Bs4B,kBAM3D,iCACE,eAAC,IAAS,CACRv2B,MAAM,yBACNy4I,UAAU,0BACVjhG,SAAS,iBAAgB,SAEzB,eAAC,IAAU,CACTj1C,GAAG,iBACH8F,QAASmwI,EACTnnI,MAAOqwC,EAAan2C,cACpB/I,SAAUiwC,IACR8lG,EAAgB,IACX72F,EACHn2C,cAAey6C,SAASvT,EAAEx0C,OAAOoT,UAGrC1I,MAAI,MAGR,eAAC,IAAS,CACR3I,MAAM,yBACNy4I,UAAU,0BACVjhG,SAAS,iBAAgB,SAEzB,eAAC,IAAU,CACTj1C,GAAG,iBACH8F,SArMkBiG,EAqMYozC,EAAan2C,cApMrDI,IACGqY,QAAOyuB,GAAKA,EAAEnkC,UAAYA,IAC1BnP,KAAIszC,IACI,CACLzyC,MAAOyyC,EAAEt1C,QAAQo2E,QAAQ,OAAOgkE,GAAKA,EAAE1gI,gBACvCxF,MAAOohC,EAAEt1C,aAgMLkU,MAAOqwC,EAAal2C,cACpBhJ,SAAUiwC,IACR8lG,EAAgB,IACX72F,EACHl2C,cAAeinC,EAAEx0C,OAAOoT,SAG5B1I,MAAI,SAIV,sBAAKvH,UAAU,iCAAgC,SAC7C,eAAC,IAAM,CAAC6J,KAAK,gBAAgB7K,QAxMf,KAEY,KAA5BshD,EAAalC,YAIjBrjD,EAAMw8I,mBAAmBj3F,GACzBvlD,EAAM6pB,WAJJlqB,aAAmB,0CAbOwS,OCFjBsqI,OAhC8Bz8I,IAC3C,MAAM2jD,EAAiB9jB,aAAiB98B,GAASA,EAAMspB,QAAQs3B,iBAE/D,OACE,eAAC,IAAM,CACL1+C,UAAU,OACVnB,KAAMC,IAAU4lB,MAChBC,oBAAoB,EACpBnO,OAAQzb,EAAMyb,OACdoO,QAAS7pB,EAAM6pB,QACfjjB,MAAM,OAAM,SAEZ,sBAAK3B,UAAW4K,IAAQia,YAAY,SACjC65B,EACC,eAACliC,GAAA,EAAQ,CAACpd,QAASs/C,EAAgB9hC,sBAAoB,IAEvD,uCACE,8EAC8C,+CAAqB,IAAC,IAClE,gDAAsB,QAAI,iDAAsB,mCAElD,0IAEsB,IACpB,oBAAG2wB,KAAMC,KAAMiqG,aAAa,0DAAiD,e,UCoC5EC,OA7DiC38I,IAC9C,MAAO48I,EAAmBC,GAAwBhnH,qBAAWinH,MAEvD5wI,EAAU2R,mBACd,IAAM,CACJ,CACEha,MAAO,OACPqR,MAAO6nI,KAAchxI,MAEvB,CACElI,MAAO,MACPqR,MAAO6nI,KAAcC,KAEvB,CACEn5I,MAAO,QACPqR,MAAO6nI,KAAcE,SAGzB,IAWF,OACE,eAAC,IAAM,CACLh4I,UAAU,WACVnB,KAAMC,IAAUm5I,IAChBtzH,oBAAoB,EACpBnO,OAAQzb,EAAMyb,OACdoO,QAAS7pB,EAAM6pB,QACfjjB,MAAM,WAAU,SAEhB,sBAAK3B,UAAW4K,IAAQia,YAAY,SAClC,gBAAC,IAAS,CAACjmB,MAAM,mBAAmBw3C,SAAS,iBAAiB0E,QAAM,YAClE,eAAC,IAAU,CACT35C,GAAG,iBACH8F,QAASA,EACTgJ,MAAO0nI,EAAkBO,cACzB92I,SAvBqEiwC,IAC7EumG,EAAqB,IAChBD,EAEHO,cAAe7mG,EAAEx0C,OAAOoT,WAqBpB,eAAC,IAAQ,CACPlW,SAAU2d,IAAgBzd,IAC1B+F,UAAU,uBACVZ,QACE,gGACD,SAED,eAAC,IAAI,CAACP,KAAK,mBCtCvB,MAmFMs5I,GAAaxzF,GACjBA,EAAIwtB,QAAQ,UAAUimE,GAAOA,EAAI/nE,OAAO,GAAG56D,cAAgB2iI,EAAIxoF,OAAO,GAAG7gC,gBAE5DspH,OAtF2Bt9I,IACxC,MAAOu9I,EAAgBC,GAAqBz4I,oBAAS,IAC9C04I,EAAaC,GAAkB34I,oBAAS,IACxC44I,EAAYC,GAAiB74I,oBAAS,IACtC84I,EAAeC,GAAoB/4I,oBAAS,IAC5Cg5I,EAAiBC,GAAsBj5I,oBAAS,IAChDk5I,EAAoBC,GAAyBn5I,oBAAS,GAiC7D,MAAMo5I,EAAqB,KACzBX,GAAkBY,IAAaA,KAG3BC,EAAkB,KACtBX,GAAeU,IAAaA,KAGxBE,EAAiB,IAAMV,GAAcQ,IAAaA,IAElDG,EAAoB,IAAMT,GAAiBM,IAAaA,IAExDI,EAAsB,IAAMR,GAAmBI,IAAaA,IAE5DK,EAAyB,IAAMP,GAAsBE,IAAaA,IAExE,OACE,uCACE,eAAC,KAAQ,CAAC/5I,QAjDd,SAAcrE,GACZ,MAAM0+I,EACJ1+I,EAAMilB,MAA0B,MAAlBjlB,EAAMknB,SAClB,eAAC,IAAQ,CAACpjB,KAAMC,IAAU03I,KAAMx3I,QAASs6I,EAAmBzvI,KAAMsuI,GAAUp9I,EAAMilB,QAChF,KAEA05H,EAAY3+I,EAAMilB,KACtB,eAAC,IAAQ,CAACnhB,KAAMC,IAAUm4I,WAAYj4I,QAASu6I,EAAqB1vI,KAAK,eACvE,KAEE8vI,EAAe5+I,EAAMilB,KACzB,eAAC,IAAQ,CAACnhB,KAAMC,IAAUy8E,IAAKv8E,QAASw6I,EAAwB3vI,KAAK,kBACnE,KAEE+vI,EAAS7+I,EAAMilB,KACnB,eAAC,IAAQ,CAACnhB,KAAMC,IAAU+6I,QAAShwI,KAAK,SAAS7K,QAASjE,EAAM++I,eAC9D,KAEJ,OACE,gBAAC,IAAI,WACFL,EACAC,EACAC,EACD,eAAC,IAAQ,CAAC96I,KAAMC,IAAUm5I,IAAKj5I,QAASk6I,EAAoBrvI,KAAK,aACjE,eAAC,IAAQ,CAAChL,KAAMC,IAAU8Y,KAAM5Y,QAASo6I,EAAiBvvI,KAAK,UAC/D,eAAC,IAAQ,CAAChL,KAAMC,IAAU4lB,MAAO1lB,QAASq6I,EAAgBxvI,KAAK,SAC9D+vI,KAuBgB5iD,CAAKj8F,GAAQm5C,kBAAkB,EAAOz8B,UAAWzd,IAASisH,OAAO,SAClF,eAACj/G,EAAA,EAAa,CAACnI,KAAMC,IAAUsX,eAEjC,eAAC,GAAgB,CAACI,OAAQ8hI,EAAgB1zH,QAASs0H,IACnD,eAAC,GAAa,CAAC1iI,OAAQgiI,EAAa5zH,QAASw0H,IAC7C,eAAC,GAAY,CAAC5iI,OAAQkiI,EAAY9zH,QAASy0H,IAC1Ct+I,EAAMilB,KACL,eAAC,GAAe,CACdxJ,OAAQsiI,EACRl0H,QAAS20H,EACTxC,QAASh8I,EAAMg8I,QACf90H,SAAUlnB,EAAMknB,WAEhB,KACHlnB,EAAMilB,KACL,eAAC,GAAoB,CACnBxJ,OAAQwiI,EACRp0H,QAAS40H,EACTjC,mBAAoBx8I,EAAMw8I,qBAE1B,KACHx8I,EAAMilB,KAAO,eAAC,GAAO,CAACxJ,OAAQoiI,EAAeh0H,QAAS00H,IAAwB,SCvFrF,MAkGavD,GAAoB,CAC/Bj3I,IAAUuvB,MACVvvB,IAAUk3I,UACVl3I,IAAUm3I,oBACVn3I,IAAUo3I,WACVp3I,IAAUwlC,OACVxlC,IAAUmvI,MACVnvI,IAAUi7I,SACVj7I,IAAUk7I,YAGGC,OA7GiDl/I,IAAK,aACnE,gBAAC,IAAM,CAACiF,UAAU,iCAAgC,UAChD,eAAC,IAAW,CAACijD,MAAOi3F,KAAUviI,KAAK,SACX,QADW,EAChC5c,EAAM8lC,uBAAe,aAArB,EAAuB9iC,KAAI,CAACsqB,EAAgBsQ,IAC3C,gBAAC,IAAO,CACN/L,GAAK,YAAW7xB,EAAMknB,YAAYC,aAAmBmG,KACrD+sH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SAAS,UAG9E,eAAC,IAAI,CAAChM,KAAMk3I,GAAMp9G,KAClB,sBAAK34B,UAAU,yCAAwC,SAAEqoB,IACzD,eAAC,GAA0B,CACzBW,mBAAoBZ,GAA0BC,GAC9Ce,cAAc,MANXuP,OAWV59B,EAAMw0B,OAASC,IAAKqa,OAAS9uC,EAAMw0B,OAASC,IAAKsa,MAChD,gBAAC,IAAW,CAACmZ,MAAOi3F,KAAUrwH,MAAM,UAClC,gBAAC,IAAO,CACN+C,GAAK,YAAW7xB,EAAMknB,yBACtBmzH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SAAS,UAE9E,eAAC,IAAI,CAAChM,KAAMC,IAAUs7I,YACtB,sBAAKp6I,UAAU,yCAAwC,+BAGzD,gBAAC,IAAO,CACN4sB,GAAK,YAAW7xB,EAAMknB,qBACtBmzH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SAAS,UAE9E,eAAC,IAAI,CAAChM,KAAMC,IAAUqkC,QACtB,sBAAKnjC,UAAU,yCAAwC,0BAGzD,gBAAC,IAAO,CACN4sB,GAAK,YAAW7xB,EAAMknB,sBACtBmzH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SAAS,UAE9E,eAAC,IAAI,CAAChM,KAAMC,IAAUu7I,eACtB,sBAAKr6I,UAAU,mDAAkD,2BAGlEjF,EAAMw0B,OAASC,IAAKqa,OACnB,gBAAC,IAAO,CACNjd,GAAK,YAAW7xB,EAAMknB,yBACtBmzH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SAAS,UAE9E,eAAC,IAAI,CAAChM,KAAMC,IAAUk7I,aACtB,sBAAKh6I,UAAU,yCAAwC,+BAI3D,gBAAC,IAAO,CACN4sB,GAAK,YAAW7xB,EAAMknB,mBACtBmzH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SAAS,UAE9E,eAAC,IAAI,CAAChM,KAAMC,IAAUukC,WACtB,sBAAKrjC,UAAU,mDAAkD,qBACjE,eAAC,GAA0B,CACzBgpB,mBAAoBZ,GAA0B,WAC9CgB,cAAc,OAIlB,gBAAC,IAAO,CACNwD,GAAK,YAAW7xB,EAAMknB,0BACtBmzH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SAAS,UAE9E,eAAC,IAAI,CAAChM,KAAMC,IAAUmiB,QACtB,sBAAKjhB,UAAU,mDAAkD,gCAGlEjF,EAAMw0B,OAASC,IAAKqa,OACnB,gBAAC,IAAO,CACNjd,GAAK,YAAW7xB,EAAMknB,sBACtBmzH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SAAS,UAE9E,eAAC,IAAI,CAAChM,KAAMC,IAAUw7I,WACtB,sBAAKt6I,UAAU,6DAA4D,+BAM/E,SCuCOu6I,OAvHiEx/I,IAAK,aACnF,gBAAC,IAAM,CACLyb,OAAQzb,EAAMyb,OACdzc,SAAS,OACT6qB,QAAS7pB,EAAM6pB,QACfjjB,MAAM,GACN3B,UAAW4K,IAAQ8Q,KAAK,UAEvB3gB,EAAMw0B,KACgB,QADZ,EACTx0B,EAAM8lC,uBAAe,aAArB,EAAuB9iC,KAAI,CAACsqB,EAAgBsQ,IAC1C,gBAAC,IAAO,CACN/L,GAAK,YAAW7xB,EAAMknB,YAAYC,aAAmBmG,KACrD+sH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IACT,8BACAyK,IAAQuvI,OACRvvI,IAAQC,QACRD,IAAQ0Z,OAEVtlB,QAASjE,EAAM6pB,QAAQ,UAGvB,eAAC,IAAI,CAAC/lB,KAAMk3I,GAAMp9G,KAClB,+BAAMtQ,IACN,eAAC,GAA0B,CACzBW,mBAAoBZ,GAA0BC,GAC9Ce,cAAc,MANXuP,KAWT,+BAGD59B,EAAMw0B,MAAQx0B,EAAM0jD,kBACnB,gBAAC,IAAO,CACN22F,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IACT,8BACAyK,IAAQuvI,OACRvvI,IAAQC,QACRD,IAAQ0Z,OAEVsI,GAAK,YAAW7xB,EAAMknB,sBACtBjjB,QAASjE,EAAM6pB,QAAQ,UAEvB,eAAC,IAAI,CAAC/lB,KAAMC,IAAU07I,QACtB,iDAIHz/I,EAAMw0B,MACL,gBAAC,IAAO,CACN6lH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IACT,8BACAyK,IAAQuvI,OACRvvI,IAAQC,QACRD,IAAQ0Z,OAEVsI,GAAG,cACH5tB,QAASjE,EAAM6pB,QAAQ,UAEvB,eAAC,IAAI,CAAC/lB,KAAMC,IAAUO,OACtB,iDAIH2kB,KAAUy2H,yBACT,gBAAC,IAAO,CACNrF,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IACT,6BACAyK,IAAQuvI,OACRvvI,IAAQC,QACRD,IAAQ0Z,OAEVsI,GAAG,qBACH5tB,QAASjE,EAAM6pB,QAAQ,UAEvB,eAAC,IAAI,CAAC/lB,KAAMC,IAAU8hB,YACtB,sBAAK5gB,UAAU,qBAAoB,0BAGtCjF,EAAMilB,MACL,gBAAC,IAAO,CACNo1H,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IACT,6BACAyK,IAAQuvI,OACRvvI,IAAQC,QACRD,IAAQ0Z,OAEVsI,GAAK,WACL5tB,QAASjE,EAAM6pB,QAAQ,UAEvB,eAAC,IAAI,CAAC/lB,KAAMC,IAAU47I,OACtB,sBAAK16I,UAAU,qBAAoB,wBAGtCjF,EAAMw0B,MAAQx0B,EAAMyjD,oBACnB,gBAAC,IAAO,CACN42F,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IACT,8BACAyK,IAAQuvI,OACRvvI,IAAQC,QACRD,IAAQ0Z,OAEVsI,GAAK,YAAW7xB,EAAMknB,wBACtBjjB,QAASjE,EAAM6pB,QAAQ,UAEvB,eAAC,IAAI,CAAC/lB,KAAMC,IAAU+gC,WACtB,uDC7FR,MAAM86G,GAA6B,6CAC7BC,GAAmC,CAACxjG,EAAqB3D,MACxD2D,IAIDujG,GAA2B78C,KAAKrqD,EAASi9F,UAkThCmK,OA3SqC9/I,IAAU,IAAD,EAC3D,MAAO+/I,EAAoBC,GAAyBl7I,YAAe,IAC7D,mBAAE+d,GAAuBC,cACzB41B,EAAWonF,cAEjBt3H,KAAkBC,sBAGlB,MAAMw3I,EAA2Bh3H,KAAUy2H,wBACzC78H,EACE,qCACE,gBAAC,IAAW,CAACqlC,MAAOi3F,KAAUviI,KAAK,UACjC,eAAC,IAAM,CACL3Y,QAAS,IAAM+7I,GAAuBD,GACtCj8I,KAAMC,IAAUm8I,KAChB9xH,OAAO,EACPpiB,SAAS,IAEX,gBAAC,IAAO,CACN/G,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SACrE+hB,GAAG,IAAG,UAEN,eAAC,IAAI,CAAC/tB,KAAMC,IAAUo8I,iBACtB,eAAC,IAAa,CAACn2I,MAAO,CAAEo2I,cAAe,OAAQ,+BAEjD,gBAAC,IAAM,CACL3kI,OAAQskI,EACR/gJ,SAAS,OACT6qB,QAAS,IAAMm2H,GAAsB,GACrCp5I,MAAM,GACN3B,UAAW4K,IAAQ8Q,KAAK,UAExB,gBAAC,IAAO,CACN05H,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IACT,8BACAyK,IAAQuvI,OACRvvI,IAAQC,QACRD,IAAQ0Z,OAEVsI,GAAG,cACH5tB,QAAS,IAAM+7I,GAAsB,GAAO,UAE5C,eAAC,IAAI,CAACl8I,KAAMC,IAAUO,OACtB,iDAEF,gBAAC,IAAO,CACN+1I,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IACT,8BACAyK,IAAQuvI,OACRvvI,IAAQC,QACRD,IAAQ0Z,OAEVsI,GAAG,8BACH5tB,QAAS,IAAM+7I,GAAsB,GAAO,UAE5C,eAAC,IAAI,CAACl8I,KAAMC,IAAU8hB,YACtB,wDAMR,gBAAC,IAAW,CAACqiC,MAAOi3F,KAAUviI,KAAK,UACjC,gBAAC,IAAO,CACNy9H,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,8BAA+ByK,IAAQuvI,OAAQvvI,IAAQC,SAC7E+hB,GAAG,cAAa,UAEhB,eAAC,IAAI,CAAC/tB,KAAMC,IAAUO,OACtB,iDAEF,gBAAC,IAAO,CACN+1I,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,8BAA+ByK,IAAQuvI,OAAQvvI,IAAQC,SAC7E+hB,GAAG,qBAAoB,UAEvB,eAAC,IAAI,CAAC/tB,KAAMC,IAAU8hB,YACtB,mDAKN,eAAC,IAAW,CAACqiC,MAAOi3F,KAAUviI,KAAK,SACjC,gBAAC,IAAO,CACNy9H,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,8BAA+ByK,IAAQuvI,OAAQvvI,IAAQC,SAC7E+hB,GAAG,cAAa,UAEhB,eAAC,IAAI,CAAC/tB,KAAMC,IAAUO,OACtB,mDAMA+7I,EACJ,gBAAC,IAAW,CAACn4F,MAAOi3F,KAAUviI,KAAK,WAC/B5c,EAAMw0B,MAAQvL,KAAUy2H,0BACxB,eAAC,IAAM,CACLz7I,QAAS,IAAM+7I,GAAuBD,GACtCj8I,KAAMC,IAAUm8I,KAChB9xH,OAAO,EACPpiB,SAAS,IAIb,gBAAC,IAAO,CACN/G,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SACrEuqI,gBAAiBxqI,IAAQ8yB,OACzB9Q,GAAsB,MAAlB7xB,EAAMknB,SAAmB,WAAc,YAAWlnB,EAAMknB,WAAW,UAEvE,eAAC,IAAI,CAACpjB,KAAMC,IAAUo8I,iBACtB,eAAC,IAAa,CAACn2I,MAAO,CAAEo2I,cAAe,OAAQ,SAC5CpgJ,EAAMsjD,iBAAmB,6BAI5BtjD,EAAMw0B,MAAQvL,KAAUy2H,0BACxB,eAAC,GAA2B,CAC1Bz6H,KAAMjlB,EAAMilB,KACZuP,KAAMx0B,EAAMw0B,KACZtN,SAAUlnB,EAAMknB,SAChBu8B,mBAAoBzjD,EAAMyjD,mBAC1BC,iBAAkB1jD,EAAM0jD,iBACxB5d,gBAAiB9lC,EAAM8lC,gBACvBrqB,OAAQskI,EACRl2H,QAAS,IAAMm2H,GAAsB,GACrCM,kBAAmB,IAAMtgJ,EAAMsgJ,kBAC/BC,mBAAoB,IAAMvgJ,EAAMugJ,wBAMlCC,EACJ,eAAC,IAAM,UACL,eAAC,IAAW,UACY,QADZ,EACTxgJ,EAAM8lC,uBAAe,aAArB,EAAuB9iC,KAAI,CAACsqB,EAAgBsQ,IAC3C,gBAAC,IAAO,CACN/L,GAAK,YAAW7xB,EAAMknB,YAAYC,aAAmBmG,KACrD+sH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SAAS,UAG9E,eAAC,IAAI,CAAChM,KAAMk3I,GAAMp9G,KAClB,sBAAK34B,UAAU,qBAAoB,SAAEqoB,IACrC,eAAC,GAA0B,CACzBW,mBAAoBZ,GAA0BC,GAC9Ce,cAAc,MANXf,SAcTmzH,EACJ,gBAAC,IAAO,CACNpG,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SACrE+hB,GAAsB,MAAlB7xB,EAAMknB,SAAmB,WAAc,YAAWlnB,EAAMknB,WAC5Dw5H,SAAUb,GAAiC,UAE3C,eAAC,IAAI,CAAC/7I,KAAMC,IAAUo8I,iBACtB,eAAC,IAAa,CAACn2I,MAAO,CAAEo2I,cAAe,OAAQ,SAC5CpgJ,EAAMsjD,iBAAmB,4BAK1Bq9F,EAAyB,CAC7B,cACA,gBACC,YAAW3gJ,EAAMknB,sBACjB,YAAWlnB,EAAMknB,yBAEd05H,EACc,MAAlB5gJ,EAAMknB,YAAsBy5H,EAAuB/7G,MAAK3hC,GAAKy1C,EAASi9F,SAAS/gF,WAAW3xD,KAGtF49I,EACJ,gBAAC,IAAW,CAAC34F,MAAOi3F,KAAUviI,KAAK,UAChCgkI,EACC,eAAC,KAAQ,CACP5hJ,SAAUC,IAAS6hJ,aACnBnyH,gBAAgB,QAChBtqB,QAASm8I,EACTtnG,iBAAkB,yBAAyB,SAE1CunG,IAGHA,EAGDzgJ,EAAMw0B,MAAQx0B,EAAM0jD,kBACnB,gBAAC,IAAO,CACN22F,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SACrE+hB,GAAK,YAAW7xB,EAAMknB,sBAAsB,UAE5C,eAAC,IAAI,CAACpjB,KAAMC,IAAU07I,QACtB,sBAAKx6I,UAAU,qBAAoB,2BAGtCjF,EAAMw0B,MACL,gBAAC,IAAO,CACN6lH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SACrE+hB,GAAG,cAAa,UAEhB,eAAC,IAAI,CAAC/tB,KAAMC,IAAUO,OACtB,sBAAKW,UAAU,qBAAoB,2BAGtCgkB,KAAUy2H,yBACT,gBAAC,IAAO,CACNrF,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SACrE+hB,GAAG,qBAAoB,UAEvB,eAAC,IAAI,CAAC/tB,KAAMC,IAAU8hB,YACtB,sBAAK5gB,UAAU,qBAAoB,0BAGtCjF,EAAMilB,KACNjlB,EAAMw0B,MAAQx0B,EAAMyjD,oBACnB,gBAAC,IAAO,CACN42F,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SACrE+hB,GAAK,YAAW7xB,EAAMknB,wBAAwB,UAE9C,eAAC,IAAI,CAACpjB,KAAMC,IAAU+gC,WACtB,sBAAK7/B,UAAU,qBAAoB,gCAMrC87I,EACJ,gBAAC,IAAW,CAAC74F,MAAOi3F,KAAUrwH,MAAM,UAClC,eAAC,IAAO,CACNurH,gBAAiBxqI,IAAQ8yB,OACzB19B,UAAWG,IAAW,sBAAuByK,IAAQuvI,OAAQvvI,IAAQC,SACrE+hB,GAAG,gBAAe,SAElB,eAAC,IAAI,CAAC/tB,KAAMC,IAAUi9I,UAGxB,sBAAK/7I,UAAU,aAAY,SACzB,eAAC,IAAa,CAACA,UAAU,mBAE3B,sBAAKA,UAAU,YAAW,SACxB,eAAC,IAAa,CAACA,UAAU,sBAG3B,eAAC,GAAQ,CACP85I,aAAc/+I,EAAM++I,aACpBvC,mBAAoBx8I,EAAMw8I,mBAC1BR,QAASh8I,EAAMg8I,QACf90H,SAAUlnB,EAAMknB,SAChBjC,KAAMjlB,EAAMilB,UAKlB,OACE,uCACE,gBAAC,IAAM,CAAChgB,UAAWG,IAAW,gBAAiB,iBAAkByK,IAAQ8Q,MAAM,UAC5EsI,KAAUg4H,eACPhB,EACAp9H,EACAw9H,EACAQ,EACHE,KAGH,gBAAC,IAAM,WACL,eAAC,IAAK,CAAC9xG,KAAK,gBACZ,eAAC,IAAK,CAACA,KAAK,uBACZ,eAAC,IAAK,CAACA,KAAK,kBACZ,eAAC,IAAK,CAACA,KAAK,kCACZ,eAAC,IAAK,CAACA,KAAK,oCACZ,eAAC,IAAK,WACFhmB,KAAUg4H,gBAAkBjhJ,EAAMw0B,OAAS3R,GAC3C,eAAC,GAAoB,CACnB2R,KAAMx0B,EAAMw0B,KACZsR,gBAAiB9lC,EAAM8lC,gBACvB5e,SAAUlnB,EAAMknB,oBCrT9B,MAAMg6H,GAAY,eAAC,IAAK,CAACjyG,KAAK,SAASC,UAAW2wF,IAAW,SA8OvDshB,GAAkB,IAAM,eAAC,IAAQ,CAACtvH,GAAG,WACrCuvH,GAAoB,IAAM,eAAC,IAAQ,CAACvvH,GAAG,aAOvCwvH,GAAY,QAAC,KAAEp8H,EAAI,KAAEuP,GAAwB,cACxChuB,IAATye,EAAqBk8H,QAA2B36I,IAATguB,EAAqB4sH,GAAoB,IAAM,eAAC,GAAO,KAO1FE,GAAuB,CAAC,EAA4BzvH,KAAe,IAA3C,KAAE5M,GAAwB,cAC7Cze,IAATye,EAAqBk8H,GAAkB,IAAMtvH,GASzC0vH,GAA8B,CAAC,EAAkC1vH,KAAe,IAAjD,KAAE5M,EAAI,KAAEuP,GAAwB,cAC1DhuB,IAATye,EAAqBk8H,QAA2B36I,IAATguB,EAAqB4sH,GAAoB,IAAMvvH,GAExF,SAAS2vH,KACP,MAAM7zI,EAAMsT,MACZ,IAAK,MAAM,MAAE+J,EAAK,IAAEC,EAAG,OAAEqzG,KAAYr1G,KAAUw4H,eAC7C,GAAIz2H,EAAM9J,SAASvT,IAAQsd,EAAIy2H,QAAQ/zI,GACrC,OAAO2wH,IAAU,EAGrB,OAAO,EAGMqjB,OAnRiC3hJ,IAC9C,MAAM4hJ,EAAa98I,cAAiC0B,IAC7C2F,EAAY01I,GAAiB/8I,WAAe08I,MAC7CM,EAAW,sBAAsB/+C,KAAKxoE,UAAUwnH,WAChDC,EAAQvhJ,OAAOwhJ,WAAW,8BAA8BC,QACxDC,EAAoBr9I,SAAa,CAAEwE,OAAQ,EAAGD,MAAO,KAEpDuzI,EAAmBC,GAAwBuF,YAChDn5H,KAAUo5H,iCACVC,MAIIC,EADmC,kBAAfviJ,EAAMilB,MAC2B,kBAAfjlB,EAAMw0B,KAIlD1vB,aAAgB,KACV9E,EAAMilB,MACRjlB,EAAMwiJ,uBAGP,IAEH19I,aAAgB,KACVmkB,KAAUw4H,eAAez8I,OAAS,IACpC48I,EAAWj5I,QAAUlI,OAAOm1D,aAAY,KACtC,MAAM5uD,EAAWw6I,KACbr1I,IAAenF,GACjB66I,EAAc76I,KAEf,MAGE,KACD46I,EAAWj5I,SACblI,OAAOq1D,cAAc8rF,EAAWj5I,YAGnC,CAACwD,IAYJrH,aAAgB,KACd,MAAM29I,EAA2B,KAG3BhiJ,OAAO+yC,YAAc2uG,EAAkBx5I,QAAQW,QAC/C7I,OAAO4yC,aAAe8uG,EAAkBx5I,QAAQU,OAIlD2nC,SAAS0xG,gBAAgB14I,MAAM24I,YAC7B,uBACAliJ,OAAO+yC,YAAc,MAGzB2uG,EAAkBx5I,QAAU,CAAEW,OAAQ7I,OAAO+yC,YAAanqC,MAAO5I,OAAO4yC,aAQ1E,OALK2uG,GAASF,IACZW,IACAhiJ,OAAOgzC,iBAAiB,SAAUgvG,IAG7B,MACAT,GAASF,GACZrhJ,OAAOozC,oBAAoB,SAAU4uG,MAGxC,CAACT,EAAOF,IAGX,MAAMc,EAAc,CAClB,eAAC,IAAK,CAAC3zG,KAAK,gBAAgBC,UAAWivF,IAAkB,gBACzD,eAAC,IAAK,CAAClvF,KAAK,mBAAmBC,UAAW2vF,IAAoB,kBAC9D51G,KAAUy2H,wBACR,eAAC,IAAK,CACJzwG,KAAK,qBACLvuB,OAAQ,IACN,eAACmiI,GAAA,EAAe,CACdvC,kBAAmBtgJ,EAAMsgJ,kBACzBC,mBAAoBvgJ,EAAMugJ,sBAG1B,qBAEJ,MAGAuC,GAAuB,CAAC,QAAS,SAASp8H,SAAS1mB,EAAMw0B,OAAUroB,EAEzE,OACE,eAAC2wI,GAAA,EAAyB90G,SAAQ,CAAC9yB,MAAO,CAAC0nI,EAAmBC,GAAsB,SAClF,uBAAK53I,UAAU,cAAa,UAC1B,eAAC,GAAa,CACZ85I,aAAc/+I,EAAM++I,aACpBuB,kBAAmBtgJ,EAAMsgJ,kBACzBC,mBAAoBvgJ,EAAMugJ,mBAC1B/D,mBAAoBx8I,EAAMw8I,mBAC1BhoH,KAAMx0B,EAAMw0B,KACZvP,KAAMjlB,EAAMilB,KACZ+2H,QAASh8I,EAAMg8I,QACf90H,SAAUlnB,EAAMknB,SAChBo8B,gBAAiBtjD,EAAMsjD,gBACvBG,mBAAoBzjD,EAAMyjD,mBAC1BC,iBAAkB1jD,EAAM0jD,iBACxB5d,gBAAiBhhC,WACf,kBAAoC,QAApC,EAAM9E,EAAM2uC,gCAAwB,aAA9B,EAAgC3rC,KAAIo4I,GAAKA,EAAE3uI,SACjD,CAACzM,EAAM2uC,6BAGX,uBAAK1pC,UAAU,oBAAmB,UAC/B69I,GACC,gBAAC,IAAM,YACH75H,KAAUg4H,gBAAkBC,GAE5BqB,GAAmBt5H,KAAUg4H,eAK3B,GAJA,CACE,eAAC,IAAK,CAAChyG,KAAK,WAAWvuB,OAAQygI,IAAsB,GACrD,eAAC,IAAK,CAACnyG,OAAO,EAAMC,KAAK,IAAIvuB,OAAQygI,IAAsB,IAGjE,eAAC,IAAK,UACJ,eAAC,GAAQ,CAAC7iB,OAA8B,kBAAfnyH,EAA0BA,OAAa3F,UAIpEs8I,GAAuB75H,KAAUg4H,gBACjC,gBAAC,IAAM,WACJ2B,EACD,eAAC,IAAK,CAAC3zG,KAAK,cAAcC,UAAWimG,KACrC,eAAC,IAAK,CAACnmG,OAAO,EAAMC,KAAK,IAAG,SAC1B,eAAC,IAAQ,CAACpd,GAAG,kBAEf,eAAC,IAAK,CAACqd,UAAWra,SAGpBiuH,IAAwB75H,KAAUg4H,gBAClC,gBAAC,IAAM,WACJC,GACA0B,EACD,eAAC,IAAK,CAAC3zG,KAAM,4BAA6BvuB,OAAQ2gI,GAAUrhJ,KAC5D,eAAC,IAAK,CAACivC,KAAK,WAAWvuB,OAAQ4gI,GAAqBthJ,EAAO,eAAC,GAAO,OACnE,eAAC,IAAK,CACJivC,KAAM,6DACNC,UAAWsjG,KAEb,eAAC,IAAK,CACJvjG,KAAK,cACLvuB,OAAQ6gI,GAA4BvhJ,EAAO,eAAC,GAAU,OAGxD,eAAC,IAAQ,CACP6uE,KAAK,IACL7/B,OAAO,EACPnd,GAAsB,MAAlB7xB,EAAMknB,SAAoB,YAAWlnB,EAAMknB,WAAa,aAE3C,MAAlBlnB,EAAMknB,UAAoB,CACzB,eAAC,IAAQ,CACP2nD,KAAK,sBACLh9C,GAAK,YAAW7xB,EAAMknB,+BAClB,qBAEN,eAAC,IAAQ,CACP2nD,KAAK,wBACLh9C,GAAK,YAAW7xB,EAAMknB,iCAClB,uBAEN,eAAC,IAAQ,CACP2nD,KAAK,mBACLh9C,GAAK,YAAW7xB,EAAMknB,oBAClB,mBAGR,eAAC,IAAK,CAACgoB,UAAWra,WAOvB5L,KAAU85H,oBAAiD,OAA3B/iJ,EAAMgjJ,kBACrC,sBAAK/9I,UAAU,kBAAiB,SAC9B,gBAAC,IAAM,CACLA,UAAW4K,IAAQ8Q,KACnB/Z,MAAM,mDACNixC,sBAAsB,EACtB4nE,mBAAmB,EACnB71F,oBAAoB,EACpBnO,QAAM,YAEN,uBAAKxW,UAAW4K,IAAQia,YAAY,UAClC,eAAC,IAAE,+DACH,qPAKA,wBACA,uTAOF,sBAAK7kB,UAAW4K,IAAQka,cAAc,SACpC,uBAAK9kB,UAAW4K,IAAQioC,sBAAsB,UAC5C,eAAC,IAAM,CACLhpC,KAAK,0BACL7K,QAAS,IAAMjE,EAAMijJ,+BAA8B,KAErD,eAAC,IAAM,CACLn0I,KAAK,aACLtP,OAAQC,IAAOC,QACfuE,QAAS,IAAMjE,EAAMijJ,+BAA8B,qBC/NxDC,OAFcllG,YAAW7xB,aAzB+BC,IAAK,CAC1EoI,KAAMpI,EAAMC,QAAQmI,KACpBvP,KAAMmH,EAAMC,QAAQpH,KACpB+2H,QAAS5vH,EAAMC,QAAQ2vH,QACvB90H,SAAUkF,EAAMC,QAAQnF,SACxBo8B,gBAAiBl3B,EAAMC,QAAQi3B,gBAC/BG,mBAAoBr3B,EAAMC,QAAQo3B,mBAClCC,iBAAkBt3B,EAAMC,QAAQq3B,iBAChC/U,yBAA0BviB,EAAMC,QAAQsiB,yBACxCq0G,iBAAkB52H,EAAMC,QAAQ22H,qBAGiCjgI,GACjE8J,YACE,CACEkyH,aAAcoE,SACd7C,kBAAmB8C,cACnB7C,mBAAoB8C,eACpBb,mBAAoBA,qBACpBhG,mBAAoBoC,eACpBqE,8BAA+BA,iCAEjClgI,IAGoCoJ,CAA6Cw1H,KCnCrF,MAAM2B,GAAcC,QACW,cAA7B9iJ,OAAOi4C,SAAS8qG,UAEe,UAA7B/iJ,OAAOi4C,SAAS8qG,UAEhB/iJ,OAAOi4C,SAAS8qG,SAASnnG,MAAM,2DA0CnC,SAASonG,GAAgBC,EAAe7+G,GACtCtK,UAAUopH,cACPC,SAASF,GACT/qI,MAAKkrI,IAEJjuF,aAAY,KACV,IACEiuF,EAAanvD,SACb,UACD,KACHmvD,EAAaC,cAAgB,KAC3B,MAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,KACA,cAA3BF,EAAiB33H,QACfmO,UAAUopH,cAAcO,YAI1BnqI,QAAQ3B,IACN,+GAKEysB,GAAUA,EAAOs/G,UACnBt/G,EAAOs/G,SAASN,KAMlB9pI,QAAQ3B,IAAI,sCAGRysB,GAAUA,EAAOu/G,WACnBv/G,EAAOu/G,UAAUP,WAO5BQ,OAAMrqI,IACLD,QAAQC,MAAM,4CAA6CA,M,cCpG1D,MAAMsqI,GAAoBzjJ,6BAAoC2F,GAgCtD+9I,OA1B+C,IAAmB,IAAlB,SAAE3lB,GAAU,EACzE,MAAO4lB,EAAYC,GAAiB1/I,qBAsBpC,OApBAusC,qBACE,CACEozG,GAAI,sBACJx4I,QAAS,CACP,cAAe,CACbw4I,GAAI,YACJx4I,QAAS,CACPy4I,UAAW,kBAKlBrkJ,IACKA,GACFyZ,QAAQC,MAAM1Z,GAEhBmkJ,EAAcG,sBAAW,UAItB,eAACN,GAAkBt8G,SAAQ,CAAC9yB,MAAOsvI,EAAW,SAAE5lB,KCjBzD,GAAI31G,KAAU47H,UAAW,CACvBC,IAAY,CACVC,IAAK97H,KAAU47H,UACfG,YAAa/7H,KAAUg8H,yBACvB5oH,QAAU,kBAAiBpT,KAAUi8H,yBAEvC,MAAMC,EAASpiJ,KAAMkyD,WAAW5oC,QAAQ84H,OACxCL,IAAiC,qBAAXK,EAAyB,CAAE/+I,GAAI++I,EAAO99H,YAAe,MAG7E,MAAM+9H,GAAgBp0G,SAASC,eAAe,QA+B9C,GA9BCxwC,OAAe4kJ,gBAAkBtiJ,KAClCgX,QAAQ3B,IACL,oBAAmB6Q,KAAUg8H,4BAA4Bh8H,KAAUi8H,sCAClDzyG,KAAMiqG,yCACxB,sBAMFh8H,iBACE,eAAC,IAAQ,CAAC3d,MAAOA,KAAM,SACrB,eAAC,GAAkB,UACjB,eAAC,IAAM,CAACykB,QAASA,KAAQ,SACvB,eAAC,GAAoB,UAI3B49H,IFrBK,SAAkBvgH,GACvB,GAA6C,kBAAmBtK,UAAW,CAGzE,GADkB,IAAI+qF,IAAIptG,6BAA8BzX,OAAOi4C,SAASlG,MAC1D8yG,SAAW7kJ,OAAOi4C,SAAS4sG,OAIvC,OAGF7kJ,OAAOgzC,iBAAiB,QAAQ,KAC9B,MAAMiwG,EAAS,+CAEXJ,KAsEV,SAAiCI,EAAe7+G,GAE9CosD,MAAMyyD,EAAO,CACX7yD,QAAS,CAAE,iBAAkB,YAE5Bl4E,MAAKmjD,IAEJ,MAAMypF,EAAczpF,EAAS+0B,QAAQhvF,IAAI,gBAEnB,MAApBi6D,EAAS5qC,QACO,MAAfq0H,IAA8D,IAAvCA,EAAYtxE,QAAQ,cAG5C15C,UAAUopH,cAAc6B,MAAM7sI,MAAKkrI,IACjCA,EAAa4B,aAAa9sI,MAAK,KAC7BlY,OAAOi4C,SAASgtG,eAKpBjC,GAAgBC,EAAO7+G,MAG1Bw/G,OAAM,KACLtqI,QAAQ3B,IAAI,oEA5FVutI,CAAwBjC,EAAO7+G,GAI/BtK,UAAUopH,cAAc6B,MAAM7sI,MAAK,KACjCoB,QAAQ3B,IACN,+GAMJqrI,GAAgBC,EAAO7+G,OEJ/B+gH,CAAsB,CACpBzB,SAAU,KACRxkJ,aACE,4EACA,MAKFspB,KAAUhR,eAAgB,CAG5B,MAAM4tI,EAAO,IC3DR,SAAyB90D,GAAuB,IAAD,EAC/CA,IAG6B,QAAlC,EAAAx2D,UAAUopH,cAAcO,kBAAU,OAAlC,EAAoC3kB,YAAY,CAAE9yH,KAN3B,YAM4CskF,iBDuDhD+0D,CAAgB/iJ,KAAMkyD,WAAW5oC,QAAQ0kE,aAC5Dx2D,UAAUopH,cAAc6B,MAAM7sI,MAAK,KACjCi9C,YAAYiwF,EAAM58H,KAAU88H,0B,iCEtDhC,sGAAO,MAAMC,EAAyB,yBACzB/vI,EAAyB,yBACzBgwI,EAA0B,2B,iCCXvC,kCAAO,MAAMnH,EAAU,W,iCCAvB,sFAmBO,MAAMj2H,EAA6D7oB,GAEtE,cAAC,IAAQ,CAACqE,QAAQ,wCAAwCqY,UAAWzd,IAASC,IAAI,SAChF,cAAC,IAAa,CACZ2E,MAAM,MACNC,KAAMC,IAAU0tB,KAChBxtB,QAASjE,EAAM8oB,iBACf5c,QAAS,CAAEK,UAAWvM,EAAMsM,MAAOrH,UAAWjF,EAAMiF,gB,gCCZ5D,ssDAAO,MAAMihJ,EAAa,aACbC,EAAwB,wBACxBC,EAAsB,sBACtB3hH,EAAmB,mBACnBD,EAAyB,yBACzBD,EAA6B,6BAC7B8hH,EAAoB,oBACpBtmH,EAAiB,iBACjBD,EAAuB,uBACvBwmH,EAAgB,gBAChBC,EAA0B,0BAC1BC,EAAQ,QACRC,EAAgB,gBAChBC,EAAe,eACfC,EAAgB,gBAChBC,EAAa,aACbC,EAAW,WACXC,EAA2B,2BAC3BC,EAA0B,0BAC1BC,EAAgC,gCAChCC,EAAuC,uCACvCC,EAAkB,kBAClBC,EAAwB,wBACxBC,EAA4B,4BAC5BC,EAA0B,0BAC1BC,EAAgB,gBAChBC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAA8B,8BAC9BC,EAAyB,yBACzBC,EAAqB,qBACrBC,EACX,gDACWC,EAAsB,sBACtBC,EAA8B,8BAC9BC,EAAkB,kBAClBC,EAAqB,qBACrBC,EAAoB,oBACpBC,EAA2B,2BAC3BC,EAAiB,iBACjBC,EAAsB,sBACtBC,EAA4B,4BAC5BC,EAAuB,uBACvBC,EAA8B,8BAC9BC,EAAuB,uBACvBC,EAA2B,2BAC3BC,EAA4B,4BAC5BC,EAA2B,2BAC3BC,EAAyC,yCACzCC,EAAmB,mBACnBC,EAAmC,mCACnCC,EAAkC,mC,iCCjE/C,0HAEO,IAAKhM,GAIX,SAJWA,KAAa,QAAbA,EAAa,UAAbA,EAAa,cAIxB,CAJWA,MAAa,KAUlB,MAAMuF,EAA8C,CACzDnF,cAAeJ,EAAchxI,MAQlB+wI,EAA2Bh4I,IAAMjE,cAE5C,O,iCCvBF,wIAAO,MAAMmoJ,EAAyB,yBACzBC,EAAoB,oBACpBC,EAAqB,qBACrBC,EAAoB,qB,iCCHjC,wIAAO,MAAMC,EAA0B,0BAC1BC,EAA2B,2BAC3BC,EAAwB,wBACxBC,EAAyB,0B,kCCEtC,oPAOO,MAAMC,EAAyB,GAEhCC,EAAiBz0F,GAAgBjqB,KAAK7iB,UAAU8sC,EAAQ,KAAM,GAY9D00F,EAAYrlJ,GAAiBA,EAM7BslJ,EAAwB,CAC5BjiE,gBAAiB,CACf/iC,SAAU,aACVilG,eAAiB10I,GAA4B,KAAVA,EACnC20I,oBAAqBH,EACrBI,kBAAmBJ,GAErBK,YAAa,CACXplG,SAAU,iBACVilG,eAAiB10I,GAA4B,KAAVA,EACnC20I,oBAAqBH,EACrBI,kBAAmBJ,GAErBM,UAAW,CACTrlG,SAAU,eACVilG,eAAiB10I,GAA4B,KAAVA,EACnC20I,oBAAqBH,EACrBI,kBAAmBJ,GAErBO,YAAa,CACXtlG,SAAU,iBACVilG,eAAiB10I,GAA4B,KAAVA,EACnC20I,oBAAqBH,EACrBI,kBAAmBJ,GAErBQ,aAAc,CACZvlG,SAAU,kBACVilG,eAAiB10I,GAA4B,KAAVA,EACnC20I,oBAAqBH,EACrBI,kBAAmBJ,GAErBS,UAAW,CACTxlG,SAAU,iBACVilG,eAAiB10I,GAAuC,IAAjBA,EAAMlQ,OAC7C6kJ,oBAAqB9+G,KAAKM,MAC1By+G,kBApDgCM,IAClC,MAAMC,EAAgBD,EAAMpnJ,KAAK+/F,IACxB,CACLvpF,OAAQupF,EAAKvpF,OACbirH,QAAS1hC,EAAK0hC,QACdnmH,MAAOykF,EAAKzkF,MAAQykF,EAAKzkF,MAAQ,EACjC7R,KAAMs2F,EAAKt2F,KAAOs2F,EAAKt2F,KAAO,aAGlC,OAAOg9I,EAAcY,MAqDhBh0H,eAAei0H,EAAeC,EAAkCC,GACrE,MAAMC,EAAwBC,EAC5BH,EAAgBI,UAChBJ,EAAgBv5I,SAChB,YACAw5I,GAGII,EAAwBF,EAC5BH,EAAgBI,UAChBJ,EAAgBv5I,SAChB,YACAw5I,GAGIK,EA8BRx0H,eAA4Bs0H,EAAmB35I,EAAkBw5I,GAC/D,MAAM/nI,EAAwB,GAE9B,QAAgBjc,IAAZgkJ,EACF,OAAO/nI,EAKT,MAOMgnG,SAP+C+gC,EAAQ5tB,MAAMkuB,WAAW,CAC5EC,MAAOJ,EACP3tB,KAAMhsH,EACNi+B,KAAM,MAIyCjrB,KAEjD,IAAK+U,MAAM2lG,QAAQjV,GACjB,OAAOhnG,EAGT,MAAMuoI,EAAW,GAEjB,IAAK,IAAI5nJ,EAAI,EAAGA,GAAKomJ,EAAwBpmJ,IAAK,CAChD,MAAM6nJ,EAAqB,IAAM7nJ,EAIjC,QAA6DoD,IAAzDijH,EAAM7kF,MAAK9zB,GAAQA,EAAKmU,OAASgmI,IACnC,MAGFD,EAASzkI,KACPikI,EAAQ5tB,MACLkuB,WAAW,CACVC,MAAOJ,EACP3tB,KAAMhsH,EACNi+B,KAAMg8G,IAEPtyI,MAAMuyI,IACL,IAAKnyH,MAAM2lG,QAAQwsB,EAAelnI,MAChC,OAGF,MACMmnI,EADwBD,EAAelnI,KACQhhB,KAClD8N,GAAcA,EAAKmU,OAKhBmmI,EAFa/+G,OAAO7pC,KAAKmnJ,GAEO9hI,QAAQwjI,GAC5CF,EAAuBzkI,SAASijI,EAAsB0B,GAAU1mG,YAG5DqmG,EAAWI,EAAmBpoJ,KAAIqzB,UACtC,MAAMsuB,EAAWglG,EAAsB0B,GAAU1mG,SAE3C2mG,QAAsBZ,EAC1BC,EACA35I,EACAi6I,EAAqB,IAAMtmG,EAC3B6lG,GAGF,OAAOb,EAAsB0B,GAAUxB,oBAAoByB,MAG7D,OAAO/yI,QAAQqtD,IAAIolF,GAAUryI,MAAM4yI,IACjC,MAAMC,EAAqB,CACzBC,eAAgBroJ,EAChBskF,gBAAiB,GACjBqiE,YAAa,GACbC,UAAW,GACXC,YAAa,GACbC,aAAc,GACdC,UAAW,IAGb,IAAK,IAAI/mJ,EAAI,EAAGA,EAAImoJ,EAAevmJ,OAAQ5B,IACzCooJ,EAASJ,EAAmBhoJ,IAAMmoJ,EAAenoJ,GAGxB,KAAvBooJ,EAASxB,YACXwB,EAASxB,UAAYwB,EAASzB,aAGhCtnI,EAAU8D,KAAKilI,SAGlBnH,OAAM/jJ,IACLX,YAAmB,uDAAwD,KAC3Eoa,QAAQC,MAAM1Z,OAOtB,aAHMiY,QAAQqtD,IAAIolF,GAClBvoI,EAAUijB,MAAK,CAAC3U,EAAGghF,IAAMhhF,EAAE06H,eAAiB15C,EAAE05C,iBAEvChpI,EAlIkBipI,CACvBnB,EAAgBI,UAChBJ,EAAgBv5I,SAChBw5I,IAGKmB,EAAgBC,EAAgBvkE,SAAmB9uE,QAAQqtD,IAAI,CACpE6kF,EACAG,EACAC,IAEIgB,EAoKR,SAAgDD,GAC9C,IACE,OAAO7gH,KAAKM,MAAMugH,GAClB,MAAOtrJ,GAEP,OADAyZ,QAAQC,MAAM1Z,GACP,CACLwrJ,cAAejnI,UAAQC,QA1KHinI,CAAuCH,GAS/D,MAPoC,CAClCrB,gBAAiBA,EACjByB,gBAAiBL,EACjBE,gBAAiBA,EACjBxkE,UAAWA,GA4HRhxD,eAAeq0H,EACpBC,EACA35I,EACAi7I,EACAzB,GAEA,IAAI0B,EAAgB,GAEpB,QAAgB1lJ,IAAZgkJ,EACF,OAAO0B,EAGT,IAEE,MAAMC,QAAqC3B,EAAQ5tB,MAAMkuB,WAAW,CAClEC,MAAOJ,EACP3tB,KAAMhsH,EACNi+B,KAAMg9G,IAGRC,EAAgBE,EAAOv9E,KAAMs9E,EAASnoI,KAAa3f,QAAS,UAAUgjB,WACtE,MAAO/mB,GACPX,YAAmB,uDAAwD,KAC3Eoa,QAAQC,MAAM1Z,GAGhB,OAAO4rJ,EAmBT,SAASG,EAAuCR,GAC9C,OAAOpC,EAAcoC,GAgBhB,SAASS,EACdT,EACAU,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAuB,GACvBC,EAA4B,GAE9BjB,IAAoBU,IACtBM,EAAqB,aAAeR,EAAuCR,IAGzEW,IAAoBC,IACtBI,EAAqB,aAAeL,GAGtC,IAAIppJ,EAAI,EACR,KAAOA,EAAIspJ,EAAS1nJ,QAAQ,CAC1B,MAAM+nJ,EAAa3pJ,EAAI,EACjB6nJ,EAAqB,IAAM8B,EAEjC,GAAIA,EAAaJ,EAAe3nJ,OAAQ,CAEtC6nJ,EAAqB5B,EAAqB,mBAAqByB,EAAStpJ,GAAG4mJ,UAC3E6C,EAAqB5B,EAAqB,eAAiByB,EAAStpJ,GAAGskF,gBAEvE,MAAMslE,EAAoB,CAAC,YAAa,cAAe,gBAEvD,IAAK,MAAMC,KAAgBD,EAAmB,CAC5C,MAAME,EAAeR,EAAStpJ,GAAG6pJ,GAGjC,IAFuBtD,EAAsBsD,GAAcrD,eAAesD,GAErD,CACnB,MAAMC,EACJlC,EAAqB,IAAMtB,EAAsBsD,GAActoG,SAC3D2mG,EAAgB3B,EAAsBsD,GAAcnD,kBACxD4C,EAAStpJ,GAAG6pJ,IAGdJ,EAAqBM,GAAkB7B,QAGtC,CAEL,MAAM0B,EAAoB3gH,OAAO7pC,KAAKmnJ,GAEtC,IAAK,MAAMsD,KAAgBD,EAAmB,CAC5C,MAAME,EAAeR,EAAStpJ,GAAG6pJ,GAC3BG,EAAcT,EAAevpJ,GAAG6pJ,GAEtC,IAAKliI,kBAAQmiI,EAAcE,GAAc,CACvC,MAAMD,EACJlC,EAAqB,IAAMtB,EAAsBsD,GAActoG,SAC3D2mG,EAAgB3B,EAAsBsD,GAAcnD,kBACxD4C,EAAStpJ,GAAG6pJ,IAGdJ,EAAqBM,GAAkB7B,GAI3C,GACEsB,GACAC,EAAqB5B,EAAqB,IAAMtB,EAAiC,UAAEhlG,UACnF,CAEA,MAAM0oG,EACJR,EACE5B,EAAqB,IAAMtB,EAAiC,UAAEhlG,iBAE3DkoG,EACL5B,EAAqB,IAAMtB,EAAiC,UAAEhlG,UAEhEkoG,EACE5B,EAAqB,IAAMtB,EAAmC,YAAEhlG,UAC9D0oG,GAGRjqJ,IAGF,KAAOA,EAAIupJ,EAAe3nJ,QAAQ,CAChC,MAAM+nJ,EAAa3pJ,EAAI,EACvB0pJ,EAAgBvmI,KAAK,IAAMwmI,GAC3B3pJ,IAGF,MAAO,CAACypJ,EAAsBC,GASzB,SAASQ,EACdzB,EACAW,EACAE,GAEA,MAAMG,EAAuB,GAC7BA,EAAqB,aAAeR,EAAuCR,GAC3EgB,EAAqB,aAAeL,EAEpC,MAAMQ,EAAoB,CAAC,YAAa,cAAe,gBAEvD,IAAK,IAAI5pJ,EAAI,EAAGA,EAAIspJ,EAAS1nJ,OAAQ5B,IAAK,CACxC,MACM6nJ,EAAqB,KADR7nJ,EAAI,GAGvBypJ,EAAqB5B,EAAqB,IAAMtB,EAAmC,YAAEhlG,UACnF+nG,EAAStpJ,GAAG4mJ,UACd6C,EACE5B,EAAqB,IAAMtB,EAAuC,gBAAEhlG,UAClE+nG,EAAStpJ,GAAGskF,gBAEhBslE,EAAkB/mH,SAASgnH,IACzB,MAAMC,EAAeR,EAAStpJ,GAAG6pJ,GAGjC,IAFuBtD,EAAsBsD,GAAcrD,eAAesD,GAErD,CACnB,MAAMC,EACJlC,EAAqB,IAAMtB,EAAsBsD,GAActoG,SAC3D2mG,EAAgB3B,EAAsBsD,GAAcnD,kBACxD4C,EAAStpJ,GAAG6pJ,IAGdJ,EAAqBM,GAAkB7B,MAK7C,OAAOuB,EAUF,SAASU,EAA8BC,GAC5C,IAAIC,GAAY,EAChB,MAAMC,EAAc,CAClBl0I,OAAQ,EACR+hD,QAAS,GACTvzC,UAAW,EACXvb,KAAM,MACNpI,QAAS,GACTy1G,MAAO,EACP1zG,GAAI,EACJwM,QAAS,CAAET,QAAS0S,UAAQC,MAAOE,SAAU,CAAEC,KAAM,OAAQwB,QAAS,IAAM67G,QAAS,IACrFqrB,SAAU,EACVrsI,GAAI,EACJC,MAAO,GAGHqsI,EAAcJ,EAAgBr6E,OAMpC,GAJkD,QAA9Cy6E,EAAY7hG,UAAU,EAAG,GAAG/3B,gBAC9By5H,GAAY,GAGVA,EAAW,CACb,MAAMI,EAA0BD,EAAY7hG,UAAU,EAAG6hG,EAAY5oJ,QACrE,IACE,MAAM8oJ,EAAqB/iH,KAAKM,MAAMwiH,GAEhCE,EAAgBD,EAAmBt0I,OAEnC+hD,EADsBuyF,EAAmBvyF,QACXv4D,KAAKogB,IAChC,CACL/e,QAAS+e,EAAS+H,OAClBs4G,KAAMrgH,EAASqgH,SAGbz7G,EAAW8lI,EAAmB9lI,SAEpC0lI,EAAYl0I,OAASu0I,EACrBL,EAAYnyF,QAAUA,EACtBmyF,EAAY1lI,SAAWA,EACvB,MAAO1nB,GACPmtJ,GAAY,GAIhB,MAAO,CAACA,EAAWC,GAOd,SAASM,EAA6BjmI,GAC3C,MAAMgmI,EAAgBhmI,EAAIvO,OACpB+hD,EAAUxzC,EAAIwzC,QAAQv4D,KAAKs0E,IACxB,CACLnsD,OAAQmsD,EAAOjzE,QACfo/H,KAAMnsD,EAAOmsD,SAGXz7G,EAAWD,EAAIC,SAQrB,MAAO,QAAUyhI,EANJ,CACXluF,QAASA,EACT/hD,OAAQu0I,EACR/lI,SAAUA,O,4XCzfd,eAGM,EAAN,MACM,EAAN,OACM,EAAN,OAEA,MAAa,UAAyB,qBACpC,YAAY,GACV,MAAM,GAGD,UACL,MAAO,6BAGF,YACL,MAAO,QAVX,qBAcA,uBAIE,YAAmB,EAAqB,GAArB,aAAqB,gBAHjC,UAAO,YAAU,QACjB,cAAWimI,EAAQ,cAAM,MAIzB,UACL,OAAO,KAAK,MAAM,WAGb,YACL,MAAO,SAIX,MAAa,UAAkC,qBAc7C,YAAY,EAAuB,GACjC,MAAM,GAD2B,aAX3B,qBAAe,+BAClB,iBAAa,CAChB,eAAe,EAAW,GACxB,EAAM,OAAM,cAAS,EAAK,SAC1B,EAAM,MAAM,KACZ,MAAM,EAAW,EAAK,UAAU,KAAK,IAAa,eAAU,EAAI,SAChE,EAAM,MAAM,EAAS,KAAK,OAC1B,EAAM,MAAM,QAQT,UACL,MAAM,EAAQ,IAA4B,cAAS,EAAM,CAAE,UAAW,KAAK,kBAC3E,MACE,uCAAyC,KAAK,MAAM,KAAI,GAAQ,EAAK,GAAQ,OAAM,KAAK,MAIrF,YACL,MAAO,QA1BX,8BACgB,oBAAoB,EA6BpC,MAAa,UAAgC,qBAC3C,YAAoB,EAAuB,GACzC,MAAM,GADY,cAAuB,YAIpC,UACL,MAAO,+BAA8B,eAAU,KAAK,WAG/C,YACL,MAAM,EAAY,KAAK,OACjB,GAAY,eAAU,GAC5B,IAAI,EAAS,GAIb,EAFkB,KAAK,KAA2B,UAEhC,IAAI,YAAU,KAAK,MAErC,MAAM,EAAU,WAAW,uCAA+C,KAAa,MACjF,EAAU,qDAAqD,qCAErE,OAAI,OAAO,SAAS,GACX,GAAG,KAAW,IAEd,GAxBb,4BA6BA,MAAa,UAA0B,qBACrC,YAAmB,EAAc,GAC/B,MAAM,GADW,YAIZ,UACL,MAAO,QAAQ,KAAK,qBAGf,YACL,MAAO,oCAAoC,KAAK,8GAVpD,sBAcA,MAAa,UAA2B,qBACtC,YAAmB,EAAc,GAC/B,MAAM,GADW,YAIZ,UACL,MAAO,QAAQ,KAAK,4DAGf,YACL,MAAO,2CAA2C,KAAK,qDAAqD,KAAK,wHAAwH,KAAK,2BAVlP,uBAcA,MAAa,UAAiC,qBAG5C,YACE,EACQ,EACA,GACkB,IAAlB,0DAER,MAAM,GAJE,gBACA,WACA,kBAGR,KAAK,WAAY,cAAU,EAA2B,QAGjD,UACL,MAAO,YAAY,KAAK,YAAY,KAAK,WAAa,WAAa,wBACjE,KAAK,OAIF,YACL,MAAM,EAAY,KAAK,UACjB,EAA4B,IAAlB,KAAK,SAAiB,GAAK,IAE3C,MAAO,wBAAwB,qBAA6B,KAAK,oBAAoB,sEAvBzF,6BA2BA,MAAa,UAA8B,qBACzC,YAAoB,EAAuB,EAAsB,GAC/D,MAAM,GADY,YAAuB,YAAsB,gBAI1D,UACL,MAAO,oBAAoB,KAAK,QAG3B,YACL,IAAsB,IAAlB,KAAK,SAAmB,CAC1B,MAAM,EAAU,SAAS,KAAK,qFAE9B,IAAI,EAAU,GASd,MAPuB,wBAAnB,KAAK,KAAK,KACZ,EACE,IAAO,KAAK,KAAgC,OAAO,IAAI,YAAU,KAAK,KAAO,YACnD,wBAAnB,KAAK,KAAK,OACnB,GAAU,cAAU,KAAK,KAAgC,aAAa,GAAG,OAGpE,GAAG,mCAAyC,KAAK,UAAU,OAC7D,OAAsB,IAAlB,KAAK,SACP,iDAAiD,KAAK,qBAEtD,IA1Bb,0BA+BA,MAAa,UAAwB,qBACnC,YAAY,EAAuB,GACjC,MAAM,GAD2B,YAI5B,UACL,MAAO,uCAAuC,KAAK,QAG9C,YACL,MAAO,MAAM,KAAK,0GAVtB,oBAcA,MAAa,UAAyB,qBACpC,YAAY,EAAuB,EAAoB,GACrD,MAAM,GAD2B,WAAoB,YAIhD,UACL,MAAO,wBAAwB,KAAK,YAAW,eAAU,KAAK,QAGzD,YACL,MAAO,QAVX,qBAcA,MAAa,UAAkC,qBAK7C,YAAY,EAAuB,EAAoB,GACrD,MAAM,GAD2B,WAAoB,YAJhD,UAAO,YAAU,QACjB,cAAW,gBAAc,MAK9B,KAAK,SAAW,EAAK,IAGhB,UACL,MAAO,kCAAkC,KAAK,YAAW,eAAU,KAAK,QAGnE,YACL,MAAO,QAfX,8BAmBA,MAAa,UAAyB,qBACpC,YAAY,EAAuB,EAAoB,GACrD,MAAM,GAD2B,WAAoB,YAIhD,UACL,MAAO,0BAA0B,KAAK,YAAW,eAAU,KAAK,QAG3D,YACL,MAAO,QAVX,sB,iCCtOA,oEAAO,MAAMC,EAA8B,8BAC9BC,EAA+B,gC,gCCD5C,+DAGA,SAASC,EAAOl5I,EAAgBm5I,GAC9B,MAAwB,qBAAVn5I,GAA8C,qBAAdm5I,EAC1CA,EACiB,kBAAVn5I,GAA8C,SAAxBA,EAAMwF,cAGzC,MAEMwqI,EAAuBhtI,iMAAYo2I,mBAAqB,QACxDrJ,EAA2B/sI,iMAAYq2I,uBAAyB,MAChE1U,EAA8B3hI,iMAAYs2I,2BAA6B,iBACvEzL,EAA+BqL,EAAOl2I,iMAAYu2I,gCAClDv9D,EAAah5E,iMAAYw2I,sBACzBz2I,EAAsCC,iMAAYC,uBAClD4tI,EAAsBl8F,SAAS3xC,iMAAYy2I,iCAAmC,QAAS,IACvFC,EAAwBR,EAAOl2I,iMAAY22I,uBAC3ClvC,EAAuB96F,UAAQC,MAC/BoE,EAAuBjoB,UAAQC,QAI/BmzI,EAAmBn8H,iMAAY42I,6BAC/BC,EAAwB72I,iMAAY82I,kCACpCC,EAAmB/2I,iMAAYg3I,8BAAgC,UAC/DC,EAAoBj3I,iMAAYk3I,+BAAiC,GACjEnO,EAA4BmN,EAAOl2I,iMAAYm3I,2BAA2B,GAC1E3P,EAAoC0O,EAAOl2I,iMAAYo3I,qCACvDzK,EAAY3sI,iMAAYq3I,qBACxBC,EAAiBt3I,iMAAYu3I,2BAC7BC,EAAex3I,iMAAYy3I,yBAC3BC,EAAc13I,iMAAY23I,wBAC1B7wB,EAAiB9mH,iMAAY43I,4BAA8B,GAC3D1wB,EAAsBlnH,iMAAY63I,kCAAoC,GACtEC,EACJ93I,iMAAY+3I,8BAAgC,kCAKxCxxH,EAEForB,SAAS3xC,iMAAYg4I,gCAAkC,KAErDnxG,EACJ,IAAIkqB,IAEN,IAAK,IAAI7lE,EAAI,KAAOA,EAAG,CACrB,MAAMgD,EAAK8R,iMAAa,4BAA2B9U,KACnD,IAAKgD,EACH,MAGF,MAAM6e,EAAO/M,iMAAa,4BAA2B9U,WAAa,mBAC5Dg6H,EAAWllH,iMAAa,4BAA2B9U,eAAiB,GAE1E27C,EAAcsrB,IAAIjkE,EAAI,CAAE6e,OAAMm4G,WAAU+yB,UAAiB,IAAN/sJ,IAGrD,MAAMq+I,EAAyE,GAG7E,IAAK,IAAIr+I,EAAI,KAAOA,EAAG,CACrB,MAAMgtJ,EAAWl4I,iMAAa,oBAAmB9U,WAC3CitJ,EAASn4I,iMAAa,oBAAmB9U,SAC/C,IAAKgtJ,IAAaC,EAChB,MAEF,MAAM/xB,EAASpmH,iMAAa,oBAAmB9U,YACzC4nB,EAAQ/J,IAAOmvI,GACfnlI,EAAMhK,IAAOovI,GACfplI,EAAI/J,SAAS8J,IAAU/J,MAASygI,QAAQz2H,IAG5Cw2H,EAAel7H,KAAK,CAAEyE,QAAOC,MAAKqzG,WAI/B,IAAK7rF,GAkCX,SAlCWA,KAAK,iEAALA,EAAK,8CAALA,EAAK,wCAALA,EAAK,qDAALA,EAAK,uGAALA,EAAK,iDAALA,EAAK,6EAALA,EAAK,2EAALA,EAAK,qFAALA,EAAK,6CAALA,EAAK,yCAALA,EAAK,0BAALA,EAAK,6CAALA,EAAK,kDAALA,EAAK,0DAALA,EAAK,0DAALA,EAAK,4EAALA,EAAK,kGAALA,EAAK,oDAALA,EAAK,8DAALA,EAAK,8DAALA,EAAK,oDAALA,EAAK,8DAALA,EAAK,oDAALA,EAAK,0EAALA,EAAK,mEAALA,EAAK,oDAALA,EAAK,4DAALA,EAAK,2DAkChB,CAlCWA,MAAK,KAoCjB,MAAMxpB,EAAY,CAChBi8H,uBACAD,2BACApL,8BACAkJ,qBACA7xD,aACAj5E,iBACA22I,aACAjvC,uBACAz2F,uBACA4I,kBAzGwB,EA0GxBw+H,eAzGqB,GA0GrB/8G,iBAzGuB,IA0GvB8gG,mBACA0a,wBACAE,mBACAlwG,gBACAkiG,iBACAvB,0BACAmF,YACA2K,iBACAE,eACAE,cACA5wB,iBACAI,sBACA+vB,oBACA1N,iBACAsE,sBACAiK,iBACA3N,iCA3GuC,qBA4GvC5jH,sBAGaxV,O,iCCrJf,qEAgBO,MAAMV,EAAoEvoB,GACxEA,EAAMsnB,iBAAkB,IAAM,EAAI,KACvC,cAAC,IAAa,CAACzjB,MAAM,WAAWC,KAAMC,IAAUglC,WAAY9kC,QAASjE,EAAMiE,W,iCClB/E,0DAYO,MAAMwkB,EAA4E,IAElF,IAFmF,iBACxFnB,GACD,EACC,OACE,cAAC,IAAa,CACZzjB,MAAQ,YAAWyjB,EAAkB,SAASA,EAAkB,OAChEnb,YAAU,M,iCClBhB,6CA2BA,MAAMokJ,EAUJ//G,YAAY/W,GAA+B,KATpCA,iBAAW,OACX6H,qBAAe,OACfhgB,QAAE,OACF4d,kBAAY,OACZhO,YAAM,OACN0tG,cAAQ,OACR4xB,gBAAU,OACVC,aAAO,EAGZ,MAAM,SAAE/iI,EAAQ,kBAAE0H,GAAsBqE,EAExCpZ,KAAKoZ,YAAcA,EACnBpZ,KAAKihB,gBAAkB5T,EACvBrN,KAAKiB,GAAK,EACVjB,KAAK6e,aAAe,EACpB7e,KAAK6Q,OAAS+Q,IAAkBU,OAChCtiB,KAAKu+G,SAAW,IAAIl/G,IAAI0V,GACxB/U,KAAKmwI,WAAa,IAAI9wI,IAAI0V,GAC1B/U,KAAKowI,QAAU,IAAI/wI,KA04BR8uB,IAj4Bf,MAQEgC,YAAY/B,EAAiC5K,GAA2B,KAPhE6sH,SAAyC,IAAIznF,IAAM,KACnD0nF,SAAyC,IAAI1nF,IAAM,KACnD2nF,WAAkC,IAAI3nF,IAAM,KAC5C4nF,YAAmC,IAAI5nF,IAAM,KAC7C6nF,qBAAiC,GAAG,KACpCC,cAA0B,GAAG,KAY7BC,YAA+B,CACrC33I,KAAM,UACNvK,KAAM,UACNw3B,iBAAkB,GAClBC,KAAM,CAAE95B,KAAM+5B,IAAS+C,OAAQzF,YAAa,GAC5CC,MAAO,EACPD,YAAa,EACbE,WAAW,GACX,KAKMitH,mBAAsC,CAC5C53I,KAAM,UACNzS,MAAO,UACP0a,GAAI,EACJ4T,cAAc,EACdxH,cAAUlnB,EACV61B,aAAS71B,EACT2uB,QAAQ,EACRn2B,SAAU,EACVo2B,kBAAmB,GACnBC,UAAW,GACXC,eAAgB,UAChBE,KAAM,CAAEjD,WAAY,UAAWlJ,YAAa,UAAW2L,eAAgB,YAlCvE3U,KAAKqwI,SAAWrwI,KAAK6wI,kBAAkBziH,GACvCpuB,KAAKswI,SAAWtwI,KAAK8wI,kBAAkBttH,GACvCxjB,KAAK+wI,eACL/wI,KAAKgxI,eAqCAljH,qBACL,MAAO,IAAI9tB,KAAKqwI,SAASpkH,UAAUtpC,KAAI++C,GAAQA,EAAKtoB,cAM/C63H,6BACL,MAAO,IAAIjxI,KAAKqwI,SAASpkH,UACtBzkB,QAAOk6B,GAAQA,EAAK7wB,SAAW+Q,IAAkBsvH,aACjDvuJ,KAAI++C,GAAQA,EAAKtoB,cAGf+3H,8BACL,MAAO,IAAInxI,KAAKqwI,SAASpkH,UACtBzkB,QAAOk6B,GAAQA,EAAK7wB,SAAW+Q,IAAkBC,YACjDl/B,KAAI++C,GAAQA,EAAKtoB,cAMfg4H,yBACL,MAAO,IAAIpxI,KAAKqwI,SAASluJ,QAMpB0rC,cACL,MAAO,IAAI7tB,KAAKswI,SAASrkH,UAMpBpV,kBACL,MAAO,IAAI7W,KAAKswI,SAASnuJ,QAMpB4jC,eAAe/sB,GACpB,OAAOgH,KAAKqwI,SAASzqE,IAAI5sE,GAQpBupB,eAAevpB,GACpB,MAAM0oC,EAAO1hC,KAAKqwI,SAAS7uJ,IAAIwX,GAC/B,QAAO0oC,GAAOA,EAAK0uG,QAAQjrJ,KAAO,EAS7B6zB,eAAehgB,GACpB,MAAM0oC,EAAO1hC,KAAKqwI,SAAS7uJ,IAAIwX,GAC/B,OAAO0oC,EAAOA,EAAKtoB,YAAcpZ,KAAK4wI,mBAMjCS,QAAQr4I,GACb,OAAOgH,KAAKswI,SAAS1qE,IAAI5sE,GASpBge,QAAQhe,GACb,OAAOgH,KAAKswI,SAAS9uJ,IAAIwX,IAASgH,KAAK2wI,YAQlC9jH,kBAAkB7zB,GACvB,OAAOgH,KAAKgX,QAAQhe,GAGfs4I,gBAAgBt4I,GACrB,OAAOgH,KAAKgX,QAAQhe,GAQfu4I,6BAA6Bv4I,GAClC,OAAOgH,KAAKgZ,eAAehgB,GAAMra,SAM5BqvC,0BACL,OAAOhuB,KAAKywI,qBAMP1iH,mBACL,OAAO/tB,KAAK0wI,cAMPziH,gBACLjuB,KAAKywI,qBAAuB,GAC5BzwI,KAAK0wI,cAAgB,GAQhBc,sBAAsBlkH,GAC3B,OAAOttB,KAAKgX,QAAQsW,GAAUrH,iBAGzBtI,6BACL,OAAO3d,KAAK8tB,qBACTzI,MAAK,CAAC3U,EAAGghF,IAAMhhF,EAAE/xB,SAAW+yG,EAAE/yG,WAC9BgE,KAAIy2B,GAAeA,EAAYpgB,OAQ7B+d,cAAcU,GACnB,OAAOA,IAASzX,KAAK2wI,YAQhB53H,qBAAqBK,GAC1B,OAAOA,IAAgBpZ,KAAK4wI,mBASvBj7H,kBAAkByD,GAEvB,IAAIkE,EAAUm0H,cAEd,KAAOzxI,KAAKqwI,SAASzqE,IAAItoD,IACvBA,EAAUm0H,cAaZ,OARAr4H,EAAYpgB,KAAOskB,EAEnBtd,KAAKqwI,SAASrmF,IAAI1sC,EAAS,IAAI4yH,EAAgB92H,IAG/CpZ,KAAK+wI,eACL/wI,KAAK0xI,mBAAmBt4H,EAAYpgB,KAAMogB,EAAYz6B,UAE/C2+B,EAUFiJ,sBAAsBnN,GAQ3B,OANApZ,KAAKqwI,SAASrmF,IAAI5wC,EAAYpgB,KAAM,IAAIk3I,EAAgB92H,IAGxDpZ,KAAK+wI,eACL/wI,KAAK0xI,mBAAmBt4H,EAAYpgB,KAAMogB,EAAYz6B,UAE/Cy6B,EAAYpgB,KASdk0B,qBAAqBykH,GAE1B,IAAIr0H,EAAUm0H,cAEd,KAAOzxI,KAAKswI,SAAS1qE,IAAItoD,IACvBA,EAAUm0H,cAWZ,OANAE,EAAW34I,KAAOskB,EAClBtd,KAAKswI,SAAStmF,IAAI1sC,EAAS,IAAKq0H,KAAeC,MAG/C5xI,KAAKgxI,eAEE1zH,EAWF0I,yBAAyB2rH,EAA4BE,GAsB1D,OAnBIA,EACF7xI,KAAKswI,SAAStmF,IAAI2nF,EAAW34I,KAAM,IAC9B24I,EACHjuH,MAAO,EACPD,YAAa,EACbE,WAAW,IAGb3jB,KAAKswI,SAAStmF,IAAI2nF,EAAW34I,KAAM,IAC9B24I,EACHjuH,MAAO,EACPD,YAAa,EACbE,WAAW,IAKf3jB,KAAKgxI,eAEEW,EAAW34I,KAQb+jB,kBAAkB3D,GAEvBpZ,KAAKqwI,SAASrmF,IAAI5wC,EAAYpgB,KAAM,IAAIk3I,EAAgB92H,IAGxDpZ,KAAK+wI,eACL/wI,KAAK0xI,mBAAmBt4H,EAAYpgB,KAAMogB,EAAYz6B,UAQjDouC,qBAAqB4kH,GAE1B3xI,KAAKswI,SAAStmF,IAAI2nF,EAAW34I,KAAM,IAAK24I,KAAeC,MAGvD5xI,KAAK+wI,eACL/wI,KAAKgxI,eAGAc,mBAAmBlzH,GACxB,MAAMnH,EAAOzX,KAAKgX,QAAQ4H,EAAS5lB,MACnC,GAAIgH,KAAK+W,cAAcU,GACrB,OAEFzX,KAAKswI,SAAStmF,IAAIprC,EAAS5lB,KAAM,IAAKye,KAASmH,IAE/C,MAAMqH,EAAmBxO,EAAKwO,iBAC9B,IAAK,MAAMjtB,KAAQitB,EAAkB,CACnC,MAAMyb,EAAO1hC,KAAKqwI,SAAS7uJ,IAAIwX,GAC3B0oC,IACF1hC,KAAK+xI,WAAWrwG,GAChB1hC,KAAKgyI,qBAAqBtwG,GAC1B1hC,KAAKiyI,eAAevwG,KAUnB1kB,kBAAkBk1H,GAavBlyI,KAAKqwI,SAAS74H,OAAO06H,GAErBlyI,KAAKqwI,SAASzqH,SAAQ,CAAC8b,EAAM1oC,KAdV0oC,IAA0BA,EAAK68E,SAAS34C,IAAIssE,GAezDC,CAAUzwG,IACZ1hC,KAAKqwI,SAASrmF,IAAIhxD,EAdA0oC,KACpB,MAAM0wG,EAAuB1wG,EAAKtoB,YAAYrE,kBAAkBvN,QAC9DxO,GAAQA,IAASk5I,IAInB,OAFAxwG,EAAKtoB,YAAYrE,kBAAoBq9H,EAE9B,IAAIlC,EAAgBxuG,EAAKtoB,cAQNi5H,CAAa3wG,OAKzC1hC,KAAKywI,qBAAqBvqI,KAAKgsI,GAG/BlyI,KAAK+wI,eACL/wI,KAAK0xI,qBAQA1kH,qBAAqBklH,GAC1B,MAGMG,EAAgB3wG,IACpB,MAAM4wG,EAJiB5wG,IACvBA,EAAKtoB,YAAYpE,UAAU+mD,WAAU/iE,GAAQA,IAASk5I,IAGlCK,CAAgB7wG,IACf,IAAjB4wG,GACF5wG,EAAKtoB,YAAYpE,UAAUwI,OAAO80H,EAAa,IAKnDtyI,KAAKswI,SAAS94H,OAAO06H,GAErBlyI,KAAKqwI,SAASzqH,SAAQ8b,GAAQ2wG,EAAa3wG,KAG3C1hC,KAAK0wI,cAAcxqI,KAAKgsI,GAGxBlyI,KAAK+wI,eACL/wI,KAAKgxI,eAMAx4H,gBACL,OAAOxY,KAAK8tB,qBACTtmB,QAAO4R,GAAeA,EAAYtE,QAAU9U,KAAK6xF,YAAYz4E,KAC7Dz2B,KAAI0iF,GAAQA,EAAKrsE,OAMf6vB,sBACL,OAAO7oB,KAAK8tB,qBACTtmB,QAAO4R,GAAeA,EAAYtE,QAAU9U,KAAK6xF,YAAYz4E,KAC7DiM,MAAK,CAACmtH,EAAOC,IAAUD,EAAM7zJ,SAAW8zJ,EAAM9zJ,WAC9CgE,KAAI+vJ,GAAcA,EAAW15I,OAM3BmvB,8BACL,OAAOnoB,KAAKixI,6BACTzpI,QAAO4R,GAAeA,EAAYtE,QAAU9U,KAAK6xF,YAAYz4E,KAC7DiM,MAAK,CAACmtH,EAAOC,IAAUD,EAAM7zJ,SAAW8zJ,EAAM9zJ,WAC9CgE,KAAI+vJ,GAAcA,EAAW15I,OAM3BkvB,gCACL,OAAOloB,KAAK8tB,qBACTzI,MAAK,CAACmtH,EAAOC,IAAUD,EAAM7zJ,SAAW8zJ,EAAM9zJ,WAC9CgE,KAAI+vJ,GAAcA,EAAW15I,OAQ3B64F,YAAYz4E,GACjB,MAAMu5H,EAAav5H,EAAYpE,UAAUrwB,OACnCiuJ,EAAex5H,EAAYrE,kBAAkBpwB,OAGnD,GAAmB,IAAfguJ,GAAqC,IAAjBC,EACtB,OAAO,EAIT,IAAK,IAAI7vJ,EAAI,EAAGA,EAAI4vJ,EAAY5vJ,IAC9B,IAAKid,KAAKgX,QAAQoC,EAAYpE,UAAUjyB,IAAI4gC,UAC1C,OAAO,EAIX,IAAK,IAAI5gC,EAAI,EAAGA,EAAI6vJ,EAAc7vJ,IAChC,IAAKid,KAAK6xF,YAAY7xF,KAAKgZ,eAAeI,EAAYrE,kBAAkBhyB,KACtE,OAAO,EAGX,OAAO,EAQF4hC,UAAU3rB,GACf,MAAM,UAAEgc,GAAchV,KAAKgZ,eAAehgB,GAC1C,OAAOgc,EAAUryB,KAAI2qC,GAAYttB,KAAKgX,QAAQsW,KAQzCulH,sBAAsB75I,GAC3B,MAAM85I,EAA2B,GACjC,IAAK,MAAMC,KAAa/yI,KAAKwhB,qBAAqBxoB,GAAO,CACvD,MAAM,UAAEgc,GAAchV,KAAKgZ,eAAe+5H,GAC1C/9H,EAAU4Q,SAAQ0H,GAAYwlH,EAAe5sI,KAAKonB,KAGpD,OAAOwlH,EAAenwJ,KAAI2qC,GAAYttB,KAAKgX,QAAQsW,KAQ9CvV,cAActpB,GACnB,OAAOuR,KAAKuwI,WAAW/uJ,IAAIiN,GAQtBukJ,cAAch6I,GACnB,OAAOgH,KAAKgX,QAAQhe,GAAMvK,KAQrB6qB,eAAe/yB,GACpB,OAAOyZ,KAAKwwI,YAAYhvJ,IAAI+E,GAQvB0sJ,eAAej6I,GACpB,OAAOgH,KAAKgZ,eAAehgB,GAAMzS,MAQ5Bm+B,iBAAiB1rB,GACtB,MAAMogB,EAAcpZ,KAAKgZ,eAAehgB,GACxC,OAAIogB,EAAYvE,aACP7U,KAAK2kB,UAAUvL,EAAYpgB,MAAMuG,QAAO,CAAC0B,EAAIwW,IAASxW,EAAKwW,EAAKiM,OAAO,GAEvEtK,EAAYnY,GAOhBiyI,aACL,OAAOlzI,KAAKmxI,8BAA8B5xI,QACxC,CAACw4F,EAAS3+E,IAAgB2+E,EAAU/3F,KAAK0kB,iBAAiBtL,EAAYpgB,OACtE,GASGqoB,gBAAgBroB,GACrB,OAAOgH,KAAKqwI,SAASzqE,IAAI5sE,GAAQgH,KAAKqwI,SAAS7uJ,IAAIwX,GAAO6lB,aAAe,EAQpEyC,UAAUtoB,GACf,OAAOgH,KAAKqwI,SAASzqE,IAAI5sE,GAAQgH,KAAKqwI,SAAS7uJ,IAAIwX,GAAO6X,OAAS+Q,IAAkBU,OAQhFpB,mBAAmBloB,GACxB,OAAOgH,KAAKqwI,SAASzqE,IAAI5sE,GAAQgH,KAAKqwI,SAAS7uJ,IAAIwX,GAAOioB,qBAAkB96B,EASvEgtJ,iBAAiBn6I,EAAc+5I,GACpC,QAAO/yI,KAAKqwI,SAASzqE,IAAI5sE,IAAQgH,KAAKqwI,SAAS7uJ,IAAIwX,GAAOulH,SAAS34C,IAAImtE,GAQlEvxH,qBAAqBxoB,GAC1B,OAAOgH,KAAKqwI,SAASzqE,IAAI5sE,GAAQgH,KAAKqwI,SAAS7uJ,IAAIwX,GAAOulH,SAAW,IAAIl/G,IASpE+zI,aAAap6I,EAAc+5I,GAChC,QAAO/yI,KAAKqwI,SAASzqE,IAAI5sE,IAAQgH,KAAKqwI,SAAS7uJ,IAAIwX,GAAOm3I,WAAWvqE,IAAImtE,GAQpEM,eAAer6I,GACpB,OAAOgH,KAAKqwI,SAASzqE,IAAI5sE,GAAQgH,KAAKqwI,SAAS7uJ,IAAIwX,GAAOm3I,WAAa,IAAI9wI,IAQtE+hB,gBAAgBpoB,GACrB,IAAI++F,EAAU/3F,KAAK0kB,iBAAiB1rB,GAQpC,OANAgH,KAAKqzI,eAAer6I,GAAM4sB,SAAQ0tH,IAC5BtzI,KAAK6xF,YAAY7xF,KAAKgZ,eAAes6H,MACvCv7C,GAAW/3F,KAAK0kB,iBAAiB4uH,OAI9Bv7C,EAQFw7C,+BAA+Bv6I,GACpC,OAAOgH,KAAKoxI,yBAAyB5pI,QACnC/lB,GACEA,IAAWuX,IAASgH,KAAKozI,aAAap6I,EAAMvX,KAAYue,KAAKozI,aAAa3xJ,EAAQuX,KAOhF+3I,eACN/wI,KAAKwwI,YAAc,IAAI5nF,IAEvB5oD,KAAKqwI,SAASzqH,SAAQ8b,IACpB,MAAM,MAAEn7C,EAAK,KAAEyS,GAAS0oC,EAAKtoB,YAC7BpZ,KAAKwwI,YAAYxmF,IAAIzjE,EAAOyS,GAE5B0oC,EAAKtoB,YAAYrE,kBAAoBu5G,eAAK5sF,EAAKtoB,YAAYrE,mBAC3D2sB,EAAKtoB,YAAYpE,UAAYs5G,eAAK5sF,EAAKtoB,YAAYpE,WAEnDhV,KAAKwzI,wBAAwB9xG,GAC7B1hC,KAAKyzI,mBAAmB/xG,GACxB1hC,KAAK0zI,wBAAwBhyG,GAC7B1hC,KAAK+xI,WAAWrwG,GAChB1hC,KAAKgyI,qBAAqBtwG,GAC1B1hC,KAAKiyI,eAAevwG,MAIhBsvG,eACNhxI,KAAKuwI,WAAa,IAAI3nF,IAEtB5oD,KAAKswI,SAAS1qH,SAAQnO,IACpB,MAAM,KAAEhpB,EAAI,KAAEuK,GAASye,EACvBzX,KAAKuwI,WAAWvmF,IAAIv7D,EAAMuK,GAC1Bye,EAAKwO,iBAAmBqoG,eAAK72G,EAAKwO,qBAS9B4qH,kBAAkBziH,GACxB,MAAMiiH,EAAW,IAAIznF,IAIrB,OAHAx6B,EAAaxI,SAAQxM,GACnBi3H,EAASrmF,IAAI5wC,EAAYpgB,KAAM,IAAIk3I,EAAgBvzH,oBAAUvD,OAExDi3H,EAQDS,kBAAkBttH,GACxB,MAAM8sH,EAAW,IAAI1nF,IAErB,OADAplC,EAAMoC,SAAQnO,GAAQ64H,EAAStmF,IAAIvyC,EAAKze,KAAM2jB,oBAAUlF,MACjD64H,EAQDkD,wBAAwB9xG,GAE9B,IAAK,MAAMqxG,KAAarxG,EAAK68E,SAAU,CAAC,IAAD,EACT,QAA5B,EAAAv+G,KAAKqwI,SAAS7uJ,IAAIuxJ,UAAU,OAA5B,EAA8B3C,QAAQv3I,IAAI6oC,EAAKtoB,YAAYpgB,OASvDy6I,mBAAmB/xG,GACzB,IAAK,MAAMqxG,KAAarxG,EAAKyuG,WAAY,CACvC,GAAI4C,IAAcrxG,EAAKtoB,YAAYpgB,KAAM,CACvC,MAAM,MAAEzS,GAAUm7C,EAAKtoB,YAIvB55B,YAAmB,+CAA8C+G,IAAS,KAE5E,IAAK,MAAMotJ,KAAkB3zI,KAAKqzI,eAAeN,GAE/CrxG,EAAKyuG,WAAWt3I,IAAI86I,IAclBD,wBAAwBhyG,GAE9B,MAmBMkyG,EAA4C,GAClD,IAAK,MAAMb,KAAarxG,EAAKyuG,WAAY,CACvC,MAAM0D,EAAgB7zI,KAAKgZ,eAAe+5H,GAAW1lI,SACrDumI,EAAoB1tI,KAAK2tI,GAI3BnyG,EAAKzgB,gBAAkB2yH,EAAoBr0I,QA1BlB,CACvB0hB,EACA6yH,SAEwB3tJ,IAApB2tJ,GAAiC/zH,YAAU+zH,GAEtC7yH,OACsB96B,IAApB86B,GAKFlB,YAAUkB,IAAoB6yH,EAAkB7yH,EAJhD6yH,EAMH7yH,GAY4DygB,EAAKzgB,iBAQnE8wH,WAAWrwG,GACjB,MAAM,UAAE1sB,EAAS,aAAEH,GAAiB6sB,EAAKtoB,YACnC26H,EAAoB/+H,EAAUzV,QAClC,CAACy0I,EAAY1mH,IAAa0mH,GAAch0I,KAAKgX,QAAQsW,GAAU3J,YAC/D,GAEF+d,EAAKzgC,GAAK8yI,EACNl/H,EACEG,EAAUzV,QAAO,CAAC0B,EAAIqsB,IAAarsB,EAAKjB,KAAKgX,QAAQsW,GAAU5J,OAAO,GACtEge,EAAKtoB,YAAYnY,GACnB,EAQE+wI,qBAAqBtwG,GAC3B,MAAM,UAAE1sB,GAAc0sB,EAAKtoB,YAC3B,GAAyB,IAArBpE,EAAUrwB,OACZ+8C,EAAK7iB,aAAe,MACf,CACL,MAAMs2C,EAAMngD,EAAUzV,QAAO,CAACmkB,EAAO4J,IAAa5J,EAAQ1jB,KAAKgX,QAAQsW,GAAU5J,OAAO,GAClFuwH,EAAQj/H,EAAUzV,QACtB,CAACmkB,EAAO4J,IAAa5J,EAAQ1jB,KAAKgX,QAAQsW,GAAU7J,aACpD,GAEFie,EAAK7iB,aAAeJ,KAAKrgB,IAAc,IAAV61I,EAAc,EAAI9+E,EAAM8+E,EAAO,IAaxDhC,eAAevwG,GAErB,MAAMwyG,EAAuBl0I,KAAK6xF,YAAYnwD,EAAKtoB,aAE7C+6H,EAActuH,YAAW6b,EAAKtoB,YAAY4C,SAC1Co4H,GAAwBr0H,YAAU2hB,EAAKzgB,iBAE7CygB,EAAK7wB,OAASqjI,EACVtyH,IAAkBC,UAClBsyH,EACAC,EACExyH,IAAkBU,OAClBV,IAAkByyH,QACpBzyH,IAAkBsvH,WAWhBQ,mBAAmB4C,EAAqBC,GAC9C,IAAIpwF,EAAc,EAYlB,GAXAnkD,KAAK8tB,qBACFtmB,QAAO4R,GAAeA,EAAYtE,SAClCtN,QAAO4R,GAAeA,EAAYz6B,UAAY,IAC9C0mC,MAAK,CAACmtH,EAAOC,IAAUD,EAAM7zJ,SAAW8zJ,EAAM9zJ,WAC9CinC,SAAQ8sH,GAAeA,EAAW/zJ,SAAWwlE,MAChDnkD,KAAK8tB,qBACFtmB,QAAO4R,IAAgBA,EAAYtE,SACnC8Q,SAAQ4uH,GAAYA,EAAQ71J,SAAW,IAItC21J,GAAcC,GAAqC,IAAnBA,EAAsB,CACxD,MAAME,EAAoBz0I,KAAKgZ,eAAes7H,GACxCnwF,EAAcswF,EAAkB91J,SACtC,GAAIwlE,IAAgBowF,EAAgB,CAClC,MAAMG,EAAuB10I,KAAK8tB,qBAAqBvJ,MACrDnL,GAAeA,EAAYz6B,WAAa41J,IAEtCG,IACFA,EAAqB/1J,SAAWwlE,EAChCswF,EAAkB91J,SAAW41J,Q,6JCt4BxBI,MAhCsCh1J,GAEjD,cAAC,IAAS,CACRi1J,KAAK,IACLC,OAAO,cACPl2J,SAAUgB,EAAMhB,SAChBqL,OAAQ,CAAE8qJ,KAAM,IAAKnjH,KAAM,EAAGzqC,MAAO,EAAGE,OAAQ,GAChD2tJ,OAAQp1J,EAAMo1J,OACdpuJ,SAAUhH,EAAMgH,SAAS,SAEzB,sBAAK/B,UAAU,mBAAkB,UAC7BjF,EAAMgH,SAON,qBAAK/B,UAAU,kBAAkBmB,GAAG,aAAY,SAC7C,CAAC,IAAK,IAAK,KAAKpD,KAAII,GACnB,qBAAK6B,UAAU,UAAc7B,OARjC,qBAAK6B,UAAU,iBAAiBmB,GAAG,aAAY,SAC5C,CAAC,IAAK,IAAK,KAAKpD,KAAII,GACnB,qBAAK6B,UAAU,UAAc7B,OAUnC,qBAAK6B,UAAU,eAAc,SAC3B,cAACyG,EAAA,EAAI,IAAK1L,EAAM2L,mB,kBCiGX0pJ,MA3HuCr1J,IACpD,MAAOs1J,EAAiBC,GAAqBzwJ,IAAMC,UAAS,IACrDywJ,EAAeC,GAAoB3wJ,IAAMC,SAAS,WAClD2wJ,EAAkBC,GAAuB7wJ,IAAMC,SAAS,CAAE9B,EAAG,EAAGwlD,EAAG,KACnEmtG,EAAeC,GAAoB/wJ,IAAMC,SAAS,GASnD+wJ,EAAwBhtJ,IAC5BA,EAAMisG,kBAgDFghD,EAAgB,CACpB73C,WArBsBzjD,IACtB,IAAKz6D,EAAMg2J,oBACT,OAEF,MAAMtoB,EAAS1tI,EAAMg2J,oBACN,gBAAXv7F,EACFizE,EAAOuoB,eACa,iBAAXx7F,EACTizE,EAAOwoB,gBACa,WAAXz7F,EACTizE,EAAOjjE,OAAO,QACM,UAAXhQ,EACTizE,EAAOyoB,OAAO,MACL,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,MAAO,KAAM,MAAMzvI,SAAS+zC,GACrEizE,EAAOyoB,OAAO,IAAM17F,EAAS,KAE7BizE,EAAOyoB,OAAO17F,IAMhB27F,UAAW,2BACXC,OAAQ,CACNpiD,QAAS,CACP,sBACA,0BACA,0CAGJqiD,YAAa,CACX,CACEC,MAAO,oBACPh9E,QAAS,4BAEX,CACEg9E,MAAO,cACPh9E,QAAS,WAGb00D,MAAO,mBACPuoB,yBAAyB,EACzBC,yBAAyB,GAG3B,OACE,cAAC,IAAS,CACRxB,KAAK,IACLC,OAAO,uBACPl2J,SAAU02J,EACVrrJ,OAAQ,CAAE8qJ,KAAM,IAAKnjH,KAAM,EAAGzqC,MAAO,EAAGE,OAAQ,KAChD2tJ,OAvFkC,CACpC9+G,EACAt3C,KAEA22J,EAAoB32J,IAmFH,SAEf,sBAAKiG,UAAU,2BAA2BmB,GAAG,yBAAwB,UACnE,wBACEnB,UAAU,yBACVhB,QAjFc6E,IAChBwsJ,GAEFtkH,SAASC,eAAe,0BAA2BjnC,MAAM24I,YAAY,UAAW,QAChF3xG,SAASC,eAAe,0BAA2BjnC,MAAM24I,YAAY,QAAS,QAC9E3xG,SAASC,eAAe,0BAA2BjnC,MAAM24I,YAAY,UAAW,OAChF8S,EAAiB,UACjBF,GAAkB,KAGlBvkH,SAASC,eAAe,0BAA2BjnC,MAAM24I,YAAY,UAAW,QAChF3xG,SAASC,eAAe,0BAA2BjnC,MAAM24I,YAAY,QAAS,OAC9E3xG,SAASC,eAAe,0BAA2BjnC,MAAM24I,YAAY,UAAW,KAChF8S,EAAiB,UACjBF,GAAkB,KAoEdmB,YAAaZ,EAAqB,SAEjCN,IAGH,sBAAKvwJ,UAAU,mCAAmCmB,GAAG,yBAAwB,UAC3E,qBAAKnB,UAAU,4BAA2B,SACxC,cAAC,IAAQ,IAAK8wJ,MAEhB,wBACE9wJ,UAAU,6BACVhB,QA3Ee6E,IACvB+sJ,GAAkBD,EAAgB,GAAK,GACvC,MAAMe,EAAgB3lH,SAAS4lH,uBAAuB,4BACtD79H,MAAM81C,KAAK8nF,GAAgD,GAAG3sJ,MAAMmrJ,IACjD,IAAhBS,EAAqB,MAwEhBc,YAAaZ,EAAqB,uBAMtC,qBAAK1vJ,GAAG,sBAAqB,qB,oECtGtBywJ,MAnBqC72J,IAClD,MAAM82J,EACJ,sBAAK7xJ,UAAU,qBAAoB,UAChCjF,EAAMmpB,cACNnpB,EAAMopB,YACNppB,EAAMkwI,2BAIX,OACE,cAAC,IAAQ,CAAC7rI,QAASyyJ,EAAgBrwB,WAAW,EAAM,SAClD,cAAC,IAAM,CACL3iI,KAAMC,IAAUm5I,IAChBj4I,UAAWG,IAAWyK,IAAQC,QAAS,kCC+GhCinJ,MAxE6CjyJ,IAAMmnH,MAChE,IAAwF,IAAvF,cAAEtmH,EAAa,yBAAEC,EAAwB,sBAAEomB,KAA0BjmB,GAAY,EAChF,MAAMixJ,EAAQ,cAAcj0D,KAAKxoE,UAAU08H,UAMrCC,EAAkBhxJ,GA4BfA,EAAYlD,KAAIkC,GA1BH,EAACA,EAAqBoB,KACxC,IAAKpB,EAAIO,KAAM,OAEf,MAAMwB,EAAuBX,EACzB,IACKpB,EAAIO,KACPzF,MAAO,IACFkF,EAAIO,KAAKzF,MACZsG,sBAGJpB,EAAIO,KAGR,OACE,qBACER,UACEC,EAAIkB,KAAOT,EAAgB,wBAA0B,0BACtD,SAGAsB,GAFI/B,EAAIkB,KAOe+wJ,CAAYjyJ,EAAKa,EAAWO,qBAG5D,OACE,cAACN,EAAA,EAAkB,IACbD,EACJE,eAAgB,CAACC,EAAaC,IAE1B,qCACG+wJ,EAAehxJ,GAChB,qBAAKjB,UAAU,wBAAuB,SACpC,eAAC,IAAI,CACHmB,GAAG,sBACHC,SAAUF,EACVP,yBAA0BA,EAC1BD,cAAeA,EACfV,UAAWG,IAAWyK,IAAQ8Q,KAAM,uBAAuB,UAE1Dza,EAAYlD,KAAIkC,GApFjB,EAACA,EAAqB8xJ,EAAgB1wJ,KACtD,MACMC,OAAmBC,IAAXtB,EAAIkB,GAAmBlB,EAAIrB,MAAQqB,EAAIkB,GAC/CgxJ,EACJ,cAAC,IAAQ,CACP/yJ,QAASa,EAAIrB,MACbwzJ,UAAW,KAEG,IAAD,EAAPL,IAC4C,QAA9C,EAAAhmH,SAASC,eAAenqC,YAAeP,WAAO,OAA9C,EAAgDu+H,UAElD,SAEF,qBAAK7/H,UAAU,uBAAuBmB,GAAIU,YAAeP,GAAO,SAC9D,cAAC,IAAI,CAACzC,KAAMoB,EAAIK,SAAUwB,SAbf,SAkBjB,OACE,cAAC,IAAG,CAEFX,GAAIG,EACJK,MAAOwwJ,EACPpwJ,SAAU9B,EAAI8B,SACd/B,UAAU,oBAJLsB,IA+D+Ba,CAAUlC,EAAK8xJ,EAAOjxJ,EAAWO,sBAGtB,eAAjCP,EAAWO,mBACsB,SAAjCP,EAAWO,oBACX,cAAC,EAAgB,IAAK0lB,gBAUxC3kB,KC4Ka4kB,IA7QyCjsB,IACtD,MAAMs3J,EAAY,UAAUv0D,KAAKxoE,UAAUwnH,WACrCwV,EAAaC,wBAAc,CAAEC,YAAa,cACzCC,EAAuBC,GAA4B7yJ,IAAMC,SAAS,CAAE9B,EAAG,EAAGwlD,EAAG,KAG7EmvG,EAAyBC,GAA8B/yJ,IAAMC,UAAS,GAG7EyD,IAAkBC,sBAGlB3D,IAAMwa,WAAU,KACyC,eAAnDtf,EAAM+rB,uBAAuBzlB,mBAC/B0qC,SAAS0xG,gBAAgB14I,MAAM24I,YAC7B,wBACA,+BAIG,KACL3xG,SAAS0xG,gBAAgB14I,MAAM24I,YAAY,wBAAyB,wBAIrE,IAOH79I,IAAMwa,WAAU,KACd,GAAIi4I,GAAcD,EAAW,CAC3BtmH,SAAS0xG,gBAAgB14I,MAAM24I,YAAY,WAAY,QAClC3xG,SAAS8mH,cAAc,uBAC9B9iC,aACZ,UACA,UAAYv0H,OAAO+yC,YAAc,wBAKrC,MAAO,KACL,GAAI8jH,EAAW,CACbtmH,SAAS0xG,gBAAgB14I,MAAM24I,YAAY,WAAY,UAClC3xG,SAAS8mH,cAAc,uBAC9B9iC,aACZ,UACA,6EAGJ+iC,OAED,CAACR,EAAYD,IAEhB,MAAOtB,EAAqBgC,GAA0BlzJ,IAAMC,SAA4B,MAElFkzJ,EAA2B,IAAMD,EAAuB,MAExDE,EAAiCl4J,IAgB9B,IACFA,EACHm4J,QAjBc,CAACrvJ,EAAY4kI,KACvB1tI,EAAMm4J,SACRn4J,EAAMm4J,QAAQrvJ,EAAO4kI,GAElBA,GAGLsqB,EAAuBtqB,IAWvBvvB,OATa,CAACr1G,EAAY4kI,KACtB1tI,EAAMm+G,QACRn+G,EAAMm+G,OAAOr1G,EAAO4kI,GAEtBuqB,OAwEEG,EAAkBC,IACtBrnH,SAAS0xG,gBAAgB14I,MAAM24I,YAAY,uBAAwB7jH,KAAKpgB,KAAK25I,EAAQ,GAAK,MAC1FV,EAAyB,CAAE10J,EAAG,EAAGwlD,EAAG4vG,KAGhCN,EAAiB,KACrBJ,EAAyB,CAAE10J,EAAG,EAAGwlD,EAAG,IACpCzX,SAAS0xG,gBAAgB14I,MAAM24I,YAAY,uBAAwB,QAqC/D2V,EAAgCt4J,EAAM8K,aAAatG,KAAKqjB,QAAO3iB,QAAkBsB,IAAXtB,EAAIkB,KAE1EmyJ,EAAkCzzJ,IAAM+Y,SAC5C,MACEha,MAAO,SACP0B,SAAUxB,IAAU4tB,KACpBlsB,KAAM,KACNW,GAAIK,IAAgBgd,gBAEtB,IAGI+0I,EAA+B1zJ,IAAM+Y,SACzC,MACEha,MAAO,MACP0B,SAAUxB,IAAU0tB,KACpBhsB,KAAM,KACNW,GAAIK,IAAgBid,mBAEtB,IAyBI+0I,EAC+C,eAAnDz4J,EAAM+rB,uBAAuBzlB,mBACsB,qBAAnDtG,EAAM+rB,uBAAuBzlB,kBAE/B,OACE,sBAAKrB,UAAU,6BAA4B,UACxCjF,EAAM0K,kBACL,cAAC,IAAM,CACLtL,QAAS,4EAET,KAGHq5J,GACC,cAAC9tJ,EAAA,EAAU,IAAK3K,EAAM+rB,uBAAuBC,wBAG/C,gCACE,qBAAK/mB,UAAU,sBAAqB,SArJb,MAC3B,GAAIjF,EAAMqL,qBAAsB,CAC9B,MAAMA,EAAuB,IACxBrL,EAAMqL,sBAKX,MAH2C,eAAvCA,EAAqB2e,gBACvB3e,EAAqBssJ,yBAA2B,IAAMS,GAAgB,MAEjE,cAAC9sJ,EAAA,EAAe,IAAK4sJ,EAA8Bl4J,EAAMqL,wBAEhE,OAAO,cAACE,EAAA,EAAU,IAAKvL,EAAMwL,YA2IWC,KACtC,cAAC,EAAiB,IAxCf,IACFzL,EAAM+rB,uBACT1lB,SAAU,CACR0gB,EACAC,EACAle,KAEA9I,EAAM+rB,uBAAuB1lB,SAAS0gB,EAAUC,EAAWle,GAhElC,EAACie,EAA2BC,KAEN,IAAD,EAA9CD,IAAatgB,IAAgBid,kBACL,QAA1B,EAAA1jB,EAAMqL,4BAAoB,OAA1B,EAA4Byd,oBAK5B/B,IAAatgB,IAAgBid,iBAE3BsD,IAAcvgB,IAAgB0wI,iBAC9BnwH,IAAcvgB,IAAgBsd,YAC9BiD,IAAcvgB,IAAgBwV,UAGhCm8I,GAAgB,KAEhBL,IAKAhxI,IAAatgB,IAAgBgjH,OAC7B1iG,IAAatgB,IAAgB0wI,iBAC5BnwH,IAAcvgB,IAAgB0wI,iBAC7BpwH,IAAatgB,IAAgBid,gBAE/Bm0I,GAA2B,GAE3BA,GAA2B,IAoCzBa,CAAuB3xI,EAAUC,IAEnCxiB,KAAM,CACJqiB,kBAAmB,IACdyxI,EACHC,KACGv4J,EAAM+rB,uBAAuBvnB,KAAKqiB,mBAEvCC,iBAAkB,IAAI9mB,EAAM+rB,uBAAuBvnB,KAAKsiB,iBAAkB0xI,UA2B5E,cAAC,EAAa,CAEZx5J,SAAU04J,EACVtC,OAzHS,CAAC9+G,EAAmBt3C,KACjCgyC,SAAS0xG,gBAAgB14I,MAAM24I,YAC7B,uBACA7jH,KAAKpgB,KAAK1f,EAASypD,EAAG,GAAK,MAE7BkvG,EAAyB34J,IAqHrBgI,SAAU4wJ,EACVjsJ,UAlL+B3L,KAa5B,IACFA,EACHm4J,QAdezqB,IACX1tI,EAAMm4J,SACRn4J,EAAMm4J,QAAQzqB,GAEhBsqB,EAAuBtqB,IAWvBvvB,OATa,KACTn+G,EAAMm+G,QACRn+G,EAAMm+G,SAER85C,OAuKaU,CAA4B34J,EAAM2L,YAJzC,QAON,cAAC,EAAc,CAACqqJ,oBAAqBA,S,sGC9RpC,MAAM4C,EAAkF,IAExF,IAFyF,QAC9F30J,GACD,EACC,OACE,cAACgI,EAAA,EAAa,CACZpI,MAAM,oBACNC,KAAMC,IAAUilC,YAChB/kC,QAASA,EACTiI,QAAS,CAAEJ,aAAa,MCCjBsc,EAA4DpoB,GAChEA,EAAMsnB,iBAAkB,KAAOtnB,EAAMsnB,iBAAkB,GAC5D,cAACsxI,EAA+B,CAAC30J,QAASjE,EAAMynB,eAAmB,qBAEnE,cAACxb,EAAA,EAAa,CACZpI,MAAM,OACNC,KAAMC,IAAUilC,YAChB/kC,QAASjE,EAAMunB,YACfrb,QAAS,CAAEJ,aAAa,M,wGClBvB,MAAe+sJ,EAA6B,cAAD,KACtCC,GAAa,EAAE,KACfC,GAAa,EAAE,KACfC,OAAiB,EAAE,KACnBC,QAAkB,EAAE,KACpBC,UAAoB,EAAM,KAmBpCxvJ,IAAsB5E,IAAMq0J,YAlB5Bl2J,IACE,OAAOod,KAAKy4I,GAEdrwG,IACE,OAAOpoC,KAAK04I,GAEd1vJ,QACE,OAAOgX,KAAK24I,OAEd1vJ,SACE,OAAO+W,KAAK44I,QAEdG,UACE,OAAO/4I,KAAK64I,SAEdG,QACEh5I,KAAK64I,UAAW,GC7Bb,IAAKI,GAsDX,SAtDWA,OAAa,uCAAbA,IAAa,qCAAbA,IAAa,oCAAbA,IAAa,oCAAbA,IAAa,kCAAbA,IAAa,kCAAbA,IAAa,mCAAbA,IAAa,kCAAbA,IAAa,kCAAbA,IAAa,gCAAbA,IAAa,gCAAbA,IAAa,yCAAbA,IAAa,wBAAbA,IAAa,iCAAbA,IAAa,wCAAbA,IAAa,gCAAbA,IAAa,kCAAbA,IAAa,oCAAbA,IAAa,uCAAbA,IAAa,2CAAbA,IAAa,gCAAbA,IAAa,gCAAbA,IAAa,2BAAbA,IAAa,gCAAbA,EAAa,kCAAbA,IAAa,wBAAbA,EAAa,mBAAbA,EAAa,qBAAbA,EAAa,uBAAbA,IAAa,kCAAbA,IAAa,uCAAbA,IAAa,6CAAbA,IAAa,qDAAbA,IAAa,0CAAbA,EAAa,mBAAbA,EAAa,kBAAbA,EAAa,yBAAbA,EAAa,oBAAbA,EAAa,mBAAbA,EAAa,kBAAbA,EAAa,kBAAbA,EAAa,iDAAbA,EAAa,iBAsDxB,CAtDWA,MAAa,KAwDlB,MAAMC,EAAoB,CAC/BxkD,gBAAgB,G,qBCzDX,IAAKykD,GAiEX,SAjEWA,OAAM,uCAANA,IAAM,qCAANA,IAAM,oCAANA,IAAM,oCAANA,IAAM,kCAANA,IAAM,kCAANA,IAAM,mCAANA,IAAM,kCAANA,IAAM,kCAANA,IAAM,gCAANA,IAAM,iCAANA,IAAM,yCAANA,IAAM,wBAANA,IAAM,iCAANA,IAAM,wCAANA,IAAM,gCAANA,IAAM,kCAANA,IAAM,wCAANA,IAAM,wCAANA,IAAM,oCAANA,IAAM,uCAANA,IAAM,2CAANA,IAAM,yCAANA,IAAM,gCAANA,IAAM,gCAANA,IAAM,2BAANA,IAAM,gCAANA,EAAM,kCAANA,IAAM,wBAANA,EAAM,mBAANA,EAAM,qBAANA,EAAM,uBAANA,IAAM,kCAANA,IAAM,uCAANA,IAAM,6CAANA,IAAM,qDAANA,IAAM,kDAANA,IAAM,0CAANA,IAAM,qCAANA,IAAM,iCAANA,IAAM,yCAANA,IAAM,iDAANA,IAAM,iEAANA,IAAM,qCAANA,IAAM,wCAANA,EAAM,mBAANA,EAAM,kBAANA,EAAM,yBAANA,EAAM,oBAANA,EAAM,mBAANA,EAAM,kBAANA,EAAM,kBAANA,EAAM,iDAANA,EAAM,iBAiEjB,CAjEWA,MAAM,KAmEX,MAAMD,EAAoB,CAC/BxkD,gBAAgB,G,WChDX,MAAMnpG,EAA8B,CACzCZ,SAAUo5B,OAAOq1H,UACjBluG,WAAYiuG,EAAOE,WAAWryI,WAC9BmkC,SAAUpnB,OAAOo1H,EAAOG,UACxBC,UAAWJ,EAAOK,UAAUxyI,WAC5ByyI,YAAaN,EAAOO,YAAY1yI,WAChC2yI,sBAAsB,GAIjB,MAAM/tG,UAAa4sG,EASxBroH,YACWxsB,EACT/gB,EACAwlD,GAIC,IAFDv8C,EAA6B,uDAAG,GAChC5J,EAAa,uCAEbmuC,QAAQ,KAPCzsB,OAAU,KATZi2I,mBAAa,OAEbC,gBAAU,OACVC,aAAO,OAEPjuJ,QAAuBN,EAAe,KACtCtJ,WAAK,OAyCd83J,eAAiB,CAACn3J,EAAWwlD,KAC3BpoC,KAAKy4I,GAAK71J,EACVod,KAAK04I,GAAKtwG,GACV,KACFtpB,aAAe,IAAsD,IAAD,MAApD,cAAEm9E,GAA6C,EACzDl8G,GAAci6J,qBAClBC,GAAiBh+C,GACjBj8F,KAAK3W,IAAIf,QAAQ4xJ,YACjBl6I,KAAK3W,IAAIf,QAAQpJ,OACO,QAAxB,EAAA+8G,EAAcn+B,kBAAU,OAAxB,EAA0Bq8E,SAC1B,KAEFp7H,aAAe,IAAsD,IAAD,MAApD,cAAEk9E,GAA6C,EACzDl8G,GAAci6J,qBAClBI,GAAmBn+C,GACnBj8F,KAAK3W,IAAIf,QAAQ+xC,OACO,QAAxB,EAAA4hE,EAAcn+B,kBAAU,OAAxB,EAA0Bq8E,SA9C1Bn6I,KAAKy4I,GAAK71J,EACVod,KAAK04I,GAAKtwG,EACVpoC,KAAK/d,MAAQA,EACb+d,KAAKnU,QAAU,IAAKmU,KAAKnU,WAAYA,GAErC,MAAM,SAAEs/C,EAAQ,UAAEouG,EAAS,WAAEruG,EAAU,SAAEvgD,EAAQ,qBAAEgvJ,GAAyB35I,KAAKnU,QAEjFmU,KAAK85I,QAAU95I,KAAK65I,WAAaF,GAC7BjvH,KAAK7iB,UAAUlE,IACfoO,OAAOpO,GACX3D,KAAK44I,QAAUztG,EAEf,MAAMkvG,EAAW9iB,GAAc+iB,GAAa/iB,EAAI,GAAEgiB,KAAapuG,OAAcD,KAE7E,GADAlrC,KAAK45I,cAAgBS,EAAQr6I,KAAK65I,YAC9B75I,KAAK45I,cAAgBjvJ,EAAU,CACjC,IAAI4vJ,EAAgBpB,EAAOqB,SAASxzI,WAChCjkB,EAAI,EACR,KAAOs3J,EAAQr6I,KAAK65I,WAAWnuG,UAAU,EAAG3oD,GAAKo2J,EAAOqB,SAASxzI,YAAcrc,GAC7E4vJ,EAAgBv6I,KAAK65I,WAAWnuG,UAAU,EAAG3oD,KAAOo2J,EAAOqB,SAASxzI,WAEtEhH,KAAK24I,OAAS0B,EAAQE,GACtBv6I,KAAK65I,WAAaU,OAElBv6I,KAAK24I,OAASl6H,KAAKpgB,IAAI86I,EAAOsB,aAAcJ,EAAQr6I,KAAK65I,aAI7Da,eACE,OAAO16I,KAAK45I,cAqBdO,OACE,MAAMx6J,EAAQ,CACZurD,WAAYlrC,KAAKnU,QAAQq/C,WACzBC,SAAUnrC,KAAKnU,QAAQs/C,SACvBouG,UAAWv5I,KAAKnU,QAAQ0tJ,UACxBptJ,KAAMpM,GAAci6J,mBAChBb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,YAEtB,OACE,eAAC,IAAK,CAAoB8X,aAAc9e,KAAK8e,aAAcC,aAAc/e,KAAK+e,aAAa,UACzF,cAAC,IAAU,CAACn8B,EAAGod,KAAKpd,IAAKwlD,EAAGpoC,KAAKooC,IAAI,SACnC,wBAAC,IAAS,IAAK8wG,EAAmBj6J,IAAK47J,GAAO57J,MAAOwP,KAAMuR,KAAK65I,cAAgBl6J,MAElF,eAAC,IAAU,CAACiD,EAAGod,KAAKpd,IAAKwlD,EAAGpoC,KAAKooC,IAAK/+C,IAAK2W,KAAK3W,IAAKoxF,SAAS,EAAOqgE,WAAW,EAAM,UACpF,cAAC,IAAQ,IACH5B,EACJ/sJ,KAAMpM,GAAci6J,mBAAqB,QAAU,QACnDr4H,QAAS,GACTm5H,WAAW,IAEb,wBAAC,IAAS,IACJ5B,EACJj6J,IAAK47J,GAAO57J,MACZwP,KAAMuR,KAAK85I,WACPn6J,EACJm7J,WAAW,SAhBLD,GAAO57J,QC1FlB,MAAM87J,UACHvC,EAYRroH,YAAY6qH,GACV5qH,QAAQ,KAVV6qH,OAAmB,GAAG,KACtBD,YAAM,OACNv5J,YAAM,OAEEy5J,MAAgB,GAAG,KACnBl2J,UAAoB,EAAM,KACzBm2J,kBAA4BhC,EAAOiC,sBAAsB,KACzDC,gBAA0B,EAIjCr7I,KAAKg7I,OAASA,EACdh7I,KAAKy4I,GAAKuC,EAAOp4J,IACjBod,KAAK04I,GAAKsC,EAAO5yG,IAEnBxZ,OACE,OAAO5uB,KAAKk7I,MAEd1pI,GAAG/vB,GAID,OAHAue,KAAKve,OAASA,EACdue,KAAK24I,OAASl6H,KAAKw6F,IAAIx3H,EAAOmB,IAAMod,KAAKg7I,OAAOp4J,KAChDod,KAAK44I,QAAUn6H,KAAKw6F,IAAIx3H,EAAO2mD,IAAMpoC,KAAKg7I,OAAO5yG,KAC1CpoC,KAET2sG,aACE,OAAO3sG,KAAKhb,SAkBJs2J,iBACR,MAAM9pI,EAAKxR,KAAKve,OAChB,OAAK+vB,EACE,CAAC,IAAM,CAACA,EAAG5uB,IAAK4uB,EAAG42B,MADV,GAGlBmzG,iBACE,OAAOx3H,OAAOo1H,EAAOqC,kBAEvB18H,aAAamX,GACXgkH,GAAiBhkH,EAAEx0C,QACnBg6J,GAAgBxlH,EAAEgmE,cAAe,CAC/By/C,YAAa33H,OAAOo1H,EAAOwC,2BAE7B37I,KAAK3W,IAAIf,QAAQq5B,QAAU3hB,KAAKm7I,kBAElCv3J,QAAQ,GAAkD,IAAlD,cAAEq4G,GAA6C,EAE5B,IAAD,GADxBj8F,KAAKhb,UAAYgb,KAAKhb,SACjBgb,KAAK2sG,gBAEJ3sG,KAAKg7I,kBAAkBpvG,GAAyB,QAArB,EAAI5rC,KAAKg7I,OAAO/4J,aAAK,OAAjB,EAAmB0qH,cAClD3sG,KAAKg7I,kBAAkBY,GAAS57I,KAAKg7I,OAAOruC,cAO9C8uC,GAAgBx/C,EAAe,CAC7By/C,YAAa33H,OAAOo1H,EAAOwC,yBAA2B37I,KAAKm7I,oBAE7Dn7I,KAAK3W,IAAIf,QAAQq5B,QAAU3hB,KAAKq7I,kBARhCQ,GAAkB5/C,EAAe,CAC/By/C,YAAa17I,KAAKu7I,mBAEpBv7I,KAAK3W,IAAIf,QAAQq5B,QAAU3hB,KAAKm7I,oBAStCp8H,aAAakX,GAEc,IAAD,GADxBmkH,GAAmBnkH,EAAEx0C,QAChBue,KAAK2sG,gBAEL3sG,KAAKg7I,kBAAkBpvG,GAAyB,QAArB,EAAI5rC,KAAKg7I,OAAO/4J,aAAK,OAAjB,EAAmB0qH,cAClD3sG,KAAKg7I,kBAAkBY,GAAS57I,KAAKg7I,OAAOruC,cAE7C8uC,GAAgBxlH,EAAEgmE,cAAe,CAC/By/C,YAAa33H,OAAOo1H,EAAOwC,yBAA2B37I,KAAKm7I,oBAE7Dn7I,KAAK3W,IAAIf,QAAQq5B,QAAU3hB,KAAKq7I,kBAEhCQ,GAAkB5lH,EAAEgmE,cAAe,CACjCy/C,YAAa17I,KAAKu7I,mBAEpBv7I,KAAK3W,IAAIf,QAAQq5B,QAAU3hB,KAAKm7I,oBAItChB,OACE,MAAMc,EAASj7I,KAAKs7I,iBAAiB/7I,QACnC,CAAC07I,EAAQ5pH,IAAS,IAAI4pH,KAAW5pH,EAAK4pH,EAAOA,EAAOt2J,OAAS,GAAIs2J,EAAOA,EAAOt2J,OAAS,MACxF,CAACqb,KAAKg7I,OAAOp4J,IAAKod,KAAKg7I,OAAO5yG,MAEhC6yG,EAAOz9H,OAAO,EAAG,GAEjB,IAAIoR,EAAO,GAGX,GADAA,GAAS,KAAIqsH,EAAO,MAAMA,EAAO,MACX,IAAlBA,EAAOt2J,OAETiqC,GAAS,KAAIqsH,EAAO,MAAMA,EAAO,UAC5B,CACL,IAAIpuI,EAAI,EACR,KAAOA,EAAIouI,EAAOt2J,OAAS,GAAG,CAC5B,MAAOm3J,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAAMlB,EAAOxxG,MAAM58B,EAAGA,EAAI,GAC/CuvI,GAAOJ,EAAKF,GAAM,EAClBO,GAAOH,EAAKF,GAAM,EAClBM,GAAOL,EAAKF,GAAM,EAClBQ,GAAOJ,EAAKF,GAAM,EAClBO,EAAK/9H,KAAKg+H,KAAKh+H,KAAKi+H,IAAIN,EAAK,GAAK39H,KAAKi+H,IAAIJ,EAAK,IAAM,EACtDK,EAAKl+H,KAAKg+H,KAAKh+H,KAAKi+H,IAAIL,EAAK,GAAK59H,KAAKi+H,IAAIH,EAAK,IAAM,EACtDK,EAAKn+H,KAAKrgB,IAAI+6I,EAAO0D,kBAAmBL,EAAIG,GAOlD/tH,GAAS,KANEotH,EAAMY,EAAKR,EAAOI,KAClBP,EAAMW,EAAKN,EAAOE,OAKFR,KAAMC,KAJtBD,EAAMY,EAAKP,EAAOM,KAClBV,EAAMW,EAAKL,EAAOI,KAI7B9vI,GAAK,GAMT,OAFA+hB,GAAS,KAAIqsH,EAAOA,EAAOt2J,OAAS,MAAMs2J,EAAOA,EAAOt2J,OAAS,MACjEqb,KAAKk7I,MAAQtsH,EAEX,eAAC,IAAU,CAETvlC,IAAK2W,KAAK3W,IACVy1B,aAAcmX,GAAKj2B,KAAK8e,aAAamX,GACrClX,aAAckX,GAAKj2B,KAAK+e,aAAakX,GACrCryC,QAASqyC,GAAKj2B,KAAKpc,QAAQqyC,GAC3BtU,QAAS3hB,KAAKm7I,kBAAkB,UAEhC,wBAAC,IAAS,IACJjC,EACJ4D,OACE/8J,GAAci6J,mBACVb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,WAEtB00I,YAAa17I,KAAKu7I,iBAClBwB,eAAgBh5H,OAAOo1H,EAAO6D,qBAC9Br5I,KAAMirB,EACN3vC,IAAK47J,GAAO57J,QAEd,wBAAC,IAAU,IACLi6J,EACJ+B,OAAQA,EAAOxxG,MAAMwxG,EAAOt2J,OAAS,GACrCwH,KACEpM,GAAci6J,mBACVb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,WAEtBi2I,eAAe,EACfC,aAAcn5H,OAAOo1H,EAAOgE,eAC5BC,cAAer5H,OAAOo1H,EAAOgE,eAC7Bl+J,IAAK47J,GAAO57J,UA9BT47J,GAAO57J,QCnJb,MAAMo+J,UAAuBtC,EACxBO,iBACR,MAAM75J,EAASue,KAAKve,OACpB,IAAKA,EAAQ,MAAO,GAEpB,MAAMgvC,EAAoB,CAAC,CAAC7tC,EAAGwlD,IAAM,CAACxlD,EAAIu2J,EAAOmE,cAAel1G,IAgBhE,OAdI3mD,aAAkBm6J,IAGlBnrH,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CACnBxlD,EACA26J,EAAUC,6BAA6B/7J,EAAQ2mD,GAAGq1G,YAAYh8J,MAKlEgvC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC3mD,EAAOmB,IAAMu2J,EAAOmE,cAAel1G,MAG3D3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC3mD,EAAOmB,IAAMu2J,EAAOmE,cAAe77J,EAAO2mD,IAAM3mD,EAAOwH,YACtEwnC,EAGT8qH,iBACE,OAAOx3H,OAAOo1H,EAAOuE,uBAGvB95J,QAAQqyC,GACN7F,MAAMxsC,QAAQqyC,GACdwlH,GAAgBxlH,EAAEgmE,cAAe,CAC/By/C,YAAa33H,OAAOo1H,EAAOwE,gCAI/B7+H,aAAamX,GACX7F,MAAMtR,aAAamX,GACnBwlH,GAAgBxlH,EAAEgmE,cAAe,CAC/By/C,YAAa33H,OAAOo1H,EAAOwE,gCAI/B5+H,aAAakX,GACX7F,MAAMrR,aAAakX,GACfj2B,KAAK2sG,cAAiB3sG,KAAKg7I,OAAiBruC,aAC9C8uC,GAAgBxlH,EAAEgmE,cAAe,CAC/By/C,YAAa33H,OAAOo1H,EAAOuE,yBAG7B7B,GAAkB5lH,EAAEgmE,cAAe,CACjCy/C,YAAa33H,OAAOo1H,EAAOuE,0BCjD5B,MAAME,UAAuBpF,EAMlCroH,YAAqB2jE,GACnB1jE,QAAQ,KADW0jE,SAAkB,KAL9Bj/F,MAAc,KAAK,KAEnB8O,KAAa,GAAG,KACzBta,IAAsB5E,IAAMq0J,YAAY,KAUxCiB,eAAiB,KACf/5I,KAAKy4I,GAAKz4I,KAAK8zF,OAAOlxG,IACtBod,KAAK04I,GAAK14I,KAAK8zF,OAAO1rD,KARtBpoC,KAAKy4I,GAAKz4I,KAAK8zF,OAAOlxG,IACtBod,KAAK04I,GAAK14I,KAAK8zF,OAAO1rD,IACtBpoC,KAAK44I,QAAU54I,KAAK8zF,OAAO7qG,SAC3B+W,KAAK24I,OAAS34I,KAAK8zF,OAAO9qG,QAQ5BmxJ,OACE,OACE,wBAAC,IAAI,IACCjB,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKpd,IACRwlD,EAAGpoC,KAAKooC,IACRp/C,MAAOgX,KAAKhX,QACZC,OAAQ+W,KAAK/W,SACb6zJ,OACE/8J,GAAci6J,mBAAqBb,EAAOwB,QAAQ3zI,WAAamyI,EAAOyB,SAAS5zI,WAEjF3d,IAAK2W,KAAK3W,OCjCX,MAAMw0J,UAAoB9C,EACrBO,iBACR,MAAMN,EAASh7I,KAAKg7I,OACdv5J,EAASue,KAAKve,OACpB,IAAKA,EAAQ,MAAO,GAEpB,MAAMgvC,EAAoB,CAAC,CAAC7tC,EAAGwlD,IAAM,CAACxlD,EAAsB,EAAlBu2J,EAAO2E,SAAc11G,IAmB/D,OAjBI3mD,EAAO2mD,IAAM4yG,EAAO5yG,KAAO4yG,EAAO5yG,IAAM3mD,EAAO2mD,IAAM3mD,EAAOwH,UAC9DwnC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGwlD,EAAsB,EAAlB+wG,EAAO2E,YACpCrtH,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC3mD,EAAOmB,KAAOo4J,EAAOp4J,IAAMnB,EAAOmB,IAAM,EAAInB,EAAOuH,SAAUo/C,OAEnF3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGwlD,EAAsB,EAAlB+wG,EAAO2E,YACpCrtH,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CACnBm1G,EAAUQ,4BAA4B/C,EAAQp4J,GAAG66J,YAAYzC,GAC7D5yG,KAEF3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CACnBxlD,EACA26J,EAAUS,8BAA8Bv8J,EAAQ2mD,GAAGq1G,YAAYh8J,MAEjEgvC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC3mD,EAAOmB,KAAOnB,EAAOmB,IAAMA,EAAInB,EAAOuH,QAAU,GAAIo/C,KAC1E3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGnB,EAAO2mD,KAAO3mD,EAAO2mD,IAAM4yG,EAAO5yG,IAAM3mD,EAAOwH,SAAW,OAG9EwnC,GC3BJ,MAAewtH,UAAczF,EAA+B,cAAD,yBAavD0F,kBAAY,OAEHv6I,UAAI,EARtBw6I,aAAaC,GACXp+I,KAAKk+I,aAAah4I,KAAKk4I,ICiBpB,MAAMC,UAAgBJ,EAsB3B9tH,YAEWxsB,EAEAu6I,GAET9tH,QAAQ,KAJCzsB,OAAa,KAEbu6I,eAA6B,KAzBxCI,aAAO,OACEC,kBAAY,OACZC,wBAAkB,OAClBC,OAAiBtF,EAAO2E,SAAS,KACjCY,YAAsBvF,EAAOwF,cAAc,KAG3CC,YAAM,OACNC,gBAAU,OACVC,cAAQ,OACRC,oBAAc,OACd7vI,aAAO,OACP8vI,mBAAa,OACdh6J,UAAoB,EAAM,KAC1Bi6J,YAAM,OAGLC,sBAAgB,OAChB71J,IAAsB5E,IAAMq0J,YAAY,KACxCqG,SAA2B16J,IAAMq0J,YAAY,KAsFtDh6H,aAAe,IAAsD,IAArD,cAAEm9E,GAA6C,EACzDl8G,GAAci6J,qBAClBh6I,KAAKm/I,SAAS72J,QAAQ4xJ,YACtBl6I,KAAKm/I,SAAS72J,QAAQpJ,OACtBu8J,GAAgBx/C,KAChB,KAEFl9E,aAAe,IAAsD,IAArD,cAAEk9E,GAA6C,EAC7D,IAAIl8G,GAAci6J,mBAClB,GAAKh6I,KAAKhb,SAGH,CAAC,IAAD,EACL,MAAMmxD,EAAoC,QAA3B,EAAG8lD,EAAcmjD,kBAAU,aAAxB,EAA0BjpG,YAC5CA,IAAcA,EAAUxsD,MAAMo5D,OAAS,gBAJvC/iD,KAAKm/I,SAAS72J,QAAQ+xC,OACtBwhH,GAAkB5/C,IAKpB,KACFr4G,QAAU,IAAsD,IAArD,cAAEq4G,GAA6C,EACpDl8G,GAAci6J,qBAClBh6I,KAAKhb,UAAYgb,KAAKhb,SACjBgb,KAAKhb,UAIRgb,KAAKm/I,SAAS72J,QAAQpJ,OACtBu8J,GAAgBx/C,KAJhBj8F,KAAKm/I,SAAS72J,QAAQ+xC,OACtBwhH,GAAkB5/C,MAnGpB4+C,GAAOwE,aAAar/I,MAGpB,MAAMs/I,EAAgBt/I,KAAKk+I,aAAa,GACpCoB,aAAyBC,GAC3Bv/I,KAAKy4I,GAAK6G,EAAcr9J,MAAMW,IAAM08J,EAAcr9J,MAAM+G,QAAUmwJ,EAAOqG,aAAe,EACxFx/I,KAAK04I,GAAK4G,EAAcl3G,IACxBpoC,KAAKs+I,QAAUt+I,KAAKy4I,GAAmB,EAAdz4I,KAAKy+I,SAE1Ba,EAAcG,YAChBz/I,KAAKy4I,GAAK6G,EAAc18J,IAA6B,EAAvBu2J,EAAOuG,cACrC1/I,KAAK04I,GAAK4G,EAAcl3G,IAAM+wG,EAAOwG,eAAiB,EAAI3/I,KAAKy+I,SAE/Dz+I,KAAKy4I,GAAK6G,EAAc18J,IACxBod,KAAK04I,GAAK4G,EAAcl3G,IAAMk3G,EAAcxrD,OAAO7qG,SAAWkwJ,EAAOwG,gBAEvE3/I,KAAKs+I,QAAUt+I,KAAKy4I,GAAKU,EAAOuG,cAAgB,EAChD1/I,KAAKy4I,GAAKz4I,KAAKs+I,QAAwB,EAAdt+I,KAAKy+I,QAEhCz+I,KAAK04I,IAAM14I,KAAKy+I,OAEhBz+I,KAAK24I,OAAuB,EAAd34I,KAAKy+I,OACnBz+I,KAAK44I,QAAwB,EAAd54I,KAAKy+I,OAEpBz+I,KAAKk/I,iBAAmBrE,GAAO+E,gBAAgBC,YAC7CC,GAAe9/I,KAAK2D,KAAKghI,cAE3B3kI,KAAK4+I,OAAS5+I,KAAK2D,KAAKo8I,aAExB//I,KAAK6+I,WAAc,YAAWmB,GAAchgJ,KAAK2D,SACjD3D,KAAK8+I,SAAY,SAAQmB,GAAYjgJ,KAAK2D,QAC1C3D,KAAK++I,gBACF/+I,KAAK8+I,SAASn6J,OAAS,GAAKqb,KAAK8+I,SAASr1G,MAAM,EAAG,IAAMzpC,KAAK8+I,UAC5Dz7H,MAAM,MACNomB,MAAM,EAAG,GACTlnD,KAAK,MAAQ,OAClByd,KAAKkP,QAAW,GAAElP,KAAK6+I,eAAe7+I,KAAK8+I,WAC3C9+I,KAAKg/I,cAAiB,GAAEh/I,KAAK6+I,eAAe7+I,KAAK++I,iBACjD/+I,KAAKu+I,aAAe9/H,KAAKpgB,IAAIi8I,GAAat6I,KAAK6+I,YAAavE,GAAat6I,KAAK8+I,WAC9E9+I,KAAKw+I,mBAAqB//H,KAAKpgB,IAC7Bi8I,GAAat6I,KAAK6+I,YAClBvE,GAAat6I,KAAK++I,iBAItBpyC,aACE,OAAO3sG,KAAKhb,SAEdqoD,QACE,OAAOrtC,KAAKi/I,OAEdlF,iBACE,MAAMuF,EACJt/I,KAAKk+I,aAAa35H,MAChB3hC,GAAKA,aAAa28J,GAAY38J,EAAcX,MAAMi+J,cAAgBlgJ,KAAKk/I,oBACpEl/I,KAAKk+I,aAAa,GACrBoB,aAAyBC,GAC3Bv/I,KAAKy4I,GAAK6G,EAAcr9J,MAAMW,IAAM08J,EAAcr9J,MAAM+G,QAAUmwJ,EAAOqG,aAAe,EACxFx/I,KAAK04I,GAAK4G,EAAcl3G,IACxBpoC,KAAKs+I,QAAUt+I,KAAKy4I,GAAmB,EAAdz4I,KAAKy+I,SAE1Ba,EAAcG,YAChBz/I,KAAKy4I,GAAK6G,EAAc18J,IAA6B,EAAvBu2J,EAAOuG,cACrC1/I,KAAK04I,GAAK4G,EAAcl3G,IAAM+wG,EAAOwG,eAAiB,EAAI3/I,KAAKy+I,SAE/Dz+I,KAAKy4I,GAAK6G,EAAc18J,IACxBod,KAAK04I,GAAK4G,EAAcl3G,IAAMk3G,EAAcxrD,OAAO7qG,SAAWkwJ,EAAOwG,gBAEvE3/I,KAAKs+I,QAAUt+I,KAAKy4I,GAAKU,EAAOuG,cAAgB,EAChD1/I,KAAKy4I,GAAKz4I,KAAKs+I,QAAwB,EAAdt+I,KAAKy+I,QAEhCz+I,KAAK04I,IAAM14I,KAAKy+I,OAElBzF,QACE5oH,MAAM4oH,QACNh5I,KAAKk+I,aAAav5J,OAAS,EA+B7Bw1J,OAAyB,IAAD,EAItB,OAHAn6I,KAAK64I,UAAW,EAChB74I,KAAKi/I,OACHj/I,KAAKk/I,iBAAiBj9J,OAAS,IAAI47J,EAAY79I,MAAMwR,GAAGxR,KAAKk/I,iBAAiBj9J,OAE9E,eAAC,IAAMk+J,SAAQ,WACb,eAAC,IAAK,CACJrhI,aAAcmX,GAAKj2B,KAAK8e,aAAamX,GACrClX,aAAckX,GAAKj2B,KAAK+e,aAAakX,GACrCryC,QAASqyC,GAAKj2B,KAAKpc,QAAQqyC,GAC3B5sC,IAAK2W,KAAK3W,IAAI,UAEd,wBAAC,IAAM,IACD6vJ,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAKy+I,OACb3B,OACE/8J,GAAci6J,mBACVb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,aAGxB,wBAAC,IAAM,IACDkyI,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAK0+I,YACbvyJ,KACEpM,GAAci6J,mBACVb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,aAGxB,wBAAC,IAAM,IACDkyI,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAKy+I,OACb3B,OACE/8J,GAAci6J,mBACVb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,aAGxB,wBAAC,IAAM,IACDkyI,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAK0+I,YACbvyJ,KACEpM,GAAci6J,mBACVb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,gBAIzBjnB,GAAci6J,mBACb,eAAC,IAAU,CACTp3J,EAAGod,KAAKpd,IAAMod,KAAKhX,QAAgC,EAAtBmwJ,EAAOiH,aACpCh4G,EAAGpoC,KAAKooC,IAAM+wG,EAAOkH,aACrB5lE,SAAS,EACTpxF,IAAK2W,KAAKm/I,SAAS,UAEnB,cAAC,IAAQ,CAACrC,OAAO,QAAQ3wJ,KAAM,QAASw1B,QAASoC,OAAOo1H,EAAOmH,oBAC/D,cAAC,IAAS,CACR7xJ,KAAMuR,KAAKg/I,cACX9zG,WAAYiuG,EAAOE,WAAWryI,WAC9BmkC,SAAUpnB,OAAOo1H,EAAOG,UACxBC,UAAWJ,EAAOK,UAAUxyI,WAC5B7a,KAAMgtJ,EAAOwB,QAAQ3zI,WACrB8S,QAAS,OAIb,eAAC,IAAU,CACTl3B,EAAGod,KAAKpd,IAAMod,KAAKhX,QAAgC,EAAtBmwJ,EAAOiH,aACpCh4G,EAAGpoC,KAAKooC,IAAM+wG,EAAOkH,aACrB5lE,SAAS,EACTpxF,IAAK2W,KAAKm/I,SAAS,UAEnB,cAAC,IAAQ,CAACrC,OAAO,QAAQ3wJ,KAAM,QAASw1B,QAASoC,OAAOo1H,EAAOmH,oBAC/D,cAAC,IAAS,CACR7xJ,KAAMuR,KAAKkP,QACXg8B,WAAYiuG,EAAOE,WAAWryI,WAC9BmkC,SAAUpnB,OAAOo1H,EAAOG,UACxBC,UAAWJ,EAAOK,UAAUxyI,WAC5B7a,KAAMgtJ,EAAOyB,SAAS5zI,WACtB8S,QAAS,OAIH,QADX,EACA9Z,KAAKi/I,cAAM,aAAX,EAAa9E,SA3FKU,GAAO57J,QC9I3B,MAAMshK,UAAsBtC,EAkBjC9tH,YAEWxsB,EAEAu6I,GAET9tH,QAAQ,KAJCzsB,OAAe,KAEfu6I,eAA6B,KArBxCI,aAAO,OACEC,kBAAY,OACZC,wBAAkB,OAClBC,OAAiBtF,EAAO2E,SAAS,KACjCY,YAAsBvF,EAAOwF,cAAc,KAC5CM,YAAM,OAELJ,gBAAU,OACVC,cAAQ,OACRC,oBAAc,OACd7vI,aAAO,OACP8vI,mBAAa,OACdh6J,UAAoB,EAAM,KAEzBqE,IAAsB5E,IAAMq0J,YAAY,KACxCqG,SAA2B16J,IAAMq0J,YAAY,KA6EtDh6H,aAAe,IAAsD,IAArD,cAAEm9E,GAA6C,EACzDl8G,GAAci6J,qBAClBh6I,KAAKm/I,SAAS72J,QAAQpJ,OACtBu8J,GAAgBx/C,KAChB,KAEFl9E,aAAe,IAAsD,IAArD,cAAEk9E,GAA6C,EAC7D,IAAIl8G,GAAci6J,mBAClB,GAAKh6I,KAAKhb,SAGH,CAAC,IAAD,EACL,MAAMmxD,EAAoC,QAA3B,EAAG8lD,EAAcmjD,kBAAU,aAAxB,EAA0BjpG,YAC5CA,IAAcA,EAAUxsD,MAAMo5D,OAAS,gBAJvC/iD,KAAKm/I,SAAS72J,QAAQ+xC,OACtBwhH,GAAkB5/C,IAKpB,KACFr4G,QAAU,IAAsD,IAArD,cAAEq4G,GAA6C,EACpDl8G,GAAci6J,qBAClBh6I,KAAKhb,UAAYgb,KAAKhb,SACjBgb,KAAKhb,UAIRgb,KAAKm/I,SAAS72J,QAAQpJ,OACtBu8J,GAAgBx/C,KAJhBj8F,KAAKm/I,SAAS72J,QAAQ+xC,OACtBwhH,GAAkB5/C,MAzFpB4+C,GAAOwE,aAAar/I,MAGpB,MAAMs/I,EAAgBt/I,KAAKk+I,aAAa,GACpCoB,aAAyBC,GAC3Bv/I,KAAKy4I,GAAK6G,EAAcr9J,MAAMW,IAAM08J,EAAcr9J,MAAM+G,QAAUmwJ,EAAOqG,aAAe,EACxFx/I,KAAK04I,GAAK4G,EAAcl3G,IACxBpoC,KAAKs+I,QAAUt+I,KAAKy4I,GAAmB,EAAdz4I,KAAKy+I,SAE1Ba,EAAcG,YAChBz/I,KAAKy4I,GAAK6G,EAAc18J,IAA6B,EAAvBu2J,EAAOuG,cACrC1/I,KAAK04I,GAAK4G,EAAcl3G,IAAM+wG,EAAOwG,eAAiB,EAAI3/I,KAAKy+I,SAE/Dz+I,KAAKy4I,GAAK6G,EAAc18J,IACxBod,KAAK04I,GAAK4G,EAAcl3G,IAAMk3G,EAAcxrD,OAAO7qG,SAAWkwJ,EAAOwG,gBAEvE3/I,KAAKs+I,QAAUt+I,KAAKy4I,GAAKU,EAAOuG,cAAgB,EAChD1/I,KAAKy4I,GAAKz4I,KAAKs+I,QAAwB,EAAdt+I,KAAKy+I,QAEhCz+I,KAAK04I,IAAM14I,KAAKy+I,OAEhBz+I,KAAK24I,OAAuB,EAAd34I,KAAKy+I,OACnBz+I,KAAK44I,QAAwB,EAAd54I,KAAKy+I,OAEpBz+I,KAAK6+I,WAAc,WAAUmB,GAAchgJ,KAAK2D,QAChD3D,KAAK8+I,SAAY,SAAQmB,GAAYjgJ,KAAK2D,QAC1C3D,KAAK++I,gBACF/+I,KAAK8+I,SAASn6J,OAAS,GAAKqb,KAAK8+I,SAASr1G,MAAM,EAAG,IAAMzpC,KAAK8+I,UAC5Dz7H,MAAM,MACNomB,MAAM,EAAG,GACTlnD,KAAK,MAAQ,OAClByd,KAAKkP,QAAW,GAAElP,KAAK6+I,eAAe7+I,KAAK8+I,WAC3C9+I,KAAKg/I,cAAiB,GAAEh/I,KAAK6+I,eAAe7+I,KAAK++I,iBACjD/+I,KAAKu+I,aACH9/H,KAAKpgB,IAAIi8I,GAAat6I,KAAK6+I,YAAavE,GAAat6I,KAAK8+I,WAAa3F,EAAOiH,aAChFpgJ,KAAKw+I,mBAAqB//H,KAAKpgB,IAC7Bi8I,GAAat6I,KAAK6+I,YAClBvE,GAAat6I,KAAK++I,iBAItBpyC,aACE,OAAO3sG,KAAKhb,SAEdqoD,QACE,OAAOrtC,KAAKi/I,OAGdlF,iBACE,MAAMuF,EAAgBt/I,KAAKk+I,aAAa35H,MAAK3hC,GAAKA,aAAa28J,KAAYv/I,KAAKk+I,aAAa,GACzFoB,aAAyBC,GAC3Bv/I,KAAKy4I,GAAK6G,EAAcr9J,MAAMW,IAAM08J,EAAcr9J,MAAM+G,QAAUmwJ,EAAOqG,aAAe,EACxFx/I,KAAK04I,GAAK4G,EAAcl3G,IACxBpoC,KAAKs+I,QAAUt+I,KAAKy4I,GAAmB,EAAdz4I,KAAKy+I,SAE1Ba,EAAcG,YAChBz/I,KAAKy4I,GAAK6G,EAAc18J,IAA6B,EAAvBu2J,EAAOuG,cACrC1/I,KAAK04I,GAAK4G,EAAcl3G,IAAM+wG,EAAOwG,eAAiB,EAAI3/I,KAAKy+I,SAE/Dz+I,KAAKy4I,GAAK6G,EAAc18J,IACxBod,KAAK04I,GAAK4G,EAAcl3G,IAAMk3G,EAAcxrD,OAAO7qG,SAAWkwJ,EAAOwG,gBAEvE3/I,KAAKs+I,QAAUt+I,KAAKy4I,GAAKU,EAAOuG,cAAgB,EAChD1/I,KAAKy4I,GAAKz4I,KAAKs+I,QAAwB,EAAdt+I,KAAKy+I,QAEhCz+I,KAAK04I,IAAM14I,KAAKy+I,OA+BlBtE,OAAyB,IAAD,EAItB,OAHAn6I,KAAK64I,UAAW,EAChB74I,KAAKi/I,OACHpE,GAAO2F,cAAcv+J,OAAS,IAAI47J,EAAY79I,MAAMwR,GAAGqpI,GAAO2F,cAAcv+J,OAE5E,eAAC,IAAMk+J,SAAQ,WACb,eAAC,IAAK,CACJrhI,aAAcmX,GAAKj2B,KAAK8e,aAAamX,GACrClX,aAAckX,GAAKj2B,KAAK+e,aAAakX,GACrCryC,QAASqyC,GAAKj2B,KAAKpc,QAAQqyC,GAC3B5sC,IAAK2W,KAAK3W,IAAI,UAEd,wBAAC,IAAM,IACD6vJ,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAKy+I,OACb3B,OACE/8J,GAAci6J,mBACVb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,aAGxB,wBAAC,IAAM,IACDkyI,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAK0+I,YACbvyJ,KACEpM,GAAci6J,mBACVb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,aAGxB,wBAAC,IAAM,IACDkyI,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAKy+I,OACb3B,OACE/8J,GAAci6J,mBACVb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,aAGxB,wBAAC,IAAM,IACDkyI,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAK0+I,YACbvyJ,KACEpM,GAAci6J,mBACVb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,gBAIzBjnB,GAAci6J,mBACb,eAAC,IAAU,CACTp3J,EAAGod,KAAKpd,IAAMod,KAAKhX,QAAgC,EAAtBmwJ,EAAOiH,aACpCh4G,EAAGpoC,KAAKooC,IAAM+wG,EAAOkH,aACrB5lE,SAAS,EACTpxF,IAAK2W,KAAKm/I,SAAS,UAEnB,cAAC,IAAQ,CAACrC,OAAO,QAAQ3wJ,KAAM,QAASw1B,QAASoC,OAAOo1H,EAAOmH,oBAC/D,cAAC,IAAS,CACR7xJ,KAAMuR,KAAKg/I,cACX9zG,WAAYiuG,EAAOE,WAAWryI,WAC9BmkC,SAAUpnB,OAAOo1H,EAAOG,UACxBC,UAAWJ,EAAOK,UAAUxyI,WAC5B7a,KAAMgtJ,EAAOwB,QAAQ3zI,WACrB8S,QAAS,OAIb,eAAC,IAAU,CACTl3B,EAAGod,KAAKpd,IAAMod,KAAKhX,QAAgC,EAAtBmwJ,EAAOiH,aACpCh4G,EAAGpoC,KAAKooC,IAAM+wG,EAAOkH,aACrB5lE,SAAS,EACTpxF,IAAK2W,KAAKm/I,SAAS,UAEnB,cAAC,IAAQ,CAACrC,OAAO,QAAQ3wJ,KAAM,QAASw1B,QAASoC,OAAOo1H,EAAOmH,oBAC/D,cAAC,IAAS,CACR7xJ,KAAMuR,KAAKkP,QACXg8B,WAAYiuG,EAAOE,WAAWryI,WAC9BmkC,SAAUpnB,OAAOo1H,EAAOG,UACxBC,UAAWJ,EAAOK,UAAUxyI,WAC5B7a,KAAMgtJ,EAAOyB,SAAS5zI,WACtB8S,QAAS,OAIH,QADX,EACA9Z,KAAKi/I,cAAM,aAAX,EAAa9E,SA3FKU,GAAO57J,QCjJ3B,MAAMwhK,UAA2B1F,EACtC,6BAAqCtqH,EAAmB+9B,EAAiBh9C,GAGvEif,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CACnBxlD,EACAwlD,GACG52B,EAAG42B,IAAMomB,EAAKpmB,KAAQ52B,EAAG42B,MAAQomB,EAAKpmB,KAAO52B,EAAG5uB,KAAO4rE,EAAK5rE,IAAO,IAAO,IACzEu2J,EAAOwG,kBAGLrE,iBACR,MAAMN,EAASh7I,KAAKg7I,OACdv5J,EAASue,KAAKve,OACpB,IAAKA,EAAQ,MAAO,GAEpB,MAAMgvC,EAAoB,CACxB,CAAC7tC,EAAGwlD,IAAM,CAACxlD,EAAIu2J,EAAOuG,cAAgB,EAAGt3G,EAAI+wG,EAAOwG,eAAiB,IAEvE,GAAIl+J,aAAkB48J,GAAW58J,aAAkB8+J,EAC7C9hI,KAAKw6F,IAAIx3H,EAAO2mD,IAAM4yG,EAAO5yG,KAA+B,EAAxB+wG,EAAOwG,gBAC7Cc,EAAmBC,sBAAsBjwH,EAAOuqH,EAAQv5J,GAExDgvC,EAAMvqB,MAAK,IAAM,CAACzkB,EAAO68J,QAA4B,EAAlBnF,EAAO2E,SAAe3E,EAAO2E,SAAUr8J,EAAO2mD,OACjF3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAIu2J,EAAO2E,SAAU11G,MAE3C3X,EAAMvqB,MAAK,IAAM,CAACzkB,EAAO68J,QAA4B,EAAlBnF,EAAO2E,SAAcr8J,EAAO2mD,YAE5D,GAAI3mD,aAAkBk/J,EAC3B,GAAI3F,EAAOlnD,SAAWryG,EACpBgvC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGwlD,EAA6B,EAAxB+wG,EAAOwG,eAAsB,KAC3DlvH,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAIu2J,EAAOwG,eAAiB,EAAGv3G,KACrD3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGwlD,EAAI+wG,EAAOwG,eAAiB,UAChD,GACL3E,EAAOyE,YACPh+J,EAAOmB,IAAMo4J,EAAOp4J,KAA8B,EAAvBu2J,EAAOuG,eAClCj+J,EAAOmB,IAAMo4J,EAAOp4J,KACpBnB,EAAO+8B,QAAUw8H,EAAOlnD,OAAOt1E,MAG/BiS,EAAMvqB,MAAK,IAAM,CAACzkB,EAAOmB,IAAKnB,EAAO2mD,IAAM+wG,EAAOwG,eAAiB,SAC9D,CACLc,EAAmBC,sBAAsBjwH,EAAOuqH,EAAQv5J,GAExD,MAAMm/J,EAAyBrD,EAAUsD,2BACvCp/J,EACAu5J,EAAOp4J,KACP66J,YAAYh8J,IAETm/J,EAAyB5F,EAAOp4J,MAAQg+J,EAAyBn/J,EAAOmB,KAAO,GAClF6tC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACw4G,EAAwBx4G,KAGhD,MAAM04G,EAA2BvD,EAAUS,8BACzCv8J,EACAu5J,EAAO5yG,KACPq1G,YAAYh8J,IACTq/J,EAA2B9F,EAAO5yG,MAAQ04G,EAA2Br/J,EAAO2mD,KAAO,GACtF3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,KACL04G,EAA2B14G,IAAM04G,EAA2Br/J,EAAO2mD,KAAO,EAC9E,CAACxlD,EAAGwlD,GACJ,CAACxlD,EAAG26J,EAAUS,8BAA8Bv8J,EAAQ2mD,GAAGq1G,YAAYh8J,MAK3EgvC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,KACb,IAAI24G,EACAC,EAAQv/J,EAAO2mD,IAAM+wG,EAAOwG,eAAiB,EAAIv3G,EACrD,MAAM64G,EACJx/J,EAAO2mD,IAAM+wG,EAAOwG,eAAiB,EAAKlhI,KAAKyiI,KAAKF,GAAS7H,EAAOwG,eAAkB,EAExF,GADAqB,EAAQC,EAAO74G,EACXxlD,EAAInB,EAAOmB,IAAMu2J,EAAOuG,cAE1BqB,EAAOtiI,KAAKpgB,IAAIzb,EAAIu2J,EAAOuG,cAAej+J,EAAOmB,IAAM67B,KAAKw6F,IAAI+nC,QAC3D,MACLp+J,GACAnB,EAAOmB,IAAMnB,EAAO0/J,MAAMx8J,OAASw0J,EAAOuG,cAAgBvG,EAAOuG,eAK5D,CAEL,GAAI98J,EAAInB,EAAOmB,IACbm+J,EAAOt/J,EAAOmB,SACT,GACLA,GACAnB,EAAOmB,IAAMnB,EAAO0/J,MAAMx8J,OAASw0J,EAAOuG,cAAgBvG,EAAOuG,cAEjEqB,EAAOt/J,EAAOmB,IAAMnB,EAAO0/J,MAAMx8J,OAASw0J,EAAOuG,cAAgBvG,EAAOuG,kBACnE,CACL,MAAM56J,EAAQ25B,KAAKC,OAAO97B,EAAInB,EAAOmB,KAAOu2J,EAAOuG,eACnDqB,EAAOt/J,EAAOmB,IAAMu2J,EAAOuG,cAAgB56J,EAE7C,MAAO,EAAElC,EAAIm+J,GAAQ,GAAI34G,EAAI64G,GAAQ,GAfrCF,EAAOt/J,EAAOmB,IAAMnB,EAAO0/J,MAAMx8J,OAASw0J,EAAOuG,cACjDqB,EAAOtiI,KAAKrgB,IAAIxb,EAAIu2J,EAAOuG,cAAeqB,EAAOtiI,KAAKw6F,IAAI+nC,IAgB5D,MAAO,CAACD,EAAM34G,MAGhB3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,KACb,MAAMtjD,EAAQ25B,KAAKC,OAAO97B,EAAInB,EAAOmB,KAAOu2J,EAAOuG,eAC7CsB,EAAQv/J,EAAO2mD,IAAM+wG,EAAOwG,eAAiB,EAAIv3G,EACjD64G,EACJx/J,EAAO2mD,IAAM+wG,EAAOwG,eAAiB,EAAKlhI,KAAKyiI,KAAKF,GAAS7H,EAAOwG,eAAkB,EACxF,OAAI/8J,EAAInB,EAAOmB,IACN,CAACnB,EAAOmB,IAAKq+J,GACXr+J,GAAKnB,EAAOmB,IAAMnB,EAAO0/J,MAAMx8J,OAASw0J,EAAOuG,cACjD,CAACj+J,EAAOmB,IAAMnB,EAAO0/J,MAAMx8J,OAASw0J,EAAOuG,cAAeuB,GAE1D,CAACx/J,EAAOmB,IAAMu2J,EAAOuG,cAAgB56J,EAAOm8J,WAMzDxwH,EAAMvqB,MAAK,IAAM,CAACzkB,EAAOmB,IAAKnB,EAAO2mD,OAEvC,OAAO3X,GCzGJ,MAAM2wH,EAA+B,IAQrC,IARsC,EAC3Cx+J,EAAC,EACDwlD,EAAC,MACDp/C,EAAK,OACLC,EAAM,aACNo4J,EAAY,WACZC,KACG3hK,GACJ,EACC,OACE,cAAC,IAAK,CACJ4hK,UAAW,CAACzhK,EAAS8wE,KACnB,MAAM,UAAE4wF,EAAS,UAAEC,EAAS,WAAEC,EAAU,WAAEC,GAAeN,EACzDvhK,EAAQ8hK,YACR9hK,EAAQ+hK,OAAOj/J,EAAI4+J,EAAWp5G,GAC9BtoD,EAAQgiK,OAAOl/J,EAAIoG,EAAQ04J,EAAYt5G,GACvCtoD,EAAQiiK,iBAAiBn/J,EAAIoG,EAAOo/C,EAAGxlD,EAAIoG,EAAOo/C,EAAIs5G,GACtD5hK,EAAQgiK,OAAOl/J,EAAIoG,EAAOo/C,EAAIn/C,EAAS04J,GACvC7hK,EAAQiiK,iBAAiBn/J,EAAIoG,EAAOo/C,EAAIn/C,EAAQrG,EAAIoG,EAAQ24J,EAAYv5G,EAAIn/C,GAC5EnJ,EAAQgiK,OAAOl/J,EAAI6+J,EAAWr5G,EAAIn/C,GAClCnJ,EAAQiiK,iBAAiBn/J,EAAGwlD,EAAIn/C,EAAQrG,EAAGwlD,EAAIn/C,EAASw4J,GACxD3hK,EAAQgiK,OAAOl/J,EAAGwlD,EAAIo5G,GACtB1hK,EAAQiiK,iBAAiBn/J,EAAGwlD,EAAGxlD,EAAI4+J,EAAWp5G,GAC9CtoD,EAAQkiK,YAERliK,EAAQmiK,gBAAgBrxF,OAEtBsoF,EACJ7vJ,IAAKi4J,KACD3hK,KC3CH,MAAMuiK,UAAsB1J,EAIjCroH,YAAY+tH,GACV9tH,QAAQ,KAJV+xH,eAAS,OACTjE,kBAAY,OAYZnE,eAAiB,KACf/5I,KAAKy4I,GAAKz4I,KAAKmiJ,UAAUv/J,IACzBod,KAAK04I,GAAK14I,KAAKmiJ,UAAU/5G,KAVzBpoC,KAAKk+I,aAAeA,EACpBl+I,KAAKmiJ,UAAYjE,EAAa,GAC9Bl+I,KAAKy4I,GAAKz4I,KAAKmiJ,UAAUv/J,IACzBod,KAAK04I,GAAK14I,KAAKmiJ,UAAU/5G,IACzBpoC,KAAK44I,QAAU54I,KAAKmiJ,UAAUl5J,SAC9B+W,KAAK24I,OAAS34I,KAAKmiJ,UAAUn5J,QAQ/BmxJ,OACE,OACE,wBAAC,IAAS,IACJjB,EACJj6J,IAAK47J,GAAO57J,MACZg8J,OAAQ,CAACj7I,KAAKpd,IAAKod,KAAKooC,IAAMpoC,KAAK/W,SAAU+W,KAAKpd,IAAMod,KAAKhX,QAASgX,KAAKooC,KAC3E00G,OACE/8J,GAAci6J,mBAAqBb,EAAOwB,QAAQ3zI,WAAamyI,EAAOyB,SAAS5zI,WAEjF+1I,eAAgBh5H,OAAOo1H,EAAOiJ,oBAC9B/4J,IAAK2W,KAAK3W,IACVyxJ,WAAW,KC5BZ,MAAMuH,UAAuBpE,EAIlC9tH,YAEWxsB,EAEAu6I,GAET9tH,QAEA,KANSzsB,OAAoB,KAEpBu6I,eAA6B,KAN/BzvJ,UAAI,OAqCbsrJ,eAAiB,KACf,MAAMuF,EAAgBt/I,KAAKk+I,aAAa,GACxC,GAAIoB,aAAyBC,EAC3Bv/I,KAAKy4I,GAAK6G,EAAc18J,IAAM03J,GAAagF,EAAcgD,WAAanJ,EAAOiH,aAC7EpgJ,KAAK04I,GAAK4G,EAAcl3G,QACnB,CACL,MAAMz9C,EAAW20J,EAAct2J,QACzBu5J,EAAY9jI,KAAKrgB,IAAIk8I,GAAavoI,OAAO/R,KAAK2D,OAAQhZ,GAC5DqV,KAAKy4I,GAAK6G,EAAc18J,KAAO08J,EAAct2J,QAAUu5J,GAAa,EACpEviJ,KAAK04I,GAAK4G,EAAcl3G,KAAOk3G,EAAcr2J,SAAWkwJ,EAAOG,UAAY,EAE7Et5I,KAAKvR,gBAAgBm9C,EACjB5rC,KAAKvR,KAAKsrJ,eAAe/5I,KAAKpd,IAAKod,KAAKooC,KACxCpoC,KAAKvR,KAAKsrJ,kBAvCd,MAAMuF,EAAgBt/I,KAAKk+I,aAAa,GACxC,GAAIoB,aAAyBC,EAC3Bv/I,KAAKy4I,GAAK6G,EAAc18J,IAAM03J,GAAagF,EAAcgD,WAAanJ,EAAOiH,aAC7EpgJ,KAAK04I,GAAK4G,EAAcl3G,IACxBpoC,KAAKvR,KAAO,IAAIm9C,EAAK5rC,KAAK2D,KAAM3D,KAAKy4I,GAAIz4I,KAAK04I,GAAI,CAAEiB,sBAAsB,QACrE,CACL,MAAMhvJ,EAAW20J,EAAct2J,QACzBu5J,EAAY9jI,KAAKrgB,IAAIk8I,GAAavoI,OAAO/R,KAAK2D,OAAQhZ,GAC5DqV,KAAKy4I,GAAK6G,EAAc18J,KAAO08J,EAAct2J,QAAUu5J,GAAa,EACpEviJ,KAAK04I,GAAK4G,EAAcl3G,KAAOk3G,EAAcr2J,SAAWkwJ,EAAOG,UAAY,EAC3Et5I,KAAKvR,KAAO+zJ,EAAOxiJ,KAAK2D,MACpB,IAAIu+I,EAAc,CAAC5C,IACnB,IAAI1zG,EAAK5rC,KAAK2D,KAAM3D,KAAKpd,IAAKod,KAAKooC,IAAK,CACtCz9C,SAAUA,EACVgvJ,sBAAsB,IAI9B35I,KAAK24I,OAAS34I,KAAKvR,KAAKzF,QACxBgX,KAAK44I,QAAU54I,KAAKvR,KAAKxF,SAG3B+vJ,QACE5oH,MAAM4oH,QACNh5I,KAAKk+I,aAAav5J,OAAS,EAiB7Bm6B,gBACAC,gBAEAo7H,OAEE,OADAn6I,KAAK64I,UAAW,EACT,cAAC,IAAMsH,SAAQ,UAAqBngJ,KAAKvR,KAAK0rJ,QAAzBU,GAAO57J,QCnDhC,MAAMwjK,UAAkBjK,EAc7BroH,YAEW5S,EAEA5Z,EAETmwF,GAEA1jE,QAAQ,KANC7S,MAAW,KAEX5Z,OAAU,KAjBZ9O,WAAK,OAGL6tJ,iBAAW,OAEXjD,gBAAU,OAEVkD,qBAAe,OAGxB7uD,YAAM,OACNzmD,WAAoDlnD,EAAU,KAsB9D4zJ,eAAiB,KACf/5I,KAAKy4I,GAAKz4I,KAAK8zF,OAAOlxG,IAAMod,KAAKud,IAAM47H,EAAOuG,cAC9C1/I,KAAK04I,GAAK14I,KAAK8zF,OAAO1rD,IACtBpoC,KAAKnL,iBAAiBwtJ,GAAkBriJ,KAAKnL,MAAMklJ,kBACnD,KAEFj7H,aAAe,KACb9e,KAAK8zF,OAAOqtD,MAAMv7H,SAAQg9H,IACxBnH,GAAgBmH,EAAEv5J,IAAIf,aAExB,KAEFy2B,aAAe,IAAsD,IAArD,cAAEk9E,GAA6C,EAC7D,GAAKj8F,KAAK8zF,OAAO6Y,aAIV,CAAC,IAAD,EACL,MAAMx2D,EAAoC,QAA3B,EAAG8lD,EAAcmjD,kBAAU,aAAxB,EAA0BjpG,YAC5CA,IAAcA,EAAUxsD,MAAMo5D,OAAS,gBALvC/iD,KAAK8zF,OAAOqtD,MAAMv7H,SAAQg9H,IACxB/G,GAAkB+G,EAAEv5J,IAAIf,aAM5B,KAEF1E,QAAU,KACRoc,KAAK8zF,OAAOlwG,WAnCZoc,KAAK8zF,OAASA,EACd9zF,KAAKy4I,GAAKz4I,KAAK8zF,OAAOlxG,IAAMod,KAAKud,IAAM47H,EAAOuG,cAC9C1/I,KAAK04I,GAAK14I,KAAK8zF,OAAO1rD,IACtBpoC,KAAK44I,QAAUO,EAAOwG,eACtB3/I,KAAK24I,OAASQ,EAAOuG,cACrB1/I,KAAK0iJ,YAA2B,IAAb1iJ,KAAKud,IACxBvd,KAAKy/I,WAAaz/I,KAAKud,MAAQvd,KAAK8zF,OAAOnwF,KAAKhf,OAAS,EACzDqb,KAAKnL,MAAQgmJ,GAAOgI,YAAY7iJ,KAAK2D,KAAM3D,MAC3CA,KAAK2iJ,gBAAkB3iJ,KAAKnL,MAAMqpJ,aAAav5J,OAAS,EA8B1Dw1J,OACE,GAAIn6I,KAAK64I,SAAU,OAAO,KAC1B74I,KAAK64I,UAAW,EAEhB,MAAMwI,EAAe,CACnBG,UAAW,EACXC,UAAW,EACXC,WAAY,EACZC,WAAY,GAed,OAZI3hJ,KAAK0iJ,cACPrB,EAAaG,UAAYH,EAAaI,UAAY19H,OAAOo1H,EAAO2J,mBAC9D9iJ,KAAKy/I,aACP4B,EAAaK,WAAaL,EAAaM,WAAa59H,OAAOo1H,EAAO2J,mBAC9D9iJ,KAAKnL,iBAAiBwtJ,IAC1BriJ,KAAKqtC,MAAQ,IAAIozG,EAAmBzgJ,MAAMwR,GAAGxR,KAAKnL,OAClDmL,KAAK8zF,OAAOivD,SAAS/iJ,KAAKqtC,OACtBrtC,KAAKnL,iBAAiB8rJ,GACxB3gJ,KAAKnL,MAAMkuJ,SAAS/iJ,KAAKqtC,QAK3B,eAAC,IAAM8yG,SAAQ,WACb,cAACiB,EAAW,CAEVx+J,EAAGod,KAAKpd,IACRwlD,EAAGpoC,KAAKooC,IACRp/C,MAAOgX,KAAKhX,QACZC,OAAQ+W,KAAK/W,SACb6zJ,OACE/8J,GAAci6J,mBACVb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,WAEtB+1I,eAAgBh5H,OAAOo1H,EAAOiJ,oBAC9BY,aAAa,EACb1B,WAAYthJ,KAAK3W,IACjBg4J,aAAcA,EACdz9J,QAASoc,KAAKpc,QACdk7B,aAAc9e,KAAK8e,aACnBC,aAAc/e,KAAK+e,cAhBd87H,GAAO57J,SAkBX+gB,KAAKnL,iBAAiBwpJ,GAAWr+I,KAAKnL,iBAAiB0rJ,IACxDvgJ,KAAKnL,MAAMslJ,OACZn6I,KAAKqtC,OAASrtC,KAAKqtC,MAAM8sG,SAtBPU,GAAO57J,QCvF3B,MAAM0hK,UAAmB1C,EAW9B9tH,YAEWxsB,EAEAu6I,GAET9tH,QAAQ,KAJCzsB,OAAY,KAEZu6I,eAA6B,KAbxCiD,MAAqB,GAAG,KAChB8B,eAAwC98J,EAAU,KAC1Dq4B,WAAK,OACG0kI,QAA+E,GAAG,KAClFl+J,UAAoB,EAAM,KAClCqE,IAAsB5E,IAAMq0J,YAAY,KACxCqK,iBAAsCh9J,EAAU,KAChDi9J,aAAuB,EAAE,KAmDzBx/J,QAAU,KACRoc,KAAKhb,UAAYgb,KAAKhb,SACjBgb,KAAKhb,WACRgb,KAAKmhJ,MAAMv7H,SAAQg9H,IACjB/G,GAAkB+G,EAAEv5J,IAAIf,YAE1B0X,KAAKijJ,WAAapH,GAAkB77I,KAAKijJ,UAAU55J,IAAIf,WAEzD,KAeFy6J,SAAY11G,IACVrtC,KAAKkjJ,QAAQh9I,KAAKmnC,IAlElBwtG,GAAOwE,aAAar/I,MAGpB,MAAMs/I,EAAgBt/I,KAAKk+I,aAAa,GACpCoB,aAAyBC,GAC3Bv/I,KAAKy4I,GAAK6G,EAAcr9J,MAAMW,IAAM08J,EAAcr9J,MAAM+G,QAAUmwJ,EAAOqG,aACzEx/I,KAAK04I,GAAK4G,EAAcl3G,MAExBpoC,KAAKmjJ,YAAc7D,EAAcxrD,OAC7BwrD,EAAcG,YAChBz/I,KAAKy4I,GAAK6G,EAAc18J,IAA6B,EAAvBu2J,EAAOuG,cACrC1/I,KAAK04I,GAAK4G,EAAcl3G,MAExBpoC,KAAKy4I,GAAK6G,EAAc18J,IACxBod,KAAK04I,GAAK4G,EAAcl3G,IAAMk3G,EAAcxrD,OAAO7qG,SAAWkwJ,EAAOwG,iBAIzE3/I,KAAK24I,OAAS34I,KAAK2D,KAAKhf,OAASw0J,EAAOuG,cAAgBvG,EAAOkK,aAC/DrjJ,KAAK44I,QAAUO,EAAOwG,eAGtB,IAAK,IAAI58J,EAAIid,KAAK2D,KAAKhf,OAAS,EAAG5B,GAAK,EAAGA,IAAK,CAC9C,MAAMugK,EAAO,IAAIb,EAAU1/J,EAAGid,KAAK2D,KAAK5gB,GAAIid,MAC5CA,KAAKmhJ,MAAQ,CAACmC,KAAStjJ,KAAKmhJ,QAGhCriI,gBACAC,gBACA4tF,aACE,OAAO3sG,KAAKhb,SAEdu+J,SACE,OAAOvjJ,KAAKkjJ,QAEdlK,QACE5oH,MAAM4oH,QACNh5I,KAAKmhJ,MAAMx+J,KAAIC,GAAKA,EAAEo2J,UACtBh5I,KAAKk+I,aAAav5J,OAAS,EAC3Bqb,KAAKkjJ,QAAU,GAajBM,SAASC,EAAsBjlI,GAC7Bxe,KAAKwe,MAAQilI,EACbzjJ,KAAKojJ,YAAc5kI,EAGrBu7H,iBAAwE,IAAzD/uG,EAA6B,uDAAG,CAAEpoD,GAAI,EAAGwlD,GAAI,GAC1DpoC,KAAKy4I,GAAKztG,EAAIpoD,EAAI,EAAIooD,EAAIpoD,EAAIod,KAAKy4I,GACnCz4I,KAAK04I,GAAK1tG,EAAI5C,EAAI,EAAI4C,EAAI5C,EAAIpoC,KAAK04I,GACnC14I,KAAKmhJ,MAAMv7H,SAAQ09H,IACjBA,EAAKvJ,oBAQTI,OACE,OAAIn6I,KAAK+4I,UACA,MAET/4I,KAAK64I,UAAW,EAChB74I,KAAKkjJ,QAAWljJ,KAAKk+I,aAAa12I,QAAO5kB,GAAKA,aAAa28J,IAAuB58J,KAAIC,IACpF,MAAMyqD,EAAwC,IAAIq2G,EAA0B9gK,EAAE3D,KAAKuyB,GAAGxR,MAGtF,OAFApd,EAAEX,MAAM0hK,aAAa3jJ,MACrBpd,EAAEX,MAAM0hK,aAAat2G,GACdA,KAEiB,IAAtBrtC,KAAKmhJ,MAAMx8J,SACbqb,KAAKijJ,UAAY,IAAIrF,EAAe59I,OAGpC,eAAC,IAAK,CAAoB3W,IAAK2W,KAAK3W,IAAI,UACrC2W,KAAKkjJ,QAAQvgK,KAAI0qD,GAASA,EAAM8sG,SAChCn6I,KAAKmhJ,MAAMx8J,OAAS,GAAKqb,KAAKmhJ,MAAMx+J,KAAI2gK,GAAQA,EAAKnJ,SACrDn6I,KAAKijJ,WAAajjJ,KAAKijJ,UAAU9I,OAClC,cAAC,IAAI,CAACnxJ,MAAOgX,KAAKhX,QAASC,OAAQ+W,KAAK/W,aAJ9B4xJ,GAAO57J,SC7FzB,MAAM2kK,EAAa,IAAIh7F,IAAI,CACzB,CAAC,SAAU,UACX,CAAC,qBAAsB,WACvB,CAAC,qBAAsB,oBACvB,CAAC,sBAAuB,gCACxB,CAAC,mBAAoB,SACrB,CAAC,0BAA2B,mBAIvB,MAAMgzF,UAAcpD,EA0BzBroH,YAEW+vH,EAEA2D,EACAC,GACR,IAAD,EACA1zH,QAAQ,KALC8vH,cAAwB,KAExB2D,SAAc,KACdC,SAAc,KA7BzBC,iBAAW,OAEXC,gBAAU,OACVC,uBAAiB,OAGR5tE,SAAsB,GAAG,KAEzBzxE,UAAI,OAEb4Z,WAAK,OAELmmH,iBAAW,OAEFuf,iBAAW,OAKpBC,aAAO,OAECl4H,OAAoB,GAAG,KACvBjnC,UAAoB,EAAM,KA6DlC+0J,eAAiB,CAACn3J,EAAWwlD,KAC3BpoC,KAAKy4I,GAAK71J,EACVod,KAAK04I,GAAKtwG,EAAIpoC,KAAKmkJ,QACnBnkJ,KAAK4E,KAAKm1I,eAAe/5I,KAAKpd,IAAKwlD,GACnCpoC,KAAKq2E,SAASzwD,SAAQ4wD,IACpBA,EAAQujE,eAAe/5I,KAAKpd,IAAKwlD,OAEnC,KAEFisC,OAAU6rE,IACRlgJ,KAAKwe,MAAQ0hI,EAAY1hI,MACzBxe,KAAK2kI,YAAcub,EAAYvb,YAC/B3kI,KAAKmkJ,QAAUnkJ,KAAK4E,KAAK3b,SAAWkwJ,EAAOkH,aAAe,EAC1DrgJ,KAAK04I,GAAK14I,KAAKwe,MAAM4pB,IAAMpoC,KAAKmkJ,QAEhC,IAAIC,EAAkB,EACtB,IAAK,MAAOnlK,EAAK0kB,KAASqoB,OAAO2S,QAAQ3+B,KAAK2kI,YAAYvjJ,MAAO,CAC/D,MAAMijK,EACJ5lI,KAAKpgB,IAAI86I,EAAOsB,aAAcH,GAAar7J,EAAMk6J,EAAOmL,gBACxDnL,EAAOiH,cACNmE,EAAa5gJ,GACV8a,KAAKpgB,IAAI86I,EAAOsB,aAAcH,GAAanB,EAAOqL,eAAex9I,aACjEy9I,EAAgB9gJ,GAChB8a,KAAKpgB,IAAI86I,EAAOsB,aAAcH,GAAavoI,OAAOpO,KAClD,GACNygJ,EAAkB3lI,KAAKpgB,IAAI+lJ,EAAiBC,GAE9CrkJ,KAAK24I,OAASyL,EAAyC,EAAvBjL,EAAOmE,cACvCt9I,KAAKisB,OAAS,GAGd,IAAIy4H,EAA8B,KAC9BV,EAAahkJ,KAAK24I,OAClBgM,EAAc3kJ,KAAK24I,OACvB34I,KAAKikJ,kBAAoBxlI,KAAKpgB,IAAI2lJ,EAAYhkJ,KAAK4E,KAAK81I,gBAExD,MAAMkK,EAAc54H,OAAO64H,0BAA0B7kJ,KAAK2kI,YAAYvjJ,MAChEu9C,EAAU,GACVmmH,EAAe,GACrB,IAAK,MAAMh6B,KAAS9+F,OAAO2S,QAAQimH,GACjC,GAAIG,EAAWj6B,EAAM,IAAK,CACxB,MAAMk6B,EAAYlF,GAAeh1B,EAAM,GAAGj2H,MAAM8vI,cAE9C3kI,KAAK2kI,YAAY5+I,KAAOozJ,EAAO8L,aAC9BD,GAAaA,EAAUj/J,KAAOia,KAAK2kI,YAAY5+I,KAEhD++J,EAAa5+I,KAAK4kH,QAGpBnsF,EAAQz4B,KAAK4kH,GAGjBnsF,EAAQz4B,QAAQ4+I,GAEhB,IAAK,MAAO7lK,EAAK0kB,KAASg7B,EAAS,CACjC,MAAMumH,EAAuB,IAAI3F,EAAQtgK,EAAK0kB,EAAK9O,MAAOmL,KAAM0kJ,GAAc/gJ,EAAKwhJ,WAM1E,IAJPnlJ,KAAKq2E,SAASta,WACZqpF,GACEA,EAAEvwJ,QAAUqwJ,EAAYrwJ,QACvBqwJ,EAAYG,gBAAkBD,EAAE9C,YAAc4C,EAAY5C,eAG/DtiJ,KAAKq2E,SAASnwE,KAAKg/I,GACnBR,EAAcQ,EACdlB,EAAavlI,KAAKpgB,IAAI2lJ,EAAYkB,EAAYl8J,QAAUmwJ,EAAOmE,eAC/DqH,EAAclmI,KAAKpgB,IAAIsmJ,EAAaO,EAAYP,cAAgBxL,EAAOmE,eACvEt9I,KAAKikJ,kBAAoBxlI,KAAKpgB,IAC5B2B,KAAKikJ,kBACLiB,EAAYxK,eAAiBvB,EAAOmE,gBAKtCv9J,GAAci6J,mBAChBh6I,KAAKgkJ,WAAaW,EAElB3kJ,KAAKgkJ,WAAaA,EAIpBhkJ,KAAK44I,QAAU8L,EACXA,EAAYt8G,IAAMs8G,EAAYz7J,SAAWkwJ,EAAOmM,cAAgBtlJ,KAAKooC,IAC9C,EAAvB+wG,EAAOmM,cACXtlJ,KAAK+jJ,YAAc/jJ,KAAK/W,SAAW+W,KAAK4E,KAAK3b,SAAWkwJ,EAAOkH,aAAe,EAC9E,MAAMkF,EACJ3J,EAAM4J,UAAUxlJ,KAAK6jJ,QAAU7jJ,KAAKgkJ,WAAa7K,EAAOqG,aAAerG,EAAO2E,SAChFlC,EAAM4J,UAAUxlJ,KAAK6jJ,OAAS,QACS19J,IAArCy1J,EAAM4J,UAAUxlJ,KAAK6jJ,OAAS,GAC1B0B,EACA9mI,KAAKpgB,IAAIu9I,EAAM4J,UAAUxlJ,KAAK6jJ,OAAS,GAAI0B,GACjD3J,EAAM6J,KAAOhnI,KAAKpgB,IAChBu9I,EAAM6J,KACN7J,EAAM4J,UAAUxlJ,KAAK6jJ,SAClB9jK,GAAci6J,mBAAqBh6I,KAAKgkJ,WAAahkJ,KAAKikJ,mBAC7DrI,EAAM4J,UAAU5J,EAAM4J,UAAU7gK,OAAS,IAE3Ci3J,EAAM8J,QAAQ1lJ,KAAK8jJ,QAAUrlI,KAAKpgB,IAAIu9I,EAAM8J,QAAQ1lJ,KAAK8jJ,SAAW,EAAG9jJ,KAAK+jJ,cAC5E,KASFp3C,WAAa,IACJ3sG,KAAKhb,SACZ,KAEF85B,aAAe,KACbm7H,GAAiBj6I,KAAK3W,IAAIf,SAC1BmzJ,GAAgBz7I,KAAK3W,IAAIf,SACzB0X,KAAKq2E,SAASzwD,SAAQhjC,IACpB,MAAMyqD,EAAQzqD,EAAE+iK,WAChBt4G,GAASouG,GAAgBpuG,EAAMhkD,IAAIf,YAErC0X,KAAKisB,OAAOrG,SAAQhjC,IAClBA,GAAK64J,GAAgB74J,EAAEyG,IAAIf,aAE7B,KAEFy2B,aAAe,KACbq7H,GAAmBp6I,KAAK3W,IAAIf,SACvB0X,KAAKhb,WACR62J,GAAkB77I,KAAK3W,IAAIf,SAC3B0X,KAAKq2E,SAASzwD,SAAQhjC,IACpB,MAAMyqD,EAAQzqD,EAAE+iK,WAChBt4G,IAAUA,EAAMs/D,cAAgBkvC,GAAkBxuG,EAAMhkD,IAAIf,YAE9D0X,KAAKisB,OAAOrG,SAAQhjC,IACZA,aAAa+9J,GAAgB/9J,EAAE+pH,cACnC/pH,GAAKi5J,GAAkBj5J,EAAEyG,IAAIf,cAInC,KAKF1E,QAAWqyC,IACTj2B,KAAKhb,UAAYgb,KAAKhb,SACjBgb,KAAKhb,UAYRy2J,GAAgBz7I,KAAK3W,IAAIf,SACzB0X,KAAKq2E,SAASzwD,SAAQhjC,IACpB,MAAMyqD,EAAQzqD,EAAE+iK,WAChBt4G,GAASouG,GAAgBpuG,EAAMhkD,IAAIf,YAErC0X,KAAKisB,OAAOrG,SAAQhjC,IAClBA,GAAK64J,GAAgB74J,EAAEyG,IAAIf,cAjB7BuzJ,GAAkB77I,KAAK3W,IAAIf,SAC3B0X,KAAKq2E,SAASzwD,SAAQhjC,IACpB,MAAMyqD,EAAQzqD,EAAE+iK,WAChBt4G,IAAUA,EAAMs/D,cAAgBkvC,GAAkBxuG,EAAMhkD,IAAIf,YAE9D0X,KAAKisB,OAAOrG,SAAQhjC,IACZA,aAAa+9J,GAAgB/9J,EAAE+pH,cACnC/pH,GAAKi5J,GAAkBj5J,EAAEyG,IAAIf,cA3MnC0X,KAAK24I,OAASQ,EAAOyM,cACrB5lJ,KAAKwe,MAAQ0hI,EAAY1hI,MACzBxe,KAAK2kI,YAAcub,EAAYvb,YAC/B3kI,KAAKkkJ,YAAgC,QAArB,EAAGhE,EAAYpsD,cAAM,aAAlB,EAAoB7xG,MACvC+d,KAAK6jJ,OAASA,EACd7jJ,KAAK8jJ,OAASA,EACdlI,EAAMiK,UAAYpnI,KAAKpgB,IAAIwlJ,EAAQjI,EAAMiK,WACzC7lJ,KAAKy4I,GAAgB,IAAXoL,EAAe1K,EAAO2M,eAAiBlK,EAAM4J,UAAU3B,GAEjE7jJ,KAAK4E,KAAO,IAAIgnC,EACdg4G,EAAWpiK,IAAIwe,KAAK2kI,YAAY//H,OAAS5E,KAAK2kI,YAAY//H,KAC1D5E,KAAKpd,IACLod,KAAKwe,MAAM4pB,IACX,CAAEz9C,SAAUqV,KAAKhX,UAEnBgX,KAAKmkJ,QAAUnkJ,KAAK4E,KAAK3b,SAAWkwJ,EAAOkH,aAAe,EAC1DrgJ,KAAK04I,GAAK14I,KAAKwe,MAAM4pB,IAAMpoC,KAAKmkJ,QAChCnkJ,KAAK24I,OAAgC,EAAvBQ,EAAOmE,cACrBt9I,KAAKgkJ,WAAahkJ,KAAKhX,QACvBgX,KAAKikJ,kBAAoBjkJ,KAAKgkJ,WAC9BhkJ,KAAK44I,QAAiC,EAAvBO,EAAOmM,cACtBtlJ,KAAK+jJ,YAAc/jJ,KAAK/W,SAAW+W,KAAK4E,KAAK3b,SAAWkwJ,EAAOkH,aAAe,EAC9ErgJ,KAAKq0E,OAAO6rE,GAQdrkG,uBAAuBj5D,GACrB,IAAIqxE,EAAI2nF,EAAM4J,UAAU7gK,OACxB,KAAOsvE,KACL,GAAI2nF,EAAM4J,UAAUvxF,IAAMrxE,EACxB,OAAOqxE,EAGX,OAAO,EAGT0vF,aAAa9uJ,GACX,MAAMsiF,EAAkBn3E,KAAKisB,OAAO5lB,SAASxR,GAE7C,OADCsiF,GAAUn3E,KAAKisB,OAAO/lB,KAAKrR,IACpBsiF,EA+KVgjE,OACE,IAAI4L,EAKJ,YAJyB5/J,IAArB6Z,KAAKkkJ,cACP6B,EAAqB,IAAI1I,EAAer9I,MAAMwR,GAAGxR,KAAKkkJ,aACtDlkJ,KAAK2jJ,aAAaoC,IAGlB,eAAC,IAAK,CAAoB18J,IAAK2W,KAAK3W,IAAI,UACrC08J,GAAsBA,EAAmB5L,OACzCn6I,KAAKq2E,SAAS1zF,KAAI6zF,KAAaA,EAAQ7yE,gBAAgBg9I,IAAenqE,EAAQ2jE,SAC9En6I,KAAK4E,KAAKu1I,OACX,wBAAC,IAAI,IACCjB,EACJt2J,EAAGod,KAAKpd,IACRwlD,EAAGpoC,KAAKooC,IACRp/C,MAAOgX,KAAKhX,QACZC,OAAQ+W,KAAK/W,SACb6zJ,OACE/8J,GAAci6J,mBACVb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,WAEtBq6I,aAAct9H,OAAOo1H,EAAO6M,mBAC5B/mK,IAAK47J,GAAO57J,MACZ2E,QAASqyC,GAAKj2B,KAAKpc,QAAQqyC,GAC3BnX,aAAc,IAAM9e,KAAK8e,eACzBC,aAAc,IAAM/e,KAAK+e,mBAnBjB87H,GAAO57J,QAnQZ28J,EAiBJiK,WAAqB,EAjBjBjK,EAkBJ6J,KAAetM,EAAO2M,eAAeG,UAlBjCrK,EAmBJ4J,UAAsB,CAACrM,EAAO2M,eAAeG,WAnBzCrK,EAoBJ8J,QAAoB,CAACvM,EAAO+M,eAAeD,WApBvCrK,EAyLJ5C,MAAQ,KACb4C,EAAM6J,KAAOtM,EAAO2M,eAAeG,UACnCrK,EAAMiK,WAAa,EACnBjK,EAAM4J,UAAY,CAACrM,EAAO2M,eAAeG,WACzCrK,EAAM8J,QAAU,CAACvM,EAAO+M,eAAeD,YC7NpC,MAAeE,UAAc3N,EACxBroH,YAECi2H,GAETh2H,QAAQ,KAFCg2H,eCGN,MAAMC,UAAmBF,EAW9Bh2H,YAEWi2H,GAETh2H,MAAMg2H,GAAa,KAFVA,cAAuB,KAZ1BE,MAAgB54B,IAAS,KACzB64B,OAAiB,EAAE,KAC3B5nK,SAAuC,CAAC,IAAI,KAGpC6nK,UAAoB,EAAE,KAGrBC,OAAuB,GAAG,KAmBnCC,YAAc,IACL1mJ,KAAKwmJ,UACZ,KAOFG,SAAW,CAAC/oC,EAAmBh7H,KAAe,IAAD,IAC3CA,EAAIA,GAAK,EAGT,IAAI47B,EAAsC,QAAjC,EAAoB,QAApB,EAAGo/F,EAAMulC,mBAAW,aAAjB,EAAmBC,mBAAW,QAAI,EAC1Cp6J,EAAQ,EACR49J,EAAchpC,EAClB,MAAMipC,EAAuB,GAC7B,KAAOD,aAAgBjG,IACjBkG,EAAYxgJ,SAASugJ,IAGzBC,EAAY3gJ,KAAK0gJ,GACjB59J,GAASmwJ,EAAO2N,iBAAmBF,EAAKzF,MAAMx8J,OAASw0J,EAAOuG,cAC1DkH,EAAKzF,MAAMx8J,OAAS,GAAKiiK,EAAKzF,MAAMyF,EAAKzF,MAAMx8J,OAAS,GAAGkQ,iBAAiB8rJ,IAC9EiG,EAAOA,EAAKzF,MAAMyF,EAAKzF,MAAMx8J,OAAS,GAAGkQ,OAI7CkyJ,EAAW,IAAK,MAAMA,KAAa/mJ,KAAKrhB,SAAS8qD,MAAMjrB,GAAQ,CAC7D,IAAK,MAAM7/B,KAAYooK,EAErB,GAAIpoK,EAAS,GAAKiE,EAAIoG,EAAQmwJ,EAAOkK,cAAgB1kK,EAAS,GAAKiE,EAAG,CACpE47B,IACA,SAASuoI,EAGb,MAEF/mJ,KAAKsmJ,MAAQ7nI,KAAKrgB,IAAIxb,EAAGod,KAAKsmJ,OAC9BtmJ,KAAKumJ,SACLvmJ,KAAKwmJ,UAAY/nI,KAAKpgB,IAAI2B,KAAKwmJ,UAAWhoI,GAC1Cxe,KAAKrhB,SAAS6/B,GAASxe,KAAKrhB,SAAS6/B,IAAU,GAC/Cxe,KAAKrhB,SAAS6/B,GAAOtY,KAAK,CAACtjB,EAAGA,EAAIg7H,EAAM50H,QAAUmwJ,EAAOuG,cAAgB,IACzE1/I,KAAKrhB,SAAS6/B,GAAO6G,MAAK,CAAC3U,EAAGghF,IAAMhhF,EAAE,GAAKghF,EAAE,KAC7C,MAAMs1D,EAAc7N,EAAO8N,iBACrBC,EAAOlnJ,KAAK04I,GAAKl6H,EAAQ26H,EAAOwG,gBAAkBnhI,EAAQ,GAAKwoI,EACrEppC,EAAMm8B,eAAe,CAAEn3J,IAAGwlD,EAAG8+G,IAC7BtpC,EAAM4lC,SAASxjJ,KAAMwe,GACrBxe,KAAK44I,QAAUn6H,KAAKpgB,IAAI2B,KAAK44I,QAASsO,EAAOF,GAC7ChnJ,KAAKymJ,OAAOvgJ,KAAK03G,GACjB59G,KAAK24I,OAASl6H,KAAKpgB,IAAI2B,KAAK24I,OAAQ/1J,EAAIg7H,EAAM50H,UAC9C,KAEFm+J,KAAQ/+G,IACNpoC,KAAKymJ,OAAO7gI,SAAQg4F,GACXA,EAAMm8B,eAAe,CAAEn3J,EAAGg7H,EAAMh7H,IAAKwlD,EAAGw1E,EAAMx1E,IAAMpoC,KAAKooC,IAAMA,MAExEpoC,KAAK04I,GAAKtwG,GACV,KAEF4wG,MAAQ,KACNh5I,KAAKsmJ,MAAQ54B,IACb1tH,KAAKumJ,OAAS,GA1EdvmJ,KAAKy4I,GAAKU,EAAO2M,eACjB9lJ,KAAK04I,GAAK,EACV14I,KAAK24I,OAAS,EACd34I,KAAKwmJ,UAAY,EAGnBY,OACE,OAAOpnJ,KAAKsmJ,MAEd5iI,QACE,OAAO1jB,KAAKumJ,OAmEdpM,OACE,OACE,eAAC,IAAK,CAAoB9wJ,IAAK2W,KAAK3W,IAAI,UACtC,wBAAC,IAAI,IACC6vJ,EACJt2J,EAAGod,KAAKpd,IACRwlD,EAAGpoC,KAAKooC,IACRp/C,MAAOgX,KAAKhX,QACZC,OAAQ+W,KAAK/W,SACbhK,IAAK47J,GAAO57J,MACZ67J,WAAW,IAEZ96I,KAAKymJ,OAAO9jK,KAAIi7H,GAASA,EAAMu8B,WAVtBU,GAAO57J,QC/FlB,MAAMooK,UAAmBlB,EAS9Bh2H,YAEWi2H,GAETh2H,MAAMg2H,GAAa,KAFVA,cAA8B,KARzCkB,gBAAU,OACDxD,YAAM,OAGNp6F,OAAkB,GAAG,KAyB9B69F,SAAY7lH,IAAuB,IAAD,EAEhC,MAAM8lH,EAAa/oI,KAAKpgB,IAAe,QAAZ,EAACqjC,EAAKmiH,cAAM,QAAI,EAAGwD,EAAWI,UAAWznJ,KAAKsnJ,WAAa,GACtFtnJ,KAAKsnJ,WAAaE,EAClBH,EAAWI,UAAYhpI,KAAKpgB,IAAIgpJ,EAAWI,UAAWD,GACtD9lH,EAAKljB,MAAQxe,UACmB7Z,IAA5B6Z,KAAK0pD,OAAO89F,GACdxnJ,KAAK0pD,OAAO89F,GAAYnzE,OAAO3yC,IAE/B1hC,KAAK0pD,OAAO89F,GAAc,IAAI5L,EAAMl6G,EAAM8lH,EAAYxnJ,KAAK8jJ,QAC3DpiH,EAAKz/C,MAAQ+d,KAAK0pD,OAAO89F,IAE3BxnJ,KAAK24I,OAASiD,EAAM6J,MACpB,KAMF0B,KAAQ/+G,IACNpoC,KAAK04I,GAAKtwG,EACVpoC,KAAK0pD,OAAO9jC,SAAQ3jC,IAClBA,EAAM83J,eAAe93J,EAAMW,IAAKwlD,OAxClCpoC,KAAKy4I,GAAKU,EAAO2M,eACjB9lJ,KAAK04I,GAAK,EACV14I,KAAK24I,OAAS,EACd34I,KAAKsnJ,YAAc,EACnBtnJ,KAAK8jJ,OAASuD,EAAWK,YAG3Bz+J,SACE,OAAO2yJ,EAAM8J,QAAQ1lJ,KAAK8jJ,QAAU3K,EAAOwO,aAyC7CxN,OACE,OACE,eAAC,IAAK,CAAoB9wJ,IAAK2W,KAAK3W,IAAI,UACtC,wBAAC,IAAI,IACC6vJ,EACJt2J,EAAGod,KAAKpd,IACRwlD,EAAGpoC,KAAKooC,IACRp/C,MAAOgX,KAAKhX,QACZC,OAAQ+W,KAAK/W,SACbhK,IAAK47J,GAAO57J,MACZ67J,WAAW,IAEZ96I,KAAK0pD,OAAO0/B,UAAUzmG,KAAIV,GAASA,EAAMk4J,WAVhCU,GAAO57J,QAjEZooK,EACJI,UAAoB,EADhBJ,EAEJK,UAAoB,EAFhBL,EA0DJrO,MAAQ,KACbqO,EAAWI,UAAY,EACvBJ,EAAWK,UAAY,GClDpB,MAAME,UAAapP,EAQxBroH,YAEW03H,GAETz3H,QAAQ,KAFCy3H,eAA6B,KARxCC,iBAAW,OACXC,iBAAW,OACXC,YAAM,OACNC,YAAM,OAoBN9yG,QAAU,KACRn1C,KAAK8nJ,YAAYliI,SAAQquC,GAAKA,EAAE5qE,IAAIf,QAAQ4/J,qBAb5CloJ,KAAKy4I,GAAK,EACVz4I,KAAK04I,GAAK,EACV14I,KAAK8nJ,YAAc,GACnB9nJ,KAAK+nJ,YAAc,GACnB/nJ,KAAKgoJ,OAAS,GACdhoJ,KAAKioJ,OAAS,GACdL,EAAKO,WAAa,GAClBnoJ,KAAK44I,QAAU,EACf54I,KAAK24I,OAAS,EACd34I,KAAKq0E,OAAOwzE,GAWdxzE,OAAOwzE,GACLjM,EAAM5C,QACNqO,EAAWrO,QACXuE,EAAUvE,QACVh5I,KAAK+nJ,YAAYniI,SAAQhjC,GAAKA,EAAEo2J,UAChCh5I,KAAK8nJ,YAAc,GACnB9nJ,KAAK+nJ,YAAc,GACnB/nJ,KAAKgoJ,OAAS,GACd,MAAM/8C,EAAsC48C,EAAatoJ,QAAO,CAACtI,EAAQg0G,EAAOloH,KACpE,IAANA,GACFid,KAAK8nJ,YAAY/kK,GAAK,IAAIskK,EAAW,MACrCrnJ,KAAK+nJ,YAAYhlK,GAAK,IAAIsjK,EAAWrmJ,KAAK8nJ,YAAY/kK,MAEtDid,KAAK8nJ,YAAY/kK,GAAK,IAAIskK,EAAWrnJ,KAAK+nJ,YAAYhlK,EAAI,IAC1Did,KAAK+nJ,YAAYhlK,GAAK,IAAIsjK,EAAWrmJ,KAAK8nJ,YAAY/kK,KAExDid,KAAKgoJ,OAAO9hJ,KAAKlG,KAAK8nJ,YAAY/kK,IAClCid,KAAKgoJ,OAAO9hJ,KAAKlG,KAAK+nJ,YAAYhlK,IAC3B,IAAIkU,KAAWg0G,EAAMtoH,KAA2B++C,GAAQ,CAAC3+C,EAAG2+C,QAClE,IAAIhpB,OAEPuyF,EAAM5lF,MAAK,CAAC3U,EAAGghF,IAAMloD,SAAS94B,EAAE,GAAGi0H,YAAY5+I,IAAMyjD,SAASkoD,EAAE,GAAGizC,YAAY5+I,MAC/Eia,KAAKioJ,OAAS,GACdL,EAAKO,WAAa,GAGlB,MAAMptH,EAAsC,GAC5CkwE,EAAMrlF,SAAQ8b,IAAS,IAAD,MAQpB,GANA3G,EAAK2G,EAAK,IAAmB,QAAhB,EAAG3G,EAAK2G,EAAK,WAAG,QAAI,GACjCA,EAAK,GAAGmiH,OAASplI,KAAKpgB,IACpB08B,EAAK2G,EAAK,IAAI/8C,OAAS,EAAI,EACY,QADX,EACG,QADH,EAC3B+8C,EAAK,GAAmBoyD,cAAM,aAA/B,EAAiC+vD,cAAM,QAAI,GAE7C9oH,EAAK2G,EAAK,IAAIA,EAAK,GAAGmiH,QAAUniH,EAAK,GACjCA,EAAK,GAAGoyD,OAAQ,CAClB,IAAIs0D,EAAc1mH,EAAK,GACnBljB,EAAQkjB,EAAK,GACb2mH,GAAgB,EAMpB,KAAOA,GAAe,CACpB,MAAM3+J,EAAa0+J,EAAYt0D,OAC/B,GACEpqG,EAAWm6J,QACXn6J,EAAW60H,SAAS+pC,SAAQ1lK,GAAK2lK,GAAgB3lK,KAAmB,KAAOwlK,EAE3E,QAA2BjiK,IAAvBiiK,EAAYvE,aAA8C19J,IAAtBuD,EAAWm6J,OACjDwE,GAAgB,MACX,CACL,MAAM7iI,EAAe4iI,EAAYvE,OAASn6J,EAAWm6J,OAC/C2E,EAAiB9+J,EAAWm6J,OAEhCr+H,EAAO,GACPuV,EAAKvc,GACFirB,MAAM++G,EAAgBJ,EAAYvE,QAClCn+F,OACC9iE,IAAC,kBACOuD,IAANvD,GACA4mD,SAAgC,QAAxB,EAAC5mD,EAAEkxG,OAAO6wC,YAAY5+I,UAAE,QAAI,GAAKyjD,SAAS9/C,EAAWi7I,YAAY5+I,QAG/Eg1C,EAAKvc,EAAQ,GAAGirB,MAAM++G,GAAgB5iI,SAAQhjC,SAClCuD,IAANvD,IACFA,EAAEihK,OAASjhK,EAAEihK,OAASjhK,EAAEihK,OAASr+H,EAAO5iC,EAAEihK,WAG9C9oH,EAAKvc,EAAQ,GAAK,IACbuc,EAAKvc,EAAQ,GAAGirB,MAAM,EAAG++G,MACzB9vI,MAAM8M,GAAMr5B,UAAKhG,MACjB40C,EAAKvc,EAAQ,GAAGirB,MAAM++G,IAE3BhqI,GAAgB,EAChB4pI,EAAc1+J,GAEd2+J,GAAgB,OAIpBA,GAAgB,OAOxBp9C,EAAM5lF,MAAK,CAAC3U,EAAGghF,KAAC,eAAiB,QAAZ,EAAChhF,EAAE,GAAGmzI,cAAM,QAAI,IAAiB,QAAhB,EAAKnyD,EAAE,GAAGmyD,cAAM,QAAI,MAC1D54C,EAAMrlF,SAAQ8b,GAAQ1hC,KAAK8nJ,YAAYpmH,EAAK,IAAI6lH,SAAS7lH,EAAK,MAE9Dm5G,GAAO5uH,OAAOrG,SAAQ,CAACw/H,EAAGqD,EAAGC,KAC3B,GAAItD,aAAazE,EAAY,CAC3B,IAAItqE,EAAW+uE,EAAElH,aAAa12I,QAAOhH,GAAKA,aAAa++I,IACnDoJ,EAAevD,EAAElH,aAAa35H,MAAK3hC,GAAKA,aAAa6/J,IACzD,MAAMmG,EAAiBxD,EAAElH,aAAa,aAAcqB,EACpD,KAA2B,IAApBlpE,EAAS1xF,QACd0xF,EAAWsyE,EAAE70D,OAAOoqD,aAAa12I,QAAOhH,GAAKA,aAAa++I,IAC1DoJ,EAAIA,EAAE70D,OAAOoqD,aAAa35H,MAAK3hC,GAAKA,aAAa6/J,IAGnD,GAAImG,EAAgB,CAClB,MAAMxgH,EAAKg9G,EAAElH,aAAa,GAAej8J,MAAM6hK,OAEzClhK,EACJg5J,EAAM4J,UAAWJ,EAAElH,aAAa,GAAej8J,MAAM4hK,OAAS,GAC9D,GAAM1K,EAAOqG,aAGfx/I,KAAK+nJ,YAAYtpI,KAAKC,MAAM0pB,IAAIu+G,SAASvB,EAAGxiK,QACvC,GAAIwiK,EAAElH,aAAa,aAAcuE,EAAW,CAAC,IAAD,MACjD,MAAMr6G,EAAuD,QAAtD,EAAiC,QAAjC,EAAGg9G,EAAElH,aAAa,GAAGpqD,OAAOt1E,aAAK,OAAa,QAAb,EAA9B,EAAgC4nI,mBAAW,WAAb,EAA9B,EAA6CtC,cAAM,QAAI,EAC3DlhK,EACJwiK,EAAElH,aAAa,GAAGt7J,KACjBwiK,EAAElH,aAAa,aAAcuE,GAAa2C,EAAElH,aAAa,GAAGuB,WACzDtG,EAAOuG,cAAgBvG,EAAO2N,iBAC9B,GACN9mJ,KAAK+nJ,YAAYtpI,KAAKC,MAAM0pB,IAAIu+G,SAASvB,EAAGxiK,QAMlDglK,EAAKO,WAAanoJ,KAAKgoJ,OAAOzoJ,QAC5B,CAACy9G,EAAKtrB,EAAG3uG,KACP,IAAIkG,EACJ,GAAIlG,EAAI,IAAM,EAAG,CACf,MAAM8lK,EAAa7oJ,KAAK+nJ,YAAYtpI,KAAKC,MAAM37B,EAAI,IACnDkG,EACE2yJ,EAAM4J,UAAW9zD,EAAiB41D,WAAa,IAAMuB,EAAWzB,OAC5D,EACAxL,EAAM8J,QAAQjnI,KAAKC,MAAM37B,EAAI,KAC5B64J,EAAM8J,QAAQjnI,KAAKC,MAAM37B,EAAI,IAC1Bo2J,EAAOwO,aAAe,OAE3B,CACL,MAAMmB,EAAa9oJ,KAAK8nJ,YAAYrpI,KAAKC,MAAM37B,EAAI,IACnDkG,EACE2yJ,EAAM8J,QAAQjnI,KAAKC,MAAM37B,EAAI,KAC5B64J,EAAM8J,QAAQjnI,KAAKC,MAAM37B,EAAI,IAAM,EAAIo2J,EAAOwO,aAAe,GAC3Dj2D,EAAiBhuE,QAAU,IAE5Bz6B,EADE2yJ,EAAM4J,UAAUsD,EAAWxB,WAAa,IAAO51D,EAAiB01D,OACzD3oI,KAAKpgB,IACZpV,EACA+W,KAAK+nJ,YAAYtpI,KAAKC,OAAO37B,EAAI,GAAK,IAAIkG,UACvC+W,KAAK+nJ,YAAYtpI,KAAKC,OAAO37B,EAAI,GAAK,IAAIkG,SAAW,EAClDkwJ,EAAOwO,aACPxO,EAAOwO,aAAe,IAGrB3nJ,KAAK+nJ,YAAYtpI,KAAKC,OAAO37B,EAAI,GAAK,IAAIkG,SAAWkwJ,EAAOwO,cAI3E,MAAO,IAAI3qC,EAAKA,EAAIA,EAAIr4H,OAAS,GAAKsE,KAExC,CAACkwJ,EAAO+M,eAAeD,YAEzBjmJ,KAAKgoJ,OAAOpiI,SAAQ,CAACpH,EAAOz7B,KAC1By7B,EAAM2oI,KAAKS,EAAKO,WAAWplK,OAI7Bid,KAAK44I,QAAUgP,EAAKO,WAAWP,EAAKO,WAAWxjK,OAAS,GAExDqb,KAAK24I,OACHl6H,KAAKpgB,IACH2B,KAAK8nJ,YAAYvoJ,QAAe,CAACmR,EAAGghF,IAAMjzE,KAAKpgB,IAAIqS,EAAGghF,EAAE1oG,UAAU,GAClEgX,KAAK+nJ,YAAYxoJ,QAAe,CAACmR,EAAGghF,IAAMjzE,KAAKpgB,IAAIqS,EAAGghF,EAAE1oG,UAAU,IAChEmwJ,EAAOqG,aAQf3jG,uBAAuBzT,GACrB,IAAI6rB,EAAI2zF,EAAKO,WAAWxjK,OACxB,KAAOsvE,KACL,GAAI2zF,EAAKO,WAAWl0F,IAAM7rB,EACxB,OAAO6rB,EAGX,OAAO,EAGTkmF,OACE,OACE,eAAC,IAAK,WACJ,wBAAC,IAAI,IACCjB,EACJt2J,EAAGod,KAAKpd,IACRwlD,EAAGpoC,KAAKooC,IACRp/C,MAAOgX,KAAKhX,QACZC,OAAQ+W,KAAK/W,SACbhK,IAAK47J,GAAO57J,MACZ67J,WAAW,IAEZ96I,KAAK+nJ,YAAY3+D,UAAUzmG,KAAI67B,GAASA,EAAM27H,SAC9Cn6I,KAAK8nJ,YAAY1+D,UAAUzmG,KAAI67B,GAASA,EAAM27H,WAXrCU,GAAO57J,QA/NZ2oK,EAMJO,gBAAU,ECpBZ,MAAM5K,EASXptH,YAAY44H,EAAeC,GAAsB,KARxCjjK,QAAE,OAIJwjE,QAA+B,GAAG,KAClCG,OAAkB,GAAG,KACnBs/F,YAAsB,EAAK,KAyDpCvL,YAAeh8J,IAKb,GAAIA,aAAkBm6J,EAAO,CAC3B,IAAI92J,EAAQkb,KAAK0pD,OAAOkK,QAAQnyE,IACjB,IAAXqD,IACFA,EAAQkb,KAAK0pD,OAAOxjD,KAAKzkB,GAAU,GAErC,MAAMwnK,EAAgBnkK,EAAQq0J,EAAO+P,kBAAqB/P,EAAOgQ,cACjE,OACEvB,EAAKO,WAAWnoJ,KAAKja,IACC,IAAtBozJ,EAAOwO,aACNsB,EAAO9P,EAAOgQ,cAAiBhQ,EAAOwO,aAAe,IAEnD,CACL,IAAI7iK,EAAQkb,KAAKupD,QAAQqK,QAAQnyE,aAAkBw8J,EAAQx8J,EAAOkiB,KAAOliB,IAC1D,IAAXqD,IACFA,EAAQkb,KAAKupD,QAAQrjD,KAAKzkB,aAAkBw8J,EAAQx8J,EAAOkiB,KAAOliB,GAAU,GAE9E,MAAMwnK,EAAgBnkK,EAAQq0J,EAAO+P,kBAAqB/P,EAAOgQ,cACjE,OAAInpJ,KAAKgpJ,WAELpN,EAAM4J,UAAUxlJ,KAAKja,IACC,GAAtBozJ,EAAOqG,aACPrG,EAAO2E,SACNmL,GAAQ9P,EAAOgQ,cAAgB,GAAMhQ,EAAOqG,aAAe,IAG1Dx/I,KAAKja,GAGL6hK,EAAKO,WAAWnoJ,KAAKja,IACC,GAAtBozJ,EAAOwO,aACNsB,EAAO9P,EAAOgQ,cAAiBhQ,EAAOwO,aAAe,OAzF9D3nJ,KAAKja,GAAKgjK,EACV/oJ,KAAKgpJ,WAAaA,GAXTzL,EAEJ6L,cAA6B,GAFzB7L,EAGJ8L,gBAA+B,GAH3B9L,EAIJ+L,gBAA+B,GAJ3B/L,EAcJvE,MAAQ,KACbuE,EAAU6L,cAAgB,GAC1B7L,EAAU8L,gBAAkB,GAC5B9L,EAAU+L,gBAAkB,IAjBnB/L,EAoBJQ,4BAA8B,CAACt8J,EAAkB4yH,KAEtD,IAAIwvC,EAASjI,EAAM2N,gBAAgB9nK,EAAOmB,MAAQyxH,EAAW5yH,EAAOmB,IAAM,EAAI,GAC9E,MAAMA,EAAIg5J,EAAM4J,UAAU3B,GAO1B,OANIpiK,EAAOmB,IAAMA,GAAKyxH,EAAWzxH,GAC/BihK,SAEsC19J,IAApCo3J,EAAU6L,cAAcvF,KAC1BtG,EAAU6L,cAAcvF,GAAU,IAAItG,EAAUsG,GAAQ,IAEnDtG,EAAU6L,cAAcvF,IA9BtBtG,EAiCJsD,2BAA6B,CAACp/J,EAAkB4yH,KAErD,IAAIwvC,EAASjI,EAAM2N,gBAAgBl1C,IAAaA,EAAW5yH,EAAOmB,IAAM,EAAI,GAC5E,MAAMA,EAAIg5J,EAAM4J,UAAU3B,GAO1B,OANIpiK,EAAOmB,IAAMA,GAAKyxH,EAAWzxH,GAC/BihK,SAEsC19J,IAApCo3J,EAAU6L,cAAcvF,KAC1BtG,EAAU6L,cAAcvF,GAAU,IAAItG,EAAUsG,GAAQ,IAEnDtG,EAAU6L,cAAcvF,IA3CtBtG,EA8CJS,8BAAgC,CAACv8J,EAAkB6yH,KAExD,MAAMwvC,EAAS8D,EAAK4B,gBAAgB/nK,EAAO2mD,MAAQksE,EAAW7yH,EAAO2mD,IAAM,EAAI,GAI/E,YAH0CjiD,IAAtCo3J,EAAU8L,gBAAgBvF,KAC5BvG,EAAU8L,gBAAgBvF,GAAU,IAAIvG,EAAUuG,GAAQ,IAErDvG,EAAU8L,gBAAgBvF,IApDxBvG,EAuDJC,6BAA+B,CAAC/7J,EAAkB6yH,KAEvD,MAAMwvC,EAAS8D,EAAK4B,gBAAgBl1C,IAAaA,EAAW7yH,EAAO2mD,IAAM,EAAI,GAI7E,YAH0CjiD,IAAtCo3J,EAAU8L,gBAAgBvF,KAC5BvG,EAAU8L,gBAAgBvF,GAAU,IAAIvG,EAAUuG,GAAQ,IAErDvG,EAAU8L,gBAAgBvF,ICvD9B,MAAMJ,UAAuC3I,EACxCO,iBACR,MAAMN,EAASh7I,KAAKg7I,OACdv5J,EAASue,KAAKve,OACpB,IAAKA,EAAQ,MAAO,GAEpB,MAAMgvC,EAAoB,CAAC,CAAC7tC,EAAGwlD,IAAM,CAACxlD,EAAIo4J,EAAOhyJ,QAASo/C,EAAI4yG,EAAO/xJ,SAAW,IAChF,GAAIxH,aAAkBk/J,EAAY,CAChClwH,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAIu2J,EAAOsQ,WAAatQ,EAAOiH,aAAch4G,KACnE3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IACAm1G,EAAUsD,2BAA2Bp/J,EAAQmB,GAAG66J,YAAYh8J,GAC3DmB,EACV,CAACA,EAAGwlD,EAAI3pB,KAAKyiI,KAAKlG,EAAO5yG,IAAM3mD,EAAO2mD,MAAQ4yG,EAAO/xJ,SAAWkwJ,EAAOsQ,aACvE,CAAC7mK,EAAGwlD,KAEV3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CACnBm1G,EAAUsD,2BAA2Bp/J,EAAQmB,GAAG66J,YAAYh8J,GAC5D2mD,KAGF,MAAM04G,EAA2BvD,EAAUS,8BACzCv8J,EACAu5J,EAAO5yG,KACPq1G,YAAYh8J,IACTq/J,EAA2B9F,EAAO5yG,MAAQ04G,EAA2Br/J,EAAO2mD,KAAO,GACtF3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,KACb,MAAM64G,EAAO1D,EAAUS,8BAA8Bv8J,EAAQ2mD,GAAGq1G,YAAYh8J,GAC5E,OAAQw/J,EAAO74G,IAAM64G,EAAOx/J,EAAO2mD,KAAO,EACtC,CAACxlD,EAAGwlD,GACJ,CAACxlD,EAAG26J,EAAUS,8BAA8Bv8J,EAAQ2mD,GAAGq1G,YAAYh8J,OAK3EgvC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,KACb,IAAI24G,EACAC,EAAQv/J,EAAO2mD,IAAM+wG,EAAOwG,eAAiB,EAAIv3G,EAErD,GADA44G,EAAQviI,KAAKw6F,IAAI+nC,EAASviI,KAAKyiI,KAAKF,GAAS7H,EAAOwG,eAAkB,GAClE/8J,EAAInB,EAAOmB,IACbm+J,EAAOtiI,KAAKpgB,IAAIzb,EAAIu2J,EAAOuG,cAAej+J,EAAOmB,IAAMo+J,OAClD,MAAIp+J,GAAKnB,EAAOmB,IAAMnB,EAAO0/J,MAAMx8J,OAASw0J,EAAOuG,eAGnD,CAEL,MAAM56J,EAAQ25B,KAAKC,OAAO97B,EAAInB,EAAOmB,KAAOu2J,EAAOuG,eAEnD,OADAqB,EAAOt/J,EAAOmB,IAAMu2J,EAAOuG,cAAgB56J,EACpC,EAAElC,EAAIm+J,GAAQ,GAAI34G,EAAI3mD,EAAO2mD,KAAO,GAN3C24G,EAAOt/J,EAAOmB,IAAMnB,EAAO0/J,MAAMx8J,OAASw0J,EAAOuG,cACjDqB,EAAOtiI,KAAKrgB,IAAIxb,EAAIu2J,EAAOuG,cAAeqB,EAAOC,GAOnD,MAAO,CAACD,EAAM34G,MAGhB3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,KACb,MAAMtjD,EAAQ25B,KAAKC,OAAO97B,EAAInB,EAAOmB,KAAOu2J,EAAOuG,eAC7CsB,EAAQhG,EAAO5yG,KAAO3mD,EAAO2mD,IAAM+wG,EAAOwG,eAAiB,GAC3DsB,EACJx/J,EAAO2mD,IACP+wG,EAAOwG,eAAiB,GACtBlhI,KAAKw6F,IAAI+nC,GAAS7H,EAAOwG,eAAiB,EAAIlhI,KAAKyiI,KAAKF,IACxD7H,EAAOwG,eACP,EACJ,OAAI/8J,EAAInB,EAAOmB,IACN,CAACnB,EAAOmB,IAAKq+J,GACXr+J,GAAKnB,EAAOmB,IAAMnB,EAAO0/J,MAAMx8J,OAASw0J,EAAOuG,cACjD,CAACj+J,EAAOmB,IAAMnB,EAAO0/J,MAAMx8J,OAASw0J,EAAOuG,cAAeuB,GAE1D,CAACx/J,EAAOmB,IAAMu2J,EAAOuG,cAAgB56J,EAAOm8J,WAG9Cx/J,aAAkB48J,GAAW58J,aAAkB8+J,EACpD9+J,EAAOmB,IAAMo4J,EAAOp4J,KAEtB6tC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAIu2J,EAAOsQ,WAAYrhH,KAC7C3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGwlD,EAAI3pB,KAAKyiI,KAAKlG,EAAO5yG,IAAM3mD,EAAO2mD,KAAO4yG,EAAO/xJ,YAEvE2+J,EAAK4B,gBAAgB/nK,EAAO2mD,OAASw/G,EAAK4B,gBAAgBxO,EAAO5yG,MACjEwzG,EAAM2N,gBAAgBvO,EAAOp4J,OAASg5J,EAAM2N,gBAAgB9nK,EAAOmB,KAAO,GAG1E6tC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC3mD,EAAO68J,QAA4B,EAAlBnF,EAAO2E,SAAc11G,KAC5D3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGnB,EAAO2mD,OAChC3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAIu2J,EAAO2E,SAAU11G,OAG3C3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CACnBm1G,EAAUsD,2BAA2Bp/J,EAAQmB,GAAG66J,YAAYh8J,GAC5D2mD,KAEF3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CACnBxlD,EACA26J,EAAUS,8BAA8Bv8J,EAAQ2mD,GAAGq1G,YAAYh8J,MAEjEgvC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CACnBm1G,EAAUQ,4BAA4Bt8J,EAAQmB,GAAG66J,YAAYh8J,GAC7D2mD,KAEF3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGnB,EAAO2mD,OAChC3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC3mD,EAAO68J,QAA4B,EAAlBnF,EAAO2E,SAAc11G,OAI5Dw/G,EAAK4B,gBAAgB/nK,EAAO2mD,OAASw/G,EAAK4B,gBAAgBxO,EAAO5yG,MACjEwzG,EAAM2N,gBAAgBvO,EAAOp4J,OAASg5J,EAAM2N,gBAAgB9nK,EAAOmB,MAEnE6tC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC3mD,EAAOmB,IAAKwlD,KAClC3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGnB,EAAO2mD,SAEhC3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CACnBm1G,EAAUsD,2BAA2Bp/J,EAAQmB,GAAG66J,YAAYh8J,GAC5D2mD,KAEF3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CACnBxlD,EACA26J,EAAUS,8BAA8Bv8J,EAAQ2mD,GAAGq1G,YAAYh8J,MAEjEgvC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CACnBm1G,EAAUQ,4BAA4Bt8J,EAAQmB,GAAG66J,YAAYh8J,GAC7D2mD,KAEF3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGnB,EAAO2mD,OAChC3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC3mD,EAAO68J,QAA4B,EAAlBnF,EAAO2E,SAAc11G,OAIhE3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGnB,EAAO2mD,OAChC3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC3mD,EAAOmB,IAAKwlD,MAEpC,OAAO3X,GCjIJ,MAAMi5H,UAAwBzL,EAInC9tH,YAAqB+tH,GACnB9tH,QAEA,KAHmB8tH,eAA6B,KAHzCv6I,KAAuBgmJ,SAAS,KAChCl7J,UAAI,EAMX,MAAM6wJ,EAAgBt/I,KAAKk+I,aAAa,GACxC,GAAIoB,aAAyBC,EAC3Bv/I,KAAKy4I,GAAK6G,EAAc18J,IAAM03J,GAAagF,EAAcgD,WAAanJ,EAAOiH,aAC7EpgJ,KAAK04I,GAAK4G,EAAcl3G,IACxBpoC,KAAKvR,KAAO,IAAIm9C,EAAKutG,EAAOqL,eAAex9I,WAAYhH,KAAKy4I,GAAIz4I,KAAK04I,GAAI,CACvEiB,sBAAsB,QAEnB,CACL,MAAMhvJ,EAAW20J,EAAct2J,QACzBu5J,EAAY9jI,KAAKrgB,IAAIk8I,GAAavoI,OAAO/R,KAAK2D,OAAQhZ,GAC5DqV,KAAKy4I,GAAK6G,EAAc18J,KAAO08J,EAAct2J,QAAUu5J,GAAa,EACpEviJ,KAAK04I,GAAK4G,EAAcl3G,KAAOk3G,EAAcr2J,SAAWkwJ,EAAOG,UAAY,EAC3Et5I,KAAKvR,KAAO,IAAIm9C,EAAKutG,EAAOqL,eAAex9I,WAAYhH,KAAKy4I,GAAIz4I,KAAK04I,GAAI,CACvE/tJ,SAAUA,EACVgvJ,sBAAsB,IAI1B35I,KAAK24I,OAAS34I,KAAKvR,KAAKzF,QACxBgX,KAAK44I,QAAU54I,KAAKvR,KAAKxF,SAG3B+vJ,QACE5oH,MAAM4oH,QACNh5I,KAAKk+I,aAAav5J,OAAS,EAE7Bo1J,iBACE,MAAMuF,EAAgBt/I,KAAKk+I,aAAa,GACxC,GAAIoB,aAAyBC,EAC3Bv/I,KAAKy4I,GAAK6G,EAAc18J,IAAM03J,GAAagF,EAAcgD,WAAanJ,EAAOiH,aAC7EpgJ,KAAK04I,GAAK4G,EAAcl3G,QACnB,CACL,MAAMz9C,EAAW20J,EAAct2J,QACzBu5J,EAAY9jI,KAAKrgB,IAAIk8I,GAAavoI,OAAO/R,KAAK2D,OAAQhZ,GAC5DqV,KAAKy4I,GAAK6G,EAAc18J,KAAO08J,EAAct2J,QAAUu5J,GAAa,EACpEviJ,KAAK04I,GAAK4G,EAAcl3G,KAAOk3G,EAAcr2J,SAAWkwJ,EAAOG,UAAY,EAE7Et5I,KAAKvR,KAAKsrJ,eAAe/5I,KAAKy4I,GAAIz4I,KAAK04I,IAEzC55H,gBACAC,gBAEAo7H,OAEE,OADAn6I,KAAK64I,UAAW,EACT,cAAC,IAAMsH,SAAQ,UAAqBngJ,KAAKvR,KAAK0rJ,QAAzBU,GAAO57J,QC3ChC,MAAMsgK,UAAgB/G,EAqB3BroH,YAEWmyH,EAEA3+I,EAEA1hB,EAEAyiK,GAER,IADQkF,EAAmB,wDAE5Bx5H,QAAQ,KATCkyH,YAAiB,KAEjB3+I,OAAU,KAEV1hB,QAAY,KAEZyiK,cAA2B,KAC3BkF,aAAmB,KA7BrBzF,aAAO,OAEPvK,mBAAa,OACb+I,qBAAe,OAGf9tJ,WAAK,OAEL5V,SAAG,OAKHomK,gBAA0B,EAAM,KACzCwE,gBAAU,OACFx8G,WAA+ClnD,EAAU,KAC1Dw/J,SAAW,IACT3lJ,KAAKqtC,MACZ,KAsFF0sG,eAAiB,CAACn3J,EAAWwlD,KAC3BpoC,KAAKy4I,GAAK71J,EAAIu2J,EAAOmE,cACrBt9I,KAAK04I,GAAKtwG,EAAIpoC,KAAKmkJ,QACnBnkJ,KAAK/gB,IAAI86J,eAAe/5I,KAAKpd,IAAKod,KAAKooC,IAAMpoC,KAAK6pJ,YAC9ClH,EAAgB3iJ,KAAKnL,MAAOmL,OAC9BA,KAAKnL,MAAMklJ,kBA7Eb/5I,KAAKqlJ,eAAiBN,EAAW/kJ,KAAKsiJ,WAGlCtiJ,KAAK0kJ,aACP1kJ,KAAKy4I,GAAKz4I,KAAK0kJ,YAAY9hK,IAC3Bod,KAAKmkJ,QAAUnkJ,KAAK0kJ,YAAYP,QAAUnkJ,KAAK0kJ,YAAYz7J,SAAWkwJ,EAAOkH,eAE7ErgJ,KAAKy4I,GAAKz4I,KAAK/d,MAAMW,IAAMu2J,EAAOmE,cAClCt9I,KAAKmkJ,QAAUnkJ,KAAK/d,MAAMmmD,IAAM+wG,EAAOmM,eAEzCtlJ,KAAK04I,GAAK14I,KAAKmkJ,QAEfnkJ,KAAKsiJ,WAAasH,EAAazQ,EAAOmL,cAAgBnL,EAAO2Q,cAC7D9pJ,KAAKnL,MAAQgmJ,GAAOgI,YAAYl/I,EAAM3D,MACtCA,KAAK2iJ,gBAAkBA,EAAgB3iJ,KAAKnL,MAAOmL,MAC/CA,KAAK2iJ,iBAEP3iJ,KAAKnL,MAAMklJ,iBAEb/5I,KAAK6pJ,YACF7pJ,KAAKnL,iBAAiBwpJ,GAAWr+I,KAAKnL,iBAAiB0rJ,IAAkBvgJ,KAAK2iJ,iBAC1E3iJ,KAAKnL,MAAM5L,SAAWkwJ,EAAOG,UAAY,EAC1C,EACNt5I,KAAK/gB,IAAM,IAAI2sD,EAAK5rC,KAAKsiJ,UAAWtiJ,KAAKpd,IAAKod,KAAKmkJ,QAAUnkJ,KAAK6pJ,WAAY,GAAI5nK,GAGlF+d,KAAK24I,OACD34I,KAAKnL,iBAAiB8rJ,IAAe3gJ,KAAK2iJ,gBAExC3iJ,KAAK/gB,IAAI+J,QADTgX,KAAKnL,MAAMjS,IAAMod,KAAKnL,MAAM7L,QAAUgX,KAAKpd,IAEjDod,KAAK45I,cACH55I,KAAK24I,QACJ34I,KAAKnL,iBAAiBwpJ,GAAWr+I,KAAKnL,iBAAiB0rJ,EACpDvgJ,KAAKnL,MAAM0pJ,aACX,GACNv+I,KAAK44I,QAAUn6H,KAAKpgB,IAClB2B,KAAK/gB,IAAIgK,UACR+W,KAAKnL,iBAAiBwpJ,GAAWr+I,KAAKnL,iBAAiB0rJ,IAAkBvgJ,KAAK2iJ,gBAC3E3iJ,KAAKnL,MAAM5L,SACX,GAGF+W,KAAKqlJ,iBAAmBrlJ,KAAK2iJ,iBAC3B3iJ,KAAK0kJ,cACP1kJ,KAAKmkJ,QAAUnkJ,KAAK0kJ,YAAYP,QAChCnkJ,KAAK24I,OAAS34I,KAAK0kJ,YAAY17J,QAC/BgX,KAAK44I,QAAU54I,KAAK0kJ,YAAYz7J,UAGpC+W,KAAK04I,GAAK14I,KAAKmkJ,QAEjBzJ,eACE,OAAO36J,GAAci6J,mBACjBh6I,KAAK45I,cACL55I,KAAK24I,QACF34I,KAAKnL,iBAAiBwpJ,GAAWr+I,KAAKnL,iBAAiB0rJ,EACpDvgJ,KAAKnL,MAAM0pJ,aACX,GAEZoG,cACE,OACE3kJ,KAAK24I,QACJ34I,KAAKnL,iBAAiBwpJ,GAAWr+I,KAAKnL,iBAAiB0rJ,EACpDvgJ,KAAKnL,MAAM2pJ,mBACX,GAiBRrE,OAWE,OARIn6I,KAAKqlJ,gBACLrlJ,KAAKnL,iBAAiBwtJ,GACtBriJ,KAAKnL,iBAAiB60J,GACtB1pJ,KAAKnL,iBAAiB8rJ,IAGxB3gJ,KAAKqtC,MAAQ,IAAIq2G,EAAc1jJ,KAAK/gB,KAAKuyB,GAAGxR,KAAKnL,QAGjD,eAAC,IAAMsrJ,SAAQ,WACZngJ,KAAKqlJ,eACF,KACArlJ,KAAK/gB,IAAIk7J,OACZn6I,KAAKqtC,OAASrtC,KAAKqtC,MAAM8sG,OACvBn6I,KAAKnL,iBAAiB8rJ,IAAe3gJ,KAAK2iJ,gBAAsC,KAApB3iJ,KAAKnL,MAAMslJ,SALvDU,GAAO57J,QC7G3B,SAAS8qK,EAAcp1G,GAC5B,MAAO,SAAUA,GAAU,SAAUA,GAAU,SAAUA,EAIpD,SAASq1G,EAAcr1G,GAC5B,MAAO,WAAYA,GAAU,aAAcA,EAItC,SAASs1G,EAAUt1G,GACxB,MAAO,SAAUA,EAIZ,SAASu1G,EAAmBC,GACjC,OAAe,OAARA,IArBqBx1G,EAqBSw1G,EAAI/oK,KApBH,IAA/B4qC,OAAO7pC,KAAKwyD,GAAQhwD,QADtB,IAAuBgwD,EAyBvB,SAAS0pE,EAAQ16G,GACtB,OAAO+U,MAAM2lG,QAAQ16G,GAIhB,SAASymJ,EAAWxnK,GACzB,OAAOA,GAA6B,sBAAxB,GAAGokB,SAASqjJ,KAAKznK,GAIxB,SAAS0nK,EAAK3mJ,GACnB,OAAOymJ,EAAWzmJ,IAAS,gBAAiBA,GAAQ,iBAAkBA,EAIjE,SAAS4mJ,EAAW3nK,GACzB,OAAOwnK,EAAWxnK,KAAO0nK,EAAK1nK,GAIzB,SAAS4/J,EAAO7+I,GACrB,OAAgB,OAATA,EAmBF,SAAS4gJ,EAAa5gJ,GAC3B,MAAuB,kBAATA,EAST,SAAS8gJ,EAAgB9gJ,GAC9B,OA1BK,SAAqBA,GAC1B,YAAgBxd,IAATwd,EAyBA6mJ,CAAY7mJ,IAAS6+I,EAAO7+I,IArB9B,SAAkBA,GACvB,MAAuB,kBAATA,EAoB8B8mJ,CAAS9mJ,IAhBhD,SAAkBA,GACvB,MAAuB,kBAATA,EAegD8jH,CAAS9jH,IANlE,SAAmBA,GACxB,MAAuB,mBAATA,EAKkE+mJ,CAAU/mJ,GAIrF,SAASg/I,EAAgB9tJ,EAAc81J,GAC5C,OAAI91J,aAAiBwpJ,EAGjBsM,aAAqBpL,GACrB1qJ,EAAMqqJ,mBAAsByL,EAAsB1oK,MAAMi+J,cACwB,IAAhFrrJ,EAAMqpJ,aAAaniF,WAAUn5E,GAAKA,aAAa28J,GAAW38J,IAAM+nK,IAEzD91J,aAAiB0rJ,EACnB1rJ,EAAMqpJ,aAAa35H,MAAK3hC,GAAKA,aAAa28J,MAAaoL,EAEvD91J,EAAMqpJ,aAAa,KAAOyM,EAK9B,SAASC,EAAuB/1J,EAAqB81J,GAC1D,OAAO91J,EAAMqpJ,aAAa,KAAOyM,EAa5B,SAAS5F,EAAW9lK,GACzB,MARO,UAAUyjG,KAQAzjG,GASZ,SAASq7J,GACd7rJ,GAES,IADTo8J,EAAY,uDAAI,GAAE1R,EAAOK,aAAaL,EAAOG,cAAcH,EAAOE,aAElE,MAAMyR,EAASn6H,SAAS2zF,cAAc,UAChCxkI,EAAUgrK,EAAOC,WAAW,MAElC,IAAKjrK,IAAY2O,EACf,OAAO,EAGT3O,EAAQ+qK,KAAOA,EACf,MAAMG,EAAcv8J,EACjB40B,MAAM,MACN9jB,QACC,CAAC0rJ,EAASC,IACRprK,EAAQqrK,YAAYF,GAASjiK,MAAQlJ,EAAQqrK,YAAYD,GAAWliK,MAChEiiK,EACAC,GACN,IAEEE,EAAUtrK,EAAQqrK,YAAYH,GACpC,OAAOI,EAAQpiK,MAIV,SAASg3J,GAAcr8I,GAC5B,GAAI2mJ,EAAK3mJ,GACP,OAAOA,EAAK+9B,KAAKhyB,OAAO/sB,KAAK++C,GAAcA,EAAK98B,OAAMriB,KAAK,KACtD,CACL,MAAM8oK,EAAW1nJ,EAAKqD,WACtB,OAAOqkJ,EAAS3/G,UAAU2/G,EAASz3F,QAAQ,KAAMy3F,EAASz3F,QAAQ,MAAMd,QAKrE,SAASmtF,GAAYt8I,GAC1B,MAAM0nJ,EAAW1nJ,EAAKqD,WACtB,GAAIsjJ,EAAK3mJ,GAAO,CACd,IAAIve,EACiB,wBAAnBue,EAAK+9B,KAAKt1C,MAA+D,aAA7Bi/J,EAAS3/G,UAAU,EAAG,GAC9D2/G,EAAS3/G,UAAU2/G,EAASz3F,QAAQ,MACpCy3F,EAAS3/G,UAAU2/G,EAASz3F,QAAQ,KAAO,GAGjD,MADgB,MAAZxuE,EAAK,KAAYA,EAAO,eAAiBA,EAAO,QAC7CA,EAEP,OAAOimK,EAAS3/G,UAAU2/G,EAASz3F,QAAQ,MAIxC,SAASqmF,GAAiBx4J,GAAuB,IAAD,EACrD,MAAM00D,EAA6B,QAApB,EAAG10D,EAAO29J,kBAAU,aAAjB,EAAmBjpG,YACrCA,IAAcA,EAAUxsD,MAAMo5D,OAAS,WAGlC,SAASq3F,GAAmB34J,GAAuB,IAAD,EACvD,MAAM00D,EAA6B,QAApB,EAAG10D,EAAO29J,kBAAU,aAAjB,EAAmBjpG,YACrCA,IAAcA,EAAUxsD,MAAMo5D,OAAS,WAIlC,SAAS04F,GAAgBh6J,GAAqD,IAA/B6pK,EAAiB,uDAAG,GACxE,MAAMrgD,EACJxpH,aAAkB8pK,IAAQ7yI,MAAM81C,KAAK/sE,EAAO88H,UAAY,IAAM,GAChEtT,EAAM/kG,KAAKzkB,GACXwpH,EAAMrlF,SAAQ8b,IACZA,EAAK8pH,SAAS,CACZ1O,OAAQp7G,EAAK+pH,MAAM3O,OAAS3D,EAAOuS,aAAa1kJ,WAAa06B,EAAK+pH,MAAM3O,OACxE3wJ,KAAMu1C,EAAK+pH,MAAMt/J,KAAOgtJ,EAAOuS,aAAa1kJ,WAAa06B,EAAK+pH,MAAMt/J,QACjEm/J,OAMF,SAASzP,GAAkBp6J,GAAuD,IAAjCkqK,EAAmB,uDAAG,GAC5E,MAAM1gD,EACJxpH,aAAkB8pK,IAAQ7yI,MAAM81C,KAAK/sE,EAAO88H,UAAY,IAAM,GAChEtT,EAAM/kG,KAAKzkB,GAEXwpH,EAAMrlF,SAAQ8b,IACZA,EAAK8pH,SAAS,CACZ1O,OAAQp7G,EAAK+pH,MAAM3O,OACf/8J,GAAci6J,mBACZb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,WAClB06B,EAAK+pH,MAAM3O,OACf3wJ,KAAMu1C,EAAK+pH,MAAMt/J,KACbpM,GAAci6J,mBACZb,EAAOwB,QAAQ3zI,WACfmyI,EAAOyB,SAAS5zI,WAClB06B,EAAK+pH,MAAMt/J,QACZw/J,OAMF,SAAS7L,GAAenb,GAC7B,OAAoB,OAAhBA,EACK,KACEulB,EAAmBvlB,GACrBmb,GAAenb,EAAYiiB,MAE3BjiB,EASJ,SAASinB,GAA2B5Q,EAAa6Q,GAClDzB,EAAWpP,IAAWyJ,EAAgBzJ,KAGtCiP,EAAUjP,IAAWiP,EAAU4B,GACjCD,GAA2B5Q,EAAO8Q,KAAMD,EAAYC,MAC3C9B,EAAchP,IAAWgP,EAAc6B,IAEhDD,GAA2B5Q,EAAOz8B,SAAUstC,EAAYttC,UACxDqtC,GAA2B5Q,EAAOrW,YAAaknB,EAAYlnB,cAClDtmB,EAAQ28B,IAAW38B,EAAQwtC,GAEpC7Q,EAAOp1H,SAAQ,CAAC9P,EAAM/yB,IAAM6oK,GAA2B91I,EAAM+1I,EAAY9oK,MAChEgnK,EAAc/O,IAAW+O,EAAc8B,KAEhD7/H,OAAO+/H,iBAAiBF,EAAYzqK,KAAM4qC,OAAO64H,0BAA0B7J,EAAO55J,OAElFwqK,GAA2B5Q,EAAO4L,KAAMiF,EAAYjF,QAUjD,SAASoF,GAAan3J,GAC3B,MAAMo3J,EAAQtvI,oBAAU9nB,GAExB,OADA+2J,GAA2B/2J,EAAOo3J,GAC3BA,EAGF,SAAS1D,GAAgBxtB,GAC9B,GAAImvB,EAAmBnvB,EAAE4J,aAAc,CACrC,MAAMunB,EAA8B,GAIpC,OAHAnxB,EAAExc,SAAS34F,SAAQumI,IACjBD,EAAahmJ,QAAQqiJ,GAAgB4D,OAEhCD,EAEP,MAAO,CAACnxB,GCxSL,MAAMggB,WAAuEvC,EAMlFroH,YAAYq+B,GACVp+B,QAAQ,KANF8qH,MAAgB,GAAG,KAC3BD,OAAmB,GAAG,KACtBD,YAAM,OACNv5J,YAAM,OA0CNq9B,aAAe,IAAsD,IAArD,cAAEm9E,GAA6C,EAC7Dw/C,GAAgBx/C,EAAe,CAC7By/C,YAAa33H,OAAOk1H,EAAc0C,4BAEpC,KAEF58H,aAAe,IAAsD,IAArD,cAAEk9E,GAA6C,EAC7D4/C,GAAkB5/C,EAAe,CAC/By/C,YAAa33H,OAAOk1H,EAAcuC,qBA9CpCx7I,KAAKg7I,OAASxsF,EACdxuD,KAAKve,YAAS0E,EACd6Z,KAAKy4I,GAAKjqF,EAAK5rE,IACfod,KAAK04I,GAAKlqF,EAAKpmB,IAEjBxZ,OACE,OAAO5uB,KAAKk7I,MAGd1pI,GAAGA,GAID,OAHAxR,KAAKve,OAAS+vB,EACdxR,KAAK24I,OAASl6H,KAAKw6F,IAAIznG,EAAG5uB,IAAMod,KAAKg7I,OAAOp4J,KAC5Cod,KAAK44I,QAAUn6H,KAAKw6F,IAAIznG,EAAG42B,IAAMpoC,KAAKg7I,OAAO5yG,KACtCpoC,KAmBCs7I,iBACR,MAAM9pI,EAAKxR,KAAKve,OAChB,OAAK+vB,EACE,CAAC,IAAM,CAACA,EAAG5uB,IAAK4uB,EAAG42B,MADV,GAelBxkD,WAEAu2J,OACE,MAAMc,EAASj7I,KAAKs7I,iBAAiB/7I,QACnC,CAAC07I,EAAQ5pH,IAAS,IAAI4pH,KAAW5pH,EAAK4pH,EAAOA,EAAOt2J,OAAS,GAAIs2J,EAAOA,EAAOt2J,OAAS,MACxF,CAACqb,KAAKg7I,OAAOp4J,IAAKod,KAAKg7I,OAAO5yG,MAMhC,GAJA6yG,EAAOz9H,OAAO,EAAG,GAGjBxd,KAAKk7I,OAAU,KAAID,EAAO,MAAMA,EAAO,MACjB,IAAlBA,EAAOt2J,OAETqb,KAAKk7I,OAAU,KAAID,EAAO,MAAMA,EAAO,UAClC,CACL,IAAIpuI,EAAI,EACR,KAAOA,EAAIouI,EAAOt2J,OAAS,GAAG,CAC5B,MAAOm3J,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAAMlB,EAAOxxG,MAAM58B,EAAGA,EAAI,GAC/CuvI,EAAMJ,EAAKF,EACXO,EAAMH,EAAKF,EACXM,EAAML,EAAKF,EACXQ,EAAMJ,EAAKF,EACXW,EAAKn+H,KAAKrgB,IACd66I,EAAc4D,kBACdp+H,KAAKpgB,IAAIogB,KAAKw6F,IAAImjC,GAAM39H,KAAKw6F,IAAIqjC,IAAQ,EACzC79H,KAAKpgB,IAAIogB,KAAKw6F,IAAIojC,GAAM59H,KAAKw6F,IAAIsjC,IAAQ,GAErC6P,EAAKpQ,EAAKY,EAAKn+H,KAAKyiI,KAAK9E,GACzBiQ,EAAKpQ,EAAKW,EAAKn+H,KAAKyiI,KAAK5E,GACzBgQ,EAAKtQ,EAAKY,EAAKn+H,KAAKyiI,KAAK7E,GACzBkQ,EAAKtQ,EAAKW,EAAKn+H,KAAKyiI,KAAK3E,GAG/Bv8I,KAAKk7I,OAAU,KAAIkR,KAAMC,OAAQrQ,KAAMC,KAAMqQ,KAAMC,IACnD1/I,GAAK,GAKT,OADA7M,KAAKk7I,OAAU,KAAID,EAAOA,EAAOt2J,OAAS,MAAMs2J,EAAOA,EAAOt2J,OAAS,MAErE,eAAC,IAAU,CAETm6B,aAAc9e,KAAK8e,aACnBC,aAAc/e,KAAK+e,aAAa,UAEhC,wBAAC,IAAS,IACJm6H,EACJ4D,OACE/8J,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,WAE7B00I,YAAa33H,OAAOk1H,EAAcuC,kBAClCuB,eAAgBh5H,OAAOk1H,EAAc+D,qBACrCr5I,KAAM3D,KAAK4uB,OACX3vC,IAAK47J,GAAO57J,QAEd,wBAAC,IAAU,IACLi6J,EACJ+B,OAAQA,EAAOxxG,MAAMwxG,EAAOt2J,OAAS,GACrCwH,KACEpM,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,WAE7Bi2I,eAAe,EACfC,aAAcn5H,OAAOk1H,EAAckE,eACnCl+J,IAAK47J,GAAO57J,UA1BT47J,GAAO57J,QCvGb,MAAMo+J,WAAuBtC,GACxBO,iBACR,MAAM9pI,EAAKxR,KAAKve,OAChB,IAAK+vB,EAAI,MAAO,GAEhB,MAAMif,EAAoB,CAAC,CAAC7tC,EAAGwlD,IAAM,CAACxlD,EAAIq2J,EAAcqE,cAAel1G,IAQvE,OANI52B,aAAcoqI,KAChBnrH,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGwlD,EAAI6wG,EAAc0O,gBAC3Cl3H,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC52B,EAAG5uB,IAAMq2J,EAAcqE,cAAel1G,MAG9D3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC52B,EAAG5uB,IAAMq2J,EAAcqE,cAAe9rI,EAAG42B,IAAM52B,EAAGvoB,YACjEwnC,GCRJ,MAAMmtH,WAAuBpF,EAKlCroH,YAAqB2jE,GACnB1jE,QAAQ,KADW0jE,SAAkB,KAJ9Bj/F,MAAc,KAAK,KAEnB8O,KAAa,GAAG,KAqBzBo2I,eAAiB,KACf/5I,KAAKy4I,GAAKz4I,KAAK8zF,OAAOlxG,IACtBod,KAAK04I,GAAK14I,KAAK8zF,OAAO1rD,KAnBtBpoC,KAAKy4I,GAAKz4I,KAAK8zF,OAAOlxG,IACtBod,KAAK04I,GAAK14I,KAAK8zF,OAAO1rD,IACtBpoC,KAAK44I,QAAU54I,KAAK8zF,OAAO7qG,SAC3B+W,KAAK24I,OAAS34I,KAAK8zF,OAAO9qG,QAE5BpG,IACE,OAAOod,KAAKy4I,GAEdrwG,IACE,OAAOpoC,KAAK04I,GAEdzvJ,SACE,OAAO+W,KAAK44I,QAEd5vJ,QACE,OAAOgX,KAAK24I,OAMdK,SAEAmB,OACE,OACE,wBAAC,IAAI,IACCjB,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKpd,IACRwlD,EAAGpoC,KAAKooC,IACRp/C,MAAOgX,KAAKhX,QACZC,OAAQ+W,KAAK/W,SACb6zJ,OACE/8J,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,WAE7B3d,IAAK2W,KAAK3W,OC/CX,MAAMw0J,WAAoB9C,GACrBO,iBACR,MAAM9sF,EAAOxuD,KAAKg7I,OACZxpI,EAAKxR,KAAKve,OAChB,IAAK+vB,EAAI,MAAO,GAEhB,MAAMif,EAAoB,CAAC,CAAC7tC,EAAGwlD,IAAM,CAACxlD,EAA6B,EAAzBq2J,EAAc6E,SAAc11G,IAStE,OAPI52B,EAAG42B,IAAMomB,EAAKpmB,KAAOomB,EAAKpmB,IAAM52B,EAAG42B,IAAM52B,EAAGvoB,UAC9CwnC,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGwlD,EAA6B,EAAzB6wG,EAAc6E,YAC3CrtH,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC52B,EAAG5uB,KAAO4rE,EAAK5rE,IAAM4uB,EAAG5uB,IAAM,EAAI4uB,EAAGxoB,SAAUo/C,MAErE3X,EAAMvqB,MAAK,IAAM,CAACsL,EAAG5uB,IAAM4uB,EAAGxoB,QAAU,EAAGwoB,EAAG42B,KAAO52B,EAAG42B,IAAMomB,EAAKpmB,IAAM52B,EAAGvoB,SAAW,MAGlFwnC,GCjBJ,MAAewtH,WAAczF,EAAS,cAAD,yBAUnC0F,aAAuC,GAAG,KAE/Bv6I,UAAI,EARtBw6I,aAAaC,GACXp+I,KAAKk+I,aAAah4I,KAAKk4I,ICkBpB,MAAMC,WAAgBJ,GAoB3B9tH,YAEWxsB,EAEAu6I,GAET9tH,QAAQ,KAJCzsB,OAAa,KAEbu6I,eAAoC,KAtBtCO,OAAiBxF,EAAc6E,SAAS,KACxCY,YAAsBzF,EAAc0F,cAAc,KAClDJ,kBAAY,OACZD,aAAO,OAEPM,YAAM,OACNC,gBAAU,OACVC,cAAQ,OACRC,oBAAc,OACd7vI,aAAO,OACP8vI,mBAAa,OACbR,wBAAkB,OACnBS,YAAM,OAGLC,sBAAgB,OAChBC,SAA2B16J,IAAMq0J,YAAY,KAuDtDh6H,aAAe,IAAsD,IAArD,cAAEm9E,GAA6C,EACzDl8G,GAAci6J,qBAClBh6I,KAAK3W,IAAIf,QAAQ4xJ,YACjBl6I,KAAKm/I,SAAS72J,QAAQpJ,OACtBu8J,GAAgBx/C,KAChB,KAEFl9E,aAAe,IAAsD,IAArD,cAAEk9E,GAA6C,EACzDl8G,GAAci6J,qBAClBh6I,KAAKm/I,SAAS72J,QAAQ+xC,OACtBwhH,GAAkB5/C,KAxDlB4+C,GAAO2R,oBAAoBxsJ,MAG3B,MAAMs/I,EAAgBt/I,KAAKk+I,aAAa,GACpCoB,aAAyBC,IAC3Bv/I,KAAKy4I,GACH6G,EAAcr9J,MAAMW,IAAM08J,EAAcr9J,MAAM+G,QAAUiwJ,EAAcuG,aAAe,EACvFx/I,KAAK04I,GAAK4G,EAAcl3G,IACxBpoC,KAAKs+I,QAAUt+I,KAAKy4I,GAAmB,EAAdz4I,KAAKy+I,SAE1Ba,EAAcG,YAChBz/I,KAAKy4I,GAAK6G,EAAc18J,IAAoC,EAA9Bq2J,EAAcyG,cAC5C1/I,KAAK04I,GAAK4G,EAAcl3G,IAAM6wG,EAAc0G,eAAiB,EAAI3/I,KAAKy+I,SAEtEz+I,KAAKy4I,GAAK6G,EAAc18J,IACxBod,KAAK04I,GAAK4G,EAAcl3G,IAAMk3G,EAAcxrD,OAAO7qG,SAAWgwJ,EAAc0G,gBAE9E3/I,KAAKs+I,QAAUt+I,KAAKy4I,GAAKQ,EAAcyG,cAAgB,EACvD1/I,KAAKy4I,GAAKz4I,KAAKs+I,QAAwB,EAAdt+I,KAAKy+I,QAEhCz+I,KAAK04I,IAAM14I,KAAKy+I,OAEhBz+I,KAAK24I,OAAuB,EAAd34I,KAAKy+I,OACnBz+I,KAAK44I,QAAwB,EAAd54I,KAAKy+I,OAEpBz+I,KAAKk/I,iBAAmBrE,GAAO+E,gBAAgBC,YAC7CC,GAAe9/I,KAAK2D,KAAKghI,cAE3B3kI,KAAK4+I,OAAS5+I,KAAK2D,KAAKo8I,aAExB//I,KAAK6+I,WAAc,YAAWmB,GAAchgJ,KAAK2D,SACjD3D,KAAK8+I,SAAY,SAAQmB,GAAYjgJ,KAAK2D,QAC1C3D,KAAK++I,gBACF/+I,KAAK8+I,SAASn6J,OAAS,GAAKqb,KAAK8+I,SAASr1G,MAAM,EAAG,IAAMzpC,KAAK8+I,UAC5Dz7H,MAAM,MACNomB,MAAM,EAAG,GACTlnD,KAAK,MAAQ,OAClByd,KAAKkP,QAAW,GAAElP,KAAK6+I,eAAe7+I,KAAK8+I,WAC3C9+I,KAAKg/I,cAAiB,GAAEh/I,KAAK6+I,eAAe7+I,KAAK++I,iBACjD/+I,KAAKu+I,aAAe9/H,KAAKpgB,IAAIi8I,GAAat6I,KAAK6+I,YAAavE,GAAat6I,KAAK8+I,WAC9E9+I,KAAKw+I,mBAAqB//H,KAAKpgB,IAC7Bi8I,GAAat6I,KAAK6+I,YAClBvE,GAAat6I,KAAK++I,iBAgBtBhF,kBACAI,OAAyB,IAAD,EAItB,OAHAn6I,KAAKi/I,OACHj/I,KAAKk/I,iBAAiBuN,cACrB,IAAI5O,GAAY79I,MAAMwR,GAAGxR,KAAKk/I,iBAAiBuN,cAEhD,eAAC,IAAMtM,SAAQ,WACb,eAAC,IAAK,CACJrhI,aAAcmX,GAAKj2B,KAAK8e,aAAamX,GACrClX,aAAckX,GAAKj2B,KAAK+e,aAAakX,GACrC5sC,IAAK2W,KAAK3W,IAAI,UAEd,wBAAC,IAAM,IACD6vJ,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAKy+I,OACb3B,OACE/8J,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,aAG/B,wBAAC,IAAM,IACDkyI,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAK0+I,YACbvyJ,KACEpM,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,aAG/B,wBAAC,IAAM,IACDkyI,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAKy+I,OACb3B,OACE/8J,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,aAG/B,wBAAC,IAAM,IACDkyI,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAK0+I,YACbvyJ,KACEpM,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,gBAIhCjnB,GAAci6J,mBACb,eAAC,IAAU,CACTp3J,EAAGod,KAAKpd,IAAMod,KAAKhX,QAAuC,EAA7BiwJ,EAAcmH,aAC3Ch4G,EAAGpoC,KAAKooC,IAAM6wG,EAAcoH,aAC5B5lE,SAAS,EACTpxF,IAAK2W,KAAKm/I,SAAS,UAEnB,cAAC,IAAQ,CACPrC,OAAO,QACP3wJ,KAAM,QACNw1B,QAASoC,OAAOk1H,EAAcqH,oBAEhC,cAAC,IAAS,CACR7xJ,KAAMuR,KAAKg/I,cACX9zG,WAAY+tG,EAAcI,WAAWryI,WACrCmkC,SAAUpnB,OAAOk1H,EAAcK,UAC/BC,UAAWN,EAAcO,UAAUxyI,WACnC7a,KAAM8sJ,EAAc0B,QAAQ3zI,WAC5B8S,QAAS,OAIb,eAAC,IAAU,CACTl3B,EAAGod,KAAKpd,IAAMod,KAAKhX,QAAuC,EAA7BiwJ,EAAcmH,aAC3Ch4G,EAAGpoC,KAAKooC,IAAM6wG,EAAcoH,aAC5B5lE,SAAS,EACTpxF,IAAK2W,KAAKm/I,SAAS,UAEnB,cAAC,IAAQ,CACPrC,OAAO,QACP3wJ,KAAM,QACNw1B,QAASoC,OAAOk1H,EAAcqH,oBAEhC,cAAC,IAAS,CACR7xJ,KAAMuR,KAAKkP,QACXg8B,WAAY+tG,EAAcI,WAAWryI,WACrCmkC,SAAUpnB,OAAOk1H,EAAcK,UAC/BC,UAAWN,EAAcO,UAAUxyI,WACnC7a,KAAM8sJ,EAAc2B,SAAS5zI,WAC7B8S,QAAS,OAIH,QADX,EACA9Z,KAAKi/I,cAAM,aAAX,EAAa9E,SAlGKU,GAAO57J,QC7F3B,MAAMshK,WAAsBtC,GAiBjC9tH,YAEWxsB,EAEAu6I,GAET9tH,QAAQ,KAJCzsB,OAAe,KAEfu6I,eAAoC,KApB/CI,aAAO,OACEC,kBAAY,OACZC,wBAAkB,OAClBC,OAAiBxF,EAAc6E,SAAS,KACxCY,YAAsBzF,EAAc0F,cAAc,KACnDM,YAAM,OAELJ,gBAAU,OACVC,cAAQ,OACRC,oBAAc,OACd7vI,aAAO,OACP8vI,mBAAa,OACdh6J,UAAoB,EAAM,KAEzBm6J,SAA2B16J,IAAMq0J,YAAY,KA+EtDh6H,aAAe,IAAsD,IAArD,cAAEm9E,GAA6C,EACzDl8G,GAAci6J,qBAClBh6I,KAAKm/I,SAAS72J,QAAQpJ,OACtBu8J,GAAgBx/C,KAChB,KAEFl9E,aAAe,IAAsD,IAArD,cAAEk9E,GAA6C,EAC7D,IAAIl8G,GAAci6J,mBAClB,GAAKh6I,KAAKhb,SAGH,CAAC,IAAD,EACL,MAAMmxD,EAAoC,QAA3B,EAAG8lD,EAAcmjD,kBAAU,aAAxB,EAA0BjpG,YAC5CA,IAAcA,EAAUxsD,MAAMo5D,OAAS,gBAJvC/iD,KAAKm/I,SAAS72J,QAAQ+xC,OACtBwhH,GAAkB5/C,IAKpB,KACFr4G,QAAU,IAAsD,IAArD,cAAEq4G,GAA6C,EACpDl8G,GAAci6J,qBAClBh6I,KAAKhb,UAAYgb,KAAKhb,SACjBgb,KAAKhb,UAIRgb,KAAKm/I,SAAS72J,QAAQpJ,OACtBu8J,GAAgBx/C,KAJhBj8F,KAAKm/I,SAAS72J,QAAQ+xC,OACtBwhH,GAAkB5/C,MA3FpB4+C,GAAO2R,oBAAoBxsJ,MAG3B,MAAMs/I,EAAgBt/I,KAAKk+I,aAAa,GACpCoB,aAAyBC,IAC3Bv/I,KAAKy4I,GACH6G,EAAcr9J,MAAMW,IAAM08J,EAAcr9J,MAAM+G,QAAUiwJ,EAAcuG,aAAe,EACvFx/I,KAAK04I,GAAK4G,EAAcl3G,IACxBpoC,KAAKs+I,QAAUt+I,KAAKy4I,GAAmB,EAAdz4I,KAAKy+I,SAE1Ba,EAAcG,YAChBz/I,KAAKy4I,GAAK6G,EAAc18J,IAAoC,EAA9Bq2J,EAAcyG,cAC5C1/I,KAAK04I,GAAK4G,EAAcl3G,IAAM6wG,EAAc0G,eAAiB,EAAI3/I,KAAKy+I,SAEtEz+I,KAAKy4I,GAAK6G,EAAc18J,IACxBod,KAAK04I,GAAK4G,EAAcl3G,IAAMk3G,EAAcxrD,OAAO7qG,SAAWgwJ,EAAc0G,gBAE9E3/I,KAAKs+I,QAAUt+I,KAAKy4I,GAAKQ,EAAcyG,cAAgB,EACvD1/I,KAAKy4I,GAAKz4I,KAAKs+I,QAAwB,EAAdt+I,KAAKy+I,QAEhCz+I,KAAK04I,IAAM14I,KAAKy+I,OAEhBz+I,KAAK24I,OAAuB,EAAd34I,KAAKy+I,OACnBz+I,KAAK44I,QAAwB,EAAd54I,KAAKy+I,OAEpBz+I,KAAK6+I,WAAc,WAAUmB,GAAchgJ,KAAK2D,QAChD3D,KAAK8+I,SAAY,SAAQmB,GAAYjgJ,KAAK2D,QAC1C3D,KAAK++I,gBACF/+I,KAAK8+I,SAASn6J,OAAS,GAAKqb,KAAK8+I,SAASr1G,MAAM,EAAG,IAAMzpC,KAAK8+I,UAC5Dz7H,MAAM,MACNomB,MAAM,EAAG,GACTlnD,KAAK,MAAQ,OAClByd,KAAKkP,QAAW,GAAElP,KAAK6+I,eAAe7+I,KAAK8+I,WAC3C9+I,KAAKg/I,cAAiB,GAAEh/I,KAAK6+I,eAAe7+I,KAAK++I,iBACjD/+I,KAAKu+I,aACH9/H,KAAKpgB,IAAIi8I,GAAat6I,KAAK6+I,YAAavE,GAAat6I,KAAK8+I,WAC1D7F,EAAcmH,aAChBpgJ,KAAKw+I,mBAAqB//H,KAAKpgB,IAC7Bi8I,GAAat6I,KAAK6+I,YAClBvE,GAAat6I,KAAK++I,iBAGtBpyC,aACE,OAAO3sG,KAAKhb,SAEdqoD,QACE,OAAOrtC,KAAKi/I,OAGdlF,iBACE,MAAMuF,EAAgBt/I,KAAKk+I,aAAa35H,MAAK3hC,GAAKA,aAAa28J,MAAYv/I,KAAKk+I,aAAa,GACzFoB,aAAyBC,IAC3Bv/I,KAAKy4I,GACH6G,EAAcr9J,MAAMW,IAAM08J,EAAcr9J,MAAM+G,QAAUiwJ,EAAcuG,aAAe,EACvFx/I,KAAK04I,GAAK4G,EAAcl3G,IACxBpoC,KAAKs+I,QAAUt+I,KAAKy4I,GAAmB,EAAdz4I,KAAKy+I,SAE1Ba,EAAcG,YAChBz/I,KAAKy4I,GAAK6G,EAAc18J,IAAoC,EAA9Bq2J,EAAcyG,cAC5C1/I,KAAK04I,GAAK4G,EAAcl3G,IAAM6wG,EAAc0G,eAAiB,EAAI3/I,KAAKy+I,SAEtEz+I,KAAKy4I,GAAK6G,EAAc18J,IACxBod,KAAK04I,GAAK4G,EAAcl3G,IAAMk3G,EAAcxrD,OAAO7qG,SAAWgwJ,EAAc0G,gBAE9E3/I,KAAKs+I,QAAUt+I,KAAKy4I,GAAKQ,EAAcyG,cAAgB,EACvD1/I,KAAKy4I,GAAKz4I,KAAKs+I,QAAwB,EAAdt+I,KAAKy+I,QAEhCz+I,KAAK04I,IAAM14I,KAAKy+I,OA+BlBtE,OAKE,OAJAn6I,KAAK64I,UAAW,EAChB74I,KAAKi/I,OACHpE,GAAO2F,cAAciM,cACpB,IAAI5O,GAAY79I,MAAMwR,GAAGqpI,GAAO2F,cAAciM,cAE/C,eAAC,IAAMtM,SAAQ,WACb,eAAC,IAAK,CACJrhI,aAAcmX,GAAKj2B,KAAK8e,aAAamX,GACrClX,aAAckX,GAAKj2B,KAAK+e,aAAakX,GACrCryC,QAASqyC,GAAKj2B,KAAKpc,QAAQqyC,GAC3B5sC,IAAK2W,KAAK3W,IAAI,UAEd,wBAAC,IAAM,IACD6vJ,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAKy+I,OACb3B,OACE/8J,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,aAG/B,wBAAC,IAAM,IACDkyI,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAK0+I,YACbvyJ,KACEpM,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,aAG/B,wBAAC,IAAM,IACDkyI,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAKy+I,OACb3B,OACE/8J,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,aAG/B,wBAAC,IAAM,IACDkyI,EACJj6J,IAAK47J,GAAO57J,MACZ2D,EAAGod,KAAKs+I,QAAUt+I,KAAKy+I,OACvBr2G,EAAGpoC,KAAKooC,IACRq2G,OAAQz+I,KAAK0+I,YACbvyJ,KACEpM,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,gBAIhCjnB,GAAci6J,mBACb,eAAC,IAAU,CACTp3J,EAAGod,KAAKpd,IAAMod,KAAKhX,QAAuC,EAA7BiwJ,EAAcmH,aAC3Ch4G,EAAGpoC,KAAKooC,IAAM6wG,EAAcoH,aAC5B5lE,SAAS,EACTpxF,IAAK2W,KAAKm/I,SAAS,UAEnB,cAAC,IAAQ,CACPrC,OAAO,QACP3wJ,KAAM,QACNw1B,QAASoC,OAAOk1H,EAAcqH,oBAEhC,cAAC,IAAS,CACR7xJ,KAAMuR,KAAKg/I,cACX9zG,WAAY+tG,EAAcI,WAAWryI,WACrCmkC,SAAUpnB,OAAOk1H,EAAcK,UAC/BC,UAAWN,EAAcO,UAAUxyI,WACnC7a,KAAM8sJ,EAAc0B,QAAQ3zI,WAC5B8S,QAAS,OAIb,eAAC,IAAU,CACTl3B,EAAGod,KAAKpd,IAAMod,KAAKhX,QAAuC,EAA7BiwJ,EAAcmH,aAC3Ch4G,EAAGpoC,KAAKooC,IAAM6wG,EAAcoH,aAC5B5lE,SAAS,EACTpxF,IAAK2W,KAAKm/I,SAAS,UAEnB,cAAC,IAAQ,CACPrC,OAAO,QACP3wJ,KAAM,QACNw1B,QAASoC,OAAOk1H,EAAcqH,oBAEhC,cAAC,IAAS,CACR7xJ,KAAMuR,KAAKkP,QACXg8B,WAAY+tG,EAAcI,WAAWryI,WACrCmkC,SAAUpnB,OAAOk1H,EAAcK,UAC/BC,UAAWN,EAAcO,UAAUxyI,WACnC7a,KAAM8sJ,EAAc2B,SAAS5zI,WAC7B8S,QAAS,OAId+gI,GAAO2F,cAAciM,cACpB,IAAI5O,GAAY79I,MAAMwR,GAAGqpI,GAAO2F,cAAciM,cAActS,SApG3CU,GAAO57J,QCjJ3B,MAAMwhK,WAA2B1F,GAC5BO,iBACR,MAAM9sF,EAAOxuD,KAAKg7I,OACZxpI,EAAKxR,KAAKve,OAChB,IAAK+vB,EAAI,MAAO,GAEhB,MAAMif,EAAoB,CACxB,CAAC7tC,EAAGwlD,IAAM,CAACxlD,EAAIq2J,EAAcyG,cAAgB,EAAGt3G,EAAI6wG,EAAc0G,eAAiB,IAyBrF,OAtBInuI,aAAc6sI,IAAW7sI,aAAc+uI,GACzC9vH,EAAMvqB,MAAK,IAAM,CAACsoD,EAAK5rE,IAAM4uB,EAAG5uB,IAAM4uB,EAAG5uB,IAAM4uB,EAAG8sI,QAAS9sI,EAAG42B,OACrD52B,aAAcmvI,KACnBnyF,EAAKpmB,MAAQ52B,EAAG42B,IACd3pB,KAAKw6F,IAAIzqD,EAAK5rE,IAAM4uB,EAAG5uB,KAAqC,EAA9Bq2J,EAAcyG,eAC9CjvH,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGwlD,EAAI6wG,EAAc0G,kBAC3ClvH,EAAMvqB,MAAK,IAAM,CACfsL,EAAG5uB,IAAMq2J,EAAcyG,cAAgB,EACvCluI,EAAG42B,IAAM6wG,EAAc0G,eAAiB,KAE1ClvH,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGwlD,EAAI6wG,EAAc0G,eAAiB,MAE5DlvH,EAAMvqB,MAAK,IAAM,CAACsL,EAAG5uB,IAAK4uB,EAAG42B,IAAM6wG,EAAc0G,eAAiB,KAGpElvH,EAAMvqB,MAAK,IAAM,CACfsL,EAAG5uB,IAAMq2J,EAAcyG,cAAgB,EACvCluI,EAAG42B,KAAOomB,EAAKpmB,IAAM52B,EAAG42B,IAAM6wG,EAAc0G,eAAiB,OAK5DlvH,GChCJ,MAAMyxH,WAAsB1J,EAIjCroH,YAAY+tH,GACV9tH,QAAQ,KAJV+xH,eAAS,OACTjE,kBAAY,OAYZnE,eAAiB,OARf/5I,KAAKk+I,aAAeA,EACpBl+I,KAAKmiJ,UAAYjE,EAAa,GAC9Bl+I,KAAKy4I,GAAKz4I,KAAKmiJ,UAAUv/J,IACzBod,KAAK04I,GAAK14I,KAAKmiJ,UAAU/5G,IACzBpoC,KAAK44I,QAAU54I,KAAKmiJ,UAAUl5J,SAC9B+W,KAAK24I,OAAS34I,KAAKmiJ,UAAUn5J,QAK/BmxJ,OACE,OACE,wBAAC,IAAS,IACJjB,EACJj6J,IAAK47J,GAAO57J,MACZg8J,OAAQ,CAACj7I,KAAKpd,IAAKod,KAAKooC,IAAMpoC,KAAK/W,SAAU+W,KAAKpd,IAAMod,KAAKhX,QAASgX,KAAKooC,KAC3E00G,OACE/8J,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,WAE7B+1I,eAAgBh5H,OAAOk1H,EAAcmJ,oBACrC/4J,IAAK2W,KAAK3W,IACVyxJ,WAAW,KCpBZ,MAAMvvJ,GAA8B,CACzCZ,SAAUo5B,OAAOq1H,UACjBluG,WAAY+tG,EAAcI,WAAWryI,WACrCmkC,SAAUpnB,OAAOk1H,EAAcK,UAC/BC,UAAWN,EAAcO,UAAUxyI,WACnCyyI,YAAaR,EAAcS,YAAY1yI,WACvC2yI,sBAAsB,GAIjB,MAAM/tG,WAAa4sG,EASxBroH,YACWxsB,EACA80I,EACAC,GAGR,IADD7sJ,EAA6B,uDAAG,GAEhCukC,QAAQ,KANCzsB,OAAU,KACV80I,KAAU,KACVC,KAAU,KAXZE,aAAO,OACPD,YAAM,OAENkB,gBAAU,OACVC,aAAO,OAEPjuJ,QAAuBN,GAAe,KAmC/CuzB,aAAe,IAAsD,IAAD,QAApD,cAAEm9E,GAA6C,EAC7D,MAAM9lD,EAAoC,QAA3B,EAAG8lD,EAAcmjD,kBAAU,aAAxB,EAA0BjpG,YAC5CA,IAAcA,EAAUxsD,MAAMo5D,OAAS,WACvC/iD,KAAK3W,IAAIf,QAAQ4xJ,YACjBl6I,KAAK3W,IAAIf,QAAQpJ,OACO,QAAxB,EAAA+8G,EAAcn+B,kBAAU,OAAxB,EAA0Bq8E,QAC1B,KAEFp7H,aAAe,IAAsD,IAAD,QAApD,cAAEk9E,GAA6C,EAC7D,MAAM9lD,EAAoC,QAA3B,EAAG8lD,EAAcmjD,kBAAU,aAAxB,EAA0BjpG,YAC5CA,IAAcA,EAAUxsD,MAAMo5D,OAAS,WACvC/iD,KAAK3W,IAAIf,QAAQ+xC,OACO,QAAxB,EAAA4hE,EAAcn+B,kBAAU,OAAxB,EAA0Bq8E,QArC1Bn6I,KAAKnU,QAAU,IAAKmU,KAAKnU,WAAYA,GAErC,MAAM,SAAEs/C,EAAQ,UAAEouG,EAAS,WAAEruG,EAAU,SAAEvgD,EAAQ,qBAAEgvJ,GAAyB35I,KAAKnU,QAEjFmU,KAAK85I,QAAU95I,KAAK65I,WAAaF,GAC7BjvH,KAAK7iB,UAAUlE,IACfoO,OAAOpO,GACX3D,KAAK44I,QAAUztG,EAEf,MAAMkvG,EAAW9iB,GAAc+iB,GAAa/iB,EAAI,GAAEgiB,KAAapuG,OAAcD,KAC7E,GAAImvG,EAAQr6I,KAAK65I,YAAclvJ,EAAU,CACvC,IAAI4vJ,EAAgBtB,EAAcuB,SAASxzI,WACvCjkB,EAAI,EACR,KACEs3J,EAAQr6I,KAAK65I,WAAWnuG,UAAU,EAAG3oD,GAAKk2J,EAAcuB,SAASxzI,YAAcrc,GAE/E4vJ,EAAgBv6I,KAAK65I,WAAWnuG,UAAU,EAAG3oD,KAAOk2J,EAAcuB,SAASxzI,WAE7EhH,KAAK24I,OAAS0B,EAAQE,GACtBv6I,KAAK65I,WAAaU,OAElBv6I,KAAK24I,OAASl6H,KAAKpgB,IAAI46I,EAAcwB,aAAcJ,EAAQr6I,KAAK65I,aAmBpEM,OACE,MAAMx6J,EAAQ,CACZurD,WAAYlrC,KAAKnU,QAAQq/C,WACzBC,SAAUnrC,KAAKnU,QAAQs/C,SACvBouG,UAAWv5I,KAAKnU,QAAQ0tJ,UACxBptJ,KAAM8sJ,EAAc2B,SAAS5zI,YAE/B,OACE,eAAC,IAAMm5I,SAAQ,WACb,cAAC,IAAU,CACTv9J,EAAGod,KAAKpd,IACRwlD,EAAGpoC,KAAKooC,IACRtpB,aAAc9e,KAAK8e,aACnBC,aAAc/e,KAAK+e,aAAa,SAEhC,wBAAC,IAAS,IAAKm6H,EAAmBj6J,IAAK47J,GAAO57J,MAAOwP,KAAMuR,KAAK65I,cAAgBl6J,MAElF,eAAC,IAAU,CACTiD,EAAGod,KAAKpd,IACRwlD,EAAGpoC,KAAKooC,IACR/+C,IAAK2W,KAAK3W,IACVoxF,SAAS,EACT37D,aAAc9e,KAAK8e,aACnBC,aAAc/e,KAAK+e,aAAa,UAEhC,cAAC,IAAQ,IAAKm6H,EAAmB/sJ,KAAM,QAASw1B,QAAS,KACzD,wBAAC,IAAS,IAAKu3H,EAAmBj6J,IAAK47J,GAAO57J,MAAOwP,KAAMuR,KAAK85I,WAAan6J,SAlB5Dk7J,GAAO57J,QClF3B,MAAMojK,WAAuBpE,GAIlC9tH,YAEWxsB,EAEAu6I,GAET9tH,QAEA,KANSzsB,OAAoB,KAEpBu6I,eAAoC,KANtCzvJ,UAAI,EAWX,MAAM6wJ,EAAgBt/I,KAAKk+I,aAAa,GACxC,GAAIoB,aAAyBC,GAC3Bv/I,KAAKy4I,GACH6G,EAAc18J,IAAM03J,GAAagF,EAAcgD,WAAarJ,EAAcmH,aAC5EpgJ,KAAK04I,GAAK4G,EAAcl3G,IACxBpoC,KAAKvR,KAAO,IAAIm9C,GAAK5rC,KAAK2D,KAAM3D,KAAKpd,IAAKod,KAAKooC,IAAK,CAAEuxG,sBAAsB,QACvE,CACL,MAAMhvJ,EAAW20J,EAAct2J,QACzBu5J,EAAY9jI,KAAKrgB,IAAIk8I,GAAavoI,OAAO/R,KAAK2D,OAAQhZ,GAC5DqV,KAAKy4I,GAAK6G,EAAc18J,KAAO08J,EAAct2J,QAAUu5J,GAAa,EACpEviJ,KAAK04I,GAAK4G,EAAcl3G,KAAOk3G,EAAcr2J,SAAWgwJ,EAAcK,UAAY,EAClFt5I,KAAKvR,KAAO+zJ,EAAOxiJ,KAAK2D,MACpB,IAAIu+I,GAAc,CAAC5C,IACnB,IAAI1zG,GAAK5rC,KAAK2D,KAAM3D,KAAKpd,IAAKod,KAAKooC,IAAK,CACtCz9C,SAAUA,EACVgvJ,sBAAsB,IAI9B35I,KAAK24I,OAAS34I,KAAKvR,KAAKzF,QACxBgX,KAAK44I,QAAU54I,KAAKvR,KAAKxF,SAE3B8wJ,kBACAI,OACE,OAAO,cAAC,IAAMgG,SAAQ,UAAqBngJ,KAAKvR,KAAK0rJ,QAAzBU,GAAO57J,QC/BhC,MAAMwjK,WAAkBjK,EAY7BroH,YAEW5S,EAEA5Z,EAETmwF,GAEA1jE,QAAQ,KANC7S,MAAW,KAEX5Z,OAAU,KAfZ9O,WAAK,OAGL6tJ,iBAAW,OAEXjD,gBAAU,OAEVkD,qBAAe,OACxB7uD,YAAM,OACNzmD,WAA2BlnD,EAAU,KAsBrC4zJ,eAAiB,OAAS,KAE1Bj7H,aAAe,IAAsD,IAArD,cAAEm9E,GAA6C,EAC7Dw/C,GAAgBx/C,IAChB,KAEFl9E,aAAe,IAAsD,IAArD,cAAEk9E,GAA6C,EAC7D4/C,GAAkB5/C,IAlBlBj8F,KAAK8zF,OAASA,EACd9zF,KAAKy4I,GAAKz4I,KAAK8zF,OAAOlxG,IAAMod,KAAKud,IAAM07H,EAAcyG,cACrD1/I,KAAK04I,GAAK14I,KAAK8zF,OAAO1rD,IACtBpoC,KAAK44I,QAAUK,EAAc0G,eAC7B3/I,KAAK24I,OAASM,EAAcyG,cAC5B1/I,KAAK0iJ,YAA2B,IAAb1iJ,KAAKud,IACxBvd,KAAKy/I,WAAaz/I,KAAKud,MAAQvd,KAAK8zF,OAAOnwF,KAAKhf,OAAS,EACzDqb,KAAKnL,MAAQgmJ,GAAO6R,mBAAmB1sJ,KAAK2D,KAAM3D,MAClDA,KAAK2iJ,gBAAkB3iJ,KAAKnL,MAAMqpJ,aAAav5J,OAAS,EAa1Dw1J,OACE,GAAIn6I,KAAK+4I,UAAW,OAAO,KAC3B/4I,KAAK64I,UAAW,EAEhB,MAAMwI,EAAe,CACnBG,UAAW,EACXC,UAAW,EACXC,WAAY,EACZC,WAAY,GAQd,OALI3hJ,KAAK0iJ,cACPrB,EAAaG,UAAYH,EAAaI,UAAY19H,OAAOk1H,EAAc6J,mBACrE9iJ,KAAKy/I,aACP4B,EAAaK,WAAaL,EAAaM,WAAa59H,OAAOk1H,EAAc6J,mBAGzE,eAAC,IAAM3C,SAAQ,WACb,cAACiB,EAAW,CAEVx+J,EAAGod,KAAKpd,IACRwlD,EAAGpoC,KAAKooC,IACRp/C,MAAOgX,KAAKhX,QACZC,OAAQ+W,KAAK/W,SACb6zJ,OACE/8J,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,WAE7B+1I,eAAgBh5H,OAAOk1H,EAAcmJ,oBACrCY,aAAa,EACblkI,aAAc9e,KAAK8e,aACnBC,aAAc/e,KAAK+e,aACnBsiI,aAAcA,EACdC,WAAYthJ,KAAK3W,KAfZwxJ,GAAO57J,OAiBb+gB,KAAKnL,MAAMslJ,OACXn6I,KAAKnL,iBAAiBwtJ,IAAkB,IAAI5B,GAAmBzgJ,MAAMwR,GAAGxR,KAAKnL,OAAOslJ,SApBlEU,GAAO57J,QChE3B,MAAM0hK,WAAmB1C,GAI9B9tH,YAEWxsB,EAEAu6I,GAET9tH,QAAQ,KAJCzsB,OAAY,KAEZu6I,eAAoC,KAN/CiD,MAAqB,GASnBtG,GAAO2R,oBAAoBxsJ,MAG3B,MAAMs/I,EAAgBt/I,KAAKk+I,aAAa,GACpCoB,aAAyBC,IAC3Bv/I,KAAKy4I,GAAK6G,EAAcr9J,MAAMW,IAAM08J,EAAcr9J,MAAM+G,QAAUiwJ,EAAcuG,aAChFx/I,KAAK04I,GAAK4G,EAAcl3G,KAEpBk3G,EAAcG,YAChBz/I,KAAKy4I,GAAK6G,EAAc18J,IAAoC,EAA9Bq2J,EAAcyG,cAC5C1/I,KAAK04I,GAAK4G,EAAcl3G,MAExBpoC,KAAKy4I,GAAK6G,EAAc18J,IACxBod,KAAK04I,GAAK4G,EAAcl3G,IAAMk3G,EAAcxrD,OAAO7qG,SAAWgwJ,EAAc0G,gBAIhF3/I,KAAK24I,OAAS34I,KAAK2D,KAAKhf,OAASs0J,EAAcyG,cAAgBzG,EAAcoK,aAC7ErjJ,KAAK44I,QAAUK,EAAc0G,eAG7B,IAAK,IAAI58J,EAAIid,KAAK2D,KAAKhf,OAAS,EAAG5B,GAAK,EAAGA,IAAK,CAC9C,MAAMugK,EAAO,IAAIb,GAAU1/J,EAAGid,KAAK2D,KAAK5gB,GAAIid,MAM5CA,KAAK24I,OAASl6H,KAAKpgB,IACjB2B,KAAKhX,QACLs6J,EAAKzuJ,MAAM7L,SACNs6J,EAAKzuJ,iBAAiBwtJ,IAAmBt/J,IAAMid,KAAK2D,KAAKhf,OAAS,EAEjE5B,EAAIk2J,EAAcyG,eADjB38J,EAAI,GAAKk2J,EAAcyG,cAAgBzG,EAAcyG,gBAK9D1/I,KAAK44I,QAAUn6H,KAAKpgB,IAClB2B,KAAK44I,QACL0K,EAAKzuJ,iBAAiBwtJ,IAAkBiB,EAAKX,gBACzC1J,EAAc0G,eACd2D,EAAKzuJ,MAAMuzC,IAAMk7G,EAAKzuJ,MAAM5L,SAAWq6J,EAAKl7G,KAGlDpoC,KAAKmhJ,MAAQ,CAACmC,KAAStjJ,KAAKmhJ,QAGhCnI,QACE5oH,MAAM4oH,QACNh5I,KAAKmhJ,MAAMx+J,KAAIC,GAAKA,EAAEo2J,UACtBh5I,KAAKk+I,aAAav5J,OAAS,EAE7Bo1J,kBAEAI,OACE,OAAIn6I,KAAK+4I,UAAkB,MAC3B/4I,KAAK64I,UAAW,EAEd,cAAC,IAAMsH,SAAQ,UACZngJ,KAAKmhJ,MAAMx8J,OAAS,EACjBqb,KAAKmhJ,MAAMx+J,KAAI2gK,GAAQA,EAAKnJ,SAC5B,IAAIyD,GAAe59I,MAAMm6I,QAHVU,GAAO57J,SC1E3B,MAAMykK,WAAsB3I,GACvBO,iBACR,MAAM9sF,EAAOxuD,KAAKg7I,OACZxpI,EAAKxR,KAAKve,OAChB,IAAK+vB,EAAI,MAAO,GAEhB,MAAMif,EAAoB,CAAC,CAAC7tC,EAAGwlD,IAAM,CAACxlD,EAAI4rE,EAAKxlE,QAASo/C,EAAIomB,EAAKvlE,SAAW,IAsB5E,OApBIuoB,EAAG5uB,IAAM4rE,EAAK5rE,IACZ4uB,aAAcmvI,IAChBlwH,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAIq2J,EAAcwQ,WAAYrhH,KACpD3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAG4uB,EAAG42B,IAAM6wG,EAAc0G,eAAiB,KACjElvH,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC52B,EAAG5uB,IAAMq2J,EAAcyG,cAAgB,EAAGt3G,KAChE3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAG4uB,EAAG42B,SAE5B3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAIq2J,EAAcwQ,WAAYrhH,KACpD3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAGwlD,EAAIomB,EAAKvlE,SAAW,EAAIgwJ,EAAcwQ,cAC/Dh5H,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAAC52B,EAAG5uB,IAAM4uB,EAAGxoB,QAAUiwJ,EAAckE,cAAe/0G,KACzE3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAG4uB,EAAG42B,OAC5B3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CAACxlD,EAAIq2J,EAAckE,cAAe/0G,MAGzD3X,EAAMvqB,MAAK,CAACtjB,EAAGwlD,IAAM,CACnB52B,EAAG5uB,IACH4uB,EAAG42B,KAAO52B,aAAcmvI,GAAa1H,EAAc0G,eAAiB,EAAI,MAIrElvH,GCzBJ,MAAMi5H,WAAwBzL,GAInC9tH,YAAqB+tH,GACnB9tH,QAEA,KAHmB8tH,eAAoC,KAHhDv6I,KAAuBgmJ,SAAS,KAChCl7J,UAAI,EAMX,MAAM6wJ,EAAgBt/I,KAAKk+I,aAAa,GACxC,GAAIoB,aAAyBC,GAC3Bv/I,KAAKy4I,GACH6G,EAAc18J,IAAM03J,GAAagF,EAAcgD,WAAarJ,EAAcmH,aAC5EpgJ,KAAK04I,GAAK4G,EAAcl3G,IACxBpoC,KAAKvR,KAAO,IAAIm9C,GAAKqtG,EAAcuL,eAAex9I,WAAYhH,KAAKy4I,GAAIz4I,KAAK04I,GAAI,CAC9EiB,sBAAsB,QAEnB,CACL,MAAMhvJ,EAAW20J,EAAct2J,QACzBu5J,EAAY9jI,KAAKrgB,IAAIk8I,GAAavoI,OAAO/R,KAAK2D,OAAQhZ,GAC5DqV,KAAKy4I,GAAK6G,EAAc18J,KAAO08J,EAAct2J,QAAUu5J,GAAa,EACpEviJ,KAAK04I,GAAK4G,EAAcl3G,KAAOk3G,EAAcr2J,SAAWgwJ,EAAcK,UAAY,EAClFt5I,KAAKvR,KAAO,IAAIm9C,GAAKqtG,EAAcuL,eAAex9I,WAAYhH,KAAKy4I,GAAIz4I,KAAK04I,GAAI,CAC9E/tJ,SAAUA,EACVgvJ,sBAAsB,IAI1B35I,KAAK24I,OAAS34I,KAAKvR,KAAKzF,QACxBgX,KAAK44I,QAAU54I,KAAKvR,KAAKxF,SAG3B+vJ,QACE5oH,MAAM4oH,QACNh5I,KAAKk+I,aAAav5J,OAAS,EAE7Bo1J,kBAEAI,OAEE,OADAn6I,KAAK64I,UAAW,EACT,cAAC,IAAMsH,SAAQ,UAAqBngJ,KAAKvR,KAAK0rJ,QAAzBU,GAAO57J,QC/BhC,MAAMsgK,WAAgB/G,EAe3BroH,YAEWmyH,EAEA3+I,EAEA1hB,EAEAyiK,GAER,IADQkF,EAAmB,wDAE5Bx5H,QAAQ,KATCkyH,YAAiB,KAEjB3+I,OAAU,KAEV1hB,QAAY,KAEZyiK,cAA2B,KAC3BkF,aAAmB,KAtBrB/0J,WAAK,OAEL5V,SAAG,OAKHomK,gBAA0B,EAAM,KACjCh4G,WAA+ClnD,EAAU,KAC1Dw/J,SAAW,IACT3lJ,KAAKqtC,MAeZrtC,KAAKqlJ,eAAiBN,EAAW/kJ,KAAKsiJ,WAGlCtiJ,KAAK0kJ,aACP1kJ,KAAKy4I,GAAKz4I,KAAK0kJ,YAAY9hK,IAC3Bod,KAAK04I,GAAK14I,KAAK0kJ,YAAYt8G,IAAMpoC,KAAK0kJ,YAAYz7J,SAAWgwJ,EAAcoH,eAE3ErgJ,KAAKy4I,GAAKz4I,KAAK/d,MAAMW,IAAMq2J,EAAcqE,cACzCt9I,KAAK04I,GAAK14I,KAAK/d,MAAMmmD,IAAM6wG,EAAcqM,eAG3CtlJ,KAAKsiJ,WAAasH,EAAa3Q,EAAcqL,cAAgBrL,EAAc6Q,cAC3E9pJ,KAAKnL,MAAQgmJ,GAAO6R,mBAAmB/oJ,EAAM3D,MAE7C,MAAM6pJ,EACJ7pJ,KAAKnL,iBAAiB8rJ,IACjB1H,EAAc0G,eAAiB1G,EAAcK,UAAY,GACzDt5I,KAAKnL,MAAM5L,SAAWgwJ,EAAcK,UAAY,EAEvDt5I,KAAK/gB,IAAM,IAAI2sD,GAAK5rC,KAAKsiJ,UAAWtiJ,KAAKpd,IAAKod,KAAKooC,IAAMyhH,GAGzD7pJ,KAAK24I,OAASiS,EAAuB5qJ,KAAKnL,MAAOmL,MAC7CA,KAAKnL,MAAMjS,IACXod,KAAKnL,MAAM7L,QACXgX,KAAKpd,KACJod,KAAKnL,iBAAiBwpJ,IAAWr+I,KAAKnL,iBAAiB0rJ,GACpDvgJ,KAAKnL,MAAM0pJ,aACX,GACJv+I,KAAK/gB,IAAI+J,QAEbgX,KAAK44I,QAAUn6H,KAAKpgB,IAAI2B,KAAK/gB,IAAIgK,SAAU+W,KAAKnL,MAAM5L,UAElD+W,KAAKqlJ,iBAAmBuF,EAAuB5qJ,KAAKnL,MAAOmL,OACzDA,KAAK0kJ,cACP1kJ,KAAK04I,GAAK14I,KAAK0kJ,YAAYt8G,IAC3BpoC,KAAK24I,OAAS34I,KAAK0kJ,YAAY17J,QAC/BgX,KAAK44I,QAAU54I,KAAK0kJ,YAAYz7J,UAKtCkxJ,OACE,OACE,eAAC,IAAMgG,SAAQ,WACZngJ,KAAKqlJ,eACF,KACArlJ,KAAK/gB,IAAIk7J,OACZn6I,KAAKqlJ,gBACNrlJ,KAAKnL,iBAAiBwtJ,IACtBriJ,KAAKnL,iBAAiB60J,GAClB,KACA,IAAIhG,GAAc1jJ,KAAK/gB,KAAKuyB,GAAGxR,KAAKnL,OAAOslJ,OAC9CyQ,EAAuB5qJ,KAAKnL,MAAOmL,MAAQA,KAAKnL,MAAMslJ,OAAS,OAT7CU,GAAO57J,QCnElC,MAAM2kK,GAAa,IAAIh7F,IAAI,CACzB,CAAC,SAAU,UACX,CAAC,qBAAsB,WACvB,CAAC,qBAAsB,oBACvB,CAAC,sBAAuB,gCACxB,CAAC,mBAAoB,SACrB,CAAC,0BAA2B,mBAIvB,MAAMgzF,WAAcpD,EAiBzBroH,YAEW+vH,EAEAyM,GACR,IAAD,EACAv8H,QAAQ,KAJC8vH,cAAwB,KAExByM,mBAA8B,KAnBhC5I,iBAAW,OAEXC,gBAAU,OAGV3tE,SAAsB,GAAG,KAEzBzxE,UAAI,OAEJ4Z,WAAK,OAELmmH,iBAAW,OAEXuf,iBAAW,OAmFpBplI,aAAe,IAAsD,IAArD,cAAEm9E,GAA6C,EAC7Dw/C,GAAgBx/C,IAChB,KAEFl9E,aAAe,IAAsD,IAArD,cAAEk9E,GAA6C,EAC7D4/C,GAAkB5/C,IA/ElBj8F,KAAK24I,OAASM,EAAc2M,cAC5B5lJ,KAAKwe,MAAQ0hI,EAAY0M,aACzB5sJ,KAAK2kI,YAAcub,EAAYvb,YAC/B3kI,KAAKkkJ,YAAgC,QAArB,EAAGhE,EAAYpsD,cAAM,aAAlB,EAAoB24D,aACvCzsJ,KAAKy4I,GAAKz4I,KAAKwe,MAAM57B,IAErBod,KAAK2sJ,mBACF3sJ,KAAKy4I,IACJz4I,KAAK2sJ,iBAAiB/pK,IAAMod,KAAK2sJ,iBAAiB3I,WAAa/K,EAAcuG,cAEjFx/I,KAAK4E,KAAO,IAAIgnC,GACdg4G,GAAWpiK,IAAIwe,KAAK2kI,YAAY//H,OAAS5E,KAAK2kI,YAAY//H,KAC1D5E,KAAKpd,IACLod,KAAKwe,MAAM4pB,IACX,CAAEz9C,SAAUqV,KAAKhX,UAEnBgX,KAAK04I,GAAK14I,KAAKwe,MAAM4pB,IAAMpoC,KAAK4E,KAAK3b,SAAWgwJ,EAAcoH,aAAe,EAG7E,IAAI+D,EAAkB,EACtB,IAAK,MAAOnlK,EAAK0kB,KAASqoB,OAAO2S,QAAQ3+B,KAAK2kI,YAAYvjJ,MAAO,CAC/D,MAAMijK,EACJ5lI,KAAKpgB,IAAI46I,EAAcwB,aAAcH,GAAar7J,EAAMg6J,EAAcqL,gBACtErL,EAAcmH,cACbmE,EAAa5gJ,GACV8a,KAAKpgB,IACH46I,EAAcwB,aACdH,GAAarB,EAAcuL,eAAex9I,aAE5Cy9I,EAAgB9gJ,GAChB8a,KAAKpgB,IAAI46I,EAAcwB,aAAcH,GAAavoI,OAAOpO,KACzD,GACNygJ,EAAkB3lI,KAAKpgB,IAAI+lJ,EAAiBC,GAE9CrkJ,KAAK24I,OAASyL,EAAgD,EAA9BnL,EAAcqE,cAG9C,IAAIoH,EAA8B,KAC9BV,EAAahkJ,KAAK24I,OAEtB,MAAMiM,EAAc54H,OAAO64H,0BAA0B7kJ,KAAK2kI,YAAYvjJ,MAChEu9C,EAAU,GACVmmH,EAAe,GACrB,IAAK,MAAMh6B,KAAS9+F,OAAO2S,QAAQimH,GACjC,GAAIG,EAAWj6B,EAAM,IAAK,CACxB,MAAMk6B,EAAYlF,GAAeh1B,EAAM,GAAGj2H,MAAM8vI,cAE9C3kI,KAAK2kI,YAAY5+I,KAAOkzJ,EAAcgM,aACrCD,GAAaA,EAAUj/J,KAAOia,KAAK2kI,YAAY5+I,KAEhD++J,EAAa5+I,KAAK4kH,QAGpBnsF,EAAQz4B,KAAK4kH,GAGjBnsF,EAAQz4B,QAAQ4+I,GAEhB,IAAK,MAAO7lK,EAAK0kB,KAASg7B,EAAS,CACjC,MAAMumH,EAAuB,IAAI3F,GAAQtgK,EAAK0kB,EAAK9O,MAAOmL,KAAM0kJ,GAAc/gJ,EAAKwhJ,UACnFnlJ,KAAKq2E,SAASnwE,KAAKg/I,GACnBR,EAAcQ,EACdlB,EAAavlI,KAAKpgB,IAAI2lJ,EAAYkB,EAAYl8J,QAAUiwJ,EAAcqE,eAExEt9I,KAAKgkJ,WAAaA,EAGlBhkJ,KAAK44I,QAAU8L,EACXA,EAAYt8G,IAAMs8G,EAAYz7J,SAAWgwJ,EAAcqM,cAAgBtlJ,KAAKooC,IAC9C,EAA9B6wG,EAAcqM,cAElBtlJ,KAAK+jJ,YAAc/jJ,KAAK/W,SAAW+W,KAAK4E,KAAK3b,SAAWgwJ,EAAcoH,aAAe,EAWvFlG,OACE,OACE,eAAC,IAAK,WACHn6I,KAAK4E,KAAKu1I,OACX,wBAAC,IAAI,IACCjB,EACJt2J,EAAGod,KAAKpd,IACRwlD,EAAGpoC,KAAKooC,IACRp/C,MAAOgX,KAAKhX,QACZC,OAAQ+W,KAAK/W,SACb6zJ,OACE/8J,GAAci6J,mBACVf,EAAc0B,QAAQ3zI,WACtBiyI,EAAc2B,SAAS5zI,WAE7Bq6I,aAAct9H,OAAOk1H,EAAc+M,mBACnClnI,aAAc9e,KAAK8e,aACnBC,aAAc/e,KAAK+e,aACnB9/B,IAAK47J,GAAO57J,QAEb+gB,KAAKq2E,SAAS1zF,KAAI6zF,GAAWA,EAAQ2jE,SACrCn6I,KAAKkkJ,aAAe,IAAI7G,GAAer9I,MAAMwR,GAAGxR,KAAKkkJ,aAAa/J,SAnBzDU,GAAO57J,QCnIlB,MAAMknK,WAAc3N,EAIzBroH,YAEWi2H,EAEAyB,GAETz3H,QAAQ,KAJCg2H,cAAyB,KAEzByB,eAA2B,KAN7Bn+F,OAAkB,GASzB1pD,KAAKy4I,GAAKQ,EAAc6M,eACxB9lJ,KAAK04I,GAAKO,EAAciN,eACxBlmJ,KAAKomJ,cAAgBpmJ,KAAK04I,IAAM14I,KAAKomJ,YAAYn9J,SAAW+W,KAAKomJ,YAAYh+G,KAC7E,IAAIykH,EAA0B,KAC9BhF,EAAajiI,SAAQqQ,IACnBA,EAAE22H,aAAe5sJ,KACjB,MAAM8sJ,EAAW,IAAIlR,GAAM3lH,EAAG42H,GAC9B52H,EAAEw2H,aAAeK,EACjB9sJ,KAAK0pD,OAAOxjD,KAAK4mJ,GACjBD,EAAYC,KAId9sJ,KAAK44I,QAAU54I,KAAK0pD,OAAOnqD,QACzB,CAACwtJ,EAAW9qK,IAAUw8B,KAAKpgB,IAAI0uJ,EAAW9qK,EAAM8hK,cAChD,GAEF,MAAMiJ,EAAYhtJ,KAAK0pD,OAAO1pD,KAAK0pD,OAAO/kE,OAAS,GAEnDqb,KAAK24I,OAASqU,EAAUpqK,IAAMoqK,EAAUhJ,WAAahkJ,KAAKpd,IAAMq2J,EAAcgU,cAGhF93G,UACEn1C,KAAK3W,IAAIf,QAAQ4/J,kBAGnB/N,OACE,OACE,eAAC,IAAK,CAAoB9wJ,IAAK2W,KAAK3W,IAAI,UACtC,wBAAC,IAAI,IACC6vJ,EACJt2J,EAAGod,KAAKpd,IACRwlD,EAAGpoC,KAAKooC,IACRp/C,MAAOgX,KAAKhX,QACZC,OAAQ+W,KAAK/W,SACbhK,IAAK47J,GAAO57J,MACZ67J,WAAW,IAEZ96I,KAAK0pD,OAAO/mE,KAAIV,GAASA,EAAMk4J,WAVtBU,GAAO57J,QCRlB,MAAM47J,GA2CXh/F,wBAAwB7yD,EAAeC,GAErC4xJ,GAAOqS,aAAelkK,EACtB6xJ,GAAOsS,cAAgBlkK,EAEO,OAA5B4xJ,GAAOuS,SAAS9kK,UACfm2B,KAAKrgB,IAAIy8I,GAAO7xJ,QAAS5I,OAAO4yC,YAAc6nH,GAAOwS,YACpD5uI,KAAKrgB,IAAIy8I,GAAO5xJ,SAAU7I,OAAO+yC,aAAe0nH,GAAOyS,eAEzDzS,GAAO0S,kBAAepnK,EACtB00J,GAAO2S,iBAAcrnK,EACrB00J,GAAO4S,yBAAsBtnK,EAC7B00J,GAAO6S,wBAAqBvnK,EAC5B00J,GAAOwS,WAAa5uI,KAAKrgB,IAAIy8I,GAAO7xJ,QAAS5I,OAAO4yC,YACpD6nH,GAAOyS,YAAc7uI,KAAKrgB,IAAIy8I,GAAO5xJ,SAAU7I,OAAO+yC,aACtD0nH,GAAOuS,SAAS9kK,QAAQU,MAAM6xJ,GAAOwS,YACrCxS,GAAOuS,SAAS9kK,QAAQW,OAAO4xJ,GAAOyS,aACtCvtK,GAAcszC,UAEZwnH,GAAOyS,YAAczS,GAAOsS,cAEhCtS,GAAO8S,yBACL9S,GAAOyS,YAAczS,GAAOsS,eACvBtS,GAAOyS,YAAczS,GAAOsS,eAAiB,EAC9C,EACNtS,GAAO+S,2BACL/S,GAAOwS,WAAaxS,GAAOqS,cAAgBrS,GAAOwS,WAAaxS,GAAOqS,cAAgB,EAAI,EAE5F,MAAM/2G,EAAgCn2C,KAAK6tJ,mBAAmBvlK,QAC1D6tD,IACFA,EAAUxsD,MAAMX,MAAS,GAAE6xJ,GAAOqS,iBAClC/2G,EAAUxsD,MAAMV,OAAU,GAAE4xJ,GAAOsS,mBAKvCtxG,kBAAkBiyG,GA2BhB,GA1BAjT,GAAO0S,kBAAepnK,EACtB00J,GAAO2S,iBAAcrnK,EACrB00J,GAAO4S,yBAAsBtnK,EAC7B00J,GAAO6S,wBAAqBvnK,EAE5B00J,GAAO5uH,OAAOrG,SAAQ,CAACw/H,EAAGqD,KACxBrD,EAAEpM,WAEJ6B,GAAO5uH,OAAO6hC,QACd+sF,GAAOkT,cAAcnoI,SAAQ,CAACw/H,EAAGqD,KAC/BrD,EAAEpM,WAEJ6B,GAAOkT,cAAcjgG,QACrB+sF,GAAO57J,IAAM,EAEb47J,GAAO+E,gBAAkBoM,GAAa8B,GACtCjT,GAAO2F,cAAgB3F,GAAO+E,gBAAgBkM,KAG9CjR,GAAOmT,mBAEPnT,GAAOoT,8BAEPpT,GAAOqT,iBAGHnuK,GAAcouK,mBAAoB,CACpC,MAAMC,EAAYvT,GAAOwT,cAAcxT,GAAOwT,cAAc1pK,OAAS,GACrEk2J,GAAOyT,cAAgB7vI,KAAKpgB,IAC1B86I,EAAOoV,gBACPH,EAAUhmH,IAAMgmH,EAAUnlK,SAAWkwJ,EAAO+M,gBAG9CrL,GAAO2T,aAAe/vI,KAAKpgB,IACzB86I,EAAOsV,eACP5T,GAAOwT,cAAc9uJ,QACnB,CAAC5U,EAAU6zB,IAAUC,KAAKpgB,IAAI1T,EAAU6zB,EAAMx1B,UAC9C,GAEwB,EAAxBmwJ,EAAO2M,qBAGXjL,GAAO6T,iBAAmBjwI,KAAKpgB,IAC7B86I,EAAOoV,gBACPvuJ,KAAK+6B,KAAK9xC,SAAWkwJ,EAAO+M,gBAE9BrL,GAAO8T,gBAAkBlwI,KAAKpgB,IAC5B86I,EAAOsV,eACPzuJ,KAAK+6B,KAAK/xC,QAAkC,EAAxBmwJ,EAAO2M,gBAMjC,0BACE,IAAKjL,GAAO2F,cAAcjiC,SAAU,OAEpC,MAAMqwC,EAAiB/T,GAAO2F,cAAcjiC,SAAS,GAC/CiiC,EAAgB3F,GAAO2F,cAG7BA,EAAc7b,YAAYvjJ,KAAO,IAC5BwtK,EAAejqB,YAAYvjJ,QAC3Bo/J,EAAc7b,YAAYvjJ,MAI3BwtK,EAAerwC,UACjBiiC,EAAcqO,cAAcD,EAAerwC,UAK7C,IAAK,MAAM1pH,KAASm3B,OAAOC,OAAOu0H,EAAc7b,YAAYvjJ,MACtDkpK,EAAKz1J,WACCA,EAAoCkrJ,aAMlD,qCACE,MAAM+O,EAAsB,IAAIzvJ,IAC1B0vJ,EAAc,IAAI1vJ,IAClB2vJ,EAA0BC,IAC9B,IAAK,MAAMtrJ,KAAQqoB,OAAOC,OAAOgjI,EAAQtqB,YAAYvjJ,MAC/CmpK,EAAW5mJ,GACbmrJ,EAAoBj2J,IAAI8K,GACf06G,EAAQ16G,IACjBurJ,EAA6BvrJ,GAG7BsrJ,EAAQ1wC,UACV0wC,EAAQ1wC,SAAS34F,QAAQopI,IAIvBE,EAAgCvrJ,IACpCA,EAAKiiB,SAAQ6iI,IACP8B,EAAW9B,GACbqG,EAAoBj2J,IAAI4vJ,GACfpqC,EAAQoqC,KAAOsG,EAAYnpF,IAAI6iF,KACxCsG,EAAYl2J,IAAI4vJ,GAChByG,EAA6BzG,QAK/B5N,GAAO2F,cAAcjiC,UACvBs8B,GAAO2F,cAAcjiC,SAAS34F,QAAQopI,GAGxC,MAAMlC,EAAkB,GACxB,IAAK,MAAO7tK,EAAK0kB,KAASqoB,OAAO2S,QAAQk8G,GAAO2F,cAAc7b,YAAYvjJ,OACpE0tK,EAAoBlpF,IAAIjiE,IAASohJ,EAAW9lK,MAC9C6tK,EAAS7tK,GAAO0kB,GAIpBk3I,GAAO2F,cAAc7b,YAAYvjJ,KAAO,CACtC,CAAC+3J,EAAOgW,wBAAyBxF,YAC9BmD,GAIP,eACE,OAAO/sK,GAAcouK,mBAAqBtT,GAAO2T,aAAe3T,GAAO8T,gBAGzE,gBACE,OAAO5uK,GAAcouK,mBAAqBtT,GAAOyT,cAAgBzT,GAAO6T,iBAI1E,wBACE,GAAI3uK,GAAcouK,mBAAoB,CACpCnuJ,KAAKquJ,cAAgB,GACrB,IAEIe,EAFAC,EAA0B,CAACxU,GAAO2F,eAClC8O,EAAiC,KAGrC,KAAOD,EAAS1qK,OAAS,GAAG,CAC1ByqK,EAAY,IAAIG,GAAaD,EAAWD,GACxCrvJ,KAAKquJ,cAAcnoJ,KAAKkpJ,GACxB,MAAMI,EAA8B,GAEpCH,EAASzpI,SAAQqQ,IACfA,EAAEsoF,SAAS34F,SAAQm1G,IACjB,MAAMmxB,EAAe3D,GAAgBxtB,GACrCmxB,EAAatmI,SAAQm1G,GAAMA,EAAEjnC,OAAS79D,IACtCu5H,EAAatpJ,QAAQgmJ,SAIzBoD,EAAYF,EACZC,EAAWG,OAER,CACL,MAAMC,EAA6B,GACnC,IAAIJ,EAAW,CAACxU,GAAO2F,eAEvB,KAAO6O,EAAS1qK,OAAS,GAAG,CAC1B8qK,EAAUvpJ,KAAKmpJ,GAEf,MAAMG,EAA8B,GAEpCH,EAASzpI,SAAQqQ,IACfA,EAAEsoF,SAAS34F,SAAQm1G,IACjB,MAAMmxB,EAAe3D,GAAgBxtB,GACrCmxB,EAAatmI,SAAQm1G,GAAMA,EAAEjnC,OAAS79D,IACtCu5H,EAAatpJ,QAAQgmJ,SAIzBmD,EAAWG,OAEKrpK,IAAd6Z,KAAK+6B,KACP/6B,KAAK+6B,KAAO,IAAI6sH,EAAK6H,GAErBzvJ,KAAK+6B,KAAKs5C,OAAOo7E,IAMvB5zG,oBAAoBhnD,GAClBgmJ,GAAO5uH,OAAO+9B,IAAIn1D,EAAM8O,KAAM9O,GAKhCgnD,mBAAmBl4C,EAAYgnJ,GAC7B,GAAIpG,EAAa5gJ,GACf,OAAO,IAAI+lJ,EAAgB,CAACiB,IACvB,GAAIlG,EAAgB9gJ,GACzB,OAAO,IAAI0+I,EAAe1+I,EAAM,CAACgnJ,IAC5B,CAEL,MAAM+E,EAAgB7U,GAAO5uH,OAAOzqC,IAAImiB,GACxC,GAAI+rJ,EAEF,OADAA,EAAcvR,aAAawM,GACpB+E,EAIT,IAAIxkJ,EAAkB,IAAIm3I,EAAe,KAAM,CAACsI,IAahD,OAZItsC,EAAQ16G,GACVuH,EAAW,IAAIy1I,EAAWh9I,EAAM,CAACgnJ,IACxBP,EAAWzmJ,KAGlBuH,EAFEo/I,EAAK3mJ,GAEI,IAAI06I,EAAQ16I,EAAM,CAACgnJ,IAGnB,IAAIpK,EAAc58I,EAAM,CAACgnJ,KAIjCz/I,GAKX2wC,2BAA2BhnD,GACzBgmJ,GAAOkT,cAAc/jG,IAAIn1D,EAAM8O,KAAM9O,GAKvCgnD,0BAA0Bl4C,EAAYgnJ,GACpC,GAAIpG,EAAa5gJ,GACf,OAAO,IAAIgsJ,GAAuB,CAAChF,IAC9B,GAAIlG,EAAgB9gJ,GACzB,OAAO,IAAIisJ,GAAsBjsJ,EAAM,CAACgnJ,IACnC,CAEL,MAAM+E,EAAgB7U,GAAOkT,cAAcvsK,IAAImiB,GAC/C,GAAI+rJ,EAEF,OADAA,EAAcvR,aAAawM,GACpB+E,EAIT,IAAIxkJ,EAAyB,IAAI0kJ,GAAsB,KAAM,CAACjF,IAa9D,OAZItsC,EAAQ16G,GACVuH,EAAW,IAAI2kJ,GAAkBlsJ,EAAM,CAACgnJ,IAC/BP,EAAWzmJ,KAGlBuH,EAFEo/I,EAAK3mJ,GAEI,IAAImsJ,GAAensJ,EAAM,CAACgnJ,IAG1B,IAAIoF,GAAqBpsJ,EAAM,CAACgnJ,KAIxCz/I,GA+CX,wBACE,MAAQ,SACN2vI,GAAO7xJ,QAAUmwJ,EAAO6W,gBAAkBnV,GAAO5xJ,SAAWkwJ,EAAO8W,gBAC/DxxI,KAAK2rB,KAAKywG,GAAO7xJ,QAAUmwJ,EAAO6W,gBAChCvxI,KAAK2rB,KAAKywG,GAAO5xJ,SAAWkwJ,EAAO8W,iBACrC,UACA,SASR,4BAAoCrtK,EAAWwlD,GAC7C,MAAM8nH,EAAKttK,EAAIi4J,GAAO+S,2BAChBuC,EAAK/nH,EAAIyyG,GAAO8S,yBACtB3tJ,KAAKotJ,SAAS9kK,QAAQ6tD,YAAYxsD,MAAMymK,UAAY,aAAeF,EAAK,OAASC,EAAK,MACtFnwJ,KAAKotJ,SAAS9kK,QAAQ1F,GAAGstK,GACzBlwJ,KAAKotJ,SAAS9kK,QAAQ8/C,GAAG+nH,GAG3Bt0G,cACE,GAAmB,IAAfg/F,GAAO57J,IACT,OAAO47J,GAAOwV,WACT,CACL,MAAMra,EACJ,qBAAKpxJ,UAAW,oBAAoB,SAClC,qBACEmB,GAAG,mBACHsD,IAAKwxJ,GAAOgT,mBACZyC,SAAUr6H,GACR4kH,GAAO0V,qBAAqBt6H,EAAEgmE,cAAcu0D,WAAYv6H,EAAEgmE,cAAcw0D,WAE1E9mK,MAAO,CACLX,MAAO6xJ,GAAOqS,aACdjkK,OAAQ4xJ,GAAOsS,cACfuD,SAAU,OACV3+H,OAAQ,QACR,SAEF,sBACEhsC,GAAG,kBACH4D,MAAO,CACLX,MAAO6xJ,GAAO7xJ,QACdC,OAAQ4xJ,GAAO5xJ,SACfynK,SAAU,SACVzzD,gBAAiBl9G,GAAci6J,mBAC3Bb,EAAOwX,iBAAiB3pJ,WACxBmyI,EAAOwB,QAAQ3zI,YACnB,UAEF,qBAAKrd,MAAO,CAAEzC,MAAO,GAAIvI,SAAU,WAAYiL,QAAS,OAAQgnK,UAAW,SAAU,SACnF,eAAC,IAAW,CAAC9wC,UAAQ,YACnB,cAAC,IAAM,CACL/xG,OAAO,EACP2M,UAAU,EACV/wB,MAAO,CACLszG,gBAAiBl9G,GAAci6J,mBAC3Bb,EAAOwX,iBAAiB3pJ,WACxBmyI,EAAOwB,QAAQ3zI,WACnB2a,QAAS,GACTkvI,YAAa9wK,GAAci6J,mBACvBb,EAAOwB,QAAQ3zI,WACfmyI,EAAOwX,iBAAiB3pJ,YAE9B8pJ,UAAW,KACT/wK,GAAcgxK,sBACdhxK,GAAcszC,UACd,SAEF,cAAC,IAAQ,CACPtZ,SAAUh6B,GAAcouK,mBACxB3qK,MAAM,eACNmG,MAAO,CACL+nC,aAAc,MACdzlC,MAAOlM,GAAci6J,mBACjBb,EAAOwB,QAAQ3zI,WACfmyI,EAAOwX,iBAAiB3pJ,gBAIlC,cAAC,IAAM,CACL+G,OAAO,EACP2M,UAAU,EACV/wB,MAAO,CACLszG,gBAAiBl9G,GAAci6J,mBAC3Bb,EAAOwX,iBAAiB3pJ,WACxBmyI,EAAOwB,QAAQ3zI,WACnB2a,QAAS,GACTkvI,YAAa9wK,GAAci6J,mBACvBb,EAAOwB,QAAQ3zI,WACfmyI,EAAOwX,iBAAiB3pJ,YAE9B8pJ,UAAW,KACT/wK,GAAcixK,sBACdjxK,GAAcszC,UACd,SAEF,cAAC,IAAQ,CACPtZ,QAASh6B,GAAci6J,mBACvBx2J,MAAM,YACNmG,MAAO,CACL+nC,aAAc,MACdzlC,MAAOlM,GAAci6J,mBACjBb,EAAOwB,QAAQ3zI,WACfmyI,EAAOwX,iBAAiB3pJ,gBAIlC,cAAC,IAAM,CACL0T,UAAU,EACVjsB,KAAMosJ,GAAOoW,iBACbljJ,OAAO,EACPnqB,QAASoc,KAAKkxJ,YACdvnK,MAAO,CACLsC,MAAOlM,GAAci6J,mBACjBb,EAAOwB,QAAQ3zI,WACfmyI,EAAOwX,iBAAiB3pJ,WAC5Bi2F,gBAAiBl9G,GAAci6J,mBAC3Bb,EAAOwX,iBAAiB3pJ,WACxBmyI,EAAOwB,QAAQ3zI,WACnB2a,QAAS,GACTkvI,YAAa9wK,GAAci6J,mBACvBb,EAAOwB,QAAQ3zI,WACfmyI,EAAOwX,iBAAiB3pJ,mBAKpC,cAAC,IAAK,CAAChe,MAAO6xJ,GAAOwS,WAAYpkK,OAAQ4xJ,GAAOyS,YAAajkK,IAAK2W,KAAKotJ,SAAS,SAC9E,eAAC,IAAK,WACJ,wBAAC,IAAI,IACClU,EACJt2J,EAAG,EACHwlD,EAAG,EACHp/C,MAAO6xJ,GAAO7xJ,QACdC,OAAQ4xJ,GAAO5xJ,SACfkD,KACEpM,GAAci6J,mBACVb,EAAOwX,iBAAiB3pJ,WACxBmyI,EAAOwB,QAAQ3zI,WAErB/nB,IAAK47J,GAAO57J,MACZ67J,WAAW,KAEX/6J,GAAcouK,oBAAsBtT,GAAO9/G,KAAKo/G,OACjDp6J,GAAcouK,oBACbtT,GAAOwT,cAAc1rK,KAAI67B,GAASA,EAAM27H,qBAsBtD,OAfAU,GAAOwV,WAAara,EAChBj2J,GAAcouK,mBACZpuK,GAAci6J,mBAChBa,GAAO4S,oBAAsBzX,EAE7B6E,GAAO6S,mBAAqB1X,EAG1Bj2J,GAAci6J,mBAChBa,GAAO0S,aAAevX,EAEtB6E,GAAO2S,YAAcxX,EAIlBA,IA1iBA6E,GAEJ6T,sBAAgB,EAFZ7T,GAIJ8T,qBAAe,EAJX9T,GAMJ2T,kBAAY,EANR3T,GAQJyT,mBAAa,EARTzT,GAUJsS,cAAwB/sK,OAAO+yC,YAV3B0nH,GAYJqS,aAAuB9sK,OAAO4yC,WAZ1B6nH,GAcJyS,YAAsBltK,OAAO+yC,YAdzB0nH,GAgBJwS,WAAqBjtK,OAAO4yC,WAhBxB6nH,GAkBJ57J,IAAc,EAlBV47J,GAqBJ+E,qBAAe,EArBX/E,GAuBJ2F,mBAAa,EAvBT3F,GAyBJ9/G,UAAI,EAzBA8/G,GA0BJwT,cAAgC,GA1B5BxT,GA6BJ5uH,OAAS,IAAI28B,IA7BTiyF,GA8BJkT,cAAgB,IAAInlG,IA9BhBiyF,GAgCJwV,gBAAU,EAhCNxV,GAiCJ2S,iBAAW,EAjCP3S,GAkCJ0S,kBAAY,EAlCR1S,GAmCJ6S,wBAAkB,EAnCd7S,GAoCJ4S,yBAAmB,EApCf5S,GAqCJuS,SAA2B3oK,IAAMq0J,YArC7B+B,GAuCJ8S,yBAAmC,IAvC/B9S,GAwCJ+S,2BAAqC,IAxCjC/S,GAyCJgT,mBAAqCppK,IAAMq0J,YAzCvC+B,GAuVJqW,YAAc,KAvVVrW,GAwVkCgT,mBAAmBvlK,QACpD6oK,SAAS,CAAEx/H,KAAM,EAAGmjH,IAAK,IACnC+F,GAAO0V,qBAAqB,EAAG,GAC/B,MAAMtnK,EAAS4xJ,GAAO5xJ,SAChBD,EAAQ6xJ,GAAO7xJ,QACfooK,EAAmB3yI,KAAK2rB,KAAKphD,EAAQmwJ,EAAO6W,gBAC5CqB,EAAiB5yI,KAAK2rB,KAAKnhD,EAASkwJ,EAAO8W,iBACzB,MACtB,MAAMqB,EAAiBzkJ,IACrB,GAAIA,GAAKukJ,EAAmBC,EAC1B,OAEF,MAAMzuK,EAAIiqB,EAAIukJ,EACRhpH,EAAI3pB,KAAKC,MAAM7R,EAAIukJ,GACnB1gJ,EAAIigB,SAAS2zF,cAAc,KACjC5zG,EAAE/mB,MAAMC,QAAU,OAClB8mB,EAAEyhB,KAxWG0oH,GAwWSuS,SAAS9kK,QAAQipK,UAAU,CACvC3uK,EAAGA,EAAIu2J,EAAO6W,eAAiBnV,GAAO+S,2BACtCxlH,EAAGA,EAAI+wG,EAAO8W,gBAAkBpV,GAAO8S,yBACvC3kK,MAAOy1B,KAAKrgB,IAAIpV,EAAQpG,EAAIu2J,EAAO6W,eAAgB7W,EAAO6W,gBAC1D/mK,OAAQw1B,KAAKrgB,IAAInV,EAASm/C,EAAI+wG,EAAO8W,gBAAiB9W,EAAO8W,iBAC7DuB,SAAU,eAGZ9gJ,EAAE2zG,SAAY,WAAUzhI,KAAKwlD,QAC7BzX,SAASvrC,KAAKo/H,YAAY9zG,GAC1BA,EAAE+zG,QACF9zF,SAASvrC,KAAKs/H,YAAYh0G,GAC1BikB,YAAW,WACT28H,EAAczkJ,EAAI,KACjB,MAGLykJ,EAAc,IAEhBG,IC1ZW,MAAM1xK,GAMnB,6BACEA,GAAc2xK,eAAiB3xK,GAAc2xK,cAE/C,6BACE3xK,GAAc4xK,eAAiB5xK,GAAc4xK,cAE/C,0BACE,OAAO5xK,GAAc2xK,cAEvB,0BACE,OAAO3xK,GAAc4xK,cAIvB91G,YAAY+1G,EAAgB5oK,EAAeC,GACzC4xJ,GAAOsS,cAAgBlkK,EACvB4xJ,GAAOqS,aAAelkK,EACtBgX,KAAK4xJ,OAASA,EAGhB/1G,eACEg/F,GAAO5uH,OAAO6hC,QACd+sF,GAAOkT,cAAcjgG,QAKvBjS,eAAe/7D,GAGb,GADAC,GAAc6/J,gBAAkBoM,GAAalsK,EAAQoB,QAAQ0+J,kBACxD5/I,KAAK4xJ,OAAQ,MAAM,IAAI1xK,MAAM,kCAElC26J,GAAOgX,WAAW/xK,EAAQoB,QAAQ0+J,iBAClC5/I,KAAK4xJ,OAAO/W,GAAOV,QACnBU,GAAO/nH,iBAAiB+nH,GAAOqS,aAAcrS,GAAOsS,eAGpD,MAAM1pK,EAAOktC,SAASC,eAAe,uBACrCntC,GAAQA,EAAKotC,UAAUh4B,IAAI,0BAG7BgjD,gBACM77C,KAAK4/I,kBAGL7/J,GAAcouK,oBACdpuK,GAAci6J,yBACiB7zJ,IAA/B00J,GAAO4S,oBAEPztJ,KAAK4xJ,OAAO/W,GAAO4S,qBAEnB1tK,GAAcouK,qBACbpuK,GAAci6J,yBACe7zJ,IAA9B00J,GAAO6S,mBAEP1tJ,KAAK4xJ,OAAO/W,GAAO6S,qBAElB3tK,GAAcouK,oBACfpuK,GAAci6J,yBACU7zJ,IAAxB00J,GAAO0S,aAEPvtJ,KAAK4xJ,OAAO/W,GAAO0S,cAElBxtK,GAAcouK,oBACdpuK,GAAci6J,yBACQ7zJ,IAAvB00J,GAAO2S,aAIP3S,GAAOgX,WAAW9xK,GAAc6/J,iBAChC5/I,KAAK4xJ,OAAO/W,GAAOV,SAHnBn6I,KAAK4xJ,OAAO/W,GAAO2S,aAKrB3S,GAAO/nH,iBAAiB+nH,GAAOqS,aAAcrS,GAAOsS,gBAIxDtxG,wBAAwB7yD,EAAeC,GACd,MAAnB4xJ,GAAOuS,UAA8B,OAAVpkK,GAA6B,OAAXC,GAC/C4xJ,GAAO/nH,iBAAiB9pC,EAAOC,IApFhBlJ,GAEJ6xK,YAAM,EAFF7xK,GAGJ2xK,eAAyB,EAHrB3xK,GAIJ4xK,eAAyB,EAJrB5xK,GAKJ6/J,qBAAe,G,gCCXhC,wZAAO,MAAM17H,EAA6B,6BAC7BgjH,EAAoB,oBAE1B,IAAKp2H,EAaA3B,EAUA+0G,EAUAlhH,GA5BX,SALW8N,KAAkB,wBAAlBA,EAAkB,sBAAlBA,EAAkB,8BAAlBA,EAAkB,sBAK7B,CALWA,MAAkB,KAkB7B,SALW3B,KAAe,oBAAfA,EAAe,gBAAfA,EAAe,kBAAfA,EAAe,YAK1B,CALWA,MAAe,KAiB1B,SAPW+0G,KAAa,gBAAbA,EAAa,gBAAbA,EAAa,gBAOxB,CAPWA,MAAa,KAcxB,SAJWlhH,KAAa,0BAAbA,EAAa,UAAbA,EAAa,gBAIxB,CAJWA,MAAa,KAoKlB,MAAM4+G,EAAe,KACnB,CACLj9G,SAAU,CACRC,KAAM,OACNwB,QAAS,IAEX67G,QAAS,KAcAuP,EAAmB,KACvB,CACLplI,KAAM,WACN6Z,kBAAkB,EAClBuM,QAAS,sBACTN,WAAY,0BACZnsB,IAAK,EACLmb,MAAO,EACPqR,OAAQ,sBACRhsB,MAAO,oBACPu6H,QAAS,GACTzuG,aAAc,4BACdxB,OAAQC,EAAmBK,cAC3Bg+F,MAAO,UACPluG,GAAI,EACJgO,cAAe,SAINg9G,EAAsB,KAC1B,CACLpwH,mBAAoB,GACpB1C,OAAQ,oDACRnV,QAAS,qBACT+B,GAAI,EACJwM,QAASqvH,IACTgB,cAAehB,IACfv9G,QAAS,GACTnB,iBAAkB,qCAClBoB,SAAU,GACV1I,UAAW,GACXmoH,iBAAkB,GAClB33H,KAAM,cACN6U,GAAI,EACJC,MAAO,EACP8G,UAAU,IAIDygH,EAAmB,KACvB,CACLr8H,KAAM83H,EAAcC,OACpBhrH,OAAQ,GACR8E,MAAO,EACPmmH,QAAS,KAIA8H,EAAc,KAClB,CACL/yH,OAAQ,EACRnV,QAAS,8BACTk3D,QAAS,CACP,CACEl3D,QAAS,IACTo/H,KAAM,MAER,CACEp/H,QAAS,IACTo/H,KAAM,MAER,CACEp/H,QAAS,IACTo/H,KAAM,MAER,CACEp/H,QAAS,IACTo/H,KAAM,OAGVr9H,GAAI,EACJwM,QAASqvH,IACTgB,cAAehB,IACfx1H,KAAM,MACNub,SAAU,EACV1G,GAAI,EACJC,MAAO,EACP8G,UAAU,IAIDypH,EAAqB,KACzB,CACLrlI,KAAM,WACNg1H,iBA7FK,CACLz8G,SAAU,CACRC,KAAM,OACNwB,QAAS,IAEX67G,QAAS,IAyFTV,iBAAkBK,IAClB77H,IAAK,EACL0f,YAAa,+BACbi8G,WAAY,iBACZt/G,UAAW,CAAC6pH,KACZ1lI,MAAO,uB,iCC1TX,oOASO,MAAM29G,EAAuB,CAACn+G,EAAYwsB,EAAgBC,IAC/DjmB,iBAAOo8I,IAAwB,CAAE5iJ,KAAIwsB,SAAQC,YAElC2xF,EAAoBp+G,GAAewG,iBAAOq8I,IAAmB7iJ,GAE7Ds+G,EAAoB,CAACytD,EAA0B/rK,IAC1DwG,iBAAOs8I,IAAoB,CAAE9iJ,KAAI+rK,oBAEtB1tD,EAAmB,CAAC3zG,EAAYk9B,EAAsB+U,IACjEn2C,iBAAOu8I,IAAmB,CAAEr4I,OAAMk9B,cAAa+U,wB,wHCZjD,MAAMqvH,EAA6D,IAAInpG,IAkC1DopG,EAAiBC,IAE5B,GAA+B,MAA3BA,EAAgBnyK,QAClB,MAAO,GAIT,MAAMoyK,EAAoBD,EAAgBnyK,QAAQ2tG,eAClD,GAAyB,MAArBykE,EACF,MAAO,GAQT,OAJwClmI,OAAOC,OAAOimI,GAAmB5J,SACvExoK,IAAO,eAAyD,QAAzD,EAAgB,QAAhB,EAAIA,EAAQqE,YAAI,aAAZ,EAAcxB,KAAKkC,GAAaA,EAAIJ,IAAO0tK,cAAU,QAAI,OC1C3D1rK,EAAkBP,GAAkB,GAAEA,SA0FpCP,IAnDahG,IAC1B,MAAM,KAAEwE,EAAI,SAAE6B,GAAarG,GACpBkG,EAAausK,GAAkB3tK,IAAMC,SAC1CP,EAAKqiB,kBAAkBk3D,OAAOv5E,EAAKsiB,mBAI/BwrJ,EAAkBzyI,aACtBzT,GAASpsB,EAAMsG,mBAAqB8lB,EAAMG,WAAWvsB,EAAMsG,mBAAmBgsK,kBAEhFxtK,IAAMwa,WAAU,KACd,MAAMozJ,EAAgBluK,EAAKqiB,kBACxBk3D,ODhDwBu0F,KAC7B,MAEMK,EAAgC,IAFlBN,EAAcC,GAAiBzqJ,QAAO3iB,GAAOA,EAAI0tK,QAAQN,KAG5DtvK,KAAIkC,IAAG,IACjBA,EACHO,KAAMP,EAAIO,KAAK6sK,GAEflsK,GAAIK,IAAgBC,YAUxB,OANI4rK,EAAgBhsK,mBAClB8rK,EAAyB/nG,IACvBioG,EAAgBhsK,kBAChBqsK,EAAY3vK,KAAIkC,GAAOA,EAAIrB,SAGxB8uK,GC8BKE,CAAeP,GAAoB,KAC1Cv0F,OAAOv5E,EAAKsiB,kBACf2rJ,EAAeC,KACd,CAACluK,EAAM8tK,IAEV,MAAMnsK,EAAqBrB,IAAMq7C,aAC/B,CACEp5B,EACAC,EACAle,KAOA,MAAMgqK,EAAc9rJ,IAClB,MAAM+rJ,EAASjsK,EAAekgB,GACxBljB,EAAOktC,SAASC,eAAe8hI,GAGjCjvK,GACFA,EAAKotC,UAAUu5B,OAAO,gCAITjkE,IAAbH,GAGFA,EAAS0gB,EAAUC,EAAWle,GAF9BgqK,EAAW9rJ,KAMf,CAAC3gB,IAGH,OAAOrG,EAAMiG,eAAeC,EAAaC,K,iCCjG3C,uKAIO,MAAM6sK,EAAc7H,GAA8Bv+J,iBAAOqD,IAAak7J,GAEhEvsB,EAAgBr5F,GAC3B34C,iBAAOwD,IAAem1C,GAEXkB,EAAsB,CAAC9e,EAA4BsX,IAC9DryC,iBAAOyD,IAAyB,CAAEs3B,QAAOsX,c,iCCZ5B,QAA0B,iD,iCCAzC,qEASO,MAAMt2B,EAA8D,IAAkB,IAAjB,QAAE1kB,GAAS,EACrF,OAAO,cAAC,IAAa,CAACJ,MAAM,QAAQC,KAAMC,IAAUkvK,OAAQhvK,QAASA,M,iCCVvE,8EAiBO,MAAMivK,EAA+DlzK,IAC1E,MAAMi4G,EAAiBj4G,EAAM0K,kBAAoB,CAAElL,OAAQC,IAAOG,QAASoM,SAAS,GAAU,GAE9F,OACE,cAAC,IAAa,CACZnI,MAAM,OACNC,KAAMC,IAAU+yB,YAChB7yB,QAASjE,EAAMgpB,YACf9c,QAAS+rG,M,iCCzBf,sIAMO,MAAMz7D,EAAwBl2C,GACnCsG,iBAAOo5I,IAAwB,CAC7B1/I,sBAGS6sK,EAAwB,CACnChuK,EACAmB,IAEAsG,iBAAOq5I,IAAyB,CAC9B9gJ,QACAmB,uB,+ECdG,MAAMkzJ,EACE,EADFA,EAEH,QAFGA,EAGL,QAHKA,EAKD,GALCA,EAME,GANFA,EAOA,GAPAA,EAWA,KAXAA,EAYA,GAZAA,EAaQ,GAbRA,EAcQ,EAdRA,EAgBmB,GAhBnBA,GAiBkB,EAjBlBA,EAkBO,EAlBPA,EAmBK,GAnBLA,EAoBQ,GApBRA,EAqBY,GArBZA,EAuBI,G,aCEV,SAAS4Z,EAAQnwK,GACtB,OAjBK,SAAoBA,GACzB,YAAsBuD,IAAlBuyB,MAAM2lG,QACDz7H,aAAa81B,MAEbA,MAAM2lG,QAAQz7H,GAahBowK,CAAWpwK,IAAmB,IAAbA,EAAE+B,OAiBrB,SAASiiK,EAAKqM,GACnB,GAAIF,EAAQE,GACV,OAAOA,EAAG,GAEV,MAAM,IAAI/yK,MAAM,2DAA6D+yK,GAM1E,SAASC,EAAQD,GACtB,OAAc,OAAPA,EAMF,SAASE,EAAQF,GACtB,MAASA,EAAKrM,EAAKqM,GAAK,CACtB,GAAIC,EAAQD,GACV,OAAO,EACF,IAAKF,EAAQE,GAClB,OAAO,GC5DN,SAASG,EAAOzvJ,GAAwD,IAA5C0vJ,EAAa,wDAC9C,GAAIA,EACF,MAAO,GAAK1vJ,EACP,CACL,MAAMvX,SAAcuX,EACpB,GAAc,aAATvX,GAAgC,WAATA,GAA+B,OAATuX,EAE3C,IAAa,WAATvX,EAAmB,CAC5B,MAAMknK,EAAa3vJ,EAAO,GAE1B,MAAQ,IADI2vJ,EAAW5nH,UAAU,EAAGytG,KACnBma,EAAW3uK,OAASw0J,EAAuB,MAAQ,MAEpE,MAAQ,GAAEx1I,IANV,Q,2BCFC,MAAM4vJ,UAAsB9uK,IAAM+uK,cACvCnzJ,SACE,OACE,cAAC,IAAK,CAEJ46I,OAAQ,CACNj7I,KAAKrgB,MAAM6uE,KAAK5rE,EAChBod,KAAKrgB,MAAM6uE,KAAKpmB,EAChBpoC,KAAKrgB,MAAM6xB,GAAG5uB,EAAIu2J,EAClBn5I,KAAKrgB,MAAM6xB,GAAG42B,EAAI+wG,GAEpB+D,aAAc/D,EACdiE,cAAejE,EACfhtJ,KAAMgtJ,EACN2D,OAAQ3D,EACRuC,YAAavC,EACbzkD,gBAAgB,GAZX10F,KAAKrgB,MAAQ,KCJnB,MAAM8zK,UAA8BD,gBAYzCnzJ,SAGE,MAAMqzJ,EAAU1zJ,KAAKrgB,MAAM6uE,KAAKpmB,EAAI+wG,EAAmB,EAAIA,EAGrDwa,EAAQ3zJ,KAAKrgB,MAAM6xB,GAAG5uB,EAAIu2J,EAG1Bya,EAAO5zJ,KAAKrgB,MAAM6xB,GAAG42B,EAAI+wG,EAEzBvqH,EAAO,CACX5uB,KAAKrgB,MAAM6uE,KAAK5rE,EAChBod,KAAKrgB,MAAM6uE,KAAKpmB,EAChBpoC,KAAKrgB,MAAM6uE,KAAK5rE,EAChB8wK,EACAC,EACAD,EACAC,EACAC,EACA5zJ,KAAKrgB,MAAM6xB,GAAG5uB,EAAIu2J,EAClBya,EACA5zJ,KAAKrgB,MAAM6xB,GAAG5uB,EAAIu2J,EAClBn5I,KAAKrgB,MAAM6xB,GAAG42B,EAAI+wG,GAEpB,OACE,cAAC,IAAK,CACJ8B,OAAQrsH,EACRwuH,cAAejE,EACf+D,aAAc/D,EACdhtJ,KAAMgtJ,EACN2D,OAAQ3D,EACRuC,YAAavC,EACbzkD,gBAAgB,KCzDjB,MAAMm/D,EAGX1jI,cAAe,KAFRouF,cAAQ,EAGbv+G,KAAKu+G,SAAW,MCEb,MAAMu1C,UAA8BD,EAGzC1jI,YAAY4jI,GACV3jI,QAAQ,KAHH2jI,gBAAU,EAIf/zJ,KAAK+zJ,WAAaA,GCLf,MAAMC,UAAqBH,EAGhC1jI,YAAYxsB,GACVysB,QAAQ,KAHMzsB,UAAI,EAIlB3D,KAAK2D,KAAOA,GCJT,MAAeswJ,UAAyBJ,EAAU,cAAD,yBAC5CK,eAAS,OACZC,eAAS,OACTC,eAAS,EAEZC,eACF,OAAOr0J,KAAKk0J,WCGT,MAAMI,UAAqB7vK,IAAM+uK,cACtCnzJ,SACE,OACE,cAAC,IAAI,CACHzd,EAAGod,KAAKrgB,MAAMiD,EACdwlD,EAAGpoC,KAAKrgB,MAAMyoD,EACd6yG,OAAQ,CAAC,EAAG9B,EAAkBA,EAAiB,GAC/CuC,YAAavC,EAAqB,EAClC2D,OAAQ3D,EACRzkD,gBAAgB,KCPjB,MAAM6/D,UAAsB9vK,IAAM+uK,cACvCnzJ,SACE,MAAMm0J,EAAkB,CAAC9yH,EAAoB58C,KAC3C,MAAM2vK,EAAY/yH,EAAK/9B,KACvB,GRgBGwvJ,EQhBSsB,GAgBL,IRGN,SAAqB9wJ,GAC1B,OAAgB,OAATA,EQJQ+wJ,CAAYD,GAAY,CACjC,MAAM90K,EAAQ,CACZiD,EAAGkC,EAAQq0J,EACX/wG,EAAG,GAEL,OAAO,cAAC,EAAY,IAAiBzoD,GAAXmF,GAE1B,OAAO,KAvBe,CACtB,MAAM6vK,EAAgCvB,EAAOqB,GACvCG,EAAyB,OAATD,QAAS,IAATA,IAAa,IAAMjkI,EAAemkI,sBAAsBnzH,GAC9E,OACE,cAAC,IAAI,CAEHjzC,KAAMmmK,EACN/sH,MAAO,SACP7+C,MAAOmwJ,EACPv2J,EAAGu2J,EAAkBr0J,EACrBsjD,EAAG3pB,KAAKC,OAAOy6H,EAAmB,IAAM,IAAM,GAC9CI,eAAyBpzJ,IAAdwuK,EAA0B,SAAW,SAChDxoK,KAAM,QACNuoG,gBAAgB,GARX,GAAK+/D,EAAY3vK,KAsB9B,OACE,eAAC,IAAK,CAAClC,EAAGod,KAAKrgB,MAAMiD,EAAGwlD,EAAGpoC,KAAKrgB,MAAMyoD,EAAE,UAEtC,cAAC,IAAI,CACHp/C,MAAOy1B,KAAKpgB,IAAI86I,EAAkBn5I,KAAKrgB,MAAMsrH,MAAMtmH,OAAQw0J,GAC3DlwJ,OAAQkwJ,EACRuC,YAAavC,EACb2D,OAAQ3D,EACRhtJ,KAAM,UACNuoG,gBAAgB,IAGjB10F,KAAKrgB,MAAMsrH,MAAMtmH,OAAS,GACzB+zB,MAAM81C,KAAK91C,MAAM1Y,KAAKrgB,MAAMsrH,MAAMtmH,OAAS,IAAI,CAACsxC,EAAGlzC,IAE/C,cAAC,IAAI,CAEHk4J,OAAQ,CAAC9B,GAAmBp2J,EAAI,GAAI,EAAGo2J,GAAmBp2J,EAAI,GAAIo2J,GAClEuC,YAAavC,EACb2D,OAAQ3D,EACRzkD,gBAAgB,GAJX,OAAS3xG,KAQrBid,KAAKrgB,MAAMsrH,MAAMtoH,KAChB,CAACmyK,EAAOhwK,IAAUgwK,aAAiBd,GAAgBQ,EAAgBM,EAAOhwK,SC7D7E,MAAMiwK,UAAyBtwK,IAAM+uK,cAC1CnzJ,SACE,OACE,eAAC,IAAK,IAAKL,KAAKrgB,MAAK,UAEnB,cAAC,IAAM,CACL8+J,OAAQtF,EACRuC,YAAavC,EACb2D,OAAQ3D,EACRv2J,EAAGu2J,EACH/wG,EAAG+wG,EACHzkD,gBAAgB,IAIlB,cAAC,IAAM,CACL+pD,OAAQtF,EACRuC,YAAavC,EACb2D,OAAQ3D,EACRv2J,EAA8B,EAA3Bu2J,EAA+BA,EAClC/wG,EAAG+wG,EACHzkD,gBAAgB,IAIlB,cAAC,IAAM,CACL+pD,OAAQtF,EACRuC,YAAavC,EACb2D,OAAQ3D,EACRhtJ,KAAMgtJ,EACNv2J,EAAGu2J,EACH/wG,EAAG+wG,EACHzkD,gBAAgB,IAIlB,cAAC,IAAM,CACL+pD,OAAQtF,EACRuC,YAAavC,EACb2D,OAAQ3D,EACRhtJ,KAAMgtJ,EACNv2J,EAA8B,EAA3Bu2J,EAA+BA,EAClC/wG,EAAG+wG,EACHzkD,gBAAgB,QC/CnB,MAAMsgE,UAAyBf,EACpCgB,eAAeryK,EAAWwlD,EAAW8sH,EAAiBC,GAwBpD,OAvBAn1J,KAAKk0J,UACH,eAAC,IAAK,WACJ,cAAC,EAAgB,CAAOtxK,IAAGwlD,OACzB8sH,IAAYtyK,GAAKuyK,IAAY/sH,IAC7B,cAAC,EAAa,CAEVomB,KAAM,CACJ5rE,EAAGsyK,EAAU/b,EAAkB,EAC/B/wG,EAAG+sH,EAAUhc,EAAmB,GAElC3nI,GAAI,CACF5uB,IACAwlD,SAXExlD,EAAI,KAAOwlD,GAmBzBpoC,KAAKm0J,UAAYvxK,EACjBod,KAAKo0J,UAAYhsH,EAEVpoC,KAAKk0J,WCzBT,MAAMkB,UAAsBnB,EACjCgB,eAAeryK,EAAWwlD,EAAW8sH,EAAiBC,GAA+B,IAAD,EAClF,MAAME,EAAa,CAAEpqD,MAAoB,QAAf,EAAEjrG,KAAKu+G,gBAAQ,QAAI,GAAI37H,IAAGwlD,KAC9CktH,EAAgB,cAAC,EAAa,IAAKD,IAuBzC,OArBAr1J,KAAKk0J,UACH,eAAC,IAAK,WACHoB,GACCJ,IAAYtyK,GAAKuyK,IAAY/sH,IAC7B,cAAC,EAAa,CAEVomB,KAAM,CACJ5rE,EAAGsyK,EAAU/b,EAAkB,EAC/B/wG,EAAG+sH,EAAUhc,EAAmB,GAElC3nI,GAAI,CACF5uB,IACAwlD,SAXExlD,EAAI,KAAOwlD,GAkBzBpoC,KAAKm0J,UAAYvxK,EACjBod,KAAKo0J,UAAYhsH,EACVpoC,KAAKk0J,WCdT,MAAMqB,EASXplI,YAAYqlI,EAAoBvqD,GAA4B,KARpDwqD,eAAS,OACTxqD,WAAK,EAQXjrG,KAAKy1J,UAAYD,EACjBx1J,KAAKirG,MAAQA,EAMXuqD,eACF,OAAOx1J,KAAKy1J,UAOdC,YAAY3vK,GACV,OAAOia,KAAKirG,MAAMllH,GAGpB81D,2BAA2B85G,GACzB,IAAIC,EAAY,EAEhB,SAASC,EAAcC,GACrB,MAAMC,EAAmBC,EAAkBx0K,IAAIs0K,GAC/C,YAAyB3vK,IAArB4vK,EACK,IAAIjC,EAAsBiC,IZ/BjBpyJ,EYiCHmyJ,EZhCZp9I,MAAM2lG,QAAQ16G,GY6CnB,SAAuBgyJ,GACrB,MAAMj0H,EAAO,IAAI0zH,EASjB,OAPAY,EAAkBhsG,IAAI2rG,EAAMj0H,GAC5Bu0H,EAAUL,GAAal0H,EACvBk0H,IAGAl0H,EAAK68E,SAAWo3C,EAAKhzK,IAAIkzK,GAElBn0H,EAtBHw0H,CAAcJ,GZ9BjB,SAAoBnyJ,GACzB,MAAuB,oBAATA,EY8BNymJ,CAAW0L,GA8BjB,SAA2BK,GACzB,MAAMz0H,EAAO,IAAIszH,EAOjB,OAJAgB,EAAkBhsG,IAAImsG,EAAMz0H,GAC5Bu0H,EAAUL,GAAal0H,EACvBk0H,IAEOl0H,EArCH00H,CAAkBN,GA6CxB,SAAuBnyJ,GACrB,OAAO,IAAIqwJ,EAAarwJ,GA7CpB0yJ,CAAcP,IZrCjB,IAAiBnyJ,EYqFpB,MAAMqyJ,EAA0E,IAAIptG,IAC9EqtG,EAAgC,GAChCT,EAAWK,EAAcF,GAE/B,OAAO,IAAIJ,EAAKC,EAAUS,GAG5B9b,OACE,OAAO,IAAImc,EAAWt2J,OAO1B,MAAMs2J,EAYJnmI,YAAYwlI,GAAa,KAXjBA,UAAI,OAEJY,eAAS,OACTC,gBAAU,OACXxtK,MAAgB,EAAE,KAClBC,OAAiB,EAAE,KAGlBm+J,KAAO,EAAE,KACTqP,KAAO,EAGbz2J,KAAK21J,KAAOA,EACZ31J,KAAKu2J,UAAY,GACjBv2J,KAAKw2J,WAAa,IAAI5tG,IAMxBuxF,KAAKv3J,EAAWwlD,GACd,GAAIpoC,KAAK21J,KAAKH,oBAAoBxB,EAAc,CAC9C,MACMt6G,EAAa,CACjBjrD,KAFW2kK,EAAOpzJ,KAAK21J,KAAKH,SAAS7xJ,MAGrCkkC,MAAO,SACP0xG,UAAW,SACXpuG,SAAU,GACVh/C,KAAMgtJ,GAEFud,EAAY,IAAIC,IAAM/qH,KAAK8N,GAGjC,OAFA15C,KAAKhX,MAAQ0tK,EAAU1tK,QACvBgX,KAAK/W,OAASytK,EAAUztK,SAEtB,cAAC,IAAK,UACJ,cAAC,IAAI,IAAKywD,MAOd,OAHA15C,KAAK42J,SAAS52J,KAAK21J,KAAKH,SAAU5yK,EAAGwlD,EAAGxlD,EAAGwlD,GAC3CpoC,KAAKhX,MAAQgX,KAAK62J,aAAa72J,KAAK21J,KAAKH,UAAYx1J,KAAKonJ,KAC1DpnJ,KAAK/W,OAAS+W,KAAK82J,cAAc92J,KAAK21J,KAAKH,UAAYx1J,KAAKy2J,KAAOtd,EAEjE,cAAC,IAAK,CAAoB4d,QAAS/2J,KAAKonJ,KAAMjD,QAASnkJ,KAAKy2J,KAAK,SAC9Dz2J,KAAKu2J,WADI3zK,EAAI,KAAOwlD,GAmB7BwuH,SAASl1H,EAAgB9+C,EAAWwlD,EAAW8sH,EAAiBC,GAC9D,GAAIzzH,aAAgBoyH,EAAuB,CAEzC,MAAMkD,EAAYt1H,EAAKqyH,WACjBkD,EAAa,CACjBzoG,KAAM,CACJ5rE,EAAGsyK,EAAU/b,EAAkB,EAC/B/wG,EAAG+sH,EAAUhc,EAAmB,GAElC3nI,GAAI,CACF5uB,EAAGo0K,EAAU7C,UACb/rH,EAAG4uH,EAAU5C,YAMjB,IAAI/mH,EAFoB4pH,EAAWzoG,KAAKpmB,GAAK6uH,EAAWzlJ,GAAG42B,GAMzDpoC,KAAKonJ,KAAO3oI,KAAKrgB,IACf4B,KAAKonJ,KACL4P,EAAU7C,UAAahb,EAA+BA,EAAqB,GAE7En5I,KAAKy2J,KAAOh4I,KAAKrgB,IACf4B,KAAKy2J,KACLO,EAAU5C,UAAajb,EAAwBA,EAAqB,GAEtE9rG,EACE,cAAC,EAAqB,IAAsD4pH,GAAhD,eAAiB/B,EAAUtyK,EAAIuyK,EAAU/sH,IAGvEiF,EAAQ,cAAC,EAAa,IAA+C4pH,GAAzC,QAAU/B,EAAUtyK,EAAIuyK,EAAU/sH,GAEhEpoC,KAAKu2J,UAAUrwJ,KAAKmnC,GAGtB,GAAM3L,aAAgBuyH,EAGtB,GAAIvyH,aAAgBszH,EAAkB,CACpC,MAAMX,EAAW3yH,EAAKuzH,eAAeryK,EAAGwlD,EAAG8sH,EAASC,GACpDn1J,KAAKu2J,UAAUrwJ,KAAKmuJ,QACf,GAAI3yH,aAAgB0zH,EAAe,CAAC,IAAD,EACxC,MAAMf,EAAW3yH,EAAKuzH,eAAeryK,EAAGwlD,EAAG8sH,EAASC,GACpDn1J,KAAKu2J,UAAUrwJ,KAAKmuJ,GAIpB,IAAIV,EAAQ/wK,EACC,QAAb,EAAA8+C,EAAK68E,gBAAQ,OAAb,EAAe34F,SAAQ,CAACsxI,EAAWpyK,KACjC,MAAMqyK,EAASD,aAAqBpD,EAAwB1rH,EAAIA,EAAI+wG,EACpEn5I,KAAK42J,SAASM,EAAWvD,EAAOwD,EAAQv0K,EAAIu2J,EAAkBr0J,EAAOsjD,GACrE,MAAMgvH,EAAiBp3J,KAAK62J,aAAaK,GACzCvD,GAASyD,EAAiBA,EAAiBje,EAAmB,MASpE0d,aAAan1H,GACX,GAAIA,aAAgBsyH,GAAgBtyH,aAAgBoyH,EAClD,OAAO,EACF,GAAIpyH,aAAgBszH,EACzB,OAAkC,EAA3B7b,EAA+B,EAAIA,EACrC,GAAIz3G,aAAgB0zH,EAAe,CACR,IAAD,EAA/B,GAAIp1J,KAAKw2J,WAAW5wF,IAAIlkC,GACtB,OAAgC,QAAhC,EAAO1hC,KAAKw2J,WAAWh1K,IAAIkgD,UAAK,QAAI,EAC/B,GAAqB,MAAjBA,EAAK68E,SAAkB,CAChC,MAAM84C,EAAiB31H,EAAK68E,SACzB57H,KAAI++C,GAAQ1hC,KAAK62J,aAAan1H,KAC9Bl6B,QAAO5kB,GAAKA,EAAI,IACb00K,EACJD,EAAe1yK,OAAS,EAAI0yK,EAAe93J,QAAO,CAAC3c,EAAGwlD,IAAMxlD,EAAIwlD,EAAI+wG,IAAoB,EACpFoe,EAAY94I,KAAKpgB,IACrBqjC,EAAK68E,SAAS55H,OAASw0J,EAAkBA,EACzCme,EACAne,EAAqBA,GAGvB,OADAn5I,KAAKw2J,WAAWxsG,IAAItoB,EAAM61H,GACnBA,EAEP,OAAO,EAGT,OAAO,EAQXT,cAAcp1H,GACZ,OAAIA,aAAgBsyH,EACX,EACEtyH,aAAgBszH,EAClB7b,EACEz3G,aAAgBoyH,EAClB3a,EACEz3G,aAAgB0zH,GAGT,QAAd,EAAC1zH,EAAK68E,gBAAQ,QAAI,IACf57H,KAAImyK,GACiB90J,KAAK82J,cAAchC,IACjBA,aAAiBb,EAAmB9a,EAAmB,EAAI,KAElF3xI,QAAOve,GAAUA,EAAS,IAC1BsW,QAAO,CAAC3c,EAAGwlD,IAAM3pB,KAAKpgB,IAAIzb,EAAGwlD,IAAI,GAAK+wG,EAGpC,EAZkC,IAAD,GCrR/B,MAAMzoH,EACnB,aAAqBW,IAQblB,cAAe,KAJfM,MAAgB,GAAG,KACnB+mI,UAAY,EAAE,KACdC,eAA4C,IAAI7uG,IAIxD,YAAmB8uG,GACjBhnI,EAAegnI,SAAWA,EAG5B,gBAAuBC,GACrB,IAAKjnI,EAAegnI,SAClB,MAAM,IAAIx3K,MAAM,mCAElBwwC,EAAeknI,UAAUC,QAAQF,GACjCjnI,EAAegnI,SAAShnI,EAAeknI,UAAUnnI,OAGnD,eACEC,EAAeknI,UAAY,IAAIlnI,EAC/BA,EAAegnI,SAAShnI,EAAeknI,UAAUnnI,OAGnD,6BAAoCqnI,GAClC,OAAOpnI,EAAeknI,UAAU/C,sBAAsBiD,GAGhDjD,sBAAsBiD,GACY,IAAD,EAAvC,OAAI93J,KAAKy3J,eAAe7xF,IAAIkyF,GACc,QAAxC,EAAO93J,KAAKy3J,eAAej2K,IAAIs2K,UAAS,QAAI,GAE5Cp+J,QAAQ3B,IAAI,IAAMiI,KAAKw3J,UAAY,KAAOM,EAASn0J,MACnD3D,KAAKy3J,eAAeztG,IAAI8tG,EAAU93J,KAAKw3J,WAChCx3J,KAAKw3J,aAIRK,QAAQF,GACd,MAAMtmI,EAAOsmI,EAAWh1K,IAAIqd,KAAK+3J,eACjC/3J,KAAKywB,MAAMvqB,KAAKmrB,GAOV0mI,cAAc9E,GACpB,MAAM+E,EAAazC,EAAK0C,oBAAoBhF,GAAI9Y,OAI1C+d,EAAa/e,EAAqB,EAGlCgf,EAAYhf,EAAqB,EAEjC95F,EAAQ24G,EAAW7d,KAAK+d,EAAYC,GAC1C,OACE,cAAC,IAAK,CAAUnvK,MAAOgvK,EAAWhvK,MAAQkvK,EAAYjvK,OAAQ+uK,EAAW/uK,OAASkvK,EAAU,SACzF94G,GADS4zG,IA/DGviI,EAEJgnI,SAAmChnI,EAAe0nI,MAF9C1nI,EAGJknI,UAAY,IAAIlnI,G,gCClBjC,6kBA0FO,IAAK2nI,EAMAjkJ,GAFX,SAJWikJ,KAAsB,0BAAtBA,EAAsB,wBAAtBA,EAAsB,YAIjC,CAJWA,MAAsB,KAYlC,SANYjkJ,KAAI,kBAAJA,EAAI,cAAJA,EAAI,cAMhB,CANYA,MAAI,KAehB,MAAMkkJ,EAAuC,IAAI1vG,IAAI,CAAC,CAAChoE,UAAQC,QAAS,WAE3D6O,EAAqB,SAACoC,GAA0D,IAAxCnR,EAAgB,uDAAGC,UAAQC,QAC9E,MAAQ,cAAaiR,IACnBwmK,EAAe1yF,IAAIjlF,GAAY,IAAG23K,EAAe92K,IAAIb,KAAa,MAMzDwO,EAF2B,CAAC,CAAE2C,QAAS0S,UAAQC,MAAO9jB,QAASC,UAAQC,UAE1B8B,KAAI4T,IACrD,IACFA,EACH7H,YAAagB,EAAmB6G,EAAQzE,QAASyE,EAAQ5V,aAIhDyN,EAAmBe,EAAgBqY,QAC9CjR,GAAWA,EAAQ5V,UAAYC,UAAQC,UAG5Bo+G,EAAmB9vG,EAAgBqY,QAC9CjR,GAAWA,EAAQ5V,UAAYC,UAAQC,UAG5Bk2I,EAAoBjlI,GAAqB,CAAC0S,UAAQC,OAAO4B,SAASvU,GAalEymK,EAA+B,CAC1CC,gBAAYryK,GAGDsyK,EAAuC,CAClD9zB,YAXW0zB,EAAuBK,YAcvBC,EAAmC,CAC9CtyH,eAAgB,CACdC,KAAM,GACNE,KAAM,KAIGoyH,EAAuC,CAClDxqI,aAAc,GACd5K,MAAO,GACP8D,MAAO,GACP3U,oBAAqB,IAGVkmJ,EAAqC,CAChD1/B,eAAgB,CAAExoI,SAAU,GAAIC,SAAU,KAG/BkoK,EAAqB,MAQrBC,EAA0B9yK,IAAoC,CACzE4V,mBAAoB,GACpB/b,QAASU,YAAiC,GAAIyF,EAAmB2iB,IAAUC,sBAC3EsD,qBAAsB,EACtBpH,WAAY,CACV,CACElQ,MAAO,CAAC,aAAc,aAAc,qBAAqBwR,SAASpgB,GAC9D6yK,EACA,GACJ9zJ,aAAc,GACdC,cAAe,GACf5Q,iBAAkB,GAClBH,YAAa,KAGjB2V,gBAAiB,GACjBlU,kBAAkB,EAClBwO,gBAAiB,GACjBO,gBAAiBg0H,IAAoBhtI,KACrC4F,SAAU,IACV6Z,OAAQ,GACR6tJ,YAAa,CACXC,YAAa,KACbC,QAAS,GACTC,cAAe,IAEjB/tJ,UAAW,GACXqoH,kBAAkB,EAClB9hI,UAAW,IACXswH,QAAS,GACTh4G,iBAAiB,EACjBlmB,WAAW,EACXqoB,aAAa,EACbC,iBAAiB,EACjB4lJ,gBAAiB,KAGN9sJ,EAAiD,CAC5DhD,WAAY,IACP42J,EAAuB,cAC1BzsJ,uBAAmBnmB,EACnBomB,qBAAiBpmB,EACjBkE,mBAAmB,GAErBiY,QAAS,IACJy2J,EAAuB,WAC1B1+D,uBAAmBl0G,EACnBomB,qBAAiBpmB,EACjBkE,mBAAmB,GAErB2rI,WAAY,IACP+iC,EAAuB,cAC1BzhK,YAAY,GAEdsmC,WAAY,IACPm7H,EAAuB,cAC1BniI,SAAU,GACV7B,kBAAmB,KACnByI,kBAAmB,EACnBx0B,YAAa,KACbozB,aAAc,KACdpI,aAAc,CACZ9Y,KAAM,CACJlX,YAAa,GACblS,QAAS0S,UAAQC,MACjBC,gBAAiBg0H,IAAoBhtI,MAEvCsB,OAAQ,IAEVywC,iBAAkB,EAClBvH,eAAgBX,IAAeC,OAC/BsF,gBAAiB,KACjBv0C,MAAO,KACPuxC,IAAK,MAEP8vE,WAAY,IACPmxD,EAAuB,cAC1B/kI,aAAc,CACZ9Y,KAAM,CACJlX,YAAa,GACblS,QAAS0S,UAAQC,MACjBC,gBAAiBg0H,IAAoBhtI,MAEvCsB,OAAQ,IAEVs6G,gBAAiBC,IAAgBC,WACjCK,uBAAwB,EACxBC,YAAa,GAEfsxD,KAAM,IACDL,EAAuB,QAC1BzhK,YAAY,GAEd+hK,iBAAkB,IACbN,EAAuB,oBAC1B1uK,mBAAmB,IAIVivK,EAA+B,CAC1C39B,QAAS,GACTv0G,MAAO,KACPmyI,UAAW,CACTC,iBAAkB,GAClBppF,aAAc,IAEhBnvE,GAAI,EACJ45G,eAAW10H,EACXgpH,MAAO,CACLA,MAAO,GACPsqD,WAAW,GAEbxtJ,YAAa,IAAI28C,IACjBj2C,yBAAqBxsB,EACrBw8I,sBAAkBx8I,EAClB8R,UAAW5K,KAAKC,MAChB4rI,oBAAqB,CAAEiR,aAAShkJ,GAChCy2G,sBAAkBz2G,EAClBi0G,SAAU,IAAIxxC,IACdh8C,cAAe,IAGJ8sJ,EAA6B,CACxCC,QAASpB,EACTn/I,YAAaw/I,EACbgB,YAAanB,EACb/xH,UAAWiyH,EACX3iC,WAAY6iC,EACZ7sJ,QAASstJ,EACTptJ,WAAY/G,I,iCCxTd,kHAEA,MAAM00J,EAAc,CAClB,QAAS,MACT,SAAU,QAGL,SAASC,EAAc7hK,EAAmB8hK,GAC/C,MAAMhiI,EAAM,IAAIktE,IAAIhtG,EAAW2Q,IAAUkmI,mBAIzC,OAHIirB,IACFhiI,EAAIO,SAAWuhI,EAAY9hI,EAAIO,WAE1BP,EAAI/wB,WAGNgP,eAAek9G,EAAqBj7H,GACzC,MAAM04E,QAAaC,MAAMkpF,EAAc7hK,IAEvC,OAAO04E,GAAQA,EAAKqjB,GAGfh+E,eAAe88G,EAAiBknC,GACrC,MAAMrpF,QAAaC,MAAMhoE,IAAUkmI,kBAAmB,CACpDv+D,OAAQ,OACRnrF,KAAM40K,EACNxpF,QAAS,CAAE,eAAgB,gBAG7B,IAAKG,IAASA,EAAKqjB,GACjB,MAAM,IAAI9zG,MACRywF,EAAQ,uCAAsCA,EAAKliF,SAAW,kCAIlE,OAAOkiF,EAAKliF,S,iCClCd,oEAAO,MAAMwrK,EAAwB,wBACxBC,EAAwB,yB,mICG9B,SAASC,EACdp0K,GAIC,IAHDpF,EAAO,uDAAGC,UAAQC,QAClB8jB,EAAQ,uDAAG,OAIX,SAASy1J,EAAsBC,EAAUC,EAASj0K,GAChD,MAAMk0K,EAAMF,EAAS,cACfG,EAA2BH,EAC/B,iCACAG,yBACIC,EAAqBJ,EAAS,0BAA0BI,mBACxDC,EAAkB,qDACI95K,UAAQC,QAAUkF,EAAGihB,WAkCjD,MAQM2zJ,EAAuB,SAAU9uK,GAIrC,MAAM+uK,EAAgB56J,KAAK66J,oBACzB,CACE,oBAEE,+EAEF1qK,QAEE,6qBAkBF,eAEE,4CACF,mBAAoB,SAGtB,cAII2qK,EACJ,yGAQF96J,KAAK+6J,OAAS,CACZC,SAAU,CACRR,EAAyBS,aAAa,aACtC95J,EAAS,YACT,CACE+5J,MAAO,SACPC,MAAO,SACP1uG,KAAM,WAER,CACEyuG,MAAO,SACPC,MAAO,SACP1uG,KAAM,YAER,CACEyuG,MAAO,mBACPC,MAAO,gDAET,CACED,MAAO,mBACPC,MAAO,gDAET,CACED,MAAO,CACL,eACA,uBACA,mBACA,uBACA,uBACA,OACA,oBAEFC,MACE,IAAMT,EAAkB,0BAA4BA,EAAkB,aACxEjuG,KAAM,sBAER,CACEyuG,MAAO,CACL,eACA,uBACA,uBACA,OACA,mBACA,OACA,eACA,OACA,gBAEFC,MACE,IACAT,EACA,UACAA,EACA,wCACFjuG,KAAM,sBAER,CACEyuG,MAAO,CACL,uBACA,OACA,mBACA,OACA,eACA,OACA,gBAEFC,MAAO,IAAMT,EAAkB,wCAC/BjuG,KAAM,sBAER,CACEyuG,MAAO,CACL,eACA,uBACA,uBACA,OACA,mBACA,OACA,eACA,OACA,uBACA,OACA,gBAEFC,MACE,IACAT,EACA,UACAA,EACA,oDACFjuG,KAAM,sBAER,CACEyuG,MAAO,CAAC,eAAgB,OAAQ,uBAAwB,OAAQ,gBAChEC,MAAO,oBAAsBT,EAAkB,eAC/CjuG,KAAM,sBAER,CACEyuG,MAAO,CACL,uBACA,OACA,uBACA,OACA,eACA,OACA,gBAEFC,MAAO,IAAMT,EAAkB,wCAC/BjuG,KAAM,sBAER,CACEyuG,MAAO,CAAC,OAAQ,OAAQ,eAAgB,OAAQ,gBAChDC,MAAO,iCACP1uG,KAAM,sBAER,CACEyuG,MAAO,UACPC,MAAO,sBAET,CACED,MAAO,UACPC,MAAO,+EACP1uG,KAAM,SAER,CACEyuG,MAAO,CAAC,oBACRC,MAAO,UAET,CACED,MAAON,EACPO,MAAOT,GAET,CACEQ,MAAO,oBACPC,MAAO,aACP1uG,KAAM,YAER,CACEyuG,MAAO,eACPC,MAAO,MAET,CACED,MAAO,mBACPC,MAAO,yEACP1uG,KAAM,SAER,CACEyuG,MAAO,uBACPC,MAAO,UACP1uG,KAAM,SAER,CACEyuG,MAAO,eACPC,MAAO,SACP1uG,KAAM,SAER,CACEyuG,MAAO,eACPC,MAAO,UAET,CACED,MAAO,UACPC,MAAO,WAGXnwB,SAAU,CACR,CACEkwB,MAAO,OACPC,MAAO,QAET,CACED,MAAO,CACL,eACA,uBACA,uBACA,OACA,mBACA,OACA,eACA,OACA,uBACA,OACA,gBAEFC,MACE,IACAT,EACA,UACAA,EACA,yDACFjuG,KAAM,sBAER,CACEyuG,MAAO,uBACPC,MAAO,cAET,CACED,MAAO,oBACPC,MACE,qvDAEJ,CACED,MAAO,wBACPC,MACE,+lBAEJ,CACED,MAAO,mBACPC,MACE,y2DAEJ,CACED,MAAO,aACPC,MAAOT,GAET,CACES,MAAO,GACPD,MAAO,QACPzuG,KAAM,aAGV9hD,MAAO,CACL6vJ,EAAyBS,aAAa,aACtC95J,EAAS,SACT,CACE+5J,MAAO,gBACPC,MAAO,MACP1uG,KAAM,SAER,CACEyuG,MAAO,OACPC,MAAO,UACP1uG,KAAM,SAER,CACEyuG,MAAO,QACPC,MAAO,GACP1uG,KAAM,aAGV0uG,MAAO,CACL,CACED,MAAO,0BACPC,MAAO,6CAET,CACED,MAAO,gBACPC,MAAO,cACP1uG,KAAM,YAER,CACEyuG,MAAO,UACPC,MAAO,iDAET,CACED,MAAO,2BACPC,MAAO,iDAET,CACED,MAAO,8BACPC,MAAO,MAET,CACED,MAAO,2BACPC,MAAO,QACP1uG,KAAM,yBAER,CACEyuG,MAAO,QACPC,MAAO,IACP1uG,KAAM,YAER,CACE2uG,aAAc,kBAGlBC,sBAAuB,CACrB,CACEH,MAAO,oCACPC,MAAO,6CAET,CACED,MAAO,2BACPC,MAAO,IACP1uG,KAAM,SAER,CACEyuG,MAAO,2BACPC,MAAO,KAET,CACED,MAAO,QACPC,MAAO,IACP1uG,KAAM,YAER,CACE2uG,aAAc,kCAGlBE,mBAAoB,CAClB,CACEJ,MAAO,qBACPC,MAAOT,GAET,CACEQ,MAAO,uBACPC,MAAO,SAET,CACED,MAAO,uBACPC,MAAO,KAET,CACED,MAAO,QACPC,MAAO,GACP1uG,KAAM,aAGV8uG,SAAU,CACR,CACEL,MAAO,2BACPC,MAAOL,GAET,CACEI,MAAO,SACPC,MAAO,QACPK,gBAAgB,GAElB,CACEN,MAAO,SACPC,MAAO,MACP1uG,KAAM,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CP,KAAM,YAER,CACE,MAAO,mBACP,MAAO,gDAET,CACE,MAAO,mBACP,MAAO,gDAET,CACE,MAAO,CACL,eACA,uBACA,mBACA,uBACA,uBACA,OACA,oBAEF,MACE,IAAM,EAAkB,0BAA4B,EAAkB,aACxE,KAAM,sBAER,CACE,MAAO,CACL,eACA,uBACA,uBACA,OACA,mBACA,OACA,eACA,OACA,gBAEF,MACE,IACA,EACA,UACA,EACA,wCACF,KAAM,sBAER,CACE,MAAO,CACL,uBACA,OACA,mBACA,OACA,eACA,OACA,gBAEF,MAAO,IAAM,EAAkB,wCAC/B,KAAM,sBAER,CACE,MAAO,CACL,eACA,uBACA,uBACA,OACA,mBACA,OACA,eACA,OACA,uBACA,OACA,gBAEF,MACE,IACA,EACA,UACA,EACA,oDACF,KAAM,sBAER,CACE,MAAO,CAAC,eAAgB,OAAQ,uBAAwB,OAAQ,gBAChE,MAAO,oBAAsB,EAAkB,eAC/C,KAAM,sBAER,CACE,MAAO,CACL,uBACA,OACA,uBACA,OACA,eACA,OACA,gBAEF,MAAO,IAAM,EAAkB,wCAC/B,KAAM,sBAER,CACE,MAAO,CAAC,OAAQ,OAAQ,eAAgB,OAAQ,gBAChD,MAAO,iCACP,KAAM,sBAER,CACE,MAAO,UACP,MAAO,sBAET,CACE,MAAO,UACP,MAAO,qBACP,KAAM,SAER,CACE,MAAO,CAAC,oBACR,MAAO,UAET,CACE,MAAO,CAAC,qBACR,MAAO,2EAET,CACE,MAAO,EACP,MAAO,GAET,CACE,MAAO,oBACP,MAAO,aACP,KAAM,YAER,CACE,MAAO,eACP,MAAO,MAET,CACE,MAAO,mBACP,MAAO,yCACP,KAAM,SAER,CACE,MAAO,uBACP,MAAO,UACP,KAAM,SAER,CACE,MAAO,eACP,MAAO,SACP,KAAM,SAER,CACE,MAAO,eACP,MAAO,UAET,CACE,MAAO,UACP,MAAO,WAGX,SAAU,CACR,CACE,MAAO,OACP,MAAO,QAET,CACE,MAAO,CACL,eACA,uBACA,uBACA,OACA,mBACA,OACA,eACA,OACA,uBACA,OACA,gBAEF,MACE,IACA,EACA,UACA,EACA,yDACF,KAAM,sBAER,CACE,MAAO,uBACP,MAAO,cAET,CACE,MAAO,oBACP,MACE,qvDAEJ,CACE,MAAO,wBACP,MACE,+lBAEJ,CACE,MAAO,mBACP,MACE,y2DAEJ,CACE,MAAO,aACP,MAAO,GAET,CACE,MAAO,GACP,MAAO,QACP,KAAM,aAGV,MAAO,CACL,EAAyB,aAAa,aACtC,EAAS,SACT,CACE,MAAO,gBACP,MAAO,MACP,KAAM,SAER,CACE,MAAO,OACP,MAAO,UACP,KAAM,SAER,CACE,MAAO,QACP,MAAO,GACP,KAAM,aAGV,MAAO,CACL,CACE,MAAO,0BACP,MAAO,6CAET,CACE,MAAO,gBACP,MAAO,cACP,KAAM,YAER,CACE,MAAO,UACP,MAAO,iDAET,CACE,MAAO,2BACP,MAAO,iDAET,CACE,MAAO,8BACP,MAAO,MAET,CACE,MAAO,2BACP,MAAO,QACP,KAAM,yBAER,CACE,MAAO,QACP,MAAO,IACP,KAAM,YAER,CACE,aAAc,kBAGlB,sBAAuB,CACrB,CACE,MAAO,oCACP,MAAO,6CAET,CACE,MAAO,2BACP,MAAO,IACP,KAAM,SAER,CACE,MAAO,2BACP,MAAO,KAET,CACE,MAAO,QACP,MAAO,IACP,KAAM,YAER,CACE,aAAc,kCAGlB,mBAAoB,CAClB,CACE,MAAO,qBACP,MAAO,GAET,CACE,MAAO,uBACP,MAAO,SAET,CACE,MAAO,uBACP,MAAO,KAET,CACE,MAAO,QACP,MAAO,GACP,KAAM,aAGV,SAAU,CACR,CACE,MAAO,2BACP,MAAO,GAET,CACE,MAAO,SACP,MAAO,QACP,gBAAgB,GAElB,CACE,MAAO,SACP,MAAO,MACP,KAAM,YAER,CACE,aAAc,WAGlB,QAAS,CACP,CACE,MAAO,2BACP,MAAO,GAET,CACE,MAAO,SACP,MAAO,QACP,gBAAgB,GAElB,CACE,MAAO,SACP,MAAO,MACP,KAAM,YAER,CACE,aAAc,YAKf,GAAY,EAAQ,QAEvB,KAAK,OAAO,SAAS,QACnB,CACE,MAAO,OAEP,QAAS,SAAU,EAAK,EAAO,GAE7B,GADA,KAA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","file":"static/js/main.99872c45.chunk.js","sourcesContent":["import { Intent, IToastProps, Position, Toaster } from '@blueprintjs/core';\n\nconst notification = Toaster.create({\n  position: Position.TOP\n});\n\nexport const showSuccessMessage = (\n  message: string | JSX.Element,\n  timeout: number = 2000,\n  key?: string\n) =>\n  notification.show(\n    {\n      intent: Intent.SUCCESS,\n      message,\n      timeout\n    },\n    key\n  );\n\nexport const showWarningMessage = (\n  message: string | JSX.Element,\n  timeout: number = 2000,\n  key?: string\n) =>\n  notification.show(\n    {\n      intent: Intent.WARNING,\n      message,\n      timeout\n    },\n    key\n  );\n\nexport const showDangerMessage = (\n  message: string | JSX.Element,\n  timeout: number = 2000,\n  key?: string\n) =>\n  notification.show(\n    {\n      intent: Intent.DANGER,\n      message,\n      timeout\n    },\n    key\n  );\n\nexport const showMessage = (props: IToastProps, key?: string) => notification.show(props, key);\n\nexport const dismiss = (key: string) => notification.dismiss(key);\n","/* tslint:disable: ban-types*/\nimport createSlangContext from 'Clang-slang/dist/createContext';\nimport { Context, Value, Variant } from 'Clang-slang/dist/types';\nimport { stringify } from 'Clang-slang/dist/utils/stringify';\nimport { difference, keys } from 'lodash';\nimport EnvVisualizer from 'src/features/envVisualizer/EnvVisualizer';\n\nimport DataVisualizer from '../../features/dataVisualizer/dataVisualizer';\nimport { Data } from '../../features/dataVisualizer/dataVisualizerTypes';\nimport DisplayBufferService from './DisplayBufferService';\n\n/**\n * This file contains wrappers for certain functions\n * in the @source-academy/slang module.\n *\n * Use this file especially when attempting to create a slang Context.\n */\n\n/**\n * Function that takes a value and displays it in the interpreter.\n * It uses the calc-slang stringify to convert values into a \"nicer\"\n * output. e.g. [1, 2, 3] displays as [1, 2, 3].\n * An action is dispatched using the redux store reference\n * within the global window object.\n *\n * @param value the value to be displayed\n * @param workspaceLocation used to determine\n *   which REPL the value shows up in.\n */\nfunction display(value: Value, str: string, workspaceLocation: any) {\n  display((str === undefined ? '' : str + ' ') + stringify(value), '', workspaceLocation);\n  return value;\n}\n\n/**\n * Function that takes a value and displays it in the interpreter.\n * The value is displayed however full JS would convert it to a string.\n * e.g. [1, 2, 3] would be displayed as 1,2,3.\n * An action is dispatched using the redux store reference\n * within the global window object.\n *\n * @param value the value to be displayed\n * @param workspaceLocation used to determine\n *   which REPL the value shows up in.\n */\nfunction rawDisplay(value: Value, str: string, workspaceLocation: any) {\n  const output = (str === undefined ? '' : str + ' ') + String(value);\n  DisplayBufferService.push(output, workspaceLocation);\n\n  return value;\n}\n\n/**\n * A function to prompt the user using a popup.\n * The function is not called 'prompt' to prevent shadowing.\n *\n * @param value the value to be displayed as a prompt\n */\nfunction cadetPrompt(value: any) {\n  return prompt(value);\n}\n\n/**\n * A function to alert the user using the browser's alert()\n * function.\n *\n * @param value the value to alert the user with\n */\nfunction cadetAlert(value: any) {\n  alert(stringify(value));\n}\n\n/**\n * A dummy function to pass into createContext.\n * An actual implementation will have to be added\n * with the data visualizer implementation. See #187\n *\n * @param args the data to be visualized.\n */\nfunction visualizeData(...args: Data[]) {\n  try {\n    // Pass in args[0] since args is in the form; [(Array of drawables), \"playground\"]\n    DataVisualizer.drawData(args[0]);\n\n    // If there is only one arg, just print out the first arg in REPL, instead of [first arg]\n    return args[0].length === 1 ? args[0][0] : args[0];\n  } catch (err) {\n    console.log(err);\n    throw new Error('Data visualizer is not enabled');\n  }\n}\n\nexport function visualizeEnv({ context }: { context: Context }) {\n  try {\n    EnvVisualizer.drawEnv(context);\n  } catch (err) {\n    throw new Error('Env visualizer is not enabled');\n  }\n}\n\nexport function highlightClean() {\n  if ((window as any).Inspector) {\n    (window as any).Inspector.highlightClean();\n  } else {\n    throw new Error('Inspector not loaded');\n  }\n}\n\nexport function highlightLine(line: number) {\n  if ((window as any).Inspector) {\n    (window as any).Inspector.highlightLine(line);\n  } else {\n    throw new Error('Inspector not loaded');\n  }\n}\n\nexport const externalBuiltIns = {\n  display,\n  rawDisplay,\n  prompt: cadetPrompt,\n  alert: cadetAlert,\n  visualiseList: visualizeData\n};\n\n/**\n * A wrapper around calc-slang's createContext. This\n * provides the original function with the required\n * externalBuiltIns, such as display and prompt.\n */\nexport function createContext<T>(\n  externals: string[],\n  externalContext: T,\n  variant: Variant = Variant.DEFAULT\n) {\n  return createSlangContext<T>(variant, externals, externalContext);\n}\n\n// Given a Context, returns a privileged Context that when referenced,\n// intercepts reads from the underlying Context and returns desired values\nexport function makeElevatedContext(context: Context) {\n  function ProxyFrame() {}\n  ProxyFrame.prototype = context.runtime.environments[0].head;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const fakeFrame: { [key: string]: any } = new ProxyFrame();\n  // Explanation: Proxy doesn't work for defineProperty in use-strict.\n  // The calc-slang will defineProperty on loadStandardLibraries\n  // Creating a raw JS object and setting prototype will allow defineProperty on the child\n  // while reflection should work on parent.\n\n  const proxyGlobalEnv = new Proxy(context.runtime.environments[0], {\n    get(target, prop: string | symbol, receiver) {\n      if (prop === 'head') {\n        return fakeFrame;\n      }\n      return target[prop];\n    }\n  });\n\n  const proxyEnvs = new Proxy(context.runtime.environments, {\n    get(target, prop, receiver) {\n      if (prop === '0') {\n        return proxyGlobalEnv;\n      }\n      return target[prop];\n    }\n  });\n\n  const proxyRuntime = new Proxy(context.runtime, {\n    get(target, prop, receiver) {\n      if (prop === 'environments') {\n        return proxyEnvs;\n      }\n      return target[prop];\n    }\n  });\n\n  const elevatedContext = new Proxy(context, {\n    get(target, prop, receiver) {\n      switch (prop) {\n        case 'chapter':\n          return 4;\n        case 'runtime':\n          return proxyRuntime;\n        default:\n          return target[prop];\n      }\n    }\n  });\n\n  return elevatedContext;\n}\n\nexport function getDifferenceInMethods(elevatedContext: Context, context: Context) {\n  const eFrame = elevatedContext.runtime.environments[0].head;\n  const frame = context.runtime.environments[0].head;\n  return difference(keys(eFrame), keys(frame));\n}\n\nexport function getStoreExtraMethodsString(toRemove: string[], unblockKey: string) {\n  return `const _____${unblockKey} = [${toRemove.join(', ')}];`;\n}\n\nexport function getRestoreExtraMethodsString(removed: string[], unblockKey: string) {\n  const store = `_____${unblockKey}`;\n  return removed\n    .map((x, key) => (x === 'makeUndefinedErrorFunction' ? '' : `const ${x} = ${store}[${key}];`))\n    .join('\\n');\n}\n\nexport function getBlockExtraMethodsString(toRemove: string[]) {\n  return toRemove\n    .map(x =>\n      x === 'makeUndefinedErrorFunction' ? '' : `const ${x} = makeUndefinedErrorFunction('${x}');`\n    )\n    .join('\\n');\n}\n","export type Notification = {\n  assessment_id?: number;\n  assessment_type?: string;\n  assessment_title?: string;\n  id: number;\n  submission_id?: number;\n  type: NotificationType;\n};\n\nexport enum NotificationTypes {\n  new = 'new',\n  deadline = 'deadline',\n  autograded = 'autograded',\n  graded = 'graded',\n  submitted = 'submitted',\n  unsubmitted = 'unsubmitted',\n  new_message = 'new_message'\n}\n\nexport type NotificationType = keyof typeof NotificationTypes;\n\nexport type NotificationFilterFunction = (notifications: Notification[]) => Notification[];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lineTreeToString = exports.stringDagToSingleLine = exports.stringDagToLineTree = exports.valueToStringDag = exports.typeToString = exports.stringify = void 0;\nconst constants_1 = require(\"../constants\");\nconst operators_1 = require(\"./operators\");\nfunction isArrayLike(v) {\n    return (typeof v.replPrefix === 'string' &&\n        typeof v.replSuffix === 'string' &&\n        typeof v.replArrayContents === 'function');\n}\nconst stringify = (value, indent = 2, splitlineThreshold = 80) => {\n    value = (0, operators_1.forceIt)(value);\n    if (typeof indent === 'string') {\n        throw 'stringify with arbitrary indent string not supported';\n    }\n    let indentN = indent;\n    if (indent > 10) {\n        indentN = 10;\n    }\n    return lineTreeToString(stringDagToLineTree(valueToStringDag(value), indentN, splitlineThreshold));\n};\nexports.stringify = stringify;\nfunction typeToString(type) {\n    return niceTypeToString(type);\n}\nexports.typeToString = typeToString;\nfunction niceTypeToString(type, nameMap = { _next: 0 }) {\n    function curriedTypeToString(t) {\n        return niceTypeToString(t, nameMap);\n    }\n    switch (type.kind) {\n        case 'primitive':\n            return type.name;\n        case 'variable':\n            if (type.constraint && type.constraint !== 'none') {\n                return type.constraint;\n            }\n            if (!(type.name in nameMap)) {\n                // type name is not in map, so add it\n                nameMap[type.name] = 'T' + nameMap._next++;\n            }\n            return nameMap[type.name];\n        case 'list':\n            return `List<${curriedTypeToString(type.elementType)}>`;\n        case 'array':\n            return `Array<${curriedTypeToString(type.elementType)}>`;\n        case 'pair':\n            const headType = curriedTypeToString(type.headType);\n            // convert [T1 , List<T1>] back to List<T1>\n            if (type.tailType.kind === 'list' &&\n                headType === curriedTypeToString(type.tailType.elementType))\n                return `List<${headType}>`;\n            return `[${curriedTypeToString(type.headType)}, ${curriedTypeToString(type.tailType)}]`;\n        case 'function':\n            let parametersString = type.parameterTypes.map(curriedTypeToString).join(', ');\n            if (type.parameterTypes.length !== 1 || type.parameterTypes[0].kind === 'function') {\n                parametersString = `(${parametersString})`;\n            }\n            return `${parametersString} -> ${curriedTypeToString(type.returnType)}`;\n        default:\n            return 'Unable to infer type';\n    }\n}\nfunction valueToStringDag(value) {\n    const ancestors = new Map();\n    const memo = new Map();\n    function convertPair(value) {\n        const memoResult = memo.get(value);\n        if (memoResult !== undefined) {\n            return [memoResult, false];\n        }\n        ancestors.set(value, ancestors.size);\n        const elems = value;\n        const [headDag, headIsCircular] = convert(elems[0]);\n        const [tailDag, tailIsCircular] = convert(elems[1]);\n        const isCircular = headIsCircular || tailIsCircular;\n        ancestors.delete(value);\n        const result = {\n            type: 'pair',\n            head: headDag,\n            tail: tailDag,\n            length: headDag.length + tailDag.length + 4\n        };\n        if (!isCircular) {\n            memo.set(value, result);\n        }\n        return [result, isCircular];\n    }\n    function convertArrayLike(value, elems, prefix, suffix) {\n        const memoResult = memo.get(value);\n        if (memoResult !== undefined) {\n            return [memoResult, false];\n        }\n        ancestors.set(value, ancestors.size);\n        const converted = elems.map(convert);\n        let length = prefix.length + suffix.length + Math.max(0, converted.length - 1) * 2;\n        let isCircular = false;\n        for (let i = 0; i < converted.length; i++) {\n            if (converted[i] == null) {\n                // the `elems.map` above preserves the sparseness of the array\n                converted[i] = convert(undefined);\n            }\n            length += converted[i][0].length;\n            isCircular || (isCircular = converted[i][1]);\n        }\n        ancestors.delete(value);\n        const result = {\n            type: 'arraylike',\n            elems: converted.map(c => c[0]),\n            prefix: prefix,\n            suffix: suffix,\n            length: length\n        };\n        if (!isCircular) {\n            memo.set(value, result);\n        }\n        return [result, isCircular];\n    }\n    function convertObject(value) {\n        const memoResult = memo.get(value);\n        if (memoResult !== undefined) {\n            return [memoResult, false];\n        }\n        ancestors.set(value, ancestors.size);\n        const entries = Object.entries(value);\n        const converted = entries.map(kv => convert(kv[1]));\n        let length = 2 + Math.max(0, entries.length - 1) * 2 + entries.length * 2;\n        let isCircular = false;\n        const kvpairs = [];\n        for (let i = 0; i < converted.length; i++) {\n            length += entries[i][0].length;\n            length += converted[i].length;\n            isCircular || (isCircular = converted[i][1]);\n            kvpairs.push({\n                type: 'kvpair',\n                key: entries[i][0],\n                value: converted[i][0],\n                length: converted[i][0].length + entries[i][0].length\n            });\n        }\n        ancestors.delete(value);\n        const result = {\n            type: 'arraylike',\n            elems: kvpairs,\n            prefix: '{',\n            suffix: '}',\n            length: length\n        };\n        if (!isCircular) {\n            memo.set(value, result);\n        }\n        return [result, isCircular];\n    }\n    function convertRepr(repr) {\n        const lines = repr.split('\\n');\n        return lines.length === 1\n            ? [{ type: 'terminal', str: lines[0], length: lines[0].length }, false]\n            : [{ type: 'multiline', lines, length: Infinity }, false];\n    }\n    function convert(v) {\n        if (v === null) {\n            return [{ type: 'terminal', str: 'null', length: 4 }, false];\n        }\n        else if (v === undefined) {\n            return [{ type: 'terminal', str: 'undefined', length: 9 }, false];\n        }\n        else if (ancestors.has(v)) {\n            return [{ type: 'terminal', str: '...<circular>', length: 13 }, true];\n        }\n        else if (typeof v === 'string') {\n            const str = JSON.stringify(v);\n            return [{ type: 'terminal', str: str, length: str.length }, false];\n        }\n        else if (typeof v !== 'object') {\n            return convertRepr(v.toString());\n        }\n        else if (ancestors.size > constants_1.MAX_LIST_DISPLAY_LENGTH) {\n            return [{ type: 'terminal', str: '...<truncated>', length: 14 }, false];\n        }\n        else if (typeof v.toReplString === 'function') {\n            return convertRepr(v.toReplString());\n        }\n        else if (Array.isArray(v)) {\n            if (v.length === 2) {\n                return convertPair(v);\n            }\n            else {\n                return convertArrayLike(v, v, '[', ']');\n            }\n        }\n        else if (isArrayLike(v)) {\n            return convertArrayLike(v, v.replArrayContents(), v.replPrefix, v.replSuffix);\n        }\n        else {\n            // use prototype chain to check if it is literal object\n            return Object.getPrototypeOf(v) === Object.prototype\n                ? convertObject(v)\n                : convertRepr(v.toString());\n        }\n    }\n    return convert(value)[0];\n}\nexports.valueToStringDag = valueToStringDag;\nfunction stringDagToLineTree(dag, indent, splitlineThreshold) {\n    // precompute some useful strings\n    const indentSpacesMinusOne = ' '.repeat(Math.max(0, indent - 1));\n    const bracketAndIndentSpacesMinusOne = '[' + indentSpacesMinusOne;\n    const memo = new Map();\n    function format(dag) {\n        const memoResult = memo.get(dag);\n        if (memoResult !== undefined) {\n            return memoResult;\n        }\n        let result;\n        if (dag.type === 'terminal') {\n            result = { type: 'line', line: dag };\n        }\n        else if (dag.type === 'multiline') {\n            result = {\n                type: 'block',\n                prefixFirst: '',\n                prefixRest: '',\n                block: dag.lines.map(s => ({\n                    type: 'line',\n                    line: { type: 'terminal', str: s, length: s.length }\n                })),\n                suffixRest: '',\n                suffixLast: ''\n            };\n        }\n        else if (dag.type === 'pair') {\n            const headTree = format(dag.head);\n            const tailTree = format(dag.tail);\n            // - 2 is there for backward compatibility\n            if (dag.length - 2 > splitlineThreshold ||\n                headTree.type !== 'line' ||\n                tailTree.type !== 'line') {\n                result = {\n                    type: 'block',\n                    prefixFirst: bracketAndIndentSpacesMinusOne,\n                    prefixRest: '',\n                    block: [headTree, tailTree],\n                    suffixRest: ',',\n                    suffixLast: ']'\n                };\n            }\n            else {\n                result = {\n                    type: 'line',\n                    line: dag\n                };\n            }\n        }\n        else if (dag.type === 'arraylike') {\n            const elemTrees = dag.elems.map(format);\n            if (dag.length - dag.prefix.length - dag.suffix.length > splitlineThreshold ||\n                elemTrees.some(t => t.type !== 'line')) {\n                result = {\n                    type: 'block',\n                    prefixFirst: dag.prefix + ' '.repeat(Math.max(0, indent - dag.prefix.length)),\n                    prefixRest: ' '.repeat(Math.max(dag.prefix.length, indent)),\n                    block: elemTrees,\n                    suffixRest: ',',\n                    suffixLast: dag.suffix\n                };\n            }\n            else {\n                result = {\n                    type: 'line',\n                    line: dag\n                };\n            }\n        }\n        else if (dag.type === 'kvpair') {\n            const valueTree = format(dag.value);\n            if (dag.length > splitlineThreshold || valueTree.type !== 'line') {\n                result = {\n                    type: 'block',\n                    prefixFirst: '',\n                    prefixRest: '',\n                    block: [\n                        { type: 'line', line: { type: 'terminal', str: JSON.stringify(dag.key), length: 0 } },\n                        valueTree\n                    ],\n                    suffixRest: ':',\n                    suffixLast: ''\n                };\n            }\n            else {\n                result = {\n                    type: 'line',\n                    line: dag\n                };\n            }\n        }\n        else {\n            throw 'up';\n        }\n        memo.set(dag, result);\n        return result;\n    }\n    return format(dag);\n}\nexports.stringDagToLineTree = stringDagToLineTree;\nfunction stringDagToSingleLine(dag) {\n    function print(dag, total) {\n        if (dag.type === 'multiline') {\n            throw 'Tried to format multiline string as single line string';\n        }\n        else if (dag.type === 'terminal') {\n            total.push(dag.str);\n        }\n        else if (dag.type === 'pair') {\n            total.push('[');\n            print(dag.head, total);\n            total.push(', ');\n            print(dag.tail, total);\n            total.push(']');\n        }\n        else if (dag.type === 'kvpair') {\n            total.push(JSON.stringify(dag.key));\n            total.push(': ');\n            print(dag.value, total);\n        }\n        else if (dag.type === 'arraylike') {\n            total.push(dag.prefix);\n            if (dag.elems.length > 0) {\n                print(dag.elems[0], total);\n            }\n            for (let i = 1; i < dag.elems.length; i++) {\n                total.push(', ');\n                print(dag.elems[i], total);\n            }\n            total.push(dag.suffix);\n        }\n        return total;\n    }\n    return print(dag, []).join('');\n}\nexports.stringDagToSingleLine = stringDagToSingleLine;\nfunction lineTreeToString(tree) {\n    let total = '';\n    const stringDagToLineMemo = new Map();\n    const stringDagToMultilineMemo = new Map();\n    function print(tree, lineSep) {\n        const multilineMemoResult = stringDagToMultilineMemo.get(tree);\n        if (multilineMemoResult !== undefined) {\n            const startEnd = multilineMemoResult.get(lineSep.length);\n            if (startEnd !== undefined) {\n                total += total.substring(startEnd[0], startEnd[1]);\n                return;\n            }\n        }\n        const start = total.length;\n        if (tree.type === 'line') {\n            if (!stringDagToLineMemo.has(tree.line)) {\n                stringDagToLineMemo.set(tree.line, stringDagToSingleLine(tree.line));\n            }\n            total += stringDagToLineMemo.get(tree.line);\n        }\n        else if (tree.type === 'block') {\n            total += tree.prefixFirst;\n            const indentedLineSepFirst = lineSep + ' '.repeat(tree.prefixFirst.length);\n            const indentedLineSepRest = lineSep + tree.prefixRest;\n            print(tree.block[0], indentedLineSepFirst);\n            for (let i = 1; i < tree.block.length; i++) {\n                total += tree.suffixRest;\n                total += indentedLineSepRest;\n                print(tree.block[i], indentedLineSepRest);\n            }\n            total += tree.suffixLast;\n        }\n        const end = total.length;\n        if (multilineMemoResult === undefined) {\n            const newmap = new Map();\n            newmap.set(lineSep.length, [start, end]);\n            stringDagToMultilineMemo.set(tree, newmap);\n        }\n        else {\n            multilineMemoResult.set(lineSep.length, [start, end]);\n        }\n    }\n    print(tree, '\\n');\n    return total;\n}\nexports.lineTreeToString = lineTreeToString;\n//# sourceMappingURL=stringify.js.map","import { PersistenceFile } from '../persistence/PersistenceTypes';\n\nexport const CHANGE_QUERY_STRING = 'CHANGE_QUERY_STRING';\nexport const GENERATE_LZ_STRING = 'GENERATE_LZ_STRING';\nexport const SHORTEN_URL = 'SHORTEN_URL';\nexport const UPDATE_SHORT_URL = 'UPDATE_SHORT_URL';\nexport const PLAYGROUND_UPDATE_GITHUB_SAVE_INFO = 'PLAYGROUND_UPDATE_GITHUB_SAVE_INFO';\nexport const PLAYGROUND_UPDATE_PERSISTENCE_FILE = 'PLAYGROUND_UPDATE_PERSISTENCE_FILE';\n\nexport type PlaygroundState = {\n  readonly queryString?: string;\n  readonly shortURL?: string;\n  readonly persistenceFile?: PersistenceFile;\n  readonly githubSaveInfo: { repoName: string; filePath: string };\n};\n","import { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\n\ntype ControlBarClearButtonProps = {\n  handleReplOutputClear: () => void;\n};\n\nexport const ControlBarClearButton: React.FC<ControlBarClearButtonProps> = ({\n  handleReplOutputClear\n}) => {\n  return <ControlButton label=\"Clear\" icon={IconNames.REMOVE} onClick={handleReplOutputClear} />;\n};\n","import { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\n\ntype ControlBarEvalButtonProps = {\n  handleReplEval: () => void;\n  isRunning: boolean;\n};\n\nexport const ControlBarEvalButton: React.FC<ControlBarEvalButtonProps> = ({\n  handleReplEval,\n  isRunning\n}) => {\n  return isRunning ? null : (\n    <Tooltip2 content=\"...or press shift-enter in the REPL\">\n      <ControlButton label=\"Eval\" icon={IconNames.CODE} onClick={handleReplEval} />\n    </Tooltip2>\n  );\n};\n","import { Card, Icon, IconName } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { SideContentType } from '../sideContent/SideContentTypes';\n\n/**\n * @property label The displayed name of the tab.\n * @property body The element to be rendered inside the sidebar tab.\n * @property iconName The name of the displayed icon.\n * @property id The ID of the tab when displayed as a side content on the mobile view.\n *              Omit if the tab should only be shown in the sidebar on the desktop view.\n */\nexport type SideBarTab = {\n  label: string;\n  body: JSX.Element;\n  iconName: IconName;\n  id?: SideContentType;\n};\n\nexport type SideBarProps = {\n  tabs: SideBarTab[];\n  isExpanded: boolean;\n  expandSideBar: () => void;\n  collapseSideBar: () => void;\n};\n\nconst SideBar: React.FC<SideBarProps> = (props: SideBarProps) => {\n  const { tabs, isExpanded, expandSideBar, collapseSideBar } = props;\n\n  const [selectedTabIndex, setSelectedTabIndex] = React.useState<number>(0);\n\n  const handleTabSelection = (tabIndex: number) => {\n    if (selectedTabIndex === tabIndex) {\n      if (isExpanded) {\n        collapseSideBar();\n      } else {\n        expandSideBar();\n      }\n      return;\n    }\n    setSelectedTabIndex(tabIndex);\n    expandSideBar();\n  };\n\n  // Do not render the sidebar if there are no tabs.\n  if (tabs.length === 0) {\n    return <div className=\"sidebar-container\" />;\n  }\n\n  return (\n    <div className=\"sidebar-container\">\n      <div className=\"tab-container\">\n        {tabs.map((tab, index) => (\n          <Card\n            key={index}\n            className={classNames('tab', { selected: isExpanded && selectedTabIndex === index })}\n            onClick={() => handleTabSelection(index)}\n          >\n            <Icon className=\"tab-icon\" icon={tab.iconName} size={14} />\n            {tab.label}\n          </Card>\n        ))}\n      </div>\n      {selectedTabIndex !== null && <Card className=\"panel\">{tabs[selectedTabIndex].body}</Card>}\n    </div>\n  );\n};\n\nexport default SideBar;\n","import { Card, Icon, Tab, TabProps, Tabs } from '@blueprintjs/core';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport * as React from 'react';\n\nimport { propsAreEqual } from '../utils/MemoizeHelper';\nimport { assertType } from '../utils/TypeHelper';\nimport { WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport GenericSideContent, { generateIconId, GenericSideContentProps } from './GenericSideContent';\nimport { SideContentTab, SideContentType } from './SideContentTypes';\n\n/**\n * @property onChange A function that is called whenever the\n * active tab is changed by the user.\n *\n * @property tabs An array of SideContentTabs.\n *  The tabs will be rendered in order of the array.\n *  If this array is empty, no tabs will be rendered.\n *\n * @property renderActiveTabPanelOnly Set this property to\n * true to enable unmounting of tab panels whenever tabs are\n * switched. If it is left undefined, the value will default\n * to false, and the tab panels will all be loaded with the\n * mounting of the SideContent component. Switching tabs\n * will merely hide them from view.\n */\nexport type SideContentProps = Omit<GenericSideContentProps, 'renderFunction'> & StateProps;\n\ntype StateProps = {\n  selectedTabId?: SideContentType; // Optional due to uncontrolled tab component in EditingWorkspace\n  renderActiveTabPanelOnly?: boolean;\n  editorWidth?: string;\n  sideContentHeight?: number;\n};\n\n/**\n * Adds 'side-content-tab-alert' style to newly spawned module tabs or HTML Display tab\n */\nconst generateClassName = (id: string | undefined) =>\n  id === SideContentType.module || id === SideContentType.htmlDisplay\n    ? 'side-content-tooltip side-content-tab-alert'\n    : 'side-content-tooltip';\n\nconst renderTab = (\n  tab: SideContentTab,\n  workspaceLocation?: WorkspaceLocation,\n  editorWidth?: string,\n  sideContentHeight?: number\n) => {\n  const iconSize = 20;\n  const tabId = tab.id === undefined || tab.id === SideContentType.module ? tab.label : tab.id;\n  const tabTitle = (\n    <Tooltip2 content={tab.label}>\n      <div className={generateClassName(tab.id)} id={generateIconId(tabId)}>\n        <Icon icon={tab.iconName} iconSize={iconSize} />\n      </div>\n    </Tooltip2>\n  );\n  const tabProps = assertType<TabProps>()({\n    id: tabId,\n    title: tabTitle,\n    disabled: tab.disabled,\n    className: 'side-content-tab'\n  });\n\n  if (!tab.body) {\n    return <Tab key={tabId} {...tabProps} />;\n  }\n\n  const tabBody: JSX.Element = workspaceLocation\n    ? {\n        ...tab.body,\n        props: {\n          ...tab.body.props,\n          workspaceLocation,\n          editorWidth,\n          sideContentHeight\n        }\n      }\n    : tab.body;\n  const tabPanel: JSX.Element = <div className=\"side-content-text\">{tabBody}</div>;\n\n  return <Tab key={tabId} {...tabProps} panel={tabPanel} />;\n};\n\nconst SideContent: React.FC<SideContentProps> = React.memo(\n  ({ selectedTabId, renderActiveTabPanelOnly, editorWidth, sideContentHeight, ...otherProps }) => {\n    return (\n      <GenericSideContent\n        {...otherProps}\n        renderFunction={(dynamicTabs, changeTabsCallback) => (\n          <div className=\"side-content\">\n            <Card>\n              <div className=\"side-content-tabs\">\n                <Tabs\n                  id=\"side-content-tabs\"\n                  onChange={changeTabsCallback}\n                  renderActiveTabPanelOnly={renderActiveTabPanelOnly}\n                  selectedTabId={selectedTabId}\n                >\n                  {dynamicTabs.map(tab =>\n                    renderTab(tab, otherProps.workspaceLocation, editorWidth, sideContentHeight)\n                  )}\n                </Tabs>\n              </div>\n            </Card>\n          </div>\n        )}\n      />\n    );\n  },\n  propsAreEqual\n);\n\nexport default SideContent;\n","import { FocusStyleManager } from '@blueprintjs/core';\nimport { Enable, NumberSize, Resizable, ResizableProps, ResizeCallback } from 're-resizable';\nimport { Direction } from 're-resizable/lib/resizer';\nimport * as React from 'react';\nimport { Prompt } from 'react-router';\n\nimport ControlBar, { ControlBarProps } from '../controlBar/ControlBar';\nimport EditorContainer, { EditorContainerProps } from '../editor/EditorContainer';\nimport McqChooser, { McqChooserProps } from '../mcqChooser/McqChooser';\nimport Repl, { ReplProps } from '../repl/Repl';\nimport SideBar, { SideBarTab } from '../sideBar/SideBar';\nimport SideContent, { SideContentProps } from '../sideContent/SideContent';\nimport { useDimensions } from '../utils/Hooks';\n\nexport type WorkspaceProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleSideContentHeightChange: (height: number) => void;\n};\n\ntype StateProps = {\n  // Either editorProps or mcqProps must be provided\n  controlBarProps: ControlBarProps;\n  editorContainerProps?: EditorContainerProps;\n  hasUnsavedChanges?: boolean;\n  mcqProps?: McqChooserProps;\n  replProps: ReplProps;\n  sideBarProps: {\n    tabs: SideBarTab[];\n  };\n  sideContentHeight?: number;\n  sideContentProps: SideContentProps;\n  sideContentIsResizeable?: boolean;\n};\n\nconst Workspace: React.FC<WorkspaceProps> = props => {\n  const sideBarResizable = React.useRef<Resizable | null>(null);\n  const contentContainerDiv = React.useRef<HTMLDivElement | null>(null);\n  const editorDividerDiv = React.useRef<HTMLDivElement | null>(null);\n  const leftParentResizable = React.useRef<Resizable | null>(null);\n  const maxDividerHeight = React.useRef<number | null>(null);\n  const sideDividerDiv = React.useRef<HTMLDivElement | null>(null);\n  const [contentContainerWidth] = useDimensions(contentContainerDiv);\n  const [lastExpandedSideBarWidth, setLastExpandedSideBarWidth] = React.useState<number>(200);\n  const [isSideBarExpanded, setIsSideBarExpanded] = React.useState<boolean>(false);\n\n  const sideBarCollapsedWidth = 40;\n\n  const expandSideBar = () => {\n    setIsSideBarExpanded(true);\n    const sideBar = sideBarResizable.current;\n    if (sideBar === null) {\n      throw Error('Reference to SideBar not found when expanding.');\n    }\n    sideBar.updateSize({ width: lastExpandedSideBarWidth, height: '100%' });\n  };\n\n  const collapseSideBar = () => {\n    setIsSideBarExpanded(false);\n    const sideBar = sideBarResizable.current;\n    if (sideBar === null) {\n      throw Error('Reference to SideBar not found when collapsing.');\n    }\n    sideBar.updateSize({ width: sideBarCollapsedWidth, height: '100%' });\n  };\n\n  FocusStyleManager.onlyShowFocusOnTabs();\n\n  React.useEffect(() => {\n    if (props.sideContentIsResizeable && maxDividerHeight.current === null) {\n      maxDividerHeight.current = sideDividerDiv.current!.clientHeight;\n    }\n  });\n\n  const sideBarResizableProps = () => {\n    const onResizeStop: ResizeCallback = (\n      event: MouseEvent | TouchEvent,\n      direction: Direction,\n      elementRef: HTMLElement,\n      delta: NumberSize\n    ) => {\n      const sideBarWidth = elementRef.clientWidth;\n      if (sideBarWidth !== sideBarCollapsedWidth) {\n        setLastExpandedSideBarWidth(sideBarWidth);\n      }\n    };\n    const isSideBarRendered = props.sideBarProps.tabs.length !== 0;\n    const minWidth = isSideBarRendered ? sideBarCollapsedWidth : 'auto';\n    return {\n      enable: isSideBarRendered ? rightResizeOnly : noResize,\n      minWidth,\n      maxWidth: '50%',\n      onResize: toggleSideBarDividerDisplay,\n      onResizeStop,\n      ref: sideBarResizable,\n      defaultSize: { width: minWidth, height: '100%' }\n    } as ResizableProps;\n  };\n\n  const editorResizableProps = () => {\n    return {\n      className: 'resize-editor left-parent',\n      enable: rightResizeOnly,\n      minWidth: 0,\n      onResize: toggleEditorDividerDisplay,\n      ref: leftParentResizable,\n      defaultSize: { width: '50%', height: '100%' },\n      as: undefined as any // re-resizable bug - wrong typedef\n    } as ResizableProps;\n  };\n\n  const sideContentResizableProps = () => {\n    const onResizeStop: ResizeCallback = (_a, _b, ref) =>\n      props.handleSideContentHeightChange(ref.clientHeight);\n    return {\n      bounds: 'parent',\n      className: 'resize-side-content',\n      enable: bottomResizeOnly,\n      onResize: toggleDividerDisplay,\n      onResizeStop\n    } as ResizableProps;\n  };\n\n  const toggleSideBarDividerDisplay: ResizeCallback = (\n    event: MouseEvent | TouchEvent,\n    direction: Direction,\n    elementRef: HTMLElement,\n    delta: NumberSize\n  ) => {\n    const minWidthThreshold = 100;\n    const sideBarWidth = elementRef.clientWidth;\n    if (sideBarWidth < minWidthThreshold) {\n      const sideBar = sideBarResizable.current;\n      if (sideBar === null) {\n        throw Error('Reference to SideBar not found when resizing.');\n      }\n      sideBar.updateSize({ width: 40, height: '100%' });\n      setIsSideBarExpanded(false);\n    } else {\n      setIsSideBarExpanded(true);\n    }\n  };\n\n  /**\n   * Snaps the left-parent resizable to 100% or 0% when percentage width goes\n   * above 95% or below 5% respectively. Also changes the editor divider width\n   * in the case of < 5%.\n   */\n  const toggleEditorDividerDisplay: ResizeCallback = (_a, _b, ref) => {\n    const leftThreshold = 5;\n    const rightThreshold = 95;\n    const editorWidthPercentage =\n      ((ref as HTMLDivElement).clientWidth / contentContainerWidth) * 100;\n    // update resizable size\n    if (editorWidthPercentage > rightThreshold) {\n      leftParentResizable.current!.updateSize({ width: '100%', height: '100%' });\n    } else if (editorWidthPercentage < leftThreshold) {\n      leftParentResizable.current!.updateSize({ width: '0%', height: '100%' });\n    }\n  };\n\n  /**\n   * Hides the side-content-divider div when side-content is resized downwards\n   * so that it's bottom border snaps flush with editor's bottom border\n   */\n  const toggleDividerDisplay: ResizeCallback = (_a, _b, ref) => {\n    maxDividerHeight.current =\n      sideDividerDiv.current!.clientHeight > maxDividerHeight.current!\n        ? sideDividerDiv.current!.clientHeight\n        : maxDividerHeight.current;\n    const resizableHeight = (ref as HTMLDivElement).clientHeight;\n    const rightParentHeight = (ref.parentNode as HTMLDivElement).clientHeight;\n    if (resizableHeight + maxDividerHeight.current! + 2 > rightParentHeight) {\n      sideDividerDiv.current!.style.display = 'none';\n    } else {\n      sideDividerDiv.current!.style.display = 'initial';\n    }\n  };\n\n  /**\n   * Pre-condition: `props.editorProps`\n   * XOR `props.mcq` are defined.\n   */\n  const createWorkspaceInput = (props: WorkspaceProps) => {\n    if (props.editorContainerProps) {\n      return <EditorContainer {...props.editorContainerProps} />;\n    } else {\n      return <McqChooser {...props.mcqProps!} />;\n    }\n  };\n\n  const sideContent = <SideContent {...props.sideContentProps} />;\n  const resizableSideContent = (\n    <Resizable {...sideContentResizableProps()}>\n      {sideContent}\n      <div className=\"side-content-divider\" ref={sideDividerDiv} />\n    </Resizable>\n  );\n\n  return (\n    <div className=\"workspace\">\n      {props.hasUnsavedChanges ? (\n        <Prompt\n          message={'You have changes that may not be saved. Are you sure you want to leave?'}\n        />\n      ) : null}\n      <ControlBar {...props.controlBarProps} />\n      <div className=\"workspace-parent\">\n        <Resizable {...sideBarResizableProps()}>\n          <SideBar\n            {...props.sideBarProps}\n            isExpanded={isSideBarExpanded}\n            expandSideBar={expandSideBar}\n            collapseSideBar={collapseSideBar}\n          />\n        </Resizable>\n        <div className=\"row content-parent\" ref={contentContainerDiv}>\n          <div className=\"editor-divider\" ref={editorDividerDiv} />\n          <Resizable {...editorResizableProps()}>{createWorkspaceInput(props)}</Resizable>\n          <div className=\"right-parent\">\n            {props.sideContentIsResizeable === undefined || props.sideContentIsResizeable\n              ? resizableSideContent\n              : sideContent}\n            <Repl {...props.replProps} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst rightResizeOnly: Enable = { right: true };\nconst bottomResizeOnly: Enable = { bottom: true };\nconst noResize: Enable = {};\n\nexport default Workspace;\n","import { Button, Icon, IconName, Intent } from '@blueprintjs/core';\nimport React from 'react';\n\ntype ButtonOptions = {\n  className: string;\n  fullWidth: boolean;\n  iconColor?: string;\n  iconOnRight: boolean;\n  intent: Intent;\n  minimal: boolean;\n  type?: 'submit' | 'reset' | 'button';\n};\n\ntype ControlButtonProps = {\n  label?: string;\n  icon?: IconName;\n  onClick?: () => void;\n  options?: Partial<ButtonOptions>;\n  isDisabled?: boolean;\n};\n\nconst defaultOptions = {\n  className: '',\n  fullWidth: false,\n  iconOnRight: false,\n  intent: Intent.NONE,\n  minimal: true\n};\n\nconst ControlButton: React.FC<ControlButtonProps> = ({\n  label = '',\n  icon,\n  onClick,\n  options = {},\n  isDisabled = false\n}) => {\n  const buttonOptions: ButtonOptions = { ...defaultOptions, ...options };\n  const iconElement = icon && <Icon icon={icon} color={buttonOptions.iconColor} />;\n\n  return (\n    <Button\n      disabled={isDisabled}\n      fill={buttonOptions.fullWidth}\n      intent={buttonOptions.intent}\n      minimal={buttonOptions.minimal}\n      className={buttonOptions.className}\n      type={buttonOptions.type}\n      onClick={onClick}\n      icon={!buttonOptions.iconOnRight && iconElement}\n      rightIcon={buttonOptions.iconOnRight && iconElement}\n    >\n      {label}\n    </Button>\n  );\n};\n\nexport default ControlButton;\n","import { action } from 'typesafe-actions';\n\nimport { WorkspaceLocation } from '../../../commons/workspace/WorkspaceTypes';\nimport { Input, PlaybackData } from '../SourceRecorderTypes';\nimport {\n  DELETE_SOURCECAST_ENTRY,\n  RECORD_INIT,\n  RECORD_INPUT,\n  RESET_INPUTS,\n  TIMER_PAUSE,\n  TIMER_RESET,\n  TIMER_RESUME,\n  TIMER_START,\n  TIMER_STOP\n} from './SourcereelTypes';\n\nexport const deleteSourcecastEntry = (id: number, workspaceLocation: WorkspaceLocation) =>\n  action(DELETE_SOURCECAST_ENTRY, {\n    id,\n    workspaceLocation\n  });\n\nexport const recordInit = (initData: PlaybackData['init'], workspaceLocation: WorkspaceLocation) =>\n  action(RECORD_INIT, {\n    initData,\n    workspaceLocation\n  });\n\nexport const recordInput = (input: Input, workspaceLocation: WorkspaceLocation) =>\n  action(RECORD_INPUT, {\n    input,\n    workspaceLocation\n  });\n\nexport const resetInputs = (inputs: Input[], workspaceLocation: WorkspaceLocation) =>\n  action(RESET_INPUTS, {\n    inputs,\n    workspaceLocation\n  });\n\nexport const timerPause = (workspaceLocation: WorkspaceLocation) =>\n  action(TIMER_PAUSE, {\n    timeNow: Date.now(),\n    workspaceLocation\n  });\n\nexport const timerReset = (workspaceLocation: WorkspaceLocation) =>\n  action(TIMER_RESET, {\n    workspaceLocation\n  });\n\nexport const timerResume = (timeBefore: number, workspaceLocation: WorkspaceLocation) =>\n  action(TIMER_RESUME, {\n    timeBefore,\n    timeNow: Date.now(),\n    workspaceLocation\n  });\n\nexport const timerStart = (workspaceLocation: WorkspaceLocation) =>\n  action(TIMER_START, {\n    timeNow: Date.now(),\n    workspaceLocation\n  });\n\nexport const timerStop = (workspaceLocation: WorkspaceLocation) =>\n  action(TIMER_STOP, {\n    timeNow: Date.now(),\n    workspaceLocation\n  });\n","import { Button, Classes, Menu, MenuItem } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ItemListRenderer, ItemRenderer, Select } from '@blueprintjs/select';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport React from 'react';\n\nimport {\n  defaultLanguages,\n  SALanguage,\n  sourceLanguages,\n  styliseSublanguage\n} from '../application/ApplicationTypes';\n\ntype ControlBarChapterSelectProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleChapterSelect?: (i: SALanguage, e?: React.SyntheticEvent<HTMLElement>) => void;\n};\n\ntype StateProps = {\n  sourceChapter: Chapter;\n  sourceVariant: Variant;\n  disabled?: boolean;\n};\n\nconst chapterListRenderer: ItemListRenderer<SALanguage> = ({ itemsParentRef, renderItem }) => {\n  const defaultChoices = defaultLanguages.map(renderItem);\n  return <Menu ulRef={itemsParentRef}>{defaultChoices}</Menu>;\n};\n\nconst chapterRenderer: ItemRenderer<SALanguage> = (lang, { handleClick }) => (\n  <MenuItem key={lang.displayName} onClick={handleClick} text={lang.displayName} />\n);\n\nconst ChapterSelectComponent = Select.ofType<SALanguage>();\n\nexport const ControlBarChapterSelect: React.FC<ControlBarChapterSelectProps> = ({\n  sourceChapter,\n  sourceVariant,\n  handleChapterSelect = () => {},\n  disabled = false\n}) => {\n  return (\n    <ChapterSelectComponent\n      items={sourceLanguages}\n      onItemSelect={handleChapterSelect}\n      itemRenderer={chapterRenderer}\n      itemListRenderer={chapterListRenderer}\n      filterable={false}\n      disabled={disabled}\n    >\n      <Button\n        className={Classes.MINIMAL}\n        text={styliseSublanguage(sourceChapter, sourceVariant)}\n        rightIcon={disabled ? null : IconNames.DOUBLE_CARET_VERTICAL}\n        disabled={disabled}\n      />\n    </ChapterSelectComponent>\n  );\n};\n","export const SAVE_CANVAS = 'SAVE_CANVAS';\n\nexport const assessmentRegExp = ':assessmentId(\\\\d+)?/:questionId(\\\\d+)?';\nexport const gradingRegExp = ':submissionId(\\\\d+)?/:questionId(\\\\d+)?';\n\nexport const CREATE_COURSE = 'CREATE_COURSE';\nexport const ADD_NEW_USERS_TO_COURSE = 'ADD_NEW_USERS_TO_COURSE';\n\nexport type AcademyState = {\n  readonly gameCanvas?: HTMLCanvasElement;\n};\n","import { action } from 'typesafe-actions';\n\nimport { PersistenceFile } from '../persistence/PersistenceTypes';\nimport {\n  CHANGE_QUERY_STRING,\n  GENERATE_LZ_STRING,\n  PLAYGROUND_UPDATE_GITHUB_SAVE_INFO,\n  PLAYGROUND_UPDATE_PERSISTENCE_FILE,\n  SHORTEN_URL,\n  UPDATE_SHORT_URL\n} from './PlaygroundTypes';\n\nexport const generateLzString = () => action(GENERATE_LZ_STRING);\n\nexport const shortenURL = (keyword: string) => action(SHORTEN_URL, keyword);\n\nexport const updateShortURL = (shortURL: string) => action(UPDATE_SHORT_URL, shortURL);\n\nexport const changeQueryString = (queryString: string) => action(CHANGE_QUERY_STRING, queryString);\n\nexport const playgroundUpdatePersistenceFile = (file?: PersistenceFile) =>\n  action(PLAYGROUND_UPDATE_PERSISTENCE_FILE, file);\n\nexport const playgroundUpdateGitHubSaveInfo = (\n  repoName: string,\n  filePath: string,\n  lastSaved: Date\n) => action(PLAYGROUND_UPDATE_GITHUB_SAVE_INFO, { repoName, filePath, lastSaved });\n","import { Context } from 'Clang-slang';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport { action } from 'typesafe-actions';\n\nimport { SET_IS_EDITOR_READONLY } from '../../features/sourceRecorder/sourcecast/SourcecastTypes';\nimport { SALanguage } from '../application/ApplicationTypes';\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { HIGHLIGHT_LINE } from '../application/types/InterpreterTypes';\nimport { Library } from '../assessment/AssessmentTypes';\nimport { Position } from '../editor/EditorTypes';\nimport { NOTIFY_PROGRAM_EVALUATED } from '../sideContent/SideContentTypes';\nimport {\n  ADD_HTML_CONSOLE_ERROR,\n  BEGIN_CLEAR_CONTEXT,\n  BROWSE_REPL_HISTORY_DOWN,\n  BROWSE_REPL_HISTORY_UP,\n  CHANGE_EXEC_TIME,\n  CHANGE_EXTERNAL_LIBRARY,\n  CHANGE_SIDE_CONTENT_HEIGHT,\n  CHANGE_STEP_LIMIT,\n  CHANGE_SUBLANGUAGE,\n  CHAPTER_SELECT,\n  CLEAR_REPL_INPUT,\n  CLEAR_REPL_OUTPUT,\n  CLEAR_REPL_OUTPUT_LAST,\n  EditorTabState,\n  END_CLEAR_CONTEXT,\n  EVAL_EDITOR,\n  EVAL_EDITOR_AND_TESTCASES,\n  EVAL_REPL,\n  EVAL_TESTCASE,\n  MOVE_CURSOR,\n  NAV_DECLARATION,\n  PLAYGROUND_EXTERNAL_SELECT,\n  PROMPT_AUTOCOMPLETE,\n  RESET_TESTCASE,\n  RESET_WORKSPACE,\n  SEND_REPL_INPUT_TO_OUTPUT,\n  TOGGLE_EDITOR_AUTORUN,\n  TOGGLE_USING_SUBST,\n  UPDATE_ACTIVE_EDITOR_TAB,\n  UPDATE_CURRENT_ASSESSMENT_ID,\n  UPDATE_CURRENT_SUBMISSION_ID,\n  UPDATE_EDITOR_BREAKPOINTS,\n  UPDATE_EDITOR_VALUE,\n  UPDATE_HAS_UNSAVED_CHANGES,\n  UPDATE_REPL_VALUE,\n  UPDATE_SUBLANGUAGE,\n  UPDATE_WORKSPACE,\n  WorkspaceLocation,\n  WorkspaceState\n} from './WorkspaceTypes';\n\nexport const browseReplHistoryDown = (workspaceLocation: WorkspaceLocation) =>\n  action(BROWSE_REPL_HISTORY_DOWN, { workspaceLocation });\n\nexport const browseReplHistoryUp = (workspaceLocation: WorkspaceLocation) =>\n  action(BROWSE_REPL_HISTORY_UP, { workspaceLocation });\n\nexport const changeExternalLibrary = (newExternal: string, workspaceLocation: WorkspaceLocation) =>\n  action(CHANGE_EXTERNAL_LIBRARY, { newExternal, workspaceLocation });\n\nexport const changeExecTime = (execTime: number, workspaceLocation: WorkspaceLocation) =>\n  action(CHANGE_EXEC_TIME, { execTime, workspaceLocation });\n\nexport const changeSideContentHeight = (height: number, workspaceLocation: WorkspaceLocation) =>\n  action(CHANGE_SIDE_CONTENT_HEIGHT, { height, workspaceLocation });\n\nexport const changeStepLimit = (stepLimit: number, workspaceLocation: WorkspaceLocation) =>\n  action(CHANGE_STEP_LIMIT, { stepLimit, workspaceLocation });\n\nexport const chapterSelect = (\n  chapter: Chapter,\n  variant: Variant,\n  workspaceLocation: WorkspaceLocation\n) =>\n  action(CHAPTER_SELECT, {\n    chapter,\n    variant,\n    workspaceLocation\n  });\n\nexport const externalLibrarySelect = (\n  externalLibraryName: ExternalLibraryName,\n  workspaceLocation: WorkspaceLocation,\n  initialise?: boolean\n) =>\n  action(PLAYGROUND_EXTERNAL_SELECT, {\n    externalLibraryName,\n    workspaceLocation,\n    initialise: initialise || false\n  });\n\nexport const toggleEditorAutorun = (workspaceLocation: WorkspaceLocation) =>\n  action(TOGGLE_EDITOR_AUTORUN, { workspaceLocation });\n\n/**\n * Starts the process to clear the Clang-slang Context\n * at a specified workspace location.\n *\n * This action is to be handled by saga, in order to\n * call upon side effects such as loading libraries in\n * the global scope.\n *\n * @param library the Library that the context shall be using\n * @param workspaceLocation the location of the workspace\n *\n * @see Library in assessmentShape.ts\n */\nexport const beginClearContext = (\n  workspaceLocation: WorkspaceLocation,\n  library: Library,\n  shouldInitLibrary: boolean\n) =>\n  action(BEGIN_CLEAR_CONTEXT, {\n    library,\n    workspaceLocation,\n    shouldInitLibrary\n  });\n\nexport const clearReplInput = (workspaceLocation: WorkspaceLocation) =>\n  action(CLEAR_REPL_INPUT, { workspaceLocation });\n\nexport const clearReplOutput = (workspaceLocation: WorkspaceLocation) =>\n  action(CLEAR_REPL_OUTPUT, { workspaceLocation });\n\nexport const clearReplOutputLast = (workspaceLocation: WorkspaceLocation) =>\n  action(CLEAR_REPL_OUTPUT_LAST, { workspaceLocation });\n\n/**\n * Finishes the process to clear the Clang-slang Context\n * at a specified workspace location.\n *\n * This action is to be handled in the reducer, to call the reset on the\n * Context in the state.\n *\n * @param library the Library that the context shall be using\n * @param workspaceLocation the location of the workspace\n *\n * @see Library in assessmentShape.ts\n */\nexport const endClearContext = (library: Library, workspaceLocation: WorkspaceLocation) =>\n  action(END_CLEAR_CONTEXT, {\n    library,\n    workspaceLocation\n  });\n\nexport const evalEditor = (workspaceLocation: WorkspaceLocation) =>\n  action(EVAL_EDITOR, { workspaceLocation });\n\nexport const evalRepl = (workspaceLocation: WorkspaceLocation) =>\n  action(EVAL_REPL, { workspaceLocation });\n\nexport const evalTestcase = (workspaceLocation: WorkspaceLocation, testcaseId: number) =>\n  action(EVAL_TESTCASE, { workspaceLocation, testcaseId });\n\nexport const runAllTestcases = (workspaceLocation: WorkspaceLocation) =>\n  action(EVAL_EDITOR_AND_TESTCASES, { workspaceLocation });\n\nexport const updateActiveEditorTab = (\n  workspaceLocation: WorkspaceLocation,\n  activeEditorTabOptions?: Partial<EditorTabState>\n) => action(UPDATE_ACTIVE_EDITOR_TAB, { workspaceLocation, activeEditorTabOptions });\n\nexport const updateEditorValue = (newEditorValue: string, workspaceLocation: WorkspaceLocation) =>\n  action(UPDATE_EDITOR_VALUE, { newEditorValue, workspaceLocation });\n\nexport const setEditorBreakpoint = (breakpoints: string[], workspaceLocation: WorkspaceLocation) =>\n  action(UPDATE_EDITOR_BREAKPOINTS, { breakpoints, workspaceLocation });\n\nexport const highlightEditorLine = (\n  highlightedLines: number[],\n  workspaceLocation: WorkspaceLocation\n) => action(HIGHLIGHT_LINE, { highlightedLines, workspaceLocation });\n\nexport const updateReplValue = (newReplValue: string, workspaceLocation: WorkspaceLocation) =>\n  action(UPDATE_REPL_VALUE, { newReplValue, workspaceLocation });\n\nexport const sendReplInputToOutput = (newOutput: string, workspaceLocation: WorkspaceLocation) =>\n  action(SEND_REPL_INPUT_TO_OUTPUT, {\n    type: 'code',\n    workspaceLocation,\n    value: newOutput\n  });\n\nexport const resetTestcase = (workspaceLocation: WorkspaceLocation, index: number) =>\n  action(RESET_TESTCASE, { workspaceLocation, index });\n\nexport const navigateToDeclaration = (\n  workspaceLocation: WorkspaceLocation,\n  cursorPosition: Position\n) => action(NAV_DECLARATION, { workspaceLocation, cursorPosition });\n\nexport const moveCursor = (workspaceLocation: WorkspaceLocation, cursorPosition: Position) =>\n  action(MOVE_CURSOR, { workspaceLocation, cursorPosition });\n\n/**\n * Resets a workspace to its default properties.\n *\n * @param workspaceLocation the workspace to be reset\n * @param workspaceOptions an object with any number of properties\n *   in IWorkspaceState, that will take precedence over the default\n *   values. For example, one can use this to specify a particular\n *   editorValue.\n */\nexport const resetWorkspace = (\n  workspaceLocation: WorkspaceLocation,\n  workspaceOptions?: Partial<WorkspaceState>\n) =>\n  action(RESET_WORKSPACE, {\n    workspaceLocation,\n    workspaceOptions\n  });\n\nexport const updateWorkspace = (\n  workspaceLocation: WorkspaceLocation,\n  workspaceOptions?: Partial<WorkspaceState>\n) =>\n  action(UPDATE_WORKSPACE, {\n    workspaceLocation,\n    workspaceOptions\n  });\n\nexport const setIsEditorReadonly = (\n  workspaceLocation: WorkspaceLocation,\n  isEditorReadonly: boolean\n) =>\n  action(SET_IS_EDITOR_READONLY, {\n    workspaceLocation,\n    isEditorReadonly: isEditorReadonly\n  });\n\nexport const updateCurrentAssessmentId = (assessmentId: number, questionId: number) =>\n  action(UPDATE_CURRENT_ASSESSMENT_ID, {\n    assessmentId,\n    questionId\n  });\n\nexport const updateCurrentSubmissionId = (submissionId: number, questionId: number) =>\n  action(UPDATE_CURRENT_SUBMISSION_ID, {\n    submissionId,\n    questionId\n  });\n\nexport const updateHasUnsavedChanges = (\n  workspaceLocation: WorkspaceLocation,\n  hasUnsavedChanges: boolean\n) =>\n  action(UPDATE_HAS_UNSAVED_CHANGES, {\n    workspaceLocation,\n    hasUnsavedChanges\n  });\n\nexport const changeSublanguage = (sublang: SALanguage) => action(CHANGE_SUBLANGUAGE, { sublang });\n\nexport const updateSublanguage = (sublang: SALanguage) => action(UPDATE_SUBLANGUAGE, { sublang });\n\nexport const promptAutocomplete = (\n  workspaceLocation: WorkspaceLocation,\n  row: number,\n  column: number,\n  callback: any // TODO: define a type for this\n) =>\n  action(PROMPT_AUTOCOMPLETE, {\n    workspaceLocation,\n    row,\n    column,\n    callback\n  });\n\nexport const notifyProgramEvaluated = (\n  result: any,\n  lastDebuggerResult: any,\n  code: string,\n  context: Context,\n  workspaceLocation?: WorkspaceLocation\n) =>\n  action(NOTIFY_PROGRAM_EVALUATED, {\n    result,\n    lastDebuggerResult,\n    code,\n    context,\n    workspaceLocation\n  });\n\nexport const toggleUsingSubst = (usingSubst: boolean, workspaceLocation: WorkspaceLocation) =>\n  action(TOGGLE_USING_SUBST, { usingSubst, workspaceLocation });\n\nexport const addHtmlConsoleError = (errorMsg: string, workspaceLocation: WorkspaceLocation) =>\n  action(ADD_HTML_CONSOLE_ERROR, { errorMsg, workspaceLocation });\n","import { Chapter } from 'Clang-slang/dist/types';\nimport { v4 as uuid } from 'uuid';\n\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport { Input as RecorderInput } from '../sourceRecorder/SourceRecorderTypes';\n\nexport const playgroundQuestionId: number = -1;\n\ntype PlaybackInitial = {\n  chapter: Chapter;\n  externalLibrary?: ExternalLibraryName;\n  editorValue: string;\n};\n\ntype PlaybackInitialTagged = PlaybackInitial & {\n  type: 'init';\n  time: number;\n};\n\ntype Input = RecorderInput | PlaybackInitialTagged;\n\nconst questionIdLookup: { [id: string]: string } = {};\n\n// ------------------- EXTERNAL API -------------------\n\nconst cadetLoggerUrl = process.env.REACT_APP_CADET_LOGGER;\nexport function log(id: string, input: Input) {\n  if (process.env.NODE_ENV === 'test' || !cadetLoggerUrl) {\n    return;\n  } // This is set statically\n  saveRecord({\n    ...input,\n    questionId: questionIdLookup[id],\n    sessionId: id\n  });\n}\n\n// Creates a session, then logs it.\nexport function initSession(questionId: string, initialState: PlaybackInitial): string {\n  const id = uuid();\n  questionIdLookup[id] = questionId;\n  log(id, {\n    ...initialState,\n    type: 'init',\n    time: Date.now()\n  });\n  return id;\n}\n\n// ------------------- INDEXEDDB API -------------------\ntype LogRecord = Input & {\n  sessionId: string;\n  questionId: string;\n  time: number;\n};\n\n// Yes, past tense. For when it is inside the log.\nexport type LoggedRecord = LogRecord & { id: number };\n\nconst VERSION = 1;\nconst DB_NAME = 'evtlogs';\nconst STORE_NAME = 'logs';\nconst getDB = memoize((): Promise<IDBDatabase> => {\n  return new Promise((resolve, reject) => {\n    // Make a request\n    const request = indexedDB.open(DB_NAME, VERSION);\n    // hook the onsuccess\n    request.onsuccess = evt => {\n      resolve(request.result);\n    };\n\n    request.onerror = evt => {\n      console.error('Failed to get db', evt);\n      reject(request.error);\n    };\n\n    // Set it up if necessary (on upgrade)\n    request.onupgradeneeded = evt => {\n      // Create the database here\n      const db: IDBDatabase = (evt?.target as any).result; // Bug with the types...\n      db.createObjectStore(STORE_NAME, {\n        keyPath: 'id', // Entry id, only used to figure out the last transfered value\n        autoIncrement: true\n      });\n    };\n  });\n});\n\nfunction saveRecord(record: LogRecord) {\n  return new Promise((resolve, reject) => {\n    getDB().then(db => {\n      const transaction = db.transaction([STORE_NAME], 'readwrite');\n      transaction.oncomplete = resolve;\n      transaction.onerror = reject;\n\n      const objectStore = transaction.objectStore(STORE_NAME);\n      /*const request = */ objectStore.add(record);\n      // Can actually check for request success.\n    });\n  });\n}\n\n// Retrieving and uploading records\n// This forces it to be singleton,\n// preventing multiple uploads without a lock.\n\nexport function getRecords(): Promise<LoggedRecord[]> {\n  return new Promise((resolve, reject) => {\n    getDB().then(db => {\n      const transaction = db.transaction([STORE_NAME], 'readwrite');\n      const objectStore = transaction.objectStore(STORE_NAME);\n      objectStore.getAll().onsuccess = function (evt) {\n        const result = (evt?.target as any).result;\n        resolve(result);\n      };\n    });\n  });\n}\n\nexport function deleteRecordsUpto(id: number) {\n  return new Promise((resolve, reject) => {\n    getDB().then(db => {\n      const transaction = db.transaction([STORE_NAME], 'readwrite');\n      const range = IDBKeyRange.bound(0, id, false, false);\n      const objectStore = transaction.objectStore(STORE_NAME);\n      objectStore.delete(range);\n      transaction.oncomplete = resolve;\n      transaction.onerror = reject;\n    });\n  });\n}\n\n// Importing lodash for this is apparently a bad idea.\n// This saves 70kb. Out of 72kb.\nfunction memoize<T>(fn: () => T) {\n  let answer: T | null = null;\n  return () => {\n    if (!answer) {\n      answer = fn();\n      return answer;\n    } else {\n      return answer;\n    }\n  };\n}\n","import { Card, Elevation, Pre } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nimport { AutogradingError, AutogradingResult } from '../assessment/AssessmentTypes';\n\ntype SideContentResultCardProps = StateProps;\n\ntype StateProps = {\n  index: number;\n  result: AutogradingResult;\n};\n\nconst buildErrorString = (errors: AutogradingError[]) =>\n  errors\n    .map(error => {\n      switch (error.errorType) {\n        case 'timeout':\n          return '[TIMEOUT] Submission exceeded time limit for this test case.';\n        case 'syntax':\n          return `[SYNTAX] Line ${error.line}: ${error.errorExplanation}`;\n        case 'runtime':\n          return `[RUNTIME] Line ${error.line}: ${error.errorExplanation}`;\n        case 'systemError':\n          return `[SYSTEM] ${error.errorMessage}`;\n        default:\n          return `[UNKNOWN] Autograder error: type ${error.errorType}`;\n      }\n    })\n    .join('\\n\\n');\n\nconst SideContentResultCard: React.FunctionComponent<SideContentResultCardProps> = props => {\n  const { index, result } = props;\n\n  return (\n    <div className={classNames('ResultCard', result.resultType === 'pass' ? 'correct' : 'wrong')}>\n      <Card elevation={Elevation.ONE}>\n        <div className=\"result-data\">\n          <div className=\"result-idx\">{index + 1}</div>\n          <div className=\"result-status\">{result.resultType.toUpperCase()}</div>\n        </div>\n        <Pre className=\"result-expected\">{result.expected!}</Pre>\n        <Pre className=\"result-actual\">\n          {result.resultType === 'error' ? buildErrorString(result.errors!) : result.actual!}\n        </Pre>\n      </Card>\n    </div>\n  );\n};\n\nexport default SideContentResultCard;\n","import { Button, Collapse, Icon, PopoverPosition } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport * as React from 'react';\n\nimport { AutogradingResult, Testcase } from '../assessment/AssessmentTypes';\nimport ControlButton from '../ControlButton';\nimport { WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport SideContentResultCard from './SideContentResultCard';\nimport SideContentTestcaseCard from './SideContentTestcaseCard';\n\nexport type SideContentAutograderProps = DispatchProps & StateProps & OwnProps;\n\ntype DispatchProps = {\n  handleTestcaseEval: (testcaseId: number) => void;\n};\n\ntype StateProps = {\n  autogradingResults: AutogradingResult[];\n  testcases: Testcase[];\n};\n\ntype OwnProps = {\n  /**\n   * We need to know the workspace location to hide 'opaque' testcases\n   * in AssessmentsWorkspace, but show them in GradingWorkspace.\n   */\n  workspaceLocation: WorkspaceLocation;\n};\n\nconst SideContentAutograder: React.FunctionComponent<SideContentAutograderProps> = props => {\n  const [showsTestcases, setTestcasesShown] = React.useState<boolean>(true);\n  const [showsResults, setResultsShown] = React.useState<boolean>(true);\n\n  const { testcases, autogradingResults, handleTestcaseEval, workspaceLocation } = props;\n\n  const testcaseCards = React.useMemo(\n    () =>\n      testcases.length > 0 ? (\n        <div className=\"testcaseCards\">\n          {testcasesHeader}\n          {testcases.map((testcase, index) => (\n            <SideContentTestcaseCard\n              key={index}\n              index={index}\n              testcase={testcase}\n              handleTestcaseEval={handleTestcaseEval}\n              workspaceLocation={workspaceLocation}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className=\"noResults\">There are no testcases provided for this question.</div>\n      ),\n    [testcases, handleTestcaseEval, workspaceLocation]\n  );\n\n  const resultCards = React.useMemo(\n    () =>\n      autogradingResults.length > 0 ? (\n        <div>\n          {resultsHeader}\n          {autogradingResults.map((result, index) => (\n            <SideContentResultCard key={index} index={index} result={result} />\n          ))}\n        </div>\n      ) : (\n        <div className=\"noResults\">There are no results to show.</div>\n      ),\n    [autogradingResults]\n  );\n\n  const toggleTestcases = React.useCallback(() => {\n    setTestcasesShown(!showsTestcases);\n  }, [showsTestcases]);\n\n  const toggleResults = React.useCallback(() => setResultsShown(!showsResults), [showsResults]);\n\n  return (\n    <div className=\"Autograder\">\n      <Button\n        className=\"collapse-button\"\n        icon={showsTestcases ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT}\n        minimal={true}\n        onClick={toggleTestcases}\n      >\n        <span>Testcases</span>\n        <Tooltip2 content={autograderTooltip} placement={PopoverPosition.LEFT}>\n          <Icon icon={IconNames.HELP} />\n        </Tooltip2>\n      </Button>\n      <Collapse isOpen={showsTestcases} keepChildrenMounted={true}>\n        {testcaseCards}\n      </Collapse>\n      {collapseButton('Autograder Results', showsResults, toggleResults)}\n      <Collapse isOpen={showsResults} keepChildrenMounted={true}>\n        {resultCards}\n      </Collapse>\n    </div>\n  );\n};\n\nconst autograderTooltip = (\n  <div className=\"autograder-help-tooltip\">\n    <p>Click on each testcase below to execute it with the program in the editor.</p>\n    <p>\n      To execute all testcases at once, evaluate the program in the editor with this tab active.\n    </p>\n    <p>A green or red background indicates a passed or failed testcase respectively.</p>\n    <p>Private testcases (only visible to staff when grading) have a grey background.</p>\n  </div>\n);\n\nconst columnHeader = (colClass: string, colTitle: string) => (\n  <div className={colClass}>\n    {colTitle}\n    <Icon icon={IconNames.CARET_DOWN} />\n  </div>\n);\n\nconst testcasesHeader = (\n  <div className=\"testcases-header\">\n    {columnHeader('header-fn', 'Testcase')}\n    {columnHeader('header-expected', 'Expected result')}\n    {columnHeader('header-actual', 'Actual result')}\n  </div>\n);\n\nconst resultsHeader = (\n  <div className=\"results-header\">\n    <div className=\"header-data\">\n      {columnHeader('header-sn', 'S/N')}\n      {columnHeader('header-status', 'Testcase status')}\n    </div>\n    {columnHeader('header-expected', 'Expected result')}\n    {columnHeader('header-actual', 'Actual result')}\n  </div>\n);\n\nconst collapseButton = (label: string, isOpen: boolean, toggleFunc: () => void) => (\n  <ControlButton\n    label={label}\n    icon={isOpen ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT}\n    onClick={toggleFunc}\n    options={{ className: 'collapse-button', minimal: true }}\n  />\n);\n\nexport default SideContentAutograder;\n","import { Card, Classes, Elevation, Pre } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { ContestEntry } from '../assessment/AssessmentTypes';\n\ntype SideContentLeaderboardCardProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleContestEntryClick: (submissionId: number, answer: string) => void;\n};\n\ntype StateProps = {\n  contestEntry: ContestEntry;\n  rank: number;\n};\n\nconst SideContentLeaderboardCard: React.FunctionComponent<\n  SideContentLeaderboardCardProps\n> = props => {\n  const { handleContestEntryClick, contestEntry, rank } = props;\n\n  return (\n    <div className={classNames('LeaderboardCard')}>\n      <Card\n        className={Classes.INTERACTIVE}\n        elevation={Elevation.ONE}\n        onClick={() =>\n          handleContestEntryClick(contestEntry.submission_id, contestEntry.answer.code ?? '')\n        }\n      >\n        <Pre className=\"contestentry-entryid\">{contestEntry.student_name}</Pre>\n        <Pre className=\"contestentry-rank\">{rank}</Pre>\n        <Pre className=\"contestentry-score\">{contestEntry.final_score}</Pre>\n      </Card>\n    </div>\n  );\n};\n\nexport default SideContentLeaderboardCard;\n","import { Button, Collapse, Icon } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport React, { useMemo, useState } from 'react';\n\nimport { ContestEntry } from '../assessment/AssessmentTypes';\nimport SideContentLeaderboardCard from './SideContentLeaderboardCard';\n\nexport type SideContentContestLeaderboardProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleContestEntryClick: (submissionId: number, answer: string) => void;\n};\n\ntype StateProps = {\n  orderedContestEntries: ContestEntry[];\n};\n\n/*\nContest Leaderboard inner components\n*/\nconst columnHeader = (colClass: string, colTitle: string) => (\n  <div className={colClass}>\n    {colTitle}\n    <Icon icon={IconNames.CARET_DOWN} />\n  </div>\n);\n\nconst contestEntryHeader = (\n  <div className=\"leaderboard-header\">\n    {columnHeader('header-entryid', 'Student Name')}\n    {columnHeader('header-entryrank', 'Rank')}\n    {columnHeader('header-score', 'Score')}\n  </div>\n);\n\nconst contestLeaderboardTooltipContent = 'View the top-rated contest entries!';\n\n/**\n * Renders the contest leaderboard entries as a SideContentTab for Contest Voting questions.\n * Note that the prop is named 'orderedContestEntries' as the responsibility to sort\n * in desc score order is left to the backend.\n *\n * @param props {orderedContestEntries: an ordered list by desc score of leaderboard entries to display,\n *  handleContestEntryClick: displays contest entry answer in assessment workspace editor}\n */\nconst SideContentContestLeaderboard: React.FunctionComponent<\n  SideContentContestLeaderboardProps\n> = props => {\n  const { orderedContestEntries, handleContestEntryClick } = props;\n  const [showLeaderboard, setShowLeaderboard] = useState<boolean>(true);\n\n  const contestEntryCards = useMemo(\n    () => (\n      <div>\n        {contestEntryHeader}\n        {orderedContestEntries.length > 0 ? (\n          orderedContestEntries.map((contestEntry: ContestEntry, index: number) => (\n            <SideContentLeaderboardCard\n              key={contestEntry.submission_id}\n              handleContestEntryClick={handleContestEntryClick}\n              contestEntry={contestEntry}\n              rank={index + 1}\n            />\n          ))\n        ) : (\n          <div className=\"noResults\">There are no eligible contest leaderboard entries found.</div>\n        )}\n      </div>\n    ),\n    [handleContestEntryClick, orderedContestEntries]\n  );\n\n  return (\n    <div className=\"ContestLeaderboard\">\n      <Button\n        className=\"collapse-button\"\n        icon={showLeaderboard ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT}\n        minimal={true}\n        onClick={() => setShowLeaderboard(!showLeaderboard)}\n      >\n        <span>Contest Leaderboard</span>\n        <Tooltip2 content={contestLeaderboardTooltipContent}>\n          <Icon icon={IconNames.HELP} />\n        </Tooltip2>\n      </Button>\n      <Collapse isOpen={showLeaderboard} keepChildrenMounted>\n        {contestEntryCards}\n      </Collapse>\n    </div>\n  );\n};\n\nexport default SideContentContestLeaderboard;\n","import { Card, Classes, Elevation, NumericInput, Pre } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { ContestEntry } from '../assessment/AssessmentTypes';\n\ntype SideContentConstestEntryCardProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleContestEntryClick: (submissionId: number, answer: string) => void;\n};\n\ntype StateProps = {\n  handleVotingSubmissionChange: (entryId: number, rank: number) => void;\n  canSave: boolean;\n  isValid: boolean;\n  contestEntry: ContestEntry;\n  entryNumber: number;\n  minScore: number;\n  maxScore: number;\n};\n\n/**\n * Pure Contest Entry Card to to provide numeric input box for contest entry voting.\n * @param props functions for handling input and contest entry details tied to contest entry card.\n * @returns card which provides numeric input to vote for contest entry.\n */\nconst SideContentContestEntryCard: React.FunctionComponent<\n  SideContentConstestEntryCardProps\n> = props => {\n  const {\n    canSave,\n    isValid,\n    handleContestEntryClick,\n    handleVotingSubmissionChange,\n    contestEntry,\n    entryNumber,\n    minScore,\n    maxScore\n  } = props;\n\n  return (\n    <div className={classNames('ContestEntryCard', { wrong: !isValid })}>\n      <Card\n        className={Classes.INTERACTIVE}\n        elevation={Elevation.ONE}\n        onClick={() =>\n          handleContestEntryClick(contestEntry.submission_id, contestEntry.answer.code ?? '')\n        }\n      >\n        <Pre className=\"contestentry-entryid\">{entryNumber}</Pre>\n        <Pre className=\"contestentry-rank\">\n          <NumericInput\n            disabled={!canSave}\n            value={contestEntry.score}\n            onValueChange={(score: number) =>\n              handleVotingSubmissionChange(contestEntry.submission_id, score)\n            }\n            placeholder={`Enter score for entry ${entryNumber}`}\n            min={minScore}\n            max={maxScore}\n            allowNumericCharactersOnly\n            fill\n            minorStepSize={null} // limits input to integers\n          />\n        </Pre>\n      </Card>\n    </div>\n  );\n};\n\nexport default SideContentContestEntryCard;\n","import { Button, Collapse, Icon } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport React, { useMemo, useState } from 'react';\n\nimport { ContestEntry } from '../assessment/AssessmentTypes';\nimport SideContentContestEntryCard from './SideContentContestEntryCard';\n\nexport type SideContentContestVotingProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleContestEntryClick: (submissionId: number, answer: string) => void;\n};\n\ntype StateProps = {\n  canSave: boolean;\n  isValid: boolean;\n  handleVotingSubmissionChange: (entryId: number, score: number) => void;\n  contestEntries: ContestEntry[];\n  minScore: number;\n  maxScore: number;\n};\n\n/*\nContest voting inner components\n*/\nconst columnHeader = (colClass: string, colTitle: string) => (\n  <div className={colClass}>\n    {colTitle}\n    <Icon icon={IconNames.CARET_DOWN} />\n  </div>\n);\n\nconst contestEntryHeader = (\n  <div className=\"contestentries-header\">\n    {columnHeader('header-entryid', 'Entry Id')}\n    {columnHeader('header-entryrank', 'Score')}\n  </div>\n);\n\n/**\n * Main contest voting tab\n * @param props contestEntries for student to vote for : ContestEntry[],\n * and behaviour for onClick: entryId => void\n */\nconst SideContentContestVoting: React.FunctionComponent<SideContentContestVotingProps> = props => {\n  const {\n    contestEntries,\n    canSave,\n    isValid,\n    handleContestEntryClick,\n    handleVotingSubmissionChange,\n    maxScore,\n    minScore\n  } = props;\n  const [showContestEntries, setShowContestEntries] = useState<boolean>(true);\n\n  const contestEntryCards = useMemo(\n    () => (\n      <div>\n        {contestEntryHeader}\n        {contestEntries.length > 0 ? (\n          contestEntries.map((contestEntry: ContestEntry, index) => (\n            <SideContentContestEntryCard\n              isValid={isValid}\n              canSave={canSave}\n              entryNumber={index + 1}\n              key={contestEntry.submission_id}\n              handleContestEntryClick={handleContestEntryClick}\n              handleVotingSubmissionChange={handleVotingSubmissionChange}\n              contestEntry={contestEntry}\n              minScore={minScore}\n              maxScore={maxScore}\n            />\n          ))\n        ) : (\n          <div className=\"noResults\">There are no eligible entries for voting found.</div>\n        )}\n      </div>\n    ),\n    // determines when to re-render\n    [\n      isValid,\n      canSave,\n      contestEntries,\n      handleContestEntryClick,\n      handleVotingSubmissionChange,\n      maxScore,\n      minScore\n    ]\n  );\n\n  return (\n    <div className=\"ContestEntryVoting\">\n      <Button\n        className=\"collapse-button\"\n        icon={showContestEntries ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT}\n        minimal={true}\n        onClick={() => setShowContestEntries(!showContestEntries)}\n      >\n        <span>Contest Voting</span>\n        <Tooltip2\n          content={\n            <span>\n              Score your favourite contest entries from {minScore} (worst) to {maxScore} (best)!\n            </span>\n          }\n        >\n          <Icon icon={IconNames.HELP} />\n        </Tooltip2>\n      </Button>\n      <Collapse isOpen={showContestEntries} keepChildrenMounted>\n        {contestEntryCards}\n      </Collapse>\n    </div>\n  );\n};\n\nexport default SideContentContestVoting;\n","import React, { useEffect, useState } from 'react';\nimport { showWarningMessage } from 'src/commons/utils/NotificationsHelper';\n\nimport { ContestEntry } from '../assessment/AssessmentTypes';\nimport SideContentContestVoting from './SideContentContestVoting';\n\nexport type SideContentContestVotingContainerProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleContestEntryClick: (submissionId: number, answer: string) => void;\n  handleSave: (votingSubmission: ContestEntry[]) => void;\n};\n\ntype StateProps = {\n  canSave: boolean;\n  contestEntries: ContestEntry[];\n};\n\n/**\n * Container to separate behaviour concerns from rendering concerns\n * Stores component-level voting ranking state\n */\nconst SideContentContestVotingContainer: React.FunctionComponent<\n  SideContentContestVotingContainerProps\n> = props => {\n  const { canSave, contestEntries, handleSave, handleContestEntryClick } = props;\n  const [isValid, setIsValid] = useState<boolean>(true);\n  const [votingSubmission, setVotingSubmission] = useState<ContestEntry[]>([]);\n  const minScore = 11 - contestEntries.length;\n  const maxScore = 10;\n\n  useEffect(() => {\n    setVotingSubmission(contestEntries);\n  }, [contestEntries]);\n\n  /**\n   * Validates input value and clamps the value within the min-max range [1, number of entries].\n   * @param votingSubmission voting scores by user for each contest entry.\n   * @returns boolean value for whether the scores are within the min-max range.\n   */\n  const isSubmissionValid = (votingSubmission: ContestEntry[]) => {\n    return votingSubmission.reduce((isValid, vote) => {\n      const score = vote.score!;\n      return isValid && score >= minScore && score <= maxScore;\n    }, true);\n  };\n\n  const submissionHasNoNull = (votingSubmission: ContestEntry[]) => {\n    return votingSubmission.reduce((noNull, vote) => {\n      return noNull && vote.score !== undefined && vote.score !== null;\n    }, true);\n  };\n\n  const handleVotingSubmissionChange = (submissionId: number, score: number): void => {\n    // update the votes\n    const updatedSubmission = votingSubmission.map(vote =>\n      vote.submission_id === submissionId ? { ...vote, score: score } : vote\n    );\n    setVotingSubmission(updatedSubmission);\n    const noDuplicates =\n      new Set(updatedSubmission.map(vote => vote.score)).size === updatedSubmission.length;\n    // validate that scores are unique\n    const noNull = submissionHasNoNull(updatedSubmission);\n    if (noDuplicates && noNull && isSubmissionValid(updatedSubmission)) {\n      handleSave(updatedSubmission);\n\n      setIsValid(true);\n    } else if (noDuplicates && noNull) {\n      showWarningMessage(\n        `Vote rankings invalid. Please input scores between ${minScore} - ${maxScore}.`\n      );\n      setIsValid(false);\n    } else if (!noDuplicates && noNull) {\n      showWarningMessage('Vote scores are not unique. Please input unique rankings.');\n      setIsValid(false);\n    } else {\n      setIsValid(false);\n    }\n  };\n\n  return (\n    <SideContentContestVoting\n      isValid={isValid}\n      canSave={canSave}\n      handleContestEntryClick={handleContestEntryClick}\n      handleVotingSubmissionChange={handleVotingSubmissionChange}\n      contestEntries={votingSubmission}\n      minScore={minScore}\n      maxScore={maxScore}\n    />\n  );\n};\n\nexport default SideContentContestVotingContainer;\n","import { Button, Classes } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nclass SideContentToneMatrix extends React.Component<{}, {}> {\n  private $container: HTMLElement | null = null;\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentDidMount() {\n    if ((window as any).ToneMatrix) {\n      (window as any).ToneMatrix.initialise_matrix(this.$container!);\n    }\n  }\n\n  public handleClear() {\n    (window as any).ToneMatrix.clear_matrix();\n  }\n\n  public handleRandomise() {\n    (window as any).ToneMatrix.randomise_matrix();\n  }\n\n  public render() {\n    return (\n      <div className=\"sa-tone-matrix\">\n        <div className=\"row\">\n          <div className={classNames('controls', 'col-xs-12', Classes.DARK, Classes.BUTTON_GROUP)}>\n            <Button id=\"clear-matrix\" onClick={this.handleClear}>\n              Clear\n            </Button>\n            <Button id=\"randomise-matrix\" onClick={this.handleRandomise}>\n              Randomise\n            </Button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xs-12\" ref={r => (this.$container = r)} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SideContentToneMatrix;\n","import moment from 'moment';\n\n/**\n * Checks if a date is before or at the current time.\n *\n * @param {string} d an ISO 8601 compliant date string\n *   e.g 2018-07-06T10:20:09.961Z\n * @returns {boolean} true if the date specified by the paramter\n *   is before the time of execution of this function.\n */\nexport const beforeNow = (dateString: string): boolean => {\n  const date = moment(dateString);\n  const now = moment();\n  return date.isBefore(now);\n};\n\n/**\n * Return a string representation of a date that is\n * nice to look at. To be used for displaying the date,\n * e.g when showing the assessment overview.\n *\n * @param {string} d an ISO 8601 compliant date string\n *   e.g 2018-07-06T10:20:09.961Z\n * @returns {string} A user-friendly readable date string,\n *   e.g 7th June, 20:09\n */\nexport const getPrettyDate = (dateString: string): string => {\n  const date = moment(dateString);\n  const prettyDate = date.format('Do MMMM, HH:mm');\n  return prettyDate;\n};\n\nexport const getStandardDateTime = (dateString: string): string => {\n  const date = moment(dateString);\n  const prettyDate = date.format('MMMM Do YYYY, HH:mm');\n  return prettyDate;\n};\n\nexport const getStandardDate = (dateString: string): string => {\n  const date = moment(dateString);\n  const prettyDate = date.format('MMMM Do YYYY');\n  return prettyDate;\n};\n","import { Divider, HTMLTable, Text } from '@blueprintjs/core';\nimport React from 'react';\n\nimport Markdown from '../Markdown';\nimport { getPrettyDate } from '../utils/DateHelper';\n\ntype AssessmentWorkspaceGradingResultProps = StateProps;\n\ntype StateProps = {\n  graderName: string;\n  gradedAt: string;\n  xp: number;\n  maxXp: number;\n  comments?: string;\n};\n\nconst AssessmentWorkspaceGradingResult: React.FC<AssessmentWorkspaceGradingResultProps> = props => (\n  <div className=\"GradingResult\">\n    <div className=\"grading-result-table\">\n      <HTMLTable>\n        <tbody>\n          <tr>\n            <th>XP:</th>\n            <td>\n              <Text>\n                {props.xp} / {props.maxXp}\n              </Text>\n            </td>\n          </tr>\n\n          <tr>\n            <th>Comments:</th>\n            <td>{!props.comments && <Text>None</Text>}</td>\n          </tr>\n        </tbody>\n      </HTMLTable>\n\n      {props.comments && (\n        <HTMLTable>\n          <tbody>\n            <tr>\n              <td>\n                <Divider />\n                <Markdown\n                  content={props.comments}\n                  simplifiedAutoLink={true}\n                  strikethrough={true}\n                  tasklists={true}\n                  openLinksInNewWindow={true}\n                />\n                <Divider />\n              </td>\n            </tr>\n          </tbody>\n        </HTMLTable>\n      )}\n\n      <br />\n\n      <div className=\"grading-result-info\">\n        <Text>\n          Graded by <b>{props.graderName}</b> on {getPrettyDate(props.gradedAt)}\n        </Text>\n      </div>\n    </div>\n  </div>\n);\n\nexport default AssessmentWorkspaceGradingResult;\n","import {\n  Button,\n  ButtonGroup,\n  Card,\n  Classes,\n  Dialog,\n  Intent,\n  NonIdealState,\n  Spinner,\n  SpinnerSize\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport { stringify } from 'Clang-slang/dist/utils/stringify';\nimport classNames from 'classnames';\nimport { isEqual } from 'lodash';\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { initSession, log } from '../../features/eventLogging';\nimport {\n  CodeDelta,\n  Input,\n  KeyboardCommand,\n  SelectionRange\n} from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { fetchAssessment } from '../application/actions/SessionActions';\nimport { defaultWorkspaceManager, InterpreterOutput } from '../application/ApplicationTypes';\nimport {\n  Assessment,\n  AssessmentConfiguration,\n  AutogradingResult,\n  ContestEntry,\n  IContestVotingQuestion,\n  IMCQQuestion,\n  IProgrammingQuestion,\n  Question,\n  QuestionTypes,\n  Testcase\n} from '../assessment/AssessmentTypes';\nimport { ControlBarProps } from '../controlBar/ControlBar';\nimport { ControlBarChapterSelect } from '../controlBar/ControlBarChapterSelect';\nimport { ControlBarClearButton } from '../controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../controlBar/ControlBarEvalButton';\nimport { ControlBarNextButton } from '../controlBar/ControlBarNextButton';\nimport { ControlBarPreviousButton } from '../controlBar/ControlBarPreviousButton';\nimport { ControlBarQuestionViewButton } from '../controlBar/ControlBarQuestionViewButton';\nimport { ControlBarResetButton } from '../controlBar/ControlBarResetButton';\nimport { ControlBarRunButton } from '../controlBar/ControlBarRunButton';\nimport { ControlButtonSaveButton } from '../controlBar/ControlBarSaveButton';\nimport ControlButton from '../ControlButton';\nimport {\n  convertEditorTabStateToProps,\n  NormalEditorContainerProps\n} from '../editor/EditorContainer';\nimport { Position } from '../editor/EditorTypes';\nimport Markdown from '../Markdown';\nimport { MobileSideContentProps } from '../mobileWorkspace/mobileSideContent/MobileSideContent';\nimport MobileWorkspace, { MobileWorkspaceProps } from '../mobileWorkspace/MobileWorkspace';\nimport { SideContentProps } from '../sideContent/SideContent';\nimport SideContentAutograder from '../sideContent/SideContentAutograder';\nimport SideContentContestLeaderboard from '../sideContent/SideContentContestLeaderboard';\nimport SideContentContestVotingContainer from '../sideContent/SideContentContestVotingContainer';\nimport SideContentToneMatrix from '../sideContent/SideContentToneMatrix';\nimport { SideContentTab, SideContentType } from '../sideContent/SideContentTypes';\nimport Constants from '../utils/Constants';\nimport { history } from '../utils/HistoryHelper';\nimport { useResponsive } from '../utils/Hooks';\nimport { showWarningMessage } from '../utils/NotificationsHelper';\nimport { assessmentTypeLink } from '../utils/ParamParseHelper';\nimport Workspace, { WorkspaceProps } from '../workspace/Workspace';\nimport {\n  beginClearContext,\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeExecTime,\n  changeSideContentHeight,\n  clearReplOutput,\n  evalEditor,\n  evalTestcase,\n  navigateToDeclaration,\n  promptAutocomplete,\n  resetWorkspace,\n  runAllTestcases,\n  updateCurrentAssessmentId,\n  updateReplValue\n} from '../workspace/WorkspaceActions';\nimport { EditorTabState, WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport AssessmentWorkspaceGradingResult from './AssessmentWorkspaceGradingResult';\nexport type AssessmentWorkspaceProps = DispatchProps & StateProps & OwnProps;\n\nexport type DispatchProps = {\n  handleEditorValueChange: (val: string) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleReplEval: () => void;\n  handleSave: (id: number, answer: number | string | ContestEntry[]) => void;\n  handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) => void;\n};\n\nexport type OwnProps = {\n  assessmentId: number;\n  questionId: number;\n  notAttempted: boolean;\n  canSave: boolean;\n  assessmentConfiguration: AssessmentConfiguration;\n};\n\nexport type StateProps = {\n  assessment?: Assessment;\n  autogradingResults: AutogradingResult[];\n  activeEditorTabIndex: number | null;\n  editorTabs: EditorTabState[];\n  editorTestcases: Testcase[];\n  hasUnsavedChanges: boolean;\n  isRunning: boolean;\n  isDebugging: boolean;\n  enableDebugging: boolean;\n  output: InterpreterOutput[];\n  replValue: string;\n  sideContentHeight?: number;\n  storedAssessmentId?: number;\n  storedQuestionId?: number;\n  courseId?: number;\n};\n\nconst workspaceLocation: WorkspaceLocation = 'assessment';\n\nconst AssessmentWorkspace: React.FC<AssessmentWorkspaceProps> = props => {\n  const [showOverlay, setShowOverlay] = React.useState(false);\n  const [showResetTemplateOverlay, setShowResetTemplateOverlay] = React.useState(false);\n  const [sessionId, setSessionId] = React.useState('');\n  const [selectedTab, setSelectedTab] = React.useState(\n    props.assessment?.questions[props.questionId].grader !== undefined\n      ? SideContentType.grading\n      : SideContentType.questionOverview\n  );\n  const { isMobileBreakpoint } = useResponsive();\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    props.handleEditorValueChange('');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * After mounting (either an older copy of the assessment\n   * or a loading screen), try to fetch a newer assessment,\n   * and show the briefing.\n   */\n  React.useEffect(() => {\n    dispatch(fetchAssessment(props.assessmentId));\n\n    if (props.questionId === 0 && props.notAttempted) {\n      setShowOverlay(true);\n    }\n    if (!props.assessment) {\n      return;\n    }\n    // ------------- PLEASE NOTE, EVERYTHING BELOW THIS SEEMS TO BE UNUSED -------------\n    // checkWorkspaceReset does exactly the same thing.\n    let questionId = props.questionId;\n    if (props.questionId >= props.assessment.questions.length) {\n      questionId = props.assessment.questions.length - 1;\n    }\n\n    const question: Question = props.assessment.questions[questionId];\n\n    let answer = '';\n    if (question.type === QuestionTypes.programming) {\n      if (question.answer) {\n        answer = (question as IProgrammingQuestion).answer as string;\n      } else {\n        answer = (question as IProgrammingQuestion).solutionTemplate;\n      }\n    }\n\n    props.handleEditorValueChange(answer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * Once there is an update (due to the assessment being fetched), check\n   * if a workspace reset is needed.\n   */\n  React.useEffect(() => {\n    checkWorkspaceReset();\n  });\n\n  /**\n   * Handles toggling of relevant SideContentTabs when mobile breakpoint it hit\n   */\n  React.useEffect(() => {\n    if (\n      !isMobileBreakpoint &&\n      (selectedTab === SideContentType.mobileEditor ||\n        selectedTab === SideContentType.mobileEditorRun)\n    ) {\n      setSelectedTab(SideContentType.questionOverview);\n    }\n  }, [isMobileBreakpoint, props, selectedTab]);\n\n  /* ==================\n     onChange handlers\n     ================== */\n  const pushLog = (newInput: Input) => {\n    log(sessionId, newInput);\n  };\n\n  const onChangeMethod = (newCode: string, delta: CodeDelta) => {\n    if (props.handleUpdateHasUnsavedChanges) {\n      props.handleUpdateHasUnsavedChanges(true);\n    }\n\n    props.handleEditorValueChange(newCode);\n\n    const input: Input = {\n      time: Date.now(),\n      type: 'codeDelta',\n      data: delta\n    };\n\n    pushLog(input);\n  };\n\n  const onCursorChangeMethod = (selection: any) => {\n    const input: Input = {\n      time: Date.now(),\n      type: 'cursorPositionChange',\n      data: selection.getCursor()\n    };\n\n    pushLog(input);\n  };\n\n  const onSelectionChangeMethod = (selection: any) => {\n    const range: SelectionRange = selection.getRange();\n    const isBackwards: boolean = selection.isBackwards();\n    if (!isEqual(range.start, range.end)) {\n      const input: Input = {\n        time: Date.now(),\n        type: 'selectionRangeData',\n        data: { range, isBackwards }\n      };\n\n      pushLog(input);\n    }\n  };\n\n  /**\n   * handleEval used in both the Run button, and during 'shift-enter' in AceEditor\n   *\n   * However, AceEditor only binds commands on mount (https://github.com/securingsincity/react-ace/issues/684)\n   * Thus, we use a mutable ref to overcome the stale closure problem\n   */\n  const activeTab = React.useRef(selectedTab);\n  activeTab.current = selectedTab;\n  const handleEval = () => {\n    // Run testcases when the autograder tab is selected\n    if (activeTab.current === SideContentType.autograder) {\n      dispatch(runAllTestcases(workspaceLocation));\n    } else {\n      dispatch(evalEditor(workspaceLocation));\n    }\n\n    const input: Input = {\n      time: Date.now(),\n      type: 'keyboardCommand',\n      data: KeyboardCommand.run\n    };\n\n    pushLog(input);\n  };\n\n  /* ================\n     Helper Functions\n     ================ */\n  /**\n   * Checks if there is a need to reset the workspace, then executes\n   * a dispatch (in the props) if needed.\n   */\n  const checkWorkspaceReset = () => {\n    /* Don't reset workspace if assessment not fetched yet. */\n    if (props.assessment === undefined) {\n      return;\n    }\n\n    /* Reset assessment if it has changed.*/\n    const assessmentId = props.assessmentId;\n    const questionId = props.questionId;\n\n    if (props.storedAssessmentId === assessmentId && props.storedQuestionId === questionId) {\n      return;\n    }\n\n    const question = props.assessment.questions[questionId];\n\n    let autogradingResults: AutogradingResult[] = [];\n    let editorValue: string = '';\n    let editorPrepend: string = '';\n    let editorPostpend: string = '';\n    let editorTestcases: Testcase[] = [];\n\n    if (question.type === QuestionTypes.programming) {\n      const questionData = question as IProgrammingQuestion;\n      autogradingResults = questionData.autogradingResults;\n      editorPrepend = questionData.prepend;\n      editorPostpend = questionData.postpend;\n      editorTestcases = questionData.testcases;\n\n      editorValue = questionData.answer as string;\n      if (!editorValue) {\n        editorValue = questionData.solutionTemplate!;\n      }\n\n      // Initialize session once the editorValue is known.\n      if (!sessionId) {\n        setSessionId(\n          initSession(`${(props.assessment as any).number}/${props.questionId}`, {\n            chapter: Chapter.CLANG,\n            externalLibrary: question?.library?.external?.name || 'NONE',\n            editorValue\n          })\n        );\n      }\n    }\n\n    if (question.type === QuestionTypes.voting) {\n      const questionData = question as IContestVotingQuestion;\n      editorPrepend = questionData.prepend;\n      editorPostpend = questionData.postpend;\n    }\n\n    props.handleEditorUpdateBreakpoints([]);\n    dispatch(updateCurrentAssessmentId(assessmentId, questionId));\n    dispatch(\n      resetWorkspace(workspaceLocation, {\n        autogradingResults,\n        // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n        editorTabs: [\n          {\n            value: editorValue,\n            prependValue: editorPrepend,\n            postpendValue: editorPostpend,\n            highlightedLines: [],\n            breakpoints: []\n          }\n        ],\n        editorTestcases\n      })\n    );\n    dispatch(\n      changeExecTime(\n        question.library.execTimeMs ?? defaultWorkspaceManager.assessment.execTime,\n        workspaceLocation\n      )\n    );\n    dispatch(beginClearContext(workspaceLocation, question.library, true));\n    props.handleUpdateHasUnsavedChanges(false);\n    if (editorValue) {\n      props.handleEditorValueChange(editorValue);\n    }\n  };\n\n  /**\n   * sideContentProps() will only be called when props.assessment is not undefined\n   * (see 'Rendering Logic' below), thus it is okay to use props.assessment!\n   */\n  const sideContentProps: (p: AssessmentWorkspaceProps, q: number) => SideContentProps = (\n    props: AssessmentWorkspaceProps,\n    questionId: number\n  ) => {\n    const isGraded = props.assessment!.questions[questionId].grader !== undefined;\n    const isContestVoting = props.assessment!.questions[questionId]?.type === 'voting';\n    const handleContestEntryClick = (_submissionId: number, answer: string) => {\n      props.handleEditorValueChange(answer);\n    };\n\n    const tabs: SideContentTab[] = isContestVoting\n      ? [\n          {\n            label: `Question ${questionId + 1}`,\n            iconName: IconNames.NINJA,\n            body: <Markdown content={props.assessment!.questions[questionId].content} />,\n            id: SideContentType.questionOverview\n          },\n          {\n            label: `Contest Voting Briefing`,\n            iconName: IconNames.BRIEFCASE,\n            body: <Markdown content={props.assessment!.longSummary} />,\n            id: SideContentType.briefing\n          },\n          {\n            label: 'Contest Voting',\n            iconName: IconNames.NEW_LAYERS,\n            body: (\n              <SideContentContestVotingContainer\n                canSave={props.canSave}\n                handleSave={votingSubmission =>\n                  props.handleSave(\n                    (props.assessment?.questions[questionId] as IContestVotingQuestion).id,\n                    votingSubmission\n                  )\n                }\n                handleContestEntryClick={handleContestEntryClick}\n                contestEntries={\n                  (props.assessment?.questions[questionId] as IContestVotingQuestion)\n                    ?.contestEntries ?? []\n                }\n              />\n            ),\n            id: SideContentType.contestVoting\n          },\n          {\n            label: 'Contest Leaderboard',\n            iconName: IconNames.CROWN,\n            body: (\n              <SideContentContestLeaderboard\n                handleContestEntryClick={handleContestEntryClick}\n                orderedContestEntries={\n                  (props.assessment?.questions[questionId] as IContestVotingQuestion)\n                    ?.contestLeaderboard ?? []\n                }\n              />\n            ),\n            id: SideContentType.contestLeaderboard\n          }\n        ]\n      : [\n          {\n            label: `Question ${questionId + 1}`,\n            iconName: IconNames.NINJA,\n            body: (\n              <Markdown\n                className=\"sidecontent-overview\"\n                content={props.assessment!.questions[questionId].content}\n              />\n            ),\n            id: SideContentType.questionOverview\n          },\n          {\n            label: `Briefing`,\n            iconName: IconNames.BRIEFCASE,\n            body: (\n              <Markdown className=\"sidecontent-overview\" content={props.assessment!.longSummary} />\n            ),\n            id: SideContentType.briefing\n          },\n          {\n            label: `Autograder`,\n            iconName: IconNames.AIRPLANE,\n            body: (\n              <SideContentAutograder\n                testcases={props.editorTestcases}\n                autogradingResults={\n                  // Display autograding results if assessment has been graded by an avenger, OR does not need to be manually graded\n                  isGraded || !props.assessmentConfiguration.isManuallyGraded\n                    ? props.autogradingResults\n                    : []\n                }\n                handleTestcaseEval={id => dispatch(evalTestcase(workspaceLocation, id))}\n                workspaceLocation=\"assessment\"\n              />\n            ),\n            id: SideContentType.autograder\n          }\n        ];\n\n    if (isGraded) {\n      tabs.push({\n        label: `Report Card`,\n        iconName: IconNames.TICK,\n        body: (\n          <AssessmentWorkspaceGradingResult\n            graderName={props.assessment!.questions[questionId].grader!.name}\n            gradedAt={props.assessment!.questions[questionId].gradedAt!}\n            xp={props.assessment!.questions[questionId].xp}\n            maxXp={props.assessment!.questions[questionId].maxXp}\n            comments={props.assessment!.questions[questionId].comments}\n          />\n        ),\n        id: SideContentType.grading\n      });\n    }\n\n    const externalLibrary = props.assessment!.questions[questionId].library.external;\n    const functionsAttached = externalLibrary.symbols;\n    if (functionsAttached.includes('get_matrix')) {\n      tabs.push({\n        label: `Tone Matrix`,\n        iconName: IconNames.GRID_VIEW,\n        body: <SideContentToneMatrix />,\n        id: SideContentType.toneMatrix\n      });\n    }\n\n    const onChangeTabs = (\n      newTabId: SideContentType,\n      prevTabId: SideContentType,\n      event: React.MouseEvent<HTMLElement>\n    ) => {\n      if (newTabId === prevTabId) {\n        return;\n      }\n      setSelectedTab(newTabId);\n    };\n\n    return {\n      selectedTabId: selectedTab,\n      tabs: {\n        beforeDynamicTabs: tabs,\n        afterDynamicTabs: []\n      },\n      onChange: onChangeTabs,\n      workspaceLocation: 'assessment'\n    };\n  };\n\n  /**\n   * controlBarProps() will only be called when props.assessment is not undefined\n   * (see 'Rendering Logic' below), thus it is okay to use props.assessment!\n   */\n  const controlBarProps: (q: number) => ControlBarProps = (questionId: number) => {\n    const listingPath = `/courses/${props.courseId}/${assessmentTypeLink(props.assessment!.type)}`;\n    const assessmentWorkspacePath = listingPath + `/${props.assessment!.id.toString()}`;\n    const questionProgress: [number, number] = [questionId + 1, props.assessment!.questions.length];\n\n    const onClickPrevious = () => {\n      history.push(assessmentWorkspacePath + `/${(questionId - 1).toString()}`);\n      setSelectedTab(SideContentType.questionOverview);\n    };\n    const onClickNext = () => {\n      history.push(assessmentWorkspacePath + `/${(questionId + 1).toString()}`);\n      setSelectedTab(SideContentType.questionOverview);\n    };\n    const onClickReturn = () => history.push(listingPath);\n\n    /**\n     * Returns a nullary function that defers the navigation of the browser window, until the\n     * student's answer passes some checks - presently only used for assessments types with blocking = true\n     * (previously used for the 'Path' assessment type in SA Knight)\n     */\n    const onClickProgress = (deferredNavigate: () => void) => {\n      return () => {\n        // Perform question blocking - determine the highest question number previously accessed\n        // by counting the number of questions that have a non-null answer\n        const blockedQuestionId =\n          props.assessment!.questions.filter(qn => qn.answer !== null).length - 1;\n\n        // If the current question does not block the next question, proceed as usual\n        if (questionId < blockedQuestionId) {\n          return deferredNavigate();\n        }\n        // Else evaluate its correctness - proceed iff the answer to the current question is correct\n        const question: Question = props.assessment!.questions[questionId];\n        if (question.type === QuestionTypes.mcq) {\n          // Note that 0 is a falsy value!\n          if (question.answer === null) {\n            return showWarningMessage('Please select an option!', 750);\n          }\n          // If the question is 'blocking', but there is no MCQ solution provided (i.e. assessment uploader's\n          // mistake), allow the student to proceed after selecting an option\n          if ((question as IMCQQuestion).solution === undefined) {\n            return deferredNavigate();\n          }\n          if (question.answer !== (question as IMCQQuestion).solution) {\n            return showWarningMessage('Your MCQ solution is incorrect!', 750);\n          }\n        } else if (question.type === QuestionTypes.programming) {\n          const isCorrect = props.editorTestcases.reduce((acc, testcase) => {\n            return acc && stringify(testcase.result) === testcase.answer;\n          }, true);\n          if (!isCorrect) {\n            return showWarningMessage('Your solution has not passed all testcases!', 750);\n          }\n        }\n        return deferredNavigate();\n      };\n    };\n\n    // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n    const onClickSave = () =>\n      props.handleSave(props.assessment!.questions[questionId].id, props.editorTabs[0].value);\n\n    const onClickResetTemplate = () => {\n      setShowResetTemplateOverlay(true);\n    };\n\n    const nextButton = (\n      <ControlBarNextButton\n        onClickNext={\n          props.assessment!.questions[questionId].blocking\n            ? onClickProgress(onClickNext)\n            : onClickNext\n        }\n        onClickReturn={\n          props.assessment!.questions[questionId].blocking\n            ? onClickProgress(onClickReturn)\n            : onClickReturn\n        }\n        questionProgress={questionProgress}\n        key=\"next_question\"\n      />\n    );\n\n    const previousButton = (\n      <ControlBarPreviousButton\n        onClick={onClickPrevious}\n        questionProgress={questionProgress}\n        key=\"previous_question\"\n      />\n    );\n\n    const questionView = (\n      <ControlBarQuestionViewButton questionProgress={questionProgress} key=\"question_view\" />\n    );\n\n    const resetButton =\n      props.assessment!.questions[questionId].type !== QuestionTypes.mcq ? (\n        <ControlBarResetButton onClick={onClickResetTemplate} key=\"reset_template\" />\n      ) : null;\n\n    const runButton = <ControlBarRunButton handleEditorEval={handleEval} key=\"run\" />;\n\n    const saveButton =\n      props.canSave &&\n      props.assessment!.questions[questionId].type === QuestionTypes.programming ? (\n        <ControlButtonSaveButton\n          hasUnsavedChanges={props.hasUnsavedChanges}\n          onClickSave={onClickSave}\n          key=\"save\"\n        />\n      ) : null;\n\n    const handleChapterSelect = () => {};\n\n    const chapterSelect = (\n      <ControlBarChapterSelect\n        handleChapterSelect={handleChapterSelect}\n        sourceChapter={Chapter.CLANG}\n        sourceVariant={\n          props.assessment!.questions[questionId].library.variant ?? Constants.defaultSourceVariant\n        }\n        disabled={true}\n        key=\"chapter\"\n      />\n    );\n\n    return {\n      editorButtons: !isMobileBreakpoint\n        ? [runButton, saveButton, resetButton, chapterSelect]\n        : [saveButton, resetButton],\n      flowButtons: [previousButton, questionView, nextButton]\n    };\n  };\n\n  const mobileSideContentProps: (q: number) => MobileSideContentProps = (questionId: number) => {\n    const onChangeTabs = (\n      newTabId: SideContentType,\n      prevTabId: SideContentType,\n      event: React.MouseEvent<HTMLElement>\n    ) => {\n      if (newTabId === prevTabId) {\n        return;\n      }\n\n      // Do nothing when clicking the mobile 'Run' tab while on the autograder tab.\n      if (\n        !(prevTabId === SideContentType.autograder && newTabId === SideContentType.mobileEditorRun)\n      ) {\n        setSelectedTab(newTabId);\n      }\n    };\n\n    return {\n      mobileControlBarProps: {\n        ...controlBarProps(questionId)\n      },\n      ...sideContentProps(props, questionId),\n      onChange: onChangeTabs,\n      selectedTabId: selectedTab,\n      handleEditorEval: handleEval\n    };\n  };\n\n  const replButtons = () => {\n    const clearButton = (\n      <ControlBarClearButton\n        handleReplOutputClear={() => dispatch(clearReplOutput(workspaceLocation))}\n        key=\"clear_repl\"\n      />\n    );\n\n    const evalButton = (\n      <ControlBarEvalButton\n        handleReplEval={props.handleReplEval}\n        isRunning={props.isRunning}\n        key=\"eval_repl\"\n      />\n    );\n\n    return [evalButton, clearButton];\n  };\n\n  /* ===============\n     Rendering Logic\n     =============== */\n  if (props.assessment === undefined || props.assessment.questions.length === 0) {\n    return (\n      <NonIdealState\n        className={classNames('WorkspaceParent', Classes.DARK)}\n        description=\"Getting mission ready...\"\n        icon={<Spinner size={SpinnerSize.LARGE} />}\n      />\n    );\n  }\n\n  const overlay = (\n    <Dialog className=\"assessment-briefing\" isOpen={showOverlay}>\n      <Card>\n        <Markdown content={props.assessment.longSummary} />\n        <Button\n          className=\"assessment-briefing-button\"\n          onClick={() => setShowOverlay(false)}\n          text=\"Continue\"\n        />\n      </Card>\n    </Dialog>\n  );\n\n  const closeOverlay = () => setShowResetTemplateOverlay(false);\n  const resetTemplateOverlay = (\n    <Dialog\n      className=\"assessment-reset\"\n      icon={IconNames.ERROR}\n      isCloseButtonShown={true}\n      isOpen={showResetTemplateOverlay}\n      onClose={closeOverlay}\n      title=\"Confirmation: Reset editor?\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <Markdown content=\"Are you sure you want to reset the template?\" />\n        <Markdown content=\"*Note this will not affect the saved copy of your program, unless you save over it.*\" />\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <ButtonGroup>\n          <ControlButton label=\"Cancel\" onClick={closeOverlay} options={{ minimal: false }} />\n          <ControlButton\n            label=\"Confirm\"\n            onClick={() => {\n              closeOverlay();\n              props.handleEditorValueChange(\n                (props.assessment!.questions[questionId] as IProgrammingQuestion).solutionTemplate\n              );\n              props.handleUpdateHasUnsavedChanges(true);\n            }}\n            options={{ minimal: false, intent: Intent.DANGER }}\n          />\n        </ButtonGroup>\n      </div>\n    </Dialog>\n  );\n\n  /* If questionId is out of bounds, set it to the max. */\n  const questionId =\n    props.questionId >= props.assessment.questions.length\n      ? props.assessment.questions.length - 1\n      : props.questionId;\n  const question: Question = props.assessment.questions[questionId];\n  const editorContainerProps: NormalEditorContainerProps | undefined =\n    question.type === QuestionTypes.programming || question.type === QuestionTypes.voting\n      ? {\n          editorVariant: 'normal',\n          editorTabs: props.editorTabs.map(convertEditorTabStateToProps),\n          editorSessionId: '',\n          sourceChapter: Chapter.CLANG,\n          sourceVariant: question.library.variant ?? Variant.DEFAULT,\n          externalLibraryName: question.library.external.name || 'NONE',\n          handleDeclarationNavigate: (cursorPosition: Position) =>\n            dispatch(navigateToDeclaration(workspaceLocation, cursorPosition)),\n          handleEditorEval: handleEval,\n          handleEditorValueChange: props.handleEditorValueChange,\n          handleUpdateHasUnsavedChanges: props.handleUpdateHasUnsavedChanges,\n          handleEditorUpdateBreakpoints: props.handleEditorUpdateBreakpoints,\n          handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n            dispatch(promptAutocomplete(workspaceLocation, row, col, callback)),\n          isEditorAutorun: false,\n          onChange: onChangeMethod,\n          onCursorChange: onCursorChangeMethod,\n          onSelectionChange: onSelectionChangeMethod\n        }\n      : undefined;\n  const mcqProps = {\n    mcq: question as IMCQQuestion,\n    handleMCQSubmit: (option: number) =>\n      props.handleSave(props.assessment!.questions[questionId].id, option)\n  };\n  const replProps = {\n    handleBrowseHistoryDown: () => dispatch(browseReplHistoryDown(workspaceLocation)),\n    handleBrowseHistoryUp: () => dispatch(browseReplHistoryUp(workspaceLocation)),\n    handleReplEval: props.handleReplEval,\n    handleReplValueChange: (newValue: string) =>\n      dispatch(updateReplValue(newValue, workspaceLocation)),\n    output: props.output,\n    replValue: props.replValue,\n    sourceChapter: Chapter.CLANG,\n    sourceVariant: question.library.variant ?? Variant.DEFAULT,\n    externalLibrary: question?.library?.external?.name || 'NONE',\n    replButtons: replButtons()\n  };\n  const sideBarProps = {\n    tabs: []\n  };\n  const workspaceProps: WorkspaceProps = {\n    controlBarProps: controlBarProps(questionId),\n    editorContainerProps: editorContainerProps,\n    handleSideContentHeightChange: (heightChange: number) =>\n      dispatch(changeSideContentHeight(heightChange, workspaceLocation)),\n    hasUnsavedChanges: props.hasUnsavedChanges,\n    mcqProps: mcqProps,\n    sideBarProps: sideBarProps,\n    sideContentHeight: props.sideContentHeight,\n    sideContentProps: sideContentProps(props, questionId),\n    replProps: replProps\n  };\n  const mobileWorkspaceProps: MobileWorkspaceProps = {\n    editorContainerProps: editorContainerProps,\n    hasUnsavedChanges: props.hasUnsavedChanges,\n    mcqProps: mcqProps,\n    replProps: replProps,\n    sideBarProps: sideBarProps,\n    mobileSideContentProps: mobileSideContentProps(questionId)\n  };\n\n  return (\n    <div className={classNames('WorkspaceParent', Classes.DARK)}>\n      {overlay}\n      {resetTemplateOverlay}\n      {!isMobileBreakpoint ? (\n        <Workspace {...workspaceProps} />\n      ) : (\n        <MobileWorkspace {...mobileWorkspaceProps} />\n      )}\n    </div>\n  );\n};\n\nexport default AssessmentWorkspace;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { submitAnswer } from '../application/actions/SessionActions';\nimport { OverallState } from '../application/ApplicationTypes';\nimport {\n  evalRepl,\n  setEditorBreakpoint,\n  updateEditorValue,\n  updateHasUnsavedChanges\n} from '../workspace/WorkspaceActions';\nimport { WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport AssessmentWorkspace, { DispatchProps, OwnProps, StateProps } from './AssessmentWorkspace';\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, OverallState> = (state, props) => {\n  return {\n    courseId: state.session.courseId,\n    assessment: state.session.assessments.get(props.assessmentId),\n    autogradingResults: state.workspaces.assessment.autogradingResults,\n    activeEditorTabIndex: state.workspaces.assessment.activeEditorTabIndex,\n    editorTabs: state.workspaces.assessment.editorTabs,\n    editorTestcases: state.workspaces.assessment.editorTestcases,\n    hasUnsavedChanges: state.workspaces.assessment.hasUnsavedChanges,\n    isRunning: state.workspaces.assessment.isRunning,\n    isDebugging: state.workspaces.assessment.isDebugging,\n    enableDebugging: state.workspaces.assessment.enableDebugging,\n    output: state.workspaces.assessment.output,\n    replValue: state.workspaces.assessment.replValue,\n    sideContentHeight: state.workspaces.assessment.sideContentHeight,\n    storedAssessmentId: state.workspaces.assessment.currentAssessment,\n    storedQuestionId: state.workspaces.assessment.currentQuestion\n  };\n};\n\nconst workspaceLocation: WorkspaceLocation = 'assessment';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleEditorValueChange: (val: string) => updateEditorValue(val, workspaceLocation),\n      handleEditorUpdateBreakpoints: (breakpoints: string[]) =>\n        setEditorBreakpoint(breakpoints, workspaceLocation),\n      handleReplEval: () => evalRepl(workspaceLocation),\n      handleSave: submitAnswer,\n      handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) =>\n        updateHasUnsavedChanges(workspaceLocation, hasUnsavedChanges)\n    },\n    dispatch\n  );\n\nconst AssessmentWorkspaceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AssessmentWorkspace);\n\nexport default AssessmentWorkspaceContainer;\n","import { AssessmentType } from '../assessment/AssessmentTypes';\nimport { Notification, NotificationFilterFunction } from './NotificationBadgeTypes';\n\n/**\n * @return A function that takes in an array of notification and filters it by assessment id.\n */\nexport function filterNotificationsByAssessment(assessmentId: number): NotificationFilterFunction {\n  return (notifications: Notification[]) =>\n    notifications.filter(n => !n.submission_id && n.assessment_id === assessmentId);\n}\n\n/**\n * @return A function that takes in an array of notification and filters it by submission id.\n */\nexport function filterNotificationsBySubmission(submissionId: number): NotificationFilterFunction {\n  return (notifications: Notification[]) =>\n    notifications.filter(n => n.submission_id === submissionId);\n}\n\n/**\n * Notifications will be filtered to one of the Assessment types of the currently selected\n * course, or the Grading type.\n *\n * Notifications with a submission id belongs to the Grading type.\n *\n * @return A function that takes in an array of notification and filters it by the type of notification.\n */\nexport function filterNotificationsByType(\n  assessmentType: AssessmentType\n): NotificationFilterFunction {\n  return (notifications: Notification[]) =>\n    notifications.filter(n => {\n      if (assessmentType === 'Grading') {\n        return n.submission_id !== undefined;\n      }\n      return !n.submission_id && assessmentType === n.assessment_type;\n    });\n}\n\n/**\n * @return A function that takes in an array of notification and filters it by notification id.\n */\nexport function filterNotificationsById(id: number): NotificationFilterFunction {\n  return (notifications: Notification[]) => notifications.filter(n => n.id === id);\n}\n","import { Intent, PopoverInteractionKind, Position, Tag } from '@blueprintjs/core';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport * as React from 'react';\n\nimport { filterNotificationsById } from './NotificationBadgeHelper';\nimport {\n  Notification,\n  NotificationFilterFunction,\n  NotificationType,\n  NotificationTypes\n} from './NotificationBadgeTypes';\n\ntype NotificationBadgeProps = DispatchProps & StateProps & OwnProps;\n\nexport type DispatchProps = {\n  handleAcknowledgeNotifications: (withFilter?: NotificationFilterFunction) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  disableHover?: boolean; // Set to true to disable popover content\n  large?: boolean; // Set to true to use large style\n  notificationFilter?: (notifications: Notification[]) => Notification[];\n};\n\nexport type StateProps = {\n  notifications: Notification[];\n};\n\nconst NotificationBadge: React.SFC<NotificationBadgeProps> = props => {\n  const notifications = props.notificationFilter\n    ? props.notificationFilter(props.notifications)\n    : props.notifications;\n\n  if (!notifications.length) {\n    return null;\n  }\n\n  const notificationIcon = (\n    <Tag intent={Intent.DANGER} round={true} large={props.large}>\n      {notifications.length}\n    </Tag>\n  );\n\n  if (!props.disableHover) {\n    const makeNotificationTag = (notification: Notification) => {\n      const onRemove = () =>\n        props.handleAcknowledgeNotifications(filterNotificationsById(notification.id));\n\n      return (\n        <Tag\n          className=\"row badge-tag\"\n          key={`${notification.id}`}\n          minimal={true}\n          multiline={true}\n          onRemove={onRemove}\n        >\n          {makeNotificationMessage(notification.type)}\n        </Tag>\n      );\n    };\n\n    const notificationTags = <div className=\"col\">{notifications.map(makeNotificationTag)}</div>;\n\n    return (\n      <Popover2\n        className={props.className}\n        content={notificationTags}\n        interactionKind={PopoverInteractionKind.HOVER}\n        placement={Position.RIGHT}\n        hoverOpenDelay={50}\n        hoverCloseDelay={50}\n        lazy={true}\n      >\n        {notificationIcon}\n      </Popover2>\n    );\n  }\n\n  return notificationIcon;\n};\n\nconst makeNotificationMessage = (type: NotificationType) => {\n  switch (type) {\n    case NotificationTypes.new:\n      return 'This assessment is new.';\n    case NotificationTypes.deadline:\n      return 'This assessment is closing soon.';\n    case NotificationTypes.autograded:\n      return 'This assessment has been autograded.';\n    case NotificationTypes.submitted:\n      return 'This submission is new.';\n    case NotificationTypes.unsubmitted:\n      return 'This assessment has been unsubmitted.';\n    case NotificationTypes.graded:\n      return 'This assessment has been manually graded.';\n    case NotificationTypes.new_message:\n      return 'There are new messages.';\n    default:\n      return 'Unknown notification';\n  }\n};\n\nexport default NotificationBadge;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { acknowledgeNotifications } from '../application/actions/SessionActions';\nimport { OverallState } from '../application/ApplicationTypes';\nimport NotificationBadge, { DispatchProps, StateProps } from './NotificationBadge';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  notifications: state.session.notifications\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleAcknowledgeNotifications: acknowledgeNotifications\n    },\n    dispatch\n  );\n\nconst NotificationBadgeContainer = connect(mapStateToProps, mapDispatchToProps)(NotificationBadge);\n\nexport default NotificationBadgeContainer;\n","import { Classes, NonIdealState } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\n\nconst AssessmentNotFound: React.FC = () => (\n  <div className={classNames('NoPage', Classes.DARK)}>\n    <NonIdealState\n      icon={IconNames.ERROR}\n      title=\"Assessment Not Found\"\n      description=\"Please check the top right dropdown menu to see if you are in the right course.\"\n    />\n  </div>\n);\n\nexport default AssessmentNotFound;\n","import {\n  Button,\n  ButtonGroup,\n  Card,\n  Classes,\n  Collapse,\n  Dialog,\n  Elevation,\n  H4,\n  H6,\n  Icon,\n  IconName,\n  Intent,\n  NonIdealState,\n  Position,\n  Spinner,\n  Text\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\n\nimport defaultCoverImage from '../../assets/default_cover_image.jpg';\nimport { OwnProps as AssessmentWorkspaceOwnProps } from '../assessmentWorkspace/AssessmentWorkspace';\nimport AssessmentWorkspaceContainer from '../assessmentWorkspace/AssessmentWorkspaceContainer';\nimport ContentDisplay from '../ContentDisplay';\nimport ControlButton from '../ControlButton';\nimport Markdown from '../Markdown';\nimport NotificationBadge from '../notificationBadge/NotificationBadgeContainer';\nimport { filterNotificationsByAssessment } from '../notificationBadge/NotificationBadgeHelper';\nimport { NotificationFilterFunction } from '../notificationBadge/NotificationBadgeTypes';\nimport Constants from '../utils/Constants';\nimport { beforeNow, getPrettyDate } from '../utils/DateHelper';\nimport { useResponsive } from '../utils/Hooks';\nimport { assessmentTypeLink, stringParamToInt } from '../utils/ParamParseHelper';\nimport AssessmentNotFound from './AssessmentNotFound';\nimport {\n  AssessmentConfiguration,\n  AssessmentOverview,\n  AssessmentStatuses,\n  AssessmentWorkspaceParams,\n  GradingStatuses\n} from './AssessmentTypes';\n\nexport type AssessmentProps = DispatchProps & OwnProps & StateProps;\n\nexport type DispatchProps = {\n  handleAcknowledgeNotifications: (withFilter?: NotificationFilterFunction) => void;\n  handleAssessmentOverviewFetch: () => void;\n  handleSubmitAssessment: (id: number) => void;\n};\n\nexport type OwnProps = {\n  assessmentConfiguration: AssessmentConfiguration;\n};\n\nexport type StateProps = {\n  assessmentOverviews?: AssessmentOverview[];\n  isStudent: boolean;\n  courseId?: number;\n};\n\nconst Assessment: React.FC<AssessmentProps> = props => {\n  const params = useParams<AssessmentWorkspaceParams>();\n  const { isMobileBreakpoint } = useResponsive();\n  const [betchaAssessment, setBetchaAssessment] = React.useState<AssessmentOverview | null>(null);\n  const [showClosedAssessments, setShowClosedAssessments] = React.useState<boolean>(false);\n  const [showOpenedAssessments, setShowOpenedAssessments] = React.useState<boolean>(true);\n  const [showUpcomingAssessments, setShowUpcomingAssessments] = React.useState<boolean>(true);\n\n  const toggleClosedAssessments = () => setShowClosedAssessments(!showClosedAssessments);\n  const toggleOpenAssessments = () => setShowOpenedAssessments(!showOpenedAssessments);\n  const toggleUpcomingAssessments = () => setShowUpcomingAssessments(!showUpcomingAssessments);\n  const setBetchaAssessmentNull = () => setBetchaAssessment(null);\n  const submitAssessment = () => {\n    if (betchaAssessment) {\n      props.handleSubmitAssessment(betchaAssessment.id);\n      setBetchaAssessmentNull();\n    }\n  };\n\n  const sortAssessments = (assessments: AssessmentOverview[]) => sortBy(assessments, [a => -a.id]);\n\n  const makeSubmissionButton = (overview: AssessmentOverview, index: number) => (\n    <Button\n      disabled={overview.status !== AssessmentStatuses.attempted}\n      icon={IconNames.CONFIRM}\n      intent={overview.status === AssessmentStatuses.attempted ? Intent.DANGER : Intent.NONE}\n      minimal={true}\n      // intentional: each listing renders its own version of onClick\n      // tslint:disable-next-line:jsx-no-lambda\n      onClick={() => setBetchaAssessment(overview)}\n    >\n      <span className=\"custom-hidden-xxxs\">Finalize</span>\n      <span className=\"custom-hidden-xxs\"> Submission</span>\n    </Button>\n  );\n\n  const makeAssessmentInteractButton = (overview: AssessmentOverview) => {\n    let icon: IconName;\n    let label: string;\n    let optionalLabel: string = '';\n\n    switch (overview.status) {\n      case AssessmentStatuses.not_attempted:\n        icon = IconNames.PLAY;\n        label = 'Attempt';\n        break;\n      case AssessmentStatuses.attempting:\n        icon = IconNames.PLAY;\n        label = 'Continue';\n        optionalLabel = ' Attempt';\n        break;\n      case AssessmentStatuses.attempted:\n        icon = IconNames.EDIT;\n        label = 'Review';\n        optionalLabel = ' Attempt';\n        break;\n      case AssessmentStatuses.submitted:\n        icon = IconNames.EYE_OPEN;\n        label = 'Review';\n        optionalLabel = ' Submission';\n        break;\n      default:\n        // If we reach this case, backend data did not fit IAssessmentOverview\n        icon = IconNames.PLAY;\n        label = 'Review';\n        break;\n    }\n    return (\n      <NavLink\n        to={`/courses/${props.courseId}/${assessmentTypeLink(\n          overview.type\n        )}/${overview.id.toString()}/${Constants.defaultQuestionId}`}\n      >\n        <Button\n          icon={icon}\n          minimal={true}\n          onClick={() =>\n            props.handleAcknowledgeNotifications(filterNotificationsByAssessment(overview.id))\n          }\n        >\n          <span className=\"custom-hidden-xxxs\">{label}</span>\n          <span className=\"custom-hidden-xxs\">{optionalLabel}</span>\n        </Button>\n      </NavLink>\n    );\n  };\n\n  /**\n   * Create a series of cards to display IAssessmentOverviews.\n   * @param {AssessmentOverview} overview the assessment overview to display\n   * @param {number} index a unique number for this card (required for sequential rendering).\n   *   See {@link https://reactjs.org/docs/lists-and-keys.html#keys}\n   * @param renderAttemptButton will only render the attempt button if true, regardless\n   *   of attempt status.\n   * @param notifications the notifications to be passed in.\n   */\n  const makeOverviewCard = (\n    overview: AssessmentOverview,\n    index: number,\n    renderAttemptButton: boolean,\n    renderGradingStatus: boolean\n  ) => {\n    const showGrade =\n      overview.gradingStatus === 'graded' || !props.assessmentConfiguration.isManuallyGraded;\n    const ratio = isMobileBreakpoint ? 5 : 3;\n    return (\n      <div key={index}>\n        <Card className=\"row listing\" elevation={Elevation.ONE}>\n          <div className={`col-xs-${String(ratio)} listing-picture`}>\n            <NotificationBadge\n              className=\"badge\"\n              notificationFilter={filterNotificationsByAssessment(overview.id)}\n              large={true}\n            />\n            <img\n              alt=\"Assessment\"\n              className={`cover-image-${overview.status}`}\n              src={overview.coverImage ? overview.coverImage : defaultCoverImage}\n            />\n          </div>\n          <div className={`col-xs-${String(12 - ratio)} listing-text`}>\n            {makeOverviewCardTitle(overview, index, renderGradingStatus)}\n            <div className=\"listing-xp\">\n              <H6>\n                {showGrade ? `XP: ${overview.xp} / ${overview.maxXp}` : `Max XP: ${overview.maxXp}`}\n              </H6>\n            </div>\n            <div className=\"listing-description\">\n              <Markdown content={overview.shortSummary} />\n            </div>\n            <div className=\"listing-footer\">\n              <div>\n                <Text className=\"listing-due-date\">\n                  <Icon className=\"listing-due-icon\" iconSize={12} icon={IconNames.CALENDAR} />\n                  {`${beforeNow(overview.openAt) ? 'Opened' : 'Opens'}: ${getPrettyDate(\n                    overview.openAt\n                  )}`}\n                </Text>\n                {beforeNow(overview.openAt) && (\n                  <Text className=\"listing-due-date\">\n                    <Icon className=\"listing-due-icon\" iconSize={12} icon={IconNames.TIME} />\n                    {`Due: ${getPrettyDate(overview.closeAt)}`}\n                  </Text>\n                )}\n              </div>\n              <div className=\"listing-button\">\n                {renderAttemptButton ? makeAssessmentInteractButton(overview) : null}\n              </div>\n            </div>\n          </div>\n        </Card>\n      </div>\n    );\n  };\n\n  const makeOverviewCardTitle = (\n    overview: AssessmentOverview,\n    index: number,\n    renderGradingStatus: boolean\n  ) => (\n    <div className=\"listing-header\">\n      <Text ellipsize={true}>\n        <H4 className=\"listing-title\">\n          {overview.title}\n          {overview.private ? (\n            <Tooltip2\n              className=\"listing-title-tooltip\"\n              content=\"This assessment is password-protected.\"\n            >\n              <Icon icon=\"lock\" />\n            </Tooltip2>\n          ) : null}\n          {renderGradingStatus ? makeGradingStatus(overview.gradingStatus) : null}\n        </H4>\n      </Text>\n      <div className=\"listing-button\">{makeSubmissionButton(overview, index)}</div>\n    </div>\n  );\n\n  // Rendering Logic\n  const { assessmentOverviews: assessmentOverviewsUnfiltered, isStudent } = props;\n  const assessmentOverviews = React.useMemo(\n    () =>\n      assessmentOverviewsUnfiltered?.filter(ao => ao.type === props.assessmentConfiguration.type),\n    [assessmentOverviewsUnfiltered, props.assessmentConfiguration.type]\n  );\n  const assessmentId: number | null = stringParamToInt(params.assessmentId);\n  const questionId: number = stringParamToInt(params.questionId) || Constants.defaultQuestionId;\n\n  // If there is an assessment to render, create a workspace. The assessment\n  // overviews must still be loaded for this, to send the due date.\n  if (assessmentId !== null && assessmentOverviews !== undefined) {\n    const overview = assessmentOverviews.filter(a => a.id === assessmentId)[0];\n    if (!overview) {\n      return <AssessmentNotFound />;\n    }\n    const assessmentWorkspaceProps: AssessmentWorkspaceOwnProps = {\n      assessmentId,\n      questionId,\n      notAttempted: overview.status === AssessmentStatuses.not_attempted,\n      canSave:\n        !props.isStudent ||\n        (overview.status !== AssessmentStatuses.submitted && !beforeNow(overview.closeAt)),\n      assessmentConfiguration: props.assessmentConfiguration\n    };\n    return <AssessmentWorkspaceContainer {...assessmentWorkspaceProps} />;\n  }\n\n  // Otherwise, render a list of assOwnProps\n  let display: JSX.Element;\n  if (assessmentOverviews === undefined) {\n    display = <NonIdealState description=\"Fetching assessment...\" icon={<Spinner />} />;\n  } else if (assessmentOverviews.length === 0) {\n    display = <NonIdealState title=\"There are no assessments.\" icon={IconNames.FLAME} />;\n  } else {\n    /** Upcoming assessments, that are not released yet. */\n    const isOverviewUpcoming = (overview: AssessmentOverview) =>\n      !beforeNow(overview.closeAt) && !beforeNow(overview.openAt);\n\n    const upcomingCards = sortAssessments(assessmentOverviews.filter(isOverviewUpcoming)).map(\n      (overview, index) => makeOverviewCard(overview, index, !isStudent, false)\n    );\n\n    /** Opened assessments, that are released and can be attempted. */\n    const isOverviewOpened = (overview: AssessmentOverview) =>\n      !beforeNow(overview.closeAt) &&\n      beforeNow(overview.openAt) &&\n      overview.status !== AssessmentStatuses.submitted;\n    const openedCards = sortAssessments(\n      assessmentOverviews.filter(overview => isOverviewOpened(overview))\n    ).map((overview, index) => makeOverviewCard(overview, index, true, false));\n\n    /** Closed assessments, that are past the due date or cannot be attempted further. */\n    const closedCards = sortAssessments(\n      assessmentOverviews.filter(\n        overview => !isOverviewOpened(overview) && !isOverviewUpcoming(overview)\n      )\n    ).map((overview, index) => makeOverviewCard(overview, index, true, true));\n\n    /** Render cards */\n    const upcomingCardsCollapsible = (\n      <>\n        {collapseButton('Upcoming', showUpcomingAssessments, toggleUpcomingAssessments)}\n        <Collapse isOpen={showUpcomingAssessments}>{upcomingCards}</Collapse>\n      </>\n    );\n\n    const openedCardsCollapsible = (\n      <>\n        {collapseButton('Open', showOpenedAssessments, toggleOpenAssessments)}\n        <Collapse isOpen={showOpenedAssessments}>{openedCards}</Collapse>\n      </>\n    );\n\n    const closedCardsCollapsible = (\n      <>\n        {collapseButton('Closed', showClosedAssessments, toggleClosedAssessments)}\n        <Collapse isOpen={showClosedAssessments}>{closedCards}</Collapse>\n      </>\n    );\n\n    display = (\n      <>\n        {upcomingCards.length > 0 ? upcomingCardsCollapsible : null}\n        {openedCards.length > 0 ? openedCardsCollapsible : null}\n        {closedCards.length > 0 ? closedCardsCollapsible : null}\n      </>\n    );\n  }\n\n  // Define the betcha dialog (in each card's menu)\n  const submissionText = betchaAssessment ? (\n    <p>\n      You are about to finalise your submission for the {betchaAssessment.type.toLowerCase()}{' '}\n      <i>&quot;{betchaAssessment.title}&quot;</i>.\n    </p>\n  ) : (\n    <p>You are about to finalise your submission.</p>\n  );\n  const betchaText = (\n    <>\n      {submissionText}\n      <p>\n        Finalising your submission early grants you additional XP, but{' '}\n        <span className=\"warning\">this action is irreversible.</span>\n      </p>\n    </>\n  );\n  const betchaDialog = (\n    <Dialog\n      className=\"betcha-dialog\"\n      icon={IconNames.ERROR}\n      isCloseButtonShown={true}\n      isOpen={betchaAssessment !== null}\n      onClose={setBetchaAssessmentNull}\n      title=\"Finalise submission?\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <Text>{betchaText}</Text>\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <ButtonGroup>\n          <ControlButton\n            label=\"Cancel\"\n            onClick={setBetchaAssessmentNull}\n            options={{ minimal: false }}\n          />\n          <ControlButton\n            label=\"Finalise\"\n            onClick={submitAssessment}\n            options={{ minimal: false, intent: Intent.DANGER }}\n          />\n        </ButtonGroup>\n      </div>\n    </Dialog>\n  );\n\n  // Finally, render the ContentDisplay.\n  return (\n    <div className=\"Assessment\">\n      <ContentDisplay display={display} loadContentDispatch={props.handleAssessmentOverviewFetch} />\n      {betchaDialog}\n    </div>\n  );\n};\n\nconst makeGradingStatus = (gradingStatus: string) => {\n  let iconName: IconName;\n  let intent: Intent;\n  let tooltip: string;\n\n  switch (gradingStatus) {\n    case GradingStatuses.graded:\n      iconName = IconNames.TICK;\n      intent = Intent.SUCCESS;\n      tooltip = 'Fully graded';\n      break;\n    case GradingStatuses.grading:\n      iconName = IconNames.TIME;\n      intent = Intent.WARNING;\n      tooltip = 'Grading in progress';\n      break;\n    case GradingStatuses.none:\n      iconName = IconNames.CROSS;\n      intent = Intent.DANGER;\n      tooltip = 'Not graded yet';\n      break;\n    default:\n      // Shows default icon if this assessment is ungraded\n      iconName = IconNames.DISABLE;\n      intent = Intent.PRIMARY;\n      tooltip = `Not applicable`;\n      break;\n  }\n\n  return (\n    <Tooltip2 className=\"listing-title-tooltip\" content={tooltip} placement={Position.RIGHT}>\n      <Icon icon={iconName} intent={intent} />\n    </Tooltip2>\n  );\n};\n\nconst collapseButton = (label: string, isOpen: boolean, toggleFunc: () => void) => (\n  <ControlButton\n    label={label}\n    icon={isOpen ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT}\n    onClick={toggleFunc}\n    options={{ minimal: true, className: 'collapse-button' }}\n  />\n);\n\nexport default Assessment;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  acknowledgeNotifications,\n  fetchAssessmentOverviews,\n  submitAssessment\n} from '../application/actions/SessionActions';\nimport { OverallState, Role } from '../application/ApplicationTypes';\nimport Assessment, { DispatchProps, OwnProps, StateProps } from './Assessment';\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, OverallState> = (state, props) => ({\n  assessmentOverviews: state.session.assessmentOverviews,\n  isStudent: state.session.role ? state.session.role === Role.Student : true,\n  courseId: state.session.courseId\n});\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleAcknowledgeNotifications: acknowledgeNotifications,\n      handleAssessmentOverviewFetch: fetchAssessmentOverviews,\n      handleSubmitAssessment: submitAssessment\n    },\n    dispatch\n  );\n\nconst AssessmentContainer = connect(mapStateToProps, mapDispatchToProps)(Assessment);\n\nexport default AssessmentContainer;\n","import { Classes, NonIdealState } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nconst NotFound: React.SFC<{}> = () => (\n  <div className={classNames('NoPage', Classes.DARK)}>\n    <NonIdealState\n      icon={IconNames.ERROR}\n      title=\"404 Not Found\"\n      description=\"The requested resource could not be found\"\n    />\n  </div>\n);\n\nexport default NotFound;\n","import {\n  cardBackgroundUrl,\n  coverImageUrl\n} from '../../../../features/achievement/AchievementConstants';\nimport {\n  AchievementItem,\n  AchievementView\n} from '../../../../features/achievement/AchievementTypes';\n\nexport const viewTemplate: AchievementView = {\n  coverImage: `${coverImageUrl}/default.png`,\n  description: '',\n  completionText: ''\n};\n\nexport const achievementTemplate: AchievementItem = {\n  uuid: '',\n  title: 'Achievement Title Here',\n  xp: 0,\n  isVariableXp: false,\n  isTask: false,\n  position: 0,\n  prerequisiteUuids: [],\n  goalUuids: [],\n  cardBackground: `${cardBackgroundUrl}/default.png`,\n  view: viewTemplate\n};\n","import { Button } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { useContext } from 'react';\nimport { AchievementContext } from 'src/features/achievement/AchievementConstants';\n\nimport { achievementTemplate } from './AchievementTemplate';\n\ntype AchievementAdderProps = {\n  allowNewUuid: boolean;\n  setNewUuid: (uuid: string) => void;\n};\n\nfunction AchievementAdder(props: AchievementAdderProps) {\n  const { allowNewUuid, setNewUuid } = props;\n\n  const inferencer = useContext(AchievementContext);\n\n  const addAchievement = () => setNewUuid(inferencer.insertAchievement(achievementTemplate));\n\n  return (\n    <Button\n      className=\"command-button\"\n      disabled={!allowNewUuid}\n      icon={IconNames.NEW_OBJECT}\n      onClick={addAchievement}\n      text=\"Create Achievement\"\n    />\n  );\n}\n\nexport default AchievementAdder;\n","import { Button } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { showSimpleConfirmDialog } from 'src/commons/utils/DialogHelper';\n\ntype ItemDeleterProps = {\n  deleteItem: () => void;\n  item: string;\n};\n\nfunction ItemDeleter(props: ItemDeleterProps) {\n  const { deleteItem, item } = props;\n\n  const confirmDelete = async () => {\n    const confirm = await showSimpleConfirmDialog({\n      contents: `Are you sure you want to delete '${item}' ?`,\n      negativeLabel: 'No',\n      positiveIntent: 'danger',\n      positiveLabel: 'Yes, delete'\n    });\n    if (confirm) {\n      deleteItem();\n    }\n  };\n\n  return (\n    <Tooltip2 content=\"Delete\">\n      <Button icon={IconNames.TRASH} intent=\"danger\" onClick={confirmDelete} />\n    </Tooltip2>\n  );\n}\n\nexport default ItemDeleter;\n","import { Button } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { showSuccessMessage, showWarningMessage } from 'src/commons/utils/NotificationsHelper';\n\ntype ItemSaverProps = {\n  discardChanges: () => void;\n  saveChanges: () => void;\n};\n\nfunction ItemSaver(props: ItemSaverProps) {\n  const { discardChanges, saveChanges } = props;\n\n  const handleSaveChanges = () => {\n    saveChanges();\n    showSuccessMessage('Saved changes locally');\n  };\n\n  const handleDiscardChanges = () => {\n    discardChanges();\n    showWarningMessage('Discarded changes');\n  };\n\n  return (\n    <>\n      <Tooltip2 content=\"Save Changes\">\n        <Button icon={IconNames.FLOPPY_DISK} intent=\"primary\" onClick={handleSaveChanges} />\n      </Tooltip2>\n\n      <Tooltip2 content=\"Discard Changes\">\n        <Button icon={IconNames.CROSS} intent=\"danger\" onClick={handleDiscardChanges} />\n      </Tooltip2>\n    </>\n  );\n}\n\nexport default ItemSaver;\n","import { MenuItem } from '@blueprintjs/core';\nimport { ItemPredicate, ItemRenderer, MultiSelect } from '@blueprintjs/select';\nimport { without } from 'lodash';\nimport { useContext } from 'react';\nimport { AchievementContext } from 'src/features/achievement/AchievementConstants';\nimport { AchievementGoal } from 'src/features/achievement/AchievementTypes';\n\ntype EditableGoalUuidsProps = {\n  changeGoalUuids: (goalUuids: string[]) => void;\n  goalUuids: string[];\n};\n\nfunction EditableGoalUuids(props: EditableGoalUuidsProps) {\n  const { changeGoalUuids, goalUuids } = props;\n\n  const inferencer = useContext(AchievementContext);\n  const allGoalUuids = inferencer.getAllGoalUuids();\n  const selectedUuids = goalUuids.filter(\n    uuid => !inferencer.isInvalidGoal(inferencer.getGoal(uuid))\n  );\n\n  const getUuid = (text: string) => inferencer.getUuidByText(text);\n\n  const GoalSelect = MultiSelect.ofType<AchievementGoal>();\n  const goalRenderer: ItemRenderer<AchievementGoal> = (goal, { handleClick }) => (\n    <MenuItem key={goal.uuid} onClick={handleClick} text={goal.text} />\n  );\n  const goalPredicate: ItemPredicate<AchievementGoal> = (query, item) =>\n    item.text.toLowerCase().includes(query.toLowerCase());\n\n  const selectedGoals = new Set(selectedUuids);\n  const availableGoals = new Set(without(allGoalUuids, ...goalUuids));\n\n  const selectGoal = (selectUuid: string) => {\n    selectedGoals.add(selectUuid);\n    availableGoals.delete(selectUuid);\n    changeGoalUuids([...selectedGoals]);\n  };\n\n  const removeGoal = (removeUuid?: string) => {\n    if (removeGoal === undefined) return;\n\n    selectedGoals.delete(removeUuid!);\n    availableGoals.add(removeUuid!);\n    changeGoalUuids([...selectedGoals]);\n  };\n\n  return (\n    <GoalSelect\n      itemRenderer={goalRenderer}\n      items={[...availableGoals].map(uuid => inferencer.getGoal(uuid))}\n      noResults={<MenuItem disabled={true} text=\"No available goal\" />}\n      onItemSelect={goal => selectGoal(goal.uuid)}\n      selectedItems={[...selectedGoals].map(uuid => inferencer.getGoal(uuid))}\n      tagInputProps={{ onRemove: text => removeGoal(getUuid(text!.toString())) }}\n      tagRenderer={goal => goal.text}\n      itemPredicate={goalPredicate}\n      resetOnSelect={true}\n    />\n  );\n}\n\nexport default EditableGoalUuids;\n","import { Button, MenuItem } from '@blueprintjs/core';\nimport { ItemRenderer, Select } from '@blueprintjs/select';\nimport { useContext } from 'react';\nimport { AchievementContext } from 'src/features/achievement/AchievementConstants';\n\ntype EditablePositionProps = {\n  changePosition: (position: number) => void;\n  position: number;\n};\n\nfunction EditablePosition(props: EditablePositionProps) {\n  const { changePosition, position } = props;\n\n  const inferencer = useContext(AchievementContext);\n  const maxPosition = inferencer.listTaskUuids().length + 1;\n  const positionOptions = [...Array(maxPosition + 1).keys()]; // [0..maxPosition + 1]\n\n  const PositionSelect = Select.ofType<number>();\n  const positionRenderer: ItemRenderer<number> = (position, { handleClick }) => (\n    <MenuItem key={position} onClick={handleClick} text={position} />\n  );\n\n  return (\n    <PositionSelect\n      filterable={false}\n      itemRenderer={positionRenderer}\n      items={positionOptions}\n      onItemSelect={changePosition}\n    >\n      <Button text={position} />\n    </PositionSelect>\n  );\n}\n\nexport default EditablePosition;\n","import { MenuItem } from '@blueprintjs/core';\nimport { ItemPredicate, ItemRenderer, MultiSelect } from '@blueprintjs/select';\nimport { without } from 'lodash';\nimport { useContext } from 'react';\nimport { AchievementContext } from 'src/features/achievement/AchievementConstants';\nimport { AchievementItem } from 'src/features/achievement/AchievementTypes';\n\ntype EditablePrerequisiteUuidsProps = {\n  changePrerequisiteUuids: (prerequisiteUuids: string[]) => void;\n  uuid: string;\n  prerequisiteUuids: string[];\n};\n\nfunction EditablePrerequisiteUuids(props: EditablePrerequisiteUuidsProps) {\n  const { changePrerequisiteUuids, uuid, prerequisiteUuids } = props;\n\n  const enablePrerequisites = false;\n\n  const inferencer = useContext(AchievementContext);\n  const availableUuids: string[] = enablePrerequisites\n    ? inferencer.listAvailablePrerequisiteUuids(uuid)\n    : [];\n  const selectedUuids = prerequisiteUuids.filter(\n    uuid => !inferencer.isInvalidAchievement(inferencer.getAchievement(uuid))\n  );\n\n  const getUuid = (title: string) => inferencer.getUuidByTitle(title);\n\n  const PrerequisiteSelect = MultiSelect.ofType<AchievementItem>();\n  const prerequisiteRenderer: ItemRenderer<AchievementItem> = (achievement, { handleClick }) => (\n    <MenuItem key={achievement.uuid} onClick={handleClick} text={achievement.title} />\n  );\n  const prerequisitePredicate: ItemPredicate<AchievementItem> = (query, item) =>\n    item.title.toLowerCase().includes(query.toLowerCase());\n\n  const selectedPrereqs = new Set(selectedUuids);\n  const availablePrereqs = new Set(without(availableUuids, ...selectedUuids));\n\n  const selectPrereq = (selectUuid: string) => {\n    selectedPrereqs.add(selectUuid);\n    availablePrereqs.delete(selectUuid);\n    changePrerequisiteUuids([...selectedPrereqs]);\n  };\n\n  const removePrereq = (removeUuid?: string) => {\n    if (removeUuid === undefined) return;\n\n    selectedPrereqs.delete(removeUuid);\n    availablePrereqs.add(removeUuid);\n    changePrerequisiteUuids([...selectedPrereqs]);\n  };\n\n  return (\n    <PrerequisiteSelect\n      itemRenderer={prerequisiteRenderer}\n      items={[...availablePrereqs].map(uuid => inferencer.getAchievement(uuid))}\n      noResults={<MenuItem disabled={true} text=\"No available achievement\" />}\n      onItemSelect={achievement => selectPrereq(achievement.uuid)}\n      selectedItems={[...selectedPrereqs].map(uuid => inferencer.getAchievement(uuid))}\n      tagInputProps={{ onRemove: title => removePrereq(getUuid(title!.toString())) }}\n      tagRenderer={achievement => achievement.title}\n      itemPredicate={prerequisitePredicate}\n      resetOnSelect={true}\n    />\n  );\n}\n\nexport default EditablePrerequisiteUuids;\n","import { Button, Checkbox, Dialog, EditableText } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { useState } from 'react';\nimport { AchievementItem } from 'src/features/achievement/AchievementTypes';\n\nimport EditableGoalUuids from './achievementSettings/EditableGoalUuids';\nimport EditablePosition from './achievementSettings/EditablePosition';\nimport EditablePrerequisiteUuids from './achievementSettings/EditablePrerequisiteUuids';\n\ntype AchievementSettingsProps = {\n  changeCardBackground: (cardBackground: string) => void;\n  changeGoalUuids: (goalUuids: string[]) => void;\n  changePosition: (position: number) => void;\n  changePrerequisiteUuids: (prerequisiteUuids: string[]) => void;\n  changeIsVariableXp: () => void;\n  editableAchievement: AchievementItem;\n};\n\nfunction AchievementSettings(props: AchievementSettingsProps) {\n  const {\n    changeCardBackground,\n    changeGoalUuids,\n    changePosition,\n    changePrerequisiteUuids,\n    changeIsVariableXp,\n    editableAchievement\n  } = props;\n  const { uuid, cardBackground, goalUuids, position, prerequisiteUuids, isVariableXp } =\n    editableAchievement;\n\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const toggleOpen = () => setOpen(!isOpen);\n\n  return (\n    <>\n      <Tooltip2 content=\"More Settings\">\n        <Button icon={IconNames.WRENCH} onClick={toggleOpen} />\n      </Tooltip2>\n\n      <Dialog title=\"More Settings\" icon={IconNames.WRENCH} isOpen={isOpen} onClose={toggleOpen}>\n        <div style={{ padding: '0 0.5em' }}>\n          <h3>Card Background</h3>\n          <EditableText\n            multiline={true}\n            onChange={changeCardBackground}\n            placeholder=\"Enter card background URL here\"\n            value={cardBackground}\n          />\n          <h3>Position</h3>\n          <p>Note: Select position 0 to hide achievement</p>\n          <EditablePosition changePosition={changePosition} position={position} />\n          <h3>Prerequisites</h3>\n          <EditablePrerequisiteUuids\n            changePrerequisiteUuids={changePrerequisiteUuids}\n            uuid={uuid}\n            prerequisiteUuids={prerequisiteUuids}\n          />\n          <h3>Goals</h3>\n          <EditableGoalUuids changeGoalUuids={changeGoalUuids} goalUuids={goalUuids} />\n\n          <h3>Variable XP</h3>\n          <Checkbox\n            label={\"The rewarded XP will be equal to the sum of 'count' of goals\"}\n            checked={isVariableXp}\n            onChange={changeIsVariableXp}\n          />\n        </div>\n      </Dialog>\n    </>\n  );\n}\n\nexport default AchievementSettings;\n","import { Button } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { showSuccessMessage } from 'src/commons/utils/NotificationsHelper';\n\ntype AchievementUuidCopierProps = {\n  uuid: string;\n};\n\nfunction AchievmenetUuidCopier(props: AchievementUuidCopierProps) {\n  const { uuid } = props;\n\n  const hoverText = 'Click to copy achievement UUID';\n  const copy = () => {\n    navigator.clipboard.writeText(uuid);\n    showSuccessMessage('UUID copied to clipboard');\n  };\n\n  return (\n    <>\n      <Tooltip2 content={hoverText}>\n        <Button icon={IconNames.CLIPBOARD} onClick={copy} />\n      </Tooltip2>\n    </>\n  );\n}\n\nexport default AchievmenetUuidCopier;\n","import { AchievementItem, AchievementView } from 'src/features/achievement/AchievementTypes';\n\nexport enum EditableCardActionType {\n  CHANGE_CARD_BACKGROUND = 'CHANGE_CARD_BACKGROUND',\n  CHANGE_DEADLINE = 'CHANGE_DEADLINE',\n  CHANGE_GOAL_UUIDS = 'CHANGE_GOAL_UUIDS',\n  CHANGE_POSITION = 'CHANGE_POSITION',\n  CHANGE_PREREQUISITE_UUIDS = 'CHANGE_PREREQUISITE_UUIDS',\n  CHANGE_RELEASE = 'CHANGE_RELEASE',\n  CHANGE_TITLE = 'CHANGE_TITLE',\n  CHANGE_IS_VARIABLE_XP = 'CHANGE_VARIABLE_XP',\n  CHANGE_VIEW = 'CHANGE_VIEW',\n  CHANGE_XP = 'CHANGE_XP',\n  DELETE_ACHIEVEMENT = 'DELETE_ACHIEVEMENT',\n  DISCARD_CHANGES = 'DISCARD_CHANGES',\n  SAVE_CHANGES = 'SAVE_CHANGES'\n}\n\nexport type EditableCardAction =\n  | {\n      type: EditableCardActionType.CHANGE_CARD_BACKGROUND;\n      payload: string;\n    }\n  | {\n      type: EditableCardActionType.CHANGE_DEADLINE;\n      payload: Date | undefined;\n    }\n  | {\n      type: EditableCardActionType.CHANGE_GOAL_UUIDS;\n      payload: string[];\n    }\n  | {\n      type: EditableCardActionType.CHANGE_POSITION;\n      payload: number;\n    }\n  | {\n      type: EditableCardActionType.CHANGE_PREREQUISITE_UUIDS;\n      payload: string[];\n    }\n  | {\n      type: EditableCardActionType.CHANGE_RELEASE;\n      payload: Date | undefined;\n    }\n  | {\n      type: EditableCardActionType.CHANGE_TITLE;\n      payload: string;\n    }\n  | {\n      type: EditableCardActionType.CHANGE_IS_VARIABLE_XP;\n    }\n  | {\n      type: EditableCardActionType.CHANGE_VIEW;\n      payload: AchievementView;\n    }\n  | {\n      type: EditableCardActionType.CHANGE_XP;\n      payload: number;\n    }\n  | {\n      type: EditableCardActionType.DELETE_ACHIEVEMENT;\n    }\n  | {\n      type: EditableCardActionType.DISCARD_CHANGES;\n      payload: AchievementItem;\n    }\n  | {\n      type: EditableCardActionType.SAVE_CHANGES;\n    };\n\nexport type EditableCardState = {\n  editableAchievement: AchievementItem;\n  isDirty: boolean;\n};\n","import { Button, Dialog } from '@blueprintjs/core';\nimport { DatePicker } from '@blueprintjs/datetime';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { useState } from 'react';\nimport { prettifyDate } from 'src/commons/achievement/utils/DateHelper';\n\ntype EditableDateProps = {\n  type: string;\n  date?: Date;\n  changeDate: (date?: Date) => void;\n};\n\nfunction EditableDate(props: EditableDateProps) {\n  const { type, date, changeDate } = props;\n\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const toggleOpen = () => setOpen(!isOpen);\n\n  const hoverText = date === undefined ? `No ${type}` : `${prettifyDate(date)}`;\n\n  return (\n    <>\n      <Tooltip2 content={hoverText}>\n        <Button minimal={true} onClick={toggleOpen} outlined={true}>{`${type}`}</Button>\n      </Tooltip2>\n      <Dialog\n        isCloseButtonShown={false}\n        isOpen={isOpen}\n        onClose={toggleOpen}\n        style={{\n          background: '#fff',\n          maxWidth: 'max-content',\n          padding: '0.25em',\n          textAlign: 'center'\n        }}\n        title={`${type}`}\n      >\n        <DatePicker\n          onChange={changeDate}\n          timePickerProps={{ showArrowButtons: true }}\n          value={date}\n        />\n        <Button onClick={() => changeDate(undefined)} text={`Remove ${type}`} />\n      </Dialog>\n    </>\n  );\n}\n\nexport default EditableDate;\n","import { Button, Dialog, EditableText } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { useState } from 'react';\nimport { AchievementView } from 'src/features/achievement/AchievementTypes';\ntype EditableViewProps = {\n  changeView: (view: AchievementView) => void;\n  view: AchievementView;\n};\n\nfunction EditableView(props: EditableViewProps) {\n  const { changeView, view } = props;\n  const { coverImage, description, completionText } = view;\n\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const toggleOpen = () => setOpen(!isOpen);\n\n  const changeCoverImage = (coverImage: string) => changeView({ ...view, coverImage });\n\n  const changeDescription = (description: string) =>\n    changeView({ ...view, description: description });\n\n  const changeCompletionText = (completionText: string) =>\n    changeView({ ...view, completionText: completionText });\n\n  return (\n    <>\n      <Tooltip2 content=\"Edit View\">\n        <Button icon={IconNames.WIDGET_HEADER} onClick={toggleOpen} />\n      </Tooltip2>\n\n      <Dialog title=\"Edit View\" icon={IconNames.WIDGET_HEADER} isOpen={isOpen} onClose={toggleOpen}>\n        <div style={{ padding: '0 0.5em' }}>\n          <h3>Cover Image</h3>\n          <EditableText\n            multiline={true}\n            onChange={changeCoverImage}\n            placeholder=\"Enter cover image URL here\"\n            value={coverImage}\n          />\n          <h3>Description</h3>\n          <EditableText\n            multiline={true}\n            onChange={changeDescription}\n            placeholder=\"Enter description here\"\n            value={description}\n          />\n          <h3>Completion Text</h3>\n          <EditableText\n            multiline={true}\n            onChange={changeCompletionText}\n            placeholder=\"Enter completion text here\"\n            value={completionText}\n          />\n        </div>\n      </Dialog>\n    </>\n  );\n}\n\nexport default EditableView;\n","import { EditableText, NumericInput } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { cloneDeep } from 'lodash';\nimport { useContext, useMemo, useReducer, useState } from 'react';\n\nimport { AchievementContext } from '../../../../features/achievement/AchievementConstants';\nimport {\n  AchievementItem,\n  AchievementView\n} from '../../../../features/achievement/AchievementTypes';\nimport ItemDeleter from '../common/ItemDeleter';\nimport ItemSaver from '../common/ItemSaver';\nimport AchievementSettings from './AchievementSettings';\nimport AchievementUuidCopier from './AchievementUuidCopier';\nimport {\n  EditableCardAction as Action,\n  EditableCardActionType as ActionType,\n  EditableCardState as State\n} from './EditableCardTypes';\nimport EditableDate from './EditableDate';\nimport EditableView from './EditableView';\n\ntype EditableCardProps = {\n  uuid: string;\n  isNewAchievement: boolean;\n  releaseUuid: () => void;\n  removeCard: (uuid: string) => void;\n  requestPublish: () => void;\n};\n\nconst init = (achievement: AchievementItem): State => {\n  return {\n    editableAchievement: achievement,\n    isDirty: false\n  };\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case ActionType.SAVE_CHANGES:\n      return {\n        ...state,\n        isDirty: false\n      };\n    case ActionType.DISCARD_CHANGES:\n      return init(action.payload);\n    case ActionType.DELETE_ACHIEVEMENT:\n      return {\n        ...state,\n        isDirty: false\n      };\n    case ActionType.CHANGE_CARD_BACKGROUND:\n      return {\n        editableAchievement: {\n          ...state.editableAchievement,\n          cardBackground: action.payload\n        },\n        isDirty: true\n      };\n    case ActionType.CHANGE_DEADLINE:\n      return {\n        editableAchievement: {\n          ...state.editableAchievement,\n          deadline: action.payload\n        },\n        isDirty: true\n      };\n    case ActionType.CHANGE_GOAL_UUIDS:\n      return {\n        editableAchievement: {\n          ...state.editableAchievement,\n          goalUuids: action.payload\n        },\n        isDirty: true\n      };\n    case ActionType.CHANGE_POSITION:\n      return {\n        editableAchievement: {\n          ...state.editableAchievement,\n          isTask: action.payload !== 0,\n          position: action.payload\n        },\n        isDirty: true\n      };\n    case ActionType.CHANGE_PREREQUISITE_UUIDS:\n      return {\n        editableAchievement: {\n          ...state.editableAchievement,\n          prerequisiteUuids: action.payload\n        },\n        isDirty: true\n      };\n    case ActionType.CHANGE_RELEASE:\n      return {\n        editableAchievement: {\n          ...state.editableAchievement,\n          release: action.payload\n        },\n        isDirty: true\n      };\n    case ActionType.CHANGE_TITLE:\n      return {\n        editableAchievement: {\n          ...state.editableAchievement,\n          title: action.payload\n        },\n        isDirty: true\n      };\n    case ActionType.CHANGE_VIEW:\n      return {\n        editableAchievement: {\n          ...state.editableAchievement,\n          view: action.payload\n        },\n        isDirty: true\n      };\n    case ActionType.CHANGE_XP:\n      return {\n        editableAchievement: {\n          ...state.editableAchievement,\n          xp: action.payload\n        },\n        isDirty: true\n      };\n    case ActionType.CHANGE_IS_VARIABLE_XP:\n      return {\n        editableAchievement: {\n          ...state.editableAchievement,\n          isVariableXp: !state.editableAchievement.isVariableXp\n        },\n        isDirty: true\n      };\n    default:\n      return state;\n  }\n};\n\nfunction EditableCard(props: EditableCardProps) {\n  const { uuid, isNewAchievement, releaseUuid, removeCard, requestPublish } = props;\n\n  const inferencer = useContext(AchievementContext);\n  const achievement = inferencer.getAchievement(uuid);\n  const achievementClone = useMemo(() => cloneDeep(achievement), [achievement]);\n\n  const [state, dispatch] = useReducer(reducer, achievementClone, init);\n  const [isNew, setIsNew] = useState<boolean>(isNewAchievement);\n  const { editableAchievement, isDirty } = state;\n  const { cardBackground, deadline, release, title, view, xp } = editableAchievement;\n\n  const saveChanges = () => {\n    dispatch({ type: ActionType.SAVE_CHANGES });\n    inferencer.modifyAchievement(editableAchievement);\n    if (isNew) {\n      releaseUuid();\n      setIsNew(false);\n    }\n    requestPublish();\n  };\n\n  const discardChanges = () =>\n    dispatch({ type: ActionType.DISCARD_CHANGES, payload: achievementClone });\n\n  const deleteAchievement = () => {\n    dispatch({ type: ActionType.DELETE_ACHIEVEMENT });\n    inferencer.removeAchievement(uuid);\n    if (isNew) {\n      releaseUuid();\n      setIsNew(false);\n    }\n    removeCard(uuid);\n    requestPublish();\n  };\n\n  const changeCardBackground = (cardBackground: string) =>\n    dispatch({ type: ActionType.CHANGE_CARD_BACKGROUND, payload: cardBackground });\n\n  const changeDeadline = (deadline?: Date) =>\n    dispatch({ type: ActionType.CHANGE_DEADLINE, payload: deadline });\n\n  const changeGoalUuids = (goalUuids: string[]) => {\n    dispatch({ type: ActionType.CHANGE_GOAL_UUIDS, payload: goalUuids });\n  };\n\n  const changePosition = (position: number) =>\n    dispatch({ type: ActionType.CHANGE_POSITION, payload: position });\n\n  const changePrerequisiteUuids = (prerequisiteUuids: string[]) =>\n    dispatch({ type: ActionType.CHANGE_PREREQUISITE_UUIDS, payload: prerequisiteUuids });\n\n  const changeRelease = (release?: Date) =>\n    dispatch({ type: ActionType.CHANGE_RELEASE, payload: release });\n\n  const changeTitle = (title: string) =>\n    dispatch({ type: ActionType.CHANGE_TITLE, payload: title });\n\n  const changeView = (view: AchievementView) =>\n    dispatch({ type: ActionType.CHANGE_VIEW, payload: view });\n\n  const changeXp = (xp: number) => dispatch({ type: ActionType.CHANGE_XP, payload: xp });\n\n  const changeIsVariableXp = () => dispatch({ type: ActionType.CHANGE_IS_VARIABLE_XP });\n\n  return (\n    <li\n      className=\"editable-card\"\n      style={{\n        background: `url(${cardBackground}) center/cover`\n      }}\n    >\n      <div className=\"action-button\">\n        {isDirty ? (\n          <ItemSaver discardChanges={discardChanges} saveChanges={saveChanges} />\n        ) : (\n          <ItemDeleter deleteItem={deleteAchievement} item={title} />\n        )}\n      </div>\n\n      <div className=\"content\">\n        <h3 className=\"title\">\n          <EditableText onChange={changeTitle} placeholder=\"Enter your title here\" value={title} />\n        </h3>\n        <div className=\"xp\">\n          <Tooltip2 content=\"XP\">\n            <NumericInput\n              value={xp}\n              min={0}\n              allowNumericCharactersOnly={true}\n              leftIcon={IconNames.TRENDING_UP}\n              placeholder=\"XP\"\n              onValueChange={changeXp}\n            />\n          </Tooltip2>\n        </div>\n        <div className=\"details\">\n          <EditableDate changeDate={changeRelease} date={release} type=\"Release\" />\n          <EditableDate changeDate={changeDeadline} date={deadline} type=\"Deadline\" />\n          <AchievementUuidCopier uuid={uuid} />\n        </div>\n      </div>\n\n      <div className=\"content-button\">\n        <EditableView changeView={changeView} view={view} />\n        <AchievementSettings\n          changeCardBackground={changeCardBackground}\n          changeGoalUuids={changeGoalUuids}\n          changePosition={changePosition}\n          changePrerequisiteUuids={changePrerequisiteUuids}\n          changeIsVariableXp={changeIsVariableXp}\n          editableAchievement={editableAchievement}\n        />\n      </div>\n    </li>\n  );\n}\n\nexport default EditableCard;\n","import { useContext, useState } from 'react';\nimport { AchievementContext } from 'src/features/achievement/AchievementConstants';\n\nimport AchievementAdder from './achievementEditor/AchievementAdder';\nimport EditableCard from './achievementEditor/EditableCard';\n\ntype AchievementEditorProps = {\n  requestPublish: () => void;\n};\n\nlet editableCards: JSX.Element[] = [];\n\nfunction AchievementEditor(props: AchievementEditorProps) {\n  const { requestPublish } = props;\n\n  const inferencer = useContext(AchievementContext);\n\n  /**\n   * newUuid helps us to ensure that only ONE achievement is added at any point of time.\n   *\n   * By default,  the newUuid is an empty string, which means currently no new achievement\n   * is being added and the admin is able to add a new achievement.\n   *\n   * Conversely, if the newUuid is not an empty string, this means currently an achievement\n   * is being added to the system and the admin is not allowed to add two achievements\n   * at one go. The newUuid holds the newly created achievement uuid until the new achievement\n   * is added into the inferencer.\n   */\n  const [newUuid, setNewUuid] = useState<string>('');\n  const allowNewUuid = newUuid === '';\n  const releaseUuid = () => setNewUuid('');\n\n  const removeCard = (uuid: string) => {\n    let idx = 0;\n    while (editableCards[idx].key !== uuid && idx < editableCards.length) {\n      idx++;\n    }\n    editableCards.splice(idx, 1);\n  };\n\n  const generateEditableCard = (achievementUuid: string, isNewAchievement: boolean) => (\n    <EditableCard\n      key={achievementUuid}\n      uuid={achievementUuid}\n      isNewAchievement={isNewAchievement}\n      releaseUuid={releaseUuid}\n      removeCard={removeCard}\n      requestPublish={requestPublish}\n    />\n  );\n\n  // load preexisting achievements from the inferencer\n  if (editableCards.length === 0) {\n    editableCards = inferencer\n      .listSortedAchievementUuids()\n      .map(uuid => generateEditableCard(uuid, false));\n  }\n\n  const addNewAchievement = (uuid: string) => {\n    setNewUuid(uuid);\n    // keep the new achievement on top by swapping it with the first achievement\n    editableCards[editableCards.length] = editableCards[0];\n    editableCards[0] = generateEditableCard(uuid, true);\n  };\n\n  return (\n    <div className=\"achievement-editor\">\n      <div className=\"command\">\n        <AchievementAdder allowNewUuid={allowNewUuid} setNewUuid={addNewAchievement} />\n      </div>\n      <ul className=\"achievement-container\">{editableCards}</ul>\n    </div>\n  );\n}\n\nexport default AchievementEditor;\n","import { Icon, IconName } from '@blueprintjs/core';\n\nimport { getFilterColor } from '../../features/achievement/AchievementConstants';\nimport { FilterStatus } from '../../features/achievement/AchievementTypes';\n\ntype AchievementFilterProps = {\n  filterState: [FilterStatus, any];\n  icon: IconName;\n  ownStatus: FilterStatus;\n};\n\nfunction AchievementFilter(props: AchievementFilterProps) {\n  const { filterState, icon, ownStatus } = props;\n\n  const [globalStatus, setGlobalStatus] = filterState;\n\n  return (\n    <div\n      className=\"filter\"\n      onClick={() => setGlobalStatus(ownStatus)}\n      style={{ color: getFilterColor(globalStatus, ownStatus) }}\n    >\n      <Icon icon={icon} iconSize={30} />\n      <p>{ownStatus}</p>\n    </div>\n  );\n}\n\nexport default AchievementFilter;\n","import Constants from '../../utils/Constants';\n\ntype AchievementMilestoneProps = {\n  studentXp: number;\n};\n\n// 36k XP = Level 37\nfunction AchievementMilestone(props: AchievementMilestoneProps) {\n  const { studentXp } = props;\n\n  return (\n    <div className=\"milestone\">\n      <h3>Your Total XP</h3>\n      <div className=\"user-xp\">{studentXp} XP</div>\n\n      <h3>CA Achievement Level</h3>\n      <div className=\"details\">\n        <div className=\"level-badge\">\n          <span className=\"level-icon\" />\n          <p>{Constants.caFulfillmentLevel}</p>\n        </div>\n        <p className=\"description\">Complete CS1101S CA Component</p>\n      </div>\n      <div className=\"details\">\n        <div className=\"level-badge\">\n          <span className=\"level-icon\" />\n          <p>{Constants.caFulfillmentLevel}+</p>\n        </div>\n        <p className=\"description\">Counts towards CS1010R</p>\n      </div>\n      <div className=\"footer\">\n        <p>Full CA level of {Constants.caFulfillmentLevel} is subjected to change.</p>\n      </div>\n    </div>\n  );\n}\n\nexport default AchievementMilestone;\n","import { ProgressBar } from '@blueprintjs/core';\nimport { useState } from 'react';\n\nimport { xpPerLevel } from '../../../features/achievement/AchievementConstants';\nimport Constants from '../../utils/Constants';\nimport AchievementMilestone from './AchievementMilestone';\n\ntype AchievementLevelProps = {\n  studentXp: number;\n};\n\nfunction AchievementLevel(props: AchievementLevelProps) {\n  const { studentXp } = props;\n\n  const [showMilestone, setShowMilestone] = useState<boolean>(false);\n  const displayMilestone = () => setShowMilestone(true);\n  const hideMilestone = () => setShowMilestone(false);\n\n  // start at level 1\n  const level = Math.floor(studentXp / xpPerLevel) + 1;\n  const progress = studentXp % xpPerLevel;\n  const progressFrac = progress / xpPerLevel;\n\n  return (\n    <div className=\"level\" onMouseEnter={displayMilestone} onMouseLeave={hideMilestone}>\n      <div className=\"level-badge\">\n        <span className=\"level-icon\" />\n        <p>{`Level ${level}`}</p>\n      </div>\n      <span className=\"level-progress\">\n        <ProgressBar\n          animate={false}\n          className=\"progress-bar\"\n          stripes={false}\n          value={progressFrac}\n        />\n        <p>\n          {progress} / {xpPerLevel} XP\n        </p>\n      </span>\n      {Constants.caFulfillmentLevel !== 0 && showMilestone && (\n        <AchievementMilestone studentXp={studentXp} />\n      )}\n    </div>\n  );\n}\n\nexport default AchievementLevel;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AchievementUser } from 'src/features/achievement/AchievementTypes';\n\nimport { FETCH_TOTAL_XP, FETCH_TOTAL_XP_ADMIN } from '../application/types/SessionTypes';\nimport { useTypedSelector } from '../utils/Hooks';\nimport AchievementLevel from './overview/AchievementLevel';\n\ntype AchievementOverviewProps = {\n  name: string;\n  userState: [AchievementUser | undefined, any];\n};\n\nfunction AchievementOverview(props: AchievementOverviewProps) {\n  const { name, userState } = props;\n  const [selectedUser] = userState;\n  const crid = selectedUser?.courseRegId;\n  const userCrid = useTypedSelector(store => store.session.courseRegId);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // If user is student, fetch assessment details from assessment route instead, as seen below\n    if (crid && crid !== userCrid) {\n      dispatch({ type: FETCH_TOTAL_XP_ADMIN, payload: crid });\n    } else {\n      dispatch({ type: FETCH_TOTAL_XP });\n    }\n  }, [crid, userCrid, dispatch]);\n\n  const studentXp = useTypedSelector(store => store.session.xp);\n\n  return (\n    <div className=\"achievement-overview\">\n      <AchievementLevel studentXp={studentXp} />\n      <h3>{name}</h3>\n    </div>\n  );\n}\n\nexport default AchievementOverview;\n","import { Icon } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nimport { DeadlineColors } from '../../../features/achievement/AchievementConstants';\nimport { isExpired, prettifyDeadline, timeFromExpired } from '../utils/DateHelper';\n\ntype AchievementDeadlineProps = {\n  deadline?: Date;\n};\n\nconst twoDays = new Date(0, 0, 2).getTime() - new Date(0, 0, 0).getTime();\n\nfunction AchievementDeadline(props: AchievementDeadlineProps) {\n  const { deadline } = props;\n\n  // red deadline color for core achievements that are expiring in less than 2 days\n  const deadlineColor =\n    deadline !== undefined && !isExpired(deadline) && timeFromExpired(deadline) <= twoDays\n      ? DeadlineColors.RED\n      : DeadlineColors.BLACK;\n\n  return (\n    <div className=\"deadline\">\n      <Icon color={deadlineColor} icon={IconNames.STOPWATCH} />\n      <p style={{ color: deadlineColor }}>{prettifyDeadline(deadline)}</p>\n    </div>\n  );\n}\n\nexport default AchievementDeadline;\n","import { Icon } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\ntype AchievementXpProps = {\n  isBonus: boolean;\n  xp: number;\n};\n\nconst stringifyXp = (xp: number, isBonus: boolean) => {\n  return (isBonus ? 'Total ' : '') + xp + ' XP';\n};\n\nfunction AchievementXp(props: AchievementXpProps) {\n  const { isBonus, xp } = props;\n\n  return (\n    <div className=\"xp\">\n      {xp !== 0 && (\n        <>\n          <Icon icon={IconNames.BANK_ACCOUNT} />\n          <p>{stringifyXp(xp, isBonus)}</p>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default AchievementXp;\n","import { Icon, Intent, ProgressBar } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { useContext } from 'react';\nimport { AchievementContext, handleGlow } from 'src/features/achievement/AchievementConstants';\n\nimport { AchievementStatus } from '../../features/achievement/AchievementTypes';\nimport AchievementDeadline from './card/AchievementDeadline';\nimport AchievementXp from './card/AchievementXp';\n\ntype AchievementCardProps = {\n  uuid: string;\n  focusState: [string, any];\n  isDropdownOpen?: boolean;\n  shouldRender: boolean;\n  toggleDropdown?: () => void;\n};\n\nfunction AchievementCard(props: AchievementCardProps) {\n  const { uuid, focusState, isDropdownOpen, shouldRender, toggleDropdown } = props;\n\n  const inferencer = useContext(AchievementContext);\n\n  const [focusUuid, setFocusUuid] = focusState;\n\n  const { cardBackground, title } = inferencer.getAchievement(uuid);\n  const displayDeadline = inferencer.getDisplayDeadline(uuid);\n  const displayXp = inferencer.getDescendantXp(uuid);\n  const progressFrac = inferencer.getProgressFrac(uuid);\n  const status = inferencer.getStatus(uuid);\n\n  // Only task card with prerequisites has dropdown button\n  const hasDropdown =\n    isDropdownOpen !== undefined && inferencer.getImmediateChildren(uuid).size !== 0;\n\n  return (\n    <div\n      className=\"achievement-card\"\n      onClick={() => setFocusUuid(uuid)}\n      onClickCapture={toggleDropdown}\n      style={{\n        ...handleGlow(uuid, focusUuid),\n        opacity: shouldRender ? '100%' : '20%',\n        background: `url(${cardBackground}) center/cover`\n      }}\n    >\n      <div className=\"dropdown-button\">\n        {hasDropdown && (\n          <Icon icon={isDropdownOpen ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT} />\n        )}\n      </div>\n\n      <div className=\"content\">\n        <div className=\"heading\">\n          <h3>{title.toUpperCase()}</h3>\n          {status === AchievementStatus.COMPLETED && (\n            <Icon icon={IconNames.CONFIRM} intent={Intent.SUCCESS} style={{ padding: '1em' }} />\n          )}\n        </div>\n\n        <div className=\"details\">\n          <AchievementDeadline deadline={displayDeadline} />\n          <AchievementXp isBonus={hasDropdown} xp={displayXp} />\n        </div>\n\n        <ProgressBar\n          animate={false}\n          className=\"progress\"\n          intent={progressFrac === 1 ? 'success' : 'primary'}\n          stripes={false}\n          value={progressFrac}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default AchievementCard;\n","import { Collapse } from '@blueprintjs/core';\nimport React, { useContext, useState } from 'react';\n\nimport {\n  AchievementContext,\n  getAbilityColor\n} from '../../features/achievement/AchievementConstants';\nimport { AchievementStatus, FilterStatus } from '../../features/achievement/AchievementTypes';\nimport AchievementCard from './AchievementCard';\n\ntype AchievementTaskProps = {\n  uuid: string;\n  filterStatus: FilterStatus;\n  focusState: [string, any];\n};\n\nconst AchievementTask: React.FC<AchievementTaskProps> = ({ uuid, filterStatus, focusState }) => {\n  const inferencer = useContext(AchievementContext);\n  const prerequisiteUuids = [...inferencer.getImmediateChildren(uuid)];\n  const taskColor = getAbilityColor();\n\n  const [isDropdownOpen, setIsDropdownOpen] = useState<boolean>(false);\n  const toggleDropdown = () => setIsDropdownOpen(!isDropdownOpen);\n\n  /**\n   * Checks whether the AchievementItem (can be a task or prereq) should be rendered\n   * based on the achievement dashboard filterStatus.\n   */\n  const isInFilter = (uuid: string): boolean => {\n    const status = inferencer.getStatus(uuid);\n\n    switch (filterStatus) {\n      case FilterStatus.ALL:\n        return true;\n      case FilterStatus.ACTIVE:\n        return status === AchievementStatus.ACTIVE;\n      case FilterStatus.COMPLETED:\n        return status === AchievementStatus.COMPLETED;\n      default:\n        return false;\n    }\n  };\n\n  /**\n   * Checks whether the AchievementItem (can be a task or prereq) should be rendered\n   * based on the achievement dashboard filterStatus and whether it is a prereq.\n   */\n  const shouldRender = (uuid: string): boolean => {\n    const isPrerequisite = inferencer.isPrerequisite(uuid);\n\n    return !isPrerequisite && isInFilter(uuid);\n  };\n\n  /**\n   * Checks whether the AchievementItem has any prerequisite that\n   * should be rendered based on the achievement dashboard filterStatus.\n   *\n   * If there is at least 1 prerequisite that needs to be rendered,\n   * the whole AchievementTask will be rendered together.\n   */\n  const shouldRenderPrerequisites = (uuid: string) => {\n    const children = [...inferencer.getImmediateChildren(uuid)];\n    return children.reduce((canRender, prerequisite) => {\n      return canRender || isInFilter(prerequisite);\n    }, false);\n  };\n\n  /**\n   * If the main achievement or any of the prerequisites need to be rendered,\n   * the whole achievement task will be rendered\n   */\n  const shouldRenderTask = (uuid: string) => shouldRender(uuid) || shouldRenderPrerequisites(uuid);\n\n  return (\n    <>\n      {shouldRenderTask(uuid) && (\n        <li className=\"task\">\n          <AchievementCard\n            uuid={uuid}\n            focusState={focusState}\n            isDropdownOpen={isDropdownOpen}\n            shouldRender={isInFilter(uuid)}\n            toggleDropdown={toggleDropdown}\n          />\n          <Collapse isOpen={isDropdownOpen} keepChildrenMounted={true}>\n            <div className=\"prerequisite-container\">\n              {prerequisiteUuids.map(prerequisiteUuid => (\n                <div className=\"prerequisite\" key={prerequisiteUuid}>\n                  <div\n                    className=\"dropdown-lines\"\n                    style={{\n                      borderBottom: `1px solid ${taskColor}`,\n                      borderLeft: `1px solid ${taskColor}`\n                    }}\n                  ></div>\n                  <AchievementCard\n                    uuid={prerequisiteUuid}\n                    focusState={focusState}\n                    shouldRender={isInFilter(prerequisiteUuid)}\n                  />\n                </div>\n              ))}\n            </div>\n          </Collapse>\n        </li>\n      )}\n    </>\n  );\n};\n\nexport default AchievementTask;\n","import { useMemo } from 'react';\n\nimport { Assessment } from '../assessment/AssessmentTypes';\nimport { history } from '../utils/HistoryHelper';\nimport { useTypedSelector } from '../utils/Hooks';\nimport { showWarningMessage } from '../utils/NotificationsHelper';\nimport { assessmentTypeLink } from '../utils/ParamParseHelper';\n\nconst AchievementCommentCard = ({\n  assessment,\n  showToQuestion\n}: {\n  assessment: Assessment;\n  showToQuestion: boolean;\n}) => {\n  const courseId = useTypedSelector(store => store.session.courseId);\n  const toMission = useMemo(\n    () => (questionId: number) => {\n      if (!courseId) {\n        showWarningMessage('Course ID not found');\n        return;\n      }\n\n      const listingPath = `/courses/${courseId}/${assessmentTypeLink(assessment?.type)}`;\n      const assessmentWorkspacePath = listingPath + `/${assessment?.id.toString()}`;\n      history.push(assessmentWorkspacePath + `/${questionId}`);\n    },\n    [assessment?.id, assessment?.type, courseId]\n  );\n\n  return (\n    <div>\n      <h1 className=\"assessment-feedback\">Feedback</h1>\n      <div className=\"feedback-list\">\n        {assessment &&\n          assessment.questions.map((question, index) => (\n            <div className=\"assessment-comments\" key={index}>\n              <span>\n                <h2 className=\"question-header\">{'Q' + (index + 1)}</h2>\n              </span>\n\n              <div className=\"box-comment\">\n                <p>{question.comments === null ? 'No Comments' : question.comments}</p>\n                <p className=\"xp\">{'XP: ' + question.xp + '/' + question.maxXp}</p>\n              </div>\n\n              {showToQuestion && (\n                <button className=\"to-assessment-button\" onClick={() => toMission(index)}>\n                  {'To Question'}\n                </button>\n              )}\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AchievementCommentCard;\n","type AchievementViewCompletionProps = {\n  awardedXp: number;\n  completionText: string;\n};\n\nfunction AchievementViewCompletion(props: AchievementViewCompletionProps) {\n  const { awardedXp, completionText } = props;\n\n  const paragraphs = completionText ? completionText.split('\\n') : [''];\n\n  return (\n    <div className=\"completion\">\n      {awardedXp > 0 && <h1>{`AWARDED ${awardedXp}XP`}</h1>}\n      {paragraphs.map((para, idx) => (\n        <p key={idx}>\n          {para}\n          <br />\n        </p>\n      ))}\n    </div>\n  );\n}\n\nexport default AchievementViewCompletion;\n","import { ProgressBar } from '@blueprintjs/core';\n\nimport { AchievementGoal } from '../../../features/achievement/AchievementTypes';\n\ntype AchievementViewGoalProps = {\n  goals: AchievementGoal[];\n};\n\n/**\n * Maps an array of goalUuid to Goal component\n *\n * @param goal an array of goalUuid\n */\nconst mapGoalToJSX = (goal: AchievementGoal) => {\n  const { uuid, text, targetCount, count, completed } = goal;\n  const frac = Math.min(targetCount === 0 ? 0 : count / targetCount, 1);\n  return (\n    <div className=\"goal\" key={uuid}>\n      <div className=\"goal-badge\">\n        <span className=\"goal-icon\" />\n        <p>\n          {count} / {targetCount}\n        </p>\n      </div>\n      <div className=\"goal-progress\">\n        <p>{text}</p>\n        <ProgressBar\n          animate={false}\n          className=\"progress\"\n          intent={completed ? 'success' : undefined}\n          stripes={false}\n          value={frac}\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction AchievementViewGoal(props: AchievementViewGoalProps) {\n  const { goals } = props;\n\n  return (\n    <>\n      <h1 className=\"progress-header\">Progress</h1>\n      {goals.map(goal => mapGoalToJSX(goal))}\n    </>\n  );\n}\n\nexport default AchievementViewGoal;\n","import { Icon } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { useContext, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  AchievementContext,\n  getAbilityBackground,\n  getAbilityGlow\n} from '../../features/achievement/AchievementConstants';\nimport { AchievementStatus, AchievementUser } from '../../features/achievement/AchievementTypes';\nimport { FETCH_ASSESSMENT, FETCH_ASSESSMENT_ADMIN } from '../application/types/SessionTypes';\nimport { FETCH_ASSESSMENT_OVERVIEWS } from '../assessment/AssessmentTypes';\nimport { Assessment } from '../assessment/AssessmentTypes';\nimport { useTypedSelector } from '../utils/Hooks';\nimport AchievementCommentCard from './AchievementCommentCard';\nimport { prettifyDate } from './utils/DateHelper';\nimport AchievementViewCompletion from './view/AchievementViewCompletion';\nimport AchievementViewGoal from './view/AchievementViewGoal';\n\ntype AchievementViewProps = {\n  focusUuid: string;\n  assessments?: Map<number, Assessment>;\n  userState?: [AchievementUser | undefined, any];\n};\n\nfunction AchievementView({ focusUuid, userState }: AchievementViewProps) {\n  const assessmentId = !Number.isNaN(+focusUuid) && +focusUuid !== 0 ? +focusUuid : undefined;\n  let courseRegId: number | undefined;\n\n  if (userState) {\n    const [selectedUser] = userState!;\n    courseRegId = selectedUser?.courseRegId;\n  }\n  const userCrid = useTypedSelector(store => store.session.courseRegId);\n  const isAdminView: boolean = courseRegId !== undefined && courseRegId !== userCrid;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: FETCH_ASSESSMENT_OVERVIEWS });\n    if (!assessmentId) {\n      return;\n    }\n    if (isAdminView) {\n      // Fetch selected user's assessment from admin route\n      dispatch({ type: FETCH_ASSESSMENT_ADMIN, payload: { assessmentId, courseRegId } });\n    } else {\n      // If user is student, fetch assessment details from assessment route instead, as seen below\n      dispatch({ type: FETCH_ASSESSMENT, payload: assessmentId });\n    }\n  }, [dispatch, assessmentId, courseRegId, isAdminView]);\n\n  const inferencer = useContext(AchievementContext);\n  const assessments = useTypedSelector(store => store.session.assessments);\n  const selectedAssessment: Assessment | undefined = assessments.get(assessmentId!);\n  const allAssessmentConfigs = useTypedSelector(store => store.session.assessmentOverviews) ?? [];\n  const selectedAssessmentConfig = allAssessmentConfigs.find(config => config.id === assessmentId);\n\n  if (focusUuid === '') {\n    return (\n      <div className=\"no-view\">\n        <Icon icon={IconNames.MOUNTAIN} iconSize={60} />\n        <h2>Select an achievement</h2>\n      </div>\n    );\n  }\n  const achievement = inferencer.getAchievement(focusUuid);\n  const { deadline, title, view } = achievement;\n  const { coverImage, completionText, description } = view;\n  const awardedXp = inferencer.getAchievementXp(focusUuid);\n  const goals = inferencer.listGoals(focusUuid);\n  const status = inferencer.getStatus(focusUuid);\n\n  const descriptionParagraphs = description ? description.split('\\n') : [''];\n\n  return (\n    <div className=\"view\" style={{ ...getAbilityGlow(), ...getAbilityBackground() }}>\n      <div\n        className=\"cover\"\n        style={{\n          background: `rgba(0, 0, 0, 0.5) url(${coverImage}) center/cover`,\n          backgroundBlendMode: `darken`\n        }}\n      >\n        <h1>{title.toUpperCase()}</h1>\n        {deadline && <p>{`Deadline: ${prettifyDate(deadline)}`}</p>}\n        <span className=\"description\">\n          {descriptionParagraphs.map((para, idx) => (\n            <p key={idx}>\n              {para}\n              <br />\n            </p>\n          ))}\n        </span>\n      </div>\n\n      {status === AchievementStatus.COMPLETED &&\n        selectedAssessment &&\n        selectedAssessmentConfig &&\n        selectedAssessmentConfig.isManuallyGraded && (\n          // TODO: showToQuestion is currently used to disable the goto question button for admins,\n          // as it has not been integrated with the grading view yet\n          <AchievementCommentCard assessment={selectedAssessment} showToQuestion={!isAdminView} />\n        )}\n\n      {goals.length > 0 && (\n        <>\n          <AchievementViewGoal goals={goals} />\n          {status === AchievementStatus.COMPLETED && (\n            <>\n              <hr />\n              <AchievementViewCompletion awardedXp={awardedXp} completionText={completionText} />\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default AchievementView;\n","import moment from 'moment';\n\nimport {\n  cardBackgroundUrl,\n  coverImageUrl\n} from '../../../features/achievement/AchievementConstants';\nimport { GoalType } from '../../../features/achievement/AchievementTypes';\nimport { AssessmentConfiguration, AssessmentOverview } from '../../assessment/AssessmentTypes';\nimport AchievementInferencer from './AchievementInferencer';\nimport { isExpired, isReleased } from './DateHelper';\n\nfunction assessmentCompleted(assessmentOverview: AssessmentOverview): boolean {\n  return (\n    assessmentOverview.gradingStatus === 'graded' ||\n    (!assessmentOverview.isManuallyGraded && assessmentOverview.status === 'submitted')\n  );\n}\n\nfunction insertFakeAchievements(\n  assessmentOverviews: AssessmentOverview[],\n  assessmentConfigs: AssessmentConfiguration[],\n  inferencer: AchievementInferencer\n) {\n  const sortedOverviews = [...assessmentOverviews].sort((overview1, overview2) =>\n    moment(overview1.closeAt).diff(moment(overview2.closeAt))\n  );\n  const length = assessmentOverviews.length;\n\n  const assessmentTypes = assessmentConfigs.map(config => config.type);\n\n  const categorisedUuids: string[][] = assessmentTypes.map(_ => []);\n\n  sortedOverviews.forEach((assessmentOverview, idx) => {\n    // Reduce clutter for achievements that cannot be earned at that point\n    if (\n      !isReleased(new Date(assessmentOverview.openAt)) ||\n      (isExpired(new Date(assessmentOverview.closeAt)) && assessmentOverview.status !== 'submitted')\n    ) {\n      return;\n    }\n    const idString = assessmentOverview.id.toString();\n\n    if (!inferencer.hasAchievement(idString)) {\n      // Goal for assessment submission\n      inferencer.insertFakeGoalDefinition(\n        {\n          uuid: idString + '0',\n          text: `Submitted ${assessmentOverview.title}`,\n          achievementUuids: [idString],\n          meta: {\n            type: GoalType.ASSESSMENT,\n            assessmentNumber: assessmentOverview.id,\n            requiredCompletionFrac: 0\n          }\n        },\n        assessmentOverview.status === 'submitted'\n      );\n\n      // goal for assessment grading\n      if (assessmentOverview.isManuallyGraded) {\n        inferencer.insertFakeGoalDefinition(\n          {\n            uuid: idString + '1',\n            text: `Graded ${assessmentOverview.title}`,\n            achievementUuids: [idString],\n            meta: {\n              type: GoalType.ASSESSMENT,\n              assessmentNumber: assessmentOverview.id,\n              requiredCompletionFrac: 0\n            }\n          },\n          assessmentOverview.gradingStatus === 'graded'\n        );\n      }\n\n      inferencer.insertFakeAchievement({\n        uuid: idString,\n        title: assessmentOverview.title,\n        xp: assessmentCompleted(assessmentOverview)\n          ? assessmentOverview.xp\n          : assessmentOverview.maxXp,\n        isVariableXp: false,\n        deadline: new Date(assessmentOverview.closeAt),\n        release: new Date(assessmentOverview.openAt),\n        isTask:\n          assessmentOverview.isPublished === undefined ? false : assessmentOverview.isPublished,\n        position: idx - length - 100, // assessment closest to expiring on top\n        prerequisiteUuids: [],\n        goalUuids: !assessmentOverview.isManuallyGraded\n          ? [idString + '0']\n          : [idString + '0', idString + '1'], // need to create a mock completed goal to reference to be considered complete\n        cardBackground: `${cardBackgroundUrl}/default.png`,\n        view: {\n          coverImage: assessmentOverview.coverImage,\n          description: assessmentOverview.shortSummary,\n          completionText: `XP: ${assessmentOverview.xp} / ${assessmentOverview.maxXp}`\n        }\n      });\n\n      // if completed, add the uuid into the appropriate array\n      if (assessmentCompleted(assessmentOverview)) {\n        assessmentTypes.forEach((type, idx) => {\n          if (type === assessmentOverview.type) {\n            categorisedUuids[idx].push(idString);\n          }\n        });\n      }\n    }\n  });\n\n  // the dropdowns appear below the incomplete assessments, in the order missions, quests, path, contests\n  // will not appear if there are no completed assessments of that type\n  categorisedUuids.forEach((uuids, idx) => {\n    const assessmentType = assessmentTypes[idx];\n    uuids.length > 0 &&\n      inferencer.insertFakeAchievement({\n        uuid: assessmentType,\n        title: 'Completed ' + assessmentType,\n        xp: 0,\n        isVariableXp: false,\n        deadline: undefined,\n        release: undefined,\n        isTask: true,\n        position: -1 - idx, // negative number to ensure that they stay on top\n        prerequisiteUuids: uuids,\n        goalUuids: [],\n        cardBackground: `${cardBackgroundUrl}/default.png`,\n        view: {\n          coverImage: `${coverImageUrl}/default.png`,\n          description: 'Your completed ' + assessmentType + ' are listed here!',\n          completionText: ''\n        }\n      });\n  });\n}\n\nexport default insertFakeAchievements;\n","import { IconNames } from '@blueprintjs/icons';\nimport { useEffect, useState } from 'react';\nimport { Role } from 'src/commons/application/ApplicationTypes';\nimport {\n  AssessmentConfiguration,\n  AssessmentOverview\n} from 'src/commons/assessment/AssessmentTypes';\n\nimport AchievementFilter from '../../../commons/achievement/AchievementFilter';\nimport AchievementManualEditor from '../../../commons/achievement/AchievementManualEditor';\nimport AchievementOverview from '../../../commons/achievement/AchievementOverview';\nimport AchievementTask from '../../../commons/achievement/AchievementTask';\nimport AchievementView from '../../../commons/achievement/AchievementView';\nimport AchievementInferencer from '../../../commons/achievement/utils/AchievementInferencer';\nimport insertFakeAchievements from '../../../commons/achievement/utils/InsertFakeAchievements';\nimport { AchievementContext } from '../../../features/achievement/AchievementConstants';\nimport {\n  AchievementUser,\n  FilterStatus,\n  GoalProgress\n} from '../../../features/achievement/AchievementTypes';\n\nexport type DispatchProps = {\n  fetchAssessmentOverviews: () => void;\n  getAchievements: () => void;\n  getGoals: (studentCourseRegId: number) => void;\n  getOwnGoals: () => void;\n  getUserAssessmentOverviews: (studentCourseRegId: number) => void;\n  getUsers: () => void;\n  updateGoalProgress: (studentCourseRegId: number, progress: GoalProgress) => void;\n};\n\nexport type StateProps = {\n  group: string | null;\n  inferencer: AchievementInferencer;\n  id?: number;\n  name?: string;\n  role?: Role;\n  assessmentConfigs?: AssessmentConfiguration[];\n  assessmentOverviews?: AssessmentOverview[];\n  achievementAssessmentOverviews: AssessmentOverview[];\n  users: AchievementUser[];\n};\n\n/**\n * Generates <AchievementTask /> components\n *\n * @param taskUuids an array of achievementUuid\n * @param filterStatus the dashboard filter status\n * @param focusState the focused achievement state\n */\nexport const generateAchievementTasks = (\n  taskUuids: string[],\n  filterStatus: FilterStatus,\n  focusState: [string, any]\n) =>\n  taskUuids.map(taskUuid => (\n    <AchievementTask\n      key={taskUuid}\n      uuid={taskUuid}\n      filterStatus={filterStatus}\n      focusState={focusState}\n    />\n  ));\n\nfunction Dashboard(props: DispatchProps & StateProps) {\n  const {\n    getAchievements,\n    getOwnGoals,\n    getGoals,\n    getUserAssessmentOverviews,\n    getUsers,\n    updateGoalProgress,\n    fetchAssessmentOverviews,\n    group,\n    inferencer,\n    name,\n    role,\n    assessmentConfigs,\n    assessmentOverviews,\n    achievementAssessmentOverviews,\n    users\n  } = props;\n\n  // default nothing selected\n  const userIdState = useState<AchievementUser | undefined>(undefined);\n  const [selectedUser] = userIdState;\n\n  /**\n   * Fetch the latest achievements and goals from backend when the page is rendered\n   */\n  useEffect(() => {\n    selectedUser ? getGoals(selectedUser.courseRegId) : getOwnGoals();\n\n    selectedUser\n      ? getUserAssessmentOverviews(selectedUser.courseRegId)\n      : fetchAssessmentOverviews();\n\n    getAchievements();\n  }, [\n    selectedUser,\n    getAchievements,\n    getGoals,\n    getOwnGoals,\n    getUserAssessmentOverviews,\n    fetchAssessmentOverviews\n  ]);\n\n  const userAssessmentOverviews = selectedUser\n    ? achievementAssessmentOverviews\n    : assessmentOverviews;\n\n  // Inserts assessment achievements for each assessment retrieved\n  // Note that assessmentConfigs is updated when the page loads (see Application.tsx)\n  userAssessmentOverviews &&\n    assessmentConfigs &&\n    insertFakeAchievements(userAssessmentOverviews, assessmentConfigs, inferencer);\n\n  const filterState = useState<FilterStatus>(FilterStatus.ALL);\n  const [filterStatus] = filterState;\n\n  /**\n   * Marks the achievement uuid that is currently on focus (selected)\n   * If an achievement is focused, the cards glow and dashboard displays the AchievementView\n   */\n  const focusState = useState<string>('');\n  const [focusUuid, setFocusUuid] = focusState;\n\n  const hiddenState = useState<boolean>(false);\n  const [seeHidden] = hiddenState;\n\n  // Resets AchievementView when the selected user changes\n  useEffect(() => {\n    setFocusUuid('');\n  }, [selectedUser, setFocusUuid]);\n\n  return (\n    <AchievementContext.Provider value={inferencer}>\n      <div className=\"AchievementDashboard\">\n        <AchievementOverview\n          name={selectedUser ? selectedUser.name || selectedUser.username : name || 'User'}\n          userState={userIdState}\n        />\n        {role && role !== Role.Student && (\n          <AchievementManualEditor\n            userState={userIdState}\n            hiddenState={hiddenState}\n            studio={group || 'Staff'}\n            users={users}\n            getUsers={getUsers}\n            updateGoalProgress={updateGoalProgress}\n          />\n        )}\n\n        <div className=\"achievement-main\">\n          <div className=\"filter-container\">\n            <AchievementFilter\n              filterState={filterState}\n              icon={IconNames.GLOBE}\n              ownStatus={FilterStatus.ALL}\n            />\n            <AchievementFilter\n              filterState={filterState}\n              icon={IconNames.LOCATE}\n              ownStatus={FilterStatus.ACTIVE}\n            />\n            <AchievementFilter\n              filterState={filterState}\n              icon={IconNames.ENDORSED}\n              ownStatus={FilterStatus.COMPLETED}\n            />\n          </div>\n\n          <ul className=\"task-container\">\n            {generateAchievementTasks(\n              role === Role.Student || !seeHidden\n                ? inferencer.listSortedReleasedTaskUuids()\n                : inferencer.listAllSortedAchievementUuids(),\n              filterStatus,\n              focusState\n            )}\n          </ul>\n\n          <div className=\"view-container\">\n            <AchievementView focusUuid={focusUuid} userState={userIdState} />\n          </div>\n        </div>\n      </div>\n    </AchievementContext.Provider>\n  );\n}\n\nexport default Dashboard;\n","import { Button } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { useContext, useReducer, useState } from 'react';\nimport { AchievementContext } from 'src/features/achievement/AchievementConstants';\nimport { FilterStatus } from 'src/features/achievement/AchievementTypes';\nimport { generateAchievementTasks } from 'src/pages/achievement/subcomponents/AchievementDashboard';\n\nimport AchievementView from '../AchievementView';\n\ntype AchievementPreviewProps = {\n  awaitPublish: boolean;\n  publishChanges: () => void;\n};\n\nfunction AchievementPreview(props: AchievementPreviewProps) {\n  const { awaitPublish, publishChanges } = props;\n\n  const inferencer = useContext(AchievementContext);\n\n  // Show AchievementView when viewMode is true, otherwise show AchievementTask\n  const [viewMode, toggleMode] = useReducer(mode => !mode, false);\n\n  /**\n   * Marks the achievement uuid that is currently on focus (selected)\n   * If an achievement is focused, the cards glow and dashboard displays the AchievementView\n   */\n  const focusState = useState<string>('');\n  const [focusUuid] = focusState;\n\n  return (\n    <div className=\"achievement-preview\">\n      <div className=\"command\">\n        <Button\n          className=\"command-button\"\n          icon={viewMode && IconNames.ARROW_LEFT}\n          rightIcon={!viewMode && IconNames.ARROW_RIGHT}\n          text={viewMode ? 'Task' : 'View'}\n          onClick={toggleMode}\n        />\n        {awaitPublish && (\n          <Button\n            className=\"command-button\"\n            icon={IconNames.CLOUD_UPLOAD}\n            intent=\"primary\"\n            text=\"Publish Changes\"\n            onClick={publishChanges}\n          />\n        )}\n      </div>\n      {viewMode ? (\n        <div className=\"preview-container\">\n          <AchievementView focusUuid={focusUuid} />\n        </div>\n      ) : (\n        <ul className=\"preview-container\">\n          {generateAchievementTasks(inferencer.listSortedTaskUuids(), FilterStatus.ALL, focusState)}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default AchievementPreview;\n","import { GoalDefinition, GoalMeta } from 'src/features/achievement/AchievementTypes';\n\nexport enum EditableGoalActionType {\n  CHANGE_META = 'CHANGE_META',\n  CHANGE_TEXT = 'CHANGE_TEXT',\n  DELETE_GOAL = 'DELETE_GOAL',\n  DISCARD_CHANGES = 'DISCARD_CHANGES',\n  SAVE_CHANGES = 'SAVE_CHANGES'\n}\n\nexport type EditableGoalAction =\n  | {\n      type: EditableGoalActionType.CHANGE_META;\n      payload: GoalMeta;\n    }\n  | {\n      type: EditableGoalActionType.CHANGE_TEXT;\n      payload: string;\n    }\n  | {\n      type: EditableGoalActionType.DELETE_GOAL;\n    }\n  | {\n      type: EditableGoalActionType.DISCARD_CHANGES;\n      payload: GoalDefinition;\n    }\n  | {\n      type: EditableGoalActionType.SAVE_CHANGES;\n    };\n\nexport type EditableGoalState = {\n  editableGoal: GoalDefinition;\n  isDirty: boolean;\n};\n","import {\n  AchievementGoal,\n  EventType,\n  GoalDefinition,\n  GoalMeta,\n  GoalProgress,\n  GoalType\n} from 'src/features/achievement/AchievementTypes';\n\nexport const metaTemplate = (type: GoalType): GoalMeta => {\n  switch (type) {\n    case GoalType.ASSESSMENT:\n      return {\n        type: GoalType.ASSESSMENT,\n        assessmentNumber: 0,\n        requiredCompletionFrac: 0\n      };\n    case GoalType.BINARY:\n      return {\n        type: GoalType.BINARY,\n        condition: false,\n        targetCount: 1\n      };\n    case GoalType.MANUAL:\n      return {\n        type: GoalType.MANUAL,\n        targetCount: 1\n      };\n    case GoalType.EVENT:\n      return {\n        type: GoalType.EVENT,\n        eventNames: [EventType.RUN_CODE],\n        targetCount: 1,\n        release: undefined,\n        deadline: undefined,\n        observeFrom: undefined,\n        observeTo: undefined\n      };\n  }\n};\n\nexport const goalDefinitionTemplate: GoalDefinition = {\n  uuid: '',\n  text: 'Goal Text Here',\n  achievementUuids: [],\n  meta: metaTemplate(GoalType.MANUAL)\n};\n\nconst goalProgressTemplate: GoalProgress = {\n  uuid: '',\n  count: 0,\n  targetCount: 1,\n  completed: false\n};\n\nexport const goalTemplate: AchievementGoal = {\n  ...goalDefinitionTemplate,\n  ...goalProgressTemplate\n};\n","import { NumericInput } from '@blueprintjs/core';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { AssessmentMeta, GoalMeta } from 'src/features/achievement/AchievementTypes';\n\ntype EditableAssessmentMetaProps = {\n  assessmentMeta: AssessmentMeta;\n  changeMeta: (meta: GoalMeta) => void;\n};\n\nfunction EditableAssessmentMeta(props: EditableAssessmentMetaProps) {\n  const { assessmentMeta, changeMeta } = props;\n  const { assessmentNumber, requiredCompletionFrac } = assessmentMeta;\n\n  const changeAssessmentNumber = (assessmentNumber: number) =>\n    changeMeta({ ...assessmentMeta, assessmentNumber: assessmentNumber });\n\n  const changeRequiredCompletion = (requiredCompletion: number) => {\n    const requiredCompletionFrac = requiredCompletion / 100;\n    changeMeta({ ...assessmentMeta, requiredCompletionFrac: requiredCompletionFrac });\n  };\n\n  return (\n    <>\n      <Tooltip2 content=\"Assessment Number\">\n        <NumericInput\n          allowNumericCharactersOnly={true}\n          onValueChange={changeAssessmentNumber}\n          placeholder=\"Enter assessment number here\"\n          value={assessmentNumber}\n        />\n      </Tooltip2>\n      <Tooltip2 content=\"Required Completion Percentage\">\n        <NumericInput\n          allowNumericCharactersOnly={true}\n          max={100}\n          min={0}\n          onValueChange={changeRequiredCompletion}\n          placeholder=\"Enter required completion percentage here\"\n          rightElement={<p>%</p>}\n          value={requiredCompletionFrac * 100}\n        />\n      </Tooltip2>\n    </>\n  );\n}\n\nexport default EditableAssessmentMeta;\n","export type BooleanExpression = AndExpression | OrExpression | Conditional | false;\n\ninterface AndExpression {\n  type: 'AND';\n  operands: BooleanExpression[];\n}\n\ninterface OrExpression {\n  type: 'OR';\n  operands: BooleanExpression[];\n}\n\ntype Conditional =\n  | AchievementConditional\n  | AssessmentGradingConditional\n  | AssessmentSubmissionConditional\n  | GenericConditional;\n\nexport enum EventTypes {\n  ACHIEVEMENT = 'achievement',\n  ASSESSMENT_GRADING = 'assessment-grading',\n  ASSESSMENT_SUBMISSION = 'assessment-submission'\n}\n\ninterface ConditionalBase {\n  event: EventTypes;\n}\n\ninterface GenericConditional extends ConditionalBase {\n  condition?: (evt: any) => boolean;\n  restriction?: string;\n}\n\ninterface AchievementConditional extends ConditionalBase {\n  event: EventTypes.ACHIEVEMENT;\n  restriction: string;\n}\n\ninterface AssessmentGradingConditional extends ConditionalBase {\n  event: EventTypes.ASSESSMENT_GRADING;\n  restriction: string;\n}\n\ninterface AssessmentSubmissionConditional extends ConditionalBase {\n  event: EventTypes.ASSESSMENT_SUBMISSION;\n  restriction: string;\n}\n\nexport function AND(...operands: BooleanExpression[]): BooleanExpression {\n  return {\n    type: 'AND',\n    operands\n  };\n}\n\nexport function OR(...operands: BooleanExpression[]): BooleanExpression {\n  return {\n    type: 'OR',\n    operands\n  };\n}\n","import { Button, EditableText, MenuItem, NumericInput } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { ItemRenderer, Select } from '@blueprintjs/select';\nimport { BinaryMeta, GoalMeta } from 'src/features/achievement/AchievementTypes';\nimport { AND, BooleanExpression, OR } from 'src/features/achievement/ExpressionTypes';\n\n/**\n * Possible extension: event should be a select of type EventTypes (import from ExpressionTypes)\n * This is very much possible, but the possible false value in BooleanExpression really prevents it\n * Why is this even a possible boolean expression? why would anyone ever use false?\n */\n\ntype EditableBinaryMetaProps = {\n  binaryMeta: BinaryMeta;\n  changeMeta: (meta: GoalMeta) => void;\n};\n\ntype Joiner = 'AND' | 'OR';\nconst JoinerSelect = Select.ofType<Joiner>();\nconst joinerRenderer: ItemRenderer<Joiner> = (joiner, { handleClick }) => (\n  <MenuItem key={joiner} onClick={handleClick} text={joiner} />\n);\n\n// Takes the current condition, splits it into an array of strings\nconst conditionSplitter = (condition: BooleanExpression): string[] => {\n  // only OR or AND Expressions have type property\n  if (typeof condition === 'object' && 'type' in condition) {\n    const { type, operands } = condition;\n    const len = operands.length;\n    const conditions = [];\n    // make conditions [cond1, joiner, cond2, joiner, ..., condn]\n    for (let i = 0; i < len; i++) {\n      conditions.push(conditionSplitter(operands[i]));\n      if (i !== len - 1) {\n        conditions.push(type);\n      }\n    }\n    // each recursive call flattens itself, so max depth is always 1\n    return conditions.flat();\n  } else {\n    return [JSON.stringify(condition)];\n  }\n};\n\nfunction EditableBinaryMeta(props: EditableBinaryMetaProps) {\n  const { binaryMeta, changeMeta } = props;\n  const { condition, targetCount } = binaryMeta;\n\n  const joiners: string[] = [];\n  const conditions: string[] = [];\n  const condArray: string[] = conditionSplitter(condition);\n  for (let i = 0; i < condArray.length; i++) {\n    if (i % 2 === 0) {\n      conditions[conditions.length] = condArray[i];\n    } else {\n      joiners[joiners.length] = condArray[i];\n    }\n  }\n\n  // Joins the conditions array, and changes the goalMeta\n  const changeCondition = () => {\n    // find the first joiner, join the left and right\n    // repeat until no more joiners left\n    let condition = JSON.parse(conditions[0]);\n    for (let i = 1; i < conditions.length; i++) {\n      if (joiners[i - 1] === 'AND') {\n        condition = AND(condition, JSON.parse(conditions[i]));\n      } else {\n        condition = OR(condition, JSON.parse(conditions[i]));\n      }\n    }\n    changeMeta({ ...binaryMeta, condition: condition });\n  };\n\n  const changeTargetCount = (targetCount: number) =>\n    changeMeta({ ...binaryMeta, targetCount: targetCount });\n\n  // Adds the and/or, adds the condition to be edited\n  const addCondition = () => {\n    joiners.push('AND');\n    conditions.push('{\"event\":\"\", \"restriction\":\"\"}');\n    changeCondition();\n  };\n\n  const changeConditionArray = (cond: string, idx: number) => {\n    conditions[idx] = cond;\n    changeCondition();\n  };\n\n  const changeJoinerArray = (joiner: Joiner, idx: number) => {\n    joiners[idx] = joiner;\n    changeCondition();\n  };\n\n  const deleteCondition = (idx: number) => {\n    for (let i = idx; i < conditions.length - 1; i++) {\n      // bring everything forward\n      conditions[i] = conditions[i + 1];\n      joiners[i] = joiners[i + 1];\n    }\n    conditions.length = conditions.length - 1;\n    joiners.length = joiners.length - 1;\n    changeCondition();\n  };\n\n  // Generates the components for editing conditions\n  const generateConditions = () => {\n    return condArray.map((op: string, idx: number) => (\n      <div key={idx}>\n        {\n          // even idx is condition, odd is joiner\n          idx % 2 === 0 ? (\n            // the text to change the condition\n            <>\n              <Tooltip2 content=\"Condition\">\n                <EditableText\n                  onChange={value => changeConditionArray(value, idx / 2)}\n                  multiline={true}\n                  placeholder=\"Enter condition here\"\n                  value={op}\n                />\n              </Tooltip2>\n              {\n                // should only be deleteable if not the only condition\n                conditions.length > 1 && (\n                  <Tooltip2 content=\"Delete Condition\">\n                    <Button intent=\"danger\" icon=\"trash\" onClick={() => deleteCondition(idx)} />\n                  </Tooltip2>\n                )\n              }\n            </>\n          ) : (\n            // the button to choose the joiner to use\n            <Tooltip2 content=\"And/Or\">\n              <JoinerSelect\n                filterable={false}\n                itemRenderer={joinerRenderer}\n                items={['AND', 'OR']}\n                onItemSelect={value => changeJoinerArray(value, (idx - 1) / 2)}\n              >\n                <Button minimal={true} outlined={true} text={op} />\n              </JoinerSelect>\n            </Tooltip2>\n          )\n        }\n      </div>\n    ));\n  };\n\n  return (\n    <>\n      <Tooltip2 content=\"Target Count\">\n        <NumericInput\n          allowNumericCharactersOnly={true}\n          leftIcon={IconNames.BANK_ACCOUNT}\n          min={0}\n          onValueChange={changeTargetCount}\n          placeholder=\"Enter target count here\"\n          value={targetCount}\n        />\n      </Tooltip2>\n      {generateConditions()}\n      <br />\n      <Button minimal={true} outlined={true} text=\"Add Condition\" onClick={addCondition} />\n    </>\n  );\n}\n\nexport default EditableBinaryMeta;\n","import { Button, Dialog } from '@blueprintjs/core';\nimport { DatePicker } from '@blueprintjs/datetime';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { useState } from 'react';\nimport { prettifyDate } from 'src/commons/achievement/utils/DateHelper';\n\ntype EditableDateProps = {\n  type: string;\n  date?: Date;\n  changeDate: (date?: Date) => void;\n};\n\nfunction EditableDate(props: EditableDateProps) {\n  const { type, date, changeDate } = props;\n\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const toggleOpen = () => setOpen(!isOpen);\n\n  const hoverText = date === undefined ? `No ${type}` : `${prettifyDate(date)}`;\n\n  return (\n    <>\n      <Tooltip2 content={hoverText}>\n        <Button minimal={true} onClick={toggleOpen} outlined={true}>{`${type}`}</Button>\n      </Tooltip2>\n      <Dialog\n        isCloseButtonShown={false}\n        isOpen={isOpen}\n        onClose={toggleOpen}\n        style={{\n          background: '#fff',\n          maxWidth: 'max-content',\n          padding: '0.25em',\n          textAlign: 'center'\n        }}\n        title={`${type}`}\n      >\n        <DatePicker\n          onChange={changeDate}\n          timePickerProps={{ showArrowButtons: true }}\n          value={date}\n        />\n        <Button onClick={() => changeDate(undefined)} text={`Remove ${type}`} />\n      </Dialog>\n    </>\n  );\n}\n\nexport default EditableDate;\n","import { Button, Dialog } from '@blueprintjs/core';\nimport { TimePicker } from '@blueprintjs/datetime';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { useState } from 'react';\nimport { prettifyTime } from 'src/commons/achievement/utils/DateHelper';\n\ntype EditableTimeProps = {\n  type: string;\n  time?: Date;\n  changeTime: (time?: Date) => void;\n};\n\nfunction EditableTime(props: EditableTimeProps) {\n  const { type, time, changeTime } = props;\n\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const toggleOpen = () => setOpen(!isOpen);\n\n  const hoverText = time === undefined ? `No ${type}` : `${prettifyTime(time)}`;\n\n  return (\n    <>\n      <Tooltip2 content={hoverText}>\n        <Button minimal={true} onClick={toggleOpen} outlined={true}>{`${type}`}</Button>\n      </Tooltip2>\n      <Dialog\n        isCloseButtonShown={false}\n        isOpen={isOpen}\n        onClose={toggleOpen}\n        style={{\n          background: '#fff',\n          maxWidth: 'max-content',\n          padding: '0.25em',\n          textAlign: 'center'\n        }}\n        title={`${type}`}\n      >\n        <TimePicker onChange={changeTime} showArrowButtons={true} value={time} />\n        <Button onClick={() => changeTime(undefined)} text={`Remove ${type}`} />\n      </Dialog>\n    </>\n  );\n}\n\nexport default EditableTime;\n","import { Button, MenuItem, NumericInput } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { ItemRenderer, Select } from '@blueprintjs/select';\nimport { EventMeta, EventType, GoalMeta } from 'src/features/achievement/AchievementTypes';\n\nimport EditableDate from '../EditableDate';\nimport EditableTime from '../EditableTime';\n\ntype EditableEventMetaProps = {\n  changeMeta: (meta: GoalMeta) => void;\n  eventMeta: EventMeta;\n};\n\nconst EventSelect = Select.ofType<EventType>();\nconst eventRenderer: ItemRenderer<EventType> = (eventName, { handleClick }) => (\n  <MenuItem key={eventName} onClick={handleClick} text={eventName} />\n);\n\nfunction EditableEventMeta(props: EditableEventMetaProps) {\n  const { changeMeta, eventMeta } = props;\n  const { eventNames, targetCount, release, deadline, observeFrom, observeTo } = eventMeta;\n\n  const changeTargetCount = (targetCount: number) =>\n    changeMeta({ ...eventMeta, targetCount: targetCount });\n\n  const changeEventName = (eventName: EventType, index: number) => {\n    if (eventName === EventType.NONE) {\n      changeMeta({ ...eventMeta, eventNames: eventNames.filter((_, idx) => idx !== index) });\n    } else {\n      eventNames[index] = eventName;\n      changeMeta({ ...eventMeta, eventNames: eventNames });\n    }\n  };\n\n  const changeRelease = (release?: Date) => {\n    changeMeta({ ...eventMeta, release: release });\n  };\n\n  const changeDeadline = (deadline?: Date) => {\n    changeMeta({ ...eventMeta, deadline: deadline });\n  };\n\n  const changeObserveFrom = (observeFrom?: Date) => {\n    changeMeta({ ...eventMeta, observeFrom: observeFrom });\n  };\n\n  const changeObserveTo = (observeTo?: Date) => {\n    changeMeta({ ...eventMeta, observeTo: observeTo });\n  };\n\n  const changeIndexEventName = (index: number) => (eventName: EventType) =>\n    changeEventName(eventName, index);\n\n  const generateEventNames = () => {\n    return eventNames.map((eventName, index) => (\n      <Tooltip2 content={'Change event type ' + index} key={index}>\n        <EventSelect\n          filterable={false}\n          items={Object.values(EventType)}\n          itemRenderer={eventRenderer}\n          onItemSelect={changeIndexEventName(index)}\n        >\n          <Button outlined={true} text={eventName} />\n        </EventSelect>\n      </Tooltip2>\n    ));\n  };\n\n  const addEvent = () => {\n    eventNames[eventNames.length] = EventType.RUN_CODE;\n    changeMeta({ ...eventMeta, eventNames: eventNames });\n  };\n\n  return (\n    <>\n      {generateEventNames()}\n      <Tooltip2 content=\"Add Event\">\n        <Button outlined={true} text={'Add Event'} onClick={addEvent} />\n      </Tooltip2>\n      <Tooltip2 content=\"Target Count\">\n        <NumericInput\n          allowNumericCharactersOnly={true}\n          leftIcon={IconNames.LOCATE}\n          min={0}\n          onValueChange={changeTargetCount}\n          placeholder=\"Enter target count here\"\n          value={targetCount}\n        />\n      </Tooltip2>\n      <br />\n      <EditableDate type=\"Release\" date={release} changeDate={changeRelease} />\n      <EditableDate type=\"Deadline\" date={deadline} changeDate={changeDeadline} />\n      <EditableTime type=\"Observe From\" time={observeFrom} changeTime={changeObserveFrom} />\n      <EditableTime type=\"Observe To\" time={observeTo} changeTime={changeObserveTo} />\n    </>\n  );\n}\n\nexport default EditableEventMeta;\n","import { NumericInput } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { GoalMeta, ManualMeta } from 'src/features/achievement/AchievementTypes';\n\ntype EditableManualMetaProps = {\n  changeMeta: (meta: GoalMeta) => void;\n  manualMeta: ManualMeta;\n};\n\nfunction EditableManualMeta(props: EditableManualMetaProps) {\n  const { changeMeta, manualMeta } = props;\n  const { targetCount } = manualMeta;\n\n  const changeTargetCount = (targetCount: number) =>\n    changeMeta({ ...manualMeta, targetCount: targetCount });\n\n  return (\n    <Tooltip2 content=\"Target Count\">\n      <NumericInput\n        allowNumericCharactersOnly={true}\n        leftIcon={IconNames.BANK_ACCOUNT}\n        min={0}\n        onValueChange={changeTargetCount}\n        placeholder=\"Enter target count here\"\n        value={targetCount}\n      />\n    </Tooltip2>\n  );\n}\n\nexport default EditableManualMeta;\n","import { Button, MenuItem } from '@blueprintjs/core';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { ItemRenderer, Select } from '@blueprintjs/select';\nimport {\n  AssessmentMeta,\n  BinaryMeta,\n  EventMeta,\n  GoalMeta,\n  GoalType,\n  ManualMeta\n} from 'src/features/achievement/AchievementTypes';\n\nimport { metaTemplate } from './GoalTemplate';\nimport EditableAssessmentMeta from './metaDetails/EditableAssessmentMeta';\nimport EditableBinaryMeta from './metaDetails/EditableBinaryMeta';\nimport EditableEventMeta from './metaDetails/EditableEventMeta';\nimport EditableManualMeta from './metaDetails/EditableManualMeta';\n\ntype EditableMetaProps = {\n  changeMeta: (meta: GoalMeta) => void;\n  meta: GoalMeta;\n};\n\nfunction EditableMeta(props: EditableMetaProps) {\n  const { changeMeta, meta } = props;\n  const { type } = meta;\n\n  const TypeSelect = Select.ofType<GoalType>();\n  const typeRenderer: ItemRenderer<GoalType> = (type, { handleClick }) => (\n    <MenuItem key={type} onClick={handleClick} text={type} />\n  );\n\n  const changeType = (type: GoalType) => changeMeta(metaTemplate(type));\n\n  const editableMetaDetails = (type: GoalType) => {\n    switch (type) {\n      case GoalType.ASSESSMENT:\n        return (\n          <EditableAssessmentMeta assessmentMeta={meta as AssessmentMeta} changeMeta={changeMeta} />\n        );\n      case GoalType.BINARY:\n        return <EditableBinaryMeta binaryMeta={meta as BinaryMeta} changeMeta={changeMeta} />;\n      case GoalType.MANUAL:\n        return <EditableManualMeta changeMeta={changeMeta} manualMeta={meta as ManualMeta} />;\n      case GoalType.EVENT:\n        return <EditableEventMeta eventMeta={meta as EventMeta} changeMeta={changeMeta} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <>\n      <Tooltip2 content=\"Change Goal Type\">\n        <TypeSelect\n          filterable={false}\n          itemRenderer={typeRenderer}\n          items={Object.values(GoalType)}\n          onItemSelect={changeType}\n        >\n          <Button minimal={true} outlined={true} text={type} />\n        </TypeSelect>\n      </Tooltip2>\n      {editableMetaDetails(type)}\n    </>\n  );\n}\n\nexport default EditableMeta;\n","import { EditableText } from '@blueprintjs/core';\nimport { cloneDeep } from 'lodash';\nimport { useContext, useMemo, useReducer, useState } from 'react';\nimport { AchievementContext } from 'src/features/achievement/AchievementConstants';\nimport { GoalDefinition, GoalMeta } from 'src/features/achievement/AchievementTypes';\n\nimport ItemDeleter from '../common/ItemDeleter';\nimport ItemSaver from '../common/ItemSaver';\nimport {\n  EditableGoalAction as Action,\n  EditableGoalActionType as ActionType,\n  EditableGoalState as State\n} from './EditableGoalTypes';\nimport EditableMeta from './EditableMeta';\n\ntype EditableGoalProps = {\n  uuid: string;\n  isNewGoal: boolean;\n  releaseUuid: () => void;\n  removeCard: (uuid: string) => void;\n  requestPublish: () => void;\n};\n\nconst init = (goal: GoalDefinition): State => {\n  return {\n    editableGoal: goal,\n    isDirty: false\n  };\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case ActionType.SAVE_CHANGES:\n      return {\n        ...state,\n        isDirty: false\n      };\n    case ActionType.DISCARD_CHANGES:\n      return init(action.payload);\n    case ActionType.DELETE_GOAL:\n      return {\n        ...state,\n        isDirty: false\n      };\n    case ActionType.CHANGE_META:\n      return {\n        editableGoal: {\n          ...state.editableGoal,\n          meta: action.payload\n        },\n        isDirty: true\n      };\n    case ActionType.CHANGE_TEXT:\n      return {\n        editableGoal: {\n          ...state.editableGoal,\n          text: action.payload\n        },\n        isDirty: true\n      };\n    default:\n      return state;\n  }\n};\n\nfunction EditableGoal(props: EditableGoalProps) {\n  const { uuid, isNewGoal, releaseUuid, removeCard, requestPublish } = props;\n\n  const inferencer = useContext(AchievementContext);\n  const goal = inferencer.getGoalDefinition(uuid);\n  const goalClone = useMemo(() => cloneDeep(goal), [goal]);\n\n  const [state, dispatch] = useReducer(reducer, goalClone, init);\n  const [isNew, setIsNew] = useState<boolean>(isNewGoal);\n  const { editableGoal, isDirty } = state;\n  const { meta, text } = editableGoal;\n\n  const saveChanges = () => {\n    dispatch({ type: ActionType.SAVE_CHANGES });\n    inferencer.modifyGoalDefinition(editableGoal);\n    if (isNew) {\n      releaseUuid();\n      setIsNew(false);\n    }\n    requestPublish();\n  };\n\n  const discardChanges = () => dispatch({ type: ActionType.DISCARD_CHANGES, payload: goalClone });\n\n  const deleteGoal = () => {\n    dispatch({ type: ActionType.DELETE_GOAL });\n    inferencer.removeGoalDefinition(uuid);\n    if (isNew) {\n      releaseUuid();\n      setIsNew(false);\n    }\n    removeCard(uuid);\n    requestPublish();\n  };\n\n  const changeMeta = (meta: GoalMeta) => dispatch({ type: ActionType.CHANGE_META, payload: meta });\n\n  const changeText = (text: string) => dispatch({ type: ActionType.CHANGE_TEXT, payload: text });\n\n  return (\n    <li className=\"editable-goal\" id={uuid}>\n      <div className=\"action-button\">\n        {isDirty ? (\n          <ItemSaver discardChanges={discardChanges} saveChanges={saveChanges} />\n        ) : (\n          <ItemDeleter deleteItem={deleteGoal} item={text} />\n        )}\n      </div>\n      <h3>\n        <EditableText onChange={changeText} placeholder=\"Enter goal text here\" value={text} />\n      </h3>\n      <div className=\"meta\">\n        <EditableMeta changeMeta={changeMeta} meta={meta} />\n      </div>\n    </li>\n  );\n}\n\nexport default EditableGoal;\n","import { Button } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { useContext } from 'react';\nimport { AchievementContext } from 'src/features/achievement/AchievementConstants';\n\nimport { goalDefinitionTemplate } from './GoalTemplate';\n\ntype GoalAdderProps = {\n  allowNewUuid: boolean;\n  setNewUuid: (uuid: string) => void;\n};\n\nfunction GoalAdder(props: GoalAdderProps) {\n  const { allowNewUuid, setNewUuid } = props;\n\n  const inferencer = useContext(AchievementContext);\n\n  const addGoal = () => setNewUuid(inferencer.insertGoalDefinition(goalDefinitionTemplate));\n\n  return (\n    <Button\n      className=\"command-button\"\n      disabled={!allowNewUuid}\n      icon={IconNames.NEW_OBJECT}\n      onClick={addGoal}\n      text=\"Create Goal\"\n    />\n  );\n}\n\nexport default GoalAdder;\n","import { useContext, useState } from 'react';\nimport { AchievementContext } from 'src/features/achievement/AchievementConstants';\n\nimport EditableGoal from './goalEditor/EditableGoal';\nimport GoalAdder from './goalEditor/GoalAdder';\n\ntype GoalEditorProps = {\n  requestPublish: () => void;\n};\n\nlet editableGoals: JSX.Element[] = [];\n\nfunction GoalEditor(props: GoalEditorProps) {\n  const { requestPublish } = props;\n\n  const inferencer = useContext(AchievementContext);\n\n  /**\n   * newUuid helps us to ensure that only ONE goal is added at any point of time.\n   *\n   * By default,  the newUuid is an empty string, which means currently no new goal\n   * is being added and the admin is able to add a new goal.\n   *\n   * Conversely, if the newUuid is not an empty string, this means currently a goal\n   * is being added to the system and the admin is not allowed to add two goals\n   * at one go. The newUuid holds the newly created goal uuid until the new goal\n   * is added into the inferencer.\n   */\n  const [newUuid, setNewUuid] = useState<string>('');\n  const allowNewUuid = newUuid === '';\n  const releaseUuid = () => setNewUuid('');\n\n  const removeCard = (uuid: string) => {\n    let idx = 0;\n    while (editableGoals[idx].key !== uuid && idx < editableGoals.length) {\n      idx++;\n    }\n    editableGoals.splice(idx, 1);\n  };\n\n  const generateEditableGoal = (goalUuid: string, isNewGoal: boolean) => (\n    <EditableGoal\n      key={goalUuid}\n      uuid={goalUuid}\n      isNewGoal={isNewGoal}\n      releaseUuid={releaseUuid}\n      requestPublish={requestPublish}\n      removeCard={removeCard}\n    />\n  );\n\n  // load preexisting goals from the inferencer\n  if (editableGoals.length === 0) {\n    editableGoals = inferencer.getAllGoalUuids().map(uuid => generateEditableGoal(uuid, false));\n  }\n\n  const addNewGoal = (uuid: string) => {\n    setNewUuid(uuid);\n    // keep the new goal on top by swapping it with the first element\n    editableGoals[editableGoals.length] = editableGoals[0];\n    editableGoals[0] = generateEditableGoal(uuid, true);\n  };\n\n  return (\n    <div className=\"goal-editor\">\n      <div className=\"command\">\n        <GoalAdder allowNewUuid={allowNewUuid} setNewUuid={addNewGoal} />\n      </div>\n      <ul className=\"goal-container\">{editableGoals}</ul>\n    </div>\n  );\n}\n\nexport default GoalEditor;\n","import { useEffect, useReducer, useState } from 'react';\nimport { Prompt } from 'react-router';\n\nimport AchievementEditor from '../../../commons/achievement/control/AchievementEditor';\nimport AchievementPreview from '../../../commons/achievement/control/AchievementPreview';\nimport GoalEditor from '../../../commons/achievement/control/GoalEditor';\nimport AchievementInferencer from '../../../commons/achievement/utils/AchievementInferencer';\nimport { AchievementContext } from '../../../features/achievement/AchievementConstants';\nimport { AchievementItem, GoalDefinition } from '../../../features/achievement/AchievementTypes';\n\nexport type DispatchProps = {\n  bulkUpdateAchievements: (achievements: AchievementItem[]) => void;\n  bulkUpdateGoals: (goals: GoalDefinition[]) => void;\n  getAchievements: () => void;\n  getOwnGoals: () => void;\n  removeAchievement: (uuid: string) => void;\n  removeGoal: (uuid: string) => void;\n};\n\nexport type StateProps = {\n  inferencer: AchievementInferencer;\n};\n\nfunction AchievementControl(props: DispatchProps & StateProps) {\n  const {\n    bulkUpdateAchievements,\n    bulkUpdateGoals,\n    getAchievements,\n    getOwnGoals,\n    removeAchievement,\n    removeGoal,\n    inferencer\n  } = props;\n\n  /**\n   * Fetch the latest achievements and goals from backend when the page is rendered\n   */\n  useEffect(() => {\n    getAchievements();\n    getOwnGoals();\n  }, [getAchievements, getOwnGoals]);\n\n  /**\n   * Monitors changes that are awaiting publish\n   */\n  const [awaitPublish, setAwaitPublish] = useState<boolean>(false);\n  const publishChanges = () => {\n    // NOTE: Goals and achievements must exist in the backend before the association can be built\n    bulkUpdateGoals(inferencer.getAllGoals());\n    bulkUpdateAchievements(inferencer.getAllAchievements());\n    inferencer.getGoalsToDelete().forEach(removeGoal);\n    inferencer.getAchievementsToDelete().forEach(removeAchievement);\n    inferencer.resetToDelete();\n    setAwaitPublish(false);\n  };\n  const requestPublish = () => {\n    setAwaitPublish(true);\n    forceUpdate();\n  };\n\n  /**\n   * Allows editor components to trigger a page re-render whenever the inferencer is modified\n   * so that the AchievementPreview displays the latest local changes\n   *\n   * NOTE: Although the inferencer is passed to the value prop of AchievementContext.Provider,\n   * changes to the inferencer does not trigger a re-render in all AchievementContext.Consumer\n   * as expected because Context uses reference identity to determine when to re-render. When\n   * the editor components update the inferencer by calling inferencer.modifyAchievement(...)\n   * or inferencer.modifyGoalDefinition(...), the Context does not register the changes hence\n   * a forceUpdate() hook is needed.\n   *\n   * See: https://reactjs.org/docs/context.html#caveats\n   */\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n  return (\n    <AchievementContext.Provider value={inferencer}>\n      <Prompt\n        message=\"You have unpublished changes. Are you sure you want to leave?\"\n        when={awaitPublish}\n      />\n\n      <div className=\"AchievementControl\">\n        <AchievementPreview awaitPublish={awaitPublish} publishChanges={publishChanges} />\n\n        <AchievementEditor requestPublish={requestPublish} />\n\n        <GoalEditor requestPublish={requestPublish} />\n      </div>\n    </AchievementContext.Provider>\n  );\n}\n\nexport default AchievementControl;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport AchievementInferencer from '../../../commons/achievement/utils/AchievementInferencer';\nimport { OverallState } from '../../../commons/application/ApplicationTypes';\nimport {\n  bulkUpdateAchievements,\n  bulkUpdateGoals,\n  getAchievements,\n  getOwnGoals,\n  removeAchievement,\n  removeGoal\n} from '../../../features/achievement/AchievementActions';\nimport AchievementControl, { DispatchProps, StateProps } from './AchievementControl';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  inferencer: new AchievementInferencer(state.achievement.achievements, state.achievement.goals)\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      bulkUpdateAchievements,\n      bulkUpdateGoals,\n      getAchievements,\n      getOwnGoals,\n      removeAchievement,\n      removeGoal\n    },\n    dispatch\n  );\n\nconst AchievementControlContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AchievementControl);\n\nexport default AchievementControlContainer;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport AchievementInferencer from '../../../commons/achievement/utils/AchievementInferencer';\nimport { fetchAssessmentOverviews } from '../../../commons/application/actions/SessionActions';\nimport { OverallState } from '../../../commons/application/ApplicationTypes';\nimport {\n  getAchievements,\n  getGoals,\n  getOwnGoals,\n  getUserAssessmentOverviews,\n  getUsers,\n  updateGoalProgress\n} from '../../../features/achievement/AchievementActions';\nimport Dashboard, { DispatchProps, StateProps } from './AchievementDashboard';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  group: state.session.group,\n  inferencer: new AchievementInferencer(state.achievement.achievements, state.achievement.goals),\n  name: state.session.name,\n  role: state.session.role,\n  assessmentOverviews: state.session.assessmentOverviews,\n  achievementAssessmentOverviews: state.achievement.assessmentOverviews,\n  users: state.achievement.users,\n  assessmentConfigs: state.session.assessmentConfigurations\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      fetchAssessmentOverviews,\n      getAchievements,\n      getGoals,\n      getOwnGoals,\n      getUserAssessmentOverviews,\n      getUsers,\n      updateGoalProgress\n    },\n    dispatch\n  );\n\nconst DashboardContainer = connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\nexport default DashboardContainer;\n","import { Route, Switch } from 'react-router';\n\nimport { Role } from '../../commons/application/ApplicationTypes';\nimport NotFound from '../notFound/NotFound';\nimport AchievementControl from './control/AchievementControlContainer';\nimport AchievementDashboard from './subcomponents/AchievementDashboardContainer';\n\nexport type DispatchProps = {};\n\nexport type StateProps = {\n  role: Role;\n};\n\nexport type AchievementProps = DispatchProps & StateProps;\n\nfunction Achievement(props: AchievementProps) {\n  const { role } = props;\n\n  const toAchievementControl =\n    role === Role.Admin || role === Role.Staff ? AchievementControl : NotFound;\n\n  return (\n    <Switch>\n      <Route\n        exact={true}\n        path=\"/courses/:courseId/achievements\"\n        component={AchievementDashboard}\n      ></Route>\n      <Route\n        path=\"/courses/:courseId/achievements/control\"\n        component={toAchievementControl}\n      ></Route>\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nexport default Achievement;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { OverallState } from '../../commons/application/ApplicationTypes';\nimport Achievement, { DispatchProps, StateProps } from './Achievement';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  role: state.session.role!\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators({}, dispatch);\n\nconst AchievementContainer = connect(mapStateToProps, mapDispatchToProps)(Achievement);\n\nexport default AchievementContainer;\n","import { Switch } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\nimport { useResponsive } from '../utils/Hooks';\nimport { ControlBarRunButton } from './ControlBarRunButton';\n\ntype ControlBarAutorunButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleDebuggerPause: () => void;\n  handleDebuggerReset: () => void;\n  handleDebuggerResume: () => void;\n  handleEditorEval: () => void;\n  handleInterruptEval: () => void;\n  handleToggleEditorAutorun?: () => void;\n};\n\ntype StateProps = {\n  isDebugging: boolean;\n  isEditorAutorun?: boolean;\n  isRunning: boolean;\n  key: string;\n  autorunDisabled?: boolean;\n  pauseDisabled?: boolean;\n  sourceChapter?: number;\n};\n\nexport const ControlBarAutorunButtons: React.FC<ControlBarAutorunButtonProps> = props => {\n  const showRunButton = !props.isDebugging && (\n    <ControlBarRunButton\n      handleEditorEval={props.handleEditorEval}\n      // Neon Green: #39FF14\n      color={props.isRunning ? '#39FF14' : undefined}\n      className={props.isRunning ? 'WaitingCursor' : undefined}\n      key=\"run\"\n    />\n  );\n\n  const showAutoRunIndicator = props.isEditorAutorun && (\n    <ControlButton label=\"Auto\" icon={IconNames.AUTOMATIC_UPDATES} />\n  );\n\n  // stop button does not do anything due to the blocking nature of eval methods (e.g. runInContext)\n  // to prevent \"flickering\", we will just disable Stop Button for now\n  const showStopButton = false && (\n    <ControlButton label=\"Stop\" icon={IconNames.STOP} onClick={props.handleInterruptEval} />\n  );\n\n  const showDebuggerPause = !props.pauseDisabled && props.isRunning && !props.isDebugging && (\n    <ControlButton label=\"Pause\" icon={IconNames.STOP} onClick={props.handleDebuggerPause} />\n  );\n\n  const showDebuggerResume = !props.isRunning && props.isDebugging && (\n    <ControlButton\n      label=\"Resume\"\n      icon={IconNames.CHEVRON_RIGHT}\n      onClick={props.handleDebuggerResume}\n    />\n  );\n\n  const showDebuggerReset = (label: string) =>\n    props.isDebugging && (\n      <ControlButton label={label} icon={IconNames.STOP} onClick={props.handleDebuggerReset} />\n    );\n\n  const { isMobileBreakpoint } = useResponsive();\n\n  return isMobileBreakpoint ? (\n    <>\n      {showStopButton}\n      {showDebuggerPause}\n      {showDebuggerResume}\n      {showDebuggerReset('Stop')}\n    </>\n  ) : (\n    <>\n      {!props.autorunDisabled && (\n        <div className=\"Switch\">\n          <Switch\n            label=\"\"\n            checked={props.isEditorAutorun}\n            onChange={props.handleToggleEditorAutorun}\n          />\n        </div>\n      )}\n      {showAutoRunIndicator || showStopButton || showRunButton}\n      {showDebuggerPause}\n      {showDebuggerResume}\n      {showDebuggerReset('Stop Debugger')}\n    </>\n  );\n};\n","import { Button, Card, Classes } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { configure, GlobalHotKeys } from 'react-hotkeys';\n\nimport DataVisualizer from '../../features/dataVisualizer/dataVisualizer';\nimport { Step } from '../../features/dataVisualizer/dataVisualizerTypes';\nimport { Links } from '../utils/Constants';\n\ntype State = {\n  steps: Step[];\n  currentStep: number;\n};\n\nconst dataVisualizerKeyMap = {\n  PREVIOUS_STEP: 'left',\n  NEXT_STEP: 'right'\n};\n\n/**\n * This class is responsible for the visualization of data structures via the\n * data_data function in Source. It adds a listener to the DataVisualizer singleton\n * which updates the steps list via setState whenever new steps are added.\n */\nclass SideContentDataVisualizer extends React.Component<{}, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = { steps: [], currentStep: 0 };\n    DataVisualizer.init(steps => {\n      if (this.state.steps.length > 0) {\n        //  Blink icon\n        const icon = document.getElementById('data_visualizer-icon');\n        icon?.classList.add('side-content-tab-alert');\n      }\n      this.setState({ steps, currentStep: 0 });\n    });\n  }\n\n  public render() {\n    const firstStep: () => boolean = () => this.state.currentStep === 0;\n    const finalStep: () => boolean = () =>\n      !this.state.steps || this.state.currentStep === this.state.steps.length - 1;\n\n    const dataVisualizerHandlers = {\n      PREVIOUS_STEP: this.onPrevButtonClick,\n      NEXT_STEP: this.onNextButtonClick\n    };\n\n    configure({\n      ignoreEventsCondition: event => {\n        return (\n          (event.key === 'ArrowLeft' && firstStep()) || (event.key === 'ArrowRight' && finalStep())\n        );\n      },\n      ignoreRepeatedEventsWhenKeyHeldDown: false,\n      stopEventPropagationAfterIgnoring: false\n    });\n\n    const step: Step | undefined = this.state.steps[this.state.currentStep];\n\n    return (\n      <GlobalHotKeys keyMap={dataVisualizerKeyMap} handlers={dataVisualizerHandlers}>\n        <div className={classNames('sa-data-visualizer', Classes.DARK)}>\n          {this.state.steps.length > 1 ? (\n            <div\n              style={{\n                position: 'relative',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                marginBottom: 10\n              }}\n            >\n              <Button\n                style={{\n                  position: 'absolute',\n                  left: 0\n                }}\n                large={true}\n                outlined={true}\n                icon={IconNames.ARROW_LEFT}\n                onClick={this.onPrevButtonClick}\n                disabled={firstStep()}\n              >\n                Previous\n              </Button>\n              <h3 className=\"bp4-text-large\">\n                Call {this.state.currentStep + 1}/{this.state.steps.length}\n              </h3>\n              <Button\n                style={{\n                  position: 'absolute',\n                  right: 0\n                }}\n                large={true}\n                outlined={true}\n                icon={IconNames.ARROW_RIGHT}\n                onClick={this.onNextButtonClick}\n                disabled={finalStep()}\n              >\n                Next\n              </Button>\n            </div>\n          ) : null}\n          {this.state.steps.length > 0 ? (\n            <div\n              key={step.length} // To ensure the style refreshes if the step length changes\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                overflowX: 'auto'\n              }}\n            >\n              {step?.map((elem, i) => (\n                <div key={i} style={{ margin: step.length > 1 ? 0 : '0 auto' }}>\n                  {' '}\n                  {/* To center element when there is only one */}\n                  <Card style={{ background: '#1a2530', padding: 10 }}>\n                    {step.length > 1 && (\n                      <h5\n                        className=\"bp4-heading bp4-monospace-text\"\n                        style={{ marginTop: 0, marginBottom: 20, whiteSpace: 'nowrap' }}\n                      >\n                        Structure {i + 1}\n                      </h5>\n                    )}\n                    {elem}\n                  </Card>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p id=\"data-visualizer-default-text\" className={Classes.RUNNING_TEXT}>\n              The data visualizer helps you to visualize data structures.\n              {this.state.steps}\n              <br />\n              <br />\n              It is activated by calling the function{' '}\n              <code>\n                draw_data(x<sub>1</sub>, x<sub>2</sub>, ... x<sub>n</sub>)\n              </code>\n              , where{' '}\n              <code>\n                x<sub>k</sub>\n              </code>{' '}\n              would be the{' '}\n              <code>\n                k<sup>th</sup>\n              </code>{' '}\n              data structure that you want to visualize and <code>n</code> is the number of\n              structures.\n              <br />\n              <br />\n              The data visualizer uses box-and-pointer diagrams, as introduced in{' '}\n              <a href={Links.textbookChapter2_2} rel=\"noopener noreferrer\" target=\"_blank\">\n                <i>\n                  Structure and Interpretation of Computer Programs, JavaScript Edition, Chapter 2,\n                  Section 2\n                </i>\n              </a>\n              .\n            </p>\n          )}\n        </div>\n      </GlobalHotKeys>\n    );\n  }\n\n  private onPrevButtonClick = () => {\n    this.setState(state => {\n      return { currentStep: state.currentStep - 1 };\n    });\n  };\n\n  private onNextButtonClick = () => {\n    this.setState(state => {\n      return { currentStep: state.currentStep + 1 };\n    });\n  };\n}\n\nexport default SideContentDataVisualizer;\n","import { Classes } from '@blueprintjs/core';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport EnvVisualizer from 'src/features/envVisualizer/EnvVisualizer';\n\nimport Constants, { Links } from '../utils/Constants';\n\ntype State = {\n  visualization: React.ReactNode;\n  height: number;\n  width: number;\n};\n\nclass SideContentEnvVisualizer extends React.Component<\n  { editorWidth?: string; sideContentHeight?: number },\n  State\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      visualization: null,\n      width: this.calculateWidth(props.editorWidth),\n      height: this.calculateHeight(props.sideContentHeight)\n    };\n    EnvVisualizer.init(\n      visualization => this.setState({ visualization }),\n      this.state.width,\n      this.state.height\n    );\n  }\n\n  private calculateWidth(editorWidth?: string) {\n    const horizontalPadding = 50;\n    const maxWidth = 5000; // limit for visible diagram width for huge screens\n    let width;\n    if (editorWidth === undefined) {\n      width = window.innerWidth - horizontalPadding;\n    } else {\n      width = Math.min(\n        maxWidth,\n        (window.innerWidth * (100 - parseFloat(editorWidth))) / 100 - horizontalPadding\n      );\n    }\n    return Math.min(width, maxWidth);\n  }\n\n  private calculateHeight(sideContentHeight?: number) {\n    const verticalPadding = 150;\n    const maxHeight = 5000; // limit for visible diagram height for huge screens\n    let height;\n    if (window.innerWidth < Constants.mobileBreakpoint) {\n      // mobile mode\n      height = window.innerHeight - verticalPadding;\n    } else if (sideContentHeight === undefined) {\n      height = window.innerHeight - verticalPadding;\n    } else {\n      height = sideContentHeight - verticalPadding;\n    }\n    return Math.min(height, maxHeight);\n  }\n\n  handleResize = debounce(() => {\n    const newWidth = this.calculateWidth(this.props.editorWidth);\n    const newHeight = this.calculateHeight(this.props.sideContentHeight);\n    if (newWidth !== this.state.width || newHeight !== this.state.height) {\n      this.setState({\n        height: newHeight,\n        width: newWidth\n      });\n      EnvVisualizer.updateDimensions(newWidth, newHeight);\n    }\n  }, 300);\n\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener('resize', this.handleResize);\n    EnvVisualizer.redraw();\n  }\n  componentWillUnmount() {\n    this.handleResize.cancel();\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  componentDidUpdate(prevProps: { editorWidth?: string; sideContentHeight?: number }) {\n    if (\n      prevProps.sideContentHeight !== this.props.sideContentHeight ||\n      prevProps.editorWidth !== this.props.editorWidth\n    ) {\n      this.handleResize();\n    }\n  }\n\n  public render() {\n    return (\n      <div className={Classes.DARK}>\n        {this.state.visualization || (\n          <p id=\"env-visualizer-default-text\" className={Classes.RUNNING_TEXT}>\n            The environment model visualizer generates environment model diagrams following a\n            notation introduced in{' '}\n            <a href={Links.textbookChapter3_2} rel=\"noopener noreferrer\" target=\"_blank\">\n              <i>\n                Structure and Interpretation of Computer Programs, JavaScript Edition, Chapter 3,\n                Section 2\n              </i>\n            </a>\n            .\n            <br />\n            <br />\n            It is activated by setting breakpoints before you run the program. You can set a\n            breakpoint by clicking on the gutter of the editor (where all the line numbers are, on\n            the left). When the program runs into a breakpoint, the visualizer displays the state of\n            the environments before the statement is evaluated, which starts in the line in which\n            you set the breakpoint. Every breakpoint must be at the beginning of a statement.\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SideContentEnvVisualizer;\n","import { ButtonGroup, Slider } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Chapter } from 'Clang-slang/dist/types';\nimport * as React from 'react';\n\nimport {\n  CodeDelta,\n  Input,\n  PlaybackData,\n  PlaybackStatus,\n  SourcecastData\n} from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport ControlButton from '../ControlButton';\nimport { SideContentType } from '../sideContent/SideContentTypes';\n\nexport type SourceRecorderControlBarProps = DispatchProps & StateProps & OwnProps;\n\ntype DispatchProps = {\n  handleEditorValueChange: (newCode: string) => void;\n  handleSetCurrentPlayerTime: (playTime: number) => void;\n  handleSetCodeDeltasToApply: (deltas: CodeDelta[]) => void;\n  handleSetIsEditorReadonly: (isEditorReadonly: boolean) => void;\n  handleSetInputToApply: (inputToApply: Input) => void;\n  handleSetSourcecastDuration: (duration: number) => void;\n  handleSetSourcecastStatus: (playbackStatus: PlaybackStatus) => void;\n  handleChapterSelect: (chapter: Chapter) => void;\n  handleExternalSelect: (name: ExternalLibraryName) => void;\n  handlePromptAutocomplete: (row: number, col: number, callback: any) => void;\n};\n\ntype StateProps = {\n  audioUrl: string;\n  currentPlayerTime: number;\n  duration: number;\n  playbackData: PlaybackData;\n  playbackStatus: PlaybackStatus;\n};\n\ntype OwnProps = {\n  /**\n   * setSelectedTab is optional since it is only used in Sourcecast and not Sourcereel\n   * due to the addition of the MobileWorkspace to Sourcecast.\n   */\n  setSelectedTab?: (newTab: SideContentType) => void;\n};\n\ntype State = {\n  currentDeltaRevision: number;\n  currentPlayerProgress: number;\n  currentSourcecastItem: SourcecastData | null;\n  duration: number;\n};\n\nclass SourceRecorderControlBar extends React.PureComponent<SourceRecorderControlBarProps, State> {\n  private audio: React.RefObject<HTMLAudioElement>;\n\n  constructor(props: SourceRecorderControlBarProps) {\n    super(props);\n    this.audio = React.createRef();\n    this.state = {\n      currentDeltaRevision: 0,\n      currentPlayerProgress: 0,\n      currentSourcecastItem: null,\n      duration: 0\n    };\n  }\n\n  public render() {\n    const PlayerPlayButton = (\n      <ControlButton\n        label=\"Play\"\n        icon={IconNames.PLAY}\n        onClick={this.handlePlayerPlaying}\n        isDisabled={!this.props.duration}\n      />\n    );\n    const PlayerPauseButton = (\n      <ControlButton label=\"Pause\" icon={IconNames.PAUSE} onClick={this.handlePlayerPausing} />\n    );\n    return (\n      <div className=\"SourcecastControlBar\">\n        <audio\n          src={this.props.audioUrl}\n          ref={this.audio}\n          onEnded={this.handlePlayerStopping}\n          onLoadedMetadata={this.handleAudioLoaded}\n          onSeeked={this.handleSeeked}\n          onTimeUpdate={this.updatePlayerTime}\n          preload=\"metadata\"\n          // controls={true}\n        />\n        <br />\n        <div className=\"PlayerControl\">\n          <ButtonGroup className=\"PlayerControlButton\">\n            {this.props.playbackStatus === PlaybackStatus.paused && PlayerPlayButton}\n            {this.props.playbackStatus === PlaybackStatus.playing && PlayerPauseButton}\n          </ButtonGroup>\n          <div className=\"Slider\">\n            <Slider\n              min={0}\n              max={1}\n              stepSize={0.0001}\n              onChange={this.handlePlayerProgressBarChange}\n              value={this.state.currentPlayerProgress}\n              labelRenderer={this.renderLabel}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private handleSeeked = () => {\n    // FIXME: loop in applyPlaybackDataFromStart keeps running if seeked from paused mode\n    this.stopPreviousPlaybackAndApplyFromStart(this.props.playbackData);\n  };\n\n  private handleAudioLoaded = () => {\n    this.props.handleSetSourcecastDuration(this.audio.current!.duration);\n  };\n\n  private applyDeltas = (deltas: CodeDelta[]) => {\n    this.props.handleSetCodeDeltasToApply(deltas);\n  };\n\n  private stopPreviousPlaybackAndApplyFromStart = (playbackData: PlaybackData) => {\n    this.setState(\n      {\n        currentDeltaRevision: this.state.currentDeltaRevision + 1\n      },\n      () => this.applyPlaybackDataFromStart(playbackData)\n    );\n  };\n\n  private applyPlaybackDataFromStart = async (playbackData: PlaybackData) => {\n    const sleep = (ms: number) => new Promise(r => setTimeout(r, ms));\n    const currentRevision = this.state.currentDeltaRevision;\n    let currentTime = this.audio.current!.currentTime * 1000;\n    this.props.handleEditorValueChange(playbackData.init.editorValue);\n    this.props.handleExternalSelect(playbackData.init.externalLibrary);\n    this.props.handleChapterSelect(playbackData.init.chapter);\n    const codeDeltasToApply = playbackData.inputs\n      .filter(\n        deltaWithTime => deltaWithTime.time <= currentTime && deltaWithTime.type === 'codeDelta'\n      )\n      .map(deltaWithTime => deltaWithTime.data as CodeDelta);\n    this.applyDeltas(codeDeltasToApply);\n\n    const futureData = playbackData.inputs.filter(\n      deltaWithTime => deltaWithTime.time > currentTime\n    );\n    const len = futureData.length;\n    let i = 0;\n    while (i < len && this.state.currentDeltaRevision === currentRevision) {\n      currentTime = this.audio.current!.currentTime * 1000;\n      if (futureData[i].time < currentTime) {\n        this.props.handleSetInputToApply(futureData[i]);\n        i++;\n        continue;\n      }\n      await sleep(20);\n    }\n  };\n\n  private stopCurrentPlayback() {\n    this.setState({\n      currentDeltaRevision: this.state.currentDeltaRevision + 1\n    });\n  }\n\n  private handlePlayerPausing = () => {\n    const audio = this.audio.current;\n    audio!.pause();\n    this.props.handleSetIsEditorReadonly(false);\n    this.props.handleSetSourcecastStatus(PlaybackStatus.paused);\n    this.stopCurrentPlayback();\n  };\n\n  private handlePlayerPlaying = () => {\n    const audio = this.audio.current;\n    audio!.play();\n    this.props.handleSetIsEditorReadonly(true);\n    this.props.handleSetSourcecastStatus(PlaybackStatus.playing);\n    this.stopPreviousPlaybackAndApplyFromStart(this.props.playbackData);\n    if (this.props.setSelectedTab) {\n      this.props.setSelectedTab(SideContentType.mobileEditor);\n    }\n  };\n\n  private handlePlayerStopping = () => {\n    this.props.handleSetIsEditorReadonly(false);\n    this.props.handleSetSourcecastStatus(PlaybackStatus.paused);\n    this.props.handleSetCurrentPlayerTime(0);\n    this.setState({\n      currentPlayerProgress: 0\n    });\n  };\n\n  private updatePlayerTime: React.ReactEventHandler<HTMLAudioElement> = e => {\n    const { currentTime }: { currentTime: number } = e.target as HTMLMediaElement;\n    this.props.handleSetCurrentPlayerTime(currentTime);\n    this.setState({\n      currentPlayerProgress: currentTime / this.props.duration\n    });\n\n    // listening on forcedPaused status\n    if (this.props.playbackStatus === PlaybackStatus.forcedPaused) {\n      this.handlePlayerPausing();\n    }\n  };\n\n  private handlePlayerProgressBarChange = (value: number) => {\n    if (this.audio.current) {\n      const currentTime = this.props.duration * value;\n      this.audio.current.currentTime = currentTime;\n      this.props.handleSetCurrentPlayerTime(currentTime);\n      this.setState({\n        currentPlayerProgress: value\n      });\n    }\n  };\n\n  private renderLabel = (value: number) => {\n    if (this.props.duration) {\n      const totalTime = this.props.duration * value;\n      const min = Math.floor(totalTime / 60);\n      const sec = Math.floor(totalTime - min * 60);\n      const minString = min < 10 ? '0' + min : min;\n      const secString = sec < 10 ? '0' + sec : sec;\n      return minString + ':' + secString;\n    } else {\n      return '00:00';\n    }\n  };\n}\n\nexport default SourceRecorderControlBar;\n","import { Classes, Dialog } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport React, { useState } from 'react';\n\nimport { SourcecastData } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport ControlButton from '../ControlButton';\n\ntype SourceRecorderDeleteCellProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleDeleteSourcecastEntry: (id: number) => void;\n};\n\ntype StateProps = {\n  data: SourcecastData;\n};\n\nconst SourceRecorderDeleteCell: React.FC<SourceRecorderDeleteCellProps> = props => {\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const handleCloseDialog = () => setIsDialogOpen(false);\n  const handleOpenDialog = () => setIsDialogOpen(true);\n  const handleDelete = () => {\n    const { data } = props;\n    props.handleDeleteSourcecastEntry(data.id);\n  };\n\n  return (\n    <div>\n      <ControlButton icon={IconNames.TRASH} onClick={handleOpenDialog} />\n      <Dialog\n        icon=\"info-sign\"\n        isOpen={isDialogOpen}\n        onClose={handleCloseDialog}\n        title=\"Delete Sourcecast\"\n        canOutsideClickClose={true}\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <p>Are you sure to delete this sourcecast entry?</p>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <ControlButton label=\"Confirm Delete\" icon={IconNames.TRASH} onClick={handleDelete} />\n            <ControlButton label=\"Cancel\" icon={IconNames.CROSS} onClick={handleCloseDialog} />\n          </div>\n        </div>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default SourceRecorderDeleteCell;\n","import { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport * as React from 'react';\n\nimport { PlaybackData, SourcecastData } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport ControlButton from '../ControlButton';\n\ntype SourceRecorderSelectCellProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleSetSourcecastData: (\n    title: string,\n    description: string,\n    uid: string,\n    audioUrl: string,\n    playbackData: PlaybackData\n  ) => void;\n};\n\ntype StateProps = {\n  data: SourcecastData;\n};\n\nclass SourceRecorderSelectCell extends React.Component<SourceRecorderSelectCellProps, {}> {\n  public constructor(props: SourceRecorderSelectCellProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <Tooltip2 content=\"Load Sourcecast Recording\">\n        <ControlButton\n          label={`${this.props.data.title}`}\n          icon={IconNames.PAPERCLIP}\n          onClick={this.handleSelect}\n        />\n      </Tooltip2>\n    );\n  }\n\n  private handleSelect = () => {\n    const { data } = this.props;\n    this.props.handleSetSourcecastData(\n      data.title,\n      data.description,\n      data.uid,\n      data.url,\n      JSON.parse(data.playbackData)\n    );\n  };\n}\n\nexport default SourceRecorderSelectCell;\n","import { IconNames } from '@blueprintjs/icons';\nimport { Popover2, Tooltip2 } from '@blueprintjs/popover2';\nimport * as React from 'react';\nimport * as CopyToClipboard from 'react-copy-to-clipboard';\n\nimport { SourcecastData } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport ControlButton from '../ControlButton';\n\ntype SourceRecorderShareCellProps = StateProps;\n\ntype StateProps = {\n  data: SourcecastData;\n  courseId?: number;\n};\n\ntype State = {\n  shareURL: string;\n};\n\nclass SourceRecorderShareCell extends React.Component<SourceRecorderShareCellProps, State> {\n  private shareInputElem: React.RefObject<HTMLInputElement>;\n\n  public constructor(props: SourceRecorderShareCellProps) {\n    super(props);\n    this.shareInputElem = React.createRef();\n    this.selectShareInputText = this.selectShareInputText.bind(this);\n    const url = `${window.location.protocol}//${window.location.host}/courses/${props.courseId}/sourcecast/${props.data.uid}`;\n    this.state = {\n      shareURL: url\n    };\n  }\n\n  public render() {\n    const shareButtonPopoverContent = (\n      <div key={this.state.shareURL}>\n        <input defaultValue={this.state.shareURL} readOnly={true} ref={this.shareInputElem} />\n        <Tooltip2 content=\"Copy link to clipboard\">\n          <CopyToClipboard text={this.state.shareURL}>\n            <ControlButton icon={IconNames.DUPLICATE} onClick={this.selectShareInputText} />\n          </CopyToClipboard>\n        </Tooltip2>\n      </div>\n    );\n\n    return (\n      <Popover2\n        popoverClassName=\"Popover-share\"\n        inheritDarkTheme={false}\n        content={shareButtonPopoverContent}\n      >\n        <Tooltip2 content=\"Get shareable link\">\n          <ControlButton icon={IconNames.SHARE} />\n        </Tooltip2>\n      </Popover2>\n    );\n  }\n\n  private selectShareInputText() {\n    if (this.shareInputElem.current !== null) {\n      this.shareInputElem.current.focus();\n      this.shareInputElem.current.select();\n    }\n  }\n}\n\nexport default SourceRecorderShareCell;\n","import 'ag-grid-community/dist/styles/ag-grid.css';\n\nimport {\n  Divider,\n  FormGroup,\n  InputGroup,\n  NonIdealState,\n  Spinner,\n  SpinnerSize\n} from '@blueprintjs/core';\nimport { ColDef, GridApi, GridReadyEvent } from 'ag-grid-community';\nimport { AgGridReact } from 'ag-grid-react';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\n\nimport { PlaybackData, SourcecastData } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { getStandardDate } from '../utils/DateHelper';\nimport SourcastDeleteCell from './SourceRecorderDeleteCell';\nimport SourceRecorderSelectCell from './SourceRecorderSelectCell';\nimport SourceRecorderShareCell from './SourceRecorderShareCell';\n\ntype SourceRecorderTableProps = OwnProps;\n\ntype OwnProps = {\n  handleDeleteSourcecastEntry?: (id: number) => void;\n  handleSetSourcecastData?: (\n    title: string,\n    description: string,\n    uid: string,\n    audioUrl: string,\n    playbackData: PlaybackData\n  ) => void;\n  sourcecastIndex: SourcecastData[] | null;\n  courseId?: number;\n};\n\n/**\n * Column Definitions are defined within the state, so that data\n * can be manipulated easier. See constructor for an example.\n */\ntype State = {\n  columnDefs: ColDef[];\n  filterValue: string;\n  groupFilterEnabled: boolean;\n};\n\nclass SourcecastTable extends React.Component<SourceRecorderTableProps, State> {\n  private defaultColumnDefs: ColDef;\n  private gridApi?: GridApi;\n\n  public constructor(props: SourceRecorderTableProps) {\n    super(props);\n\n    this.state = {\n      columnDefs: [\n        {\n          headerName: 'Title',\n          field: 'title',\n          cellRendererFramework: SourceRecorderSelectCell,\n          cellRendererParams: {\n            handleSetSourcecastData: this.props.handleSetSourcecastData\n          },\n          minWidth: 200,\n          suppressMovable: true,\n          suppressMenu: true,\n          cellStyle: {\n            'text-align': 'left'\n          },\n          hide: !this.props.handleSetSourcecastData\n        },\n        {\n          headerName: 'Title',\n          field: 'title',\n          minWidth: 100,\n          suppressMovable: true,\n          suppressMenu: true,\n          hide: !!this.props.handleSetSourcecastData\n        },\n        {\n          headerName: 'Uploader',\n          field: 'uploader.name',\n          minWidth: 150,\n          suppressMovable: true,\n          suppressMenu: true,\n          cellStyle: {\n            'text-align': 'center'\n          }\n        },\n        {\n          headerName: 'Date',\n          valueGetter: params => getStandardDate(params.data.inserted_at),\n          minWidth: 150,\n          suppressMovable: true,\n          suppressMenu: true\n        },\n        {\n          headerName: 'Share',\n          field: 'uid',\n          cellRendererFramework: SourceRecorderShareCell,\n          cellRendererParams: {\n            courseId: this.props.courseId\n          },\n          minWidth: 80,\n          suppressMovable: true,\n          suppressMenu: true\n        },\n        {\n          headerName: 'Delete',\n          field: '',\n          cellRendererFramework: SourcastDeleteCell,\n          cellRendererParams: {\n            handleDeleteSourcecastEntry: this.props.handleDeleteSourcecastEntry\n          },\n          minWidth: 100,\n          maxWidth: 100,\n          sortable: false,\n          suppressMovable: true,\n          suppressMenu: true,\n          cellStyle: {\n            'text-align': 'center'\n          },\n          hide: !this.props.handleDeleteSourcecastEntry\n        },\n        { headerName: 'description', field: 'description', hide: true },\n        { headerName: 'inserted_at', field: 'inserted_at', hide: true },\n        { headerName: 'updated_at', field: 'updated_at', hide: true },\n        { headerName: 'audio', field: 'audio', hide: true },\n        { headerName: 'playbackData', field: 'playbackData', hide: true },\n        { headerName: 'url', field: 'url', hide: true }\n      ],\n      filterValue: '',\n      groupFilterEnabled: false\n    };\n\n    this.defaultColumnDefs = {\n      filter: true,\n      resizable: true,\n      sortable: true\n    };\n  }\n\n  public render() {\n    /* Display either a loading screen or a table with overviews. */\n    const loadingDisplay = (\n      <NonIdealState\n        className=\"Sourcecast\"\n        description=\"Fetching sourcecast index...\"\n        icon={<Spinner size={SpinnerSize.LARGE} />}\n      />\n    );\n    const data = sortBy(this.props.sourcecastIndex, [(a: SourcecastData) => -a.id]);\n\n    const grid = (\n      <div className=\"SourcecastContainer\">\n        <br />\n        <div>\n          <FormGroup label=\"\" labelFor=\"text-input\">\n            <InputGroup\n              id=\"searchBar\"\n              large={false}\n              leftIcon=\"search\"\n              placeholder=\"Search\"\n              value={this.state.filterValue}\n              onChange={this.handleFilterChange}\n            />\n          </FormGroup>\n        </div>\n        <Divider />\n        <div className=\"SourcecastTable\">\n          <div className=\"ag-grid-parent\">\n            <AgGridReact\n              domLayout={'autoHeight'}\n              columnDefs={this.state.columnDefs}\n              defaultColDef={this.defaultColumnDefs}\n              onGridReady={this.onGridReady}\n              rowData={data}\n              rowHeight={30}\n              pagination={false}\n              paginationPageSize={50}\n            />\n          </div>\n        </div>\n        <br />\n      </div>\n    );\n    return <div>{this.props.sourcecastIndex === undefined ? loadingDisplay : grid}</div>;\n  }\n\n  private handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const changeVal = event.target.value;\n    this.setState({ filterValue: changeVal });\n\n    if (this.gridApi) {\n      this.gridApi.setQuickFilter(changeVal);\n    }\n  };\n\n  private onGridReady = (params: GridReadyEvent) => {\n    this.gridApi = params.api;\n    this.gridApi.sizeColumnsToFit();\n    window.onresize = () => this.gridApi!.sizeColumnsToFit();\n  };\n}\n\nexport default SourcecastTable;\n","import { Classes, Pre } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport {\n  beginDebuggerPause,\n  beginInterruptExecution,\n  debuggerReset,\n  debuggerResume\n} from 'src/commons/application/actions/InterpreterActions';\nimport { useResponsive } from 'src/commons/utils/Hooks';\nimport {\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeSideContentHeight,\n  clearReplOutput,\n  navigateToDeclaration,\n  promptAutocomplete,\n  setEditorBreakpoint,\n  setIsEditorReadonly,\n  toggleEditorAutorun,\n  updateReplValue\n} from 'src/commons/workspace/WorkspaceActions';\nimport { WorkspaceLocation } from 'src/commons/workspace/WorkspaceTypes';\nimport { fetchSourcecastIndex } from 'src/features/sourceRecorder/sourcecast/SourcecastActions';\nimport {\n  setCodeDeltasToApply,\n  setCurrentPlayerTime,\n  setInputToApply,\n  setSourcecastDuration\n} from 'src/features/sourceRecorder/SourceRecorderActions';\n\nimport { InterpreterOutput } from '../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport { ControlBarAutorunButtons } from '../../commons/controlBar/ControlBarAutorunButtons';\nimport { ControlBarChapterSelect } from '../../commons/controlBar/ControlBarChapterSelect';\nimport { ControlBarClearButton } from '../../commons/controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../../commons/controlBar/ControlBarEvalButton';\nimport {\n  convertEditorTabStateToProps,\n  SourcecastEditorContainerProps\n} from '../../commons/editor/EditorContainer';\nimport MobileWorkspace, {\n  MobileWorkspaceProps\n} from '../../commons/mobileWorkspace/MobileWorkspace';\nimport SideContentDataVisualizer from '../../commons/sideContent/SideContentDataVisualizer';\nimport SideContentEnvVisualizer from '../../commons/sideContent/SideContentEnvVisualizer';\nimport { SideContentTab, SideContentType } from '../../commons/sideContent/SideContentTypes';\nimport SourceRecorderControlBar, {\n  SourceRecorderControlBarProps\n} from '../../commons/sourceRecorder/SourceRecorderControlBar';\nimport SourceRecorderTable from '../../commons/sourceRecorder/SourceRecorderTable';\nimport Workspace, { WorkspaceProps } from '../../commons/workspace/Workspace';\nimport { EditorTabState } from '../../commons/workspace/WorkspaceTypes';\nimport {\n  CodeDelta,\n  Input,\n  PlaybackData,\n  PlaybackStatus,\n  SourcecastData\n} from '../../features/sourceRecorder/SourceRecorderTypes';\n\nexport type SourcecastProps = DispatchProps &\n  StateProps &\n  RouteComponentProps<{ sourcecastId: string }>;\n\nexport type DispatchProps = {\n  handleChapterSelect: (chapter: Chapter) => void;\n  handleEditorEval: () => void;\n  handleEditorValueChange: (val: string) => void;\n  handleExternalSelect: (externalLibraryName: ExternalLibraryName) => void;\n  handleReplEval: () => void;\n  handleSetSourcecastData: (\n    title: string,\n    description: string,\n    uid: string,\n    audioUrl: string,\n    playbackData: PlaybackData\n  ) => void;\n  handleSetSourcecastStatus: (PlaybackStatus: PlaybackStatus) => void;\n};\n\nexport type StateProps = {\n  audioUrl: string;\n  currentPlayerTime: number;\n  codeDeltasToApply: CodeDelta[] | null;\n  title: string | null;\n  description: string | null;\n  activeEditorTabIndex: number | null;\n  editorTabs: EditorTabState[];\n  externalLibraryName: ExternalLibraryName;\n  isEditorAutorun: boolean;\n  isEditorReadonly: boolean;\n  inputToApply: Input | null;\n  isRunning: boolean;\n  isDebugging: boolean;\n  enableDebugging: boolean;\n  output: InterpreterOutput[];\n  playbackDuration: number;\n  playbackData: PlaybackData;\n  playbackStatus: PlaybackStatus;\n  replValue: string;\n  sideContentHeight?: number;\n  sourcecastIndex: SourcecastData[] | null;\n  sourceChapter: Chapter;\n  sourceVariant: Variant;\n  uid: string | null;\n  courseId?: number;\n};\n\nconst workspaceLocation: WorkspaceLocation = 'sourcecast';\n\nconst Sourcecast: React.FC<SourcecastProps> = props => {\n  const { isMobileBreakpoint } = useResponsive();\n\n  const dispatch = useDispatch();\n\n  /**\n   * The default selected tab for the Sourcecast workspace is the introduction tab,\n   * which contains the ag-grid table of available Sourcecasts. This is intentional\n   * to avoid an ag-grid console warning. For more info, see issue #1152 in frontend.\n   */\n  const [selectedTab, setSelectedTab] = React.useState(SideContentType.introduction);\n\n  const handleQueryParam = React.useCallback(() => {\n    const newUid = props.match.params.sourcecastId;\n    if (newUid && newUid !== props.uid && props.sourcecastIndex) {\n      const cast = props.sourcecastIndex.find(data => data.uid === newUid);\n      if (cast) {\n        props.handleSetSourcecastData(\n          cast.title,\n          cast.description,\n          cast.uid,\n          cast.url,\n          JSON.parse(cast.playbackData)\n        );\n      }\n    }\n  }, [props]);\n\n  React.useEffect(() => {\n    dispatch(fetchSourcecastIndex(workspaceLocation));\n    // This effect should only fire once on component mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    handleQueryParam();\n\n    const { inputToApply } = props;\n\n    if (!inputToApply) {\n      return;\n    }\n\n    switch (inputToApply.type) {\n      case 'activeTabChange':\n        setSelectedTab(inputToApply.data);\n        break;\n      case 'chapterSelect':\n        props.handleChapterSelect(inputToApply.data);\n        break;\n      case 'externalLibrarySelect':\n        props.handleExternalSelect(inputToApply.data);\n        break;\n      case 'forcePause':\n        props.handleSetSourcecastStatus(PlaybackStatus.forcedPaused);\n        break;\n    }\n    // This effect should only fire when props.inputToApply changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [handleQueryParam, props.inputToApply]);\n\n  /**\n   * Handles toggling of relevant SideContentTabs when exiting the mobile breakpoint\n   */\n  React.useEffect(() => {\n    if (\n      !isMobileBreakpoint &&\n      (selectedTab === SideContentType.mobileEditor ||\n        selectedTab === SideContentType.mobileEditorRun)\n    ) {\n      setSelectedTab(SideContentType.introduction);\n    }\n  }, [isMobileBreakpoint, props, selectedTab]);\n\n  const autorunButtons = (\n    <ControlBarAutorunButtons\n      handleDebuggerPause={() => dispatch(beginDebuggerPause(workspaceLocation))}\n      handleDebuggerReset={() => dispatch(debuggerReset(workspaceLocation))}\n      handleDebuggerResume={() => dispatch(debuggerResume(workspaceLocation))}\n      handleEditorEval={props.handleEditorEval}\n      handleInterruptEval={() => dispatch(beginInterruptExecution(workspaceLocation))}\n      handleToggleEditorAutorun={() => dispatch(toggleEditorAutorun(workspaceLocation))}\n      isDebugging={props.isDebugging}\n      isEditorAutorun={props.isEditorAutorun}\n      isRunning={props.isRunning}\n      key=\"autorun\"\n    />\n  );\n\n  const chapterSelectHandler = ({ chapter }: { chapter: Chapter }, e: any) =>\n    props.handleChapterSelect(chapter);\n\n  const chapterSelect = (\n    <ControlBarChapterSelect\n      handleChapterSelect={chapterSelectHandler}\n      sourceChapter={props.sourceChapter}\n      sourceVariant={props.sourceVariant}\n      key=\"chapter\"\n    />\n  );\n\n  const clearButton = (\n    <ControlBarClearButton\n      handleReplOutputClear={() => dispatch(clearReplOutput(workspaceLocation))}\n      key=\"clear_repl\"\n    />\n  );\n\n  const evalButton = (\n    <ControlBarEvalButton\n      handleReplEval={props.handleReplEval}\n      isRunning={props.isRunning}\n      key=\"eval_repl\"\n    />\n  );\n\n  const tabs: SideContentTab[] = [\n    {\n      label: 'Sourcecast Table',\n      iconName: IconNames.HOME,\n      body: (\n        <div>\n          <span className=\"Multi-line\">\n            <Pre>\n              {props.title\n                ? 'Title: ' + props.title + '\\nDescription: ' + props.description\n                : INTRODUCTION}\n            </Pre>\n          </span>\n          <SourceRecorderTable\n            handleSetSourcecastData={props.handleSetSourcecastData}\n            sourcecastIndex={props.sourcecastIndex}\n            courseId={props.courseId}\n          />\n        </div>\n      ),\n      id: SideContentType.introduction\n    },\n    dataVisualizerTab,\n    envVisualizerTab\n  ];\n\n  const onChangeTabs = (\n    newTabId: SideContentType,\n    prevTabId: SideContentType,\n    event: React.MouseEvent<HTMLElement>\n  ) => {\n    if (newTabId === prevTabId) {\n      return;\n    }\n    setSelectedTab(newTabId);\n  };\n\n  const editorContainerProps: SourcecastEditorContainerProps = {\n    editorVariant: 'sourcecast',\n    editorTabs: props.editorTabs.map(convertEditorTabStateToProps),\n    codeDeltasToApply: props.codeDeltasToApply,\n    isEditorReadonly: props.isEditorReadonly,\n    editorSessionId: '',\n    handleDeclarationNavigate: cursorPosition =>\n      dispatch(navigateToDeclaration(workspaceLocation, cursorPosition)),\n    handleEditorEval: props.handleEditorEval,\n    handleEditorValueChange: props.handleEditorValueChange,\n    isEditorAutorun: props.isEditorAutorun,\n    inputToApply: props.inputToApply,\n    isPlaying: props.playbackStatus === PlaybackStatus.playing,\n    handleEditorUpdateBreakpoints: breakpoints =>\n      dispatch(setEditorBreakpoint(breakpoints, workspaceLocation))\n  };\n\n  const replProps = {\n    output: props.output,\n    replValue: props.replValue,\n    handleBrowseHistoryDown: () => dispatch(browseReplHistoryDown(workspaceLocation)),\n    handleBrowseHistoryUp: () => dispatch(browseReplHistoryUp(workspaceLocation)),\n    handleReplEval: props.handleReplEval,\n    handleReplValueChange: (newValue: string) =>\n      dispatch(updateReplValue(newValue, workspaceLocation)),\n    sourceChapter: props.sourceChapter,\n    sourceVariant: props.sourceVariant,\n    externalLibrary: props.externalLibraryName,\n    replButtons: [evalButton, clearButton]\n  };\n\n  const sideBarProps = {\n    tabs: []\n  };\n\n  const workspaceProps: WorkspaceProps = {\n    controlBarProps: {\n      editorButtons: [autorunButtons, chapterSelect]\n    },\n    editorContainerProps: editorContainerProps,\n    handleSideContentHeightChange: change =>\n      dispatch(changeSideContentHeight(change, workspaceLocation)),\n    replProps: replProps,\n    sideBarProps: sideBarProps,\n    sideContentHeight: props.sideContentHeight,\n    sideContentProps: {\n      selectedTabId: selectedTab,\n      onChange: onChangeTabs,\n      tabs: {\n        beforeDynamicTabs: tabs,\n        afterDynamicTabs: []\n      },\n      workspaceLocation: 'sourcecast',\n      sideContentHeight: props.sideContentHeight\n    }\n  };\n  const mobileWorkspaceProps: MobileWorkspaceProps = {\n    editorContainerProps: editorContainerProps,\n    replProps: replProps,\n    sideBarProps: sideBarProps,\n    mobileSideContentProps: {\n      mobileControlBarProps: {\n        editorButtons: [autorunButtons, chapterSelect]\n      },\n      selectedTabId: selectedTab,\n      onChange: onChangeTabs,\n      tabs: {\n        beforeDynamicTabs: tabs,\n        afterDynamicTabs: []\n      },\n      workspaceLocation: 'sourcecast'\n    }\n  };\n\n  const sourcecastControlbarProps: SourceRecorderControlBarProps = {\n    handleEditorValueChange: props.handleEditorValueChange,\n    handlePromptAutocomplete: (row, col, callback) =>\n      dispatch(promptAutocomplete(workspaceLocation, row, col, callback)),\n    handleSetCurrentPlayerTime: (playerTime: number) =>\n      dispatch(setCurrentPlayerTime(playerTime, workspaceLocation)),\n    handleSetCodeDeltasToApply: (deltas: CodeDelta[]) =>\n      dispatch(setCodeDeltasToApply(deltas, workspaceLocation)),\n    handleSetIsEditorReadonly: (editorReadonly: boolean) =>\n      dispatch(setIsEditorReadonly(workspaceLocation, editorReadonly)),\n    handleSetInputToApply: inputToApply =>\n      dispatch(setInputToApply(inputToApply, workspaceLocation)),\n    handleSetSourcecastDuration: (duration: number) =>\n      dispatch(setSourcecastDuration(duration, workspaceLocation)),\n    handleSetSourcecastStatus: props.handleSetSourcecastStatus,\n    audioUrl: props.audioUrl,\n    currentPlayerTime: props.currentPlayerTime,\n    duration: props.playbackDuration,\n    playbackData: props.playbackData,\n    playbackStatus: props.playbackStatus,\n    handleChapterSelect: props.handleChapterSelect,\n    handleExternalSelect: props.handleExternalSelect,\n    setSelectedTab: setSelectedTab\n  };\n\n  return (\n    <div className={classNames('Sourcecast', Classes.DARK)}>\n      <SourceRecorderControlBar {...sourcecastControlbarProps} />\n      {isMobileBreakpoint ? (\n        <MobileWorkspace {...mobileWorkspaceProps} />\n      ) : (\n        <Workspace {...workspaceProps} />\n      )}\n    </div>\n  );\n};\n\nconst INTRODUCTION = 'Welcome to Sourcecast!';\n\nconst dataVisualizerTab: SideContentTab = {\n  label: 'Data Visualizer',\n  iconName: IconNames.EYE_OPEN,\n  body: <SideContentDataVisualizer />,\n  id: SideContentType.dataVisualizer\n};\n\nconst envVisualizerTab: SideContentTab = {\n  label: 'Env Visualizer',\n  iconName: IconNames.GLOBE,\n  body: <SideContentEnvVisualizer />,\n  id: SideContentType.envVisualizer\n};\n\nexport default Sourcecast;\n","import { Chapter, Variant } from 'Clang-slang/dist/types';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { OverallState } from '../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport {\n  chapterSelect,\n  evalEditor,\n  evalRepl,\n  externalLibrarySelect,\n  updateEditorValue\n} from '../../commons/workspace/WorkspaceActions';\nimport { WorkspaceLocation } from '../../commons/workspace/WorkspaceTypes';\nimport {\n  setSourcecastData,\n  setSourcecastStatus\n} from '../../features/sourceRecorder/SourceRecorderActions';\nimport { PlaybackData, PlaybackStatus } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport Sourcecast, { DispatchProps, StateProps } from './Sourcecast';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  audioUrl: state.workspaces.sourcecast.audioUrl,\n  currentPlayerTime: state.workspaces.sourcecast.currentPlayerTime,\n  codeDeltasToApply: state.workspaces.sourcecast.codeDeltasToApply,\n  title: state.workspaces.sourcecast.title,\n  description: state.workspaces.sourcecast.description,\n  activeEditorTabIndex: state.workspaces.sourcecast.activeEditorTabIndex,\n  editorTabs: state.workspaces.sourcecast.editorTabs,\n  externalLibraryName: state.workspaces.sourcecast.externalLibrary,\n  isEditorAutorun: state.workspaces.sourcecast.isEditorAutorun,\n  isEditorReadonly: state.workspaces.sourcecast.isEditorReadonly,\n  inputToApply: state.workspaces.sourcecast.inputToApply,\n  isRunning: state.workspaces.sourcecast.isRunning,\n  isDebugging: state.workspaces.sourcecast.isDebugging,\n  enableDebugging: state.workspaces.sourcecast.enableDebugging,\n  output: state.workspaces.sourcecast.output,\n  playbackDuration: state.workspaces.sourcecast.playbackDuration,\n  playbackData: state.workspaces.sourcecast.playbackData,\n  playbackStatus: state.workspaces.sourcecast.playbackStatus,\n  replValue: state.workspaces.sourcecast.replValue,\n  sideContentHeight: state.workspaces.sourcecast.sideContentHeight,\n  sourcecastIndex: state.workspaces.sourcecast.sourcecastIndex,\n  sourceChapter: Chapter.CLANG,\n  sourceVariant: state.workspaces.sourcecast.context.variant,\n  uid: state.workspaces.sourcecast.uid,\n  courseId: state.session.courseId\n});\n\nconst location: WorkspaceLocation = 'sourcecast';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleChapterSelect: (chapter: Chapter) => chapterSelect(chapter, Variant.DEFAULT, location),\n      handleEditorEval: () => evalEditor(location),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, location),\n      handleExternalSelect: (externalLibraryName: ExternalLibraryName) =>\n        externalLibrarySelect(externalLibraryName, location),\n      handleReplEval: () => evalRepl(location),\n      handleSetSourcecastData: (\n        title: string,\n        description: string,\n        uid: string,\n        audioUrl: string,\n        playbackData: PlaybackData\n      ) => setSourcecastData(title, description, uid, audioUrl, playbackData, location),\n      handleSetSourcecastStatus: (playbackStatus: PlaybackStatus) =>\n        setSourcecastStatus(playbackStatus, location)\n    },\n    dispatch\n  );\n\nconst SourcecastContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(Sourcecast));\n\nexport default SourcecastContainer;\n","import {\n  Button,\n  Callout,\n  FileInput,\n  FormGroup,\n  H2,\n  H4,\n  HTMLSelect,\n  Icon,\n  Intent,\n  Position\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport { GridApi, GridReadyEvent } from 'ag-grid-community';\nimport { AgGridReact } from 'ag-grid-react';\nimport { uniqBy } from 'lodash';\nimport React from 'react';\nimport { useCSVReader } from 'react-papaparse';\nimport { Role } from 'src/commons/application/ApplicationTypes';\n\nimport Constants from '../../../../commons/utils/Constants';\n\nexport type AddUserPanelProps = OwnProps;\n\ntype OwnProps = {\n  handleAddNewUsersToCourse: (users: UsernameRoleGroup[], provider: string) => void;\n};\n\nexport type UsernameRoleGroup = {\n  username: string;\n  role: Role;\n  group?: string;\n};\n\nconst AddUserPanel: React.FC<AddUserPanelProps> = props => {\n  const [users, setUsers] = React.useState<UsernameRoleGroup[]>([]);\n  const [invalidCsvMsg, setInvalidCsvMsg] = React.useState<string | JSX.Element>('');\n  const gridApi = React.useRef<GridApi>();\n  const { CSVReader } = useCSVReader();\n\n  const columnDefs = [\n    {\n      headerName: 'Username',\n      field: 'username'\n    },\n    {\n      headerName: 'Role',\n      field: 'role'\n    },\n    {\n      headerName: 'Group',\n      field: 'group'\n    }\n  ];\n\n  const defaultColumnDefs = {\n    filter: true,\n    resizable: true,\n    sortable: true\n  };\n\n  const onGridReady = (params: GridReadyEvent) => {\n    gridApi.current = params.api;\n  };\n\n  const grid = (\n    <div className=\"Grid ag-grid-parent ag-theme-balham\">\n      <AgGridReact\n        domLayout={'autoHeight'}\n        columnDefs={columnDefs}\n        defaultColDef={defaultColumnDefs}\n        onGridReady={onGridReady}\n        onGridSizeChanged={() => gridApi.current?.sizeColumnsToFit()}\n        rowData={users}\n        rowHeight={36}\n        suppressCellSelection={true}\n        suppressMovableColumns={true}\n        pagination\n      />\n    </div>\n  );\n\n  const htmlSelectOptions = [...Constants.authProviders.entries()].map(([id, _]) => id);\n  const [provider, setProvider] = React.useState(htmlSelectOptions[0]);\n\n  const validateCsvInput = (results: any) => {\n    const { data, errors }: { data: string[][]; errors: any[] } = results;\n\n    // react-papaparse upload errors\n    if (!!errors.length) {\n      setInvalidCsvMsg(\n        'Error detected while uploading the CSV file! Please recheck the file and try again.'\n      );\n      return;\n    }\n\n    /**\n     * Begin CSV validation.\n     *\n     * Terminate early if validation errors are encountered, and do not add to existing\n     * valid uploaded entries in the table\n     */\n    const processed: UsernameRoleGroup[] = [...users];\n\n    if (data.length + users.length > 1000) {\n      setInvalidCsvMsg('Please limit each upload to 1000 entries!');\n      return;\n    }\n\n    for (let i = 0; i < data.length; i++) {\n      // Incorrect number of columns\n      if (!(data[i].length === 2 || data[i].length === 3)) {\n        setInvalidCsvMsg(\n          <>\n            <div>\n              Invalid format (line {i})! Please ensure that the username and role is specified for\n              each row entry!\n            </div>\n            <br />\n            <div>\n              Format: <i>username,role</i> <b>OR</b> <i>username,role,group</i>\n            </div>\n            <br />\n            <div>(please hover over the question mark above for more details)</div>\n          </>\n        );\n        return;\n      }\n      // Invalid role specified\n      if (!Object.values(Role).includes(data[i][1] as Role)) {\n        setInvalidCsvMsg(\n          `Invalid role (line ${i})! Please ensure that the second column of each entry contains one of the following: 'admin, staff, student'`\n        );\n        return;\n      }\n    }\n\n    data.forEach(e => {\n      processed.push({\n        username: e[0],\n        role: e[1] as Role,\n        group: e[2]\n      });\n    });\n\n    // Check for duplicate usernames in data\n    if (uniqBy(processed, val => val.username).length !== processed.length) {\n      setInvalidCsvMsg('There are duplicate usernames in the uploaded CSV(s)!');\n      return;\n    }\n\n    // No validation errors\n    setUsers(processed);\n    setInvalidCsvMsg('');\n  };\n\n  const submitHandler = () => {\n    props.handleAddNewUsersToCourse(users, provider);\n    setUsers([]);\n    setProvider(htmlSelectOptions[0]);\n  };\n\n  return (\n    <div className=\"add-users\">\n      <H2>Add Users</H2>\n      {grid}\n      <H4>Upload a CSV file to mass insert or update users in your course.</H4>\n      <div className=\"upload-container\">\n        <div>\n          <div className=\"upload-settings\">\n            <div className=\"file-input\">\n              <CSVReader\n                onUploadAccepted={(results: any) => validateCsvInput(results)}\n                config={{\n                  delimiter: ',',\n                  skipEmptyLines: true\n                }}\n              >\n                {({ getRootProps, acceptedFile, ProgressBar, getRemoveFileProps }: any) => (\n                  <>\n                    <FileInput text=\"Upload CSV\" inputProps={getRootProps()} />\n                    <Popover2\n                      content={\n                        <div>\n                          <p>\n                            <u>CSV Format</u>: &nbsp;\n                            <b>\n                              <i>username,role</i>\n                            </b>\n                            &nbsp;&nbsp;OR&nbsp;&nbsp;\n                            <b>\n                              <i>username,role,group</i>\n                            </b>\n                          </p>\n                          <p>\n                            <b>\n                              <i>username</i>\n                            </b>\n                            : the username of the learner in the corresponding authentication\n                            provider\n                          </p>\n                          <p>\n                            <b>\n                              <i>role</i>\n                            </b>\n                            : the role of the learner in this course{' '}\n                            <i>(admin | staff | student)</i>\n                          </p>\n                          <p>\n                            <b>\n                              <i>group (optional)</i>\n                            </b>\n                            : the group name that the learner belongs to in this course\n                          </p>\n                          <p>\n                            <i>\n                              (*Note that staff or admin will automatically be assigned as group\n                              leader and each group\n                            </i>\n                          </p>\n                          <p>\n                            <i>\n                              can only have one leader. If there are duplicates the latest entry\n                              will take effect)\n                            </i>\n                          </p>\n\n                          <p>&nbsp;</p>\n                          <p>\n                            <u>Examples:</u>\n                          </p>\n                          <p>\n                            <i>\n                              (Luminus): &nbsp;e1234567,student &nbsp;•&nbsp;\n                              e1234567,student,Group1\n                            </i>\n                          </p>\n                          <p>\n                            <i>\n                              (Google): &nbsp;learner@gmail.com,staff &nbsp;•&nbsp;\n                              learner@gmail.com,staff,Group1\n                            </i>\n                          </p>\n                          <p>\n                            <i>\n                              (GitHub): &nbsp;ghusername,admin &nbsp;•&nbsp; ghusername,admin,Group1\n                            </i>\n                          </p>\n                        </div>\n                      }\n                      interactionKind=\"hover\"\n                      position={Position.TOP}\n                      popoverClassName=\"file-input-popover\"\n                    >\n                      <Icon icon={IconNames.HELP} className=\"file-input-icon\" />\n                    </Popover2>\n                  </>\n                )}\n              </CSVReader>\n            </div>\n\n            <FormGroup\n              className=\"html-select\"\n              label={\n                <div className=\"html-select-label\">\n                  <div>Authentication Provider</div>\n                  <Popover2\n                    content=\"The authentication provider your learners will use to log in with\"\n                    interactionKind=\"hover-target\"\n                    position={Position.TOP}\n                    popoverClassName=\"html-select-popover\"\n                  >\n                    <Icon icon={IconNames.HELP} className=\"html-select-label-icon\" />\n                  </Popover2>\n                </div>\n              }\n              inline\n            >\n              <HTMLSelect\n                options={htmlSelectOptions}\n                value={provider}\n                onChange={e => setProvider(e.target.value)}\n              />\n            </FormGroup>\n          </div>\n          {invalidCsvMsg && (\n            <Callout intent={Intent.DANGER} title=\"Invalid CSV file provided!\">\n              {invalidCsvMsg}\n            </Callout>\n          )}\n        </div>\n      </div>\n      <Button\n        className=\"add-button\"\n        text=\"Add Users\"\n        intent={users.length === 0 ? Intent.NONE : Intent.WARNING}\n        onClick={submitHandler}\n      />\n    </div>\n  );\n};\n\nexport default AddUserPanel;\n","import { Switch } from '@blueprintjs/core';\nimport React from 'react';\nimport { KeysOfType } from 'src/commons/utils/TypeHelper';\n\nimport { AssessmentConfiguration } from '../../../../../commons/assessment/AssessmentTypes';\n\ntype BooleanCellProps = OwnProps;\n\ntype OwnProps = {\n  data: AssessmentConfiguration;\n  field: KeysOfType<AssessmentConfiguration, boolean>;\n  rowIndex: number;\n  setStateHandler: (index: number, value: boolean) => void;\n};\n\nconst BooleanCell: React.FC<BooleanCellProps> = props => {\n  const { data } = props;\n  const checked = data[props.field];\n\n  const changeHandler = React.useCallback(() => {\n    props.setStateHandler(props.rowIndex, !checked);\n  }, [props, checked]);\n\n  return <Switch checked={checked} onChange={changeHandler} />;\n};\n\nexport default BooleanCell;\n","import { Button, Classes, Dialog, Intent } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\nimport { AssessmentConfiguration } from 'src/commons/assessment/AssessmentTypes';\nimport ControlButton from 'src/commons/ControlButton';\n\ntype DeleteRowCellProps = OwnProps;\n\ntype OwnProps = {\n  data: AssessmentConfiguration;\n  rowIndex: number;\n  deleteRowHandler: (index: number) => void;\n};\n\nconst DeleteRowCell: React.FC<DeleteRowCellProps> = props => {\n  const [isDialogOpen, setIsDialogOpen] = React.useState<boolean>(false);\n\n  const clickHandler = () => {\n    setIsDialogOpen(true);\n  };\n  const handleDelete = React.useCallback(() => {\n    props.deleteRowHandler(props.rowIndex);\n    setIsDialogOpen(false);\n  }, [props]);\n\n  return (\n    <>\n      <Button icon={IconNames.CROSS} onClick={clickHandler} />\n      <Dialog\n        icon={IconNames.WARNING_SIGN}\n        isOpen={isDialogOpen}\n        onClose={() => setIsDialogOpen(false)}\n        title=\"Warning\"\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <p>\n            Are you sure you want to <b>delete</b> the assessment type <i>{props.data.type}</i>?\n          </p>\n          <p>\n            <b>\n              All related assessments, submissions and answers will be deleted as well upon clicking\n              the main save button.\n            </b>\n          </p>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <ControlButton\n              label=\"Cancel\"\n              icon={IconNames.CROSS}\n              onClick={() => setIsDialogOpen(false)}\n              options={{ minimal: false }}\n            />\n            <ControlButton\n              label=\"Ok\"\n              icon={IconNames.TICK}\n              onClick={handleDelete}\n              options={{ minimal: false, intent: Intent.WARNING }}\n            />\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\nexport default DeleteRowCell;\n","import { NumericInput } from '@blueprintjs/core';\nimport React from 'react';\nimport { AssessmentConfiguration } from 'src/commons/assessment/AssessmentTypes';\nimport { KeysOfType } from 'src/commons/utils/TypeHelper';\n\ntype NumericCellProps = OwnProps;\n\ntype OwnProps = {\n  data: AssessmentConfiguration;\n  field: KeysOfType<AssessmentConfiguration, number>;\n  rowIndex: number;\n  setStateHandler: (index: number, value: number) => void;\n};\n\nconst NumericCell: React.FC<NumericCellProps> = props => {\n  const { data } = props;\n\n  const changeHandler = React.useCallback(\n    (value: number) => {\n      props.setStateHandler(props.rowIndex, value);\n    },\n    [props]\n  );\n\n  return (\n    <NumericInput\n      value={data[props.field]}\n      min={0}\n      clampValueOnBlur\n      onValueChange={changeHandler}\n    />\n  );\n};\nexport default NumericCell;\n","import { Button, H2 } from '@blueprintjs/core';\nimport { CellValueChangedEvent, GridApi, GridReadyEvent, RowDragEvent } from 'ag-grid-community';\nimport { AgGridReact } from 'ag-grid-react';\nimport { isEqual } from 'lodash';\nimport React from 'react';\nimport { showWarningMessage } from 'src/commons/utils/NotificationsHelper';\n\nimport { AssessmentConfiguration } from '../../../../../commons/assessment/AssessmentTypes';\nimport BooleanCell from './BooleanCell';\nimport DeleteRowCell from './DeleteRowCell';\nimport NumericCell from './NumericCell';\n\nexport type AssessmentConfigPanelProps = OwnProps;\n\ntype OwnProps = {\n  assessmentConfig: React.MutableRefObject<AssessmentConfiguration[]>;\n  setAssessmentConfig: (assessmentConfig: AssessmentConfiguration[]) => void;\n  setAssessmentConfigsToDelete: (assessmentConfig: AssessmentConfiguration) => void;\n  setHasChangesAssessmentConfig: (val: boolean) => void;\n};\n\nconst AssessmentConfigPanel: React.FC<AssessmentConfigPanelProps> = props => {\n  const { assessmentConfig, setAssessmentConfig, setAssessmentConfigsToDelete } = props;\n  const gridApi = React.useRef<GridApi>();\n\n  const setIsManuallyGraded = (index: number, value: boolean) => {\n    const temp = [...assessmentConfig.current];\n    temp[index] = {\n      ...temp[index],\n      isManuallyGraded: value\n    };\n    setAssessmentConfig(temp);\n    gridApi.current?.getDisplayedRowAtIndex(index)?.setDataValue('isManuallyGraded', value);\n  };\n\n  const setDisplayInDashboard = (index: number, value: boolean) => {\n    const temp = [...assessmentConfig.current];\n    temp[index] = {\n      ...temp[index],\n      displayInDashboard: value\n    };\n    setAssessmentConfig(temp);\n    gridApi.current?.getDisplayedRowAtIndex(index)?.setDataValue('displayInDashboard', value);\n  };\n\n  const setEarlyXp = (index: number, value: number) => {\n    const temp = [...assessmentConfig.current];\n    temp[index] = {\n      ...temp[index],\n      earlySubmissionXp: value\n    };\n    setAssessmentConfig(temp);\n    gridApi.current?.getDisplayedRowAtIndex(index)?.setDataValue('earlySubmissionXp', value);\n  };\n\n  const setHoursBeforeDecay = (index: number, value: number) => {\n    const temp = [...assessmentConfig.current];\n    temp[index] = {\n      ...temp[index],\n      hoursBeforeEarlyXpDecay: value\n    };\n    setAssessmentConfig(temp);\n    gridApi.current?.getDisplayedRowAtIndex(index)?.setDataValue('hoursBeforeEarlyXpDecay', value);\n  };\n\n  const addRowHandler = () => {\n    if (assessmentConfig.current.length >= 8) {\n      showWarningMessage('You can have at most 8 assessment types!');\n      return;\n    }\n\n    const temp = [...assessmentConfig.current];\n    temp.push({\n      assessmentConfigId: -1,\n      type: 'untitled',\n      isManuallyGraded: true,\n      displayInDashboard: true,\n      hoursBeforeEarlyXpDecay: 0,\n      earlySubmissionXp: 0\n    });\n    setAssessmentConfig(temp);\n    gridApi.current?.setRowData(temp);\n  };\n\n  const deleteRowHandler = (index: number) => {\n    if (assessmentConfig.current.length <= 1) {\n      showWarningMessage('You must have at least 1 assessment type!');\n      return;\n    }\n\n    const temp = [...assessmentConfig.current];\n    const deleted = temp.splice(index, 1);\n    gridApi.current?.setRowData(temp);\n    setAssessmentConfig(temp);\n    setAssessmentConfigsToDelete(deleted[0]);\n  };\n\n  const columnDefs = [\n    {\n      headerName: 'Assessment Type',\n      field: 'type',\n      rowDrag: true,\n      editable: true\n    },\n    {\n      headerName: 'Is Manually Graded',\n      field: 'isManuallyGraded',\n      cellRendererFramework: BooleanCell,\n      cellRendererParams: {\n        setStateHandler: setIsManuallyGraded,\n        field: 'isManuallyGraded'\n      }\n    },\n    {\n      headerName: 'Display in Dashboard',\n      field: 'displayInDashboard',\n      cellRendererFramework: BooleanCell,\n      cellRendererParams: {\n        setStateHandler: setDisplayInDashboard,\n        field: 'displayInDashboard'\n      }\n    },\n    {\n      headerName: 'Max Bonus XP',\n      field: 'earlySubmissionXp',\n      cellRendererFramework: NumericCell,\n      cellRendererParams: {\n        setStateHandler: setEarlyXp,\n        field: 'earlySubmissionXp'\n      }\n    },\n    {\n      headerName: 'Early Hours Before Decay',\n      field: 'hoursBeforeEarlyXpDecay',\n      cellRendererFramework: NumericCell,\n      cellRendererParams: {\n        setStateHandler: setHoursBeforeDecay,\n        field: 'hoursBeforeEarlyXpDecay'\n      }\n    },\n    {\n      headerName: 'Delete Row',\n      field: 'placeholderToPreventColumnRerender',\n      cellRendererFramework: DeleteRowCell,\n      cellRendererParams: {\n        deleteRowHandler: deleteRowHandler\n      },\n      maxWidth: 120,\n      resizable: false\n    }\n  ];\n\n  const defaultColumnDefs = {\n    filter: false,\n    resizable: true,\n    sortable: false\n  };\n\n  // Tracks the movement of rows in our local React state while dragging\n  const onRowDragMove = React.useCallback(\n    (event: RowDragEvent) => {\n      const movingNode = event.node;\n      const overNode = event.overNode;\n      const rowNeedsToMove = movingNode !== overNode;\n      if (rowNeedsToMove) {\n        const movingData = movingNode.data;\n        const overData = overNode?.data;\n        const fromIndex = indexOfObject(assessmentConfig.current, movingData);\n        const toIndex = indexOfObject(assessmentConfig.current, overData);\n\n        const temp = [...assessmentConfig.current];\n        moveInArray(temp, fromIndex, toIndex);\n        assessmentConfig.current = temp;\n      }\n    },\n    [assessmentConfig]\n  );\n\n  // Updates the data passed into ag-grid (this is necessary to update the rowIndex in our custom\n  // cellRendererFramework)\n  const onRowDragLeaveOrEnd = (event: RowDragEvent) => {\n    gridApi.current?.setRowData(assessmentConfig.current);\n    props.setHasChangesAssessmentConfig(true);\n  };\n\n  // Updates our local React state whenever there are changes to the Assessment Type column\n  const onCellValueChanged = (event: CellValueChangedEvent) => {\n    if (event.colDef.field === 'type') {\n      const temp = [...assessmentConfig.current];\n      temp[event.rowIndex!] = {\n        ...temp[event.rowIndex!],\n        type: event.value\n      };\n      assessmentConfig.current = temp;\n      props.setHasChangesAssessmentConfig(true);\n    }\n  };\n\n  const onGridReady = (params: GridReadyEvent) => {\n    gridApi.current = params.api;\n    params.api.sizeColumnsToFit();\n  };\n\n  const grid = (\n    <div className=\"Grid ag-grid-parent ag-theme-balham\">\n      <AgGridReact\n        domLayout={'autoHeight'}\n        columnDefs={columnDefs}\n        defaultColDef={defaultColumnDefs}\n        onGridReady={onGridReady}\n        onGridSizeChanged={() => gridApi.current?.sizeColumnsToFit()}\n        rowData={props.assessmentConfig.current}\n        rowHeight={36}\n        rowDragManaged={true}\n        suppressCellSelection={true}\n        suppressMovableColumns={true}\n        suppressPaginationPanel={true}\n        onRowDragMove={onRowDragMove}\n        onRowDragLeave={onRowDragLeaveOrEnd}\n        onRowDragEnd={onRowDragLeaveOrEnd}\n        onCellValueChanged={onCellValueChanged}\n      />\n    </div>\n  );\n\n  return (\n    <div className=\"assessment-configuration\">\n      <div className=\"assessment-configuration-header-container\">\n        <H2>Assessment Configuration</H2>\n        <Button text=\"Add Row\" onClick={addRowHandler} className=\"add-row-button\" />\n      </div>\n      {grid}\n    </div>\n  );\n};\n\nfunction moveInArray(arr: any[], fromIndex: number, toIndex: number): void {\n  const element = arr[fromIndex];\n  arr.splice(fromIndex, 1);\n  arr.splice(toIndex, 0, element);\n}\n\nfunction indexOfObject(arr: any[], obj: any): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (isEqual(arr[i], obj)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport default AssessmentConfigPanel;\n","import {\n  Divider,\n  FormGroup,\n  H2,\n  H3,\n  InputGroup,\n  Switch,\n  Tab,\n  Tabs,\n  TextArea\n} from '@blueprintjs/core';\nimport * as React from 'react';\nimport { useResponsive } from 'src/commons/utils/Hooks';\n\nimport { UpdateCourseConfiguration } from '../../../../commons/application/types/SessionTypes';\nimport Markdown from '../../../../commons/Markdown';\n\nexport type CourseConfigPanelProps = OwnProps;\n\ntype OwnProps = {\n  courseConfiguration: UpdateCourseConfiguration;\n  setCourseConfiguration: (courseConfiguration: UpdateCourseConfiguration) => void;\n};\n\nexport enum CourseHelpTextEditorTab {\n  WRITE = 'WRITE',\n  PREVIEW = 'PREVIEW'\n}\n\nconst CourseConfigPanel: React.FC<CourseConfigPanelProps> = props => {\n  const { isMobileBreakpoint } = useResponsive();\n  const [courseHelpTextSelectedTab, setCourseHelpTextSelectedTab] =\n    React.useState<CourseHelpTextEditorTab>(CourseHelpTextEditorTab.WRITE);\n\n  const {\n    courseName,\n    courseShortName,\n    viewable,\n    enableGame,\n    enableAchievements,\n    enableSourcecast,\n    moduleHelpText\n  } = props.courseConfiguration;\n\n  const writePanel = (\n    <TextArea\n      id=\"moduleHelpText\"\n      className=\"input-textarea\"\n      fill={true}\n      value={moduleHelpText || ''}\n      onChange={e =>\n        props.setCourseConfiguration({\n          ...props.courseConfiguration,\n          moduleHelpText: e.target.value\n        })\n      }\n    />\n  );\n\n  const previewPanel = (\n    <div className=\"input-markdown\">\n      <Markdown content={moduleHelpText || ''} openLinksInNewWindow />\n    </div>\n  );\n\n  const onChangeTabs = React.useCallback(\n    (\n      newTabId: CourseHelpTextEditorTab,\n      prevTabId: CourseHelpTextEditorTab,\n      event: React.MouseEvent<HTMLElement>\n    ) => {\n      if (newTabId === prevTabId) {\n        return;\n      }\n      setCourseHelpTextSelectedTab(newTabId);\n    },\n    [setCourseHelpTextSelectedTab]\n  );\n\n  return (\n    <div className=\"course-configuration\">\n      <H2>{courseName}</H2>\n      <H3>{courseShortName}</H3>\n      <div className=\"inputs\">\n        <div className=\"text\">\n          <FormGroup\n            helperText=\"Please enter the course name that will be used for course selection.\"\n            inline={true}\n            label=\"Course Name\"\n            labelFor=\"courseName\"\n          >\n            <InputGroup\n              id=\"courseName\"\n              defaultValue={courseName}\n              onChange={e =>\n                props.setCourseConfiguration({\n                  ...props.courseConfiguration,\n                  courseName: e.target.value\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            helperText=\"Please enter the course short name. This will be displayed on the top left.\"\n            inline={true}\n            label=\"Course Short Name\"\n            labelFor=\"courseShortName\"\n          >\n            <InputGroup\n              id=\"courseShortName\"\n              defaultValue={courseShortName}\n              onChange={e =>\n                props.setCourseConfiguration({\n                  ...props.courseConfiguration,\n                  courseShortName: e.target.value\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            helperText=\"Please enter the module help text that will be used in the course help dialog.\"\n            inline={true}\n            label=\"Module Help Text\"\n            labelFor=\"moduleHelpText\"\n          >\n            <Tabs\n              selectedTabId={courseHelpTextSelectedTab}\n              onChange={onChangeTabs}\n              className=\"module-help-text-tabs\"\n            >\n              <Tab id={CourseHelpTextEditorTab.WRITE} title=\"Write\" />\n              <Tab id={CourseHelpTextEditorTab.PREVIEW} title=\"Preview\" />\n            </Tabs>\n            {courseHelpTextSelectedTab === CourseHelpTextEditorTab.WRITE && writePanel}\n            {courseHelpTextSelectedTab === CourseHelpTextEditorTab.PREVIEW && previewPanel}\n          </FormGroup>\n        </div>\n        {!isMobileBreakpoint && <Divider />}\n        <div className=\"booleans\">\n          <Switch\n            checked={viewable}\n            label=\"Viewable\"\n            onChange={e =>\n              props.setCourseConfiguration({\n                ...props.courseConfiguration,\n                viewable: (e.target as HTMLInputElement).checked\n              })\n            }\n          />\n          <Switch\n            checked={enableGame}\n            label=\"Enable Game\"\n            onChange={e =>\n              props.setCourseConfiguration({\n                ...props.courseConfiguration,\n                enableGame: (e.target as HTMLInputElement).checked\n              })\n            }\n          />\n          <Switch\n            checked={enableAchievements}\n            label=\"Enable Achievements\"\n            onChange={e =>\n              props.setCourseConfiguration({\n                ...props.courseConfiguration,\n                enableAchievements: (e.target as HTMLInputElement).checked\n              })\n            }\n          />\n          <Switch\n            checked={enableSourcecast}\n            label=\"Enable Sourcecast\"\n            onChange={e =>\n              props.setCourseConfiguration({\n                ...props.courseConfiguration,\n                enableSourcecast: (e.target as HTMLInputElement).checked\n              })\n            }\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CourseConfigPanel;\n","import { HTMLSelect, Position } from '@blueprintjs/core';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport React from 'react';\nimport { Role } from 'src/commons/application/ApplicationTypes';\nimport { AdminPanelCourseRegistration } from 'src/commons/application/types/SessionTypes';\n\ntype RolesCellProps = OwnProps;\n\ntype OwnProps = {\n  data: AdminPanelCourseRegistration;\n  rowIndex: number;\n  courseRegId: number;\n  handleUpdateUserRole: (courseRegId: number, role: Role) => void;\n};\n\nconst RolesCell: React.FC<RolesCellProps> = props => {\n  const { data } = props;\n\n  const changeHandler = React.useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      props.handleUpdateUserRole(data.courseRegId, e.target.value as Role);\n    },\n    [data, props]\n  );\n\n  const roleOptions = [\n    {\n      label: 'Student',\n      value: Role.Student\n    },\n    {\n      label: 'Staff',\n      value: Role.Staff\n    },\n    {\n      label: 'Admin',\n      value: Role.Admin\n    }\n  ];\n  return (\n    <Popover2\n      content=\"You cannot downgrade yourself from an admin role!\"\n      interactionKind=\"click\"\n      position={Position.TOP}\n      disabled={props.courseRegId !== data.courseRegId}\n    >\n      <HTMLSelect\n        options={roleOptions}\n        onChange={changeHandler}\n        fill\n        minimal\n        style={{ textAlign: 'center' }}\n        value={data.role}\n        disabled={props.courseRegId === data.courseRegId}\n      />\n    </Popover2>\n  );\n};\n\nexport default RolesCell;\n","import { Button, Classes, Dialog, Intent, Position } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport React from 'react';\nimport { Role } from 'src/commons/application/ApplicationTypes';\nimport { AdminPanelCourseRegistration } from 'src/commons/application/types/SessionTypes';\nimport ControlButton from 'src/commons/ControlButton';\nimport { showWarningMessage } from 'src/commons/utils/NotificationsHelper';\n\ntype DeleteUserCellProps = OwnProps;\n\ntype OwnProps = {\n  data: AdminPanelCourseRegistration;\n  rowIndex: number;\n  handleDeleteUserFromCourse: (courseRegId: number) => void;\n};\n\nconst DeleteUserCell: React.FC<DeleteUserCellProps> = props => {\n  const [isDialogOpen, setIsDialogOpen] = React.useState<boolean>(false);\n\n  const clickHandler = () => {\n    if (props.data.role === Role.Admin) {\n      showWarningMessage('You cannot delete an admin user!');\n      return;\n    }\n    setIsDialogOpen(true);\n  };\n\n  const handleDelete = React.useCallback(() => {\n    props.handleDeleteUserFromCourse(props.data.courseRegId);\n    setIsDialogOpen(false);\n  }, [props]);\n\n  return (\n    <>\n      <Popover2\n        content=\"You cannot delete an admin!\"\n        interactionKind=\"click\"\n        position={Position.TOP}\n        disabled={props.data.role !== Role.Admin}\n      >\n        <Button\n          text=\"Delete User\"\n          icon={IconNames.CROSS}\n          onClick={clickHandler}\n          disabled={props.data.role === Role.Admin}\n        />\n      </Popover2>\n      <Dialog\n        icon={IconNames.WARNING_SIGN}\n        isOpen={isDialogOpen}\n        onClose={() => setIsDialogOpen(false)}\n        title=\"Deleting User From Course\"\n        canOutsideClickClose\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <p>\n            Are you sure you want to <b>delete</b> the user{' '}\n            <i>\n              {props.data.name} ({props.data.username})\n            </i>\n            ?\n          </p>\n          <p>\n            <b>All their assessment answers will be deleted as well.</b>\n          </p>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <ControlButton\n              label=\"Cancel\"\n              icon={IconNames.CROSS}\n              onClick={() => setIsDialogOpen(false)}\n              options={{ minimal: false }}\n            />\n            <ControlButton\n              label=\"Confirm\"\n              icon={IconNames.TRASH}\n              onClick={handleDelete}\n              options={{ minimal: false, intent: Intent.DANGER }}\n            />\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n\nexport default DeleteUserCell;\n","import { Button, H2 } from '@blueprintjs/core';\nimport { ColDef, GridApi, GridReadyEvent } from 'ag-grid-community';\nimport { AgGridReact } from 'ag-grid-react';\nimport React from 'react';\nimport { Role } from 'src/commons/application/ApplicationTypes';\nimport { AdminPanelCourseRegistration } from 'src/commons/application/types/SessionTypes';\n\nimport RolesCell from './RolesCell';\nimport UserActionsCell from './UserActionsCell';\n\nexport type UserConfigPanelProps = OwnProps;\n\ntype OwnProps = {\n  courseRegId?: number;\n  userCourseRegistrations?: AdminPanelCourseRegistration[];\n  handleUpdateUserRole: (courseRegId: number, role: Role) => void;\n  handleDeleteUserFromCourse: (courseRegId: number) => void;\n};\n\n/**\n * Only admins can access this panel.\n * - Admins cannot be deleted\n * - An admin cannot downgrade himself to a non-admin role (only\n *   other admins can do so, to prevent a scenario where there are\n *   no admins left in a course)\n */\nconst UserConfigPanel: React.FC<UserConfigPanelProps> = props => {\n  const gridApi = React.useRef<GridApi>();\n\n  const userCourseRegistrations = props.userCourseRegistrations?.map(e =>\n    !e.name ? { ...e, name: '(user has yet to log in)' } : e\n  );\n\n  const columnDefs: ColDef[] = [\n    {\n      headerName: 'Name',\n      field: 'name',\n      sort: 'asc'\n    },\n    {\n      headerName: 'Username',\n      field: 'username'\n    },\n    {\n      headerName: 'Group',\n      field: 'group'\n    },\n    {\n      headerName: 'Role',\n      field: 'role',\n      cellRendererFramework: RolesCell,\n      cellRendererParams: {\n        courseRegId: props.courseRegId,\n        handleUpdateUserRole: props.handleUpdateUserRole\n      },\n      width: 110\n    },\n    {\n      headerName: 'Actions',\n      field: 'actions',\n      cellRendererFramework: UserActionsCell,\n      cellRendererParams: {\n        handleDeleteUserFromCourse: props.handleDeleteUserFromCourse\n      },\n      width: 120,\n      filter: false,\n      resizable: false\n    }\n  ];\n\n  const defaultColumnDefs = {\n    filter: true,\n    resizable: true,\n    sortable: true\n  };\n\n  const onGridReady = (params: GridReadyEvent) => {\n    gridApi.current = params.api;\n  };\n\n  const grid = (\n    <div className=\"Grid ag-grid-parent ag-theme-balham\">\n      <AgGridReact\n        domLayout={'autoHeight'}\n        columnDefs={columnDefs}\n        defaultColDef={defaultColumnDefs}\n        onGridReady={onGridReady}\n        onGridSizeChanged={() => gridApi.current?.sizeColumnsToFit()}\n        rowData={userCourseRegistrations}\n        rowHeight={36}\n        suppressCellSelection={true}\n        suppressMovableColumns={true}\n        pagination\n      />\n    </div>\n  );\n\n  return (\n    <div className=\"users-configuration\">\n      <div className=\"users-header-container\">\n        <H2>Users</H2>\n        <Button\n          text=\"Export as CSV\"\n          className=\"export-csv-button\"\n          onClick={() => {\n            if (gridApi.current) {\n              gridApi.current.exportDataAsCsv({\n                fileName: `SA Users (${new Date().toISOString()}).csv`,\n                columnKeys: ['name', 'username', 'group', 'role']\n              });\n            }\n          }}\n        />\n      </div>\n      {grid}\n    </div>\n  );\n};\n\nexport default UserConfigPanel;\n","import 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\n\nimport { Button, Divider, H1, Intent, Tab, Tabs } from '@blueprintjs/core';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { Role } from 'src/commons/application/ApplicationTypes';\n\nimport {\n  AdminPanelCourseRegistration,\n  UpdateCourseConfiguration\n} from '../../../commons/application/types/SessionTypes';\nimport { AssessmentConfiguration } from '../../../commons/assessment/AssessmentTypes';\nimport ContentDisplay from '../../../commons/ContentDisplay';\nimport AddUserPanel, { UsernameRoleGroup } from './subcomponents/AddUserPanel';\nimport AssessmentConfigPanel from './subcomponents/assessmentConfigPanel/AssessmentConfigPanel';\nimport CourseConfigPanel from './subcomponents/CourseConfigPanel';\nimport UserConfigPanel from './subcomponents/userConfigPanel/UserConfigPanel';\n\nexport type AdminPanelProps = DispatchProps & StateProps;\n\nexport type DispatchProps = {\n  handleFetchCourseConfiguration: () => void;\n  handleFetchAssessmentConfigs: () => void;\n  handleFetchUserCourseRegistrations: () => void;\n  handleUpdateCourseConfig: (courseConfiguration: UpdateCourseConfiguration) => void;\n  handleUpdateAssessmentConfigs: (assessmentConfigs: AssessmentConfiguration[]) => void;\n  setAssessmentConfigurations: (assessmentConfigs: AssessmentConfiguration[]) => void;\n  handleDeleteAssessmentConfig: (assessmentConfig: AssessmentConfiguration) => void;\n  handleUpdateUserRole: (courseRegId: number, role: Role) => void;\n  handleDeleteUserFromCourse: (courseRegId: number) => void;\n  handleAddNewUsersToCourse: (users: UsernameRoleGroup[], provider: string) => void;\n};\n\nexport type StateProps = {\n  courseRegId?: number;\n  courseName?: string;\n  courseShortName?: string;\n  viewable?: boolean;\n  enableGame?: boolean;\n  enableAchievements?: boolean;\n  enableSourcecast?: boolean;\n  moduleHelpText?: string;\n  assessmentConfigurations?: AssessmentConfiguration[];\n  userCourseRegistrations?: AdminPanelCourseRegistration[];\n};\n\nconst AdminPanel: React.FC<AdminPanelProps> = props => {\n  const [hasChangesCourseConfig, setHasChangesCourseConfig] = React.useState(false);\n  const [hasChangesAssessmentConfig, setHasChangesAssessmentConfig] = React.useState(false);\n\n  const [courseConfiguration, setCourseConfiguration] = React.useState<UpdateCourseConfiguration>({\n    courseName: '',\n    courseShortName: '',\n    viewable: true,\n    enableGame: true,\n    enableAchievements: true,\n    enableSourcecast: true,\n    moduleHelpText: ''\n  });\n\n  /**\n   * Mutable ref to track the assessment configuration form state instead of useState. This is\n   * because ag-grid does not update the cellRendererParams whenever there is an update in rowData,\n   * leading to a stale closure problem where the handlers in AssessmentConfigPanel capture the old\n   * value of assessmentConfig.\n   *\n   * Also, useState causes a flicker in ag-grid during rerenders. Thus we use this mutable ref and\n   * ag-grid's API to update cell values instead.\n   */\n  const assessmentConfig = React.useRef(props.assessmentConfigurations);\n\n  // Tracks the assessment configurations to be deleted in the backend when the save button is clicked\n  const [assessmentConfigsToDelete, setAssessmentConfigsToDelete] = React.useState<\n    AssessmentConfiguration[]\n  >([]);\n\n  React.useEffect(() => {\n    props.handleFetchCourseConfiguration();\n    props.handleFetchAssessmentConfigs();\n    props.handleFetchUserCourseRegistrations();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // After updated configs have been loaded from the backend, put them into local React state\n  React.useEffect(() => {\n    setCourseConfiguration({\n      courseName: props.courseName,\n      courseShortName: props.courseShortName,\n      viewable: props.viewable,\n      enableGame: props.enableGame,\n      enableAchievements: props.enableAchievements,\n      enableSourcecast: props.enableSourcecast,\n      moduleHelpText: props.moduleHelpText\n    });\n\n    // IMPT: To prevent mutation of props\n    assessmentConfig.current = cloneDeep(props.assessmentConfigurations);\n  }, [props]);\n\n  const courseConfigPanelProps = {\n    courseConfiguration: courseConfiguration,\n    setCourseConfiguration: (courseConfig: UpdateCourseConfiguration) => {\n      setCourseConfiguration(courseConfig);\n      setHasChangesCourseConfig(true);\n    }\n  };\n\n  const assessmentConfigPanelProps = React.useMemo(() => {\n    return {\n      // Would have been loaded by the useEffect above\n      assessmentConfig: assessmentConfig as React.MutableRefObject<AssessmentConfiguration[]>,\n      setAssessmentConfig: (val: AssessmentConfiguration[]) => {\n        assessmentConfig.current = val;\n        setHasChangesAssessmentConfig(true);\n      },\n      setAssessmentConfigsToDelete: (deletedElement: AssessmentConfiguration) => {\n        // If it is not a newly created row that is yet to be persisted in the backend\n        if (deletedElement.assessmentConfigId !== -1) {\n          const temp = [...assessmentConfigsToDelete];\n          temp.push(deletedElement);\n          setAssessmentConfigsToDelete(temp);\n        }\n      },\n      setHasChangesAssessmentConfig: setHasChangesAssessmentConfig\n    };\n  }, [assessmentConfigsToDelete]);\n\n  const userConfigPanelProps = {\n    courseRegId: props.courseRegId,\n    userCourseRegistrations: props.userCourseRegistrations,\n    handleUpdateUserRole: props.handleUpdateUserRole,\n    handleDeleteUserFromCourse: props.handleDeleteUserFromCourse\n  };\n\n  const addUserPanelProps = {\n    handleAddNewUsersToCourse: props.handleAddNewUsersToCourse\n  };\n\n  // Handler to submit changes to Course Configration and Assessment Configuration to the backend.\n  // Changes made to users are handled separately.\n  const submitHandler = () => {\n    if (hasChangesCourseConfig) {\n      props.handleUpdateCourseConfig(courseConfiguration);\n      setHasChangesCourseConfig(false);\n    }\n    if (assessmentConfigsToDelete.length > 0) {\n      assessmentConfigsToDelete.forEach(assessmentConfig => {\n        props.handleDeleteAssessmentConfig(assessmentConfig);\n      });\n      setAssessmentConfigsToDelete([]);\n    }\n    if (hasChangesAssessmentConfig) {\n      // Reset the store first so that old props do not propagate down and cause a flicker\n      props.setAssessmentConfigurations([]);\n\n      // assessmentConfig.current will exist after the first load\n      props.handleUpdateAssessmentConfigs(assessmentConfig.current!);\n      setHasChangesAssessmentConfig(false);\n    }\n  };\n\n  const data = (\n    <div className=\"admin-panel\">\n      <H1>Admin Panel</H1>\n      {/* renderActiveTabPanelOnly to handle large courses with many entries in ag-grid */}\n      <Tabs id=\"admin-panel\" renderActiveTabPanelOnly>\n        <Tab\n          id=\"configuration\"\n          title=\"Configuration\"\n          panel={\n            <>\n              <CourseConfigPanel {...courseConfigPanelProps} />\n              <Divider />\n              <AssessmentConfigPanel {...assessmentConfigPanelProps} />\n              <Button\n                text=\"Save\"\n                style={{ marginTop: '15px' }}\n                intent={\n                  hasChangesCourseConfig || hasChangesAssessmentConfig\n                    ? Intent.WARNING\n                    : Intent.NONE\n                }\n                onClick={submitHandler}\n              />\n            </>\n          }\n        />\n        <Tab id=\"users\" title=\"Users\" panel={<UserConfigPanel {...userConfigPanelProps} />} />\n        <Tab id=\"add-users\" title=\"Add Users\" panel={<AddUserPanel {...addUserPanelProps} />} />\n      </Tabs>\n    </div>\n  );\n\n  return <ContentDisplay loadContentDispatch={() => {}} display={data} fullWidth={false} />;\n};\n\nexport default AdminPanel;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { addNewUsersToCourse } from 'src/features/academy/AcademyActions';\n\nimport {\n  deleteAssessmentConfig,\n  deleteUserCourseRegistration,\n  fetchAdminPanelCourseRegistrations,\n  fetchAssessmentConfigs,\n  fetchCourseConfig,\n  setAssessmentConfigurations,\n  updateAssessmentConfigs,\n  updateCourseConfig,\n  updateUserRole\n} from '../../../commons/application/actions/SessionActions';\nimport { OverallState } from '../../../commons/application/ApplicationTypes';\nimport AdminPanel, { DispatchProps, StateProps } from './AdminPanel';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  courseRegId: state.session.courseRegId,\n  courseName: state.session.courseName,\n  courseShortName: state.session.courseShortName,\n  viewable: state.session.viewable,\n  enableGame: state.session.enableGame,\n  enableAchievements: state.session.enableAchievements,\n  enableSourcecast: state.session.enableSourcecast,\n  moduleHelpText: state.session.moduleHelpText,\n  assessmentConfigurations: state.session.assessmentConfigurations,\n  userCourseRegistrations: state.session.userCourseRegistrations\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleFetchCourseConfiguration: fetchCourseConfig,\n      handleFetchAssessmentConfigs: fetchAssessmentConfigs,\n      handleFetchUserCourseRegistrations: fetchAdminPanelCourseRegistrations,\n      handleUpdateCourseConfig: updateCourseConfig,\n      handleUpdateAssessmentConfigs: updateAssessmentConfigs,\n      setAssessmentConfigurations: setAssessmentConfigurations,\n      handleDeleteAssessmentConfig: deleteAssessmentConfig,\n      handleUpdateUserRole: updateUserRole,\n      handleDeleteUserFromCourse: deleteUserCourseRegistration,\n      handleAddNewUsersToCourse: addNewUsersToCourse\n    },\n    dispatch\n  );\n\nconst AdminPanelContainer = connect(mapStateToProps, mapDispatchToProps)(AdminPanel);\n\nexport default AdminPanelContainer;\n","import 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nimport { ColDef, GridApi, GridReadyEvent } from 'ag-grid-community';\nimport { AgGridReact } from 'ag-grid-react';\nimport { startCase } from 'lodash';\nimport * as React from 'react';\n\nimport ContentDisplay from '../../../commons/ContentDisplay';\nimport { GradingSummary } from '../../../features/dashboard/DashboardTypes';\n\ntype DashboardProps = DispatchProps & StateProps;\n\nexport type DispatchProps = {\n  handleFetchGradingSummary: () => void;\n};\n\nexport type StateProps = {\n  gradingSummary: GradingSummary;\n};\n\nconst defaultColumnDefs: ColDef = {\n  filter: true,\n  resizable: true,\n  sortable: true\n};\n\nconst Dashboard: React.FC<DashboardProps> = props => {\n  let gridApi: GridApi | undefined;\n\n  const onGridReady = (params: GridReadyEvent) => {\n    gridApi = params.api;\n  };\n\n  const resizeGrid = () => {\n    if (gridApi) {\n      gridApi.sizeColumnsToFit();\n    }\n  };\n\n  const columnDefs = props.gradingSummary.cols.map(e => {\n    return {\n      headerName: startCase(e),\n      field: e\n    };\n  });\n\n  const content = (\n    <div className=\"Dashboard\">\n      <div className=\"Grid ag-grid-parent ag-theme-balham\">\n        <AgGridReact\n          domLayout={'autoHeight'}\n          columnDefs={columnDefs}\n          defaultColDef={defaultColumnDefs}\n          onGridReady={onGridReady}\n          onGridSizeChanged={resizeGrid}\n          rowData={props.gradingSummary.rows}\n          rowHeight={30}\n          suppressCellSelection={true}\n          suppressMovableColumns={true}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <ContentDisplay display={content} loadContentDispatch={props.handleFetchGradingSummary} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { OverallState } from '../../../commons/application/ApplicationTypes';\nimport { fetchGroupGradingSummary } from '../../../features/dashboard/DashboardActions';\nimport Dashboard, { DispatchProps, StateProps } from './Dashboard';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  gradingSummary: state.dashboard.gradingSummary\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleFetchGradingSummary: fetchGroupGradingSummary\n    },\n    dispatch\n  );\n\nconst DashboardContainer = connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\nexport default DashboardContainer;\n","import { AssetMap, FontAsset } from './AssetsTypes';\n\nconst FontAssets: AssetMap<FontAsset> = {\n  zektonFont: {\n    key: 'zekton',\n    pngPath: '../../assets/zekton.png',\n    fntPath: '../../assets/zekton.fnt'\n  },\n  zektonDarkFont: {\n    key: 'zektonDark',\n    pngPath: '../../assets/zekton_dark.png',\n    fntPath: '../../assets/zekton.fnt'\n  },\n  alienCowsFont: {\n    key: 'alienAndCows',\n    pngPath: '../../assets/alien_and_cows.png',\n    fntPath: '../../assets/alien_and_cows.fnt'\n  },\n  alienLeagueFont: {\n    key: 'alienLeague',\n    pngPath: '../../assets/alien_league.png',\n    fntPath: '../../assets/alien_league.fnt'\n  },\n  pixelFont: {\n    key: 'pixel',\n    pngPath: '../../assets/pixel.png',\n    fntPath: '../../assets/pixel.fnt'\n  }\n};\n\nexport default FontAssets;\n","import { Links } from 'src/commons/utils/Constants';\n\nimport FontAssets from '../assets/FontAssets';\n\nexport const Constants = {\n  assetsFolder: Links.sourceAcademyAssets,\n  fadeDuration: 600,\n  nullFunction: () => {},\n  nullInteractionId: '',\n  nullSequenceNumber: -1,\n  popUpDuration: 1000,\n  defaultAssetPath: '/ui/wristDeviceButton.png',\n  defaultFontStyle: {\n    key: FontAssets.zektonFont.key,\n    size: 30,\n    align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n  },\n  defaultCursor: ''\n};\n\nexport const screenSize = {\n  x: 1920,\n  y: 1080\n};\n\nexport const screenCenter = {\n  x: screenSize.x / 2,\n  y: screenSize.y / 2\n};\n","import * as _ from 'lodash';\n\nimport { screenSize } from '../commons/CommonConstants';\n\nexport const Color = {\n  navy: '#03092c',\n  lightBlue: '#ece1fb',\n  offWhite: '#bbc1c9',\n  white: '#ffffff',\n  darkGrey: '#333333',\n  lightGrey: '#555555',\n  blue: '#1133ff',\n  darkBlue: '#0d2440',\n  orange: '#ff9933',\n  yellow: '#ffee33',\n  red: '0#ff0000',\n  maroon: '#142B2E',\n  black: '#000000',\n  purple: '#dd33dd',\n  paleYellow: '#f6ffbd'\n};\n\nconst hex = (str: string) => parseInt(str.slice(1), 16);\nexport const HexColor = _.mapValues(Color, hex);\n\ntype TableFormatPosConfig = {\n  direction?: Direction;\n  numOfItems: number;\n  maxXSpace?: number;\n  maxYSpace?: number;\n  numItemLimit?: number;\n  redistributeLast?: boolean;\n};\n\nexport enum Direction {\n  Row = 'Row',\n  Column = 'Column'\n}\n\n/**\n * Calculate x,y positions using a table format: mimic table-like\n * positions, with rows and columns.\n *\n * The positions will be ordered from LEFT to RIGHT before\n * moving to the next row i.e. row-wise.\n *\n * @param numOfItems total number of items\n * @param maxXSpace maximum X space to be used, optional\n * @param maxYSpace maximum Y space to be used, optional\n * @param numItemLimit maximum number of item at a given row, optional\n * @param redistributeLast if true, items at the last row will have their location\n *                         calculated based on the number of items at the last row, optional\n * @returns {Array<[number, number]>} array of positions, in the format of\n *                                 [[xPos0, yPos0], [xPos1, yPos1]...]\n */\nexport function calcTableFormatPos({\n  direction = Direction.Row,\n  numOfItems,\n  maxXSpace = screenSize.x,\n  maxYSpace = screenSize.y,\n  numItemLimit = 0,\n  redistributeLast = true\n}: TableFormatPosConfig): Array<[number, number]> {\n  let itemsPerList = numItemLimit || numOfItems;\n  const numOfLists = Math.ceil(numOfItems / itemsPerList);\n\n  return _.times(numOfItems, itemNumber => {\n    const itemIndexInList = itemNumber % itemsPerList;\n    const listIndex = Math.floor(itemNumber / itemsPerList);\n\n    if (redistributeLast && listIndex === numOfLists - 1) {\n      itemsPerList = numOfItems % numOfLists || itemsPerList;\n    }\n\n    return direction === Direction.Row\n      ? [\n          indexToCoordinate(screenSize.x, maxXSpace, itemIndexInList, itemsPerList),\n          indexToCoordinate(screenSize.y, maxYSpace, listIndex, numOfLists)\n        ]\n      : [\n          indexToCoordinate(screenSize.x, maxXSpace, listIndex, numOfLists),\n          indexToCoordinate(screenSize.y, maxYSpace, itemIndexInList, itemsPerList)\n        ];\n  });\n}\n\nfunction indexToCoordinate(\n  screenSpace: number,\n  listSpace: number,\n  index: number,\n  maxItems: number\n) {\n  const partitionSpace = listSpace / maxItems;\n  return (screenSpace - listSpace + partitionSpace) / 2 + partitionSpace * index;\n}\n\ntype ListFormatPos = {\n  numOfItems: number;\n  xSpacing: number;\n  ySpacing: number;\n};\n\n/**\n * Calculate x,y positions using a list format: mimic list-like\n * positions, ordered sequentially.\n *\n * Each item will be offset by xSpaing and ySpacing.\n *\n * The first item will start at [0, 0] (top left) position.\n *\n * @param numOfItems total number of items\n * @param xSpacing horizontal spacing between items\n * @param ySpacing vertical spacing between items\n * @returns {Array<[number, number]>} array of positions, in the format of\n *                                 [[xPos0, yPos0], [xPos1, yPos1]...]\n */\nexport function calcListFormatPos({ numOfItems, xSpacing = 30, ySpacing = 30 }: ListFormatPos) {\n  const pos = new Array<[number, number]>();\n\n  for (let i = 0; i < numOfItems; i++) {\n    pos.push([i * xSpacing, i * ySpacing]);\n  }\n\n  return pos;\n}\n","import { Color, HexColor } from '../utils/StyleUtils';\n\nconst textPad = 10;\nconst defaultTextHoverWidth = 300;\nconst cursorOffSet = 20;\n\nconst textHoverStyle = {\n  fontFamily: 'Verdana',\n  fontSize: '15px',\n  fill: Color.lightBlue,\n  align: 'left',\n  wordWrap: { width: defaultTextHoverWidth - textPad }\n};\n\n/**\n * A container that can be used as simple text hover.\n * Its visibility is set to false by default.\n * The container only consists of a simple rectangle with text on top.\n *\n * The container still needs to be attached to an object.\n * i.e. on GAMEOBJECT_POINTER_OVER => hoverContainer.setVisibility(true)\n *      on GAMEOBJECT_POINTER_OUT => hoverContainer.setVisibility(false)\n *      on GAMEOBJECT_POINTER_MOVE => hoverContainer.x = pointer.x;\n *                                    hoverContainer.y = pointer.y;\n */\nclass CommonTextHover extends Phaser.GameObjects.Container {\n  /**\n   * @param scene scene for the container to attach to\n   * @param x x position of the container\n   * @param y y position of the container\n   * @param text message to be displayed\n   * @param maxWidth the maximum width of the text before the text wraps\n   */\n  constructor(\n    scene: Phaser.Scene,\n    x: number,\n    y: number,\n    text: string,\n    maxWidth: number = defaultTextHoverWidth\n  ) {\n    super(scene, x, y);\n    this.renderTextHover(text, maxWidth);\n  }\n\n  private renderTextHover(text: string, maxWidth: number) {\n    const fontSize = parseInt(\n      textHoverStyle.fontSize.substring(0, textHoverStyle.fontSize.length - 2)\n    );\n    const width = text.length * fontSize * 0.75;\n    const hoverWidth = Math.min(width, maxWidth);\n    const hoverText = new Phaser.GameObjects.Text(\n      this.scene,\n      cursorOffSet + textPad,\n      textPad,\n      text,\n      {\n        ...textHoverStyle,\n        wordWrap: { width: hoverWidth - textPad }\n      }\n    );\n    const hoverTextBg = new Phaser.GameObjects.Rectangle(\n      this.scene,\n      cursorOffSet,\n      0,\n      hoverWidth,\n      hoverText.getBounds().bottom + textPad,\n      HexColor.darkBlue\n    )\n      .setOrigin(0.0, 0.0)\n      .setAlpha(0.8);\n\n    this.add([hoverTextBg, hoverText]);\n    this.setDepth(1); // Render hover text over other objects\n    this.setVisible(false);\n  }\n}\n\nexport default CommonTextHover;\n","import { BitmapFontStyle, TextConfig } from '../commons/CommonTypes';\n\n/**\n * Create bitmap text with the given style.\n *\n * @param scene scene to be attached to\n * @param text message to be shon\n * @param x x coordinate in worldspace\n * @param y y coordinate in worldspace\n * @param style style to be applied to the bitmap text\n * @returns {Phaser.GameObjects.BitmapText}\n */\nexport const createBitmapText = (\n  scene: Phaser.Scene,\n  text: string,\n  { x, y, oriX, oriY }: TextConfig,\n  style: BitmapFontStyle\n) => {\n  return new Phaser.GameObjects.BitmapText(\n    scene,\n    x,\n    y,\n    style.key,\n    text,\n    style.size,\n    style.align\n  ).setOrigin(oriX, oriY);\n};\n","import FontAssets from '../assets/FontAssets';\nimport { Constants, screenSize } from '../commons/CommonConstants';\nimport { BitmapFontStyle } from '../commons/CommonTypes';\nimport { Color } from '../utils/StyleUtils';\nimport { AwardProperty } from './GameAwardsTypes';\n\nexport const listBannerTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 25,\n  align: Phaser.GameObjects.BitmapText.ALIGN_LEFT\n};\n\nexport const awardTitleStyle: BitmapFontStyle = {\n  key: FontAssets.alienLeagueFont.key,\n  size: 50,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const awardKeyStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 18,\n  align: Phaser.GameObjects.BitmapText.ALIGN_LEFT\n};\n\nexport const awardDescStyle = {\n  fontFamily: 'Verdana',\n  fontSize: '18px',\n  fill: Color.lightBlue,\n  align: 'center',\n  lineSpacing: 10,\n  wordWrap: { width: 500 }\n};\n\nexport const defaultAwardProp: AwardProperty = {\n  id: 'default-award',\n  assetKey: Constants.nullInteractionId,\n  assetPath: Constants.nullInteractionId,\n  title: Constants.nullInteractionId,\n  description: 'There is no asset associated with this award.',\n  completed: false\n};\n\nexport const awardExplanation =\n  \"Asset key can be used to include the asset into your room by using 'create_award' function.\";\n\nconst previewXPos = -screenSize.x * 0.3;\nconst previewYPos = -screenSize.y * 0.05;\nconst previewKeyYPos = previewYPos + 275;\nconst previewDim = 430;\n\nconst AwardsConstants = {\n  arrow: { x: screenSize.x * 0.08, y: screenSize.y * 0.34, xOffset: 80, xScale: 0.4, yScale: 0.3 },\n  itemsPerPage: 7,\n  list: { yStart: -screenSize.y * 0.31, ySpace: 100 },\n  listTextConfig: { x: -screenSize.x * 0.09, y: 0, oriX: 0.0, oriY: 0.55 },\n  noPreviewTextConfig: { x: previewXPos, y: -40, oriX: 0.5, oriY: 0.5 },\n  preview: {\n    descText: { yOffset: 320 },\n    rect: { dim: previewDim, x: previewXPos, y: previewYPos, xOffset: 30, yOffset: 15 },\n    key: { x: previewXPos, y: previewKeyYPos, width: previewDim, height: 35 },\n    keyTagTextConfig: { x: previewXPos - 205, y: previewKeyYPos, oriX: 0.0, oriY: 0.5 },\n    keyTextConfig: { x: previewXPos - 90, y: previewKeyYPos, oriX: 0.0, oriY: 0.5 },\n    explanation: { x: previewXPos - 150, y: previewYPos + 200 },\n    titleTextConfig: { x: previewXPos + 20, y: previewYPos - 275, oriX: 0.5, oriY: 0.5 }\n  }\n};\n\nexport default AwardsConstants;\n","import CommonTextHover from '../commons/CommonTextHover';\nimport { ItemId } from '../commons/CommonTypes';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { HexColor } from '../utils/StyleUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport AwardsConstants, {\n  awardExplanation,\n  awardKeyStyle,\n  defaultAwardProp\n} from './GameAwardsConstants';\nimport { AwardProperty } from './GameAwardsTypes';\n\n/**\n * Get corresponding award properties of the given award keys.\n * Keys that do not have any associated award mapping will be automatically\n * associated with a default award property.\n *\n * @param awardKeys award keys\n */\nexport const getAwardProps = (awardKeys: ItemId[]): AwardProperty[] => {\n  return awardKeys.map(key => getAwardProp(key));\n};\n\n/**\n * Get corresponding award property of the given award key.\n * If no property is tied to the given award key, most likely\n * it is because there is no asset is associated with it within the game.\n *\n * In the case there is no property is associated with the key,\n * we return the default award property instead.\n *\n * @param awardKey award key\n */\nexport const getAwardProp = (awardKey: ItemId): AwardProperty => {\n  const awardProp = SourceAcademyGame.getInstance().getAwardsMapping().get(awardKey);\n  return awardProp ? awardProp : { ...defaultAwardProp, title: awardKey };\n};\n\n/**\n * Create a UI bar, labeled as 'asset key' on the side. To be used\n * within Awards Menu UI container. On hover on the label,\n * will pop up a hover text explanation on the use of the asset key.\n *\n * @param scene scene to attach to\n */\nexport function createAssetKeyPreviewCont(scene: Phaser.Scene) {\n  const assetKeyCont = new Phaser.GameObjects.Container(\n    scene,\n    AwardsConstants.preview.rect.xOffset,\n    AwardsConstants.preview.rect.yOffset\n  );\n  const rectDim = AwardsConstants.preview.key;\n\n  // Create asset key bar and text\n  const assetKeyBg = new Phaser.GameObjects.Rectangle(\n    scene,\n    rectDim.x,\n    rectDim.y,\n    rectDim.width,\n    rectDim.height,\n    HexColor.lightBlue,\n    0.1\n  );\n  const assetKeyTagBg = new Phaser.GameObjects.Rectangle(\n    scene,\n    rectDim.x - rectDim.width * assetKeyBg.originX * 0.75,\n    rectDim.y,\n    rectDim.width / 4,\n    rectDim.height,\n    HexColor.lightBlue,\n    0.2\n  );\n  const assetKeyTag = createBitmapText(\n    scene,\n    'asset key',\n    AwardsConstants.preview.keyTagTextConfig,\n    awardKeyStyle\n  );\n\n  // Create explanation pop-up\n  const hoverCont = new CommonTextHover(\n    scene,\n    AwardsConstants.preview.explanation.x,\n    AwardsConstants.preview.explanation.y,\n    awardExplanation\n  );\n\n  // Attach\n  assetKeyTagBg.setInteractive();\n  assetKeyTagBg.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_OVER, () =>\n    hoverCont.setVisible(true)\n  );\n  assetKeyTagBg.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_OUT, () =>\n    hoverCont.setVisible(false)\n  );\n\n  assetKeyCont.add([assetKeyBg, assetKeyTagBg, assetKeyTag, hoverCont]);\n  return assetKeyCont;\n}\n","import { AssetKey, AssetPath } from '../commons/CommonTypes';\nimport { GameSoundType } from '../sound/GameSoundTypes';\n\nexport type AssetMap<T> = {\n  [name: string]: T;\n};\n\nexport type ImageAsset = {\n  type: AssetType;\n  key: AssetKey;\n  path: AssetPath;\n  config?: ImageConfig;\n};\n\nexport type ImageConfig = {\n  frameWidth: number;\n  frameHeight: number;\n  centreX: number;\n  centreY: number;\n  endFrame?: number;\n  start?: number;\n  frameRate?: number;\n  animType?: AnimType;\n};\n\nexport enum AssetType {\n  Image = 'Image',\n  Sprite = 'Sprite'\n}\n\nexport enum AnimType {\n  Background = 'Background',\n  Object = 'Object'\n}\n\nexport type SoundAsset = {\n  key: string;\n  path: string;\n  config: Phaser.Types.Sound.SoundConfig;\n  soundType: GameSoundType;\n};\n\nexport type FontAsset = {\n  key: string;\n  pngPath: string;\n  fntPath: string;\n};\n\nexport type TextAsset = {\n  key: string;\n  path: string;\n};\n","import { AssetMap, AssetType, ImageAsset } from './AssetsTypes';\n\nconst ImageAssets: AssetMap<ImageAsset> = {\n  // Commons Asset\n  spaceshipBg: {\n    type: AssetType.Image,\n    key: 'spaceship-bg',\n    path: '/locations/spaceshipBackground.png'\n  },\n  saBanner: { type: AssetType.Image, key: 'sa-banner', path: '/ui/sourceAcadBannerOneLine.png' },\n  shortButton: { type: AssetType.Image, key: 'short-button', path: '/ui/shortButton.png' },\n  mediumButton: { type: AssetType.Image, key: 'med-button', path: '/ui/mediumButton.png' },\n  longButton: { type: AssetType.Image, key: 'long-button', path: '/ui/longButton.png' },\n  topButton: { type: AssetType.Image, key: 'top-button', path: '/ui/topButton.png' },\n  speechBox: { type: AssetType.Image, key: 'speechBox', path: '/ui/speechbox.png' },\n  speakerBox: { type: AssetType.Image, key: 'speakerBox', path: '/ui/speakerBox.png' },\n  defaultLocationImg: {\n    type: AssetType.Image,\n    key: 'loc-default',\n    path: '/ui/defaultLocation.jpg'\n  },\n  locationPreviewFrame: {\n    type: AssetType.Image,\n    key: 'loc-preview-frame',\n    path: '/ui/locationPreviewFrame.png'\n  },\n  locationPreviewFill: {\n    type: AssetType.Image,\n    key: 'loc-preview-fill',\n    path: '/ui/locationPreviewFill.png'\n  },\n  talkOptButton: { type: AssetType.Image, key: 'talk-opt-button', path: '/ui/talkOptButton.png' },\n  talkOptCheck: { type: AssetType.Image, key: 'talk-opt-check', path: '/ui/talkOptCheck.png' },\n  modeMenuBanner: { type: AssetType.Image, key: 'mode-banner', path: '/ui/modeMenuBanner.png' },\n  popUpFrame: { type: AssetType.Image, key: 'pop-up-frame', path: '/ui/popUpFrame.png' },\n  mediumBox: { type: AssetType.Image, key: 'medium-box', path: '/ui/mediumBox.png' },\n  diamond: { type: AssetType.Image, key: 'diamond', path: '/ui/zircon.png' },\n  arrow: { type: AssetType.Image, key: 'arrow', path: '/ui/arrow.png' },\n  cookies: { type: AssetType.Image, key: 'cookies', path: '/images/cookies.png' },\n  scrollFrame: { type: AssetType.Image, key: 'scroll-frame', path: '/ui/scrollFrame.png' },\n  messageBar: { type: AssetType.Image, key: 'message-bar', path: '/ui/messageBg.png' },\n\n  // Escape Menu\n  escapeMenuBackground: { type: AssetType.Image, key: 'escape-bg', path: '/ui/escapeMenu.png' },\n\n  // Awards Menu\n  awardsMenu: { type: AssetType.Image, key: 'award-bg', path: '/ui/collectiblesBg.png' },\n  awardsBanner: { type: AssetType.Image, key: 'award-banner', path: '/ui/awardsBanner.png' },\n  awardsPageChosen: {\n    type: AssetType.Image,\n    key: 'award-pg-chosen',\n    path: '/ui/collectiblesPageOptChosen.png'\n  },\n  awardsPage: { type: AssetType.Image, key: 'award-pg-opt', path: '/ui/collectiblesPageOpt.png' },\n\n  // Awards Hall\n  awardsBackground: { type: AssetType.Image, key: 'award-hall-bg', path: '/ui/awardsHall.png' },\n\n  // Toolbar\n  gear: { type: AssetType.Image, key: 'gear', path: '/ui/settings.png' },\n  journal: { type: AssetType.Image, key: 'journal', path: '/ui/journal.png' },\n\n  // Chapter Select\n  chapterRepeatButton: {\n    type: AssetType.Image,\n    key: 'chapter-repeat',\n    path: '/ui/chapterRepeat.png'\n  },\n  chapterContinueButton: {\n    type: AssetType.Image,\n    key: 'chapter-continue',\n    path: '/ui/chapterContinue.png'\n  },\n  StarGold: {\n    type: AssetType.Image,\n    key: 'StarGold',\n    path: '/ui/StarGold.png'\n  },\n  StarSilver: {\n    type: AssetType.Image,\n    key: 'StarSilver',\n    path: '/ui/StarSilver.png'\n  },\n  StarBronze: {\n    type: AssetType.Image,\n    key: 'StarBronze',\n    path: '/ui/StarBronze.png'\n  },\n  chapterSelectFrame: {\n    type: AssetType.Image,\n    key: 'chapter-select-frame',\n    path: '/ui/chapterSelectionFrame.png'\n  },\n  chapterSelectBorder: {\n    type: AssetType.Image,\n    key: 'chapter-select-border',\n    path: '/ui/chapterSelectionBorder.png'\n  },\n  chapterSelectArrow: {\n    type: AssetType.Image,\n    key: 'chapter-select-arrow',\n    path: '/ui/chapSelectArrow.png'\n  },\n\n  // Main Menu\n  mainMenuOptBanner: { type: AssetType.Image, key: 'menu-option', path: '/ui/menuOption.png' },\n\n  // Settings\n  settingBanner: { type: AssetType.Image, key: 'settings-bg', path: '/ui/settingsBg.png' },\n  settingOption: { type: AssetType.Image, key: 'settings-opt', path: '/ui/settingsOption.png' },\n\n  // Room Preview\n  verifiedFrame: { type: AssetType.Image, key: 'verified-frame', path: '/ui/verifiedFrame.png' },\n  sourceCrashedPod: {\n    type: AssetType.Image,\n    key: 'source-crashed-pod',\n    path: '/locations/sourceCrashedPod.png'\n  },\n\n  // Bindings\n  squareKeyboardIcon: {\n    type: AssetType.Image,\n    key: 'keyboard-key-square',\n    path: '/ui/keyboardKeyIcon.png'\n  },\n  medKeyboardIcon: { type: AssetType.Image, key: 'keyboard-key-medium', path: '/ui/TabIcon.png' }\n};\n\nexport default ImageAssets;\n","export const bgMusicFadeDuration = 1000;\n\nexport const musicFadeOutTween = {\n  volume: 0,\n  ease: 'Power2'\n};\n\nexport enum GameSoundType {\n  SFX,\n  BGM\n}\n","import { GameSoundType } from '../sound/GameSoundTypes';\nimport { AssetMap, SoundAsset } from './AssetsTypes';\n\nconst SoundAssets: AssetMap<SoundAsset> = {\n  // SFX\n  buttonHover: {\n    key: 'btn-hover',\n    path: '/sfx/buttonHover.mp3',\n    config: { volume: 0.1 },\n    soundType: GameSoundType.SFX\n  },\n  buttonClick: {\n    key: 'btn-click',\n    path: '/sfx/buttonClick.mp3',\n    config: { volume: 0.1 },\n    soundType: GameSoundType.SFX\n  },\n  radioButtonClick: {\n    key: 'radio-btn-click',\n    path: '/sfx/radioButtonClick.mp3',\n    config: { volume: 0.15 },\n    soundType: GameSoundType.SFX\n  },\n  dialogueAdvance: {\n    key: 'dialogue-advance',\n    path: '/sfx/dialogueAdvance.mp3',\n    config: { volume: 0.3 },\n    soundType: GameSoundType.SFX\n  },\n  popUpEnter: {\n    key: 'pop-up-enter',\n    path: '/sfx/popUpEnter.mp3',\n    config: { volume: 0.35 },\n    soundType: GameSoundType.SFX\n  },\n  popUpExit: {\n    key: 'pop-up-exit',\n    path: '/sfx/popUpExit.mp3',\n    config: { volume: 0.35 },\n    soundType: GameSoundType.SFX\n  },\n  menuEnter: {\n    key: 'menu-enter',\n    path: '/sfx/menuEnter.mp3',\n    config: { volume: 0.5 },\n    soundType: GameSoundType.SFX\n  },\n  menuExit: {\n    key: 'menu-exit',\n    path: '/sfx/menuExit.mp3',\n    config: { volume: 0.5 },\n    soundType: GameSoundType.SFX\n  },\n  modeEnter: {\n    key: 'mode-enter',\n    path: '/sfx/modeEnter.mp3',\n    config: { volume: 0.1 },\n    soundType: GameSoundType.SFX\n  },\n  notifEnter: {\n    key: 'notif-enter',\n    path: '/sfx/notifEnter.mp3',\n    config: { volume: 0.25 },\n    soundType: GameSoundType.SFX\n  },\n  notifExit: {\n    key: 'notif-exit',\n    path: '/sfx/notifExit.mp3',\n    config: { volume: 0.25 },\n    soundType: GameSoundType.SFX\n  },\n  radioStatic: {\n    key: 'radio-static',\n    path: '/sfx/radioStatic.mp3',\n    config: { volume: 0.1 },\n    soundType: GameSoundType.SFX\n  },\n\n  // BGM\n  galacticHarmony: {\n    key: 'galactic-harmony',\n    path: '/bgm/GalacticHarmony.mp3',\n    config: { volume: 0.25, loop: true },\n    soundType: GameSoundType.BGM\n  }\n};\n\nexport default SoundAssets;\n","export enum Layer {\n  Effects,\n  Background,\n  Character,\n  Speaker,\n  PopUp,\n  Dialogue,\n  SpeakerBox,\n  UI,\n  Objects,\n  BBox,\n  Escape,\n  Selector,\n  Dashboard,\n  WorkerMessage\n}\n\n// Back to Front\nexport const defaultLayerSequence = [\n  Layer.Background,\n  Layer.Selector,\n  Layer.Objects,\n  Layer.BBox,\n  Layer.Character,\n  Layer.Speaker,\n  Layer.PopUp,\n  Layer.Dialogue,\n  Layer.SpeakerBox,\n  Layer.Effects,\n  Layer.Dashboard,\n  Layer.Escape,\n  Layer.UI,\n  Layer.WorkerMessage\n];\n","import { store } from 'src/pages/createStore';\n\nimport { Constants } from '../commons/CommonConstants';\n\n/**\n * When called with await in an async function,\n * e.g. \"await sleep(5000)\", this line delays\n * the next line by that number of milliseconds.\n *\n * @param ms number of milliseconds to delay next line.\n * @returns {Promise} promise which resolves in ms milliseconds.\n */\nexport function sleep(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Creates a Map with the same keys, but the values\n * are mapped using a specified function\n *\n * Example:\n * mapValues(Map([[\"a\", 1], [\"b\", 2], [\"c\", 3]]), (value, key) => 2 * value + key)\n * returns Map([[\"a\", \"2a\"], [\"b\", \"4b\"], [\"c\", \"6c\"]])\n *\n * @param map the Map that you'd like to iterate over\n * @param fn the binary function that produces the new\n *           value of the map using (value, key) as input\n * @returns {Map<K, R>} new Map with mapped values\n */\nexport function mapValues<K, V, R>(map: Map<K, V>, fn: (value: V, key?: K) => R): Map<K, R> {\n  const newMap = new Map<K, R>();\n  map.forEach((value: V, key: K) => {\n    const result: R = fn(value, key);\n    newMap.set(key, result);\n  });\n  return newMap;\n}\n\n/**\n * Caps a number to min and max boundary inclusive.\n *\n * @param value the number's value\n * @param min the minimum value of the number\n * @param max the maximum value of the number\n *\n * @returns {number} number which is capped based on boundaries\n */\nexport function limitNumber(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Appends the s3 file path to a short path name\n *\n * @param filename the short path of a filename\n * @param courseCoded true iff file is course-specific\n * @returns {string} new path to file including full s3 link\n */\nexport function toS3Path(fileName: string, courseCoded = false) {\n  if (fileName.startsWith('/')) {\n    fileName = fileName.substr(1);\n  }\n  return Constants.assetsFolder + (courseCoded ? assetsPrefix() + fileName : fileName);\n}\n\n/**\n * Throws an error when the property is not found.\n *\n * @param object the property that you would like to get\n * @returns {object} the object if it is found.\n * @throws {Error} if object is undefined\n */\nexport function mandatory<T>(object: T, errorMsg?: string) {\n  if (object === undefined) {\n    throw new Error(errorMsg || 'Object not found');\n  }\n  return (object as T)!;\n}\n\n/**\n * Returns the last element in the array\n *\n * @param array array you want to access\n * @returns the final element of the array\n */\nexport function lastElement<T>(array: T[]): T {\n  if (array.length === 0) {\n    throw new Error('Array is empty');\n  }\n  return array[array.length - 1];\n}\n\nexport const courseId = () => store.getState().session.courseId;\nexport const assetsPrefix = () => store.getState().session.assetsPrefix || '';\n","import { Constants, screenCenter, screenSize } from '../commons/CommonConstants';\nimport { IBaseScene } from '../commons/CommonTypes';\nimport { Layer } from '../layer/GameLayerTypes';\nimport { sleep } from '../utils/GameUtils';\nimport { HexColor } from '../utils/StyleUtils';\n\n/**\n * Generates a tween configuration for making objects fade out of scene.\n *\n * @param targets - an array of game objects that you want to fade out\n * @param duration - the duration of the fade animation\n * @returns {Phaser.Types.Tweens.TweenDataConfig} - the tween config for the fadeout animation\n */\nexport const fadeOut = (\n  targets: Phaser.GameObjects.GameObject[],\n  duration = Constants.fadeDuration\n) => ({\n  alpha: 0,\n  targets,\n  duration,\n  ease: 'Power2'\n});\n\n/**\n * Generates a tween configuration for making objects fade into scene.\n * Make sure the alpha of object is set to zero first.\n *\n * @param targets - an array of game objects that you want to fade in\n * @param duration - the duration of the fade animation\n * @returns {Phaser.Types.Tweens.TweenDataConfig} - the tween config for the fadein animation\n */\nexport const fadeIn = (\n  targets: Phaser.GameObjects.GameObject[],\n  duration = Constants.fadeDuration\n) => ({\n  alpha: 1,\n  targets,\n  duration,\n  ease: 'Power2'\n});\n\n/**\n * @typedef {FadeProps} - props to specify additional properties/configuration for a fade animation\n * @prop fadeDuration - how long to fade in and out\n */\ntype FadeProps = {\n  fadeDuration?: number;\n};\n\n/**\n * Function that makes a game object fade out, and after the animation,\n * removes the game object from the scene.\n *\n * @param scene - scene where this should happen\n * @param object - the game object that should fade out and be destroyed\n * @param fadeProps - additional properties/configuration describing the fade animation\n */\nexport function fadeAndDestroy(\n  scene: Phaser.Scene,\n  object: Phaser.GameObjects.GameObject | null,\n  { fadeDuration }: FadeProps = {}\n) {\n  if (!object) return;\n  scene.add.tween(fadeOut([object], fadeDuration || Constants.fadeDuration));\n  setTimeout(() => object.destroy(), fadeDuration || Constants.fadeDuration);\n}\n\n/**\n * A black screen that can be used in fade effects\n *\n * @param scene - the scene to add this screen to\n */\nexport function blackScreen(scene: Phaser.Scene) {\n  return new Phaser.GameObjects.Rectangle(\n    scene,\n    screenCenter.x,\n    screenCenter.y,\n    screenSize.x,\n    screenSize.y,\n    0\n  );\n}\n\n/**\n * A white screen that can be used in fade effects\n *\n * @param scene - the scene to add this screen to\n */\nexport function whiteScreen(scene: Phaser.Scene) {\n  return new Phaser.GameObjects.Rectangle(\n    scene,\n    screenCenter.x,\n    screenCenter.y,\n    screenSize.x,\n    screenSize.y,\n    HexColor.white\n  );\n}\n\n/**\n * Transitions two scenes using a black screen\n *\n * @param scene - the scene to add this screen to\n * @param fadeDuration - how long is the fading in and out of the scenes\n * @param delay - how long does the black screen remains on screen\n * @param callback - the function that is called during the transition\n */\nexport const blackFade = async (\n  scene: IBaseScene,\n  fadeDuration: number,\n  delay: number,\n  callback: any\n) => {\n  const fadeBlack = blackScreen(scene);\n  scene.getLayerManager().addToLayer(Layer.Effects, fadeBlack);\n\n  fadeBlack.setAlpha(0);\n  scene.tweens.add(fadeIn([fadeBlack], fadeDuration));\n  await sleep(fadeDuration);\n\n  await callback();\n  await sleep(delay);\n\n  fadeBlack.setAlpha(1);\n  scene.tweens.add(fadeOut([fadeBlack], fadeDuration));\n  await sleep(fadeDuration);\n\n  fadeBlack.destroy();\n};\n\n/**\n * Makes a game object object blink through fade ins and fade outs\n *\n * @param scene - the scene where you want to add this object to\n * @param gameObject - the gameObject which you want to add blinking effect on\n * @returns {() => void} - clearBlink is a function. When called, it stops the blinking.\n */\nexport function blink(\n  scene: Phaser.Scene,\n  gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Container\n) {\n  let i = 0;\n  const blink = setInterval(() => {\n    if (i % 2 !== 0) {\n      gameObject.setAlpha(0);\n      scene.tweens.add(fadeIn([gameObject], 250));\n    } else {\n      gameObject.setAlpha(1);\n      scene.tweens.add(fadeOut([gameObject], 250));\n    }\n    i++;\n  }, 500);\n  function clearBlink() {\n    i = 0;\n    clearInterval(blink);\n  }\n  return clearBlink;\n}\n","import { screenSize } from '../commons/CommonConstants';\n\n/**\n * A tween config that makes the object fly in\n * from the top of screen into the middle of the screen\n */\nexport const entryTweenProps = {\n  y: 0,\n  duration: 300,\n  ease: 'Power2'\n};\n\n/**\n * Makes the object fly out from the middle of the screen\n * to the top of the screen\n */\nexport const exitTweenProps = {\n  y: -screenSize.y,\n  duration: 250,\n  ease: 'Power2'\n};\n\n/**\n * A tween config that makes the object fly in\n * from the left of screen into the middle of the screen\n */\nexport const leftSideEntryTweenProps = {\n  x: 0,\n  duration: 350,\n  ease: 'Power2'\n};\n\n/**\n * Makes the object fly out from the middle of the screen\n * to the left of the screen\n */\nexport const leftSideExitTweenProps = {\n  x: -screenSize.x,\n  duration: 350,\n  ease: 'Power2'\n};\n\n/**\n * A tween config that makes the object fly in\n * from the right of screen into the middle of the screen\n */\nexport const rightSideEntryTweenProps = {\n  x: 0,\n  duration: 500,\n  ease: 'Power2'\n};\n\n/**\n * Makes the object fly out from the middle of the screen\n * to the right of the screen\n */\nexport const rightSideExitTweenProps = {\n  x: screenSize.x,\n  duration: 500,\n  ease: 'Power2'\n};\n","import FontAssets from '../assets/FontAssets';\nimport ImageAssets from '../assets/ImageAssets';\nimport SoundAssets from '../assets/SoundAssets';\nimport { Constants, screenSize } from '../commons/CommonConstants';\nimport { BitmapFontStyle, IBaseScene } from '../commons/CommonTypes';\nimport { Layer } from '../layer/GameLayerTypes';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { sleep } from '../utils/GameUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport { fadeAndDestroy } from './FadeEffect';\nimport { rightSideEntryTweenProps, rightSideExitTweenProps } from './FlyEffect';\n\nconst messageDuration = 3000;\nconst messageTextConfig = { x: 1900, y: 100, oriX: 1.0, oriY: 0.5 };\nconst messageStyle: BitmapFontStyle = {\n  key: FontAssets.zektonDarkFont.key,\n  size: 24,\n  align: Phaser.GameObjects.BitmapText.ALIGN_RIGHT\n};\n\n/**\n * Generates a closure containing a promise chain of message displaying calls\n * and a function to enqueue more messages to show.\n *\n * @returns a function to display a message\n */\nconst makeMiniMessageDisplayer = () => {\n  let displayMessagesPromise = Promise.resolve();\n  const displayMiniMessage = (scene: IBaseScene, text: string) => {\n    displayMessagesPromise = displayMessagesPromise.then(() =>\n      displayMiniMessageHelper(scene, text)\n    );\n  };\n  return displayMiniMessage;\n};\n\n/**\n * A function to display a message on the top right side of the screen.\n * The message will be tweened to enter from the right side of the screen,\n * displayed for a duration, before tweened out. The message will not be\n * shown immediately if there is another message currently being displayed\n * and/or other messages are waiting to be displayed\n *\n * @param scene scene to attach this message to\n * @param text text to be written\n */\nexport const displayMiniMessage = makeMiniMessageDisplayer();\n\n/**\n * A function to display a message on the top right side of the screen.\n * The message will be tweened to enter from the right side of the screen,\n * displayed for a duration, before tweened out.\n *\n * @param scene scene to attach this message to\n * @param text text to be written\n */\nasync function displayMiniMessageHelper(scene: IBaseScene, text: string) {\n  const container = new Phaser.GameObjects.Container(scene, 0, 0);\n  const messageBg = new Phaser.GameObjects.Sprite(\n    scene,\n    screenSize.x,\n    100,\n    ImageAssets.messageBar.key\n  );\n  messageBg.setScale(-1.5, 0.8);\n  const messageText = createBitmapText(scene, text, messageTextConfig, messageStyle);\n\n  container.add([messageBg, messageText]);\n  scene.getLayerManager().addToLayer(Layer.Effects, container);\n  container.setPosition(screenSize.x, 0);\n  container.setAlpha(0);\n\n  SourceAcademyGame.getInstance().getSoundManager().playSound(SoundAssets.notifEnter.key);\n  scene.add.tween({\n    targets: container,\n    alpha: 1,\n    ...rightSideEntryTweenProps\n  });\n\n  await sleep(rightSideEntryTweenProps.duration + messageDuration);\n\n  SourceAcademyGame.getInstance().getSoundManager().playSound(SoundAssets.notifExit.key);\n  scene.add.tween({\n    targets: container,\n    alpha: 1,\n    ...rightSideExitTweenProps\n  });\n\n  await sleep(rightSideExitTweenProps.duration);\n  fadeAndDestroy(scene, container, { fadeDuration: Constants.fadeDuration });\n}\n","import FontAssets from '../assets/FontAssets';\nimport { screenSize } from '../commons/CommonConstants';\nimport { BitmapFontStyle } from '../commons/CommonTypes';\nimport { Color } from '../utils/StyleUtils';\n\nconst dialogueRectMargin = 10;\n\nconst DialogueConstants = {\n  prompt: { x: 30, y: 60, xPad: 30, yPad: 10 },\n  rect: {\n    x: dialogueRectMargin,\n    y: 760,\n    width: screenSize.x - dialogueRectMargin * 2\n  },\n  text: { xPad: 100, yPad: 70 },\n  speakerTextConfig: { x: 320, y: 745, oriX: 0.5, oriY: 0.5 }\n};\n\nexport const textTypeWriterStyle = {\n  fontFamily: 'Verdana',\n  fontSize: '30px',\n  fill: Color.lightBlue,\n  align: 'left',\n  lineSpacing: 10,\n  wordWrap: {\n    width:\n      DialogueConstants.rect.width - DialogueConstants.text.xPad * 2 - DialogueConstants.rect.x * 2\n  }\n};\n\nexport const speakerTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 36,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport default DialogueConstants;\n","/**\n * @typedef {TypewriterProps} - properties describing a typewriter\n *\n * @prop {number} x - x coordinate of the left edge of the typewriter\n * @prop {number} y - y coordinate of the top edge of the typewriter\n * @prop {Phaser.Types.GameObjects.Text.TextStyle} textStyle\n *       the text config to specify the text propertoes of the typewriter text\n * @prop {number} typeWriterInterval - how long is the interval between\n *                                     each letter's appearance\n */\ntype TypewriterProps = {\n  x?: number;\n  y?: number;\n  textStyle?: Phaser.Types.GameObjects.Text.TextStyle;\n  typeWriterInterval?: number;\n};\n\n/**\n * Text sprite manager to produce typewriter effect\n *\n * @param scene - scene to add the typewriter sprite\n * @param typeWriterProps - properties to describe the appearance and animation of the typewriter\n */\nexport function Typewriter(\n  scene: Phaser.Scene,\n  { x = 0, y = 0, textStyle = {}, typeWriterInterval = 1 }: TypewriterProps\n) {\n  const textSprite = new Phaser.GameObjects.Text(scene, x, y, '', textStyle);\n\n  let line = '';\n  let charPointer = 0;\n  let typeWriting: NodeJS.Timeout;\n\n  const clearTyping = () => {\n    typeWriting && clearInterval(typeWriting);\n  };\n\n  /* Reset line and type out */\n  const changeLine = (message: string) => {\n    if (!message) return;\n    line = message;\n\n    textSprite.text = '';\n    charPointer = 0;\n\n    clearTyping();\n    typeWriting = setInterval(() => {\n      textSprite.text += line[charPointer++];\n      if (charPointer === line.length) {\n        clearInterval(typeWriting);\n      }\n    }, typeWriterInterval);\n  };\n\n  return { container: textSprite, changeLine, clearTyping };\n}\n\nexport default Typewriter;\n","import ImageAssets from '../assets/ImageAssets';\nimport { screenSize } from '../commons/CommonConstants';\nimport { blink, fadeAndDestroy } from '../effects/FadeEffect';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport dialogueConstants from './GameDialogueConstants';\nimport { createDialogueBox, createTypewriter } from './GameDialogueHelper';\n\n/**\n * Class that manages the appearance of the dialogue box, which includes\n * the box itself, the text animations as well as the blinking diamond click prompt\n */\nclass DialogueRenderer {\n  private typewriter: any;\n  private dialogueBox: Phaser.GameObjects.Image;\n  private blinkingDiamond: any;\n\n  /**\n   * @param typewriterStyle the style of the typewriter you want to use\n   */\n  constructor(typewriterStyle: Phaser.Types.GameObjects.Text.TextStyle) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    this.dialogueBox = createDialogueBox(gameManager).setInteractive({\n      useHandCursor: true,\n      pixelPerfect: true\n    });\n    this.typewriter = createTypewriter(gameManager, typewriterStyle);\n    this.blinkingDiamond = this.drawDiamond(gameManager);\n  }\n\n  /**\n   * @returns {Phaser.GameObjects.Container} returns the entire dialogueBox container\n   * which can be added to the scene\n   */\n  public getDialogueContainer() {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const container = new Phaser.GameObjects.Container(gameManager, 0, 0);\n    container.add([this.dialogueBox, this.blinkingDiamond.container, this.typewriter.container]);\n    return container;\n  }\n\n  private drawDiamond(scene: Phaser.Scene) {\n    const diamondSprite = new Phaser.GameObjects.Image(\n      scene,\n      screenSize.x - dialogueConstants.prompt.x - dialogueConstants.prompt.xPad,\n      screenSize.y - dialogueConstants.prompt.y - dialogueConstants.prompt.yPad,\n      ImageAssets.diamond.key\n    ).setDisplaySize(dialogueConstants.prompt.x, dialogueConstants.prompt.y);\n\n    return { container: diamondSprite, clearBlink: blink(scene, diamondSprite) };\n  }\n\n  /**\n   * Obtains the green dialogue box\n   */\n  public getDialogueBox() {\n    return this.dialogueBox;\n  }\n\n  /**\n   * Destroyer for the dialogue box elements and interactivity\n   */\n  public destroy() {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    this.typewriter.clearTyping();\n    this.blinkingDiamond.clearBlink();\n    this.getDialogueBox().off(Phaser.Input.Events.GAMEOBJECT_POINTER_UP);\n    fadeAndDestroy(gameManager, this.getDialogueContainer());\n  }\n\n  /**\n   * Change the text written in the box\n   */\n  public changeText(message: string) {\n    this.typewriter.changeLine(message);\n  }\n}\n\nexport default DialogueRenderer;\n","import ImageAssets from '../assets/ImageAssets';\nimport { screenCenter } from '../commons/CommonConstants';\nimport Typewriter from '../effects/Typewriter';\nimport dialogueConstants from './GameDialogueConstants';\n\n/**\n * Helper function to render the green box shown in every dialogue/ notification popup\n */\nexport function createDialogueBox(scene: Phaser.Scene) {\n  const dialogueBox = new Phaser.GameObjects.Image(\n    scene,\n    screenCenter.x,\n    screenCenter.y,\n    ImageAssets.speechBox.key\n  ).setAlpha(0.9);\n  return dialogueBox;\n}\n\n/**\n * Helper function to to generate the typewriter effect used by the dialogue renderer\n * @param scene the scene on which to place the typewriter effect\n * @param style the style of the typewriter\n */\nexport function createTypewriter(\n  scene: Phaser.Scene,\n  style: Phaser.Types.GameObjects.Text.TextStyle\n) {\n  const typewriter = Typewriter(scene, {\n    x: dialogueConstants.rect.x + dialogueConstants.text.xPad,\n    y: dialogueConstants.rect.y + dialogueConstants.text.yPad,\n    textStyle: style\n  });\n  return typewriter;\n}\n","import { Layer } from 'src/features/game/layer/GameLayerTypes';\n\nimport FontAssets from '../assets/FontAssets';\nimport SoundAssets from '../assets/SoundAssets';\nimport { Constants, screenCenter } from '../commons/CommonConstants';\nimport { BitmapFontStyle, IBaseScene } from '../commons/CommonTypes';\nimport dialogueConstants from '../dialogue/GameDialogueConstants';\nimport DialogueRenderer from '../dialogue/GameDialogueRenderer';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { sleep } from '../utils/GameUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport { fadeAndDestroy, fadeIn } from './FadeEffect';\n\nconst notifStyle: BitmapFontStyle = {\n  key: FontAssets.alienLeagueFont.key,\n  size: 100,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst notifTextConfig = {\n  x: screenCenter.x,\n  y: dialogueConstants.rect.y + notifStyle.size * 2,\n  oriX: 0.5,\n  oriY: 0.9\n};\n\n/**\n * A function to display a notifications such as location-change notification\n *\n * @param scene scene to attach this message to\n * @param message - the string you want to display\n * @returns {Promise} - a promise that resolves when notification is clicked\n */\nexport async function displayNotification(scene: IBaseScene, message: string): Promise<void> {\n  const dialogueRenderer = new DialogueRenderer({});\n  const container = dialogueRenderer.getDialogueContainer();\n\n  scene.getLayerManager().addToLayer(Layer.Effects, container);\n  scene.getLayerManager().fadeInLayer(Layer.Effects);\n\n  const notifText = createBitmapText(scene, message, notifTextConfig, notifStyle).setAlpha(0);\n  container.add(notifText);\n\n  SourceAcademyGame.getInstance().getSoundManager().playSound(SoundAssets.notifEnter.key);\n  scene.add.tween(fadeIn([notifText], Constants.fadeDuration * 2));\n\n  // Wait for fade in to finish\n  await sleep(Constants.fadeDuration * 2);\n\n  const showNotification = new Promise<void>(resolve => {\n    dialogueRenderer.getDialogueBox().on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, () => {\n      SourceAcademyGame.getInstance().getSoundManager().playSound(SoundAssets.notifExit.key);\n      fadeAndDestroy(scene, notifText, { fadeDuration: Constants.fadeDuration / 4 });\n      dialogueRenderer.destroy();\n      resolve();\n    });\n  });\n\n  await showNotification;\n}\n","import SoundAssets from '../assets/SoundAssets';\nimport { Constants } from '../commons/CommonConstants';\nimport { AssetKey, BitmapFontStyle, TextConfig } from '../commons/CommonTypes';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { createBitmapText } from './TextUtils';\n\ntype ButtonConfig = {\n  assetKey: AssetKey;\n  message?: string;\n  textConfig?: TextConfig;\n  bitMapTextStyle?: BitmapFontStyle;\n  onDown?: () => void;\n  onUp?: () => void;\n  onHover?: () => void;\n  onOut?: () => void;\n  onPointerMove?: (pointer: Phaser.Input.Pointer, localX: number, localY: number) => void;\n  onHoverEffect?: boolean;\n  onClickSound?: AssetKey;\n  onHoverSound?: AssetKey;\n};\n\nconst onHoverAlpha = 1.0;\nconst offHoverAlpha = 0.9;\n\n/**\n * Create a button with basic functionalities.\n *\n * Functionalities include:\n * 1. Attached onDown, onUp, onHover, onOut listeners\n * 2. Text writing\n * 3. onHover and onOut alpha changes\n * 4. onClick and onHover sound effect\n *\n * @param scene scene to be attached to\n * @param assetKey asset key to be used as button image\n * @param message text to be written on the button, optional\n * @param textConfig config to apply to the text, optional\n * @param bitMapTextStyle bitMapText style to be used, optional\n * @param onDown callback to execute on onDown event, optional\n * @param onUp callback to execute on onUp event, optional\n * @param onHover callback to execute on onHover event, optional\n * @param onOut callback to execute on onOut event, optional\n * @param onPointerMove callback to execute on onPointerMove, optional\n * @param onHoverEffect if true, button will include onHover and onOut alpha changes, optional\n * @param onClickSound sound key to play when button is clicked, executed onUp, optional\n * @param onHoverSound sound key to play when button is hovered, optional\n * @param soundManager required for sound to be played, optional\n * @returns {Phaser.GameObjects.Container} button container\n */\nexport function createButton(\n  scene: Phaser.Scene,\n  {\n    assetKey,\n    message = '',\n    textConfig = { x: 0, y: 0, oriX: 0, oriY: 0 },\n    bitMapTextStyle = Constants.defaultFontStyle,\n    onDown = Constants.nullFunction,\n    onUp = Constants.nullFunction,\n    onHover = Constants.nullFunction,\n    onOut = Constants.nullFunction,\n    onPointerMove = Constants.nullFunction,\n    onHoverEffect = true,\n    onClickSound = SoundAssets.buttonClick.key,\n    onHoverSound = SoundAssets.buttonHover.key\n  }: ButtonConfig\n): Phaser.GameObjects.Container {\n  const container = new Phaser.GameObjects.Container(scene, 0, 0);\n\n  // Set up button functionality\n  const button = new Phaser.GameObjects.Sprite(scene, 0, 0, assetKey);\n  button.setInteractive({ pixelPerfect: true, useHandCursor: true });\n  button.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, () => {\n    SourceAcademyGame.getInstance().getSoundManager().playSound(onClickSound);\n    onUp();\n  });\n  button.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_OVER, () => {\n    SourceAcademyGame.getInstance().getSoundManager().playSound(onHoverSound);\n    if (onHoverEffect) container.setAlpha(onHoverAlpha);\n    onHover();\n  });\n  button.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_OUT, () => {\n    if (onHoverEffect) container.setAlpha(offHoverAlpha);\n    onOut();\n  });\n  button.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, () => {\n    onDown();\n  });\n  button.addListener(\n    Phaser.Input.Events.GAMEOBJECT_POINTER_MOVE,\n    (pointer: Phaser.Input.Pointer, localX: number, localY: number) => {\n      onPointerMove(pointer, localX, localY);\n    }\n  );\n\n  // Set up text\n  const text = createBitmapText(scene, message, textConfig, bitMapTextStyle);\n\n  container.add([button, text]);\n  if (onHoverEffect) container.setAlpha(offHoverAlpha);\n\n  return container;\n}\n","import FontAssets from '../assets/FontAssets';\nimport ImageAssets from '../assets/ImageAssets';\nimport SoundAssets from '../assets/SoundAssets';\nimport { Constants, screenSize } from '../commons/CommonConstants';\nimport { BitmapFontStyle } from '../commons/CommonTypes';\nimport { Layer } from '../layer/GameLayerTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { createButton } from '../utils/ButtonUtils';\nimport { sleep } from '../utils/GameUtils';\nimport { calcListFormatPos, Color, HexColor } from '../utils/StyleUtils';\nimport { fadeAndDestroy } from './FadeEffect';\nimport { rightSideEntryTweenProps, rightSideExitTweenProps } from './FlyEffect';\n\nconst PromptConstants = {\n  textPad: 20,\n  textConfig: { x: 15, y: -15, oriX: 0.5, oriY: 0.5 },\n  y: 100,\n  width: 450,\n  yInterval: 100\n};\n\nconst textStyle = {\n  fontFamily: 'Verdana',\n  fontSize: '20px',\n  fill: Color.offWhite,\n  align: 'right',\n  lineSpacing: 10,\n  wordWrap: { width: PromptConstants.width - PromptConstants.textPad * 2 }\n};\n\nconst promptOptStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 25,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\n/**\n * Display a UI that asks users to choose which option they like\n *\n * @param scene - which scene to add this prompt in\n * @param text - question you want to ask\n * @param choices - an array of choices to show\n * @returns {Promise<number>} which choice index the user has chosen\n */\nexport async function promptWithChoices(\n  scene: Phaser.Scene,\n  text: string,\n  choices: string[]\n): Promise<number> {\n  const promptContainer = new Phaser.GameObjects.Container(scene, 0, 0);\n\n  const header = new Phaser.GameObjects.Text(\n    scene,\n    screenSize.x - PromptConstants.textPad,\n    PromptConstants.y,\n    text,\n    textStyle\n  ).setOrigin(1.0, 0.0);\n  const promptHeaderBg = new Phaser.GameObjects.Rectangle(\n    scene,\n    screenSize.x,\n    PromptConstants.y - PromptConstants.textPad,\n    PromptConstants.width,\n    header.getBounds().bottom * 0.5 + PromptConstants.textPad,\n    HexColor.darkBlue,\n    0.8\n  ).setOrigin(1.0, 0.0);\n  const promptBg = new Phaser.GameObjects.Rectangle(\n    scene,\n    screenSize.x,\n    PromptConstants.y - PromptConstants.textPad,\n    PromptConstants.width,\n    promptHeaderBg.getBounds().bottom * 0.5 + (choices.length + 0.5) * PromptConstants.yInterval,\n    HexColor.lightBlue,\n    0.2\n  ).setOrigin(1.0, 0.0);\n\n  promptContainer.add([promptBg, promptHeaderBg, header]);\n\n  const buttonPositions = calcListFormatPos({\n    numOfItems: choices.length,\n    xSpacing: 0,\n    ySpacing: PromptConstants.yInterval\n  });\n\n  GameGlobalAPI.getInstance().addToLayer(Layer.UI, promptContainer);\n\n  const activatePromptContainer: Promise<number> = new Promise(resolve => {\n    promptContainer.add(\n      choices.map((response, index) =>\n        createButton(scene, {\n          assetKey: ImageAssets.mediumButton.key,\n          message: response,\n          textConfig: PromptConstants.textConfig,\n          bitMapTextStyle: promptOptStyle,\n          onUp: () => {\n            promptContainer.destroy();\n            resolve(index);\n          }\n        }).setPosition(\n          screenSize.x - PromptConstants.width / 2,\n          buttonPositions[index][1] + promptHeaderBg.getBounds().bottom + 75\n        )\n      )\n    );\n  });\n\n  // Animate in\n  promptContainer.setPosition(screenSize.x, 0);\n  SourceAcademyGame.getInstance().getSoundManager().playSound(SoundAssets.notifEnter.key);\n  scene.add.tween({\n    targets: promptContainer,\n    alpha: 1,\n    ...rightSideEntryTweenProps\n  });\n  await sleep(rightSideEntryTweenProps.duration);\n\n  const response = await activatePromptContainer;\n\n  // Animate out\n  SourceAcademyGame.getInstance().getSoundManager().playSound(SoundAssets.notifExit.key);\n  scene.add.tween({\n    targets: promptContainer,\n    alpha: 1,\n    ...rightSideExitTweenProps\n  });\n\n  await sleep(rightSideExitTweenProps.duration);\n  fadeAndDestroy(scene, promptContainer, { fadeDuration: Constants.fadeDuration });\n\n  return response;\n}\n","export enum GamePhaseType {\n  Move = 'Move',\n  Explore = 'Explore',\n  Talk = 'Talk',\n  Menu = 'Menu',\n  EscapeMenu = 'EscapeMenu',\n  None = 'None',\n  Sequence = 'Sequence',\n  Dashboard = 'Dashboard'\n}\n\n/**\n * A terminal phase should only ever be the top-most phase in the phase stack.\n * In particular, this means the phase stack should only have at most one\n * terminal phase on it at any point. A terminal phase should be popped from\n * the stack before another phase is pushed on.\n */\nexport enum GameTerminalPhaseType {\n  EscapeMenu = GamePhaseType.EscapeMenu,\n  Dashboard = GamePhaseType.Dashboard\n}\n","import { GameAction } from '../../action/GameActionTypes';\nimport { SoundAsset } from '../../assets/AssetsTypes';\nimport { getAwardProp } from '../../awards/GameAwardsHelper';\nimport { BBoxProperty } from '../../boundingBoxes/GameBoundingBoxTypes';\nimport { Character, SpeakerDetail } from '../../character/GameCharacterTypes';\nimport { GamePosition, GameSize, ItemId } from '../../commons/CommonTypes';\nimport { AssetKey } from '../../commons/CommonTypes';\nimport { Dialogue } from '../../dialogue/GameDialogueTypes';\nimport { displayMiniMessage } from '../../effects/MiniMessage';\nimport { displayNotification } from '../../effects/Notification';\nimport { promptWithChoices } from '../../effects/Prompt';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { AnyId, GameItemType, GameLocation, LocationId } from '../../location/GameMapTypes';\nimport { GameMode } from '../../mode/GameModeTypes';\nimport { ObjectProperty } from '../../objects/GameObjectTypes';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\nimport { SettingsJson } from '../../save/GameSaveTypes';\nimport SourceAcademyGame from '../../SourceAcademyGame';\nimport { StateObserver, UserStateType } from '../../state/GameStateTypes';\nimport { TaskDetail } from '../../task/GameTaskTypes';\nimport { courseId, mandatory } from '../../utils/GameUtils';\nimport GameManager from './GameManager';\n\n/**\n * This class exposes all the public API's of managers\n * in the Game Manager scene.\n *\n * It allows managers to access services globally\n * through GameGlobalAPI.getInstance().function() without\n * having to keep a reference to the gameManager.\n */\nclass GameGlobalAPI {\n  private gameManager: GameManager | undefined;\n\n  static instance: GameGlobalAPI;\n\n  private constructor() {\n    this.gameManager = undefined;\n  }\n\n  static getInstance() {\n    if (!GameGlobalAPI.instance) {\n      GameGlobalAPI.instance = new GameGlobalAPI();\n    }\n    return GameGlobalAPI.instance;\n  }\n\n  /////////////////////\n  //   Game Manager  //\n  /////////////////////\n\n  public getGameManager = () => mandatory(this.gameManager);\n\n  public setGameManager(gameManagerRef: GameManager): void {\n    this.gameManager = gameManagerRef;\n  }\n\n  public getCurrLocId(): LocationId {\n    return this.getGameManager().currentLocationId;\n  }\n\n  public getLocationAtId(locationId: LocationId): GameLocation {\n    return this.getGameManager().getStateManager().getGameMap().getLocationAtId(locationId);\n  }\n\n  public async changeLocationTo(locationName: string) {\n    await this.getGameManager().changeLocationTo(locationName);\n  }\n\n  /////////////////////\n  //    Game Mode    //\n  /////////////////////\n\n  public getLocationModes(locationId: LocationId): GameMode[] {\n    return this.getGameManager().getStateManager().getLocationModes(locationId);\n  }\n\n  public addLocationMode(locationId: LocationId, mode: GameMode): void {\n    this.getGameManager().getStateManager().addLocationMode(locationId, mode);\n  }\n\n  public removeLocationMode(locationId: LocationId, mode: GameMode): void {\n    this.getGameManager().getStateManager().removeLocationMode(locationId, mode);\n  }\n\n  /////////////////////\n  //   Interaction   //\n  /////////////////////\n\n  public hasTriggeredInteraction(id: string): boolean | undefined {\n    return this.getGameManager().getStateManager().hasTriggeredInteraction(id);\n  }\n\n  public triggerStateChangeAction(actionId: ItemId): void {\n    this.getGameManager().getStateManager().triggerStateChangeAction(actionId);\n  }\n\n  public triggerInteraction(id: string): void {\n    this.getGameManager().getStateManager().triggerInteraction(id);\n  }\n\n  /////////////////////\n  //    Game Items   //\n  /////////////////////\n\n  public watchGameItemType(gameItemType: GameItemType, stateObserver: StateObserver) {\n    this.getGameManager().getStateManager().watchGameItemType(gameItemType, stateObserver);\n  }\n\n  public getGameMap() {\n    return this.getGameManager().getStateManager().getGameMap();\n  }\n\n  public getGameItemsInLocation(gameItemType: GameItemType, locationId: LocationId): ItemId[] {\n    return this.getGameManager().getStateManager().getGameItemsInLocation(gameItemType, locationId);\n  }\n\n  public addItem(gameItemType: GameItemType, locationId: LocationId, itemId: ItemId): void {\n    this.getGameManager().getStateManager().addItem(gameItemType, locationId, itemId);\n  }\n\n  public removeItem(gameItemType: GameItemType, locationId: LocationId, itemId: ItemId): void {\n    return this.getGameManager().getStateManager().removeItem(gameItemType, locationId, itemId);\n  }\n\n  /////////////////////\n  //  Game Objects   //\n  /////////////////////\n\n  public makeObjectGlow(objectId: ItemId, turnOn: boolean) {\n    this.getGameManager().getObjectManager().makeObjectGlow(objectId, turnOn);\n  }\n\n  public makeObjectBlink(objectId: ItemId, turnOn: boolean) {\n    this.getGameManager().getObjectManager().makeObjectBlink(objectId, turnOn);\n  }\n\n  public setObjProperty(id: ItemId, newObjProp: ObjectProperty) {\n    this.getGameManager().getStateManager().setObjProperty(id, newObjProp);\n  }\n\n  public renderObjectLayerContainer(locationId: LocationId) {\n    this.getGameManager().getObjectManager().renderObjectsLayerContainer(locationId);\n  }\n\n  public getAllActivatables() {\n    return [\n      ...this.getGameManager().getObjectManager().getActivatables(),\n      ...this.getGameManager().getBBoxManager().getActivatables()\n    ];\n  }\n\n  /////////////////////\n  //    Game BBox    //\n  /////////////////////\n\n  public setBBoxProperty(id: ItemId, newBBoxProp: BBoxProperty) {\n    this.getGameManager().getStateManager().setBBoxProperty(id, newBBoxProp);\n  }\n\n  public renderBBoxLayerContainer(locationId: LocationId) {\n    this.getGameManager().getBBoxManager().renderBBoxLayerContainer(locationId);\n  }\n\n  /////////////////////\n  //  Game Objective //\n  /////////////////////\n\n  public areAllObjectivesComplete(): boolean {\n    return this.getGameManager().getStateManager().areAllObjectivesComplete();\n  }\n\n  public isObjectiveComplete(key: string): boolean {\n    return this.getGameManager().getStateManager().isObjectiveComplete(key);\n  }\n\n  public areObjectivesComplete(keys: string[]): boolean {\n    return this.getGameManager().getStateManager().areObjectivesComplete(keys);\n  }\n\n  public completeObjective(key: string): void {\n    this.getGameManager().getStateManager().completeObjective(key);\n  }\n\n  /////////////////////\n  //  Game Task      //\n  /////////////////////\n\n  public isTaskComplete(key: string): boolean {\n    return this.getGameManager().getStateManager().isTaskComplete(key);\n  }\n\n  public areTasksComplete(keys: string[]): boolean {\n    return this.getGameManager().getStateManager().areTasksComplete(keys);\n  }\n\n  public completeTask(key: string): void {\n    this.getGameManager().getStateManager().completeTask(key);\n    displayMiniMessage(this.getGameManager(), 'Task completed!');\n  }\n\n  public showTask(key: string): void {\n    this.getGameManager().getStateManager().showTask(key);\n    displayMiniMessage(this.getGameManager(), 'New task added');\n  }\n\n  public getAllVisibleTaskData(): Array<[TaskDetail, boolean]> {\n    return this.getGameManager().getStateManager().getAllVisibleTaskData();\n  }\n\n  /////////////////////\n  //   User State    //\n  /////////////////////\n\n  public addCollectible(id: string): void {\n    SourceAcademyGame.getInstance().getUserStateManager().addCollectible(id);\n  }\n\n  public async isInUserState(userStateType: UserStateType, id: string): Promise<boolean> {\n    return SourceAcademyGame.getInstance().getUserStateManager().isInUserState(userStateType, id);\n  }\n\n  /////////////////////\n  //   Game Layer    //\n  /////////////////////\n\n  public clearSeveralLayers(layerTypes: Layer[]) {\n    this.getGameManager().getLayerManager().clearSeveralLayers(layerTypes);\n  }\n\n  public addToLayer(layer: Layer, gameObj: Phaser.GameObjects.GameObject) {\n    this.getGameManager().getLayerManager().addToLayer(layer, gameObj);\n  }\n\n  public showLayer(layer: Layer) {\n    this.getGameManager().getLayerManager().showLayer(layer);\n  }\n\n  public hideLayer(layer: Layer) {\n    this.getGameManager().getLayerManager().hideLayer(layer);\n  }\n\n  public async fadeInLayer(layer: Layer, fadeDuration?: number) {\n    await this.getGameManager().getLayerManager().fadeInLayer(layer, fadeDuration);\n  }\n\n  public async fadeOutLayer(layer: Layer, fadeDuration?: number) {\n    await this.getGameManager().getLayerManager().fadeOutLayer(layer, fadeDuration);\n  }\n  /////////////////////\n  //  Location Notif //\n  /////////////////////\n\n  public async bringUpUpdateNotif(message: string) {\n    await displayNotification(this.getGameManager(), message);\n  }\n\n  /////////////////////\n  //   Story Action  //\n  /////////////////////\n\n  public async processGameActions(actionIds: ItemId[] | undefined) {\n    await this.getGameManager().getPhaseManager().pushPhase(GamePhaseType.Sequence);\n    await this.getGameManager().getActionManager().processGameActions(actionIds);\n    await this.getGameManager().getPhaseManager().popPhase();\n  }\n\n  public async processGameActionsInSamePhase(actionIds: ItemId[] | undefined) {\n    await this.getGameManager().getActionManager().processGameActions(actionIds);\n  }\n\n  /////////////////////\n  //   Dialogue      //\n  /////////////////////\n\n  public async showDialogue(dialogueId: ItemId) {\n    await this.getGameManager().getPhaseManager().pushPhase(GamePhaseType.Sequence);\n    await this.getGameManager().getDialogueManager().showDialogue(dialogueId);\n    await this.getGameManager().getPhaseManager().popPhase();\n  }\n\n  public async showDialogueInSamePhase(dialogueId: ItemId) {\n    await this.getGameManager().getDialogueManager().showDialogue(dialogueId);\n  }\n\n  /////////////////////\n  //   Storage      //\n  /////////////////////\n\n  public storeDialogueLine(newLine: string, newSpeakerDetail?: SpeakerDetail | null) {\n    this.getGameManager().getDialogueStorageManager().storeLine(newLine, newSpeakerDetail);\n  }\n\n  public getDialogueStorage() {\n    return this.getGameManager().getDialogueStorageManager().getDialogueStorage();\n  }\n\n  /////////////////////\n  //   Collectible   //\n  /////////////////////\n\n  public async obtainCollectible(collectibleId: string) {\n    displayMiniMessage(this.getGameManager(), `Obtained ${getAwardProp(collectibleId).title}`);\n    SourceAcademyGame.getInstance().getUserStateManager().addCollectible(collectibleId);\n  }\n\n  /////////////////////\n  //     Pop Up      //\n  /////////////////////\n\n  public displayPopUp(itemId: ItemId, position: GamePosition, duration?: number, size?: GameSize) {\n    this.getGameManager().getPopupManager().displayPopUp(itemId, position, duration, size);\n  }\n\n  public destroyAllPopUps() {\n    this.getGameManager().getPopupManager().destroyAllPopUps();\n  }\n\n  public async destroyPopUp(position: GamePosition) {\n    this.getGameManager().getPopupManager().destroyPopUp(position);\n  }\n\n  /////////////////////\n  //    Save Game    //\n  /////////////////////\n\n  public async saveGame() {\n    await this.getGameManager().getSaveManager().saveGame();\n  }\n\n  public async saveSettings(settingsJson: SettingsJson) {\n    await this.getGameManager().getSaveManager().saveSettings(settingsJson);\n  }\n\n  public getLoadedUserState() {\n    return this.getGameManager().getSaveManager().getLoadedUserState();\n  }\n\n  /////////////////////\n  //      Sound      //\n  /////////////////////\n\n  public getSoundManager() {\n    return SourceAcademyGame.getInstance().getSoundManager();\n  }\n\n  public playSound(soundKey: AssetKey) {\n    SourceAcademyGame.getInstance().getSoundManager().playSound(soundKey);\n  }\n\n  public playBgMusic(soundKey: AssetKey) {\n    SourceAcademyGame.getInstance().getSoundManager().playBgMusic(soundKey);\n  }\n\n  public async stopAllSound() {\n    SourceAcademyGame.getInstance().getSoundManager().stopAllSound();\n  }\n\n  public pauseCurrBgMusic() {\n    SourceAcademyGame.getInstance().getSoundManager().pauseCurrBgMusic();\n  }\n\n  public continueCurrBgMusic() {\n    SourceAcademyGame.getInstance().getSoundManager().continueCurrBgMusic();\n  }\n\n  public applySoundSettings(userSettings: SettingsJson) {\n    SourceAcademyGame.getInstance().getSoundManager().applyUserSettings(userSettings);\n  }\n\n  public loadSounds(soundAssets: SoundAsset[]) {\n    SourceAcademyGame.getInstance().getSoundManager().loadSounds(soundAssets);\n  }\n\n  /////////////////////\n  //    Animations   //\n  /////////////////////\n\n  public startAnimation(id: AnyId, startFrame: number, frameRate: number) {\n    const startImage = this.getAssetByKey(this.getGameMap().getAssetKeyFromId(id));\n    this.getGameManager().getAnimationManager().displayAnimation(startImage, startFrame, frameRate);\n  }\n\n  public stopAnimation(id: AnyId) {\n    const stopImage = this.getAssetByKey(this.getGameMap().getAssetKeyFromId(id));\n    this.getGameManager().getAnimationManager().stopAnimation(stopImage);\n  }\n\n  /////////////////////\n  //      Input      //\n  /////////////////////\n\n  public setDefaultCursor(cursor: string) {\n    this.getGameManager().getInputManager().setDefaultCursor(cursor);\n  }\n\n  public enableKeyboardInput(active: boolean) {\n    this.getGameManager().getInputManager().enableKeyboardInput(active);\n  }\n\n  public enableMouseInput(active: boolean) {\n    this.getGameManager().getInputManager().enableMouseInput(active);\n  }\n\n  public enableSprite(gameObject: Phaser.GameObjects.GameObject, active: boolean) {\n    active\n      ? this.getGameManager().input.enable(gameObject)\n      : this.getGameManager().input.disable(gameObject);\n  }\n\n  /////////////////////\n  //      Phases     //\n  /////////////////////\n\n  public async popPhase() {\n    await this.getGameManager().getPhaseManager().popPhase();\n  }\n\n  public async pushPhase(gamePhaseType: GamePhaseType) {\n    await this.getGameManager().getPhaseManager().pushPhase(gamePhaseType);\n  }\n\n  public async swapPhase(gamePhaseType: GamePhaseType) {\n    await this.getGameManager().getPhaseManager().swapPhase(gamePhaseType);\n  }\n\n  public isCurrentPhase(gamePhaseType: GamePhaseType) {\n    return this.getGameManager().getPhaseManager().isCurrentPhase(gamePhaseType);\n  }\n\n  /////////////////////\n  //   Background    //\n  /////////////////////\n\n  public renderBackgroundLayerContainer(locationId: LocationId) {\n    this.getGameManager().getBackgroundManager().renderBackgroundLayerContainer(locationId);\n  }\n\n  /////////////////////\n  //    Assessment   //\n  /////////////////////\n\n  public async promptNavigateToAssessment(assessmentId: number) {\n    const response = await promptWithChoices(\n      GameGlobalAPI.getInstance().getGameManager(),\n      `Are you ready for the challenge?`,\n      ['Yes', 'No']\n    );\n    if (response === 0) {\n      window.open(`/courses/${courseId()}/missions/${assessmentId}/0`, 'blank');\n      window.focus();\n    }\n  }\n\n  public async updateAssessmentState() {\n    await SourceAcademyGame.getInstance().getUserStateManager().loadAssessments();\n  }\n\n  /////////////////////\n  //   Characters    //\n  /////////////////////\n\n  public createCharacterSprite(\n    characterId: ItemId,\n    overrideExpression?: string,\n    overridePosition?: GamePosition\n  ) {\n    return this.getGameManager()\n      .getCharacterManager()\n      .createCharacterSprite(characterId, overrideExpression, overridePosition);\n  }\n\n  public moveCharacter(id: ItemId, newLocation: LocationId, newPosition: GamePosition) {\n    this.getGameManager().getStateManager().moveCharacter(id, newLocation, newPosition);\n  }\n\n  public updateCharacter(id: ItemId, expression: string) {\n    this.getGameManager().getStateManager().updateCharacter(id, expression);\n  }\n\n  /////////////////////\n  //  Item retrieval //\n  /////////////////////\n\n  public getDialogueById(dialogueId: ItemId): Dialogue {\n    return mandatory(this.getGameMap().getDialogueMap().get(dialogueId));\n  }\n\n  public getCharacterById(characterId: ItemId): Character {\n    return mandatory(this.getGameMap().getCharacterMap().get(characterId));\n  }\n\n  public getActionById(actionId: ItemId): GameAction {\n    return mandatory(this.getGameMap().getActionMap().get(actionId));\n  }\n\n  public getObjectById(objectId: ItemId): ObjectProperty {\n    return mandatory(this.getGameMap().getObjectPropMap().get(objectId));\n  }\n\n  public getBBoxById(bboxId: ItemId): BBoxProperty {\n    return mandatory(this.getGameMap().getBBoxPropMap().get(bboxId));\n  }\n  public getAssetByKey(assetKey: AssetKey) {\n    return this.getGameMap().getAssetByKey(assetKey);\n  }\n}\n\nexport default GameGlobalAPI;\n","import { ItemId } from '../commons/CommonTypes';\n\nexport enum GameStateStorage {\n  UserState = 'UserState',\n  ChecklistState = 'ChecklistState',\n  TasklistState = 'TasklistState'\n}\n\n/**\n * Type of user state list.\n */\nexport enum UserStateType {\n  collectibles = 'collectibles',\n  assessments = 'assessments',\n  achievements = 'achievements'\n}\n\n/**\n * State observer is a renderer that can reflect the changes\n * to the current scene\n */\nexport interface StateObserver {\n  handleAdd: (itemId: ItemId) => boolean;\n  handleDelete: (itemId: ItemId) => boolean;\n  handleMutate: (itemId: ItemId) => boolean;\n}\n","import { ItemId, TrackInteraction } from '../commons/CommonTypes';\nimport { GameStateStorage } from '../state/GameStateTypes';\n\nexport enum GameActionType {\n  MoveCharacter = 'MoveCharacter',\n  UpdateCharacter = 'UpdateCharacter',\n  ObtainCollectible = 'ObtainCollectible',\n  CompleteObjective = 'CompleteObjective',\n  CompleteTask = 'CompleteTask',\n  ShowTask = 'ShowTask',\n  PreviewLocation = 'PreviewLocation',\n  AddItem = 'AddItem',\n  RemoveItem = 'RemoveItem',\n  ShowDialogue = 'ShowDialogue',\n  ChangeBackground = 'ChangeBackground',\n  StartAnimation = 'StartAnimation',\n  StopAnimation = 'StopAnimation',\n  RemoveLocationMode = 'RemoveLocationMode',\n  AddLocationMode = 'AddLocationMode',\n  AddPopup = 'AddPopup',\n  MakeObjectBlink = 'MakeObjectBlink',\n  MakeObjectGlow = 'MakeObjectGlow',\n  PlayBGM = 'PlayBGM',\n  PlaySFX = 'PlaySFX',\n  ShowObjectLayer = 'ShowObjectLayer',\n  NavigateToAssessment = 'NavigateToAssessment',\n  UpdateAssessmentStatus = 'UpdateAssessmentStatus',\n  Delay = 'Delay'\n}\n\n/**\n * Interface for entities which can contain actions, including locations, objects, etc.\n */\nexport interface IGameActionable {\n  actionIds?: ItemId[];\n}\n/**\n * Condition object which encapsulates data about an action condition,\n * which is the condition that needs to be satisfied before an action\n * can be played\n *\n * @prop {GameStateStorage} state - the game state which needs to be checked to determine the truthiness of the condition\n * @prop {any} conditionParams - an object encapsulating more information about the condition,\n *                               such as itemId that needs to be checked for existence to satisfy the condition\n * @prop {boolean} boolean - whether the condition needs to match \"true\" or \"false\" before it is satisfied\n */\nexport type ActionCondition = {\n  state: GameStateStorage;\n  conditionParams: any;\n  boolean: boolean;\n};\n\n/**\n * Action object which encapsulates data about an action,\n * that can be performed.\n *\n * See Command Pattern/Redux actions.\n *\n * @prop {GameActionType} actionType - the type of action that will be performed\n * @prop {any} actionParams - an object containing information about the parameters of the action such as which entity ID to perform this action on\n * @prop {Array<ActionCondition>} actionConditions - a list of conditions that need to be satisfied in order for the action to be executed\n * @prop {isRepeatable} boolean - whether or not the action can be performed again when it is triggerd.\n */\nexport type GameAction = TrackInteraction & {\n  actionType: GameActionType;\n  actionParams: any;\n  actionConditions: ActionCondition[];\n  isRepeatable: boolean;\n};\n","import { IGameActionable } from '../action/GameActionTypes';\nimport { AssetKey, ItemId } from '../commons/CommonTypes';\nimport { GameMode } from '../mode/GameModeTypes';\n\n/**\n * @typedef {string} LocationId - id that identifies a location\n */\nexport type LocationId = string;\n\n/**\n * @typedef {LocationId | ItemId} AnyId - a general id type for a location or any object id\n */\nexport type AnyId = LocationId | ItemId;\n\n/**\n * @typedef {GameLocation} - encapsulates data about a location in a GameMap\n * @prop {ItemId[]} actionIds - ids of all actions that play when that location is visited\n * @prop {LocationId} id - the id to indentify that location\n * @prop {string} name - the name of the location as shown in the Move Menu\n * @prop {AssetKey} assetKey - the asset key for the background image of the location\n * @prop {Set<GameMode>} modes - the game modes that are available in the location\n * @prop {Set<ItemId>} talkTopics - the dialogue id of topics that players can talk about in Talk menu of that location\n * @prop {Set<ItemId>} objects - the object id of objects rendered in the location\n * @prop {Set<ItemId>} boundingBoxes - the id of the bounding boxes (invisible rectangles) in that location\n * @prop {AssetKey} bgmKey - the asset key of background music being played in that location\n */\nexport type GameLocation = IGameActionable & {\n  id: LocationId;\n  name: string;\n  assetKey: AssetKey;\n  previewKey: AssetKey | null;\n  modes: Set<GameMode>;\n  navigation: Set<LocationId>;\n  talkTopics: Set<ItemId>;\n  objects: Set<ItemId>;\n  boundingBoxes: Set<ItemId>;\n  bgmKey: AssetKey;\n  characters: Set<ItemId>;\n};\n\nexport enum GameItemType {\n  navigation = 'navigation',\n  locations = 'locations',\n  talkTopics = 'talkTopics',\n  dialogues = 'dialogues',\n  objects = 'objects',\n  boundingBoxes = 'boundingBoxes',\n  characters = 'characters',\n  actions = 'actions',\n  bgmKey = 'bgmKey',\n  collectibles = 'collectibles'\n}\n","import GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport { GameStateStorage } from '../state/GameStateTypes';\nimport { ActionCondition } from './GameActionTypes';\n\n/**\n * This class checks for whether if-conditions are satisfied,\n * to determine whether or not game actions will be played out.\n */\nexport default class ActionConditionChecker {\n  /**\n   * Checks whether all action conditions are met\n   * @param actionConditions Array of action conditions\n   * @returns {Promise<boolean>} True if all conditions are met\n   */\n  public static async checkAllConditionsSatisfied(actionConditions: ActionCondition[]) {\n    const allConditions = await Promise.all(\n      actionConditions.map(\n        async actionCondition => await this.checkConditionSatisfied(actionCondition)\n      )\n    );\n    return allConditions.every(condition => condition === true);\n  }\n\n  /**\n   * Checks whether one action conditions is met\n   * Also stubs the user state\n   *\n   * @param conditional The action condition\n   * @returns {boolean} True if condition is met\n   */\n  public static async checkConditionSatisfied(conditional: ActionCondition) {\n    const { state, conditionParams, boolean } = conditional;\n    switch (state) {\n      case GameStateStorage.UserState:\n        return (\n          (await GameGlobalAPI.getInstance().isInUserState(\n            conditionParams.userStateType,\n            conditionParams.id\n          )) === boolean\n        );\n      case GameStateStorage.ChecklistState:\n        return GameGlobalAPI.getInstance().isObjectiveComplete(conditionParams.id) === boolean;\n      case GameStateStorage.TasklistState:\n        return GameGlobalAPI.getInstance().isTaskComplete(conditionParams.id) === boolean;\n      default:\n        return true;\n    }\n  }\n}\n","import { Layer } from '../layer/GameLayerTypes';\nimport { GamePhaseType } from '../phase/GamePhaseTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { sleep } from '../utils/GameUtils';\nimport { GameActionType } from './GameActionTypes';\n\n/**\n * This class executes game actions by calling the right functions\n * from global API\n */\nexport default class GameActionExecuter {\n  /**\n   * Executes the game action based on given type and parameters\n   * @param actionType the type of action that will be executed\n   * @param actionParams an object containing all the parameters\n   */\n  public static async executeGameAction(actionType: GameActionType, actionParams: any) {\n    const globalAPI = GameGlobalAPI.getInstance();\n\n    switch (actionType) {\n      case GameActionType.AddItem:\n        globalAPI.addItem(actionParams.gameItemType, actionParams.locationId, actionParams.id);\n        return;\n      case GameActionType.RemoveItem:\n        globalAPI.removeItem(actionParams.gameItemType, actionParams.locationId, actionParams.id);\n        return;\n      case GameActionType.AddLocationMode:\n        globalAPI.addLocationMode(actionParams.locationId, actionParams.mode);\n        return;\n      case GameActionType.RemoveLocationMode:\n        globalAPI.removeLocationMode(actionParams.locationId, actionParams.mode);\n        return;\n      case GameActionType.MoveCharacter:\n        globalAPI.moveCharacter(actionParams.id, actionParams.locationId, actionParams.position);\n        return;\n      case GameActionType.UpdateCharacter:\n        globalAPI.updateCharacter(actionParams.id, actionParams.expression);\n        return;\n      case GameActionType.ChangeBackground:\n        globalAPI.renderBackgroundLayerContainer(actionParams.id);\n        return;\n      case GameActionType.StartAnimation:\n        globalAPI.startAnimation(actionParams.id, actionParams.startFrame, actionParams.frameRate);\n        return;\n      case GameActionType.StopAnimation:\n        globalAPI.stopAnimation(actionParams.id);\n        return;\n      case GameActionType.PreviewLocation:\n        globalAPI.renderBackgroundLayerContainer(actionParams.id);\n        globalAPI.renderObjectLayerContainer(actionParams.id);\n        globalAPI.renderBBoxLayerContainer(actionParams.id);\n        return;\n      case GameActionType.ObtainCollectible:\n        globalAPI.obtainCollectible(actionParams.id);\n        return;\n      case GameActionType.CompleteObjective:\n        globalAPI.completeObjective(actionParams.id);\n        return;\n      case GameActionType.CompleteTask:\n        globalAPI.completeTask(actionParams.id);\n        return;\n      case GameActionType.ShowTask:\n        globalAPI.showTask(actionParams.id);\n        return;\n      case GameActionType.ShowDialogue:\n        if (globalAPI.isCurrentPhase(GamePhaseType.Sequence)) {\n          await globalAPI.showDialogueInSamePhase(actionParams.id);\n        } else {\n          await globalAPI.showDialogue(actionParams.id);\n        }\n        return;\n      case GameActionType.AddPopup:\n        await globalAPI.displayPopUp(\n          actionParams.id,\n          actionParams.position,\n          actionParams.duration,\n          actionParams.size\n        );\n        return;\n      case GameActionType.MakeObjectBlink:\n        await globalAPI.makeObjectBlink(actionParams.id, actionParams.turnOn);\n        return;\n      case GameActionType.MakeObjectGlow:\n        await globalAPI.makeObjectGlow(actionParams.id, actionParams.turnOn);\n        return;\n      case GameActionType.PlayBGM:\n        SourceAcademyGame.getInstance().getSoundManager().playBgMusic(actionParams.id);\n        return;\n      case GameActionType.PlaySFX:\n        await SourceAcademyGame.getInstance().getSoundManager().playSound(actionParams.id);\n        return;\n      case GameActionType.ShowObjectLayer:\n        actionParams.show ? globalAPI.showLayer(Layer.Objects) : globalAPI.hideLayer(Layer.Objects);\n        return;\n      case GameActionType.NavigateToAssessment:\n        await globalAPI.promptNavigateToAssessment(actionParams.assessmentId);\n        return;\n      case GameActionType.UpdateAssessmentStatus:\n        await globalAPI.updateAssessmentState();\n        return;\n      case GameActionType.Delay:\n        await sleep(actionParams.duration);\n        return;\n      default:\n        return;\n    }\n  }\n\n  /**\n   * Determines if action is state change action type\n   * State-change actions are replayed at the start of every game\n   * They are actions that modify that game map's original state\n   *\n   * @param actionType - the type of action\n   */\n  public static isStateChangeAction(actionType: GameActionType) {\n    switch (actionType) {\n      case GameActionType.AddItem:\n      case GameActionType.RemoveItem:\n      case GameActionType.AddLocationMode:\n      case GameActionType.RemoveLocationMode:\n      case GameActionType.MoveCharacter:\n      case GameActionType.UpdateCharacter:\n        return true;\n      case GameActionType.NavigateToAssessment:\n      case GameActionType.UpdateAssessmentStatus:\n      case GameActionType.PreviewLocation:\n      case GameActionType.ChangeBackground:\n      case GameActionType.StartAnimation:\n      case GameActionType.StopAnimation:\n      case GameActionType.ObtainCollectible:\n      case GameActionType.CompleteObjective:\n      case GameActionType.CompleteTask:\n      case GameActionType.ShowTask:\n      case GameActionType.ShowDialogue:\n      case GameActionType.AddPopup:\n      case GameActionType.MakeObjectBlink:\n      case GameActionType.MakeObjectGlow:\n      case GameActionType.PlayBGM:\n      case GameActionType.PlaySFX:\n      case GameActionType.ShowObjectLayer:\n      case GameActionType.Delay:\n        return false;\n    }\n  }\n}\n","import { ItemId } from '../commons/CommonTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport ActionConditionChecker from './GameActionConditionChecker';\nimport GameActionExecuter from './GameActionExecuter';\nimport { ActionCondition } from './GameActionTypes';\n\n/**\n * This class manages all game actions, and is called whenever\n * entities need to perform actions.\n */\nexport default class GameActionManager {\n  /**\n   * Executes an array of state-change actions\n   * to bring game state same as last player's progress\n   *\n   * @param actionIds ids of the actions\n   */\n  public async fastForwardGameActions(actionIds?: ItemId[]): Promise<void> {\n    if (!actionIds) return;\n    for (const actionId of actionIds) {\n      const { actionType, actionParams } = GameGlobalAPI.getInstance().getActionById(actionId);\n      await GameActionExecuter.executeGameAction(actionType, actionParams);\n    }\n  }\n\n  /**\n   * Process an array of actions, denoted by their IDs.\n   *\n   * NOTE: Saves the game after all the actions are executed.\n   *\n   * @param actionIds ids of the actions\n   */\n  public async processGameActions(actionIds?: ItemId[]): Promise<void> {\n    if (!actionIds) return;\n    for (const actionId of actionIds) {\n      await this.processGameAction(actionId);\n    }\n    await GameGlobalAPI.getInstance().saveGame();\n  }\n\n  /**\n   * Process an action, denoted by its ID.\n   *\n   * @param actionId id of the action\n   */\n  public async processGameAction(actionId: ItemId) {\n    const { actionType, actionParams, actionConditions, isRepeatable, interactionId } =\n      GameGlobalAPI.getInstance().getActionById(actionId);\n\n    if (await this.checkCanPlayAction(isRepeatable, interactionId, actionConditions)) {\n      await GameActionExecuter.executeGameAction(actionType, actionParams);\n      if (GameActionExecuter.isStateChangeAction(actionType)) {\n        GameGlobalAPI.getInstance().triggerStateChangeAction(actionId);\n      }\n      GameGlobalAPI.getInstance().triggerInteraction(actionId);\n    }\n  }\n\n  /**\n   * Check whether an action is playable.\n   *\n   * An action is playable if:\n   *  - Has not been triggered & has all of its condition fulfilled\n   *  - Has been triggered, but repeatable & & has all of its condition fulfilled\n   *\n   * @param isRepeatable whether the action is repeatable\n   * @param interactionId id of the interaction\n   * @param actionConditions condition to be fulfilled to play the action\n   */\n  private async checkCanPlayAction(\n    isRepeatable: boolean,\n    interactionId: string,\n    actionConditions: ActionCondition[]\n  ) {\n    return (\n      (isRepeatable || !GameGlobalAPI.getInstance().hasTriggeredInteraction(interactionId)) &&\n      (await ActionConditionChecker.checkAllConditionsSatisfied(actionConditions))\n    );\n  }\n}\n","import { AnimType, AssetType, ImageAsset } from '../assets/AssetsTypes';\nimport { AssetKey } from '../commons/CommonTypes';\nimport { GameItemType } from '../location/GameMapTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport { mandatory } from '../utils/GameUtils';\n\n/**\n * Manager for game animations.\n * Creates Animation instances and stores them in the a\n */\nexport default class GameAnimationManager {\n  private game = GameGlobalAPI.getInstance().getGameManager();\n  private animationInstanceMap = new Map<AssetKey, Phaser.GameObjects.Sprite>();\n\n  /**\n   * Create an image (Phaser Image or Sprite).\n   *\n   * @param assetKey asset key of the image to\n   * create\n   * @param image image asset corresponding to\n   * the image to create\n   * @returns the instantiated image\n   */\n  public createImage(\n    image: ImageAsset,\n    assetKey: AssetKey\n  ): Phaser.GameObjects.Image | Phaser.GameObjects.Sprite {\n    switch (image.type) {\n      case AssetType.Sprite:\n        this.createAnimation(image, image.config?.start || 0, image.config?.frameRate || 20);\n        return this.getAnimation(image);\n        break;\n      case AssetType.Image:\n        return new Phaser.GameObjects.Image(\n          this.game,\n          image?.config?.centreX || 0,\n          image?.config?.centreY || 0,\n          assetKey\n        );\n        break;\n    }\n  }\n\n  /**\n   * Calls on the game manager for the given\n   * animation type (Object or Background) to\n   * add the given animation to the scene.\n   *\n   * @param image image corresponding to the\n   * animation to display\n   * @param startFrame the frame to start playing\n   * the animation from\n   * @param frameRate frame rate to play the animation\n   * at\n   */\n  public displayAnimation(image: ImageAsset, startFrame: number, frameRate: number) {\n    const img = GameGlobalAPI.getInstance().getAssetByKey(image.path);\n    // Update image config\n    if (img && img.config) {\n      img.config.start = startFrame;\n      img.config.frameRate = frameRate;\n    }\n\n    switch (img.config?.animType) {\n      case AnimType.Object:\n        const currLoc = GameGlobalAPI.getInstance().getCurrLocId();\n        GameGlobalAPI.getInstance().addItem(GameItemType.objects, currLoc, image.key);\n        break;\n      case AnimType.Background:\n        GameGlobalAPI.getInstance().renderBackgroundLayerContainer(image.key);\n        break;\n    }\n  }\n\n  /**\n   * Create a new Sprite object and store a\n   * reference to the instance.\n   *\n   * @param image image corresponding to a sprite\n   * @param startFrame the frame to start playing\n   * the animation from\n   * @param frameRate frame rate to play the animation\n   * at\n   */\n  private createAnimation(image: ImageAsset, startFrame: number, frameRate: number) {\n    if (this.isSprite(image)) {\n      this.removeAnimation(image);\n      const sprite = new Phaser.GameObjects.Sprite(\n        this.game,\n        image.config?.centreX || 0,\n        image.config?.centreY || 0,\n        image.path\n      );\n      const config = {\n        key: image.path,\n        frames: this.game.anims.generateFrameNumbers(image.path, {\n          start: startFrame,\n          end: image.config?.endFrame || 0,\n          first: 0\n        }),\n        frameRate: frameRate,\n        repeat: -1\n      };\n      this.game.anims.create(config);\n      this.animationInstanceMap.set(image.key, sprite);\n    }\n  }\n\n  /**\n   * Play an instantiated sprite.\n   *\n   * @param image image asset corresponding\n   * to the sprite to play\n   */\n  public startAnimation(image: ImageAsset) {\n    if (this.isSprite(image)) {\n      const sprite = this.getAnimation(image);\n      sprite.play(image.path, false);\n      this.game.add.existing(sprite);\n    }\n  }\n\n  /**\n   * Stop playing an instantiated sprite.\n   *\n   * @param image image asset corresponding\n   * to the sprite to stop playing\n   */\n  public stopAnimation(image: ImageAsset) {\n    const sprite = this.animationInstanceMap.get(image.key);\n    if (this.isSprite(image) && sprite && sprite.anims) {\n      sprite.anims.stop();\n    }\n  }\n\n  /**\n   * Destroys and deletes sprite instance corresponding\n   * to the the given image asset from the animation\n   * instance map.\n   *\n   * @param image image asset corresponding to the Sprite\n   * instance to be deleted\n   */\n  public removeAnimation(image: ImageAsset) {\n    const anim = this.animationInstanceMap.get(image.key);\n    if (anim) {\n      this.game.anims.remove(image.path);\n      anim.destroy();\n      this.animationInstanceMap.delete(image.key);\n    }\n  }\n\n  /**\n   * Get the Phaser animation instance corresponding\n   * to the given image asset.\n   *\n   * @param image image asset corresponding to the Sprite\n   * instance to be retrieved\n   * @returns Instantiated Phaser Sprite object corresponding\n   * to given image\n   */\n  public getAnimation(image: ImageAsset): Phaser.GameObjects.Sprite {\n    return mandatory(this.animationInstanceMap.get(image.key), `Image: ${image.path} not found`);\n  }\n\n  /**\n   * Checks whether given image is a sprite\n   *\n   * @param image\n   * @returns true iff image is a sprite\n   */\n  private isSprite = (image: ImageAsset) => image.type === AssetType.Sprite;\n}\n","/**\n * Resize a displayed object to given width and height\n * if both dimensions are specified.\n *\n * If either one of width or height is zero/undefined,\n * then only the given dimension will be used to scale the image\n * proportionally according to aspect-ratio\n *\n * @param obj object to be resized\n * @param width desired width of object\n * @param height desired height of object\n */\nexport function resize(\n  obj: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n  width: number,\n  height?: number\n) {\n  const ratio = obj.displayHeight / obj.displayWidth;\n  if (!width) {\n    obj.displayWidth = height! / ratio;\n    obj.displayHeight = height!;\n  } else {\n    obj.displayWidth = width;\n    obj.displayHeight = height || width * ratio;\n  }\n}\n\n/**\n * Resize the obj display size such that the shorter side fits\n * the width/height i.e. the other dimension will overflow.\n *\n * @param obj obj to be resized\n * @param width width\n * @param height height\n */\nexport function resizeOverflow(\n  obj: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n  width: number,\n  height: number\n) {\n  if (obj.displayWidth > obj.displayHeight) {\n    resize(obj, 0, height);\n  } else {\n    resize(obj, width);\n  }\n}\n\n/**\n * Resize the obj display size such that the longer side fits\n * the width/height i.e. the other dimension will underflow.\n *\n * @param obj obj to be resized\n * @param width width\n * @param height height\n */\nexport function resizeUnderflow(\n  obj: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n  width: number,\n  height: number\n) {\n  if (obj.displayWidth > obj.displayHeight) {\n    resize(obj, width);\n  } else {\n    resize(obj, 0, height);\n  }\n}\n\n/**\n * Multiplies sprite dimension by factor\n *\n * @param obj obj to be resized\n * @param factor number of times to multiply the object's width and height by.\n */\nexport function multiplyDimensions(\n  obj: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n  factor: number\n) {\n  obj.displayWidth *= factor;\n  obj.displayHeight *= factor;\n}\n","import ImageAssets from '../assets/ImageAssets';\nimport { Constants } from '../commons/CommonConstants';\nimport { IBaseScene } from '../commons/CommonTypes';\nimport { DashboardPageManager } from '../dashboard/GameDashboardTypes';\nimport { createButton } from '../utils/ButtonUtils';\nimport { limitNumber } from '../utils/GameUtils';\nimport { resizeUnderflow } from '../utils/SpriteUtils';\nimport { calcListFormatPos } from '../utils/StyleUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport AwardsConstants, {\n  awardDescStyle,\n  awardKeyStyle,\n  awardTitleStyle,\n  listBannerTextStyle\n} from './GameAwardsConstants';\nimport { createAssetKeyPreviewCont, getAwardProps } from './GameAwardsHelper';\nimport { AwardProperty } from './GameAwardsTypes';\n\n/**\n * Manager for an award page on the dashboard (either collectibles or achievements).\n */\nclass GameAwardsManager implements DashboardPageManager {\n  private scene: IBaseScene;\n  private awardsGetter: () => string[]; // The function for retrieving the award keys\n\n  private uiContainer: Phaser.GameObjects.Container | undefined;\n  private previewContainer: Phaser.GameObjects.Container | undefined;\n  private itemsContainer: Phaser.GameObjects.Container | undefined;\n  private activePageNumber: number;\n\n  constructor(scene: IBaseScene, awardsGetter: () => string[]) {\n    this.scene = scene;\n    this.awardsGetter = awardsGetter;\n    this.activePageNumber = 0;\n  }\n\n  /**\n   * Create the container that encapsulate the 'Award Menu' UI.\n   */\n  public createUIContainer() {\n    const awardContainer = new Phaser.GameObjects.Container(this.scene, 0, 0);\n    this.uiContainer = awardContainer;\n\n    // Add page arrows\n    const arrowLeft = createButton(this.scene, {\n      assetKey: ImageAssets.arrow.key,\n      onUp: () => this.nextPage(false)\n    })\n      .setScale(AwardsConstants.arrow.yScale, AwardsConstants.arrow.yScale)\n      .setRotation((-90 * Math.PI) / 180)\n      .setPosition(\n        AwardsConstants.arrow.x - AwardsConstants.arrow.xOffset,\n        AwardsConstants.arrow.y\n      );\n\n    const arrowRight = createButton(this.scene, {\n      assetKey: ImageAssets.arrow.key,\n      onUp: () => this.nextPage(true)\n    })\n      .setScale(AwardsConstants.arrow.xScale, AwardsConstants.arrow.yScale)\n      .setRotation((90 * Math.PI) / 180)\n      .setPosition(\n        AwardsConstants.arrow.x + AwardsConstants.arrow.xOffset,\n        AwardsConstants.arrow.y\n      );\n    awardContainer.add([arrowLeft, arrowRight]);\n\n    // Add preview frame\n    const frame = new Phaser.GameObjects.Sprite(\n      this.scene,\n      AwardsConstants.preview.rect.x,\n      AwardsConstants.preview.rect.y,\n      ImageAssets.popUpFrame.key\n    ).setScale(1.2);\n    awardContainer.add(frame);\n\n    // Add asset key container\n    awardContainer.add(createAssetKeyPreviewCont(this.scene));\n\n    // Set initial page\n    this.setPage();\n\n    return awardContainer;\n  }\n\n  /**\n   * Change the current page in view to a new page.\n   *\n   * Internally, destroy and replace the containers to reflect\n   * the new page.\n   */\n  private setPage() {\n    if (this.uiContainer) {\n      if (this.itemsContainer) this.itemsContainer.destroy();\n\n      // Update\n      this.itemsContainer = this.createItemsContainer();\n      this.uiContainer.add(this.itemsContainer);\n\n      // Set default preview\n      this.setPreview();\n    }\n  }\n\n  /**\n   * Set the preview of the award; shown on the left side of the menu.\n   *\n   * The preview include the title of achievement, object asset, asset key,\n   * as well as asset description.\n   *\n   * @param award award to preview\n   */\n  private setPreview(award?: AwardProperty) {\n    if (this.uiContainer) {\n      if (this.previewContainer) this.previewContainer.destroy();\n      if (!award) return;\n\n      this.previewContainer = new Phaser.GameObjects.Container(\n        this.scene,\n        AwardsConstants.preview.rect.xOffset,\n        AwardsConstants.preview.rect.yOffset\n      );\n\n      // Preview image\n      let previewAsset;\n      if (award.assetKey === Constants.nullInteractionId) {\n        // No asset is associated with the award\n        previewAsset = createBitmapText(\n          this.scene,\n          'No preview available',\n          AwardsConstants.noPreviewTextConfig,\n          awardKeyStyle\n        );\n      } else {\n        const previewRect = AwardsConstants.preview.rect;\n        previewAsset = new Phaser.GameObjects.Sprite(this.scene, 0, 0, award.assetKey);\n        resizeUnderflow(previewAsset, previewRect.dim, previewRect.dim);\n        previewAsset.setPosition(previewRect.x, previewRect.y);\n      }\n\n      // Preview title\n      const previewTitle = createBitmapText(\n        this.scene,\n        award.title,\n        AwardsConstants.preview.titleTextConfig,\n        awardTitleStyle\n      );\n\n      // Preview description\n      const previewDesc = new Phaser.GameObjects.Text(\n        this.scene,\n        AwardsConstants.preview.rect.x,\n        AwardsConstants.preview.rect.y + AwardsConstants.preview.descText.yOffset,\n        award.description,\n        awardDescStyle\n      ).setOrigin(0.5, 0.0);\n\n      // Preview asset key, use only empty string if award is not completed\n      const assetKey = award.completed === false ? '' : award.assetKey;\n      const previewKey = createBitmapText(\n        this.scene,\n        assetKey,\n        AwardsConstants.preview.keyTextConfig,\n        awardKeyStyle\n      );\n\n      // Black tint to overlay the asset if award is not completed\n      const blackTint = new Phaser.GameObjects.Rectangle(\n        this.scene,\n        AwardsConstants.preview.rect.x,\n        AwardsConstants.preview.rect.y,\n        AwardsConstants.preview.rect.dim,\n        AwardsConstants.preview.rect.dim,\n        0\n      ).setAlpha(award.completed ? 0 : 0.8);\n\n      this.previewContainer.add([previewAsset, blackTint, previewTitle, previewDesc, previewKey]);\n      this.uiContainer.add(this.previewContainer);\n    }\n  }\n\n  /**\n   * Flip the page.\n   *\n   * The minimum page number is 0, which represent the\n   * start of the list.\n   *\n   * This method is only able to flip forward (increment the page number)\n   * if there is still items to be shown on the list after what is\n   * shown currently.\n   *\n   * @param next if next is set to true, page number will be incremented\n   *             by one; else it will be decremented by one.\n   */\n  private nextPage(next: boolean) {\n    const currPageNum = this.activePageNumber;\n    const newPageNum = limitNumber(\n      next ? currPageNum + 1 : currPageNum - 1,\n      0,\n      Number.MAX_SAFE_INTEGER\n    );\n    const itemLength = this.getItems(newPageNum).length;\n\n    if (itemLength > 0) {\n      this.activePageNumber = newPageNum;\n      this.setPage();\n    }\n  }\n\n  /**\n   * Create a container that represent the list of objects\n   * to be selected on the screen.\n   */\n  private createItemsContainer() {\n    const itemsContainer = new Phaser.GameObjects.Container(this.scene, 0, 0);\n\n    // Use the previously active page number of the page\n    const items = this.getItems(this.activePageNumber);\n    const itemPositions = calcListFormatPos({\n      numOfItems: items.length,\n      xSpacing: 0,\n      ySpacing: AwardsConstants.list.ySpace\n    });\n\n    // Populate container with all the item buttons\n    itemsContainer.add(\n      items.map((awardProp, index) =>\n        this.createItemButton(\n          awardProp.title,\n          itemPositions[index][0],\n          itemPositions[index][1] + AwardsConstants.list.yStart,\n          () => this.setPreview(awardProp),\n          awardProp.completed !== false\n        )\n      )\n    );\n    return itemsContainer;\n  }\n\n  /**\n   * Format the button information to a UI container, complete with\n   * styling and functionality. This button represent the object selection\n   * button.\n   *\n   * @param obj name of object to be displayed on the button\n   * @param xPos x position of the button\n   * @param yPos y position of the button\n   * @param callback callback to be executed on click\n   */\n  private createItemButton(\n    obj: string,\n    xPos: number,\n    yPos: number,\n    callback: any,\n    completed: boolean\n  ) {\n    const button = createButton(this.scene, {\n      assetKey: ImageAssets.awardsBanner.key,\n      message: obj,\n      textConfig: AwardsConstants.listTextConfig,\n      bitMapTextStyle: listBannerTextStyle,\n      onUp: callback,\n      onHoverEffect: completed\n    }).setPosition(xPos, yPos);\n\n    // For non completed award, they do not hover effect and is less visible\n    if (!completed) button.setAlpha(0.5);\n    return button;\n  }\n\n  /**\n   * Get the list of objects to be shown on the UI.\n   *\n   * List items is dependent on the active page;\n   * and is only limited to a number of items due to UI\n   * size. Hence, which section of list is taken is\n   * dependent on the parameter pageNum.\n   *\n   * @param pageNum page number\n   */\n  private getItems(pageNum: number) {\n    const keys = this.awardsGetter();\n    const itemList = getAwardProps(keys);\n    const itemStartIdx = pageNum * AwardsConstants.itemsPerPage;\n    return itemList.slice(itemStartIdx, itemStartIdx + AwardsConstants.itemsPerPage);\n  }\n}\n\nexport default GameAwardsManager;\n","import { ImageAsset } from '../assets/AssetsTypes';\nimport { screenSize } from '../commons/CommonConstants';\nimport { AssetKey } from '../commons/CommonTypes';\nimport { Layer } from '../layer/GameLayerTypes';\nimport { LocationId } from '../location/GameMapTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport { resizeOverflow } from '../utils/SpriteUtils';\n\n/**\n * Manager for game's background.\n * Loads the background for a location on navigate and change_background action.\n */\nexport default class GameBackgroundManager {\n  private currentBackground?: ImageAsset;\n  /**\n   * Render the background with the asset attached to the location ID.\n   *\n   * @param locationId id of the location\n   */\n  public renderBackgroundLayerContainer(locationId: LocationId) {\n    const assetKey = GameGlobalAPI.getInstance().getLocationAtId(locationId).assetKey;\n\n    this.renderBackgroundImage(assetKey);\n  }\n\n  /**\n   * Render the background with the image associated with the asset key.\n   * The image will be resized (overflow) to fit the screen.\n   *\n   * @param assetKey key of the image\n   */\n  private renderBackgroundImage(assetKey: AssetKey) {\n    GameGlobalAPI.getInstance().clearSeveralLayers([Layer.Background]);\n    this.currentBackground = GameGlobalAPI.getInstance().getAssetByKey(assetKey);\n    const animationManager = GameGlobalAPI.getInstance().getGameManager().getAnimationManager();\n    let asset: Phaser.GameObjects.Image | Phaser.GameObjects.Sprite | undefined;\n\n    if (this.currentBackground) {\n      asset = animationManager.createImage(this.currentBackground, assetKey);\n      animationManager.startAnimation(this.currentBackground);\n\n      resizeOverflow(asset, screenSize.x, screenSize.y);\n      GameGlobalAPI.getInstance().addToLayer(Layer.Background, asset);\n      GameGlobalAPI.getInstance().fadeInLayer(Layer.Background);\n    }\n  }\n}\n","import { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport { ItemId } from '../commons/CommonTypes';\nimport { GameItemType, LocationId } from '../location/GameMapTypes';\nimport { ActivatableSprite } from '../objects/GameObjectTypes';\nimport { StateObserver } from '../state/GameStateTypes';\nimport { BBoxProperty } from './GameBoundingBoxTypes';\n\n/**\n * Manager for rendering interactive bounding boxes in the location.\n */\nclass GameBoundingBoxManager implements StateObserver {\n  private bboxes: Map<ItemId, ActivatableSprite>;\n\n  constructor() {\n    this.bboxes = new Map<ItemId, ActivatableSprite>();\n    GameGlobalAPI.getInstance().watchGameItemType(GameItemType.boundingBoxes, this);\n  }\n\n  /**\n   * Clear the layers, and render all the bboxes available to the location.\n   * Will immediately be shown on the screen.\n   *\n   * @param locationId location in which to render bboxes at\n   */\n  public renderBBoxLayerContainer(locationId: LocationId): void {\n    GameGlobalAPI.getInstance().clearSeveralLayers([Layer.BBox]);\n    const bboxIdsToRender = GameGlobalAPI.getInstance().getGameItemsInLocation(\n      GameItemType.boundingBoxes,\n      locationId\n    );\n\n    // Refresh mapping\n    this.bboxes.clear();\n\n    // Add all the bbox\n    bboxIdsToRender.map(id => this.handleAdd(id));\n  }\n\n  /**\n   * Create the bbox from the given bbox property.\n   * Because we want this sprite to be activatable\n   * by Explore Mode UI, we expose its actionIds\n   * and interactionId\n   *\n   * @param bboxProperty bbox property to be used\n   */\n  private createBBox(bboxProperty: BBoxProperty): ActivatableSprite {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const { x, y, width, height, actionIds, interactionId } = bboxProperty;\n    const bboxSprite = new Phaser.GameObjects.Rectangle(gameManager, x, y, width, height, 0, 0);\n    if (bboxProperty.isInteractive) {\n      bboxSprite.setInteractive();\n    }\n\n    return {\n      sprite: bboxSprite,\n      clickArea: bboxSprite,\n      actionIds,\n      interactionId\n    };\n  }\n\n  /**\n   * Add the bbox, specified by the ID, into the scene\n   * and keep track of it within the mapping.\n   *\n   * Throws error if the bbox property is not available\n   * in the mapping.\n   *\n   * @param id id of bbox\n   * @return {boolean} true if successful, false otherwise\n   */\n  public handleAdd(id: ItemId): boolean {\n    const bboxProp = GameGlobalAPI.getInstance().getBBoxById(id);\n    const bbox = this.createBBox(bboxProp);\n    GameGlobalAPI.getInstance().addToLayer(Layer.BBox, bbox.sprite as Phaser.GameObjects.Rectangle);\n    this.bboxes.set(id, bbox);\n    return true;\n  }\n\n  /**\n   * Mutate the bbox of the given id.\n   *\n   * Internally, will delete and re-add the bbox with\n   * the updated property.\n   *\n   * @param id id of bbox\n   * @return {boolean} true if successful, false otherwise\n   */\n  public handleMutate(id: ItemId): boolean {\n    return this.handleDelete(id) && this.handleAdd(id);\n  }\n\n  /**\n   * Delete the bbox of the given id, if\n   * applicable.\n   *\n   * @param id id of the bbox\n   * @return {boolean} true if successful, false otherwise\n   */\n  public handleDelete(id: ItemId): boolean {\n    const bbox = this.bboxes.get(id);\n    if (bbox) {\n      this.bboxes.delete(id);\n      (bbox.sprite as Phaser.GameObjects.Rectangle).destroy();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get all the rectanlge sprites which can be activated\n   * by external Explore Mode UI\n   */\n  public getActivatables() {\n    return Array.from(this.bboxes.values());\n  }\n}\n\nexport default GameBoundingBoxManager;\n","import { screenCenter, screenSize } from '../commons/CommonConstants';\n\nconst charXOffset = 350;\n\nconst CharConstants = {\n  charWidth: 600,\n  charRect: {\n    x: { Left: charXOffset, Middle: screenCenter.x, Right: screenSize.x - charXOffset }\n  }\n};\n\nexport default CharConstants;\n","import GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport { screenSize } from '../commons/CommonConstants';\nimport { GamePosition, ItemId } from '../commons/CommonTypes';\nimport { Layer } from '../layer/GameLayerTypes';\nimport { GameItemType, LocationId } from '../location/GameMapTypes';\nimport { StateObserver } from '../state/GameStateTypes';\nimport { resize } from '../utils/SpriteUtils';\nimport CharConstants from './GameCharacterConstants';\n\n/**\n * Manager for rendering characters in the location.\n */\nexport default class CharacterManager implements StateObserver {\n  private characterSpriteMap: Map<ItemId, Phaser.GameObjects.Image>;\n\n  constructor() {\n    this.characterSpriteMap = new Map<ItemId, Phaser.GameObjects.Image>();\n    GameGlobalAPI.getInstance().watchGameItemType(GameItemType.characters, this);\n  }\n\n  /**\n   * Clear the layers, and render all the characters available to the location.\n   * Will immediately be shown on the screen.\n   *\n   * @param locationId location in which to render characters at\n   */\n  public renderCharacterLayerContainer(locationId: LocationId): void {\n    const idsToRender = GameGlobalAPI.getInstance().getGameItemsInLocation(\n      GameItemType.characters,\n      locationId\n    );\n\n    // Refresh mapping\n    this.characterSpriteMap.clear();\n\n    // Add all the characters\n    idsToRender.map(id => this.handleAdd(id));\n  }\n\n  /**\n   * Create the character sprite based on its ID,\n   * expression, and put it at the specified location.\n   *\n   * @param characterId id of the character\n   * @param overrideExpression expression of the shown character, optional\n   * @param overridePosition position to put the character at, optional\n   */\n  public createCharacterSprite(\n    characterId: ItemId,\n    overrideExpression?: string,\n    overridePosition?: GamePosition\n  ) {\n    const character = GameGlobalAPI.getInstance().getCharacterById(characterId);\n    const { defaultPosition, defaultExpression, expressions, scale } = character;\n    const characterXPosition = CharConstants.charRect.x[overridePosition || defaultPosition];\n    const assetKey = expressions.get(overrideExpression || defaultExpression)!;\n\n    const characterSprite = new Phaser.GameObjects.Image(\n      GameGlobalAPI.getInstance().getGameManager(),\n      characterXPosition,\n      screenSize.y,\n      assetKey\n    ).setOrigin(0.5, 1);\n\n    resize(characterSprite, CharConstants.charWidth * scale);\n    return characterSprite;\n  }\n\n  /**\n   * Add the character, specified by the ID, into the scene\n   * and keep track of it within the mapping.\n   *\n   * @param id id of character\n   * @return {boolean} true if successful, false otherwise\n\n   */\n  public handleAdd(id: ItemId): boolean {\n    const characterSprite = this.createCharacterSprite(id);\n    GameGlobalAPI.getInstance().addToLayer(Layer.Character, characterSprite);\n    this.characterSpriteMap.set(id, characterSprite);\n    return true;\n  }\n\n  /**\n   * Mutate the character of the given id.\n   *\n   * Internally, will delete and re-add the character with\n   * the updated property.\n   *\n   * @param id id of character\n   * @return {boolean} true if successful, false otherwise\n\n   */\n  public handleMutate(id: ItemId): boolean {\n    return this.handleDelete(id) && this.handleAdd(id);\n  }\n\n  /**\n   * Delete the character of the given id, if\n   * applicable.\n   *\n   * @param id id of the character\n   *  @return {boolean} true if successful, false otherwise\n   */\n  public handleDelete(id: ItemId) {\n    const char = this.characterSpriteMap.get(id);\n    if (char) {\n      this.characterSpriteMap.delete(id);\n      char.destroy();\n      return true;\n    }\n    return false;\n  }\n}\n","import FontAssets from '../assets/FontAssets';\nimport { screenSize } from '../commons/CommonConstants';\nimport { BitmapFontStyle } from '../commons/CommonTypes';\n\nexport const pageBannerTextStyle: BitmapFontStyle = {\n  key: FontAssets.alienLeagueFont.key,\n  size: 35,\n  align: Phaser.GameObjects.BitmapText.ALIGN_LEFT\n};\n\nconst DashboardConstants = {\n  backButton: { y: screenSize.y * 0.3 },\n  page: { yStart: -screenSize.y * 0.3, ySpace: 150 },\n  pageTextConfig: { x: screenSize.x * 0.3, y: 0, oriX: 0.1, oriY: 0.5 },\n  pageArea: { x: -869, y: -412, width: screenSize.x * 0.72, height: screenSize.y * 0.77 }\n};\n\nexport default DashboardConstants;\n","export enum DashboardPage {\n  Log = 'Log',\n  Tasks = 'Tasks',\n  Collectibles = 'Collectibles',\n  Achievements = 'Achievements'\n}\n\nexport interface DashboardPageManager {\n  createUIContainer: () => Phaser.GameObjects.Container;\n}\n","import ImageAssets from '../assets/ImageAssets';\nimport SoundAssets from '../assets/SoundAssets';\nimport { screenCenter, screenSize } from '../commons/CommonConstants';\nimport { IBaseScene, IGameUI } from '../commons/CommonTypes';\nimport { fadeAndDestroy } from '../effects/FadeEffect';\nimport { entryTweenProps, exitTweenProps } from '../effects/FlyEffect';\nimport { Layer } from '../layer/GameLayerTypes';\nimport { GamePhaseType } from '../phase/GamePhaseTypes';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { createButton } from '../utils/ButtonUtils';\nimport { sleep } from '../utils/GameUtils';\nimport { calcListFormatPos } from '../utils/StyleUtils';\nimport DashboardConstants, { pageBannerTextStyle } from './GameDashboardConstants';\nimport { DashboardPage, DashboardPageManager } from './GameDashboardTypes';\n\n/**\n * Manager for the dashboard.\n *\n * Here, the dialogue log and task log are available for browsing.\n */\nclass GameDashboardManager implements IGameUI {\n  private scene: IBaseScene;\n  private pages: DashboardPage[];\n  private pageManagers: DashboardPageManager[];\n\n  private pageMask: Phaser.Display.Masks.GeometryMask;\n  private uiContainer: Phaser.GameObjects.Container | undefined;\n  private pageChosenContainer: Phaser.GameObjects.Container | undefined;\n  private pageUIContainers: Phaser.GameObjects.Container[];\n  private currPageIndex: number;\n\n  constructor(scene: IBaseScene, pages: DashboardPage[], pageManagers: DashboardPageManager[]) {\n    this.scene = scene;\n    this.pages = pages;\n    this.pageManagers = pageManagers;\n    this.pageMask = this.createPageMask();\n    // Used to store each page's UI so they only get created once each time dashboard is opened.\n    this.pageUIContainers = new Array(pages.length);\n    this.currPageIndex = 0; // Use first page as starting page\n    this.scene.getPhaseManager().addPhaseToMap(GamePhaseType.Dashboard, this);\n  }\n\n  /**\n   * Creates the GeometryMask through which each page's UI can be seen.\n   */\n  private createPageMask() {\n    const shape = new Phaser.GameObjects.Graphics(this.scene);\n    // This is the rectangle of the background image\n    const { x, y, width, height } = DashboardConstants.pageArea;\n    shape.fillRect(x, y, width, height);\n    return shape.createGeometryMask();\n  }\n\n  /**\n   * Change the current page in view to a new page.\n   *\n   * Internally, create a container for each page when the page is first\n   * opened or retrieve the container from cache if opened before;\n   * also sets up the blue outline that denotes that the page is chosen.\n   *\n   * @param pageIndex new page\n   */\n  private setPage(pageIndex: number) {\n    if (this.uiContainer) {\n      if (this.pageChosenContainer) this.pageChosenContainer.destroy();\n\n      // Hide current page\n      const currPageUIContainer = this.pageUIContainers[this.currPageIndex];\n      // Only time currPageUIContainer does not exist here is when\n      // the dashboard is opened and the first page is set.\n      if (currPageUIContainer) {\n        currPageUIContainer.setVisible(false);\n      }\n\n      // Show selected page\n      this.currPageIndex = pageIndex;\n      let newPageUIContainer = this.pageUIContainers[this.currPageIndex];\n      if (!newPageUIContainer) {\n        // First time opening this page, UI container not created yet\n        newPageUIContainer = this.pageManagers[this.currPageIndex].createUIContainer();\n        newPageUIContainer.setMask(this.pageMask);\n        this.pageUIContainers[this.currPageIndex] = newPageUIContainer;\n        this.uiContainer.add(newPageUIContainer);\n      } else {\n        newPageUIContainer.setVisible(true);\n      }\n\n      // Set chosen page banner\n      const bannerPos = this.getPageOptPositions();\n      const chosenIdx = this.currPageIndex;\n      const bannerChosen = new Phaser.GameObjects.Sprite(\n        this.scene,\n        bannerPos[chosenIdx][0],\n        bannerPos[chosenIdx][1] + DashboardConstants.page.yStart,\n        ImageAssets.awardsPageChosen.key\n      );\n      this.pageChosenContainer = new Phaser.GameObjects.Container(this.scene, 0, 0, [bannerChosen]);\n      this.uiContainer.add(this.pageChosenContainer);\n    }\n  }\n\n  /**\n   * Create the container that encapsulate the 'Dashboard' UI.\n   */\n  private createUIContainer() {\n    const dashboardContainer = new Phaser.GameObjects.Container(this.scene, 0, 0);\n\n    const blackUnderlay = new Phaser.GameObjects.Rectangle(\n      this.scene,\n      0,\n      0,\n      screenSize.x,\n      4 * screenSize.y,\n      0\n    )\n      .setAlpha(0.7)\n      .setInteractive();\n\n    const dashboardBg = new Phaser.GameObjects.Image(this.scene, 0, 0, ImageAssets.awardsMenu.key);\n    dashboardContainer.add([blackUnderlay, dashboardBg]);\n\n    // Add options\n    const pageOptButtons = this.pages.map((page, pageIndex) => {\n      return {\n        text: page,\n        callback: () => this.setPage(pageIndex)\n      };\n    });\n    const pageOptButtonPositions = this.getPageOptPositions();\n    dashboardContainer.add(\n      pageOptButtons.map((button, index) =>\n        this.createPageOpt(\n          button.text,\n          pageOptButtonPositions[index][0],\n          pageOptButtonPositions[index][1] + DashboardConstants.page.yStart,\n          button.callback\n        )\n      )\n    );\n\n    // Add back button\n    const backButton = this.createPageOpt('Back', 0, DashboardConstants.backButton.y, async () => {\n      if (this.scene.getPhaseManager().isCurrentPhase(GamePhaseType.Dashboard)) {\n        await this.scene.getPhaseManager().popPhase();\n      }\n    });\n    dashboardContainer.add(backButton);\n\n    return dashboardContainer;\n  }\n\n  /**\n   * Get positions of the page options.\n   */\n  private getPageOptPositions() {\n    return calcListFormatPos({\n      numOfItems: Object.keys(DashboardPage).length,\n      xSpacing: 0,\n      ySpacing: DashboardConstants.page.ySpace\n    });\n  }\n\n  /**\n   * Format the button information to a UI container, complete with\n   * styling and functionality. This button represent the page option button,\n   * whether it is 'log' or 'tasks'\n   *\n   * @param text text to be displayed on the button\n   * @param xPos x position of the button\n   * @param yPos y position of the button\n   * @param callback callback to be executed on click\n   */\n  private createPageOpt(text: string, xPos: number, yPos: number, callback: any) {\n    return createButton(this.scene, {\n      assetKey: ImageAssets.awardsPage.key,\n      message: text,\n      textConfig: DashboardConstants.pageTextConfig,\n      bitMapTextStyle: pageBannerTextStyle,\n      onUp: callback\n    }).setPosition(xPos, yPos);\n  }\n\n  /**\n   * Activate the 'Dashboard' UI.\n   *\n   * Usually only called by the phase manager when 'Dashboard' phase is\n   * pushed.\n   */\n  public async activateUI(): Promise<void> {\n    this.uiContainer = this.createUIContainer();\n    this.scene.getLayerManager().addToLayer(Layer.Dashboard, this.uiContainer);\n    this.getSoundManager().playSound(SoundAssets.menuEnter.key);\n\n    // Set initial page\n    this.setPage(this.currPageIndex);\n\n    this.uiContainer.setPosition(screenCenter.x, -screenSize.y);\n    this.pageMask.geometryMask.setPosition(screenCenter.x, -screenSize.y);\n\n    this.scene.tweens.add({\n      targets: [this.uiContainer, this.pageMask.geometryMask],\n      ...entryTweenProps,\n      y: screenCenter.y\n    });\n  }\n\n  /**\n   * Deactivate the 'Dashboard' UI.\n   *\n   * Usually only called by the phase manager when 'Dashboard' phase is\n   * transitioned out.\n   */\n  public async deactivateUI(): Promise<void> {\n    if (this.uiContainer) {\n      // Reload page UIs next time dashboard is opened\n      this.pageUIContainers = new Array(this.pages.length);\n\n      this.uiContainer.setPosition(this.uiContainer.x, this.uiContainer.y);\n      this.getSoundManager().playSound(SoundAssets.menuExit.key);\n\n      this.scene.tweens.add({\n        targets: [this.uiContainer, this.pageMask.geometryMask],\n        ...exitTweenProps\n      });\n\n      await sleep(exitTweenProps.duration);\n      fadeAndDestroy(this.scene, this.uiContainer, { fadeDuration: 50 });\n    }\n  }\n\n  private getSoundManager = () => SourceAcademyGame.getInstance().getSoundManager();\n}\n\nexport default GameDashboardManager;\n","import GameActionConditionChecker from '../action/GameActionConditionChecker';\nimport { DialogueLine, DialogueObject, PartName } from './GameDialogueTypes';\n\n/**\n * Class for keeping track of which line, action, and speaker has to be shown next\n */\nexport default class DialogueGenerator {\n  private currPart: string;\n  private currLineNum: number;\n  private dialogueContent: DialogueObject;\n\n  /**\n   * @param dialogueContent the dialogue to keep track of and to play\n   */\n  public constructor(dialogueContent: DialogueObject) {\n    this.dialogueContent = dialogueContent;\n    this.currPart = dialogueContent.keys().next().value;\n    this.currLineNum = 0;\n  }\n\n  /**\n   * @returns {Promise<DialogueLine>} returns the dialgoueLine that is played next,\n   * based on what is dictated by the dialogueContent\n   */\n  public async generateNextLine(): Promise<DialogueLine> {\n    const dialogueLine = this.dialogueContent.get(this.currPart)![this.currLineNum];\n    if (!dialogueLine || !dialogueLine.line) {\n      return { line: '' };\n    }\n\n    if (dialogueLine.goto) {\n      let currPart: string | null = dialogueLine.goto.part;\n      const conditionCheck = await GameActionConditionChecker.checkAllConditionsSatisfied(\n        dialogueLine.goto.conditions\n      );\n      if (!conditionCheck) {\n        currPart = dialogueLine.goto.altPart;\n      }\n\n      if (!currPart) {\n        this.currLineNum++;\n      } else if (this.dialogueContent.get(currPart)) {\n        this.currPart = currPart;\n        this.currLineNum = 0;\n      } else {\n        return { line: '' };\n      }\n    } else {\n      this.currLineNum++;\n    }\n    return dialogueLine;\n  }\n\n  /**\n   * @param goto new PartName to change currPart to\n   */\n  public updateCurrPart(goto: PartName) {\n    this.currPart = goto;\n    this.currLineNum = 0;\n  }\n}\n","import GameInputManager from '../input/GameInputManager';\nimport GameLayerManager from '../layer/GameLayerManager';\nimport GamePhaseManager from '../phase/GamePhaseManager';\n\n/**\n * Encapsulate style of bitmap text.\n *\n * @prop {string} key - key to the bitmap text\n * @prop {number} size - font size\n * @prop {number} fill = text color, in hex\n * @prop {number} align - text alignment, from Phaser.GameObjects.BitmapText.ALIGN_*\n */\nexport type BitmapFontStyle = {\n  key: string;\n  size: number;\n  align: number;\n};\n\n/**\n * @typedef {string} ItemId - id associated with an item.\n * Item can be any of the following:\n * (Dialogue | ObjectProperty | BboxProperty | Character | Action | AwardProperty)\n */\nexport type ItemId = string;\n\n/** @typedef {string} AssetKey - key associated with an asset */\nexport type AssetKey = string;\n\n/** @typedef {string} AssetPath - path associated with an asset */\nexport type AssetPath = string;\n\n/**\n * Encapsulate tracked interaction.\n *\n * @prop {boolean} isInteractive whether an object is interactive\n * @prop {string} interactionId id of interaction. Must be unique across all interactions.\n */\nexport type TrackInteraction = {\n  isInteractive: boolean;\n  interactionId: string;\n};\n\n/**\n * Interface for classes that represents a UI.\n * The UI must be able to be activated and deactivated.\n *\n * @interface\n */\nexport interface IGameUI {\n  activateUI: () => Promise<void> | void;\n  deactivateUI: () => Promise<void> | void;\n}\n\n/**\n * Enum for common game positions.\n * @readonly\n * @enum {string}\n */\nexport enum GamePosition {\n  Left = 'Left',\n  Middle = 'Middle',\n  Right = 'Right'\n}\n\n/**\n * Enum for common game size.\n * @readonly\n * @enum {string}\n */\nexport enum GameSize {\n  Small = 'Small',\n  Medium = 'Medium',\n  Large = 'Large'\n}\n\n/**\n * Encapsulate text configuration.\n *\n * @prop {number} x x coordinate of the text\n * @prop {number} y y coordinate of the text\n * @prop {number} oriX originX of the text\n * @prop {number} oriY originY of the text\n */\nexport type TextConfig = { x: number; y: number; oriX: number; oriY: number };\n\n/**\n * Interface for basic scene, which incorporates input, phaser, and layer manager.\n * Due to the three managers, the scene should also provide a way to clean up\n * the necessary managers.\n *\n * @interface\n */\nexport interface IBaseScene extends Phaser.Scene {\n  getLayerManager: () => GameLayerManager;\n  getInputManager: () => GameInputManager;\n  getPhaseManager: () => GamePhaseManager;\n  cleanUp: () => void;\n}\n\n/**\n * Interface for scene which possess a layer manager.\n *\n * @interface\n */\nexport interface ILayeredScene extends Phaser.Scene {\n  getLayerManager: () => GameLayerManager;\n}\n","import { Constants } from '../commons/CommonConstants';\n\nexport default class StringUtils {\n  /**\n   * Splits text into several paragraphs, each containing header\n   * string and body string array\n   *\n   * Example input:\n   * [\"objectives\",\n   * \"    talkToHartin\"\n   * \"    completeTask\"]\n   *\n   * Example output:\n   * [ [\"objectives\"], [\"talkToHartin\", \"completeTask\"] ]\n   *\n   * @param lines raw text strings\n   * @returns {Array<[string, string[]]>} several parargraphs that have\n   *                                      been split into head and body\n   */\n  public static splitToParagraph(lines: string[]) {\n    const headerAndBodyLines: [string, string[]][] = [];\n    lines.forEach((line: string) => {\n      if (line.startsWith('\\t') || line.startsWith('    ')) {\n        const content = line.startsWith('\\t') ? line.slice(1) : line.slice(4);\n        if (headerAndBodyLines.length === 0) {\n          console.error('Unexpected tabs');\n          return;\n        }\n        const bodyLines = headerAndBodyLines[headerAndBodyLines.length - 1][1];\n        bodyLines.push(content);\n        return;\n      }\n      headerAndBodyLines.push([line.trim(), []]);\n    });\n    return headerAndBodyLines;\n  }\n\n  /**\n   * Given an array of lines, returns a Map where the keys are the headings\n   * and the value are the lines below each heading.\n   *\n   * @param lines lines to be processed\n   * @param isHeaderFunction predicate that determines the header syntax. This\n   *                         will be ran against every line, so take into account if you want\n   *                         to detect header in the middle of line/in between lines.\n   * @returns {Map<string, string>}\n   */\n  public static mapByHeader(\n    lines: string[],\n    isHeaderFunction: (line: string) => boolean\n  ): Map<string, string[]> {\n    const map = new Map<string, string[]>();\n    if (!isHeaderFunction(lines[0])) {\n      map.set('0', lines);\n      return map;\n    }\n    let currHeader = '';\n    lines.forEach(line => {\n      if (isHeaderFunction(line)) {\n        currHeader = line;\n        map.set(line, []);\n        return;\n      }\n      map.get(currHeader)!.push(line);\n    });\n    return map;\n  }\n\n  /**\n   * Split using separator, but limit number of separators to split with.\n   * After splitting, trim each entry to get rid of whitespaces.\n   *\n   * Example input: splitWithLimit(\"whatHappened, What Happened, Scottie?\\n\", \",\", 1)\n   * Example output: [\"whatHappened\", \"What Happened, Scottie?\"]\n   * Explanation: This splits the string only using the first 1 comma then trims whitespaces\n   *\n   * @param line line to be split\n   * @param sep separator to be used\n   * @param limit limit the number of separators to split the string, undefined if use all separators\n   * @returns {Array<string>}\n   */\n  public static splitWithLimit(line: string, sep: string, limit: number): string[] {\n    if (limit >= 0) {\n      const lines = line.split(sep);\n      const substrings = lines.slice(0, limit);\n      substrings.push(lines.slice(limit).join(sep));\n      return substrings.map((phrase: string) => phrase.trim());\n    }\n    return StringUtils.splitByChar(line, sep);\n  }\n\n  /**\n   * Split using separator. After splitting, trim each entry to get rid of whitespaces.\n   *\n   * @param line line to be split\n   * @param sep separator to be used\n   * @param {Array<string>}\n   */\n  public static splitByChar(line: string, sep: string): string[] {\n    return line.split(sep).map((phrase: string) => phrase.trim());\n  }\n\n  /**\n   * Splits text into string array and removes\n   * lines with only newlines.\n   *\n   * @param text text to split\n   * @returns {Array<string>}\n   */\n  public static splitToLines(text: string): string[] {\n    return text\n      .split('\\n')\n      .map(line => line.trimRight())\n      .filter(line => line !== '');\n  }\n\n  /**\n   * Splits text into string array, removes lines\n   * with only newlines and removes characters that\n   * are commented out in single and multi line\n   * comments\n   *\n   * @param text text to split\n   * @returns {Array<string>}\n   */\n  public static splitToLinesAndRemoveComments(text: string): string[] {\n    return this.removeMultiLineComments(text.split('\\n'), '/*', '*/')\n      .map(line => this.removeSingleLineComment(line, '//'))\n      .map(line => line.trimRight())\n      .filter(line => line !== '');\n  }\n\n  /**\n   * Removes characters from string before/after\n   * specified comment characters\n   *\n   * Example input:\n   * removeSingleLineComment('Hello # World','#',false)\n   *\n   * Example output:\n   * 'Hello '\n   *\n   * @param text text with single line comments\n   * @param commentChars characters to denote comment region\n   * @param removeAfter (optional) true - remove characters after commentChars,\n   *                              false - remove characters before commentChars\n   * @returns {string}\n   */\n  public static removeSingleLineComment(\n    text: string,\n    commentChars: string,\n    removeAfter: boolean = true\n  ) {\n    const commentIndex = text.indexOf(commentChars);\n    return commentIndex === -1\n      ? text\n      : removeAfter\n      ? text.slice(0, commentIndex)\n      : text.slice(commentIndex + commentChars.length);\n  }\n\n  /**\n   * Given an array of lines with a\n   * a subset of characters commented out\n   * by specified open and close comment\n   * characters, Returns an array of lines\n   * with characters inside commented regions\n   * removed\n   *\n   * Example input:\n   * removeMultiLineComments(\n   * ['objectives',\n   * '    checkedScreen',\n   * '    talkedToLokKim1',\n   * '/!    talkedToLokKim2',\n   * '    talkedToLokKim3!/'],\n   *  '/!', '!/');\n   *\n   * Example output:\n   * ['objectives',\n   * '    checkedScreen',\n   * '    talkedToLokKim1']\n   *\n   * @param lines lines to remove comments from\n   * @param openCommentChars characters to denote open comment\n   * @param closeCommentChars characters to denote close comment\n   * @returns {Array<string>}\n   */\n  public static removeMultiLineComments(\n    lines: string[],\n    openCommentChars: string,\n    closeCommentChars: string\n  ): string[] {\n    const newLines = [];\n    let commentOpen = false;\n\n    for (let l = 0; l < lines.length; l++) {\n      const line = lines[l];\n      const commentRegions: [number, number][] = [];\n      const openIns = this.findAllInstances(line, openCommentChars);\n      const closeIns = this.findAllInstances(line, closeCommentChars);\n      let activeIndex = -1; // current valid comment index in line\n      let openInd = 0; // open comment index in openIns\n      let closeInd = 0; // close comment index in closeIns\n      let region = commentOpen ? [0] : [];\n\n      while (openInd < openIns.length || closeInd < closeIns.length) {\n        const prevActive = activeIndex;\n        activeIndex = commentOpen\n          ? closeIns[closeInd++] + closeCommentChars.length\n          : openIns[openInd++];\n        if (activeIndex <= prevActive) {\n          console.error(`Comment mismatch: Line ${l + 1},  Pos ${activeIndex + 1}`);\n          activeIndex = prevActive;\n        } else {\n          region.push(activeIndex);\n          commentOpen = !commentOpen;\n        }\n        if (region.length === 2) {\n          commentRegions.push([region[0], region[1]]);\n          region = [];\n        }\n      }\n      if (region.length === 1) {\n        commentRegions.push([region[0], line.length]);\n      }\n      newLines.push(this.removeCommentRegions(line, commentRegions));\n    }\n    return newLines;\n  }\n\n  /**\n   * Return a string whose content within the regions is removed\n   * for each region; regions contain two elements: the index of\n   * the first character to ignore, and the index of the last character\n   * to ignore + 1, in the text string\n   *\n   * Example input (comment characters: '/!' and '!/'):\n   * removeCommentRegions('Sour/!ce Academ!/y', [[4,17]])\n   *\n   * Example output:\n   * 'Soury'\n   *\n   * @param text the text to be removed from\n   * @param regions contains all the regions of comments\n   * @returns {string}\n   */\n  public static removeCommentRegions(text: string, regions: [number, number][]) {\n    let newString = '';\n    let prevEnd = 0;\n    regions.forEach(arr => {\n      newString += text.slice(prevEnd, arr[0]);\n      prevEnd = arr[1];\n    });\n    newString += text.slice(prevEnd, text.length);\n    return newString;\n  }\n\n  /**\n   * Return an array of the starting indices of the substring within the text string\n   *\n   * @param text\n   * @param substring substring to search for\n   * @returns {Array<number>}\n   */\n  public static findAllInstances(text: string, substring: string): number[] {\n    const indices = [];\n    let index = text.indexOf(substring);\n    while (index !== -1) {\n      indices.push(index);\n      index = text.indexOf(substring, index + 1);\n    }\n    return indices;\n  }\n\n  /**\n   * Capitalise first letter.\n   *\n   * @param word text to be capitalized\n   * @returns {string}\n   */\n  public static capitalize(word: string) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }\n\n  /**\n   * Turns snake case to capitalized case.\n   * Only accounts for letters, i.e. numbers and symbols will be discarded.\n   * e.g. snake_case_to_capitalized -> Snake Case To Capitalized\n   *\n   * @param name text to be capitalized\n   * @returns {string}\n   */\n  public static toCapitalizedWords(name: string) {\n    const words = name.match(/[A-Za-z][a-z]*/g) || [];\n\n    return words.map(StringUtils.capitalize).join(' ');\n  }\n\n  /**\n   * Converts the given number into string. The given number\n   * is rounded down.\n   *\n   * @param num number to be converted\n   */\n  public static toIntString(num: number) {\n    return Math.floor(num).toString();\n  }\n\n  /**\n   * Check whether given string is empty string.\n   *\n   * @param str string to check\n   */\n  public static isEmptyString(str: string) {\n    return str === Constants.nullInteractionId;\n  }\n}\n","import ImageAssets from '../assets/ImageAssets';\nimport { SpeakerDetail } from '../character/GameCharacterTypes';\nimport { screenCenter, screenSize } from '../commons/CommonConstants';\nimport { GamePosition, ItemId } from '../commons/CommonTypes';\nimport { Layer } from '../layer/GameLayerTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport StringUtils from '../utils/StringUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport DialogueConstants, { speakerTextStyle } from './GameDialogueConstants';\n\n/**\n * Class that manages speakerbox portion of the dialgoue box\n * And renders the characters in Speaker Layer\n *\n */\nexport default class DialogueSpeakerRenderer {\n  private currentSpeakerId?: string;\n\n  /**\n   * Changes the speaker shown in the speaker box and the speaker rendered on screen\n   *\n   * @param newSpeakerDetail the details about the new speaker,\n   * including his characaterId, expression and position.\n   *\n   * Undefined - if no speaker changes are involved in the dialogue line.\n   * Null - if there is no speaker for the line\n   */\n  public changeSpeakerTo(newSpeakerDetail?: SpeakerDetail | null) {\n    if (newSpeakerDetail === undefined) return;\n\n    this.currentSpeakerId &&\n      GameGlobalAPI.getInstance().clearSeveralLayers([Layer.Speaker, Layer.SpeakerBox]);\n    this.showNewSpeaker(newSpeakerDetail);\n  }\n\n  private showNewSpeaker(newSpeakerDetail: SpeakerDetail | null) {\n    if (newSpeakerDetail) {\n      this.drawSpeakerSprite(newSpeakerDetail);\n      this.drawSpeakerBox(newSpeakerDetail.speakerId);\n    }\n  }\n\n  private drawSpeakerBox(speakerId: ItemId) {\n    if (speakerId === 'narrator') return;\n    const speakerContainer =\n      speakerId === 'you'\n        ? this.createSpeakerBox(this.getUsername(), GamePosition.Right)\n        : this.createSpeakerBox(\n            GameGlobalAPI.getInstance().getCharacterById(speakerId).name,\n            GamePosition.Left\n          );\n    GameGlobalAPI.getInstance().addToLayer(Layer.SpeakerBox, speakerContainer);\n  }\n\n  private drawSpeakerSprite({ speakerId, speakerPosition, expression }: SpeakerDetail) {\n    this.currentSpeakerId = speakerId;\n    if (speakerId === 'you' || speakerId === 'narrator') {\n      return;\n    }\n    const speakerSprite = GameGlobalAPI.getInstance().createCharacterSprite(\n      speakerId,\n      expression,\n      speakerPosition\n    );\n    GameGlobalAPI.getInstance().addToLayer(Layer.Speaker, speakerSprite);\n  }\n\n  private createSpeakerBox(text: string, position: GamePosition) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const container = new Phaser.GameObjects.Container(gameManager, 0, 0);\n    const rectangle = new Phaser.GameObjects.Image(\n      gameManager,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.speakerBox.key\n    ).setAlpha(0.8);\n\n    const speakerText = createBitmapText(\n      gameManager,\n      '',\n      DialogueConstants.speakerTextConfig,\n      speakerTextStyle\n    );\n\n    if (position === GamePosition.Right) {\n      rectangle.displayWidth *= -1;\n      speakerText.x = screenSize.x - speakerText.x;\n    }\n\n    container.add([rectangle, speakerText]);\n    speakerText.text = StringUtils.capitalize(text);\n    return container;\n  }\n\n  public getUsername = () => SourceAcademyGame.getInstance().getAccountInfo().name;\n}\n","import SoundAssets from '../assets/SoundAssets';\nimport { ItemId } from '../commons/CommonTypes';\nimport { promptWithChoices } from '../effects/Prompt';\nimport { Layer } from '../layer/GameLayerTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { textTypeWriterStyle } from './GameDialogueConstants';\nimport DialogueGenerator from './GameDialogueGenerator';\nimport DialogueRenderer from './GameDialogueRenderer';\nimport DialogueSpeakerRenderer from './GameDialogueSpeakerRenderer';\n\n/**\n * Given a dialogue Id, this manager renders the correct dialogue.\n * It displays the lines, speakers, and performs actions\n * whenever players click on the dialogue box\n */\nexport default class DialogueManager {\n  private speakerRenderer?: DialogueSpeakerRenderer;\n  private dialogueRenderer?: DialogueRenderer;\n  private dialogueGenerator?: DialogueGenerator;\n\n  /**\n   * @param dialogueId the dialogue Id of the dialogue you want to play\n   *\n   * @returns {Promise} the promise that resolves when the entire dialogue has been played\n   */\n  public async showDialogue(dialogueId: ItemId): Promise<void> {\n    const dialogue = GameGlobalAPI.getInstance().getDialogueById(dialogueId);\n\n    this.dialogueRenderer = new DialogueRenderer(textTypeWriterStyle);\n    this.dialogueGenerator = new DialogueGenerator(dialogue.content);\n    this.speakerRenderer = new DialogueSpeakerRenderer();\n\n    GameGlobalAPI.getInstance().addToLayer(\n      Layer.Dialogue,\n      this.dialogueRenderer.getDialogueContainer()\n    );\n\n    GameGlobalAPI.getInstance().fadeInLayer(Layer.Dialogue);\n    await new Promise(resolve => this.playWholeDialogue(resolve as () => void));\n    this.getDialogueRenderer().destroy();\n    this.getSpeakerRenderer().changeSpeakerTo(null);\n  }\n\n  private async playWholeDialogue(resolve: () => void) {\n    await this.showNextLine(resolve);\n    this.getDialogueRenderer()\n      .getDialogueBox()\n      .on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, async () => await this.showNextLine(resolve));\n  }\n\n  private async showNextLine(resolve: () => void) {\n    GameGlobalAPI.getInstance().playSound(SoundAssets.dialogueAdvance.key);\n    const { line, speakerDetail, actionIds, prompt } =\n      await this.getDialogueGenerator().generateNextLine();\n    const lineWithName = line.replace('{name}', this.getUsername());\n    this.getDialogueRenderer().changeText(lineWithName);\n    this.getSpeakerRenderer().changeSpeakerTo(speakerDetail);\n\n    // Store the current line into the storage\n    GameGlobalAPI.getInstance().storeDialogueLine(lineWithName, speakerDetail);\n\n    // Disable interactions while processing actions\n    GameGlobalAPI.getInstance().enableSprite(this.getDialogueRenderer().getDialogueBox(), false);\n    if (prompt) {\n      const response = await promptWithChoices(\n        GameGlobalAPI.getInstance().getGameManager(),\n        prompt.promptTitle,\n        prompt.choices.map(choice => choice[0])\n      );\n      this.getDialogueGenerator().updateCurrPart(prompt.choices[response][1]);\n    }\n    await GameGlobalAPI.getInstance().processGameActionsInSamePhase(actionIds);\n    GameGlobalAPI.getInstance().enableSprite(this.getDialogueRenderer().getDialogueBox(), true);\n\n    if (!line) resolve();\n  }\n\n  private getDialogueGenerator = () => this.dialogueGenerator as DialogueGenerator;\n  private getDialogueRenderer = () => this.dialogueRenderer as DialogueRenderer;\n  private getSpeakerRenderer = () => this.speakerRenderer as DialogueSpeakerRenderer;\n\n  public getUsername = () => SourceAcademyGame.getInstance().getAccountInfo().name;\n}\n","import { SpeakerDetail } from '../character/GameCharacterTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { DialogueStorageLine } from './GameDialogueTypes';\n\n/**\n * Class for keeping track of all dialogue and actions shown to the player, in sequence.\n *\n * The storage is local to the instance, and should be reset when a user completes the\n * current checkpoint.\n */\nexport default class GameDialogueStorageManager {\n  private dialogueStorage?: Array<DialogueStorageLine>;\n\n  /**\n   * Stores a line of dialogue into the current storage instance.\n   * Only the dialogue line and the speaker details are passed into the method.\n   *\n   * @param newLine the dialogue line to be stored.\n   * @param newSpeakerDetail the SpeakerDetail object that contains the speaker id.\n   */\n  public storeLine(newLine: string, newSpeakerDetail?: SpeakerDetail | null) {\n    if (!newSpeakerDetail) return;\n\n    if (!this.dialogueStorage) {\n      this.dialogueStorage = new Array<DialogueStorageLine>();\n    }\n    const newDialogue = {\n      speaker: this.getSpeakerName(newSpeakerDetail),\n      line: newLine\n    };\n    this.dialogueStorage.push(newDialogue);\n  }\n\n  /**\n   * Gets the speaker name from the given SpeakerDetail object, by converting the speaker id\n   * stored in the SpeakerDetail object into a String containing the actual name of the Speaker,\n   * using the getCharacterById method available in GameGlobalAPI.\n   *\n   * @param speakerDetail the SpeakerDetail object that contains the speaker id.\n   *\n   * @returns the speaker name corresponding to the speaker id inside the given SpeakerDetail object.\n   */\n  private getSpeakerName(speakerDetail: SpeakerDetail | null) {\n    const speakerId = speakerDetail?.speakerId;\n\n    // Special cases are when the id is 'you', which is converted to the player's username, and 'narrator', which simply returns 'Narrator'.\n    // The getCharacterById method is primarily used to obtain the character name to be displayed on the game's dialogue box, and so the method returns '' when given 'narrator'.\n    return !speakerId\n      ? ''\n      : speakerId === 'you'\n      ? this.getUsername()\n      : speakerId === 'narrator'\n      ? 'Narrator'\n      : GameGlobalAPI.getInstance().getCharacterById(speakerId).name;\n  }\n\n  /**\n   * Clears the current iteration of the dialogue storage.\n   * This method should be called at the end of the chapter, when transitioning to the next checkpoint.\n   */\n  public clearDialogueStorage() {\n    this.dialogueStorage = new Array<DialogueStorageLine>();\n  }\n\n  /**\n   * Returns the current dialogue storage as an Array of strings.\n   *\n   * This method is called by the Dashboard in order to fetch the dialogues currently stored,\n   * and subsequently display them in order.\n   *\n   * @returns the Dialogue storage as an Array of strings.\n   */\n  public getDialogueStorage(): Array<String> {\n    if (!this.dialogueStorage) {\n      return new Array<String>();\n    }\n    return this.dialogueStorage.map(storageLine => `${storageLine.speaker}:\\n${storageLine.line}`);\n  }\n\n  public getUsername = () => SourceAcademyGame.getInstance().getAccountInfo().name;\n}\n","import { screenCenter } from '../commons/CommonConstants';\nimport { blackScreen } from './FadeEffect';\n\nconst barWidth = 320;\nconst barHeight = 50;\nconst padding = 10;\n\nconst innerWidth = barWidth - padding * 2;\nconst innerHeight = barHeight - padding * 2;\nconst barX = screenCenter.x - barWidth / 2;\nconst barY = screenCenter.y;\nconst innerBarX = barX + padding;\nconst innerBarY = barY + padding;\n\n/**\n * A function to display a loading bar while a scene's preload is in progress\n *\n * @param scene - the scene in which to add a loading screen when preload is occuring\n */\nexport function addLoadingScreen(scene: Phaser.Scene) {\n  let progressBar: Phaser.GameObjects.Graphics;\n  let progressBox: Phaser.GameObjects.Graphics;\n  let loadingScreenBg: Phaser.GameObjects.GameObject;\n\n  scene.load.on('start', () => {\n    loadingScreenBg = scene.add.existing(blackScreen(scene));\n    progressBar = scene.add.graphics();\n    progressBox = scene.add.graphics();\n    progressBox.fillStyle(0x222222, 0.8);\n    progressBox.fillRect(barX, barY, barWidth, barHeight);\n  });\n\n  scene.load.on('progress', (value: number) => {\n    progressBar.clear();\n    progressBar.fillStyle(0xffffff, 1);\n    progressBar.fillRect(innerBarX, innerBarY, innerWidth * value, innerHeight);\n  });\n\n  scene.load.on('complete', function () {\n    progressBar.destroy();\n    progressBox.destroy();\n    loadingScreenBg.destroy();\n  });\n}\n","import SoundAssets from '../assets/SoundAssets';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { calcTableFormatPos, HexColor } from '../utils/StyleUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport { Constants, screenSize } from './CommonConstants';\nimport { AssetKey, BitmapFontStyle, TextConfig } from './CommonTypes';\n\ntype RadioButtonChoiceConfig = {\n  circleDim: number;\n  checkedDim: number;\n  outlineThickness: number;\n};\n\ntype RadioButtonConfig = {\n  choices: string[];\n  defaultChoiceIdx?: number;\n  maxXSpace?: number;\n  radioChoiceConfig?: RadioButtonChoiceConfig;\n  choiceTextConfig?: TextConfig;\n  bitmapTextStyle?: BitmapFontStyle;\n};\n\n/**\n * A container that is contains radio buttons.\n * Radio buttons only allows user to choose only one of the\n * predefined set of mutually exclusive options.\n *\n * The radio buttons will be arranged horizontally,\n * with even spacing.\n *\n * The radio button's choice will only be displayed when\n * the given radio button is selected so as to not clutter the display.\n */\nclass CommonRadioButton extends Phaser.GameObjects.Container {\n  private buttonClickSoundKey: AssetKey;\n\n  private activeChoice: Phaser.GameObjects.Container | undefined;\n  private activeChoiceIdx: number;\n  private choices: string[];\n  private buttonPositions: Array<[number, number]>;\n\n  private radioChoiceConfig: RadioButtonChoiceConfig;\n  private choiceTextConfig: TextConfig;\n  private bitmapTextStyle: BitmapFontStyle;\n\n  /**\n   * @param scene scene for the container to attach to\n   * @param choices displayed choices, in string, for the radio buttons.\n   * @param defaultChoiceIdx index of default choice, optional\n   * @param maxXSpace maximum horizontal space to be used by the radio buttons, optional\n   * @param circleDim diameter of the radio button, optional\n   * @param checkedDim diameter of the 'checked' radio button; commonly smaller than circleDim, optional\n   * @param outlineThickness if not 0, apply stroke effect on the radio button, optional\n   * @param choiceTextConfig text config to be applied to the displayed choice.\n   *                         The X, Y are relative to each individual radio button.\n   *                         Using this, we can specify where the choice should appear\n   *                         e.g. on top of the radio button, on the side of radio button, optional\n   * @param bitmapTextStyle style to be applied to the choices, optional\n   * @param x x coordinate of the container, optional\n   * @param y y coordinate of the container, optional\n   * @param soundManager if defined, the radio button will play sounds when clicked, optional\n   * @param buttonClickSoundKey require soundManager to be defined; Sound key to be played when\n   *                            button is clicked, optioanl\n   */\n  constructor(\n    scene: Phaser.Scene,\n    {\n      choices,\n      defaultChoiceIdx = 0,\n      maxXSpace = screenSize.x,\n      radioChoiceConfig = {\n        circleDim: 20,\n        checkedDim: 10,\n        outlineThickness: 5\n      },\n      choiceTextConfig = { x: 0, y: 0, oriX: 0.5, oriY: 0.5 },\n      bitmapTextStyle = Constants.defaultFontStyle\n    }: RadioButtonConfig,\n    x?: number,\n    y?: number,\n    buttonClickSoundKey: AssetKey = SoundAssets.radioButtonClick.key\n  ) {\n    super(scene, x, y);\n    this.activeChoiceIdx = defaultChoiceIdx;\n    this.choices = choices;\n    this.choiceTextConfig = choiceTextConfig;\n    this.bitmapTextStyle = bitmapTextStyle;\n    this.radioChoiceConfig = radioChoiceConfig;\n    this.buttonClickSoundKey = buttonClickSoundKey;\n\n    const buttons = this.getRadioButtons(choices);\n    this.buttonPositions = calcTableFormatPos({\n      numOfItems: buttons.length,\n      maxXSpace: maxXSpace\n    });\n\n    this.renderRadioButtons(buttons, this.buttonPositions, this.radioChoiceConfig);\n    this.activate(defaultChoiceIdx);\n  }\n\n  private getRadioButtons(choices: string[]) {\n    return choices.map((choice, index) => {\n      return {\n        text: choice,\n        callback: () => this.activate(index)\n      };\n    });\n  }\n\n  private renderRadioButtons(\n    buttons: { text: string; callback: any }[],\n    buttonPos: Array<[number, number]>,\n    radioChoiceConfig: RadioButtonChoiceConfig\n  ) {\n    this.add(\n      buttons.map((button, index) =>\n        this.createRadioButton(\n          buttonPos[index][0],\n          buttonPos[index][1],\n          button.callback,\n          radioChoiceConfig\n        )\n      )\n    );\n  }\n\n  private createRadioButton(\n    xPos: number,\n    yPos: number,\n    callback: any,\n    radioChoiceConfig: RadioButtonChoiceConfig\n  ) {\n    return new Phaser.GameObjects.Ellipse(\n      this.scene,\n      xPos,\n      yPos,\n      radioChoiceConfig.circleDim,\n      radioChoiceConfig.circleDim,\n      HexColor.lightBlue\n    )\n      .setStrokeStyle(radioChoiceConfig.outlineThickness, HexColor.darkBlue)\n      .setInteractive({ useHandCursor: true })\n      .addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, () => {\n        SourceAcademyGame.getInstance().getSoundManager().playSound(this.buttonClickSoundKey);\n        callback();\n      });\n  }\n\n  private activate(id: number): void {\n    this.activeChoiceIdx = id;\n\n    // Render checked option\n    if (this.activeChoice) this.activeChoice.destroy();\n\n    this.activeChoice = new Phaser.GameObjects.Container(\n      this.scene,\n      this.buttonPositions[id][0],\n      this.buttonPositions[id][1]\n    );\n    const choiceText = createBitmapText(\n      this.scene,\n      this.choices[id],\n      this.choiceTextConfig,\n      this.bitmapTextStyle\n    );\n    const optionChecked = new Phaser.GameObjects.Ellipse(\n      this.scene,\n      0,\n      0,\n      this.radioChoiceConfig.checkedDim,\n      this.radioChoiceConfig.checkedDim,\n      HexColor.darkBlue\n    );\n    this.activeChoice.add([choiceText, optionChecked]);\n\n    this.add(this.activeChoice);\n  }\n\n  public getValueIdx(): number {\n    return this.activeChoiceIdx;\n  }\n\n  public getChoices(): string[] {\n    return this.choices;\n  }\n\n  public getChosenChoice(): string {\n    if (this.activeChoiceIdx < this.choices.length) {\n      return this.choices[this.activeChoiceIdx];\n    }\n    return Constants.nullInteractionId;\n  }\n}\n\nexport default CommonRadioButton;\n","import FontAssets from '../../assets/FontAssets';\nimport { screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\n\nexport const optionTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 25,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const optionHeaderTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 35,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const applySettingsTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst SettingsConstants = {\n  optHeaderTextConfig: { x: screenSize.x * 0.25, y: 0, oriX: 0.5, oriY: 0.75 },\n  opt: { x: 140, xSpace: screenSize.x * 0.4, ySpace: screenSize.y * 0.7 },\n  radioButtonsTextConfig: { x: 0, y: -50, oriX: 0.5, oriY: 0.25 },\n  volContainerOpts: ['0', '0.25', '0.5', '1.0', '1.5', '2.0']\n};\n\nexport default SettingsConstants;\n","import FontAssets from '../assets/FontAssets';\nimport { screenCenter, screenSize } from '../commons/CommonConstants';\nimport { BitmapFontStyle } from '../commons/CommonTypes';\n\nexport const escapeOptButtonStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const volumeRadioOptTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 20,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const optTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst EscapeConstants = {\n  button: { y: screenSize.y * 0.15 },\n  escapeOptTextConfig: { x: 0, y: 0, oriX: 0.37, oriY: 0.75 },\n  settings: { yOffset: -screenCenter.y * 0.1, ySpace: screenSize.y * 0.3 },\n  settingsTextConfig: { x: screenSize.x * 0.38, y: -screenCenter.y * 0.1, oriX: 0.0, oriY: 0.5 },\n  radioButtons: { xSpace: screenSize.x * 0.2 },\n  radioChoiceTextConfig: { x: 0, y: -45, oriX: 0.5, oriY: 0.25 },\n  volOpt: { x: screenSize.x * 0.05 }\n};\n\nexport default EscapeConstants;\n","import ImageAssets from '../assets/ImageAssets';\nimport SoundAssets from '../assets/SoundAssets';\nimport { screenCenter, screenSize } from '../commons/CommonConstants';\nimport CommonRadioButton from '../commons/CommonRadioButton';\nimport { IBaseScene, IGameUI } from '../commons/CommonTypes';\nimport { Layer } from '../layer/GameLayerTypes';\nimport { GamePhaseType } from '../phase/GamePhaseTypes';\nimport SettingsConstants from '../scenes/settings/SettingsConstants';\nimport SourceAcademyGame, { GameType } from '../SourceAcademyGame';\nimport { createButton } from '../utils/ButtonUtils';\nimport { calcTableFormatPos, Direction } from '../utils/StyleUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport EscapeConstants, {\n  escapeOptButtonStyle,\n  optTextStyle,\n  volumeRadioOptTextStyle\n} from './GameEscapeConstants';\n\n/**\n * Manager in charge of rendering and destroying the escape manager in a scene\n */\nclass GameEscapeManager implements IGameUI {\n  private bgmVolumeRadioButtons: CommonRadioButton | undefined;\n  private sfxVolumeRadioButtons: CommonRadioButton | undefined;\n  private scene: IBaseScene;\n\n  /**\n   * Initialises the escape manager UI\n   *\n   * @param scene - the scene to add escape manager\n   */\n  public constructor(scene: IBaseScene) {\n    this.scene = scene;\n    this.scene.getPhaseManager().addPhaseToMap(GamePhaseType.EscapeMenu, this);\n  }\n\n  /**\n   * Create the container that encapsulate the 'Escape Menu' UI,\n   * i.e. the background, the buttons, and the options.\n   */\n  private createUIContainer() {\n    const escapeMenuContainer = new Phaser.GameObjects.Container(this.scene, 0, 0);\n\n    const escapeMenuBg = new Phaser.GameObjects.Image(\n      this.scene,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.escapeMenuBackground.key\n    )\n      .setDisplaySize(screenSize.x, screenSize.y)\n      .setInteractive({ pixelPerfect: true });\n    escapeMenuContainer.add(escapeMenuBg);\n\n    // Settings header\n    const settings = this.getSettings();\n    const settingsPos = calcTableFormatPos({\n      direction: Direction.Column,\n      numOfItems: settings.length,\n      maxYSpace: EscapeConstants.settings.ySpace\n    });\n    escapeMenuContainer.add(\n      settings.map((setting, index) =>\n        createBitmapText(\n          this.scene,\n          setting,\n          {\n            ...EscapeConstants.settingsTextConfig,\n            y: settingsPos[index][1] + EscapeConstants.settingsTextConfig.y\n          },\n          optTextStyle\n        )\n      )\n    );\n\n    // Get user settings, to use as default choice in the radio buttons\n    const { bgmVolume, sfxVolume } = this.getSettingsSaveManager().getSettings();\n    const sfxVolIdx = SettingsConstants.volContainerOpts.findIndex(\n      value => parseFloat(value) === sfxVolume\n    );\n    const bgmVolIdx = SettingsConstants.volContainerOpts.findIndex(\n      value => parseFloat(value) === bgmVolume\n    );\n\n    // SFX Radio buttons\n    this.sfxVolumeRadioButtons = this.createSettingsRadioOptions(sfxVolIdx, settingsPos[0][1]);\n    // BGM Radio buttons\n    this.bgmVolumeRadioButtons = this.createSettingsRadioOptions(bgmVolIdx, settingsPos[1][1]);\n    escapeMenuContainer.add([this.sfxVolumeRadioButtons, this.bgmVolumeRadioButtons]);\n\n    // Get all the buttons\n    const buttons = this.getOptButtons();\n    const buttonPositions = calcTableFormatPos({\n      numOfItems: buttons.length\n    });\n\n    escapeMenuContainer.add(\n      buttons.map((button, index) =>\n        this.createEscapeOptButton(\n          button.text,\n          buttonPositions[index][0],\n          buttonPositions[index][1] + EscapeConstants.button.y,\n          button.callback\n        )\n      )\n    );\n\n    return escapeMenuContainer;\n  }\n\n  /**\n   * Returns all the option available in the escape menu.\n   *\n   * For SFX and BGM, these are pure headers as the options, interactivity, and functionality\n   * are handled separately (radio buttons)\n   */\n  private getSettings() {\n    return ['SFX', 'BGM'];\n  }\n\n  /**\n   * Create radio buttons matching the escape menu style.\n   *\n   * @param defaultChoiceIdx default option for the radio button\n   * @param yPos y position of the radio buttons\n   */\n  private createSettingsRadioOptions(defaultChoiceIdx: number, yPos: number) {\n    return new CommonRadioButton(\n      this.scene,\n      {\n        choices: SettingsConstants.volContainerOpts,\n        defaultChoiceIdx: defaultChoiceIdx,\n        maxXSpace: EscapeConstants.radioButtons.xSpace,\n        radioChoiceConfig: {\n          circleDim: 15,\n          checkedDim: 10,\n          outlineThickness: 3\n        },\n        choiceTextConfig: EscapeConstants.radioChoiceTextConfig,\n        bitmapTextStyle: volumeRadioOptTextStyle\n      },\n      EscapeConstants.volOpt.x,\n      -screenCenter.y + yPos + EscapeConstants.settings.yOffset\n    );\n  }\n\n  /**\n   * Get the escape options buttons preset to be formatted later.\n   * The preset includes the text to be displayed on the button and\n   * its functionality.\n   */\n  private getOptButtons() {\n    return [\n      {\n        text: 'Main Menu',\n        callback: () => {\n          this.cleanUp();\n          if (SourceAcademyGame.getInstance().isGameType(GameType.Simulator)) {\n            this.scene.scene.start('StorySimulatorMenu');\n          } else {\n            this.scene.scene.start('MainMenu');\n          }\n        }\n      },\n      {\n        text: 'Continue',\n        callback: async () => {\n          if (this.scene.getPhaseManager().isCurrentPhase(GamePhaseType.EscapeMenu)) {\n            await this.scene.getPhaseManager().popPhase();\n          }\n        }\n      },\n      {\n        text: 'Apply Settings',\n        callback: () => this.applySettings()\n      }\n    ];\n  }\n\n  /**\n   * Format the button information to a UI container, complete with\n   * styling and functionality.\n   *\n   * @param text text to be displayed on the button\n   * @param xPos x position of the button\n   * @param yPos y position of the button\n   * @param callback callback to be executed on click\n   */\n  private createEscapeOptButton(text: string, xPos: number, yPos: number, callback: any) {\n    return createButton(this.scene, {\n      assetKey: ImageAssets.mediumButton.key,\n      message: text,\n      textConfig: EscapeConstants.escapeOptTextConfig,\n      bitMapTextStyle: escapeOptButtonStyle,\n      onUp: callback\n    }).setPosition(xPos, yPos);\n  }\n\n  /**\n   * Process the current settings on escape menu, save, and apply the settings.\n   * Escape Menu is responsible in contacting various managers to apply the settings.\n   */\n  private async applySettings() {\n    const sfxVol = this.sfxVolumeRadioButtons\n      ? parseFloat(this.sfxVolumeRadioButtons.getChosenChoice())\n      : 1;\n    const bgmVol = this.bgmVolumeRadioButtons\n      ? parseFloat(this.bgmVolumeRadioButtons.getChosenChoice())\n      : 1;\n\n    // Save settings\n    const newSettings = { bgmVolume: bgmVol, sfxVolume: sfxVol };\n    await this.getSettingsSaveManager().saveSettings(newSettings);\n\n    // Apply settings\n    SourceAcademyGame.getInstance().getSoundManager().applyUserSettings(newSettings);\n  }\n\n  /**\n   * Cleaning up of related managers.\n   */\n  private cleanUp() {\n    this.scene.getInputManager().clearListeners();\n    this.scene.getLayerManager().clearAllLayers();\n  }\n\n  /**\n   * Activate the 'Escape Menu' UI.\n   *\n   * Usually only called by the phase manager when 'Escape' phase is\n   * pushed.\n   */\n  public activateUI() {\n    const escapeMenuContainer = this.createUIContainer();\n    this.getSoundManager().playSound(SoundAssets.menuEnter.key);\n    this.scene.getLayerManager().addToLayer(Layer.Escape, escapeMenuContainer);\n  }\n\n  /**\n   * Deactivate the 'Escape Menu' UI.\n   *\n   * Usually only called by the phase manager when 'Escape' phase is\n   * transitioned out.\n   */\n  public deactivateUI() {\n    this.getSoundManager().playSound(SoundAssets.menuExit.key);\n    this.scene.getLayerManager().clearSeveralLayers([Layer.Escape]);\n  }\n\n  private getSoundManager = () => SourceAcademyGame.getInstance().getSoundManager();\n  private getSettingsSaveManager = () => SourceAcademyGame.getInstance().getSaveManager();\n}\n\nexport default GameEscapeManager;\n","/**\n * Manager that keeps track of all the event listeners.\n * This manager allow clearing of all listeners at once,\n * making it easier to clean up during scene transition.\n *\n * Additionally, it can also block/allow mouse and keyboard input\n * if needed.\n */\nclass GameInputManager {\n  private scene: Phaser.Scene;\n  private keyboardListeners: Phaser.Input.Keyboard.Key[];\n  private eventListeners: Phaser.Input.InputPlugin[];\n\n  constructor(scene: Phaser.Scene) {\n    this.keyboardListeners = [];\n    this.eventListeners = [];\n    this.scene = scene;\n  }\n\n  /**\n   * Set default cursor icon.\n   *\n   * @param cursor css cursor value\n   */\n  public setDefaultCursor(cursor: string) {\n    this.scene.input.setDefaultCursor(cursor);\n  }\n\n  /**\n   * Enable/disable mouse input based on the parameter.\n   *\n   * @param active if true, mouse input is enabled. Else, mouse input is disabled.\n   */\n  public enableMouseInput(active: boolean) {\n    this.scene.input.mouse.enabled = active;\n  }\n\n  /**\n   * Enable/disable keyboard input based on the parameter.\n   *\n   * @param active if true, keyboard input is enabled. Else, keyboard input is disabled.\n   */\n  public enableKeyboardInput(active: boolean) {\n    this.scene.input.keyboard.enabled = active;\n  }\n\n  /**\n   * Register a keyboard listener into the input manager.\n   * The manager will keep track of this listener.\n   *\n   * @param key keyboard key the listener is attached to\n   * @param event event to be listened to\n   * @param callback callback to execute on event\n   */\n  public registerKeyboardListener(\n    key: string | number | Phaser.Input.Keyboard.Key,\n    event: string | symbol,\n    callback: Function\n  ) {\n    const keyObj = this.scene.input.keyboard.addKey(key);\n    const keyboardListener = keyObj.addListener(event, callback);\n    this.keyboardListeners.push(keyboardListener);\n  }\n\n  /**\n   * Register an event listener into the input manager.\n   * The manager will keep track of this listener.\n   *\n   * @param event event to be listened to\n   * @param callback callback to execute on event\n   */\n  public registerEventListener(event: string | symbol, callback: Function) {\n    const eventListener = this.scene.input.addListener(event, callback);\n    this.eventListeners.concat(eventListener);\n  }\n\n  /**\n   * Clear all listeners, keyboard and event listeners.\n   */\n  public clearListeners() {\n    this.keyboardListeners.forEach(keyboardListener => keyboardListener.removeAllListeners());\n    this.eventListeners.forEach(eventListener => eventListener.removeAllListeners());\n  }\n}\n\nexport default GameInputManager;\n","import GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport { Constants } from '../commons/CommonConstants';\nimport { fadeIn, fadeOut } from '../effects/FadeEffect';\nimport { sleep } from '../utils/GameUtils';\nimport { defaultLayerSequence, Layer } from './GameLayerTypes';\n\n/**\n * Manager in charge of placing ordering the layers\n * as specified in Game Layer types\n */\nclass GameLayerManager {\n  private layers: Map<Layer, Phaser.GameObjects.Container>;\n\n  constructor(scene: Phaser.Scene) {\n    this.layers = new Map(\n      defaultLayerSequence.map(layer => [layer, new Phaser.GameObjects.Container(scene, 0, 0)])\n    );\n    this.layers.forEach(layer => scene.add.existing(layer));\n  }\n\n  /**\n   * Return a specific layer's container.\n   *\n   * @param layerType layer type to return\n   */\n  public getLayer(layerType: Layer) {\n    return this.layers.get(layerType);\n  }\n\n  /**\n   * Hide a specific layer.\n   *\n   * @param layerType layer type to hide\n   */\n  public hideLayer(layerType: Layer) {\n    const layerToHide = this.layers.get(layerType);\n    layerToHide && layerToHide.setVisible(false) && layerToHide.setAlpha(0);\n  }\n\n  /**\n   * Show a specific layer.\n   *\n   * @param layerType layer to show\n   */\n  public showLayer(layerType: Layer) {\n    const layerToShow = this.layers.get(layerType);\n    layerToShow && layerToShow.setVisible(true) && layerToShow.setAlpha(1);\n  }\n\n  /**\n   * Fade in a specific layer.\n   *\n   * @param layerType layer to fade in\n   * @param fadeDuration duration of fade\n   */\n  public async fadeInLayer(layerType: Layer, fadeDuration = Constants.fadeDuration) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const layerToFadeIn = this.layers.get(layerType)!;\n\n    layerToFadeIn.setVisible(true);\n    layerToFadeIn.setAlpha(0);\n    gameManager.tweens.add(fadeIn([layerToFadeIn], fadeDuration));\n    await sleep(fadeDuration);\n  }\n\n  /**\n   * Fade out a specific layer.\n   *\n   * @param layerType layer to fade out\n   * @param fadeDuration duration of fade\n   */\n  public async fadeOutLayer(layerType: Layer, fadeDuration = Constants.fadeDuration) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const layerToFadeOut = this.layers.get(layerType)!;\n\n    layerToFadeOut.setVisible(true);\n    layerToFadeOut.setAlpha(1);\n    gameManager.tweens.add(fadeOut([layerToFadeOut], fadeDuration));\n    await sleep(fadeDuration);\n  }\n\n  /**\n   * Add a game object to the specified layer.\n   *\n   * @param layerType layer to be added to\n   * @param gameObject game object to add\n   */\n  public addToLayer(layerType: Layer, gameObject: Phaser.GameObjects.GameObject) {\n    const layerContainer = this.layers.get(layerType);\n    if (!layerContainer) {\n      return;\n    }\n    layerContainer.add(gameObject);\n  }\n\n  /**\n   * Clear, by destroying, the content of several layers.\n   *\n   * NOTE: This will cause any references to the content within the layers\n   * also point to a destroyed game object.\n   *\n   * @param layerTypes layers to clear from\n   */\n  public clearSeveralLayers(layerTypes: Layer[]) {\n    layerTypes.forEach(layerType => this.clearLayerContents(layerType));\n  }\n\n  /**\n   * Clear, by destroying, the content of all layers.\n   *\n   * NOTE: This will cause any references to the content within the layers\n   * also point to a destroyed game object.\n   */\n  public clearAllLayers() {\n    this.layers.forEach((_, layerType) => this.clearLayerContents(layerType));\n  }\n\n  /**\n   * Clear, by destroying, the content of a layer.\n   *\n   * NOTE: This will cause any references to the content within the layers\n   * also point to a destroyed game object.\n   *\n   * @param layerType layer to clear from\n   */\n  public clearLayerContents(layerType: Layer) {\n    const layerContainer = this.layers.get(layerType);\n    if (!layerContainer) {\n      return;\n    }\n    while (layerContainer.list.length) {\n      layerContainer.list[0].destroy();\n    }\n  }\n}\n\nexport default GameLayerManager;\n","import FontAssets from '../assets/FontAssets';\nimport { screenSize } from '../commons/CommonConstants';\nimport { BitmapFontStyle } from '../commons/CommonTypes';\n\nexport const logTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  align: Phaser.GameObjects.BitmapText.ALIGN_LEFT\n};\n\nconst scrollbarX = screenSize.x * 0.251;\nconst scrollbarWidth = 7;\n\nconst LogConstants = {\n  logTextConfig: { x: screenSize.x * -0.44, y: screenSize.y * -0.378, oriX: 0.0, oriY: 0.0 },\n  textMaxWidth: screenSize.x * 0.68,\n  logHeight: screenSize.y * 0.7632,\n  scrollbarTrack: {\n    x: scrollbarX,\n    y: screenSize.y * 0.005,\n    width: scrollbarWidth,\n    height: screenSize.y * 0.73,\n    color: 0x555555\n  },\n  scrollbarThumb: { x: scrollbarX, width: scrollbarWidth, color: 0x888888 },\n  scrollSpeed: 0.5\n};\n\nexport default LogConstants;\n","import { IBaseScene } from '../commons/CommonTypes';\nimport DashboardConstants from '../dashboard/GameDashboardConstants';\nimport { DashboardPageManager } from '../dashboard/GameDashboardTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport { limitNumber } from '../utils/GameUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport LogConstants, { logTextStyle } from './GameLogConstants';\n\n/**\n * Manager in charge of creating the game log\n */\nclass GameLogManager implements DashboardPageManager {\n  private scene: IBaseScene;\n\n  /**\n   * Initialises the game log UI\n   *\n   * @param scene - the scene to add game log\n   */\n  public constructor(scene: IBaseScene) {\n    this.scene = scene;\n  }\n\n  /**\n   * Creates the container that encapsulates the 'Game Log' UI,\n   * i.e. the scrollable text and the scrollbar\n   */\n  public createUIContainer() {\n    const logContainer = new Phaser.GameObjects.Container(this.scene, 0, 0);\n\n    const textLog = GameGlobalAPI.getInstance().getDialogueStorage();\n    if (textLog.length === 0) {\n      // No text to show\n      return logContainer;\n    }\n\n    // Scrollable Text\n    const bitmapText = createBitmapText(\n      this.scene,\n      textLog.join('\\n\\n'),\n      LogConstants.logTextConfig,\n      logTextStyle\n    ).setMaxWidth(LogConstants.textMaxWidth);\n\n    const textMinY =\n      LogConstants.logTextConfig.y - Math.max(bitmapText.height - LogConstants.logHeight, 0);\n    bitmapText.y = textMinY; // Show most recent text on screen first\n    logContainer.add(bitmapText);\n\n    // Scrollbar\n    const scrollbarTrack = new Phaser.GameObjects.Rectangle(\n      this.scene,\n      LogConstants.scrollbarTrack.x,\n      LogConstants.scrollbarTrack.y,\n      LogConstants.scrollbarTrack.width,\n      LogConstants.scrollbarTrack.height,\n      LogConstants.scrollbarTrack.color\n    );\n\n    const scrollbarThumbHeight = Math.max(\n      (LogConstants.logHeight / bitmapText.height) * LogConstants.scrollbarTrack.height,\n      LogConstants.scrollbarThumb.width * 4 // Limit how small thumb can be\n    );\n    const scrollbarThumbMaxY =\n      LogConstants.scrollbarTrack.y +\n      LogConstants.scrollbarTrack.height / 2 -\n      scrollbarThumbHeight / 2;\n    // The total distance the thumb can move\n    const thumbRange = LogConstants.scrollbarTrack.height - scrollbarThumbHeight;\n    // The ratio between how far the thumb moves to how far the text scrolls\n    const thumbTextScrollRatio = thumbRange / (LogConstants.logTextConfig.y - textMinY);\n\n    const scrollbarThumb = new Phaser.GameObjects.Rectangle(\n      this.scene,\n      LogConstants.scrollbarThumb.x,\n      scrollbarThumbMaxY,\n      LogConstants.scrollbarThumb.width,\n      scrollbarThumbHeight,\n      LogConstants.scrollbarThumb.color\n    );\n\n    logContainer.add(scrollbarTrack);\n    logContainer.add(scrollbarThumb);\n\n    if (bitmapText.height <= LogConstants.logHeight) {\n      // Hide scrollbar if all text fits on screen\n      scrollbarTrack.setVisible(false);\n      scrollbarThumb.setVisible(false);\n    }\n\n    // Add scroll listener\n    const { x, y, width, height } = DashboardConstants.pageArea;\n    const scrollZone = new Phaser.GameObjects.Zone(\n      this.scene,\n      x + width / 2,\n      y + height / 2,\n      width,\n      height\n    );\n    scrollZone.setInteractive();\n    scrollZone.on(\n      'wheel',\n      (pointer: Phaser.Input.Pointer, deltaX: number, deltaY: number, deltaZ: number) => {\n        bitmapText.y = limitNumber(\n          bitmapText.y - deltaY * LogConstants.scrollSpeed,\n          textMinY,\n          LogConstants.logTextConfig.y\n        );\n        scrollbarThumb.y = scrollbarThumbMaxY - (bitmapText.y - textMinY) * thumbTextScrollRatio;\n      }\n    );\n    logContainer.add(scrollZone);\n\n    return logContainer;\n  }\n}\n\nexport default GameLogManager;\n","import { AssetType } from '../assets/AssetsTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport { resize } from '../utils/SpriteUtils';\nimport { blink } from './FadeEffect';\n\n/**\n * Augments the Phaser.GameObjects.Image to enable glow effect\n * for an image. Glow effect enables an image to blink with a tint of yellow\n *\n * This is for the make_object_glow action\n */\nexport default class GlowingImage {\n  private scene: Phaser.Scene;\n  private container: Phaser.GameObjects.Container;\n  private imageGlow: Phaser.GameObjects.Image;\n  private clickArea: Phaser.GameObjects.Image;\n  private glowClearer?: () => void;\n  private blinkClearer?: () => void;\n\n  /**\n   * Constructor for a GlowingImage\n   *\n   * @param scene - the scene in which to add this object to\n   * @param x - the x coordinate of the center of the object\n   * @param y - the y coordinate of the center of the object\n   * @param assetKey - the asset key of the image to render this object\n   * @param width - optional display width of the object\n   * @param height - optional displayheight of the object\n   */\n  constructor(\n    scene: Phaser.Scene,\n    x: number,\n    y: number,\n    assetKey: string,\n    width?: number,\n    height?: number\n  ) {\n    this.scene = scene;\n    this.container = new Phaser.GameObjects.Container(scene, x, y);\n\n    this.imageGlow = new Phaser.GameObjects.Image(scene, 0, 0, assetKey)\n      .setAlpha(0)\n      .setBlendMode(Phaser.BlendModes.ADD);\n    this.clickArea = new Phaser.GameObjects.Image(scene, 0, 0, assetKey)\n      .setAlpha(0.01)\n      .setInteractive({ pixelPerfect: true });\n\n    const image = GameGlobalAPI.getInstance().getGameMap().getMapAssets().get(assetKey);\n    const animationManager = GameGlobalAPI.getInstance().getGameManager().getAnimationManager();\n    if (image) {\n      const imageAsset = animationManager.createImage(image, assetKey);\n      switch (image?.type) {\n        case AssetType.Sprite:\n          this.clickArea.setAlpha(0);\n          animationManager.startAnimation(image);\n          break;\n        case AssetType.Image:\n          if (width) {\n            resize(imageAsset, width, height);\n            resize(this.imageGlow, width, height);\n            resize(this.clickArea, width, height);\n          }\n          break;\n        default:\n          break;\n      }\n      this.container.add([imageAsset, this.imageGlow, this.clickArea]);\n    }\n  }\n\n  public startGlow() {\n    this.glowClearer && this.glowClearer();\n    this.glowClearer = blink(this.scene, this.imageGlow);\n    this.imageGlow.setAlpha(1);\n  }\n\n  public clearGlow() {\n    this.glowClearer && this.glowClearer();\n    this.imageGlow.setAlpha(0);\n  }\n\n  public startBlink() {\n    this.blinkClearer = blink(this.scene, this.getContainer());\n  }\n\n  public clearBlink() {\n    this.getContainer().setAlpha(1);\n    this.blinkClearer && this.blinkClearer();\n  }\n\n  public getContainer() {\n    return this.container;\n  }\n\n  public getClickArea() {\n    return this.clickArea;\n  }\n}\n","import { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport { ItemId } from '../commons/CommonTypes';\nimport GlowingImage from '../effects/GlowingObject';\nimport { GameItemType, LocationId } from '../location/GameMapTypes';\nimport { StateObserver } from '../state/GameStateTypes';\nimport { ActivatableSprite, ObjectProperty } from './GameObjectTypes';\n\n/**\n * Manager that renders objects in a location\n * and also attaches actions as onClick callbacks to objects\n *\n * It provides the activate/and deactivate interfaces\n * for Explore mode to call, as well as\n * provides API for make_object_glow and make_object_blink actions\n *\n * It is a subject/listener of GameStateManager.\n */\nclass GameObjectManager implements StateObserver {\n  private objects: Map<ItemId, ActivatableSprite>;\n\n  constructor() {\n    this.objects = new Map<ItemId, ActivatableSprite>();\n    GameGlobalAPI.getInstance().watchGameItemType(GameItemType.objects, this);\n  }\n\n  /**\n   * Clear the layers, and render all the objects available to the location.\n   * Will immediately be shown on the screen.\n   *\n   * @param locationId location in which to render objects at\n   */\n  public renderObjectsLayerContainer(locationId: LocationId): void {\n    GameGlobalAPI.getInstance().clearSeveralLayers([Layer.Objects]);\n    const objIdsToRender = GameGlobalAPI.getInstance().getGameItemsInLocation(\n      GameItemType.objects,\n      locationId\n    );\n\n    // Refresh mapping\n    this.objects.clear();\n\n    // Add all the objects\n    objIdsToRender.map(id => this.handleAdd(id));\n  }\n\n  /**\n   * Apply glowing effect around the object.\n   *\n   * @param objectId id of the object\n   */\n  public makeObjectGlow(objectId: ItemId, turnOn: boolean) {\n    const object = this.objects.get(objectId);\n    if (!object) {\n      return;\n    }\n    if (turnOn) {\n      (object.sprite as GlowingImage).startGlow();\n    } else {\n      (object.sprite as GlowingImage).clearGlow();\n    }\n  }\n\n  /**\n   * Apply blinking effect on the object.\n   *\n   * @param objectId id of the object\n   */\n  public makeObjectBlink(objectId: ItemId, turnOn: boolean) {\n    const object = this.objects.get(objectId);\n    if (!object) {\n      return;\n    }\n    if (turnOn) {\n      (object.sprite as GlowingImage).startBlink();\n    } else {\n      (object.sprite as GlowingImage).clearBlink();\n    }\n  }\n\n  /**\n   * Create the object from the given object property.\n   * Because we want this sprite to be activatable\n   * by Explore Mode UI, we expose its actionIds\n   * and interactionId\n   *\n   * @param objectProperty object property to be used\n   */\n  private createObject(objectProperty: ObjectProperty): ActivatableSprite {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const { assetKey, x, y, width, height, actionIds, interactionId } = objectProperty;\n    const object = new GlowingImage(gameManager, x, y, assetKey, width, height);\n\n    return {\n      sprite: object,\n      clickArea: object.getClickArea(),\n      actionIds,\n      interactionId\n    };\n  }\n\n  /**\n   * Add the object, specified by the ID, into the scene\n   * and keep track of it within the mapping.\n   *\n   * @param id id of object\n   * @return {boolean} true if successful, false otherwise\n   */\n  public handleAdd(id: ItemId): boolean {\n    const objectProp = GameGlobalAPI.getInstance().getObjectById(id);\n    const object = this.createObject(objectProp);\n    GameGlobalAPI.getInstance().addToLayer(\n      Layer.Objects,\n      (object.sprite as GlowingImage).getContainer()\n    );\n    this.objects.set(id, object);\n    return true;\n  }\n\n  /**\n   * Mutate the object of the given id.\n   *\n   * Internally, will delete and re-add the object with\n   * the updated property.\n   *\n   * @param id id of object\n   * @return {boolean} true if successful, false otherwise\n   */\n  public handleMutate(id: ItemId): boolean {\n    return this.handleDelete(id) && this.handleAdd(id);\n  }\n\n  /**\n   * Delete the object of the given id, if\n   * applicable.\n   *\n   * @param id id of the object\n   * @return {boolean} true if successful, false otherwise\n   */\n  public handleDelete(id: ItemId): boolean {\n    const object = this.objects.get(id);\n    if (object) {\n      this.objects.delete(id);\n      (object.sprite as GlowingImage).getContainer().destroy();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get all the rectanlge sprites which can be activated\n   * by external Explore Mode UI\n   */\n  public getActivatables() {\n    return Array.from(this.objects.values());\n  }\n}\n\nexport default GameObjectManager;\n","import { Constants } from '../commons/CommonConstants';\nimport { IGameUI } from '../commons/CommonTypes';\nimport GameInputManager from '../input/GameInputManager';\nimport { GamePhaseType, GameTerminalPhaseType } from './GamePhaseTypes';\n\n/**\n * State machine in charge of keeping track\n * of phases in the game, and is in charge of making phase\n * transitions from one phase to another.\n *\n * It keeps phases in a stack to keep track of states\n * that have been previously visited.\n *\n * For more, search for FSM (finite state machine).\n */\nexport default class GamePhaseManager {\n  public phaseMap: Map<GamePhaseType, IGameUI>;\n  private phaseStack: GamePhaseType[];\n  private inputManager: GameInputManager;\n  private interruptCheckCallback: (prevPhase: GamePhaseType, newPhase: GamePhaseType) => boolean;\n  private interruptTransitionCallback: (\n    prevPhase: GamePhaseType,\n    newPhase: GamePhaseType\n  ) => Promise<void>;\n  private transitionCallback: (prevPhase: GamePhaseType, newPhase: GamePhaseType) => void;\n\n  constructor(phaseMap: Map<GamePhaseType, IGameUI>, inputManager: GameInputManager) {\n    this.phaseStack = [GamePhaseType.None];\n    this.phaseMap = phaseMap;\n    this.interruptCheckCallback = () => false;\n    this.interruptTransitionCallback = async () => Constants.nullFunction();\n    this.transitionCallback = Constants.nullFunction;\n    this.inputManager = inputManager;\n  }\n\n  /**\n   * Add an additional phase into the phase map.\n   *\n   * @param gamePhaseType type of phase\n   * @param gameUI gameUI to be activated at the phase\n   */\n  public addPhaseToMap(gamePhaseType: GamePhaseType, gameUI: IGameUI) {\n    this.phaseMap.set(gamePhaseType, gameUI);\n  }\n\n  /**\n   * Set the interrupt check of the phase manager. Interrupt check is called\n   * to determine whether interrupt callback is called. The function\n   * signature must return a boolean.\n   *\n   * If the boolean returned is true, interrupt callback will be executed.\n   *\n   * @param fn callback\n   */\n  public setInterruptCheckCallback(\n    fn: (prevPhase: GamePhaseType, newPhase: GamePhaseType) => boolean\n  ) {\n    this.interruptCheckCallback = fn;\n  }\n\n  /**\n   * Set the interrupt callback of the phase manager.\n   * The callback will be executed before every phase transition.\n   *\n   * Will use the interruptCheck function to determine whether this function\n   * is executed. If executed, phase manager will not transition to the\n   * new phase i.e. interrupt the phase transition.\n   *\n   * @param fn callback\n   */\n  public setInterruptCallback(\n    fn: (prevPhase: GamePhaseType, newPhase: GamePhaseType) => Promise<void>\n  ) {\n    this.interruptTransitionCallback = fn;\n  }\n\n  /**\n   * Set the interrupt callback of the phase manager. The callback will be executed\n   * before every phase transition.\n   *\n   * @param fn callback\n   */\n  public setCallback(fn: (prevPhase: GamePhaseType, newPhase: GamePhaseType) => void) {\n    this.transitionCallback = fn;\n  }\n\n  /**\n   * Pop the current phase, and revert to the previous phase.\n   * The current phase will no longer be saved on the phase stack.\n   */\n  public async popPhase(): Promise<void> {\n    const prevPhase = this.phaseStack.pop()!;\n    await this.executePhaseTransition(prevPhase, this.getCurrentPhase());\n  }\n\n  /**\n   * Push a new phase; will cause previous phase to transition out\n   * and transition in the new phase. Previous phase will be stored within\n   * the phase stack.\n   *\n   * @param newPhase phase to transition to\n   */\n  public async pushPhase(newPhase: GamePhaseType): Promise<void> {\n    const prevPhase = this.getCurrentPhase();\n    if (newPhase === prevPhase) return;\n    this.phaseStack.push(newPhase);\n    await this.executePhaseTransition(prevPhase, newPhase);\n  }\n\n  /**\n   * Swap the previous phase to another phase. Previous phase will no\n   * longer be saved on the phase stack.\n   *\n   * @param newPhase phase to swap to\n   */\n  public async swapPhase(newPhase: GamePhaseType): Promise<void> {\n    const prevPhase = this.getCurrentPhase();\n    if (newPhase === prevPhase) return;\n    this.phaseStack.pop();\n    this.phaseStack.push(newPhase);\n    await this.executePhaseTransition(prevPhase, newPhase);\n  }\n\n  /**\n   * Handles the transition from one phase to another,\n   * by deactivating the previous phase followed by activating the new phase.\n   *\n   * During transition, all inputs are disabled (mouse and keyboard) to prevent\n   * user input which may mutate the phase stack during the transition.\n   *\n   * Mutating the stack during the transition leads to phaseStack not matching\n   * with what is shown on user screen; which leads to undefined behaviour.\n   *\n   * @param prevPhase previous phase to deactivate\n   * @param newPhase new phase to activate\n   */\n  private async executePhaseTransition(prevPhase: GamePhaseType, newPhase: GamePhaseType) {\n    // Disable inputs to avoid user input mutating the stack\n    this.inputManager.enableKeyboardInput(false);\n    this.inputManager.enableMouseInput(false);\n    await this.phaseMap.get(prevPhase)!.deactivateUI();\n\n    if (this.interruptCheckCallback(prevPhase, newPhase)) {\n      // Enable input in case interrupt transition callback needs it\n      this.inputManager.enableMouseInput(true);\n      this.inputManager.enableKeyboardInput(true);\n      await this.interruptTransitionCallback(prevPhase, newPhase);\n      return;\n    }\n\n    this.transitionCallback(prevPhase, newPhase);\n\n    // Transition to new phase\n    await this.phaseMap.get(newPhase)!.activateUI();\n    this.inputManager.enableMouseInput(true);\n    this.inputManager.enableKeyboardInput(true);\n  }\n\n  /**\n   * Checks whether the current phase is equal to the inquired phase\n   *\n   * @param phase phase to compare to\n   * @returns {boolean}\n   */\n  public isCurrentPhase(phase: GamePhaseType): boolean {\n    return this.getCurrentPhase() === phase;\n  }\n\n  /**\n   * Checks whether the current phase is a terminal phase.\n   *\n   * @returns {boolean}\n   */\n  public isCurrentPhaseTerminal(): boolean {\n    return Object.values(GameTerminalPhaseType).includes(this.getCurrentPhase());\n  }\n\n  /**\n   * Returns the current phase.\n   * If there is no phase, by default we return GamePhaseType.None.\n   *\n   * @return {GamePhaseType}\n   */\n  public getCurrentPhase(): GamePhaseType {\n    if (!this.phaseStack.length) {\n      this.phaseStack = [GamePhaseType.None];\n    }\n    return this.phaseStack[this.phaseStack.length - 1];\n  }\n}\n","import { screenCenter, screenSize } from '../commons/CommonConstants';\n\nconst popUpXOffset = 400;\n\nconst PopUpConstants = {\n  image: { xOffset: 20, yOffset: 20 },\n  rect: {\n    x: { Left: popUpXOffset, Middle: screenCenter.x, Right: screenSize.x - popUpXOffset },\n    y: { Small: 325, Medium: 350, Large: 420 },\n    scale: { Small: 0.7, Medium: 1, Large: 1.5 },\n    width: 280,\n    height: 280\n  },\n  tweenDuration: 300\n};\n\nexport default PopUpConstants;\n","import ImageAssets from '../assets/ImageAssets';\nimport SoundAssets from '../assets/SoundAssets';\nimport { Constants } from '../commons/CommonConstants';\nimport { GamePosition, GameSize, ItemId } from '../commons/CommonTypes';\nimport { scrollEntry, scrollExit } from '../effects/ScrollEffect';\nimport { Layer } from '../layer/GameLayerTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport { sleep } from '../utils/GameUtils';\nimport { resizeUnderflow } from '../utils/SpriteUtils';\nimport PopUpConstants from './GamePopUpConstants';\n\n/**\n * Manager in charge of keeping track of the the popups in\n * a game\n */\nclass GamePopUpManager {\n  private currPopUp: Map<GamePosition, Phaser.GameObjects.Container>;\n\n  constructor() {\n    this.currPopUp = new Map<GamePosition, Phaser.GameObjects.Container>();\n  }\n\n  /**\n   * Display a popup image on the screen.\n   * The image is based the given ID, while its position\n   * is based on the given position.\n   *\n   * @param itemId item ID to be shown on the pop up\n   * @param position position of the pop up\n   * @param duration duration in which the pop up to be shown. Afterwards, the popup will\n   *                 be destroyed.\n   * @param size size of the popup, defaulted to medium.\n   */\n  public async displayPopUp(\n    itemId: ItemId,\n    position: GamePosition,\n    duration = Constants.popUpDuration,\n    size: GameSize = GameSize.Medium\n  ) {\n    // Destroy previous pop up if any\n    this.destroyPopUp(position);\n\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const container = new Phaser.GameObjects.Container(gameManager, 0, 0);\n\n    // Frame\n    const popUpFrameImg = new Phaser.GameObjects.Image(\n      gameManager,\n      PopUpConstants.rect.x[position],\n      PopUpConstants.rect.y[size],\n      ImageAssets.popUpFrame.key\n    ).setScale(PopUpConstants.rect.scale[size]);\n\n    // Get assetKey\n    const assetKey = this.getAssetKey(itemId);\n    if (!assetKey) return;\n\n    // Set up images\n    const popUpImage = new Phaser.GameObjects.Image(\n      gameManager,\n      PopUpConstants.rect.x[position] + PopUpConstants.image.xOffset,\n      PopUpConstants.rect.y[size] + PopUpConstants.image.yOffset,\n      assetKey\n    );\n    const newWidth = PopUpConstants.rect.width * PopUpConstants.rect.scale[size];\n    const newHeight = PopUpConstants.rect.height * PopUpConstants.rect.scale[size];\n    resizeUnderflow(popUpImage, newWidth, newHeight);\n\n    container.add([popUpFrameImg, popUpImage]);\n    this.currPopUp.set(position, container);\n    GameGlobalAPI.getInstance().addToLayer(Layer.PopUp, container);\n    GameGlobalAPI.getInstance().playSound(SoundAssets.popUpEnter.key);\n\n    container.setActive(true);\n    container.setVisible(true);\n    container.setScale(1.0, 0);\n\n    gameManager.tweens.add(scrollEntry([container], PopUpConstants.tweenDuration));\n    await sleep(PopUpConstants.tweenDuration);\n\n    setTimeout(() => this.destroyPopUp(position), duration);\n  }\n\n  /**\n   * Destroy all active pop ups at all positions.\n   */\n  public destroyAllPopUps() {\n    this.currPopUp.forEach((popUp, position, map) => {\n      this.destroyPopUp(position);\n    });\n  }\n\n  /**\n   * Destroy a pop up at the given position, if any.\n   *\n   * @param position position of thhe pop up to be destroyed\n   */\n  public async destroyPopUp(position: GamePosition) {\n    const atPosContainer = this.currPopUp.get(position);\n    if (!atPosContainer) return;\n\n    GameGlobalAPI.getInstance()\n      .getGameManager()\n      .tweens.add(scrollExit([atPosContainer], PopUpConstants.tweenDuration));\n    await sleep(PopUpConstants.tweenDuration);\n\n    atPosContainer.setVisible(false);\n    atPosContainer.setActive(false);\n    atPosContainer.destroy();\n\n    this.currPopUp.delete(position);\n    GameGlobalAPI.getInstance().playSound(SoundAssets.popUpExit.key);\n  }\n\n  /**\n   * Get the asset key of the item ID.\n   *\n   * @param itemId item ID\n   */\n  private getAssetKey(itemId: ItemId) {\n    const objectPropMap = GameGlobalAPI.getInstance().getGameMap().getObjectPropMap();\n    const objProp = objectPropMap.get(itemId);\n    if (objProp) {\n      return objProp.assetKey;\n    }\n    return undefined;\n  }\n}\n\nexport default GamePopUpManager;\n","/**\n * Generates a tween configuration for making objects open like a scroll,\n * ie stretch open downwards from zero-height to full height.\n *\n * @param targets - an array of game objects that you want to enter via scroll effect\n * @param duration - the duration of the scroll animation\n * @returns {Phaser.Types.Tweens.TweenDataConfig} - the tween config for the scroll in animation\n */\nexport const scrollEntry = (targets: Phaser.GameObjects.GameObject[], duration = 500) => ({\n  scaleY: 1,\n  targets,\n  duration,\n  ease: 'Power1'\n});\n\n/**\n * Generates a tween configuration for making objects close like a scroll,\n * ie compress upwards from full height to zero height\n *\n * @param targets - an array of game objects that you want to exit via scroll effect\n * @param duration - the duration of the fascrollde animation\n * @returns {Phaser.Types.Tweens.TweenDataConfig} - the tween config for the scroll in animation\n */\nexport const scrollExit = (targets: Phaser.GameObjects.GameObject[], duration = 500) => ({\n  scaleY: 0,\n  targets,\n  duration,\n  ease: 'Power1'\n});\n","import { GamePhaseType } from '../phase/GamePhaseTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { FullSaveState, GameSaveState } from './GameSaveTypes';\n\n/**\n * Function that saves game data as a 'snapshot' in FullSaveState\n * json format by collecting game data from game manager,\n * game state manager, user state manager, and phase manager\n *\n * @param prevGameState - the snapshot of the game the during the last save point\n * @param chapterNum - the chapterNumber of the game\n * @param checkpointNUm - the checkpoint of the game\n * @returns {FullSaveState} - the new 'snapshot' of the game\n */\nexport function gameStateToJson(\n  prevGameState: FullSaveState,\n  chapterNum: number,\n  checkpointNum: number\n): FullSaveState {\n  const gameManager = GameGlobalAPI.getInstance().getGameManager();\n  const gameStateManager = gameManager.getStateManager();\n  const phaseManager = gameManager.getPhaseManager();\n\n  return {\n    gameSaveStates: {\n      ...prevGameState.gameSaveStates,\n      [chapterNum]: {\n        lastCheckpointPlayed: checkpointNum,\n        currentLocation: gameManager.currentLocationId,\n        currentPhase: phaseManager.getCurrentPhase(),\n        chapterNewlyCompleted: gameStateManager.getChapterNewlyCompleted(),\n        incompleteTasks: gameStateManager.getIncompleteTasks(),\n        completedTasks: gameStateManager.getCompletedTasks(),\n        completedObjectives: gameStateManager.getCompletedObjectives(),\n        triggeredInteractions: gameStateManager.getTriggeredInteractions(),\n        triggeredStateChangeActions: gameStateManager.getTriggeredStateChangeActions()\n      }\n    },\n    userSaveState: {\n      settings: prevGameState.userSaveState.settings,\n      recentlyPlayedCheckpoint: [chapterNum, checkpointNum],\n      collectibles: SourceAcademyGame.getInstance().getUserStateManager().getCollectibles(),\n      largestCompletedChapter: prevGameState.userSaveState.largestCompletedChapter\n    }\n  };\n}\n\n/**\n * Function to create an empty full save state\n * Used for resetting game data of students\n *\n * @returns {FullSaveState} - an empty save state for starting players\n */\nexport const createEmptySaveState = (): FullSaveState => {\n  return {\n    gameSaveStates: {},\n    userSaveState: {\n      collectibles: [],\n      settings: { bgmVolume: 1, sfxVolume: 1 },\n      recentlyPlayedCheckpoint: [-1, -1],\n      largestCompletedChapter: -1\n    }\n  };\n};\n\n/**\n * Function to create an empty game save state\n * Used for resetting game data of students\n *\n * @returns {GameSaveState} - an empty save state for starting the game\n */\nexport const createEmptyGameSaveState = (): GameSaveState => {\n  return {\n    lastCheckpointPlayed: 0,\n    currentLocation: undefined,\n    currentPhase: GamePhaseType.Menu,\n    chapterNewlyCompleted: false,\n    incompleteTasks: [],\n    completedTasks: [],\n    completedObjectives: [],\n    triggeredInteractions: [],\n    triggeredStateChangeActions: []\n  };\n};\n\n/**\n * Converts a map, where some items have been triggered\n * into an array containing all the items that have been triggered.\n *\n * @param completionMap map containing string elements to boolean indicating\n *                      which elements have been completed/triggerd\n */\nexport function convertMapToArray(completionMap: Map<string, boolean>) {\n  return Array.from(completionMap)\n    .filter(([_objective, boolean]: [string, boolean]) => boolean)\n    .map(([objective]: [string, boolean]) => objective);\n}\n","import { BBoxProperty } from '../boundingBoxes/GameBoundingBoxTypes';\nimport { GameCheckpoint } from '../chapter/GameChapterTypes';\nimport { GamePosition, ItemId } from '../commons/CommonTypes';\nimport GameMap from '../location/GameMap';\nimport { GameItemType, LocationId } from '../location/GameMapTypes';\nimport { GameMode } from '../mode/GameModeTypes';\nimport GameObjective from '../objective/GameObjective';\nimport { ObjectProperty } from '../objects/GameObjectTypes';\nimport { convertMapToArray } from '../save/GameSaveHelper';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport GameTask from '../task/GameTask';\nimport { TaskDetail } from '../task/GameTaskTypes';\nimport { mandatory } from '../utils/GameUtils';\nimport { StateObserver } from './GameStateTypes';\n\n/**\n * Manages all states related to story, chapter, or checkpoint;\n * e.g. checkpoint objectives, objects' property, bboxes' property.\n *\n * Other than this manager, all other manager should not need to\n * manage their own state.\n *\n * Employs observer pattern, and notifies its subjects on state update.\n */\n\nclass GameStateManager {\n  // Subscribers\n  private subscribers: Map<GameItemType, StateObserver>;\n\n  // Game State\n  private gameMap: GameMap;\n  private checkpointObjective: GameObjective;\n  private checkpointTask: GameTask;\n  private chapterNewlyCompleted: boolean;\n\n  // Triggered Interactions\n  private updatedLocations: Set<LocationId>;\n  private triggeredInteractions: Map<ItemId, boolean>;\n  private triggeredStateChangeActions: ItemId[];\n\n  constructor(gameCheckpoint: GameCheckpoint) {\n    this.subscribers = new Map<GameItemType, StateObserver>();\n\n    this.gameMap = gameCheckpoint.map;\n    this.checkpointObjective = gameCheckpoint.objectives;\n    this.checkpointTask = gameCheckpoint.tasks;\n    this.chapterNewlyCompleted = false;\n\n    this.updatedLocations = new Set(this.gameMap.getLocationIds());\n    this.triggeredInteractions = new Map<ItemId, boolean>();\n    this.triggeredStateChangeActions = [];\n\n    this.loadStatesFromSaveManager();\n  }\n\n  /**\n   * Loads some game states from the save manager\n   */\n  private loadStatesFromSaveManager() {\n    this.triggeredStateChangeActions = this.getSaveManager().getTriggeredStateChangeActions();\n\n    this.getSaveManager()\n      .getTriggeredInteractions()\n      .forEach(interactionId => this.triggerInteraction(interactionId));\n\n    this.getSaveManager()\n      .getCompletedObjectives()\n      .forEach(objective => this.checkpointObjective.setObjective(objective, true));\n\n    this.getSaveManager()\n      .getCompletedTasks()\n      .forEach(task => {\n        this.checkpointTask.setTask(task, true);\n        this.checkpointTask.showTask(task);\n      });\n\n    this.getSaveManager()\n      .getIncompleteTasks()\n      .forEach(task => {\n        this.checkpointTask.setTask(task, false);\n        this.checkpointTask.showTask(task);\n      });\n\n    this.chapterNewlyCompleted = this.getSaveManager().getChapterNewlyCompleted();\n  }\n\n  ///////////////////////////////\n  //        Subscribers        //\n  ///////////////////////////////\n\n  /**\n   * This function is called to set state observers\n   *\n   * @param gameItemType Type of game item the observer wants to watch\n   * @param stateObserver reference to state observer\n   */\n  public watchGameItemType(gameItemType: GameItemType, stateObserver: StateObserver) {\n    this.subscribers.set(gameItemType, stateObserver);\n  }\n\n  /**\n   * Obtains the subscriber that watches the game item\n   *\n   * @param gameItemType the type of item being watched\n   */\n  private getSubscriberForItemType(gameItemType: GameItemType) {\n    return this.subscribers.get(gameItemType);\n  }\n\n  ///////////////////////////////\n  //        Interaction        //\n  ///////////////////////////////\n\n  /**\n   * Record that an interaction has been triggered.\n   *\n   * @param id id of interaction\n   */\n  public triggerInteraction(id: string): void {\n    this.triggeredInteractions.set(id, true);\n  }\n\n  /**\n   * Record a state-change action that has been triggered.\n   * State-change actions refer to actions that modify the map's\n   * original state\n   *\n   * @param actionId actionId of interaction\n   */\n  public triggerStateChangeAction(actionId: ItemId): void {\n    this.triggeredStateChangeActions.push(actionId);\n  }\n\n  /**\n   * Checks whether an interaction ID has been triggered or not.\n   *\n   * @param id id of interaction\n   * @returns {boolean}\n   */\n  public hasTriggeredInteraction(id: string): boolean | undefined {\n    return this.triggeredInteractions.get(id);\n  }\n\n  ///////////////////////////////\n  //          Notifs          //\n  ///////////////////////////////\n\n  /**\n   * Adds a location notification for a locationId\n   *\n   * @param locationId locationId of location you want to add notif to\n   */\n  public addLocationNotif(locationId: LocationId) {\n    this.updatedLocations.add(locationId);\n  }\n\n  /**\n   * Removes a location notification for a locationId\n   *\n   * @param locationId locationId of location you want to remove notif of\n   */\n  public removeLocationNotif(locationId: LocationId) {\n    this.updatedLocations.delete(locationId);\n  }\n\n  /**\n   * Gets whether or not the location has a notif\n   *\n   * @param locationId locationId of location you want to find out if got notif\n   */\n  public hasLocationNotif(locationId: LocationId) {\n    return this.updatedLocations.has(locationId);\n  }\n\n  /**\n   * Function to check if current location is the given locationId\n   *\n   * @param locationId locationId that you want to check whether is current one\n   */\n  public isCurrentLocation(locationId: LocationId) {\n    return locationId === GameGlobalAPI.getInstance().getCurrLocId();\n  }\n\n  ///////////////////////////////\n  //       Location Mode       //\n  ///////////////////////////////\n\n  /**\n   * Get modes available to a location based on the location ID.\n   *\n   * @param locationId location ID\n   * @returns {GameMode[]} game modes\n   */\n  public getLocationModes(locationId: LocationId): GameMode[] {\n    return Array.from(this.gameMap.getLocationAtId(locationId).modes) || [];\n  }\n\n  /**\n   * Add a mode to a location. If this is not the current location,\n   * then add a notification.\n   *\n   * @param locationId location ID\n   * @param mode game mode to add\n   */\n  public addLocationMode(locationId: LocationId, mode: GameMode) {\n    this.gameMap.getLocationAtId(locationId).modes.add(mode);\n    !this.isCurrentLocation(locationId) && this.addLocationNotif(locationId);\n  }\n\n  /**\n   * Remove a mode from a location. If this is not the current location,\n   * then add a notification.\n   *\n   * @param locationId location ID\n   * @param mode game mode to remove\n   */\n  public removeLocationMode(locationId: LocationId, mode: GameMode) {\n    this.gameMap.getLocationAtId(locationId).modes.delete(mode);\n    !this.isCurrentLocation(locationId) && this.addLocationNotif(locationId);\n  }\n\n  ///////////////////////////////\n  //        State Check        //\n  ///////////////////////////////\n\n  /**\n   * Get all IDs of a type of game item in a location.\n   *\n   * @param gameItemType type of game item\n   * @param locationId id of location\n   * @returns {ItemId[]} items IDS of all game items of that type in the location\n   */\n  public getGameItemsInLocation(gameItemType: GameItemType, locationId: LocationId): ItemId[] {\n    return Array.from(this.gameMap.getLocationAtId(locationId)[gameItemType]) || [];\n  }\n\n  /**\n   * Add an item ID of a game item type in gamemap's location.\n   *\n   * Either render the change instantly, or place a notification inside another location\n   *\n   * @param gameItemType type of game item\n   * @param locationId id of location to add items to\n   * @param itemId item ID to be added\n   */\n  public addItem(gameItemType: GameItemType, locationId: LocationId, itemId: ItemId) {\n    this.gameMap.getLocationAtId(locationId)[gameItemType]?.add(itemId);\n\n    this.isCurrentLocation(locationId)\n      ? this.getSubscriberForItemType(gameItemType)?.handleAdd(itemId)\n      : this.addLocationNotif(locationId);\n  }\n\n  /**\n   * Remove an item ID from game items in gamemap's location.\n   * If ID is not found within the game item list, nothing will be executed.\n   *\n   * Either render the change instantly, or place a notification inside another location\n   *\n   * @param gameItemType type of game item to remove\n   * @param locationId id of location to remove items from\n   * @param itemId item ID to be removed\n   */\n  public removeItem(gameItemType: GameItemType, locationId: LocationId, itemId: string) {\n    this.gameMap.getLocationAtId(locationId)[gameItemType]?.delete(itemId);\n\n    this.isCurrentLocation(locationId)\n      ? this.getSubscriberForItemType(gameItemType)?.handleDelete(itemId)\n      : this.addLocationNotif(locationId);\n  }\n\n  /**\n   * Replace an object property of the given ID with the new object\n   * property. Commonly used to update a specific object property.\n   *\n   * @param id id of object to change\n   * @param newObjProp new object property to replace the old one\n   */\n  public setObjProperty(id: ItemId, newObjProp: ObjectProperty) {\n    this.gameMap.setItemInMap(GameItemType.objects, id, newObjProp);\n\n    // Update every location that has the object\n    this.gameMap.getLocations().forEach((location, locId) => {\n      if (!location.objects.has(id)) return;\n\n      this.isCurrentLocation(locId)\n        ? this.getSubscriberForItemType(GameItemType.objects)?.handleMutate(id)\n        : this.addLocationNotif(locId);\n    });\n  }\n\n  /**\n   * Replace a bbox property of the given ID with the new bbox\n   * property. Commonly used to update a specific bbox property.\n   *\n   * @param id id of object to change\n   * @param newBBoxProp new object property to replace the old one\n   */\n  public setBBoxProperty(id: ItemId, newBBoxProp: BBoxProperty) {\n    this.gameMap.setItemInMap(GameItemType.boundingBoxes, id, newBBoxProp);\n\n    // Update every location that has the bbox\n    this.gameMap.getLocations().forEach((location, locId) => {\n      if (!location.boundingBoxes.has(id)) return;\n\n      this.isCurrentLocation(locId)\n        ? this.getSubscriberForItemType(GameItemType.boundingBoxes)?.handleMutate(id)\n        : this.addLocationNotif(locId);\n    });\n  }\n\n  /**\n   * Moves a character to another location and another position\n   *\n   * @param id id of character to change\n   * @param newLocation new location to put this character inside of\n   * @param newPosition new position of the character\n   */\n  public moveCharacter(id: ItemId, newLocation: LocationId, newPosition: GamePosition) {\n    // Move position\n    this.getCharacterAtId(id).defaultPosition = newPosition;\n\n    // Find location with character and remove him\n    this.gameMap.getLocations().forEach((location, locId) => {\n      if (!location.characters.has(id)) return;\n      this.removeItem(GameItemType.characters, locId, id);\n    });\n\n    // Add updated character to new location\n    this.addItem(GameItemType.characters, newLocation, id);\n  }\n\n  /**\n   * Changes the default expression of a character\n   *\n   * @param id id of character to change\n   * @param newExpression new expression of the character\n   */\n  public updateCharacter(id: ItemId, newExpression: string) {\n    this.getCharacterAtId(id).defaultExpression = newExpression;\n\n    // Update every location that has the character\n    this.gameMap.getLocations().forEach((location, locId) => {\n      if (!location.characters.has(id)) return;\n\n      this.isCurrentLocation(locId)\n        ? this.getSubscriberForItemType(GameItemType.characters)?.handleMutate(id)\n        : this.addLocationNotif(locId);\n    });\n  }\n\n  ///////////////////////////////\n  //    Chapter Objectives     //\n  ///////////////////////////////\n\n  /**\n   * Checks whether all the checkpoint objectives has been completed.\n   * @returns {boolean}\n   */\n  public areAllObjectivesComplete(): boolean {\n    return this.checkpointObjective.isAllComplete();\n  }\n\n  /**\n   * Checks whether a specific objective has been completed.\n   * If the objective does not exist, this method still returns true.\n   *\n   * @param key objective name\n   * @returns {boolean}\n   */\n  public isObjectiveComplete(key: string): boolean {\n    return this.checkpointObjective.getObjectiveState(key);\n  }\n\n  /**\n   * Check whether the objectives are complete or not.\n   * All specified objectives must be complete for this method\n   * to return true.\n   *\n   * @param keys objective names\n   * @returns {boolean}\n   */\n  public areObjectivesComplete(keys: string[]): boolean {\n    let result = true;\n    keys.forEach(key => (result = result && this.isObjectiveComplete(key)));\n    return result;\n  }\n\n  /**\n   * Record that an objective has been completed.\n   *\n   * @param key objective name\n   */\n  public completeObjective(key: string): void {\n    this.checkpointObjective.setObjective(key, true);\n  }\n\n  ///////////////////////////////\n  //    Chapter Tasks          //\n  ///////////////////////////////\n\n  /**\n   * Checks whether a specific task has been completed.\n   * If the task does not exist, this method still returns true.\n   *\n   * @param key task id\n   * @returns {boolean}\n   */\n  public isTaskComplete(key: string): boolean {\n    return this.checkpointTask.getTaskState(key);\n  }\n\n  /**\n   * Check whether the tasks are complete or not.\n   * All specified tasks must be complete for this method\n   * to return true.\n   *\n   * @param keys task ids\n   * @returns {boolean}\n   */\n  public areTasksComplete(keys: string[]): boolean {\n    let result = true;\n    keys.forEach(key => (result = result && this.isTaskComplete(key)));\n    return result;\n  }\n\n  /**\n   * Record that a task has been completed.\n   *\n   * @param key task id\n   */\n  public completeTask(key: string): void {\n    this.checkpointTask.setTask(key, true);\n  }\n\n  /**\n   * Indicate that a task should be shown to the user.\n   *\n   * @param key task id\n   */\n  public showTask(key: string): void {\n    this.checkpointTask.showTask(key);\n  }\n\n  public getAllVisibleTaskData(): Array<[TaskDetail, boolean]> {\n    return this.checkpointTask.getAllVisibleTaskData();\n  }\n\n  ///////////////////////////////\n  //          Saving           //\n  ///////////////////////////////\n\n  /**\n   * Gets array of all objectives that have been completed.\n   *\n   * @returns {ItemId[]}\n   */\n  public getCompletedObjectives(): ItemId[] {\n    return convertMapToArray(this.checkpointObjective.getObjectives());\n  }\n\n  /**\n   * Gets array of all tasks that have been completed.\n   *\n   * @returns {ItemId[]}\n   */\n  public getCompletedTasks(): ItemId[] {\n    return convertMapToArray(this.checkpointTask.getAllTasks());\n  }\n\n  /**\n   * Gets array of all tasks that have been displayed but yet to be completed.\n   *\n   * @returns {ItemId[]}\n   */\n  public getIncompleteTasks(): ItemId[] {\n    return this.checkpointTask.getAllIncompleteTasks();\n  }\n\n  /**\n   * Return an array interactions that have been triggered\n   *\n   * @returns {string[]}\n   */\n  public getTriggeredInteractions(): string[] {\n    return convertMapToArray(this.triggeredInteractions);\n  }\n\n  /**\n   * Return an array interactions of state-change actions that have been triggered\n   * State-change actions refer to actions that modify the game map's original state\n   *\n   * @returns {string[]}\n   */\n  public getTriggeredStateChangeActions(): string[] {\n    return this.triggeredStateChangeActions;\n  }\n\n  public getGameMap = () => this.gameMap;\n  public getCharacterAtId = (id: ItemId) => mandatory(this.gameMap.getCharacterMap().get(id));\n\n  private getSaveManager = () => SourceAcademyGame.getInstance().getSaveManager();\n  public getChapterNewlyCompleted = () => this.chapterNewlyCompleted;\n}\n\nexport default GameStateManager;\n","import FontAssets from '../assets/FontAssets';\nimport ImageAssets from '../assets/ImageAssets';\nimport { screenSize } from '../commons/CommonConstants';\nimport { BitmapFontStyle } from '../commons/CommonTypes';\n\nexport const taskTextStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  align: Phaser.GameObjects.BitmapText.ALIGN_LEFT\n};\n\nconst scrollbarX = screenSize.x * 0.251;\nconst scrollbarWidth = 7;\n\nconst TaskLogConstants = {\n  taskTextConfig: { x: screenSize.x * -0.42, y: screenSize.y * -0.378, oriX: 0.0, oriY: 0.0 },\n  textMaxWidth: screenSize.x * 0.66,\n  checkMark: {\n    x: screenSize.x * -0.202,\n    y: screenSize.y * -0.369,\n    imageUrl: ImageAssets.talkOptCheck.key\n  },\n  logHeight: screenSize.y * 0.7632,\n  scrollbarTrack: {\n    x: scrollbarX,\n    y: screenSize.y * 0.005,\n    width: scrollbarWidth,\n    height: screenSize.y * 0.73,\n    color: 0x555555\n  },\n  scrollbarThumb: { x: scrollbarX, width: scrollbarWidth, color: 0x888888 },\n  scrollSpeed: 0.5\n};\n\nexport default TaskLogConstants;\n","import { IBaseScene } from '../commons/CommonTypes';\nimport DashboardConstants from '../dashboard/GameDashboardConstants';\nimport { DashboardPageManager } from '../dashboard/GameDashboardTypes';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport { limitNumber } from '../utils/GameUtils';\nimport { createBitmapText } from '../utils/TextUtils';\nimport TaskLogConstants, { taskTextStyle } from './GameTaskLogConstants';\n\n/**\n * Manager in charge of creating the task log\n */\nclass GameTaskLogManager implements DashboardPageManager {\n  private scene: IBaseScene;\n\n  /**\n   * Initialises the task log UI\n   *\n   * @param scene - the scene to add task log\n   */\n  public constructor(scene: IBaseScene) {\n    this.scene = scene;\n  }\n\n  /**\n   * Creates the container that encapsulates the 'Task Log' UI,\n   * i.e. the scrollable text, the check marks and the scrollbar\n   */\n  public createUIContainer() {\n    const taskLogContainer = new Phaser.GameObjects.Container(this.scene, 0, 0);\n\n    // Scrollable Text and Check Marks\n    const tasksData = GameGlobalAPI.getInstance().getAllVisibleTaskData();\n    const taskListContainer = new Phaser.GameObjects.Container(this.scene, 0, 0);\n    let totalTextHeight = 0;\n\n    if (tasksData.length === 0) {\n      // No tasks to show\n      const message = createBitmapText(\n        this.scene,\n        'No tasks available.',\n        TaskLogConstants.taskTextConfig,\n        taskTextStyle\n      ).setMaxWidth(TaskLogConstants.textMaxWidth);\n      taskListContainer.add(message);\n      totalTextHeight = message.height;\n    } else {\n      for (let i = 0; i < tasksData.length; i++) {\n        const task = tasksData[i][0];\n        const taskIsDone = tasksData[i][1];\n\n        if (taskIsDone) {\n          // Show a check mark next to completed tasks\n          const checkMark = new Phaser.GameObjects.Image(\n            this.scene,\n            TaskLogConstants.checkMark.x,\n            TaskLogConstants.checkMark.y + totalTextHeight,\n            TaskLogConstants.checkMark.imageUrl\n          );\n          taskListContainer.add(checkMark);\n        }\n\n        const taskTitle = createBitmapText(\n          this.scene,\n          task.title,\n          {\n            ...TaskLogConstants.taskTextConfig,\n            y: TaskLogConstants.taskTextConfig.y + totalTextHeight\n          },\n          taskTextStyle\n        ).setMaxWidth(TaskLogConstants.textMaxWidth);\n\n        // Underline the task title using a stretched underscore\n        // (Note: this will not underline subsequent lines if title longer than 1 line)\n        const underline = createBitmapText(\n          this.scene,\n          '_',\n          {\n            ...TaskLogConstants.taskTextConfig,\n            y: TaskLogConstants.taskTextConfig.y + totalTextHeight\n          },\n          taskTextStyle\n        );\n        underline.setScale(taskTitle.width / underline.width, 1);\n\n        taskListContainer.add(taskTitle);\n        taskListContainer.add(underline);\n        totalTextHeight += taskTitle.height;\n\n        const taskDescription = createBitmapText(\n          this.scene,\n          task.description + (i < tasksData.length - 1 ? '\\n ' : ''), // Line break between tasks\n          {\n            ...TaskLogConstants.taskTextConfig,\n            y: TaskLogConstants.taskTextConfig.y + totalTextHeight\n          },\n          taskTextStyle\n        ).setMaxWidth(TaskLogConstants.textMaxWidth);\n\n        taskListContainer.add(taskDescription);\n        totalTextHeight += taskDescription.height;\n      }\n    }\n\n    const taskListContainerMinY = -Math.max(totalTextHeight - TaskLogConstants.logHeight, 0);\n    taskListContainer.y = taskListContainerMinY; // Show newest tasks on screen first\n    taskLogContainer.add(taskListContainer);\n\n    // Scrollbar\n    const scrollbarTrack = new Phaser.GameObjects.Rectangle(\n      this.scene,\n      TaskLogConstants.scrollbarTrack.x,\n      TaskLogConstants.scrollbarTrack.y,\n      TaskLogConstants.scrollbarTrack.width,\n      TaskLogConstants.scrollbarTrack.height,\n      TaskLogConstants.scrollbarTrack.color\n    );\n\n    const scrollbarThumbHeight = Math.max(\n      (TaskLogConstants.logHeight / totalTextHeight) * TaskLogConstants.scrollbarTrack.height,\n      TaskLogConstants.scrollbarThumb.width * 4 // Limit how small thumb can be\n    );\n    const scrollbarThumbMaxY =\n      TaskLogConstants.scrollbarTrack.y +\n      TaskLogConstants.scrollbarTrack.height / 2 -\n      scrollbarThumbHeight / 2;\n    // The total distance the thumb can move\n    const thumbRange = TaskLogConstants.scrollbarTrack.height - scrollbarThumbHeight;\n    // The ratio between how far the thumb moves to how far the text scrolls\n    const thumbTextScrollRatio = thumbRange / -taskListContainerMinY;\n\n    const scrollbarThumb = new Phaser.GameObjects.Rectangle(\n      this.scene,\n      TaskLogConstants.scrollbarThumb.x,\n      scrollbarThumbMaxY,\n      TaskLogConstants.scrollbarThumb.width,\n      scrollbarThumbHeight,\n      TaskLogConstants.scrollbarThumb.color\n    );\n\n    taskLogContainer.add(scrollbarTrack);\n    taskLogContainer.add(scrollbarThumb);\n\n    if (totalTextHeight <= TaskLogConstants.logHeight) {\n      // Hide scrollbar if all text fits on screen\n      scrollbarTrack.setVisible(false);\n      scrollbarThumb.setVisible(false);\n    }\n\n    // Add scroll listener\n    const { x, y, width, height } = DashboardConstants.pageArea;\n    const scrollZone = new Phaser.GameObjects.Zone(\n      this.scene,\n      x + width / 2,\n      y + height / 2,\n      width,\n      height\n    );\n    scrollZone.setInteractive();\n    scrollZone.on(\n      'wheel',\n      (pointer: Phaser.Input.Pointer, deltaX: number, deltaY: number, deltaZ: number) => {\n        taskListContainer.y = limitNumber(\n          taskListContainer.y - deltaY * TaskLogConstants.scrollSpeed,\n          taskListContainerMinY,\n          0\n        );\n        scrollbarThumb.y =\n          scrollbarThumbMaxY - (taskListContainer.y - taskListContainerMinY) * thumbTextScrollRatio;\n      }\n    );\n    taskLogContainer.add(scrollZone);\n\n    return taskLogContainer;\n  }\n}\n\nexport default GameTaskLogManager;\n","import ImageAssets from '../assets/ImageAssets';\nimport { screenSize } from '../commons/CommonConstants';\nimport { AssetKey, IBaseScene } from '../commons/CommonTypes';\nimport { GamePhaseType } from '../phase/GamePhaseTypes';\n\nexport type ToolbarButtonConfig = {\n  assetKey: AssetKey;\n  onUp: (scene: IBaseScene) => () => void;\n};\n\n// From rightmost to leftmost\nconst buttonConfigs: ToolbarButtonConfig[] = [\n  {\n    // Escape menu button\n    assetKey: ImageAssets.gear.key,\n    onUp: scene => async () => {\n      const phaseManager = scene.getPhaseManager();\n      if (phaseManager.isCurrentPhase(GamePhaseType.EscapeMenu)) {\n        await phaseManager.popPhase();\n      } else if (phaseManager.isCurrentPhaseTerminal()) {\n        await phaseManager.swapPhase(GamePhaseType.EscapeMenu);\n      } else {\n        await phaseManager.pushPhase(GamePhaseType.EscapeMenu);\n      }\n    }\n  },\n  {\n    // Dashboard button\n    assetKey: ImageAssets.journal.key,\n    onUp: scene => async () => {\n      const phaseManager = scene.getPhaseManager();\n      if (phaseManager.isCurrentPhase(GamePhaseType.Dashboard)) {\n        await phaseManager.popPhase();\n      } else if (phaseManager.isCurrentPhaseTerminal()) {\n        await phaseManager.swapPhase(GamePhaseType.Dashboard);\n      } else {\n        await phaseManager.pushPhase(GamePhaseType.Dashboard);\n      }\n    }\n  }\n];\n\nconst ToolbarConstants = {\n  firstButton: { x: screenSize.x - 37, y: 37 },\n  xOffset: 64,\n  buttonConfigs\n};\n\nexport default ToolbarConstants;\n","import { IBaseScene } from '../commons/CommonTypes';\nimport { Layer } from '../layer/GameLayerTypes';\nimport { createButton } from '../utils/ButtonUtils';\nimport ToolbarConstants, { ToolbarButtonConfig } from './GameToolbarConstants';\n\n/**\n * Manager for the toolbar buttons in the top right corner of the screen\n *\n * It calls the phase mangager when the toolbar buttons are clicked\n * to bring up the approriate menu\n */\nclass GameToolbarManager {\n  private uiContainer: Phaser.GameObjects.Container | undefined;\n  private scene: IBaseScene;\n\n  /**\n   * Initialises the toolbar manager UI\n   *\n   * @param scene - the scene to add toolbar manager\n   */\n  public constructor(scene: IBaseScene) {\n    this.scene = scene;\n  }\n\n  /**\n   * Create the container that encapsulates the toolbar UI\n   */\n  private createUIContainer() {\n    const toolbarContainer = new Phaser.GameObjects.Container(this.scene, 0, 0);\n\n    toolbarContainer.add(\n      ToolbarConstants.buttonConfigs.map((buttonConfig, index) =>\n        this.createToolbarButton(\n          ToolbarConstants.firstButton.x - ToolbarConstants.xOffset * index,\n          ToolbarConstants.firstButton.y,\n          buttonConfig\n        )\n      )\n    );\n    return toolbarContainer;\n  }\n\n  /**\n   * Format the button information to a UI container, complete with\n   * styling and functionality.\n   *\n   * @param xPos x position of the button\n   * @param yPos y position of the button\n   * @param buttonConfig config details of the button\n   */\n  private createToolbarButton(xPos: number, yPos: number, buttonConfig: ToolbarButtonConfig) {\n    return createButton(this.scene, {\n      assetKey: buttonConfig.assetKey,\n      onUp: buttonConfig.onUp(this.scene)\n    }).setPosition(xPos, yPos);\n  }\n\n  /**\n   * Render the toolbar UI.\n   *\n   * Called by the GameManager in every location\n   */\n  public async renderToolbarContainer(): Promise<void> {\n    this.uiContainer = this.createUIContainer();\n    this.scene.getLayerManager().addToLayer(Layer.UI, this.uiContainer);\n  }\n}\n\nexport default GameToolbarManager;\n","import FontAssets from '../assets/FontAssets';\nimport ImageAssets from '../assets/ImageAssets';\nimport { createButton } from '../utils/ButtonUtils';\nimport { screenCenter } from './CommonConstants';\nimport { BitmapFontStyle } from './CommonTypes';\n\nconst backText = 'Back';\nconst backTextYPos = -screenCenter.y * 0.975;\nconst backButtonStyle: BitmapFontStyle = {\n  key: FontAssets.zektonDarkFont.key,\n  size: 25,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\n/**\n * A container that is a back button that is located\n * at the top, center of the screen.\n *\n * The style and colours are fixed.\n * It is not recommended to change the position of the container.\n */\nclass CommonBackButton extends Phaser.GameObjects.Container {\n  /**\n   * @param scene scene for the button to be attached to\n   * @param callback callback to be executed on onClick\n   */\n  constructor(scene: Phaser.Scene, callback: any) {\n    super(scene, 0, 0);\n    this.renderBackButton(callback);\n  }\n\n  private renderBackButton(callback: any) {\n    const backButton = createButton(this.scene, {\n      assetKey: ImageAssets.topButton.key,\n      message: backText,\n      textConfig: { x: 0, y: backTextYPos, oriX: 0.5, oriY: 0.25 },\n      bitMapTextStyle: backButtonStyle,\n      onUp: callback\n    }).setPosition(screenCenter.x, screenCenter.y);\n    this.add(backButton);\n  }\n}\n\nexport default CommonBackButton;\n","import { toS3Path } from '../../utils/GameUtils';\n\nconst ExploreModeConstants = {\n  normal: `url(${toS3Path('/ui/magnifying.png', false)}), pointer`,\n  hover: `url(${toS3Path('/ui/magnifying_trigg.png', false)}), pointer`,\n  checked: `url(${toS3Path('/ui/magnifying_check.png', false)}), pointer`\n};\n\nexport default ExploreModeConstants;\n","import GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport SoundAssets from '../../assets/SoundAssets';\nimport CommonBackButton from '../../commons/CommonBackButton';\nimport { Constants, screenSize } from '../../commons/CommonConstants';\nimport { IGameUI, ItemId } from '../../commons/CommonTypes';\nimport { fadeAndDestroy } from '../../effects/FadeEffect';\nimport { entryTweenProps, exitTweenProps } from '../../effects/FlyEffect';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { ActivatableSprite } from '../../objects/GameObjectTypes';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\nimport { sleep } from '../../utils/GameUtils';\nimport ExploreModeConstants from './GameModeExploreConstants';\n\n/**\n * The class in charge of showing \"Explore\" mode UI\n * which comprises back button, attaching magnifying glass cursor and\n * making objects and bounding boxes active during Explore mode\n */\nclass GameModeExplore implements IGameUI {\n  private uiContainer: Phaser.GameObjects.Container | undefined;\n\n  /**\n   * Create the container that encapsulate the 'Explore' mode UI,\n   * i.e. the back button.\n   */\n  public createUIContainer(): Phaser.GameObjects.Container {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const exploreMenuContainer = new Phaser.GameObjects.Container(gameManager, 0, 0);\n\n    const backButton = new CommonBackButton(\n      gameManager,\n      async () => await GameGlobalAPI.getInstance().swapPhase(GamePhaseType.Menu)\n    );\n    exploreMenuContainer.add(backButton);\n    return exploreMenuContainer;\n  }\n\n  /**\n   * Activate the 'Explore' mode UI.\n   *\n   * Usually only called by the phase manager when 'Explore' phase is\n   * pushed.\n   */\n  public async activateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n\n    this.uiContainer = this.createUIContainer();\n    GameGlobalAPI.getInstance().addToLayer(Layer.UI, this.uiContainer);\n\n    this.uiContainer.setPosition(this.uiContainer.x, -screenSize.y);\n\n    this.enableInteractions();\n\n    gameManager.tweens.add({\n      targets: this.uiContainer,\n      ...entryTweenProps\n    });\n\n    // Change default icon\n    GameGlobalAPI.getInstance().setDefaultCursor(ExploreModeConstants.normal);\n    GameGlobalAPI.getInstance().playSound(SoundAssets.modeEnter.key);\n  }\n\n  /**\n   * Deactivate the 'Explore' mode UI.\n   *\n   * Usually only called by the phase manager when 'Explore' phase is\n   * transitioned out.\n   */\n  public async deactivateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n\n    // Reset the cursor\n    GameGlobalAPI.getInstance().setDefaultCursor(Constants.defaultCursor);\n\n    this.disableInteractions();\n\n    if (this.uiContainer) {\n      this.uiContainer.setPosition(this.uiContainer.x, 0);\n\n      gameManager.tweens.add({\n        targets: this.uiContainer,\n        ...exitTweenProps\n      });\n\n      await sleep(500);\n      fadeAndDestroy(gameManager, this.uiContainer);\n    }\n  }\n\n  /**\n   * This function enables all the activatable sprites (objects/bboxes)\n   * that are currently being rendered on the map to have mouse events\n   *\n   * It changes the default cursor of the hover/click to a magnifying glass\n   * It also adds enables the activatable's actions to be played when clicked\n   */\n  private enableInteractions() {\n    GameGlobalAPI.getInstance()\n      .getAllActivatables()\n      .forEach((activatable: ActivatableSprite) => {\n        if (!activatable.actionIds || !activatable.actionIds.length) {\n          return;\n        }\n        activatable.clickArea.on('pointerout', () => this.explorePointerOut());\n        activatable.clickArea.on('pointerover', () =>\n          this.explorePointerOver(activatable.interactionId)\n        );\n        activatable.clickArea.on('pointerup', async () => {\n          this.explorePointerUp(activatable.interactionId);\n          await GameGlobalAPI.getInstance().processGameActions(activatable.actionIds);\n        });\n      });\n  }\n\n  /**\n   * This function disables all the activatable sprites (objects/bboxes)\n   * that are currently being rendered on the map\n   */\n  private disableInteractions() {\n    GameGlobalAPI.getInstance()\n      .getAllActivatables()\n      .forEach((activatable: ActivatableSprite) => {\n        activatable.clickArea.off('pointerout');\n        activatable.clickArea.off('pointerover');\n        activatable.clickArea.off('pointerup');\n      });\n  }\n\n  /**\n   * Function to be executed when user hover upon interactable object/bbox.\n   * It sets the cursor to different icons based on wheter user has ever\n   * interacted with it previously.\n   *\n   * @param id id of the object, to be used to check whether it has been\n   *           triggered before\n   */\n  private explorePointerOver(id: ItemId) {\n    const hasTriggered = GameGlobalAPI.getInstance().hasTriggeredInteraction(id);\n    if (hasTriggered) {\n      GameGlobalAPI.getInstance().setDefaultCursor(ExploreModeConstants.checked);\n    } else {\n      GameGlobalAPI.getInstance().setDefaultCursor(ExploreModeConstants.hover);\n    }\n  }\n\n  /**\n   * Function to be executed when user off hover upon interactable object/bbox.\n   * It sets the cursor back to 'Explore' mode cursor.\n   */\n  private explorePointerOut() {\n    GameGlobalAPI.getInstance().setDefaultCursor(ExploreModeConstants.normal);\n  }\n\n  /**\n   * Function to be executed when user click on the interatable object/bbox.\n   *\n   * It will prompt GameStateManager to record that this interaction has\n   * been triggered.\n   *\n   * @param id id of the object, to be used to inform GameStateManager\n   */\n  private explorePointerUp(id: string) {\n    GameGlobalAPI.getInstance().setDefaultCursor(Constants.defaultCursor);\n    GameGlobalAPI.getInstance().triggerInteraction(id);\n    GameGlobalAPI.getInstance().setDefaultCursor(ExploreModeConstants.normal);\n  }\n}\n\nexport default GameModeExplore;\n","import { GamePhaseType } from '../phase/GamePhaseTypes';\n\nexport enum GameMode {\n  Move = 'Move',\n  Explore = 'Explore',\n  Talk = 'Talk',\n  Menu = 'Menu'\n}\n\nexport const gameModeToPhase = {\n  Move: GamePhaseType.Move,\n  Explore: GamePhaseType.Explore,\n  Talk: GamePhaseType.Talk,\n  Menu: GamePhaseType.Menu\n};\n","import FontAssets from '../../assets/FontAssets';\nimport { screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\n\nexport const modeButtonStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 45,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst MenuModeConstants = {\n  button: { yOffset: screenSize.y * 0.3 },\n  entryTweenProps: {\n    y: 0,\n    duration: 500,\n    ease: 'Power2'\n  },\n  exitTweenProps: {\n    y: screenSize.y * 0.4,\n    duration: 300,\n    ease: 'Power2'\n  }\n};\n\nexport default MenuModeConstants;\n","import GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport ImageAssets from '../../assets/ImageAssets';\nimport SoundAssets from '../../assets/SoundAssets';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport { IGameUI } from '../../commons/CommonTypes';\nimport { fadeAndDestroy } from '../../effects/FadeEffect';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { GameItemType } from '../../location/GameMapTypes';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { sleep } from '../../utils/GameUtils';\nimport { calcTableFormatPos } from '../../utils/StyleUtils';\nimport { GameMode, gameModeToPhase } from '../GameModeTypes';\nimport MenuModeConstants, { modeButtonStyle } from './GameModeMenuConstants';\n\n/**\n * The class in charge of showing the \"Menu\" mode UI\n * which displays the menu for players\n * to choose the game mode they want to play\n * in a location\n */\nclass GameModeMenu implements IGameUI {\n  private uiContainer: Phaser.GameObjects.Container | undefined;\n\n  /**\n   * Fetches the game modes of the current location id.\n   */\n  private getLatestLocationModes() {\n    const currLocId = GameGlobalAPI.getInstance().getCurrLocId();\n    let latestModesInLoc = GameGlobalAPI.getInstance().getLocationModes(currLocId);\n    const talkTopics = GameGlobalAPI.getInstance().getGameItemsInLocation(\n      GameItemType.talkTopics,\n      currLocId\n    );\n\n    // Remove talk mode if there is no talk topics\n    if (talkTopics.length === 0) {\n      latestModesInLoc = latestModesInLoc.filter(mode => mode !== GameMode.Talk);\n    }\n\n    return latestModesInLoc;\n  }\n\n  /**\n   * Create the container that encapsulate the 'Menu' mode UI,\n   * i.e. the modes selection.\n   */\n  private createUIContainer() {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const modeMenuContainer = new Phaser.GameObjects.Container(gameManager, 0, 0);\n\n    const modeBanner = new Phaser.GameObjects.Image(\n      gameManager,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.modeMenuBanner.key\n    );\n    modeMenuContainer.add(modeBanner);\n\n    const modes = this.getLatestLocationModes();\n    const buttons = this.getModeButtons(modes);\n    const buttonPositions = calcTableFormatPos({\n      numOfItems: buttons.length\n    });\n\n    modeMenuContainer.add(\n      buttons.map((button, index) =>\n        this.createModeButton(\n          button.text,\n          buttonPositions[index][0],\n          buttonPositions[index][1] + MenuModeConstants.button.yOffset,\n          button.callback\n        )\n      )\n    );\n    return modeMenuContainer;\n  }\n\n  /**\n   * Get the mode buttons preset to be formatted later.\n   * The preset includes the text to be displayed on the button and\n   * its functionality (phase change callback).\n   *\n   * @param modes modes to be shown\n   */\n  private getModeButtons(modes: GameMode[]) {\n    return modes.sort().map(mode => {\n      return {\n        text: mode,\n        callback: async () => await GameGlobalAPI.getInstance().swapPhase(gameModeToPhase[mode])\n      };\n    });\n  }\n\n  /**\n   * Format the button information to a UI container, complete with\n   * styling and functionality.\n   *\n   * @param text text to be displayed on the button\n   * @param xPos x position of the button\n   * @param yPos y position of the button\n   * @param callback callback to be executed on click\n   */\n  private createModeButton(text: string, xPos: number, yPos: number, callback: any) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    return createButton(gameManager, {\n      assetKey: ImageAssets.shortButton.key,\n      message: text,\n      textConfig: { x: 0, y: 0, oriX: 0.5, oriY: 0.25 },\n      bitMapTextStyle: modeButtonStyle,\n      onUp: callback\n    }).setPosition(xPos, yPos);\n  }\n\n  /**\n   * Activate the 'Menu' mode UI.\n   *\n   * Usually only called by the phase manager when 'Menu' phase is\n   * pushed.\n   */\n  public async activateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    this.uiContainer = this.createUIContainer();\n    GameGlobalAPI.getInstance().addToLayer(Layer.UI, this.uiContainer);\n\n    this.uiContainer.setPosition(this.uiContainer.x, screenSize.y);\n\n    gameManager.tweens.add({\n      targets: this.uiContainer,\n      ...MenuModeConstants.entryTweenProps\n    });\n    await sleep(500);\n    GameGlobalAPI.getInstance().playSound(SoundAssets.modeEnter.key);\n  }\n\n  /**\n   * Deactivate the 'Menu' mode UI.\n   *\n   * Usually only called by the phase manager when 'Menu' phase is\n   * transitioned out.\n   */\n  public async deactivateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n\n    if (this.uiContainer) {\n      this.uiContainer.setPosition(this.uiContainer.x, 0);\n\n      gameManager.tweens.add({\n        targets: this.uiContainer,\n        ...MenuModeConstants.exitTweenProps\n      });\n\n      await sleep(500);\n      fadeAndDestroy(gameManager, this.uiContainer);\n    }\n  }\n}\n\nexport default GameModeMenu;\n","import FontAssets from '../../assets/FontAssets';\nimport { screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\n\nexport const moveButtonStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst MoveModeConstants = {\n  button: { xOffSet: screenSize.x * 0.25, ySpace: screenSize.y * 0.8 },\n  preview: {\n    rect: {\n      x: screenSize.x * 0.3125,\n      y: screenSize.y * 0.515,\n      width: screenSize.x * 0.473,\n      height: screenSize.y * 0.56\n    },\n    frame: { x: screenSize.x * 0.3 }\n  }\n};\n\nexport default MoveModeConstants;\n","import ImageAssets from '../../assets/ImageAssets';\nimport SoundAssets from '../../assets/SoundAssets';\nimport CommonBackButton from '../../commons/CommonBackButton';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport { IGameUI } from '../../commons/CommonTypes';\nimport { fadeAndDestroy } from '../../effects/FadeEffect';\nimport { entryTweenProps, exitTweenProps } from '../../effects/FlyEffect';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { GameItemType, LocationId } from '../../location/GameMapTypes';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\nimport GameGlobalAPI from '../../scenes/gameManager/GameGlobalAPI';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { sleep } from '../../utils/GameUtils';\nimport { calcTableFormatPos } from '../../utils/StyleUtils';\nimport MoveModeConstants, { moveButtonStyle } from './GameModeMoveConstants';\n\n/**\n * The class in charge of showing the \"Move\" UI\n * to show the images and titles of navigable\n * locations from one location\n */\nclass GameModeMove implements IGameUI {\n  private uiContainer: Phaser.GameObjects.Container | undefined;\n\n  /**\n   * Set the location preview sprite to the given asset key.\n   *\n   * @param sprite sprite for which its texture will be replaced with the new preview\n   * @param assetKey asset key of the new preview\n   */\n  private setPreview(sprite: Phaser.GameObjects.Sprite, assetKey: string) {\n    sprite\n      .setTexture(assetKey)\n      .setDisplaySize(MoveModeConstants.preview.rect.width, MoveModeConstants.preview.rect.height)\n      .setPosition(MoveModeConstants.preview.rect.x, MoveModeConstants.preview.rect.y);\n  }\n\n  /**\n   * Fetches the navigations of the current location id.\n   */\n  private getLatestNavigations() {\n    return GameGlobalAPI.getInstance().getGameItemsInLocation(\n      GameItemType.navigation,\n      GameGlobalAPI.getInstance().getCurrLocId()\n    );\n  }\n\n  /**\n   * Create the container that encapsulate the 'Move' mode UI,\n   * i.e. the navigation, the back button, as well the preview of\n   * the location.\n   */\n  private createUIContainer() {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const moveMenuContainer = new Phaser.GameObjects.Container(gameManager, 0, 0);\n\n    // Preview\n    const previewFrame = new Phaser.GameObjects.Sprite(\n      gameManager,\n      MoveModeConstants.preview.frame.x,\n      screenCenter.y,\n      ImageAssets.locationPreviewFrame.key\n    );\n    const previewFill = new Phaser.GameObjects.Sprite(\n      gameManager,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.locationPreviewFill.key\n    );\n    moveMenuContainer.add([previewFrame, previewFill]);\n\n    // Add all navigation buttons\n    const navigations = this.getLatestNavigations();\n    const buttons = this.getMoveButtons(navigations, previewFill);\n    const buttonPositions = calcTableFormatPos({\n      numOfItems: buttons.length,\n      numItemLimit: 1,\n      maxYSpace: MoveModeConstants.button.ySpace\n    });\n\n    moveMenuContainer.add(\n      buttons.map((button, index) =>\n        this.createMoveButton(\n          button.text,\n          buttonPositions[index][0] + MoveModeConstants.button.xOffSet,\n          buttonPositions[index][1],\n          button.callback,\n          button.onHover,\n          button.onOut\n        )\n      )\n    );\n\n    const backButton = new CommonBackButton(\n      gameManager,\n      async () => await GameGlobalAPI.getInstance().swapPhase(GamePhaseType.Menu)\n    );\n    moveMenuContainer.add(backButton);\n\n    // Initial setting\n    this.setPreview(previewFill, ImageAssets.defaultLocationImg.key);\n\n    return moveMenuContainer;\n  }\n\n  /**\n   * Get the move buttons preset to be formatted later.\n   * The preset includes the text to be displayed on the button and\n   * its functionality (change location callback).\n   *\n   * @param navigations navigations from the current location\n   * @param previewSprite the sprite in which to show the location preview, to be included\n   *                      in the callback\n   */\n  private getMoveButtons(navigations: LocationId[], previewSprite: Phaser.GameObjects.Sprite) {\n    const previewLoc = (assetKey: string) => this.setPreview(previewSprite, assetKey);\n    const previewDefault = () => this.setPreview(previewSprite, ImageAssets.defaultLocationImg.key);\n\n    return navigations.map(nav => {\n      const location = GameGlobalAPI.getInstance().getLocationAtId(nav);\n      return {\n        text: location.name,\n        callback: async () => {\n          await GameGlobalAPI.getInstance().swapPhase(GamePhaseType.Sequence);\n          await GameGlobalAPI.getInstance().changeLocationTo(nav);\n        },\n        onHover: () => previewLoc(location.previewKey || location.assetKey),\n        onOut: () => previewDefault()\n      };\n    });\n  }\n\n  /**\n   * Format the button information to a UI container, complete with\n   * styling and functionality.\n   *\n   * @param text text to be displayed on the button\n   * @param xPos x position of the button\n   * @param yPos y position of the button\n   * @param callback callback to be executed on click\n   * @param onHover callback to be executed on hover\n   * @param onOut callback to be executed on out hover\n   */\n  private createMoveButton(\n    text: string,\n    xPos: number,\n    yPos: number,\n    callback: any,\n    onHover: any,\n    onOut: any\n  ) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    return createButton(gameManager, {\n      assetKey: ImageAssets.longButton.key,\n      message: text,\n      textConfig: { x: 0, y: 0, oriX: 0.4, oriY: 0.15 },\n      bitMapTextStyle: moveButtonStyle,\n      onUp: callback,\n      onHover: onHover,\n      onOut: onOut\n    }).setPosition(xPos, yPos);\n  }\n\n  /**\n   * Activate the 'Move' mode UI.\n   *\n   * Usually only called by the phase manager when 'Move' phase is\n   * pushed.\n   */\n  public async activateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    this.uiContainer = this.createUIContainer();\n    GameGlobalAPI.getInstance().addToLayer(Layer.UI, this.uiContainer);\n\n    this.uiContainer.setPosition(this.uiContainer.x, -screenSize.y);\n\n    gameManager.tweens.add({\n      targets: this.uiContainer,\n      ...entryTweenProps\n    });\n    GameGlobalAPI.getInstance().playSound(SoundAssets.modeEnter.key);\n  }\n\n  /**\n   * Deactivate the 'Move' mode UI.\n   *\n   * Usually only called by the phase manager when 'Move' phase is\n   * transitioned out.\n   */\n  public async deactivateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n\n    if (this.uiContainer) {\n      this.uiContainer.setPosition(this.uiContainer.x, 0);\n\n      gameManager.tweens.add({\n        targets: this.uiContainer,\n        ...exitTweenProps\n      });\n\n      await sleep(500);\n      fadeAndDestroy(gameManager, this.uiContainer);\n    }\n  }\n}\n\nexport default GameModeMove;\n","import { IGameUI } from '../../commons/CommonTypes';\n\n/**\n * This is the phase that is active when none of\n * the mode UI's are being shown.\n *\n * It is used for dialogue/popups and notifications\n */\nclass GameModeSequence implements IGameUI {\n  public activateUI() {}\n  public deactivateUI() {}\n}\n\nexport default GameModeSequence;\n","import FontAssets from '../../assets/FontAssets';\nimport { screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\n\nexport const talkButtonStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst TalkModeConstants = {\n  button: { ySpace: screenSize.y * 0.7 }\n};\n\nexport default TalkModeConstants;\n","import GameGlobalAPI from 'src/features/game/scenes/gameManager/GameGlobalAPI';\n\nimport ImageAssets from '../../assets/ImageAssets';\nimport SoundAssets from '../../assets/SoundAssets';\nimport CommonBackButton from '../../commons/CommonBackButton';\nimport { screenSize } from '../../commons/CommonConstants';\nimport { IGameUI, ItemId } from '../../commons/CommonTypes';\nimport { fadeAndDestroy } from '../../effects/FadeEffect';\nimport { entryTweenProps, exitTweenProps } from '../../effects/FlyEffect';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { GameItemType } from '../../location/GameMapTypes';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { mandatory, sleep } from '../../utils/GameUtils';\nimport { calcTableFormatPos, Direction } from '../../utils/StyleUtils';\nimport TalkModeConstants, { talkButtonStyle } from './GameModeTalkConstants';\n\n/**\n * The class renders the \"Talk\" UI which displays\n * a selection of all the dialogues that players can\n * talk about in a location.\n */\nclass GameModeTalk implements IGameUI {\n  private uiContainer: Phaser.GameObjects.Container | undefined;\n\n  /**\n   * Fetches the talk topics of the current location id.\n   */\n  private getLatestTalkTopics() {\n    return GameGlobalAPI.getInstance().getGameItemsInLocation(\n      GameItemType.talkTopics,\n      GameGlobalAPI.getInstance().getCurrLocId()\n    );\n  }\n\n  /**\n   * Create the container that encapsulate the 'Talk' mode UI,\n   * i.e. the talk topics, the back button, as well the checked\n   * icon for triggered talk topics.\n   */\n  private createUIContainer() {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    const talkMenuContainer = new Phaser.GameObjects.Container(gameManager, 0, 0);\n\n    // Add talk topics of the location\n    const talkTopics = this.getLatestTalkTopics();\n    const buttons = this.getTalkTopicButtons(talkTopics);\n    const buttonPositions = calcTableFormatPos({\n      direction: Direction.Column,\n      numOfItems: buttons.length,\n      maxYSpace: TalkModeConstants.button.ySpace\n    });\n\n    talkMenuContainer.add(\n      buttons.map((button, index) =>\n        this.createTalkTopicButton(\n          button.text,\n          buttonPositions[index][0],\n          buttonPositions[index][1],\n          button.callback\n        )\n      )\n    );\n\n    // Add check for interacted talk topics\n    buttons.forEach((button, index) => {\n      const checkedSprite = new Phaser.GameObjects.Sprite(\n        gameManager,\n        buttonPositions[index][0],\n        buttonPositions[index][1],\n        ImageAssets.talkOptCheck.key\n      );\n\n      const isTriggeredTopic =\n        !!button.interactionId &&\n        GameGlobalAPI.getInstance().hasTriggeredInteraction(button.interactionId);\n\n      if (isTriggeredTopic) {\n        talkMenuContainer.add(checkedSprite);\n      }\n    });\n\n    const backButton = new CommonBackButton(\n      gameManager,\n      async () => await GameGlobalAPI.getInstance().swapPhase(GamePhaseType.Menu)\n    );\n    talkMenuContainer.add(backButton);\n    return talkMenuContainer;\n  }\n\n  /**\n   * Get the talk topics button preset to be formatted later.\n   * The preset includes the text to be displayed on the button and\n   * its functionality (dialogue callback).\n   *\n   * @param dialogueIds dialogue IDs to create talk topics from\n   */\n  private getTalkTopicButtons(dialogueIds: ItemId[]) {\n    return dialogueIds.map(dialogueId => {\n      const dialogue = mandatory(GameGlobalAPI.getInstance().getDialogueById(dialogueId));\n      return {\n        text: dialogue.title,\n        callback: async () => {\n          GameGlobalAPI.getInstance().triggerInteraction(dialogueId);\n          await GameGlobalAPI.getInstance().showDialogue(dialogueId);\n        },\n        interactionId: dialogueId\n      };\n    });\n  }\n\n  /**\n   * Format the button information to a UI container, complete with\n   * styling and functionality.\n   *\n   * @param text text to be displayed on the button\n   * @param xPos x position of the button\n   * @param yPos y position of the button\n   * @param callback callback to be executed on click\n   */\n  private createTalkTopicButton(text: string, xPos: number, yPos: number, callback: any) {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    return createButton(gameManager, {\n      assetKey: ImageAssets.talkOptButton.key,\n      message: text,\n      textConfig: { x: 0, y: 0, oriX: 0.5, oriY: 0.2 },\n      bitMapTextStyle: talkButtonStyle,\n      onUp: callback\n    }).setPosition(xPos, yPos);\n  }\n\n  /**\n   * Activate the 'Talk' mode UI.\n   *\n   * Usually only called by the phase manager when 'Talk' phase is\n   * pushed.\n   */\n  public async activateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    this.uiContainer = this.createUIContainer();\n    GameGlobalAPI.getInstance().addToLayer(Layer.UI, this.uiContainer);\n\n    this.uiContainer.setPosition(this.uiContainer.x, -screenSize.y);\n\n    gameManager.tweens.add({\n      targets: this.uiContainer,\n      ...entryTweenProps\n    });\n    GameGlobalAPI.getInstance().playSound(SoundAssets.modeEnter.key);\n  }\n\n  /**\n   * Deactivate the 'Talk' mode UI.\n   *\n   * Usually only called by the phase manager when 'Talk' phase is\n   * transitioned out.\n   */\n  public async deactivateUI(): Promise<void> {\n    const gameManager = GameGlobalAPI.getInstance().getGameManager();\n    if (this.uiContainer) {\n      this.uiContainer.setPosition(this.uiContainer.x, 0);\n\n      gameManager.tweens.add({\n        targets: this.uiContainer,\n        ...exitTweenProps\n      });\n\n      await sleep(500);\n      fadeAndDestroy(gameManager, this.uiContainer);\n    }\n  }\n}\n\nexport default GameModeTalk;\n","import GameActionManager from '../../action/GameActionManager';\nimport GameAnimationManager from '../../animations/GameAnimationManager';\nimport { AssetType, ImageAsset } from '../../assets/AssetsTypes';\nimport GameAwardsManager from '../../awards/GameAwardsManager';\nimport GameBackgroundManager from '../../background/GameBackgroundManager';\nimport GameBBoxManager from '../../boundingBoxes/GameBoundingBoxManager';\nimport { GameCheckpoint } from '../../chapter/GameChapterTypes';\nimport GameCharacterManager from '../../character/GameCharacterManager';\nimport { Constants } from '../../commons/CommonConstants';\nimport { AssetKey } from '../../commons/CommonTypes';\nimport GameDashboardManager from '../../dashboard/GameDashboardManager';\nimport { DashboardPage } from '../../dashboard/GameDashboardTypes';\nimport GameDialogueManager from '../../dialogue/GameDialogueManager';\nimport GameDialogueStorageManager from '../../dialogue/GameDialogueStorageManager';\nimport { blackFade, blackScreen, fadeIn } from '../../effects/FadeEffect';\nimport { addLoadingScreen } from '../../effects/LoadingScreen';\nimport GameEscapeManager from '../../escape/GameEscapeManager';\nimport GameInputManager from '../../input/GameInputManager';\nimport GameLayerManager from '../../layer/GameLayerManager';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { LocationId } from '../../location/GameMapTypes';\nimport GameLogManager from '../../log/GameLogManager';\nimport GameObjectManager from '../../objects/GameObjectManager';\nimport GamePhaseManager from '../../phase/GamePhaseManager';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\nimport GamePopUpManager from '../../popUp/GamePopUpManager';\nimport SourceAcademyGame from '../../SourceAcademyGame';\nimport GameStateManager from '../../state/GameStateManager';\nimport GameTaskLogManager from '../../task/GameTaskLogManager';\nimport GameToolbarManager from '../../toolbar/GameToolbarManager';\nimport { mandatory, sleep, toS3Path } from '../../utils/GameUtils';\nimport GameGlobalAPI from './GameGlobalAPI';\nimport { createGamePhases } from './GameManagerHelper';\n\ntype GameManagerProps = {\n  continueGame: boolean;\n  chapterNum: number;\n  checkpointNum: number;\n  gameCheckpoint: GameCheckpoint;\n};\n\n/**\n * Main scene that plays the checkpoint.\n *\n * It processes checkpoint objects and loads\n * the chapter exclusive assets (location image, sounds).\n *\n * It also handles main gameplay loop, e.g. switching between modes,\n * activation of escape or collectible menu, location switching,\n * triggering actions, etc.\n */\nclass GameManager extends Phaser.Scene {\n  public currentLocationId: LocationId;\n  public hasTransitioned: boolean;\n  private stateManager?: GameStateManager;\n  private layerManager?: GameLayerManager;\n  private objectManager?: GameObjectManager;\n  private characterManager?: GameCharacterManager;\n  private dialogueManager?: GameDialogueManager;\n  private actionManager?: GameActionManager;\n  private boundingBoxManager?: GameBBoxManager;\n  private popUpManager?: GamePopUpManager;\n  private phaseManager?: GamePhaseManager;\n  private backgroundManager?: GameBackgroundManager;\n  private animationManager?: GameAnimationManager;\n  private inputManager?: GameInputManager;\n  private escapeManager?: GameEscapeManager;\n  private collectibleManager?: GameAwardsManager;\n  private achievementManager?: GameAwardsManager;\n  private logManager?: GameLogManager;\n  private dialogueStorageManager?: GameDialogueStorageManager;\n  private toolbarManager?: GameToolbarManager;\n  private taskLogManager?: GameTaskLogManager;\n  private dashboardManager?: GameDashboardManager;\n\n  constructor() {\n    super('GameManager');\n    this.currentLocationId = Constants.nullInteractionId;\n    this.hasTransitioned = false;\n  }\n\n  public init({ gameCheckpoint, continueGame, chapterNum, checkpointNum }: GameManagerProps) {\n    GameGlobalAPI.getInstance().setGameManager(this);\n    SourceAcademyGame.getInstance().setCurrentSceneRef(this);\n    this.getSaveManager().registerGameInfo(chapterNum, checkpointNum, continueGame);\n    this.currentLocationId =\n      this.getSaveManager().getLoadedLocation() || gameCheckpoint.startingLoc;\n    this.hasTransitioned = false;\n\n    this.stateManager = new GameStateManager(gameCheckpoint);\n    this.layerManager = new GameLayerManager(this);\n    this.inputManager = new GameInputManager(this);\n    this.phaseManager = new GamePhaseManager(createGamePhases(), this.inputManager);\n    this.characterManager = new GameCharacterManager();\n    this.objectManager = new GameObjectManager();\n    this.dialogueManager = new GameDialogueManager();\n    this.actionManager = new GameActionManager();\n    this.boundingBoxManager = new GameBBoxManager();\n    this.backgroundManager = new GameBackgroundManager();\n    this.animationManager = new GameAnimationManager();\n    this.popUpManager = new GamePopUpManager();\n    this.escapeManager = new GameEscapeManager(this);\n    this.collectibleManager = new GameAwardsManager(\n      this,\n      SourceAcademyGame.getInstance().getUserStateManager().getCollectibles\n    );\n    this.achievementManager = new GameAwardsManager(\n      this,\n      SourceAcademyGame.getInstance().getUserStateManager().getAchievements\n    );\n    this.logManager = new GameLogManager(this);\n    this.dialogueStorageManager = new GameDialogueStorageManager();\n    this.toolbarManager = new GameToolbarManager(this);\n    this.taskLogManager = new GameTaskLogManager(this);\n    this.dashboardManager = new GameDashboardManager(\n      this,\n      [\n        DashboardPage.Log,\n        DashboardPage.Tasks,\n        DashboardPage.Collectibles,\n        DashboardPage.Achievements\n      ],\n      [this.logManager, this.taskLogManager, this.collectibleManager, this.achievementManager]\n    );\n  }\n\n  //////////////////////\n  //    Preload       //\n  //////////////////////\n\n  public preload() {\n    addLoadingScreen(this);\n    this.getPhaseManager().setInterruptCheckCallback(\n      (prevPhase: GamePhaseType, newPhase: GamePhaseType) =>\n        this.transitionChecker(prevPhase, newPhase)\n    );\n    this.getPhaseManager().setInterruptCallback(\n      async (prevPhase: GamePhaseType, newPhase: GamePhaseType) => await this.checkpointTransition()\n    );\n    this.getPhaseManager().setCallback(\n      async (prevPhase: GamePhaseType, newPhase: GamePhaseType) =>\n        await this.handleCharacterLayer(prevPhase, newPhase)\n    );\n    this.preloadLocationsAssets();\n    this.bindKeyboardTriggers();\n  }\n\n  /**\n   * Preload all assets (image and sounds) exclusive to the checkpoint's gamemap.\n   */\n  private preloadLocationsAssets() {\n    const gameMap = this.getStateManager().getGameMap();\n    GameGlobalAPI.getInstance().loadSounds(gameMap.getSoundAssets());\n    gameMap.getMapAssets().forEach((image, assetKey) => {\n      this.loadImage(image, assetKey);\n    });\n  }\n\n  /**\n   * Loads each asset type (image, sprite) appropriately\n   *\n   * @param image ImageAsset object to be loaded\n   * @param assetKey asset key of ImageAsset\n   */\n  private loadImage(image: ImageAsset, assetKey: AssetKey) {\n    switch (image.type) {\n      case AssetType.Image:\n        this.load.image(assetKey, toS3Path(image.path, true));\n        break;\n      case AssetType.Sprite:\n        this.load.spritesheet(assetKey, toS3Path(image.path, true), image.config);\n        break;\n      default:\n        break;\n    }\n  }\n\n  //////////////////////\n  // Location Helpers //\n  //////////////////////\n\n  public async create() {\n    GameGlobalAPI.getInstance().hideLayer(Layer.Character);\n    await this.changeLocationTo(this.currentLocationId, true);\n    await GameGlobalAPI.getInstance().saveGame();\n  }\n\n  /**\n   * Render a location, the assets related to it (objects, character);\n   * before executing the following in order (if available):\n   *\n   * Start Action, Notification, Cutscene\n   *\n   * Start action is only played when startAction argument is set to true;\n   * commonly only the first time user loads the checkpoint.\n   *\n   * @param locationId id of the location to render\n   * @param startAction if set to true, startAction will be executed\n   */\n  private async renderLocation(locationId: LocationId, startAction: boolean) {\n    const gameLocation = GameGlobalAPI.getInstance().getLocationAtId(locationId);\n\n    // Render the toolbar in every location\n    this.getToolbarManager().renderToolbarContainer();\n\n    // Play the BGM attached to the location\n    await GameGlobalAPI.getInstance().playBgMusic(gameLocation.bgmKey);\n\n    // Render all assets related to the location\n    this.getBackgroundManager().renderBackgroundLayerContainer(locationId);\n    this.getObjectManager().renderObjectsLayerContainer(locationId);\n    this.getBBoxManager().renderBBoxLayerContainer(locationId);\n    this.getCharacterManager().renderCharacterLayerContainer(locationId);\n\n    await this.getPhaseManager().swapPhase(GamePhaseType.Sequence);\n\n    if (startAction) {\n      // Execute fast forward actions\n      await this.getActionManager().fastForwardGameActions(\n        this.getStateManager().getTriggeredStateChangeActions()\n      );\n      // Game start actions\n      await this.getActionManager().processGameActions(\n        this.getStateManager().getGameMap().getGameStartActions()\n      );\n    }\n\n    // Location cutscene\n    await this.getActionManager().processGameActions(gameLocation.actionIds);\n\n    // Location notification\n    if (this.getStateManager().hasLocationNotif(locationId)) {\n      await GameGlobalAPI.getInstance().bringUpUpdateNotif(gameLocation.name);\n      this.getStateManager().removeLocationNotif(locationId);\n    }\n\n    if (this.getPhaseManager().isCurrentPhase(GamePhaseType.Sequence)) {\n      await this.getPhaseManager().swapPhase(GamePhaseType.Menu);\n    }\n  }\n\n  /**\n   * Change the current location to another location, based on the ID.\n   * This will properly clean up the previous location. It is highly\n   * encouraged to only change location of the game using this method.\n   *\n   * @param locationId id of location to be changed into\n   * @param startAction if set to true, start action will be triggered\n   */\n  public async changeLocationTo(locationId: LocationId, startAction: boolean = false) {\n    this.currentLocationId = locationId;\n\n    // Transition to the new location\n    await blackFade(this, 300, 500, async () => {\n      await this.getLayerManager().clearAllLayers();\n      await this.renderLocation(locationId, startAction);\n    });\n\n    // Update state after location is fully rendered, location has been visited\n    this.getStateManager().triggerInteraction(locationId);\n  }\n\n  /**\n   * Bind escape menu and dashboard to keyboard triggers.\n   */\n  private bindKeyboardTriggers() {\n    this.getInputManager().registerKeyboardListener(\n      Phaser.Input.Keyboard.KeyCodes.ESC,\n      'up',\n      async () => {\n        if (this.getPhaseManager().isCurrentPhaseTerminal()) {\n          await this.getPhaseManager().popPhase();\n        } else {\n          await this.getPhaseManager().pushPhase(GamePhaseType.EscapeMenu);\n        }\n      }\n    );\n    this.getInputManager().registerKeyboardListener(\n      Phaser.Input.Keyboard.KeyCodes.TAB,\n      'up',\n      async () => {\n        if (this.getPhaseManager().isCurrentPhase(GamePhaseType.Dashboard)) {\n          await this.getPhaseManager().popPhase();\n        } else if (this.getPhaseManager().isCurrentPhaseTerminal()) {\n          await this.getPhaseManager().swapPhase(GamePhaseType.Dashboard);\n        } else {\n          await this.getPhaseManager().pushPhase(GamePhaseType.Dashboard);\n        }\n      }\n    );\n  }\n\n  /**\n   * Clean up on related managers\n   */\n  public cleanUp() {\n    this.getInputManager().clearListeners();\n    this.getLayerManager().clearAllLayers();\n    this.getDialogueStorageManager().clearDialogueStorage();\n  }\n\n  /**\n   * Checks whether game is able to transition to the next checkpoint.\n   * Game is only able to transition to the next checkpoint\n   * if all of the objectives of the current checkpoint has been cleared.\n   *\n   * We also do not want to go Transition scene if players have just\n   * completed the chapter so that they can don't get kicked out of the\n   * chapter if they've already finished it before.\n   * This is unless they press replay, which sets their chapNewlyCompleted back to false.\n   *\n   * Additionally, game will only transition if the newPhase is not Sequence phase;\n   * in order to ensure that we don't transition to the next checkpoint\n   * during dialogue/cutscene.\n   *\n   * This method is passed to the phase manager, as the interrupt checker.\n   *\n   * @param prevPhase previous phase to transition from\n   * @param newPhase new phase to transition to\n   */\n  public transitionChecker(prevPhase: GamePhaseType, newPhase: GamePhaseType) {\n    return (\n      !this.hasTransitioned &&\n      newPhase !== GamePhaseType.Sequence &&\n      GameGlobalAPI.getInstance().areAllObjectivesComplete() &&\n      !this.getStateManager().getChapterNewlyCompleted()\n    );\n  }\n\n  /**\n   * Transition to the next checkpoint and resets the input setting.\n   *\n   * This method is passed to the phase manager\n   * as the interrupt transition callback.\n   */\n  public async checkpointTransition() {\n    this.hasTransitioned = true;\n\n    await this.getActionManager().processGameActions(\n      this.getStateManager().getGameMap().getCheckpointCompleteActions()\n    );\n\n    // Reset input and cursor, in case it is changed after story complete actions\n    this.getInputManager().setDefaultCursor(Constants.defaultCursor);\n    this.getInputManager().enableMouseInput(true);\n    this.getInputManager().enableKeyboardInput(true);\n\n    this.tweens.add(fadeIn([blackScreen(this).setAlpha(0)], Constants.fadeDuration));\n    await sleep(Constants.fadeDuration);\n\n    // Clean up all layers & current storage\n    this.cleanUp();\n\n    // Start the next Checkpoint\n    this.scene.start('CheckpointTransition');\n  }\n\n  /**\n   * Handle when character layer should be shown and hidden.\n   * Character layer should only be shown when student is at\n   * Menu Mode.\n   *\n   * This method is passed to the phase manager, to be executed on\n   * every phase transition.\n   *\n   * @param prevPhase previous phase to transition from\n   * @param newPhase new phase to transition to\n   */\n  public async handleCharacterLayer(prevPhase: GamePhaseType, newPhase: GamePhaseType) {\n    if (prevPhase === GamePhaseType.Menu) {\n      GameGlobalAPI.getInstance().fadeOutLayer(Layer.Character);\n    }\n\n    if (newPhase === GamePhaseType.Menu) {\n      GameGlobalAPI.getInstance().fadeInLayer(Layer.Character);\n    }\n  }\n\n  public getSaveManager = () => SourceAcademyGame.getInstance().getSaveManager();\n  public getStateManager = () => mandatory(this.stateManager);\n  public getObjectManager = () => mandatory(this.objectManager);\n  public getDialogueManager = () => mandatory(this.dialogueManager);\n  public getCharacterManager = () => mandatory(this.characterManager);\n  public getBBoxManager = () => mandatory(this.boundingBoxManager);\n  public getActionManager = () => mandatory(this.actionManager);\n  public getInputManager = () => mandatory(this.inputManager);\n  public getLayerManager = () => mandatory(this.layerManager);\n  public getPhaseManager = () => mandatory(this.phaseManager);\n  public getBackgroundManager = () => mandatory(this.backgroundManager);\n  public getAnimationManager = () => mandatory(this.animationManager);\n  public getPopupManager = () => mandatory(this.popUpManager);\n  public getEscapeManager = () => mandatory(this.escapeManager);\n  public getCollectibleManager = () => mandatory(this.collectibleManager);\n  public getAchievementManager = () => mandatory(this.achievementManager);\n  public getLogManager = () => mandatory(this.logManager);\n  public getDialogueStorageManager = () => mandatory(this.dialogueStorageManager);\n  public getToolbarManager = () => mandatory(this.toolbarManager);\n  public getTaskLogManager = () => mandatory(this.taskLogManager);\n  public getDashboardManager = () => mandatory(this.dashboardManager);\n}\n\nexport default GameManager;\n","import GameModeExplore from '../../mode/explore/GameModeExplore';\nimport GameModeMenu from '../../mode/menu/GameModeMenu';\nimport GameModeMove from '../../mode/move/GameModeMove';\nimport GameModeSequence from '../../mode/sequence/GameModeSequence';\nimport GameModeTalk from '../../mode/talk/GameModeTalk';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\n\n/**\n * Game Manager phases, for the phase manager.\n */\nexport const createGamePhases = () => {\n  return new Map([\n    [GamePhaseType.Menu, new GameModeMenu()],\n    [GamePhaseType.Move, new GameModeMove()],\n    [GamePhaseType.Explore, new GameModeExplore()],\n    [GamePhaseType.Talk, new GameModeTalk()],\n    [GamePhaseType.Sequence, new GameModeSequence()],\n    [GamePhaseType.None, new GameModeSequence()]\n  ]);\n};\n","import GameManager from '../scenes/gameManager/GameManager';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { mandatory } from '../utils/GameUtils';\nimport { createEmptyGameSaveState, createEmptySaveState, gameStateToJson } from './GameSaveHelper';\nimport { loadData, saveData } from './GameSaveRequests';\nimport { FullSaveState, GameSaveState, SettingsJson } from './GameSaveTypes';\n\n/**\n * The manager provides API for loading and saving data from the backend\n * and is in charge of keeping record of the last save point, so that\n * players can make new save data based on the last one.\n */\nexport default class GameSaveManager {\n  private fullSaveState: FullSaveState;\n\n  private chapterNum?: number;\n  private checkpointNum?: number;\n\n  constructor() {\n    this.fullSaveState = createEmptySaveState();\n  }\n\n  /**\n   * Fetches the FullSaveState of the student at the start of the game\n   * and stores this internally as full save state\n   */\n  public async loadLastSaveState() {\n    this.fullSaveState = await loadData();\n  }\n\n  /**\n   * Updates the save manager with chapter number and checkpoint number\n   * if player has chosen a chapter/checkpoint to play with.\n   *\n   * Chapter number and checkpoint number can be -1 if inside the Story Simulator,\n   *\n   * @param chapterNum chapter number\n   * @param checkpointNum checkpoint number\n   * @param continueGame whether user wants to continue or restart the chapter.\n   */\n  public registerGameInfo(chapterNum: number, checkpointNum: number, continueGame: boolean) {\n    this.chapterNum = chapterNum;\n    this.checkpointNum = checkpointNum;\n    if (!continueGame) {\n      this.fullSaveState.gameSaveStates[chapterNum] = createEmptyGameSaveState();\n    }\n  }\n\n  ///////////////////////////////\n  //          Saving          //\n  ///////////////////////////////\n\n  /**\n   * Save the current game state as a JSON 'snapshot' to the backend.\n   * Can only be called inside the GameManager scene because this function retrieves\n   * informtion from GameManager, GameStateManager, or other in-game managers,\n   * and converts them into JSON format to be saved to backend.\n   *\n   * Only called when playing the Game (not Story Simulator), because Story Simulator\n   * shouldn't save game state to backend.\n   */\n  public async saveGame() {\n    if (SourceAcademyGame.getInstance().getCurrentSceneRef() instanceof GameManager) {\n      this.fullSaveState = gameStateToJson(\n        this.fullSaveState,\n        this.getChapterNum(),\n        this.getCheckpointNum()\n      );\n      await saveData(this.fullSaveState);\n    }\n  }\n\n  /**\n   * This function is called during CheckpointTransition to update\n   * and save that largest chapter that the player has completed\n   * so far.\n   *\n   * @param completedChapter the number of the completed chapter\n   */\n  public async saveChapterComplete(completedChapter: number) {\n    this.fullSaveState.gameSaveStates[completedChapter].chapterNewlyCompleted = true;\n    if (completedChapter > this.getLargestCompletedChapterNum()) {\n      this.fullSaveState.userSaveState.largestCompletedChapter = completedChapter;\n    }\n    await saveData(this.fullSaveState);\n  }\n\n  /**\n   * This function is called by the Escape Manager and Settings scene\n   * to store new user settings to the backend\n   *\n   * @param settingsJson the newest settings of the user\n   */\n  public async saveSettings(settingsJson: SettingsJson) {\n    this.fullSaveState.userSaveState.settings = settingsJson;\n    await saveData(this.fullSaveState);\n  }\n\n  ///////////////////////////////\n  //         Getters           //\n  ///////////////////////////////\n\n  /**\n   * Obtains user settings from full save state\n   *\n   * @returns User settings\n   */\n  public getSettings(): SettingsJson {\n    return this.fullSaveState.userSaveState.settings;\n  }\n\n  /**\n   * Obtains user state from full save state\n   */\n  public getLoadedUserState() {\n    return this.fullSaveState.userSaveState;\n  }\n\n  /**\n   * Obtains the largest completed chapter number by the player\n   */\n  public getLargestCompletedChapterNum(): number {\n    return this.fullSaveState.userSaveState.largestCompletedChapter;\n  }\n\n  /**\n   * Gets user's gamestate for this chapter\n   */\n  public getGameSaveState(): GameSaveState {\n    return this.fullSaveState.gameSaveStates[this.getChapterNum()] || createEmptyGameSaveState();\n  }\n\n  /**\n   * Gets user's location for this chapter if chapter has been created\n   */\n  public getLoadedLocation() {\n    return this.getGameSaveState().currentLocation;\n  }\n  /**\n   * Returns the save state for a particular chapter, if no data, then create an empty save state\n   */\n  public getChapterSaveState(index: number) {\n    return this.fullSaveState.gameSaveStates[index] || createEmptyGameSaveState();\n  }\n\n  public getTriggeredStateChangeActions = () => this.getGameSaveState().triggeredStateChangeActions;\n  public getTriggeredInteractions = () => this.getGameSaveState().triggeredInteractions;\n  public getCompletedObjectives = () => this.getGameSaveState().completedObjectives;\n  public getCompletedTasks = () => this.getGameSaveState().completedTasks;\n  public getIncompleteTasks = () => this.getGameSaveState().incompleteTasks;\n  public getLoadedPhase = () => this.getGameSaveState().currentPhase;\n  public getChapterNewlyCompleted = () => this.getGameSaveState().chapterNewlyCompleted;\n\n  public getChapterNum = () => mandatory(this.chapterNum);\n  public getCheckpointNum = () => mandatory(this.checkpointNum);\n  public getFullSaveState = () => this.fullSaveState;\n}\n","import _ from 'lodash';\nimport Constants from 'src/commons/utils/Constants';\n\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { courseId } from '../utils/GameUtils';\nimport { createEmptySaveState } from './GameSaveHelper';\nimport { FullSaveState } from './GameSaveTypes';\n\n/**\n * This function saves data to the backend under user's game state.\n *\n * @param fullSaveState - the entire game data that needs to be saved, including game state and userstate\n */\nexport async function saveData(fullSaveState: FullSaveState) {\n  if (SourceAcademyGame.getInstance().getAccountInfo().role !== 'student') {\n    return;\n  }\n\n  const options = {\n    method: 'PUT',\n    headers: createHeaders(SourceAcademyGame.getInstance().getAccountInfo().accessToken),\n    body: JSON.stringify({\n      gameStates: fullSaveState\n    })\n  };\n\n  const resp = await fetch(\n    `${Constants.backendUrl}/v2/courses/${courseId()}/user/game_states`,\n    options\n  );\n\n  if (resp && resp.ok) {\n    return resp;\n  }\n  return;\n}\n\n/**\n * This function fetches data from the backend.\n */\nexport async function loadData(): Promise<FullSaveState> {\n  const options = {\n    method: 'GET',\n    headers: createHeaders(SourceAcademyGame.getInstance().getAccountInfo().accessToken)\n  };\n\n  const resp = await fetch(`${Constants.backendUrl}/v2/user`, options);\n  const message = await resp.text();\n\n  const json = JSON.parse(message).courseRegistration?.gameStates;\n  return _.isEmpty(json) ? createEmptySaveState() : json;\n}\n\n/**\n * Format a header object.\n *\n * @param accessToken access token to be used\n */\nfunction createHeaders(accessToken: string): Headers {\n  const headers = new Headers();\n  headers.append('Accept', 'application/json');\n  headers.append('Authorization', `Bearer ${accessToken}`);\n  headers.append('Content-Type', 'application/json');\n  return headers;\n}\n","import FontAssets from '../assets/FontAssets';\nimport { BitmapFontStyle, ILayeredScene, TextConfig } from '../commons/CommonTypes';\nimport { createBitmapText } from '../utils/TextUtils';\n\nconst defaultGlitchStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\n/**\n * Create a bitmap text that glitches.\n *\n * Internally, we make use of multiple bitmap texts and apply\n * random small displacement to the individual bitmap texts.\n *\n * Returns an array of the individual bitmap texts.\n *\n * @param scene scene to attach it to\n * @param text text to show on the screen\n * @param baseTextConfig text config to be applied as the base to the text.\n *                       All random displacement is relative to this config\n * @param style style of the bitmap text\n * @param numOfFrames number of bitmap text to be created. The larger it is,\n *                    the more glitchy it becomes; but the more expensive is the effect\n * @param maxXDisplacement maximum horizontal displacement to be applied to the text\n * @param maxYDisplacement maximum vertical displacement to be applied to the text\n */\nexport function createGlitchBitmapText(\n  scene: ILayeredScene,\n  text: string,\n  baseTextConfig: TextConfig = { x: 0, y: 0, oriX: 0.5, oriY: 0.5 },\n  style: BitmapFontStyle = defaultGlitchStyle,\n  numOfFrames: number = 4,\n  maxXDisplacement: number = 5,\n  maxYDisplacement: number = 3\n) {\n  const textFrames = [];\n  for (let i = 0; i < numOfFrames; i++) {\n    const textConfig = {\n      x: baseTextConfig.x + maxXDisplacement * Math.random(),\n      y: baseTextConfig.y + maxYDisplacement * Math.random(),\n      oriX: baseTextConfig.oriX,\n      oriY: baseTextConfig.oriY\n    };\n    const bitmapText = createBitmapText(scene, text, textConfig, style);\n    bitmapText.setAlpha(0.4).setBlendMode(Phaser.BlendModes.SCREEN);\n    textFrames.push(bitmapText);\n  }\n\n  textFrames.forEach(bitmapText => {\n    scene.tweens.add({\n      targets: bitmapText,\n      x: bitmapText.x + maxXDisplacement * Math.random(),\n      y: bitmapText.y + maxYDisplacement * Math.random(),\n      alpha: 0.5,\n      duration: 20,\n      yoyo: true,\n      loop: -1,\n      loopDelay: 1000 * Math.random()\n    });\n  });\n\n  return textFrames;\n}\n","import SoundAssets from '../assets/SoundAssets';\nimport { Constants, screenCenter } from '../commons/CommonConstants';\nimport { ILayeredScene } from '../commons/CommonTypes';\nimport { Layer } from '../layer/GameLayerTypes';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { sleep } from '../utils/GameUtils';\nimport { calcListFormatPos } from '../utils/StyleUtils';\nimport { blackScreen, fadeAndDestroy, fadeIn } from './FadeEffect';\nimport { createGlitchBitmapText } from './Glitch';\n\nconst workerALines = [\n  'Clang. Thud. One hit to the wall, one hit to my flesh.',\n  '',\n  'They told me I was to be the pillar of this',\n  'spaceship - who knew they meant it literally?',\n  '- A. Halim'\n];\n\nconst workerTLines = [\n  'I blink synchronously with the screen;',\n  'I breathe as the machine steams on and off.',\n  '',\n  'Behind this closed space, my very blood fuels',\n  'these engines - hoping for you to find me.',\n  '- T. S. Chong'\n];\n\nconst WorkerConstants = {\n  yInterval: 80,\n  messageDuration: 5000\n};\n\n/**\n * Create a hidden interactive box that shows\n * the worker message when interacted with.\n *\n * Also adds it to the scene.\n *\n * @param scene scene for the box to be attached to\n * @param workerId either string 'A' or any other letter, represent which message to show\n * @param x top left hand corner of the hidden box\n * @param y top left hand corner of the hidden box\n * @param width width ot the box\n * @param height height of the box\n */\nexport function putWorkerMessage(\n  scene: ILayeredScene,\n  workerId: string,\n  x: number,\n  y: number,\n  width: number = 50,\n  height: number = 50\n) {\n  const rect = new Phaser.GameObjects.Rectangle(scene, x, y, width, height, 0, 0);\n  const lines = workerId === 'A' ? workerALines : workerTLines;\n\n  rect.setInteractive({ useHandCursor: true });\n  rect.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, () => showLines(scene, lines));\n\n  scene.getLayerManager().addToLayer(Layer.UI, rect);\n}\n\n/**\n * Takes array of strings, and format them line by line on the screen.\n * Automatically fade in with a black screen, add glitch effect\n * to the text, followed by fade and destroy of all the objects created.\n *\n * @param scene scene to be attached to\n * @param lines lines to show on the screen, glitched\n */\nasync function showLines(scene: ILayeredScene, lines: string[]) {\n  // Set interactive to block mouse inputs on the screen\n  const blackOverlay = blackScreen(scene).setInteractive().setAlpha(0);\n\n  const linesPos = calcListFormatPos({\n    numOfItems: lines.length,\n    xSpacing: 0,\n    ySpacing: WorkerConstants.yInterval\n  });\n\n  // Each line has different Y position\n  const textConfig = { x: screenCenter.x, y: 0, oriX: 0.5, oriY: 0.5 };\n  const yStartPos = screenCenter.y - lines.length * WorkerConstants.yInterval * 0.5;\n\n  scene.getLayerManager().addToLayer(Layer.WorkerMessage, blackOverlay);\n  scene.add.tween(fadeIn([blackOverlay], Constants.fadeDuration));\n\n  // Play SFX\n  SourceAcademyGame.getInstance().getSoundManager().playSound(SoundAssets.radioStatic.key);\n\n  await sleep(Constants.fadeDuration);\n\n  // Create and add the texts, line by line\n  lines.forEach((line, index) => {\n    const textFrames = createGlitchBitmapText(scene, line, {\n      ...textConfig,\n      y: linesPos[index][1] + yStartPos\n    });\n    textFrames.forEach(frame => scene.getLayerManager().addToLayer(Layer.WorkerMessage, frame));\n    setTimeout(() => textFrames.forEach(frame => frame.destroy()), WorkerConstants.messageDuration);\n  });\n\n  await sleep(WorkerConstants.messageDuration);\n\n  fadeAndDestroy(scene, blackOverlay);\n}\n","import FontAssets from '../../assets/FontAssets';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\nimport { Color } from '../../utils/StyleUtils';\n\nexport const AwardsHallConstants = {\n  scrollSpeed: 20,\n  tileDim: 2048,\n  maxAwardsPerCol: 2,\n  arrow: { xOffset: 875 },\n  award: { xSpace: 300, yStart: 300, ySpace: screenCenter.y - 50, dim: 200 },\n  awardInfo: { width: 300 },\n  banner: { xOffset: -screenSize.x * 0.28 },\n  bannerTextConfig: { x: 30, y: 0, oriX: 0.0, oriY: 0.5 }\n};\n\nexport const awardBannerTextStyle: BitmapFontStyle = {\n  key: FontAssets.alienLeagueFont.key,\n  size: 35,\n  align: Phaser.GameObjects.BitmapText.ALIGN_LEFT\n};\n\nexport const awardNoAssetTitleStyle = {\n  fontFamily: 'Verdana',\n  fontSize: '30px',\n  fill: Color.lightBlue,\n  align: 'center',\n  wordWrap: { width: AwardsHallConstants.award.dim - 20 }\n};\n\nexport const awardHoverTitleStyle = {\n  fontFamily: 'Verdana',\n  fontSize: '20px',\n  fill: Color.lightBlue,\n  align: 'left',\n  wordWrap: { width: AwardsHallConstants.awardInfo.width - 20 }\n};\n\nexport const awardHoverKeyStyle = {\n  fontFamily: 'Verdana',\n  fontSize: '15px',\n  fill: Color.offWhite,\n  align: 'left',\n  wordWrap: { width: AwardsHallConstants.awardInfo.width - 20 }\n};\n\nexport const awardHoverDescStyle = {\n  fontFamily: 'Verdana',\n  fontSize: '15px',\n  fill: Color.lightBlue,\n  align: 'left',\n  wordWrap: { width: AwardsHallConstants.awardInfo.width - 20 }\n};\n","import ImageAssets from '../../assets/ImageAssets';\nimport { getAwardProps } from '../../awards/GameAwardsHelper';\nimport { AwardProperty } from '../../awards/GameAwardsTypes';\nimport CommonBackButton from '../../commons/CommonBackButton';\nimport { Constants, screenCenter, screenSize } from '../../commons/CommonConstants';\nimport { addLoadingScreen } from '../../effects/LoadingScreen';\nimport { putWorkerMessage } from '../../effects/WorkerMessage';\nimport GameInputManager from '../../input/GameInputManager';\nimport GameLayerManager from '../../layer/GameLayerManager';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport SourceAcademyGame from '../../SourceAcademyGame';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { limitNumber, mandatory } from '../../utils/GameUtils';\nimport { resizeUnderflow } from '../../utils/SpriteUtils';\nimport { calcTableFormatPos, Direction, HexColor } from '../../utils/StyleUtils';\nimport { createBitmapText } from '../../utils/TextUtils';\nimport {\n  awardBannerTextStyle,\n  awardNoAssetTitleStyle,\n  AwardsHallConstants\n} from './AwardsHallConstants';\nimport { createAwardsHoverContainer } from './AwardsHallHelper';\n\n/**\n * This scenes display all students awards (collectibles and achievements).\n */\nclass AwardsHall extends Phaser.Scene {\n  public layerManager?: GameLayerManager;\n  public inputManager?: GameInputManager;\n\n  private backgroundTile: Phaser.GameObjects.TileSprite | undefined;\n  private awardsContainer: Phaser.GameObjects.Container | undefined;\n\n  private isScrollLeft: boolean;\n  private isScrollRight: boolean;\n  private scrollLim: number;\n  private awardXSpace: number;\n\n  constructor() {\n    super('AwardsHall');\n    SourceAcademyGame.getInstance().setCurrentSceneRef(this);\n\n    this.isScrollLeft = false;\n    this.isScrollRight = false;\n    this.scrollLim = 0;\n    this.awardXSpace = 0;\n  }\n\n  public init() {\n    this.layerManager = new GameLayerManager(this);\n    this.inputManager = new GameInputManager(this);\n  }\n\n  public preload() {\n    addLoadingScreen(this);\n  }\n\n  public async create() {\n    // Calculate the maximum horizontal space required based\n    // on maximum number of achievement/collectible\n    const achievementLength = this.getUserStateManager().getAchievements().length;\n    const collectibleLength = this.getUserStateManager().getCollectibles().length;\n    this.awardXSpace =\n      Math.ceil(\n        Math.max(achievementLength, collectibleLength) / AwardsHallConstants.maxAwardsPerCol\n      ) * AwardsHallConstants.award.xSpace;\n\n    // Scroll limit is anything that exceed the screen size\n    this.scrollLim = this.awardXSpace < screenSize.x ? 0 : this.awardXSpace - screenSize.x;\n    this.renderBackground();\n    this.renderAwards();\n\n    putWorkerMessage(this, 'A', screenSize.x * 0.95, screenSize.y * 0.99);\n  }\n\n  public update() {\n    if (!this.backgroundTile || !this.awardsContainer) return;\n\n    // Scroll the awards hall if button is currently clicked/held down\n    let newXPos = this.awardsContainer.x;\n    if (this.isScrollRight) {\n      newXPos -= AwardsHallConstants.scrollSpeed;\n    } else if (this.isScrollLeft) {\n      newXPos += AwardsHallConstants.scrollSpeed;\n    }\n    newXPos = limitNumber(newXPos, -this.scrollLim, 0);\n\n    // To achieve seamless background, we need to scroll on .tilePosition for background\n    this.backgroundTile.tilePositionX = -newXPos;\n    this.awardsContainer.x = newXPos;\n  }\n\n  /**\n   * Render background of this scene, as well as its\n   * UI elements (arrows, backbutton, as well as the 'Collectible' and 'Achievement' banner).\n   */\n  private renderBackground() {\n    if (this.backgroundTile) this.backgroundTile.destroy();\n\n    this.backgroundTile = new Phaser.GameObjects.TileSprite(\n      this,\n      0,\n      0,\n      AwardsHallConstants.tileDim,\n      AwardsHallConstants.tileDim,\n      ImageAssets.awardsBackground.key\n    ).setOrigin(0, 0.25);\n    this.getLayerManager().addToLayer(Layer.Background, this.backgroundTile);\n\n    // Add banners\n    const banners = ['Achievements', 'Collectibles'];\n    const bannerPos = calcTableFormatPos({\n      direction: Direction.Column,\n      numOfItems: banners.length\n    });\n    banners.forEach((banner, index) => {\n      const bannerCont = this.createBanner(banner, bannerPos[index][1]);\n      this.getLayerManager().addToLayer(Layer.UI, bannerCont);\n    });\n\n    const leftArrow = createButton(this, {\n      assetKey: ImageAssets.chapterSelectArrow.key,\n      onDown: () => (this.isScrollLeft = true),\n      onUp: () => (this.isScrollLeft = false),\n      onOut: () => (this.isScrollLeft = false)\n    }).setPosition(screenCenter.x - AwardsHallConstants.arrow.xOffset, screenCenter.y);\n\n    const rightArrow = createButton(this, {\n      assetKey: ImageAssets.chapterSelectArrow.key,\n      onDown: () => (this.isScrollRight = true),\n      onUp: () => (this.isScrollRight = false),\n      onOut: () => (this.isScrollRight = false)\n    })\n      .setPosition(screenCenter.x + AwardsHallConstants.arrow.xOffset, screenCenter.y)\n      .setScale(-1, 1);\n\n    const backButton = new CommonBackButton(this, () => {\n      this.cleanUp();\n      this.scene.start('MainMenu');\n    });\n\n    this.getLayerManager().addToLayer(Layer.UI, leftArrow);\n    this.getLayerManager().addToLayer(Layer.UI, rightArrow);\n    this.getLayerManager().addToLayer(Layer.UI, backButton);\n  }\n\n  /**\n   * Render all the awards that student has.\n   */\n  private renderAwards() {\n    if (this.awardsContainer) this.awardsContainer.destroy();\n\n    this.awardsContainer = new Phaser.GameObjects.Container(this, 0, 0);\n\n    // Achievement\n    const achievements = this.getAwards(this.getUserStateManager().getAchievements());\n    const achievementsPos = calcTableFormatPos({\n      direction: Direction.Column,\n      numOfItems: achievements.length,\n      numItemLimit: AwardsHallConstants.maxAwardsPerCol,\n      redistributeLast: false,\n      maxXSpace: this.awardXSpace,\n      maxYSpace: AwardsHallConstants.award.ySpace\n    });\n\n    // Achievement is positioned on the upper half of the screen\n    this.awardsContainer.add(\n      achievements.map((achievement, index) =>\n        this.createAward(\n          achievement,\n          achievementsPos[index][0],\n          achievementsPos[index][1] + AwardsHallConstants.award.yStart - screenCenter.y\n        )\n      )\n    );\n\n    // Collectible\n    const collectibles = this.getAwards(this.getUserStateManager().getCollectibles());\n    const collectiblesPos = calcTableFormatPos({\n      direction: Direction.Column,\n      numOfItems: collectibles.length,\n      numItemLimit: AwardsHallConstants.maxAwardsPerCol,\n      redistributeLast: false,\n      maxXSpace: this.awardXSpace,\n      maxYSpace: AwardsHallConstants.award.ySpace\n    });\n\n    // Collectible is positioned on the lower half of the screen\n    this.awardsContainer.add(\n      collectibles.map((collectible, index) =>\n        this.createAward(\n          collectible,\n          collectiblesPos[index][0],\n          collectiblesPos[index][1] + AwardsHallConstants.award.yStart\n        )\n      )\n    );\n\n    this.getLayerManager().addToLayer(Layer.Objects, this.awardsContainer);\n  }\n\n  /**\n   * Fetch awardProps based on the type string[]\n   * @param keys\n   */\n  private getAwards(keys: string[]) {\n    const awardProps = getAwardProps(keys);\n    return awardProps;\n  }\n\n  /**\n   * Format the given award; giving it a pop up hover of its\n   * description, resize it to the correct size, and position it\n   * based on the given xPos and yPos.\n   *\n   * @param award awardProperty to be used\n   * @param xPos x position of the award\n   * @param yPos y position of the award\n   */\n  private createAward(award: AwardProperty, xPos: number, yPos: number) {\n    const awardCont = new Phaser.GameObjects.Container(this, xPos, yPos);\n\n    let image;\n    if (award.assetKey === Constants.nullInteractionId) {\n      // No asset is associated with the award\n      image = new Phaser.GameObjects.Rectangle(\n        this,\n        0,\n        0,\n        AwardsHallConstants.award.dim,\n        AwardsHallConstants.award.dim,\n        HexColor.darkBlue,\n        0.8\n      );\n      image.setInteractive();\n\n      const text = new Phaser.GameObjects.Text(\n        this,\n        0,\n        0,\n        award.title,\n        awardNoAssetTitleStyle\n      ).setOrigin(0.5, 0.5);\n      awardCont.add([image, text]);\n    } else {\n      image = new Phaser.GameObjects.Sprite(this, 0, 0, award.assetKey).setOrigin(0.5);\n      resizeUnderflow(image, AwardsHallConstants.award.dim, AwardsHallConstants.award.dim);\n      image.setInteractive({ pixelPerfect: true, useHandCursor: true });\n\n      awardCont.add(image);\n    }\n\n    // Add black tint if award is not completed\n    const blackTint = new Phaser.GameObjects.Rectangle(\n      this,\n      0,\n      0,\n      AwardsHallConstants.award.dim,\n      AwardsHallConstants.award.dim,\n      0\n    ).setAlpha(award.completed ? 0 : 0.8);\n    awardCont.add(blackTint);\n\n    // Set up the pop up\n    const hoverCont = createAwardsHoverContainer(this, award);\n    image.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_OVER, () =>\n      hoverCont.setVisible(true)\n    );\n    image.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_OUT, () =>\n      hoverCont.setVisible(false)\n    );\n    image.addListener(\n      Phaser.Input.Events.GAMEOBJECT_POINTER_MOVE,\n      (pointer: Phaser.Input.Pointer) => {\n        hoverCont.x = pointer.x + 10;\n        hoverCont.y = pointer.y - 10;\n      }\n    );\n\n    this.getLayerManager().addToLayer(Layer.UI, hoverCont);\n    return awardCont;\n  }\n\n  /**\n   * Clean up of related managers\n   */\n  private cleanUp() {\n    this.getInputManager().clearListeners();\n    this.getLayerManager().clearAllLayers();\n  }\n\n  /**\n   * Format the given text with banner style.\n   *\n   * In-game, this is the achievement & collectible banner\n   * that is positioned on the left hand side.\n   *\n   * @param text text to be put on the banner\n   * @param yPos y position of the banner\n   */\n  private createBanner(text: string, yPos: number) {\n    const bannerContainer = new Phaser.GameObjects.Container(this, 0, yPos);\n    const bannerBg = new Phaser.GameObjects.Sprite(\n      this,\n      AwardsHallConstants.banner.xOffset,\n      0,\n      ImageAssets.awardsPage.key\n    );\n    const bannerText = createBitmapText(\n      this,\n      text,\n      AwardsHallConstants.bannerTextConfig,\n      awardBannerTextStyle\n    );\n    bannerContainer.add([bannerBg, bannerText]);\n    return bannerContainer;\n  }\n\n  public getUserStateManager = () => SourceAcademyGame.getInstance().getUserStateManager();\n  public getInputManager = () => mandatory(this.inputManager);\n  public getLayerManager = () => mandatory(this.layerManager);\n}\n\nexport default AwardsHall;\n","import ImageAssets from '../../assets/ImageAssets';\nimport { AwardProperty } from '../../awards/GameAwardsTypes';\nimport { HexColor } from '../../utils/StyleUtils';\nimport {\n  awardHoverDescStyle,\n  awardHoverKeyStyle,\n  awardHoverTitleStyle,\n  AwardsHallConstants\n} from './AwardsHallConstants';\n\n/**\n * Create a pop up text that appear when user hover over an award.\n * The hover container will display information based on the award property;\n * e.g. its title, its asset-key, as well as its description.\n *\n * @param scene scene for the hover to attach to\n * @param award awardProperty to be used\n * @returns {Phaser.GameObjects.Container}\n */\nexport const createAwardsHoverContainer = (scene: Phaser.Scene, award: AwardProperty) => {\n  const hoverContainer = new Phaser.GameObjects.Container(scene, 0, 0);\n\n  const awardTitle = new Phaser.GameObjects.Text(scene, 20, 20, award.title, awardHoverTitleStyle);\n  const awardAssetKey = new Phaser.GameObjects.Text(\n    scene,\n    20,\n    awardTitle.getBounds().bottom + 20,\n    award.assetKey,\n    awardHoverKeyStyle\n  );\n  const awardDesc = new Phaser.GameObjects.Text(\n    scene,\n    20,\n    awardAssetKey.getBounds().bottom + 20,\n    award.description,\n    awardHoverDescStyle\n  );\n\n  const hoverTextBg = new Phaser.GameObjects.Rectangle(\n    scene,\n    0,\n    0,\n    AwardsHallConstants.awardInfo.width,\n    awardDesc.getBounds().bottom + 20,\n    HexColor.darkBlue\n  )\n    .setOrigin(0.0, 0.0)\n    .setAlpha(0.8);\n\n  const scrollFrameTop = new Phaser.GameObjects.Sprite(\n    scene,\n    AwardsHallConstants.awardInfo.width / 2,\n    0,\n    ImageAssets.scrollFrame.key\n  );\n  const scrollFrameBot = new Phaser.GameObjects.Sprite(\n    scene,\n    AwardsHallConstants.awardInfo.width / 2,\n    hoverTextBg.getBounds().bottom,\n    ImageAssets.scrollFrame.key\n  );\n\n  hoverContainer.add([hoverTextBg, awardTitle, awardDesc, scrollFrameTop, scrollFrameBot]);\n\n  // Only show asset key if award is completed\n  award.completed && hoverContainer.add(awardAssetKey);\n\n  hoverContainer.setVisible(false);\n  return hoverContainer;\n};\n","import FontAssets from '../../assets/FontAssets';\nimport { screenCenter } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\n\nexport const BindingConstants = {\n  keyTextConfig: { x: screenCenter.x - 100, y: 0, oriX: 0.5, oriY: 0.5 },\n  keyDescTextConfig: { x: screenCenter.x + 100, y: 0, oriX: 0.5, oriY: 0.5 },\n  key: { yStart: screenCenter.y * 0.9, yInterval: 150 },\n  icon: { x: screenCenter.x - 100 }\n};\n\nexport const keyStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const keyDescStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 25,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n","import ImageAssets from '../../assets/ImageAssets';\nimport CommonBackButton from '../../commons/CommonBackButton';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport GameInputManager from '../../input/GameInputManager';\nimport GameLayerManager from '../../layer/GameLayerManager';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport { mandatory } from '../../utils/GameUtils';\nimport { calcListFormatPos } from '../../utils/StyleUtils';\nimport { createBitmapText } from '../../utils/TextUtils';\nimport { BindingConstants, keyDescStyle, keyStyle } from './BindingsConstants';\n\n/**\n * Displays various bindings of the game.\n * Static scene.\n */\nclass Bindings extends Phaser.Scene {\n  public layerManager?: GameLayerManager;\n  public inputManager?: GameInputManager;\n\n  constructor() {\n    super('Bindings');\n  }\n\n  public init() {\n    this.layerManager = new GameLayerManager(this);\n    this.inputManager = new GameInputManager(this);\n  }\n\n  public create() {\n    this.renderBackground();\n    this.renderBindings();\n  }\n\n  /**\n   * Render the background of the scene\n   */\n  private renderBackground() {\n    const background = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.spaceshipBg.key\n    );\n    const blackOverlay = new Phaser.GameObjects.Rectangle(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      screenSize.x,\n      screenSize.y,\n      0\n    ).setAlpha(0.3);\n    this.getLayerManager().addToLayer(Layer.Background, background);\n    this.getLayerManager().addToLayer(Layer.Background, blackOverlay);\n  }\n\n  /**\n   * Render the various binding and add it to the scene.\n   */\n  private renderBindings() {\n    const bindingsContainer = new Phaser.GameObjects.Container(this, 0, 0);\n\n    const bindings = this.getBindings();\n    const bindingPositions = calcListFormatPos({\n      numOfItems: bindings.length,\n      xSpacing: 0,\n      ySpacing: BindingConstants.key.yInterval\n    });\n\n    bindingsContainer.add(\n      bindings.map((binding, index) =>\n        this.createBinding(\n          binding.key,\n          binding.text,\n          bindingPositions[index][0],\n          bindingPositions[index][1] + BindingConstants.key.yStart\n        )\n      )\n    );\n    const backButton = new CommonBackButton(this, () => {\n      this.getLayerManager().clearAllLayers();\n      this.scene.start('MainMenu');\n    });\n\n    this.getLayerManager().addToLayer(Layer.UI, bindingsContainer);\n    this.getLayerManager().addToLayer(Layer.UI, backButton);\n  }\n\n  /**\n   * Encapsulate information of the available bindings within the game.\n   */\n  private getBindings() {\n    return [\n      {\n        key: 'Esc',\n        text: 'Escape Menu'\n      },\n      {\n        key: 'Tab',\n        text: 'Dashboard'\n      }\n    ];\n  }\n\n  /**\n   * Formats the binding information and add it to the scene.\n   *\n   * @param key name of the keyboard key associated with the description\n   * @param desc description to be shown next to the binding\n   * @param xPos x position of the container\n   * @param yPos y position of the container\n   * @returns {Phaser.GameObjects.Container}\n   */\n  private createBinding(key: string, desc: string, xPos: number, yPos: number) {\n    const bindingContainer = new Phaser.GameObjects.Container(this, xPos, yPos);\n\n    // Different keys may use different key icon\n    const keyIcon = new Phaser.GameObjects.Sprite(\n      this,\n      BindingConstants.icon.x,\n      0,\n      ImageAssets.squareKeyboardIcon.key\n    );\n    switch (key) {\n      case 'Tab':\n        keyIcon.setTexture(ImageAssets.medKeyboardIcon.key);\n        break;\n      default:\n        break;\n    }\n\n    const keyText = createBitmapText(this, key, BindingConstants.keyTextConfig, keyStyle);\n    const keyDesc = createBitmapText(this, desc, BindingConstants.keyDescTextConfig, keyDescStyle);\n\n    bindingContainer.add([keyIcon, keyText, keyDesc]);\n    return bindingContainer;\n  }\n  public getInputManager = () => mandatory(this.inputManager);\n  public getLayerManager = () => mandatory(this.layerManager);\n}\n\nexport default Bindings;\n","import { AssetKey, AssetPath } from 'src/features/game/commons/CommonTypes';\n\n/**\n * The functions below loads assets, and and only resolves\n * once the assets are loaded.\n * If the assets have already been loaded previously,\n * then the promise is resolved instantly.\n *\n * To use these functions, call the line \"await loadImage(...)\"\n * inside an async function\n */\n\n/**\n * Waits for an image (with assetkey, assetpath) to load in scene\n *\n * @param scene scene where to load this asset\n * @param assetKey the key to be used\n * @param assetPath the path to the file\n * @returns {Promise} promise that resolves when image is loaded.\n */\nexport const loadImage = (scene: Phaser.Scene, assetKey: AssetKey, assetPath: AssetPath) =>\n  new Promise<AssetKey>(resolve => {\n    if (scene.textures.get(assetKey).key !== '__MISSING') {\n      resolve(assetKey);\n    } else {\n      scene.load.image(assetKey, assetPath);\n      scene.load.once(`filecomplete-image-${assetKey}`, resolve);\n      scene.load.once(`loaderror`, resolve);\n      scene.load.start();\n    }\n  });\n\n/**\n * Waits for a text (with assetkey, assetpath) to load in scene\n *\n * @param scene scene where to load this asset\n * @param assetKey the key to be used\n * @param assetPath the path to the file\n * @returns {Promise} promise that resolves when text is loaded.\n */\nexport const loadText = (scene: Phaser.Scene, assetKey: AssetKey, assetPath: AssetPath) =>\n  new Promise<AssetKey>(resolve => {\n    if (scene.cache.text.exists(assetKey)) {\n      resolve(assetKey);\n    } else {\n      scene.load.text(assetKey, assetPath);\n      scene.load.once(`filecomplete-text-${assetKey}`, resolve);\n      scene.load.start();\n    }\n  });\n\n/**\n * Waits for a sound (with assetkey, assetpath) to load in scene\n *\n * @param scene scene where to load this asset\n * @param assetKey the key to be used\n * @param assetPath the path to the file\n * @returns {Promise} promise that resolves when sound is loaded.\n */\nexport const loadSound = (scene: Phaser.Scene, assetKey: AssetKey, assetPath: AssetPath) =>\n  new Promise<AssetKey>(resolve => {\n    if (scene.sound.get(assetKey) !== null) {\n      resolve(assetKey);\n    } else {\n      scene.load.audio(assetKey, assetPath).on('filecomplete', resolve);\n      scene.load.start();\n    }\n  });\n\n/**\n * Waits for an spritesheet (with assetkey, assetpath, and config) to load in scene\n *\n * @param scene scene where to load this asset\n * @param assetKey the key to be used\n * @param assetPath the path to the file\n * @param config spritesheet config\n * @returns {Promise} promise that resolves when spritesheet is loaded.\n */\nexport const loadSpritesheet = (\n  scene: Phaser.Scene,\n  assetKey: AssetKey,\n  assetPath: AssetPath,\n  config: any\n) =>\n  new Promise<AssetKey>(resolve => {\n    if (scene.textures.get(assetKey).key !== '__MISSING') {\n      resolve(assetKey);\n    } else {\n      scene.load.spritesheet(assetKey, assetPath, config);\n      scene.load.once(`filecomplete-spritesheet-${assetKey}`, resolve);\n      scene.load.once(`loaderror`, resolve);\n      scene.load.start();\n    }\n  });\n","import FontAssets from '../../assets/FontAssets';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\n\nexport const chapterIndexStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 25,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const chapterTitleStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const pageNumberStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 25,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\n// These are the original chapter preview image and frame dimensions\nconst originalImageRectWidth = 500;\nconst originalImageRectHeight = 700;\n// Use these to change the size of each chapter's image and frame\nconst imageScaleX = 0.8;\nconst imageScaleY = 0.4;\n\nconst chapPerRow = 3;\nconst chapPerCol = 3;\n\nconst chapConstants = {\n  arrow: { xOffset: 875 },\n  buttons: { scale: 0.65 },\n  resetButton: { xOffset: 135, yOffset: 85 },\n  playButton: { xOffset: 55, yOffset: 85 },\n  frame: { xOffset: 15 * imageScaleX, yOffset: -10 * imageScaleY },\n  scrollSpeed: 100,\n  indexTextConfig: { x: 0, y: -110, oriX: 0.5, oriY: 0.5 },\n  titleTextConfig: { x: 0, y: -50, oriX: 0.5, oriY: 0.5 },\n  pageNumberTextConfig: { x: screenCenter.x, y: screenSize.y - 30, oriX: 0.5, oriY: 0.5 },\n  imageRect: {\n    width: originalImageRectWidth * imageScaleX,\n    height: originalImageRectHeight * imageScaleY\n  },\n  imageScale: {\n    x: imageScaleX,\n    y: imageScaleY\n  },\n  chapComplete: {\n    y: 10,\n    height: 30,\n    text: 'Chapter Completed'\n  },\n  grid: {\n    chapPerRow,\n    chapPerCol,\n    chapPerPage: chapPerRow * chapPerCol,\n    chapGapX: 50,\n    chapGapY: 50\n  }\n};\n\nexport default chapConstants;\n","import { toS3Path } from '../utils/GameUtils';\n\nexport const toTxtPath = (path: string) => toS3Path(`/stories/${path}`, true);\n\nconst TextAssets = {\n  defaultCheckpoint: { key: 'default-chap', path: toTxtPath('defaultCheckpoint.txt') },\n  awardsMapping: { key: 'awards-mapping', path: toTxtPath('awardsMapping.txt') },\n  roomPreviewMapping: { key: 'room-prev-mapping', path: toTxtPath('roomPreviewMapping.txt') }\n};\n\nexport const MockTextAssets = {\n  defaultCheckpoint: { key: 'mock-default-chap', path: '../../assets/mockDefaultCheckpoint.txt' },\n  awardsMapping: { key: 'mock-awards-mapping', path: '../../assets/mockAwardsMapping.txt' },\n  roomPreviewMapping: {\n    key: 'mock-room-prev-mapping',\n    path: '../../assets/mockRoomPreviewMapping.txt'\n  }\n};\n\nexport default TextAssets;\n","import { GameAction } from '../action/GameActionTypes';\nimport { ImageAsset, SoundAsset } from '../assets/AssetsTypes';\nimport { BBoxProperty } from '../boundingBoxes/GameBoundingBoxTypes';\nimport { Character } from '../character/GameCharacterTypes';\nimport { AssetKey, ItemId } from '../commons/CommonTypes';\nimport { Dialogue } from '../dialogue/GameDialogueTypes';\nimport { GameMode } from '../mode/GameModeTypes';\nimport { ObjectProperty } from '../objects/GameObjectTypes';\nimport { mandatory } from '../utils/GameUtils';\nimport { AnyId, GameItemType, GameLocation, LocationId } from './GameMapTypes';\n\n/**\n * Game map is the class that encapsulates data about\n * all the locations and items in the map in a checkpoint\n *\n * Mainly used by game checkpoint.\n *\n * All possible assets should be stored within the soundAssets\n * and mapAssets; while mapping from ItemId to other properties\n * are stored separately.\n *\n * Lastly, the GameLocation should only refer to the ItemIDs,\n * and not the actual property.\n *\n * GameManager, along other managers, will process this class\n * as when as its needed.\n */\nclass GameMap {\n  private soundAssets: SoundAsset[];\n  private mapAssets: Map<AssetKey, ImageAsset>;\n  private locations: Map<LocationId, GameLocation>;\n  private dialogues: Map<ItemId, Dialogue>;\n  private objects: Map<ItemId, ObjectProperty>;\n  private boundingBoxes: Map<ItemId, BBoxProperty>;\n  private characters: Map<ItemId, Character>;\n  private actions: Map<ItemId, GameAction>;\n  private gameStartActions: ItemId[];\n  private checkpointCompleteActions: ItemId[];\n\n  constructor() {\n    this.soundAssets = [];\n    this.mapAssets = new Map<AssetKey, ImageAsset>();\n\n    this.locations = new Map<LocationId, GameLocation>();\n    this.dialogues = new Map<ItemId, Dialogue>();\n    this.objects = new Map<ItemId, ObjectProperty>();\n    this.boundingBoxes = new Map<ItemId, BBoxProperty>();\n    this.characters = new Map<ItemId, Character>();\n    this.actions = new Map<ItemId, GameAction>();\n\n    this.gameStartActions = [];\n    this.checkpointCompleteActions = [];\n  }\n\n  public addSoundAsset(soundAsset: SoundAsset) {\n    this.soundAssets.push(soundAsset);\n  }\n\n  public addMapAsset(assetKey: AssetKey, imageAsset: ImageAsset) {\n    this.mapAssets.set(assetKey, imageAsset);\n  }\n\n  public getMapAssets(): Map<AssetKey, ImageAsset> {\n    return this.mapAssets;\n  }\n\n  public addLocation(locationId: LocationId, location: GameLocation): void {\n    this.locations.set(locationId, location);\n  }\n\n  public setModesAt(id: LocationId, modes: GameMode[]) {\n    this.getLocationAtId(id).modes = new Set(modes);\n  }\n\n  public setNavigationFrom(id: LocationId, navigation: string[]) {\n    this.getLocationAtId(id).navigation = new Set(navigation);\n  }\n\n  public getNavigationFrom(id: LocationId): Set<string> | undefined {\n    return this.getLocationAtId(id).navigation;\n  }\n\n  public setGameStartActions(actionIds: ItemId[]) {\n    this.gameStartActions = actionIds;\n  }\n\n  public setCheckpointCompleteActions(actionIds: ItemId[]) {\n    this.checkpointCompleteActions = actionIds;\n  }\n\n  public getGameStartActions() {\n    return this.gameStartActions;\n  }\n\n  public getCheckpointCompleteActions() {\n    return this.checkpointCompleteActions;\n  }\n\n  public getLocations(): Map<LocationId, GameLocation> {\n    return this.locations;\n  }\n\n  public getObjectPropMap(): Map<ItemId, ObjectProperty> {\n    return this.objects;\n  }\n\n  public getBBoxPropMap(): Map<ItemId, BBoxProperty> {\n    return this.boundingBoxes;\n  }\n\n  public getDialogueMap(): Map<ItemId, Dialogue> {\n    return this.dialogues;\n  }\n\n  public getCharacterMap(): Map<ItemId, Character> {\n    return this.characters;\n  }\n\n  public getActionMap(): Map<ItemId, GameAction> {\n    return this.actions;\n  }\n\n  public getSoundAssets(): SoundAsset[] {\n    return this.soundAssets;\n  }\n\n  public setItemInMap(gameItemType: GameItemType, itemId: string, item: any) {\n    this[gameItemType].set(itemId, item);\n  }\n\n  public addItemToLocation(locId: LocationId, gameItemType: GameItemType, itemId: string) {\n    this.getLocationAtId(locId)[gameItemType].add(itemId);\n  }\n\n  public setBGMusicAt(locId: LocationId, soundKey: AssetKey) {\n    this.getLocationAtId(locId).bgmKey = soundKey;\n  }\n\n  public getLocationAtId = (locId: LocationId) =>\n    mandatory(this.locations.get(locId), `Location ${locId} was not found!`);\n\n  public getAssetByKey = (key: AssetKey) =>\n    mandatory(this.mapAssets.get(key), `Asset ${key} not found!`);\n\n  public getLocationIds(): LocationId[] {\n    return Array.from(this.locations.keys());\n  }\n\n  public getAssetKeyFromId(id: AnyId): AssetKey {\n    return mandatory(\n      this.objects.get(id)?.assetKey || this.locations.get(id)?.assetKey,\n      `Id ${id} not found!`\n    );\n  }\n}\n\nexport default GameMap;\n","/**\n * The class encapsulates data on all the objective ids\n * that players must complete and keeps track of which\n * objectives have already been completed.\n *\n * One of the components of game checkpoint.\n */\nclass GameObjective {\n  private objective: Map<string, boolean>;\n  private totalNumOfObjectives: number;\n  private numOfCompletedObjectives: number;\n\n  constructor() {\n    this.objective = new Map<string, boolean>();\n    this.totalNumOfObjectives = 0;\n    this.numOfCompletedObjectives = 0;\n  }\n\n  /**\n   * Set an objective to a boolean value.\n   *\n   * @param key key of the objective\n   * @param value boolean value to set to\n   */\n  public setObjective(key: string, value: boolean): void {\n    const prevState = this.objective.get(key);\n    this.objective.set(key, value);\n    // Handle repeated calls\n    if (prevState !== undefined && prevState !== value) {\n      this.numOfCompletedObjectives++;\n    }\n  }\n\n  /**\n   * Add an objective tied to the given string.\n   *\n   * @param key key of the objective\n   */\n  public addObjective(key: string): void {\n    this.objective.set(key, false);\n    this.totalNumOfObjectives++;\n  }\n\n  /**\n   * Add multiple objectives.\n   *\n   * @param keys objective keys\n   */\n  public addObjectives(keys: string[]): void {\n    keys.forEach(key => this.addObjective(key));\n  }\n\n  /**\n   * Check whether all the objectives are complete.\n   */\n  public isAllComplete(): boolean {\n    return this.numOfCompletedObjectives >= this.totalNumOfObjectives;\n  }\n\n  /**\n   * Check the state of a specific objective.\n   * If objective is not present, will return undefined instead.\n   *\n   * @param key key of the objective\n   */\n  public getObjectiveState(key: string): boolean {\n    const objState = this.objective.get(key);\n    if (objState === undefined) {\n      throw new Error(`Cannot find objective with the given task id \"${key}\"`);\n    }\n    return objState;\n  }\n\n  /**\n   * Returns all the objectives.\n   */\n  public getObjectives() {\n    return this.objective;\n  }\n\n  /**\n   * Set the objective to the given parameter directly.\n   *\n   * @param objective map of objective keys(string) to its value (boolean)\n   */\n  public setObjectives(objective: Map<string, boolean>) {\n    this.objective = objective;\n  }\n}\n\nexport default GameObjective;\n","import { TaskDetail } from './GameTaskTypes';\n\n/**\n * The class encapsulates data on all the task ids\n * that players can optionally complete, and keeps track of\n * which tasks have already been completed.\n *\n * One of the components of game checkpoint.\n */\nclass GameTask {\n  private tasks: Map<string, boolean>;\n  private taskDetails: Map<string, TaskDetail>;\n\n  constructor() {\n    this.tasks = new Map<string, boolean>();\n    this.taskDetails = new Map<string, TaskDetail>();\n  }\n\n  /**\n   * Set a task to a boolean value.\n   *\n   * @param key key of the task\n   * @param value boolean value to set to\n   *\n   */\n  public setTask(key: string, value: boolean): void {\n    this.tasks.set(key, value);\n  }\n\n  /**\n   * Indicate that the players should be able to see this task.\n   *\n   * @param key key of the task\n   */\n  public showTask(key: string): void {\n    const prevDetail = this.taskDetails.get(key);\n\n    // Handle repeated calls\n    if (prevDetail !== undefined) {\n      const newDetail: TaskDetail = {\n        ...prevDetail,\n        visible: true\n      };\n      this.taskDetails.set(key, newDetail);\n    }\n  }\n\n  /**\n   * Add a task tied to the given string.\n   *\n   * @param task the new task containing the task id (key) and task data\n   */\n  public addTask(newTask: TaskDetail): void {\n    const key = newTask.taskId;\n    this.tasks.set(key, false);\n    this.taskDetails.set(key, newTask);\n  }\n\n  /**\n   * Add multiple tasks.\n   *\n   * @param newTasks an array of tasks, each containing a task id (key) and task detail\n   */\n  public addTasks(newTasks: TaskDetail[]): void {\n    newTasks.forEach(task => this.addTask(task));\n  }\n\n  /**\n   * Check the state of a specific task.\n   * If task is not present, will return undefined instead.\n   *\n   * @param key key of the task\n   */\n  public getTaskState(key: string): boolean {\n    const taskState = this.tasks.get(key);\n    if (taskState === undefined) {\n      throw new Error(`Cannot find task with the given task id \"${key}\"`);\n    }\n    return taskState;\n  }\n\n  /**\n   * Retrieve the data of a specific task.\n   * If task is not present, will return undefined instead.\n   *\n   * @param key key of the task\n   */\n  public getTaskDetail(key: string): TaskDetail {\n    const taskDetail = this.taskDetails.get(key);\n    if (taskDetail === undefined) {\n      throw new Error(`Cannot find task with the given task id \"${key}\"`);\n    }\n    return taskDetail;\n  }\n\n  /**\n   * Returns all the tasks.\n   */\n  public getAllTasks(): Map<string, boolean> {\n    return this.tasks;\n  }\n\n  /**\n   * Returns all incomplete tasks.\n   */\n  public getAllIncompleteTasks(): Array<string> {\n    const incompleteTasks: Array<string> = new Array<string>();\n    for (const key of this.tasks.keys()) {\n      if (!this.tasks.get(key) && this.taskDetails.get(key)?.visible) {\n        incompleteTasks.push(key);\n      }\n    }\n    return incompleteTasks;\n  }\n\n  /**\n   * Returns all the task data, including the task id, title, description, and the state.\n   */\n  public getAllVisibleTaskData(): Array<[TaskDetail, boolean]> {\n    const allVisibleTask: Array<[TaskDetail, boolean]> = new Array<[TaskDetail, boolean]>();\n    for (const key of this.tasks.keys()) {\n      const taskState = this.getTaskState(key);\n      const taskDetail = this.getTaskDetail(key);\n      if (taskState !== undefined && taskDetail !== undefined && taskDetail.visible) {\n        allVisibleTask.push([taskDetail, taskState]);\n      }\n    }\n    return allVisibleTask;\n  }\n}\n\nexport default GameTask;\n","import { GameActionType } from '../action/GameActionTypes';\nimport { GamePosition, GameSize } from '../commons/CommonTypes';\nimport { GameItemType } from '../location/GameMapTypes';\nimport { GameMode } from '../mode/GameModeTypes';\nimport { GameStateStorage, UserStateType } from '../state/GameStateTypes';\nimport { mandatory } from '../utils/GameUtils';\n\nconst stringToSizeMap = {\n  small: GameSize.Small,\n  medium: GameSize.Medium,\n  large: GameSize.Large\n};\n\nconst stringToPositionMap = {\n  left: GamePosition.Left,\n  middle: GamePosition.Middle,\n  right: GamePosition.Right\n};\n\nconst stringToGameModeMap = {\n  talk: GameMode.Talk,\n  explore: GameMode.Explore,\n  move: GameMode.Move,\n  menu: GameMode.Menu\n};\n\nconst stringToGameItemMap = {\n  navigation: GameItemType.navigation,\n  talkTopics: GameItemType.talkTopics,\n  objects: GameItemType.objects,\n  boundingBoxes: GameItemType.boundingBoxes,\n  characters: GameItemType.characters,\n  actions: GameItemType.actions,\n  bgmKey: GameItemType.bgmKey,\n  collectibles: GameItemType.collectibles\n};\n\nconst stringToActionTypeMap = {\n  move_character: GameActionType.MoveCharacter,\n  update_character: GameActionType.UpdateCharacter,\n  obtain_collectible: GameActionType.ObtainCollectible,\n  complete_objective: GameActionType.CompleteObjective,\n  complete_task: GameActionType.CompleteTask,\n  show_task: GameActionType.ShowTask,\n  add_item: GameActionType.AddItem,\n  remove_item: GameActionType.RemoveItem,\n  change_background: GameActionType.ChangeBackground,\n  start_animation: GameActionType.StartAnimation,\n  stop_animation: GameActionType.StopAnimation,\n  show_dialogue: GameActionType.ShowDialogue,\n  add_mode: GameActionType.AddLocationMode,\n  remove_mode: GameActionType.RemoveLocationMode,\n  add_popup: GameActionType.AddPopup,\n  make_object_glow: GameActionType.MakeObjectGlow,\n  make_object_blink: GameActionType.MakeObjectBlink,\n  play_bgm: GameActionType.PlayBGM,\n  play_sfx: GameActionType.PlaySFX,\n  preview_location: GameActionType.PreviewLocation,\n  show_object_layer: GameActionType.ShowObjectLayer,\n  navigate_to_assessment: GameActionType.NavigateToAssessment,\n  update_assessment_status: GameActionType.UpdateAssessmentStatus,\n  delay: GameActionType.Delay\n};\n\nconst stringToGameStateStorageMap = {\n  checklist: GameStateStorage.ChecklistState,\n  tasklist: GameStateStorage.TasklistState,\n  userstate: GameStateStorage.UserState\n};\n\nconst stringToUserStateTypeMap = {\n  assessments: UserStateType.assessments,\n  achievements: UserStateType.achievements,\n  collectibles: UserStateType.collectibles\n};\n\n/**\n * This class is in charge of converting strings from\n * the txt into enums that can be stored in the Checkpoint\n * object, which can be read and played by the game engine.\n *\n * This also acts as a validity checker to ensure that\n * strings such as action types (eg 'show_dialogue') and\n * game modes (eg 'explore') are actually valid enums\n */\nexport default class ParserConverter {\n  public static stringToSize(str: string) {\n    return stringToSizeMap[str] || GameSize.Medium;\n  }\n\n  public static stringToPosition(str: string) {\n    return stringToPositionMap[str] || GamePosition.Middle;\n  }\n\n  public static stringToGameMode(str: string) {\n    return mandatory(stringToGameModeMap[str], `Invalid location mode, ${str}`);\n  }\n\n  public static stringToActionType(str: string) {\n    return mandatory(stringToActionTypeMap[str], `Invalid action type, ${str}`);\n  }\n\n  public static stringToGameStateStorage(str: string) {\n    return mandatory(stringToGameStateStorageMap[str], `Invalid condition type, ${str}`);\n  }\n\n  public static stringToGameItemType(str: string) {\n    return mandatory(stringToGameItemMap[str], `Invalid entity type, ${str}`);\n  }\n\n  public static stringToBoolean(str: string) {\n    return str === 'false' ? false : true;\n  }\n\n  public static stringToUserStateType(str: string) {\n    return mandatory(stringToUserStateTypeMap[str], `Invalid user state type ${str}`);\n  }\n}\n","import { ItemId } from '../commons/CommonTypes';\nimport { GameItemType } from '../location/GameMapTypes';\nimport { GameSoundType } from '../sound/GameSoundTypes';\nimport Parser from './Parser';\n\nexport enum GameEntityType {\n  locations = 'locations',\n  objectives = 'objectives',\n  tasks = 'tasks',\n  bgms = 'bgms',\n  sfxs = 'sfxs'\n}\n\ntype AssertionDetail = {\n  itemId: string;\n  actionType?: string;\n};\n\n/**\n * Parser Validator has two functions:\n *\n * A. Duplicate ID checker\n * Asserts that there are no duplicated IDs in the text file\n *\n * Implementation: Keep a set of IDs declared.\n * As IDs are added onto the set, check and throw error if ID\n * is added twice onto the set.\n *\n * B. Type assertion manager\n * Assert that all the IDs used are declared somewhere in the text file.\n *\n * e.g.\n * Say make_object_glow(door) is called\n * Since make_object_glow takes in an Object Id as parameter,\n * we assert that \"door\" is an Object ID declared in the text.\n *\n * Implementation: Store all the assertions by type when ID is used.\n * At the end of the parsing process, verify that all type assertions exist\n * by counterchecking with items in the Checkpoint Object.\n *\n * Note the two types of assertions:\n * Game item assertions - Item ID e.g. Dialogue, Object, Bbox, Character, Action, Award\n * Game entity assertions - Entity ID e.g. Location, Bgm, Sfx, Objectives\n */\nexport default class ParserValidator {\n  private gameItemAsserts: Map<GameItemType, AssertionDetail[]>;\n  private gameEntityAsserts: Map<GameEntityType, AssertionDetail[]>;\n  private gameAnimAsserts: AssertionDetail[];\n  private gameAnimMaps = [\n    // Game Locations Map\n    Parser.checkpoint.map.getLocations(),\n    // Game Object Prop Map\n    Parser.checkpoint.map[GameItemType.objects]\n  ];\n  private allItemIds: Set<string>;\n\n  constructor() {\n    this.gameItemAsserts = new Map<GameItemType, AssertionDetail[]>();\n    this.gameEntityAsserts = new Map<GameEntityType, AssertionDetail[]>();\n    this.gameAnimAsserts = [];\n    this.allItemIds = new Set();\n  }\n\n  ////////////////////////////\n  //  Duplicate ID Checker  //\n  ////////////////////////////\n\n  /**\n   * We register item id to check for possible duplicates\n   * with other item ids.\n   *\n   * @param {string} id an object ID e.g. ItemId / Location ID / Objective ID / BGM ID / SFX ID\n   */\n  public registerId(id: string) {\n    if (this.allItemIds.has(id)) {\n      throw new Error(`Duplicate item id ${id}`);\n    }\n    this.allItemIds.add(id);\n  }\n\n  /////////////////////////////\n  //  Type assertion manager //\n  /////////////////////////////\n\n  public verifyAssertions() {\n    this.verifyGameItemAssert();\n    this.verifyGameEntityAsserts();\n    this.verifyGameAnimAsserts();\n  }\n\n  //////////////////////////////////////////////\n  //  Type assertion manager - Game Item Type //\n  //////////////////////////////////////////////\n\n  /**\n   * This function stores game item type assertions.\n   *\n   * @param gameItemType the attribute that the itemId needs to be\n   * @param itemId the itemId that needs to be checked for validity\n   * @param actionType action type e.g. make_object_glow if the assertion\n   *                   was made while parsing an action\n   */\n  public assertItemType(gameItemType: GameItemType, itemId: ItemId, actionType?: string) {\n    if (gameItemType === GameItemType.talkTopics) {\n      gameItemType = GameItemType.dialogues;\n    } else if (gameItemType === GameItemType.navigation) {\n      gameItemType = GameItemType.locations;\n    }\n    if (!this.gameItemAsserts.get(gameItemType)) {\n      this.gameItemAsserts.set(gameItemType, []);\n    }\n    this.gameItemAsserts.get(gameItemType)!.push({ itemId, actionType });\n  }\n\n  /**\n   * This function verifies all game item type assertions,\n   * ensuring that each ID used belongs to the correct type.\n   */\n  private verifyGameItemAssert() {\n    this.gameItemAsserts.forEach(\n      (assertionDetails: AssertionDetail[], gameItemType: GameItemType) => {\n        assertionDetails.forEach((assertionDetail: AssertionDetail) => {\n          const { itemId, actionType } = assertionDetail;\n          if (!Parser.checkpoint.map[gameItemType].has(itemId)) {\n            if (actionType) {\n              this.actionAssertionError(itemId, gameItemType, actionType);\n            }\n            throw new Error(`Cannot find id \"${itemId}\" under ${gameItemType} entity type`);\n          }\n        });\n      }\n    );\n  }\n\n  /**\n   * Similar to assert item type, but used for asserting multiple game item types at once.\n   *\n   * @param gameItemType item type that the ID must be\n   * @param itemIds item IDs of the item to assert\n   * @param actionType action type e.g. make_object_glow if the assertion\n   *                   was made while parsing an action\n   */\n  public assertItemTypes(gameItemType: GameItemType, itemIds: string[], actionType?: string) {\n    itemIds.forEach(itemId => this.assertItemType(gameItemType, itemId, actionType));\n  }\n\n  ////////////////////////////////////////////////\n  //  Type assertion manager - Game Entity Type //\n  ////////////////////////////////////////////////\n\n  /**\n   * This function stores game entity type assertions.\n   * ensures that 'room' is of locations type.\n   *\n   * @param gameEntityType the attribute that the id needs to be\n   * @param id the itemId that needs to be checked for validity\n   * @param actionType action type e.g. make_object_glow if the assertion\n   *                   was made while parsing an action\n   */\n  public assertEntityType(gameEntityType: GameEntityType, id: string, actionType?: string) {\n    if (!this.gameEntityAsserts.get(gameEntityType)) {\n      this.gameEntityAsserts.set(gameEntityType, []);\n    }\n    this.gameEntityAsserts.get(gameEntityType)!.push({ itemId: id, actionType });\n  }\n\n  /**\n   * This function verifies game entity assertions that have been stored.\n   * ensures that 'room' is of locations type.\n   *\n   * @param gameEntityType the attribute that the id needs to be\n   * @param id the itemId that needs to be checked for validity\n   * @param actionType action type e.g. make_object_glow if the assertion\n   *                   was made while parsing an action\n   */\n  private verifyGameEntityAsserts() {\n    this.gameEntityAsserts.forEach(\n      (assertionDetails: AssertionDetail[], gameEntityType: GameEntityType) => {\n        assertionDetails.forEach((assertionDetail: AssertionDetail) => {\n          const { itemId, actionType } = assertionDetail;\n          switch (gameEntityType) {\n            case GameEntityType.locations:\n              Parser.checkpoint.map.getLocationAtId(itemId);\n              break;\n\n            case GameEntityType.objectives:\n              if (Parser.checkpoint.objectives.getObjectives().get(itemId) === undefined) {\n                if (actionType) {\n                  this.actionAssertionError(itemId, gameEntityType, actionType);\n                }\n                throw new Error(`Cannot find objective id \"${itemId}\"`);\n              }\n              break;\n\n            case GameEntityType.tasks:\n              if (Parser.checkpoint.tasks.getAllTasks().get(itemId) === undefined) {\n                if (actionType) {\n                  this.actionAssertionError(itemId, gameEntityType, actionType);\n                }\n                throw new Error(`Cannot find task id \"${itemId}\"`);\n              }\n              break;\n\n            case GameEntityType.bgms:\n              const numberOfBgm = Parser.checkpoint.map\n                .getSoundAssets()\n                .filter(\n                  sound => sound.soundType === GameSoundType.BGM && sound.key === itemId\n                ).length;\n              if (numberOfBgm === 0) {\n                throw new Error(`Cannot find bgm key \"${itemId}\"`);\n              } else if (numberOfBgm > 1) {\n                throw new Error(`More than 1 bgm key \"${itemId}\"`);\n              }\n              break;\n\n            case GameEntityType.sfxs:\n              const numberOfSfx = Parser.checkpoint.map\n                .getSoundAssets()\n                .filter(\n                  sound => sound.soundType === GameSoundType.SFX && sound.key === itemId\n                ).length;\n              if (numberOfSfx === 0) {\n                throw new Error(`Cannot find sfx key \"${itemId}\"`);\n              } else if (numberOfSfx > 1) {\n                throw new Error(`More than 1 sfx key \"${itemId}\"`);\n              }\n              break;\n          }\n        });\n      }\n    );\n  }\n\n  //////////////////////////////////////////////\n  //  Type assertion manager - Game Anim Type //\n  //////////////////////////////////////////////\n\n  /**\n   * This function stores game anim type assertions.\n   *\n   * @param itemId id of item that needs to be checked\n   * @param actionType action type e.g. start_animation\n   */\n  public assertAnimType(itemId: ItemId, actionType: string) {\n    this.gameAnimAsserts.push({ itemId, actionType });\n  }\n\n  /**\n   * This function verifies game entity assertions that have\n   * been stored, by ensuring that the itemIds are declared\n   * in at least one of the animation types.\n   */\n  private verifyGameAnimAsserts() {\n    this.gameAnimAsserts.forEach((assertionDetail: AssertionDetail) => {\n      const { itemId, actionType } = assertionDetail;\n      let idFound = false;\n      this.gameAnimMaps.forEach(map => {\n        if (map.get(itemId)) {\n          idFound = true;\n        }\n      });\n      if (!idFound) {\n        this.actionAssertionError(itemId, 'locationId or itemId', actionType!);\n      }\n    });\n  }\n\n  private actionAssertionError(itemId: string, attribute: string, actionType: string) {\n    throw new Error(\n      `Expected type of \"${attribute}\" as argument for \"${actionType}\", obtained \"${itemId}\" which is either undefined or the wrong id.`\n    );\n  }\n}\n","import { ActionCondition } from '../action/GameActionTypes';\nimport { GameStateStorage } from '../state/GameStateTypes';\nimport StringUtils from '../utils/StringUtils';\nimport Parser from './Parser';\nimport ParserConverter from './ParserConverter';\nimport { GameEntityType } from './ParserValidator';\n\n/**\n * This parser is in charge of parsing conditionals\n */\nexport default class ConditionParser {\n  /**\n   * This function creates an ActionCondition object, given a condition string\n   *\n   * @param conditionDetails A conditional string such as \"!if userstate.assessments.301\"\n   * @returns {ActionCondition} encapsulating the information on the conditional\n   */\n  public static parse(conditionDetails: string): ActionCondition {\n    const hasExclamation = conditionDetails[0] === '!';\n    if (hasExclamation) {\n      conditionDetails = conditionDetails.slice(1);\n    }\n    const [gameStateStorage, ...condParams] = StringUtils.splitByChar(conditionDetails, '.');\n    switch (ParserConverter.stringToGameStateStorage(gameStateStorage)) {\n      case GameStateStorage.ChecklistState:\n        Parser.validator.assertEntityType(GameEntityType.objectives, condParams[0]);\n        return {\n          state: GameStateStorage.ChecklistState,\n          conditionParams: {\n            id: condParams[0]\n          },\n          boolean: !hasExclamation\n        };\n\n      case GameStateStorage.TasklistState:\n        Parser.validator.assertEntityType(GameEntityType.tasks, condParams[0]);\n        return {\n          state: GameStateStorage.TasklistState,\n          conditionParams: {\n            id: condParams[0]\n          },\n          boolean: !hasExclamation\n        };\n\n      case GameStateStorage.UserState:\n        return {\n          state: GameStateStorage.UserState,\n          conditionParams: {\n            userStateType: ParserConverter.stringToUserStateType(condParams[0]),\n            id: condParams[1]\n          },\n          boolean: !hasExclamation\n        };\n      default:\n        throw new Error('Parsing error: Invalid condition param');\n    }\n  }\n}\n","import { GameAction, GameActionType } from '../action/GameActionTypes';\nimport { ItemId } from '../commons/CommonTypes';\nimport { GameItemType } from '../location/GameMapTypes';\nimport StringUtils from '../utils/StringUtils';\nimport ConditionParser from './ConditionParser';\nimport Parser from './Parser';\nimport ParserConverter from './ParserConverter';\nimport { GameEntityType } from './ParserValidator';\n\n/**\n * The Action Parser parses actions for all entities.\n * This class takes in action strings to produce GameAction objects,\n * which store information about action type and\n * action params (much like React actions)\n */\nexport default class ActionParser {\n  /**\n   * Parses many action strings, stores resulting Game Action objects\n   * inside the game map, and returns the corresponding actionIds.\n   *\n   * @param fullActionStrings raw action strings, eg [\"show_dialogue(done)\", \"change_location(room) if gamestate.finish\"]\n   * @returns {Array<ItemId>} returns actionIds of the parsed actions with actions are stored in the game map.\n   */\n  public static parseActions(fullActionStrings: string[]): ItemId[] {\n    return fullActionStrings.map(fullActionString => this.parseAction(fullActionString));\n  }\n\n  /**\n   * Parses an action string, stores resulting Game Action object\n   * inside the game map, and returns the corresponding actionId.\n   *\n   * @param rawActionString raw action string eg \"show_dialogue(done) if gamestate.finish\"\n   * @returns {ItemId} returns actionId of the parsed actions, as action is stored in the game map.\n   */\n  public static parseAction(rawActionString: string): ItemId {\n    const [actionString, conditionalsString] = StringUtils.splitByChar(rawActionString, 'if');\n\n    const gameAction = this.parseActionContent(actionString);\n    if (conditionalsString) {\n      gameAction.actionConditions = StringUtils.splitByChar(conditionalsString, 'AND').map(\n        condition => ConditionParser.parse(condition)\n      );\n    }\n\n    Parser.checkpoint.map.setItemInMap(GameItemType.actions, gameAction.interactionId, gameAction);\n\n    return gameAction.interactionId;\n  }\n\n  /**\n   * This funciton converts action strings eg \"show_dialogue(hello)\"\n   * (excluding conditionals) into Game Action objects\n   *\n   * Note that this function also validates the parameters to make\n   * sure that they are used correctly.\n   *\n   * @param actionString the action string to be parsed\n   * @returns {GameAction} resulting action that can be stored in the game map\n   */\n  public static parseActionContent(actionString: string): GameAction {\n    const [action, actionParamString] = StringUtils.splitByChar(actionString, '(');\n    let repeatable = false;\n    let actionType = action;\n    if (action[action.length - 1] === '*') {\n      repeatable = true;\n      actionType = actionType.slice(0, -1);\n    }\n\n    const gameActionType = ParserConverter.stringToActionType(actionType);\n    const actionParams = StringUtils.splitByChar(actionParamString.slice(0, -1), ',');\n    const actionParamObj: any = {};\n\n    switch (gameActionType) {\n      case GameActionType.ObtainCollectible:\n        actionParamObj.id = actionParams[0];\n        break;\n\n      case GameActionType.CompleteObjective:\n        actionParamObj.id = actionParams[0];\n        Parser.validator.assertEntityType(GameEntityType.objectives, actionParams[0], actionType);\n        break;\n\n      case GameActionType.CompleteTask:\n        actionParamObj.id = actionParams[0];\n        Parser.validator.assertEntityType(GameEntityType.tasks, actionParams[0], actionType);\n        break;\n\n      case GameActionType.ShowTask:\n        actionParamObj.id = actionParams[0];\n        Parser.validator.assertEntityType(GameEntityType.tasks, actionParams[0], actionType);\n        break;\n\n      case GameActionType.PreviewLocation:\n      case GameActionType.ChangeBackground:\n        actionParamObj.id = actionParams[0];\n        Parser.validator.assertEntityType(GameEntityType.locations, actionParams[0], actionType);\n        break;\n      case GameActionType.StartAnimation:\n        actionParamObj.id = actionParams[0];\n        actionParamObj.startFrame = +actionParams[1];\n        actionParamObj.frameRate = +actionParams[2];\n        actionParamObj.assetCategory = actionParams[3];\n        Parser.validator.assertAnimType(actionParams[0], actionType);\n        break;\n      case GameActionType.StopAnimation:\n        actionParamObj.id = actionParams[0];\n        Parser.validator.assertAnimType(actionParams[0], actionType);\n        break;\n      case GameActionType.ShowDialogue:\n        actionParamObj.id = actionParams[0];\n        Parser.validator.assertItemType(GameItemType.dialogues, actionParams[0], actionType);\n        break;\n\n      case GameActionType.AddItem:\n      case GameActionType.RemoveItem:\n        const gameItemType = ParserConverter.stringToGameItemType(actionParams[0]);\n        actionParamObj.gameItemType = gameItemType;\n\n        actionParamObj.locationId = actionParams[1];\n        Parser.validator.assertEntityType(GameEntityType.locations, actionParams[1], actionType);\n\n        actionParamObj.id = actionParams[2];\n        Parser.validator.assertItemType(gameItemType, actionParams[2], actionType);\n        break;\n\n      case GameActionType.AddLocationMode:\n      case GameActionType.RemoveLocationMode:\n        Parser.validator.assertEntityType(GameEntityType.locations, actionParams[0], actionType);\n        actionParamObj.locationId = actionParams[0];\n        actionParamObj.mode = ParserConverter.stringToGameMode(actionParams[1]);\n        break;\n\n      case GameActionType.AddPopup:\n        Parser.validator.assertItemType(GameItemType.objects, actionParams[0], actionType);\n        actionParamObj.id = actionParams[0];\n        actionParamObj.position = ParserConverter.stringToPosition(actionParams[1]);\n        actionParams[2] && (actionParamObj.duration = parseInt(actionParams[2]) * 1000);\n        actionParams[3] && (actionParamObj.size = ParserConverter.stringToSize(actionParams[3]));\n        break;\n\n      case GameActionType.MakeObjectBlink:\n        Parser.validator.assertItemType(GameItemType.objects, actionParams[0], actionType);\n        actionParamObj.id = actionParams[0];\n        actionParamObj.turnOn = ParserConverter.stringToBoolean(actionParams[1]);\n        break;\n\n      case GameActionType.MakeObjectGlow:\n        Parser.validator.assertItemType(GameItemType.objects, actionParams[0], actionType);\n        actionParamObj.id = actionParams[0];\n        actionParamObj.turnOn = ParserConverter.stringToBoolean(actionParams[1]);\n        break;\n\n      case GameActionType.PlayBGM:\n        actionParamObj.id = actionParams[0];\n        Parser.validator.assertEntityType(GameEntityType.bgms, actionParams[0], actionType);\n        break;\n\n      case GameActionType.PlaySFX:\n        actionParamObj.id = actionParams[0];\n        Parser.validator.assertEntityType(GameEntityType.sfxs, actionParams[0], actionType);\n        break;\n\n      case GameActionType.ShowObjectLayer:\n        actionParamObj.show = ParserConverter.stringToBoolean(actionParams[0]);\n        break;\n\n      case GameActionType.UpdateCharacter:\n        Parser.validator.assertItemType(GameItemType.characters, actionParams[0], actionType);\n        actionParamObj.id = actionParams[0];\n        actionParamObj.expression = actionParams[1];\n        break;\n\n      case GameActionType.MoveCharacter:\n        Parser.validator.assertItemType(GameItemType.characters, actionParams[0], actionType);\n        Parser.validator.assertEntityType(GameEntityType.locations, actionParams[1], actionType);\n        actionParamObj.id = actionParams[0];\n        actionParamObj.locationId = actionParams[1];\n        actionParamObj.position = ParserConverter.stringToPosition(actionParams[2]);\n        break;\n\n      case GameActionType.NavigateToAssessment:\n        actionParamObj.assessmentId = actionParams[0];\n        break;\n\n      case GameActionType.Delay:\n        actionParamObj.duration = parseInt(actionParams[0]) * 1000;\n        break;\n    }\n\n    const actionId = Parser.generateActionId();\n    return {\n      actionType: gameActionType,\n      actionParams: actionParamObj,\n      actionConditions: [],\n      interactionId: actionId,\n      isInteractive: false,\n      isRepeatable: repeatable\n    };\n  }\n}\n","import { Prompt } from '../dialogue/GameDialogueTypes';\nimport StringUtils from '../utils/StringUtils';\n\n/**\n * This class parses prompt and creates Prompt\n * objects stored that are stored in a DialogueLine\n */\nexport default class PromptParser {\n  /**\n   * Parses title and choice strings and returns a\n   * Prompt object with this information\n   * @param title title of prompt to give context\n   * @param choices raw choice strings, eg [\"Yes -> goto 4\", \"No -> goto 5\"]\n   * @returns {Prompt} returns prompt object with associated information\n   */\n  public static parsePrompt(title: string, choices: string[]): Prompt {\n    const prompt = {\n      promptTitle: title.split('prompt:')[1].trim(),\n      choices: choices.map(this.splitChoice)\n    };\n    return prompt;\n  }\n\n  /**\n   * Split a choice string into a Choice option and\n   * PartName\n   * @param rawChoice raw choice string, eg \"Yes -> goto 4\"\n   * @returns {[string, string]} returns a 2-element array, the\n   * first element a choice option and the second element the\n   * corresponding goto\n   */\n  public static splitChoice(rawChoice: string): [string, string] {\n    const choice = StringUtils.splitWithLimit(rawChoice, '->', 1);\n    return [choice[0].trim(), choice[1].split(' ')[1].trim()];\n  }\n}\n","import { AssetType } from '../assets/AssetsTypes';\nimport { Character } from '../character/GameCharacterTypes';\nimport { AssetKey, ItemId } from '../commons/CommonTypes';\nimport { GameItemType, LocationId } from '../location/GameMapTypes';\nimport StringUtils from '../utils/StringUtils';\nimport Parser from './Parser';\nimport ParserConverter from './ParserConverter';\n\n/**\n * This class is in charge of parsing Character entities\n * from character lines\n */\nexport default class CharacterParser {\n  /**\n   * This class parses the character paragraph into\n   * Characters and places them in the game map\n   *\n   * @param locationId Location where the character lines are found\n   * @param characterList the list of character CSV lines\n   */\n  public static parse(locationId: LocationId, characterList: string[]) {\n    characterList.forEach(characterDetails =>\n      this.parseCharacterDetails(locationId, characterDetails)\n    );\n  }\n\n  /**\n   * Generates the asset key for a character and expression\n   *\n   * @param characterId the character's id, which is also the folder of the character in /avatars folder\n   * @param expression the expression of the character, which is also present in filename\n   */\n  public static characterAssetKey(characterId: ItemId, expression: string) {\n    return characterId + '-' + expression;\n  }\n\n  /**\n   * Generates the short asset path for a character and an expression\n   *\n   * @param characterId the character's id, which is also the folder of the character in /avatars folder\n   * @param expression the expression of the character, which is also present in filename\n   */\n  public static characterAssetPath(characterId: ItemId, expression: string) {\n    return `/avatars/${characterId}/${characterId}.${expression}.png`;\n  }\n\n  /**\n   * This function parses character CSVs and returns Characters\n   * and places the characters inside the game map\n   *\n   * @param locationId the character's location\n   * @param characterDetails the CSV string containing character details\n   */\n  private static parseCharacterDetails(locationId: LocationId, characterDetails: string) {\n    const addToLoc = characterDetails[0] === '+';\n    if (addToLoc) {\n      characterDetails = characterDetails.slice(1);\n    }\n\n    const [id, name, defaultExpression, defaultPosition, scale] = StringUtils.splitByChar(\n      characterDetails,\n      ','\n    );\n    Parser.validator.registerId(id);\n\n    const expressions = new Map<string, AssetKey>();\n\n    const character: Character = {\n      id,\n      name,\n      expressions,\n      defaultExpression,\n      defaultPosition: ParserConverter.stringToPosition(defaultPosition),\n      scale: scale ? parseFloat(scale) : 1\n    };\n\n    // Add asset key to expression map\n    expressions.set(defaultExpression, this.characterAssetKey(id, defaultExpression));\n\n    // Add asset keys to expression map\n    Parser.checkpoint.map.addMapAsset(this.characterAssetKey(id, defaultExpression), {\n      type: AssetType.Image,\n      path: this.characterAssetPath(id, defaultExpression),\n      key: id\n    });\n\n    // Add character to map\n    Parser.checkpoint.map.setItemInMap(GameItemType.characters, id, character);\n\n    // Add character to location\n    if (addToLoc) {\n      Parser.checkpoint.map.addItemToLocation(locationId, GameItemType.characters, id);\n    }\n  }\n}\n","import { AssetType } from '../assets/AssetsTypes';\nimport { SpeakerDetail } from '../character/GameCharacterTypes';\nimport StringUtils from '../utils/StringUtils';\nimport CharacterParser from './CharacterParser';\nimport Parser from './Parser';\nimport ParserConverter from './ParserConverter';\n\n/**\n * This classes parses the speaker portion of the dialogue\n * and returns SpeakerDetail object encapsulating information\n * about speakers in a dialogue.\n *\n * This class also loads the character expressions into the\n * Character entity in the game map\n */\nexport default class SpeakerParser {\n  /**\n   * The character parses one line containing the speaker details\n   * and returns a speaker detail object which is a property of some DialogueLine's.\n   *\n   * @param rawStr the string containing the character ids and expressions\n   * @returns {SpeakerDetail} associated with that string\n   */\n  public static parse(rawStr: string): SpeakerDetail {\n    const [speakerId, expression, speakerPositionStr] = StringUtils.splitByChar(\n      rawStr.slice(1), // remove the @\n      ','\n    );\n    const speakerPosition = ParserConverter.stringToPosition(speakerPositionStr);\n\n    this.addCharacterExprToMap(speakerId, expression);\n\n    return {\n      speakerId,\n      expression,\n      speakerPosition\n    };\n  }\n\n  /**\n   * This line adds the  expression into the expression map of an\n   * existing Character in the game map. This ensures that\n   * images of the characters' various expressions are loaded properly\n   * into the game map.\n   *\n   * @param charId the character Id of that character, also the asset folder of the character inside /avatars folder\n   * @param expression the expression of character to be loaded into the expression map of the character\n   */\n  private static addCharacterExprToMap(charId: string, expression: string) {\n    if (charId === 'you' || charId === 'narrator') {\n      return;\n    }\n    const character = Parser.checkpoint.map.getCharacterMap().get(charId);\n\n    if (!character) {\n      throw new Error(`Character \"${charId}\" not in map`);\n    }\n\n    const charExpression = expression || character.defaultExpression;\n\n    character.expressions.set(\n      expression,\n      CharacterParser.characterAssetKey(charId, expression || charExpression)\n    );\n\n    Parser.checkpoint.map.addMapAsset(CharacterParser.characterAssetKey(charId, charExpression), {\n      path: CharacterParser.characterAssetPath(charId, charExpression),\n      type: AssetType.Image,\n      key: charId\n    });\n  }\n}\n","import { Dialogue, DialogueLine, PartName } from '../dialogue/GameDialogueTypes';\nimport { GameItemType } from '../location/GameMapTypes';\nimport { mapValues } from '../utils/GameUtils';\nimport StringUtils from '../utils/StringUtils';\nimport ActionParser from './ActionParser';\nimport ConditionParser from './ConditionParser';\nimport Parser from './Parser';\nimport PromptParser from './PromptParser';\nimport SpeakerParser from './SpeakerParser';\n\n/**\n * This class parses dialogues and creates\n * Dialogue Objects which can be read by the\n * Dialogue Generator\n */\nexport default class DialogueParser {\n  /**\n   * This function reads the entire text under the \"dialogue\" heading,\n   * converts dialogues listed underneath into Dialogue entities,\n   * and stores these dialogues in the game map.\n   *\n   * @param dialogueText the entire dialogue text beneath Dialogue\n   */\n  public static parse(dialogueText: string[]) {\n    const dialoguesParagraphs = StringUtils.splitToParagraph(dialogueText);\n\n    dialoguesParagraphs.forEach(([dialogueDetails, dialogueBody]: [string, string[]]) => {\n      if (dialogueBody.length === 0) {\n        console.error('No dialogue found for dialogueId');\n        return;\n      }\n      this.parseDialogue(dialogueDetails, dialogueBody);\n    });\n  }\n\n  /**\n   * This function parses one dialogue and stores it into the game map\n   *\n   * @param dialogueDetails the string containing dialogue Id and/or dialouge title\n   * @param dialogueBody the body of the dialogue containing its contents\n   */\n  private static parseDialogue(dialogueDetails: string, dialogueBody: string[]) {\n    const [dialogueId, title] = StringUtils.splitWithLimit(dialogueDetails, ',', 1);\n    Parser.validator.registerId(dialogueId);\n\n    const content = this.parseDialogueContent(dialogueBody);\n    const dialogue: Dialogue = { title, content };\n\n    // Add fallback title\n    if (!dialogue.title) {\n      dialogue.title = StringUtils.toCapitalizedWords(dialogueId);\n    }\n\n    Parser.checkpoint.map.setItemInMap(GameItemType.dialogues, dialogueId, dialogue);\n  }\n\n  /**\n   * This function parses the dialogue's body and\n   * converts each into a Dialogue object.\n   *\n   * This function's main task is to separate a dialogue into\n   * parts (or part if just one), and then uses  createDialogueLines to parse each part.\n   *\n   * @param dialogueBody The entire dialogue body\n   */\n  private static parseDialogueContent(dialogueBody: string[]) {\n    const rawDialogueContent: Map<PartName, string[]> = StringUtils.mapByHeader(\n      dialogueBody,\n      isInteger\n    );\n\n    const dialogueObject: Map<PartName, DialogueLine[]> = mapValues(\n      rawDialogueContent,\n      this.createDialogueLines\n    );\n    return dialogueObject;\n  }\n\n  /**\n   * This function parses one \"part\" of a dialogue,\n   * and converts them into a series of DialogueLine's,\n   * where DialogueLine encapsulates data on the text,\n   * (as well as speaker change, actions, gotos and prompts if any)\n   *\n   * @param {Array<string>} lines the lines inside one part of a dialogue\n   * @returns {Array<DialogueLine>}\n   */\n  private static createDialogueLines(lines: string[]): DialogueLine[] {\n    const dialogueLines: DialogueLine[] = [];\n    let currIndex = 0;\n\n    while (currIndex !== lines.length) {\n      const rawStr = lines[currIndex];\n      switch (true) {\n        case isGotoLabel(rawStr):\n          const [gotoString, postpend] = StringUtils.splitByChar(rawStr, 'if');\n          const [conditionalsString, altPart] = postpend\n            ? StringUtils.splitByChar(postpend, 'else')\n            : [null, null];\n          const conditions = conditionalsString\n            ? StringUtils.splitByChar(conditionalsString, 'AND').map(condition =>\n                ConditionParser.parse(condition)\n              )\n            : [];\n          dialogueLines[dialogueLines.length - 1].goto = {\n            conditions,\n            part: gotoString.split(' ')[1],\n            altPart: altPart\n          };\n          break;\n        case isPrompt(rawStr):\n          const rawTitle = rawStr;\n          const rawChoices: string[] = [];\n          while (lines[currIndex + 1] && isPromptChoice(lines[currIndex + 1])) {\n            currIndex++;\n            rawChoices.push(lines[currIndex].trim());\n          }\n          const prompt = PromptParser.parsePrompt(rawTitle, rawChoices);\n          dialogueLines[dialogueLines.length - 1].prompt = prompt;\n          break;\n        case isActionLabel(rawStr):\n          const lastLine = dialogueLines[dialogueLines.length - 1];\n          !lastLine.actionIds && (lastLine.actionIds = []);\n          lastLine.actionIds.push(ActionParser.parseAction(rawStr));\n          break;\n        case isSpeaker(rawStr):\n          currIndex++;\n          const nextLine = lines[currIndex];\n          if (!nextLine) {\n            throw new Error('Parsing error: Cannot change speaker without next line');\n          }\n          dialogueLines.push({ line: nextLine });\n          dialogueLines[dialogueLines.length - 1].speakerDetail = SpeakerParser.parse(rawStr);\n          break;\n        default:\n          // Dialogue lines without speaker are by default treated as lines by narrator\n          // This also ensures that lines without speaker are displayed on the dialogue log\n          dialogueLines.push({ line: rawStr });\n          dialogueLines[dialogueLines.length - 1].speakerDetail = SpeakerParser.parse('@narrator');\n          break;\n      }\n      currIndex++;\n    }\n    return dialogueLines;\n  }\n}\n\nconst isInteger = (line: string) => new RegExp(/^[0-9]+$/).test(line);\nconst isGotoLabel = (line: string) => new RegExp(/^goto [0-9]+.*$/).test(line);\nconst isActionLabel = (line: string) => line && (line[0] === '\\t' || line.slice(0, 4) === '    ');\nconst isSpeaker = (line: string) => line && line[0] === '@';\nconst isPrompt = (line: string) => line.trim().startsWith('prompt:');\nconst isPromptChoice = (line: string) => new RegExp(/-> +goto/).test(line);\n","import { LocationId } from '../location/GameMapTypes';\nimport { GameSoundType } from '../sound/GameSoundTypes';\nimport StringUtils from '../utils/StringUtils';\nimport Parser from './Parser';\n\n/**\n * This class contains the parser for the BGM and SFX paragraphs\n * within a location\n */\nexport default class MusicParser {\n  /**\n   * This function parses a series of sounds and updates\n   * the sound assets included in the game map.\n   *\n   * It also parses the first BGM as the bgm of the location\n   *\n   * @param locationId The locationId of the BGM/SFX you want to parse\n   * @param soundList the list of sounds to be added as assets\n   * @param soundType Whether it's BGM or SFX\n   */\n  public static parse(locationId: LocationId, soundList: string[], soundType: GameSoundType) {\n    soundList.forEach((musicDetails, musicIndex) => {\n      const [id, assetPath, volume] = StringUtils.splitByChar(musicDetails, ',');\n      Parser.validator.registerId(id);\n\n      Parser.checkpoint.map.addSoundAsset({\n        key: id,\n        path: assetPath,\n        config: {\n          volume: parseFloat(volume),\n          loop: soundType === GameSoundType.BGM\n        },\n        soundType\n      });\n\n      if (soundType === GameSoundType.BGM && musicIndex === 0) {\n        Parser.checkpoint.map.setBGMusicAt(locationId, id);\n      }\n    });\n  }\n}\n","import { GameCheckpoint } from '../chapter/GameChapterTypes';\nimport GameMap from '../location/GameMap';\nimport GameObjective from '../objective/GameObjective';\nimport GameTask from '../task/GameTask';\nimport StringUtils from '../utils/StringUtils';\nimport ActionParser from './ActionParser';\nimport DialoguesParser from './DialogueParser';\nimport LocationsParser from './LocationDetailsParser';\nimport LocationParser from './LocationParser';\nimport ParserValidator, { GameEntityType } from './ParserValidator';\nimport TasksParser from './TasksParser';\n\n/**\n * This class converts a checkpoint txt file into a Checkpoint\n * object.\n *\n * A Checkpoint object encapsulates data about the map including all\n * the locations inside it, as well as the objectives in that checkpoint,\n * basically everything the game engine needs to know to render\n * the entire checkpoint for players to play.\n *\n */\nclass Parser {\n  public static checkpoint: GameCheckpoint;\n  private static actionIdNum: number;\n  public static validator: ParserValidator;\n\n  public static generateActionId() {\n    Parser.actionIdNum++;\n    return `action#${Parser.actionIdNum}`;\n  }\n\n  public static init() {\n    Parser.actionIdNum = 0;\n\n    Parser.checkpoint = {\n      map: new GameMap(),\n      startingLoc: '',\n      objectives: new GameObjective(),\n      tasks: new GameTask()\n    };\n\n    Parser.validator = new ParserValidator();\n  }\n\n  public static parse(chapterText: string, continueParse = false) {\n    if (!continueParse) {\n      Parser.init();\n    }\n\n    const checkPointLines = StringUtils.splitToLinesAndRemoveComments(chapterText);\n    const checkPointParagraphs = StringUtils.splitToParagraph(checkPointLines);\n\n    checkPointParagraphs.forEach(([header, body]: [string, string[]]) => {\n      if (body.length === 0 && header.includes(':')) {\n        Parser.parseCheckpointConfig(header);\n      } else {\n        Parser.parseCheckpointParagraphs(header, body) || LocationParser.parse(header, body);\n      }\n    });\n\n    Parser.validator.verifyAssertions();\n  }\n\n  private static parseCheckpointConfig(checkpointConfig: string) {\n    const [key, value] = StringUtils.splitByChar(checkpointConfig, ':');\n    switch (key) {\n      case 'startingLoc':\n        Parser.validator.assertEntityType(GameEntityType.locations, value);\n        Parser.checkpoint.startingLoc = value;\n        break;\n      default:\n        throw new Error(`Invalid checkpoint config key, \"${checkpointConfig}\"`);\n    }\n  }\n\n  private static parseCheckpointParagraphs(header: string, body: string[]) {\n    switch (header) {\n      case 'objectives':\n        Parser.checkpoint.objectives.addObjectives(body);\n        break;\n      case 'tasks':\n        TasksParser.parse(body);\n        break;\n      case 'locations':\n        LocationsParser.parse(body);\n        break;\n      case 'gameStartActions':\n        Parser.checkpoint.map.setGameStartActions(ActionParser.parseActions(body));\n        break;\n      case 'checkpointCompleteActions':\n        Parser.checkpoint.map.setCheckpointCompleteActions(ActionParser.parseActions(body));\n        break;\n      case 'dialogues':\n        DialoguesParser.parse(body);\n        break;\n      default:\n        return false;\n    }\n    return true;\n  }\n}\n\nexport default Parser;\n","import { AssetType } from '../assets/AssetsTypes';\nimport { GameItemType, GameLocation, LocationId } from '../location/GameMapTypes';\nimport { GameSoundType } from '../sound/GameSoundTypes';\nimport StringUtils from '../utils/StringUtils';\nimport ActionParser from './ActionParser';\nimport BoundingBoxParser from './BoundingBoxParser';\nimport CharacterParser from './CharacterParser';\nimport MusicParser from './MusicParser';\nimport ObjectParser from './ObjectParser';\nimport Parser from './Parser';\nimport ParserConverter from './ParserConverter';\nimport { GameEntityType } from './ParserValidator';\n\n/**\n * This class parses data for one specific location.\n */\nexport default class LocationParser {\n  /**\n   * This function reads the entire location body and\n   * updates the location in the game map based on details inside\n   * including charcters, objects, boundingBoxes etc.\n   *\n   * @param locationId The location id for the location to parse\n   * @param locationBody The entire body of the location as string array\n   */\n  public static parse(locationId: LocationId, locationBody: string[]) {\n    const location = Parser.checkpoint.map.getLocationAtId(locationId);\n    const locationParagraphs = StringUtils.splitToParagraph(locationBody);\n\n    locationParagraphs.forEach(([header, body]: [string, string[]]) => {\n      if (body.length === 0 && header.includes(':')) {\n        this.parseLocationConfig(location, header);\n      } else {\n        this.parseLocationParagraphs(location, header, body);\n      }\n    });\n  }\n\n  /**\n   * This paragraph parses all the config details in a specific location\n   * ie lines containing the ':' to specify gameplay details about the location\n   *\n   * @param location The reference game location that we want to update\n   * @param locationConfig The config string about the location\n   */\n  private static parseLocationConfig(location: GameLocation, locationConfig: string) {\n    const [key, value] = StringUtils.splitByChar(locationConfig, ':');\n    const configValues = StringUtils.splitByChar(value, ',');\n    switch (key) {\n      case 'modes':\n        configValues.forEach(mode => {\n          const gameMode = ParserConverter.stringToGameMode(mode);\n          location.modes.add(gameMode);\n        });\n        break;\n      case 'nav':\n        configValues.forEach(otherLocationId => {\n          Parser.validator.assertEntityType(GameEntityType.locations, otherLocationId);\n          location.navigation.add(otherLocationId);\n        });\n        break;\n      case 'talkTopics':\n        const talkTopics = configValues;\n        Parser.validator.assertItemTypes(GameItemType.dialogues, talkTopics);\n        location.talkTopics = new Set(talkTopics);\n        break;\n      case 'preview':\n        const [previewPath] = configValues;\n        if (previewPath) {\n          const previewKey = '/preview' + previewPath;\n          Parser.checkpoint.map.addMapAsset(previewKey, {\n            type: AssetType.Image,\n            key: location.id + 'Preview',\n            path: previewPath\n          });\n          location.previewKey = previewKey;\n        }\n        break;\n      default:\n        throw new Error(`Invalid config key \"${key}\" specified under location \"${location.id}\"`);\n    }\n  }\n\n  /**\n   * This paragraph parses all the paragraphs inside a specific location\n   * ie lines paragraphs headed by 'objects', 'boundingBoxes', etc.\n   *\n   * @param location The reference game location that we want to update\n   * @param entityHeader The header of the entity we want to parse in the location\n   * @param body The body paragraph underneath the entity header\n   */\n  private static parseLocationParagraphs(\n    location: GameLocation,\n    entityHeader: string,\n    body: string[]\n  ) {\n    switch (entityHeader) {\n      case 'objects':\n        ObjectParser.parse(location.id, body);\n        break;\n      case 'boundingBoxes':\n        BoundingBoxParser.parse(location.id, body);\n        break;\n      case 'characters':\n        CharacterParser.parse(location.id, body);\n        break;\n      case 'bgm':\n        MusicParser.parse(location.id, body, GameSoundType.BGM);\n        break;\n      case 'sfx':\n        MusicParser.parse(location.id, body, GameSoundType.SFX);\n        break;\n      case 'actions':\n        location.actionIds = ActionParser.parseActions(body);\n        break;\n      default:\n        throw new Error(`Invalid location paragraph header \"${entityHeader}\"`);\n    }\n  }\n}\n","import { AnimType, AssetType } from '../assets/AssetsTypes';\nimport { GameItemType, LocationId } from '../location/GameMapTypes';\nimport { ObjectProperty } from '../objects/GameObjectTypes';\nimport StringUtils from '../utils/StringUtils';\nimport ActionParser from './ActionParser';\nimport Parser from './Parser';\n\n/**\n * This class parses object CSV's into Object Properties\n */\nexport default class ObjectParser {\n  /**\n   * This function parses object CSVs in a location,\n   * and creates Object Properties corresponding to the each object CSV,\n   * and stores these Object Properties into the game map.\n   *\n   * The class also parses actions of objects if any.\n   *\n   * @param locationId the location where the object paragraph can be found\n   * @param objectList the list of lines describing objects in the location, including actions\n   */\n  public static parse(locationId: LocationId, objectList: string[]) {\n    const objectParagraphs = StringUtils.splitToParagraph(objectList);\n\n    objectParagraphs.forEach(([header, body]: [string, string[]]) => {\n      const object = this.parseObjectConfig(locationId, header);\n      if (body.length) {\n        object.isInteractive = true;\n        object.actionIds = ActionParser.parseActions(body);\n      }\n    });\n  }\n\n  /**\n   * Generates an asset key based on the object path\n   *\n   * @param shortPath path to the object\n   */\n  private static objectAssetKey(shortPath: string) {\n    return shortPath;\n  }\n\n  /**\n   * Generates an asset path based on the object path\n   *\n   * @param shortPath path to the object\n   */\n  private static objectPath(shortPath: string) {\n    return shortPath;\n  }\n\n  /**\n   * This function parses one object CSV into an Object Property,\n   * and places the object inside the game map.\n   *\n   * It also returns the reference to the object property, so that\n   * actionIds can be added to it.\n   *\n   * @param locationId The location id\n   * @param objectDetails One line containing an object CSV\n   * @returns {ObjectProperty} the object property created\n   */\n  private static parseObjectConfig(locationId: LocationId, objectDetails: string): ObjectProperty {\n    const addToLoc = objectDetails[0] === '+';\n    if (addToLoc) {\n      objectDetails = objectDetails.slice(1);\n    }\n\n    const [objectId, shortPath, x, y, width, height, type, frame] = StringUtils.splitByChar(\n      objectDetails,\n      ','\n    );\n    Parser.validator.registerId(objectId);\n\n    const objectProperty: ObjectProperty = {\n      assetKey: this.objectAssetKey(shortPath),\n      x: parseInt(x),\n      y: parseInt(y),\n      width: parseInt(width) || undefined,\n      height: parseInt(height) || undefined,\n      isInteractive: false,\n      interactionId: objectId\n    };\n\n    Parser.checkpoint.map.addMapAsset(this.objectAssetKey(shortPath), {\n      type: AssetType[type] || AssetType.Image,\n      key: objectId,\n      path: this.objectPath(shortPath),\n      config: {\n        frameHeight: parseInt(height) || -1,\n        frameWidth: parseInt(width) || -1,\n        centreX: 0,\n        centreY: 0,\n        endFrame: parseInt(frame) - 1 || 0,\n        animType: AnimType.Object\n      }\n    });\n\n    Parser.checkpoint.map.setItemInMap(GameItemType.objects, objectId, objectProperty);\n    if (addToLoc) {\n      Parser.checkpoint.map.addItemToLocation(locationId, GameItemType.objects, objectId);\n    }\n\n    return objectProperty;\n  }\n}\n","import { BBoxProperty } from '../boundingBoxes/GameBoundingBoxTypes';\nimport { GameItemType, LocationId } from '../location/GameMapTypes';\nimport StringUtils from '../utils/StringUtils';\nimport ActionParser from './ActionParser';\nimport Parser from './Parser';\n\n/**\n * This class is in charge of parsing the boundingBoxes paragraph\n */\nexport default class BoundingBoxParser {\n  /**\n   * This parses the boundingBoxes paragraph (with actions) into Bounding Box Properties\n   * and stores them in the correct location in the game map\n   *\n   * @param locationId locationId where the boundingBox paragraph is\n   * @param boundingBoxList the list of raw bounding box strings in the paragraph\n   */\n  public static parse(locationId: LocationId, boundingBoxList: string[]) {\n    const boundingBoxParagraphs = StringUtils.splitToParagraph(boundingBoxList);\n\n    boundingBoxParagraphs.forEach(([header, body]: [string, string[]]) => {\n      const boundingBox = this.parseBBoxConfig(locationId, header);\n      if (body.length) {\n        boundingBox.isInteractive = true;\n        boundingBox.actionIds = ActionParser.parseActions(body);\n      }\n    });\n  }\n\n  /**\n   * This class parses one bounding box CSV and produces a\n   * Bounding box property from that bounding box string\n   *\n   * @param locationId LocationId where the bounding box paragraph is\n   * @param bboxDetails One bounding box CSV line\n   * @returns {BBoxProperty} corresponding bbox property produced from that CSV line\n   */\n  private static parseBBoxConfig(locationId: LocationId, bboxDetails: string): BBoxProperty {\n    const addToLoc = bboxDetails[0] === '+';\n    if (addToLoc) {\n      bboxDetails = bboxDetails.slice(1);\n    }\n\n    const [bboxId, x, y, width, height] = StringUtils.splitByChar(bboxDetails, ',');\n    const bboxProperty: BBoxProperty = {\n      x: parseInt(x),\n      y: parseInt(y),\n      width: parseInt(width),\n      height: parseInt(height),\n      isInteractive: false,\n      interactionId: bboxId\n    };\n\n    Parser.validator.registerId(bboxId);\n    Parser.checkpoint.map.setItemInMap(GameItemType.boundingBoxes, bboxId, bboxProperty);\n    if (addToLoc) {\n      Parser.checkpoint.map.addItemToLocation(locationId, GameItemType.boundingBoxes, bboxId);\n    }\n\n    return bboxProperty;\n  }\n}\n","import { TaskDetail } from '../task/GameTaskTypes';\nimport StringUtils from '../utils/StringUtils';\nimport Parser from './Parser';\n\n/**\n * This class parses the \"tasks\" paragraphs,\n * and creates the indicated tasks to be displayed\n * to the user on the Task Log.\n */\nexport default class TasksParser {\n  /**\n   * This function parses the strings and creates each task\n   * based on three parameters:\n   *\n   * (1) The specified task id\n   * (2) The title of the task\n   * (3) The description of the task\n   *\n   * E.g.\n   *\n   * tasks\n   *     taskTalkToScottie, Talk to Scottie, Have a chat with your best friend, Scottie!\n   *     taskCheckScreen, Check the monitor, Go to your room and check for further instructions!\n   *\n   * @param taskDetails the CSV lines containing descriptions about the tasks\n   */\n  public static parse(taskDetails: string[]) {\n    const tasks: TaskDetail[] = [];\n    taskDetails.forEach(taskDetail => {\n      const [taskId, title, desc] = StringUtils.splitWithLimit(taskDetail, ',', 2);\n      const newTask: TaskDetail = {\n        taskId: taskId,\n        title: title,\n        description: desc,\n        visible: false\n      };\n      tasks.push(newTask);\n    });\n    Parser.checkpoint.tasks.addTasks(tasks);\n  }\n}\n","import { AnimType, AssetType } from '../assets/AssetsTypes';\nimport { screenCenter, screenSize } from '../commons/CommonConstants';\nimport { createEmptyLocation } from '../location/GameMapHelper';\nimport StringUtils from '../utils/StringUtils';\nimport Parser from './Parser';\n\n/**\n * This class parses the \"locations\" paragraphs,\n * and creates all the game locations declared\n * in the paragraph.\n */\nexport default class LocationDetailsParser {\n  /**\n   * This function parses location strings\n   * and adds GameLocations to the map based on location\n   * descriptions\n   *\n   * @param locationDetails the CSV lines containing descriptions about game locations\n   */\n  public static parse(locationDetails: string[]) {\n    locationDetails.forEach(locationDetail => {\n      const [id, shortPath, name, type, frame] = StringUtils.splitByChar(locationDetail, ',');\n      Parser.validator.registerId(id);\n\n      Parser.checkpoint.map.addLocation(id, {\n        ...createEmptyLocation(),\n        id,\n        name,\n        assetKey: this.locationAssetKey(shortPath)\n      });\n\n      Parser.checkpoint.map.addMapAsset(this.locationAssetKey(shortPath), {\n        type: AssetType[type] || AssetType.Image,\n        key: id,\n        path: this.locationPath(shortPath),\n        config: {\n          frameWidth: screenSize.x,\n          frameHeight: screenSize.y,\n          centreX: screenCenter.x,\n          centreY: screenCenter.y,\n          endFrame: parseInt(frame) - 1 || 0,\n          animType: AnimType.Background\n        }\n      });\n    });\n  }\n\n  /**\n   * Genrates an asset key for the location\n   *\n   * @param shortPath the path to the location\n   */\n  private static locationAssetKey(shortPath: string) {\n    return shortPath;\n  }\n\n  /**\n   * Genrates an asset path for the location\n   *\n   * @param shortPath the path to the location\n   */\n  private static locationPath(shortPath: string) {\n    return shortPath;\n  }\n}\n","import { GameLocation } from './GameMapTypes';\n\n/**\n * Intialises an an empty location\n */\nexport function createEmptyLocation(): GameLocation {\n  return {\n    id: '',\n    name: '',\n    assetKey: '',\n    previewKey: null,\n    modes: new Set([]),\n    navigation: new Set([]),\n    talkTopics: new Set([]),\n    objects: new Set([]),\n    boundingBoxes: new Set([]),\n    bgmKey: '',\n    characters: new Set([])\n  };\n}\n","import TextAssets, { MockTextAssets, toTxtPath } from '../assets/TextAssets';\nimport Parser from '../parser/Parser';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { loadText } from './LoaderUtils';\n\n/**\n * Starts a new checkpoint with the given chapter number\n * and checkpoint number. The chapter/checkpoint file\n * will also be appended with the default checkpoint text.\n *\n * @param continueGame if true, will load the last checkpoint. Else, restart the chapter.\n * @param chapterNum chapter number\n * @param checkpointNum checkpoint number\n */\nexport async function callGameManagerOnTxtLoad(\n  continueGame: boolean,\n  chapterNum: number,\n  checkpointNum: number\n) {\n  const textAssets = SourceAcademyGame.getInstance().getIsUsingMock() ? MockTextAssets : TextAssets;\n  const scene = SourceAcademyGame.getInstance().getCurrentSceneRef();\n  const gameChapters = SourceAcademyGame.getInstance().getGameChapters();\n  const filename = gameChapters[chapterNum].filenames[checkpointNum];\n  if (!filename) {\n    return;\n  }\n\n  await loadText(scene, filename, filename);\n  await loadText(scene, textAssets.defaultCheckpoint.key, textAssets.defaultCheckpoint.path);\n\n  const text = scene.cache.text.get(filename);\n  const defaultCheckpointText = scene.cache.text.get(textAssets.defaultCheckpoint.key);\n\n  Parser.parse(defaultCheckpointText);\n  Parser.parse(text, true);\n  const gameCheckpoint = Parser.checkpoint;\n\n  scene.scene.start('GameManager', {\n    gameCheckpoint,\n    continueGame,\n    chapterNum,\n    checkpointNum\n  });\n}\n\n/**\n * Starts a new checkpoint using the next checkpoint in the\n * the chapter simulator stack\n */\nexport async function callGameManagerForSim() {\n  const scene = SourceAcademyGame.getInstance().getCurrentSceneRef();\n  const checkpointFilenames = SourceAcademyGame.getInstance().getSSChapterSimFilenames();\n  if (!checkpointFilenames.length) {\n    scene.scene.start('StorySimulatorMenu');\n    return;\n  }\n  const filename = checkpointFilenames.pop() as string;\n  await loadText(scene, filename, toTxtPath(filename));\n  await loadText(scene, TextAssets.defaultCheckpoint.key, TextAssets.defaultCheckpoint.path);\n\n  const text = scene.cache.text.get(filename);\n  const defaultCheckpointText = scene.cache.text.get(TextAssets.defaultCheckpoint.key);\n\n  Parser.parse(defaultCheckpointText);\n  Parser.parse(text, true);\n  const gameCheckpoint = Parser.checkpoint;\n\n  scene.scene.start('GameManager', {\n    gameCheckpoint,\n    chapterNum: -1,\n    checkpointNum: -1\n  });\n  return true;\n}\n","import ImageAssets from '../../assets/ImageAssets';\nimport { GameChapter } from '../../chapter/GameChapterTypes';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport CommonTextHover from '../../commons/CommonTextHover';\nimport SourceAcademyGame from '../../SourceAcademyGame';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { createBitmapText } from '../../utils/TextUtils';\nimport { callGameManagerOnTxtLoad } from '../../utils/TxtLoaderUtils';\nimport ChapterSelect from './ChapterSelect';\nimport chapConstants, { chapterIndexStyle, chapterTitleStyle } from './ChapterSelectConstants';\n\n/**\n * Create a chapter selection and formats it.\n *\n * It will use the chapter preview background and set it as the\n * chapter selection background.\n *\n * Additionally, this method attach a 'Play/Continue' button and\n * 'Reset Progress' button to the chapter selection; with an already\n * set up button functionality.\n *\n * @param scene scene for the chapter selection container to attach to\n * @param title title of the chapter\n * @param imageUrl url of the preview image\n * @param index index of chapter\n * @param lastCheckpointsIdx last checkpoint to continue users' progression from\n */\nexport function createChapter(\n  scene: ChapterSelect,\n  { title, imageUrl }: GameChapter,\n  index: number\n) {\n  const [x, y] = getCoorByChapter(index);\n  const chapterContainer = new Phaser.GameObjects.Container(scene, x, y);\n\n  const chapterDone =\n    index <= SourceAcademyGame.getInstance().getSaveManager().getLargestCompletedChapterNum();\n\n  // Chapter Preview\n  const chapterPreview = new Phaser.GameObjects.Image(scene, 0, 0, imageUrl).setDisplaySize(\n    chapConstants.imageRect.width,\n    chapConstants.imageRect.height\n  );\n\n  // Chapter Frame + blue tint\n  const chapterFrame = new Phaser.GameObjects.Sprite(\n    scene,\n    chapConstants.frame.xOffset,\n    chapConstants.frame.yOffset,\n    ImageAssets.chapterSelectFrame.key\n  ).setScale(0.99 * chapConstants.imageScale.x, 0.99 * chapConstants.imageScale.y);\n\n  // Chapter completed rectangle\n  const chapCompleteRect = new Phaser.GameObjects.Rectangle(\n    scene,\n    0,\n    chapConstants.chapComplete.y,\n    chapConstants.imageRect.width,\n    chapConstants.chapComplete.height,\n    0\n  )\n    .setOrigin(0.5)\n    .setAlpha(0.7)\n    .setInteractive()\n    .setVisible(chapterDone);\n\n  // Chapter complete text\n  const chapCompleteText = createBitmapText(\n    scene,\n    chapConstants.chapComplete.text,\n    { x: 0, y: chapConstants.chapComplete.y, oriX: 0.5, oriY: 0.5 },\n    chapterIndexStyle\n  ).setVisible(chapterDone);\n\n  // Chapter Action Popup\n  const chapterRepeatHover = new CommonTextHover(\n    scene,\n    chapConstants.resetButton.xOffset + 8,\n    chapConstants.resetButton.yOffset - 20,\n    'Reset progress'\n  );\n  const chapterContinueHover = new CommonTextHover(\n    scene,\n    chapConstants.playButton.xOffset + 8,\n    chapConstants.playButton.yOffset - 20,\n    'Play/Continue'\n  );\n\n  // Chapter Actions\n  const chapterRepeat = createButton(scene, {\n    assetKey: ImageAssets.chapterRepeatButton.key,\n    onUp: async () => await callGameManagerOnTxtLoad(false, index, 0),\n    onHover: () => chapterRepeatHover.setVisible(true),\n    onOut: () => chapterRepeatHover.setVisible(false)\n  })\n    .setPosition(chapConstants.resetButton.xOffset, chapConstants.resetButton.yOffset)\n    .setScale(chapConstants.buttons.scale);\n\n  const lastCheckpointPlayed = SourceAcademyGame.getInstance()\n    .getSaveManager()\n    .getChapterSaveState(index).lastCheckpointPlayed;\n\n  const chapterContinue = createButton(scene, {\n    assetKey: ImageAssets.chapterContinueButton.key,\n    onUp: async () => await callGameManagerOnTxtLoad(true, index, lastCheckpointPlayed),\n    onHover: () => chapterContinueHover.setVisible(true),\n    onOut: () => chapterContinueHover.setVisible(false)\n  })\n    .setPosition(chapConstants.playButton.xOffset, chapConstants.playButton.yOffset)\n    .setScale(chapConstants.buttons.scale);\n\n  // Chapter Text\n  const chapterIndexText = createBitmapText(\n    scene,\n    `Chapter ${index}`,\n    chapConstants.indexTextConfig,\n    chapterIndexStyle\n  );\n\n  const chapterTitleText = createBitmapText(\n    scene,\n    title,\n    chapConstants.titleTextConfig,\n    chapterTitleStyle\n  );\n\n  const chapterAccessible =\n    index <= SourceAcademyGame.getInstance().getSaveManager().getLargestCompletedChapterNum() + 1;\n\n  const blackTint = new Phaser.GameObjects.Rectangle(\n    scene,\n    0,\n    0,\n    chapConstants.imageRect.width,\n    chapConstants.imageRect.height,\n    0\n  )\n    .setOrigin(0.5)\n    .setAlpha(chapterAccessible ? 0 : 0.8)\n    .setInteractive();\n\n  chapterContainer.add([\n    chapterPreview,\n    chapterFrame,\n    chapCompleteRect,\n    chapCompleteText,\n    chapterRepeat,\n    chapterContinue,\n    chapterRepeatHover,\n    chapterContinueHover,\n    chapterIndexText,\n    chapterTitleText,\n    blackTint\n  ]);\n\n  return chapterContainer;\n}\n\nfunction getCoorByChapter(chapterNum: number) {\n  const page = Math.floor(chapterNum / chapConstants.grid.chapPerPage);\n  chapterNum %= chapConstants.grid.chapPerPage;\n  const row = Math.floor(chapterNum / chapConstants.grid.chapPerRow);\n  const col = chapterNum % chapConstants.grid.chapPerRow;\n\n  const centreCol = (chapConstants.grid.chapPerRow - 1) / 2;\n  const centreRow = (chapConstants.grid.chapPerCol - 1) / 2;\n\n  let x = page * screenSize.x + screenCenter.x;\n  x += (col - centreCol) * (chapConstants.imageRect.width + chapConstants.grid.chapGapX);\n  let y = screenCenter.y;\n  y += (row - centreRow) * (chapConstants.imageRect.height + chapConstants.grid.chapGapY);\n\n  return [x, y];\n}\n","import { screenCenter, screenSize } from 'src/features/game/commons/CommonConstants';\nimport { mandatory, toS3Path } from 'src/features/game/utils/GameUtils';\n\nimport ImageAssets from '../../assets/ImageAssets';\nimport CommonBackButton from '../../commons/CommonBackButton';\nimport { addLoadingScreen } from '../../effects/LoadingScreen';\nimport GameLayerManager from '../../layer/GameLayerManager';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport SourceAcademyGame from '../../SourceAcademyGame';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { loadImage } from '../../utils/LoaderUtils';\nimport { createBitmapText } from '../../utils/TextUtils';\nimport chapConstants, { pageNumberStyle } from './ChapterSelectConstants';\nimport { createChapter } from './ChapterSelectHelper';\n\n/**\n * The Chapter Select scene.\n * Player is able to choose which chapter to play from here.\n */\nclass ChapterSelect extends Phaser.Scene {\n  public layerManager?: GameLayerManager;\n\n  private chaptersContainer: Phaser.GameObjects.Container | undefined;\n  private backButtonContainer: Phaser.GameObjects.Container | undefined;\n  private pageNumberText: Phaser.GameObjects.BitmapText | undefined;\n  private targetPage: number;\n\n  constructor() {\n    super('ChapterSelect');\n\n    this.chaptersContainer = undefined;\n    this.backButtonContainer = undefined;\n    this.pageNumberText = undefined;\n    this.targetPage = 0; // First page is page 0 (but is displayed as page 1)\n  }\n\n  public preload() {\n    addLoadingScreen(this);\n  }\n\n  public async create() {\n    SourceAcademyGame.getInstance().setCurrentSceneRef(this);\n    this.layerManager = new GameLayerManager(this);\n    await this.preloadChapterAssets();\n    this.renderBackground();\n    this.renderChapters();\n  }\n\n  public update() {\n    if (!this.chaptersContainer) return;\n\n    const targetX = -this.targetPage * screenSize.x;\n    if (this.chaptersContainer.x > targetX) {\n      // Scroll right\n      const newXPos = this.chaptersContainer.x - chapConstants.scrollSpeed;\n      this.chaptersContainer.x = Math.max(newXPos, targetX);\n    } else if (targetX > this.chaptersContainer.x) {\n      // Scroll left\n      const newXPos = this.chaptersContainer.x + chapConstants.scrollSpeed;\n      this.chaptersContainer.x = Math.min(newXPos, targetX);\n    }\n  }\n\n  /**\n   * Clean up of related managers.\n   */\n  public cleanUp() {\n    this.getLayerManager().clearAllLayers();\n  }\n\n  /**\n   * Load the chapter previews assets to be shown.\n   */\n  private async preloadChapterAssets() {\n    await Promise.all(\n      this.getGameChapters().map(\n        async chapterDetail =>\n          await loadImage(this, chapterDetail.imageUrl, toS3Path(chapterDetail.imageUrl, true))\n      )\n    );\n  }\n\n  /**\n   * Render the background of this scene.\n   */\n  private renderBackground() {\n    const background = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.spaceshipBg.key\n    );\n    const blackOverlay = new Phaser.GameObjects.Rectangle(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      screenSize.x,\n      screenSize.y,\n      0\n    ).setAlpha(0.3);\n    this.getLayerManager().addToLayer(Layer.Background, background);\n    this.getLayerManager().addToLayer(Layer.Background, blackOverlay);\n  }\n\n  /**\n   * Render all the chapter selections and UI elements\n   * (the gray frame, the left and right arrow, back button, page number)\n   */\n  private renderChapters() {\n    this.backButtonContainer = new CommonBackButton(this, () => {\n      this.cleanUp();\n      this.scene.start('MainMenu');\n    });\n    this.chaptersContainer = this.createChaptersContainer();\n\n    this.pageNumberText = createBitmapText(\n      this,\n      `1 / ${this.numPages()}`,\n      chapConstants.pageNumberTextConfig,\n      pageNumberStyle\n    );\n\n    // Prepare to autoscroll to smallest incomplete chapter\n    const latestChapter = Math.min(\n      SourceAcademyGame.getInstance().getSaveManager().getLargestCompletedChapterNum() + 1,\n      this.getGameChapters().length - 1\n    );\n    this.targetPage = Math.floor(latestChapter / chapConstants.grid.chapPerPage);\n    if (this.targetPage < 0) {\n      // Only happens when this.getGameChapters().length === 0\n      this.targetPage = 0;\n    }\n    this.pageNumberText.setText(`${this.targetPage + 1} / ${this.numPages()}`);\n\n    const border = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.chapterSelectBorder.key\n    );\n\n    const leftArrow = createButton(this, {\n      assetKey: ImageAssets.chapterSelectArrow.key,\n      onUp: () => this.scrollPrevPage()\n    }).setPosition(screenCenter.x - chapConstants.arrow.xOffset, screenCenter.y);\n\n    const rightArrow = createButton(this, {\n      assetKey: ImageAssets.chapterSelectArrow.key,\n      onUp: () => this.scrollNextPage()\n    })\n      .setPosition(screenCenter.x + chapConstants.arrow.xOffset, screenCenter.y)\n      .setScale(-1, 1);\n\n    this.getLayerManager().addToLayer(Layer.UI, this.chaptersContainer);\n    this.getLayerManager().addToLayer(Layer.UI, this.backButtonContainer);\n    this.getLayerManager().addToLayer(Layer.UI, this.pageNumberText);\n    this.getLayerManager().addToLayer(Layer.UI, border);\n    this.getLayerManager().addToLayer(Layer.UI, leftArrow);\n    this.getLayerManager().addToLayer(Layer.UI, rightArrow);\n  }\n\n  /**\n   * Create a chapter selection based on its detail; as well as\n   * attach it with the necessary information (user progress).\n   *\n   * The information will be used/mutated depending on whether\n   * the user decides to continue or reset the progress.\n   */\n  private createChaptersContainer() {\n    const chaptersContainer = new Phaser.GameObjects.Container(this, 0, 0);\n    chaptersContainer\n      .add(\n        this.getGameChapters().map((chapterDetail, chapterIndex) => {\n          return createChapter(this, chapterDetail, chapterIndex);\n        })\n      )\n      .sort('depth')\n      .reverse(); // Ensures hover text correctly render over other objects in container\n    return chaptersContainer;\n  }\n\n  private getGameChapters = () => SourceAcademyGame.getInstance().getGameChapters();\n\n  /**\n   * Returns the number of pages of chapters\n   */\n  private numPages() {\n    const pages = Math.ceil(this.getGameChapters().length / chapConstants.grid.chapPerPage);\n    return Math.max(pages, 1); // Always have at least 1 page, even when 0 chapters\n  }\n\n  /**\n   * Scroll the screen to the previous page of chapters\n   */\n  private scrollPrevPage() {\n    this.targetPage = Math.max(this.targetPage - 1, 0);\n    this.pageNumberText?.setText(`${this.targetPage + 1} / ${this.numPages()}`);\n  }\n\n  /**\n   * Scroll the screen to the next page of chapters\n   */\n  private scrollNextPage() {\n    const numPages = this.numPages();\n    this.targetPage = Math.min(this.targetPage + 1, numPages - 1);\n    this.pageNumberText?.setText(`${this.targetPage + 1} / ${numPages}`);\n  }\n\n  public getLayerManager = () => mandatory(this.layerManager);\n}\n\nexport default ChapterSelect;\n","import FontAssets from '../../assets/FontAssets';\nimport { screenCenter } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\n\nexport const transitionTextStyle: BitmapFontStyle = {\n  key: FontAssets.alienCowsFont.key,\n  size: 80,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst tweenDuration = 1500;\n\nconst CheckpointConstants = {\n  text: { chapter: 'Chapter completed.', checkpoint: 'Checkpoint reached.' },\n  transitionTextConfig: { x: screenCenter.x, y: screenCenter.y, oriX: 0.5, oriY: 0.5 },\n  tweenDuration: tweenDuration,\n  entryTween: {\n    alpha: 1,\n    duration: tweenDuration,\n    ease: 'Power2'\n  },\n  exitTween: {\n    alpha: 0,\n    duration: tweenDuration,\n    ease: 'Power2'\n  }\n};\n\nexport default CheckpointConstants;\n","import { GameChapter } from '../../chapter/GameChapterTypes';\nimport SourceAcademyGame, { GameType } from '../../SourceAcademyGame';\nimport { sleep } from '../../utils/GameUtils';\nimport { createBitmapText } from '../../utils/TextUtils';\nimport { callGameManagerForSim, callGameManagerOnTxtLoad } from '../../utils/TxtLoaderUtils';\nimport CheckpointConstants, { transitionTextStyle } from './CheckpointTransitionConstants';\n\n/**\n * This scene is triggered in between checkpoints/chapters.\n * From user's perspective, it is when the in-between scene that is triggered\n * after they completed a checkpoint.\n *\n * Internally, we use this scene to fully load the next checkpoint,\n * before finally loading the next scene.\n *\n * In story simulator, the next checkpoint is loaded based on the\n * chapterSimStack using the callGameManagerForSim function.\n *\n * We cannot load these informations at the start of GameManager as\n * it can alter the sequencing of preload() and create() in the GameManager.\n */\nclass CheckpointTransition extends Phaser.Scene {\n  constructor() {\n    super('CheckpointTransition');\n  }\n\n  public preload() {\n    SourceAcademyGame.getInstance().setCurrentSceneRef(this);\n  }\n\n  public async create() {\n    if (SourceAcademyGame.getInstance().isGameType(GameType.Simulator)) {\n      await this.showTransitionText(CheckpointConstants.text.checkpoint);\n      await callGameManagerForSim();\n      return;\n    }\n\n    // Fetch all the necessary informations: save state and chapter details.\n    const loadedGameState = SourceAcademyGame.getInstance().getSaveManager().getFullSaveState();\n    const chapterDetails = SourceAcademyGame.getInstance().getGameChapters();\n\n    const [currChapter, currCheckpoint] = loadedGameState.userSaveState.recentlyPlayedCheckpoint;\n\n    if (this.isLastCheckpoint(chapterDetails, currChapter, currCheckpoint)) {\n      // If it is the last checkpoint, we mark that chapter is completed\n      await SourceAcademyGame.getInstance().getSaveManager().saveChapterComplete(currChapter);\n      await this.showTransitionText(CheckpointConstants.text.chapter);\n      if (this.isLastChapter(chapterDetails, currChapter)) {\n        // No more chapter, transition to chapter select instead\n        this.scene.start('ChapterSelect');\n        return;\n      } else {\n        // Transition to the next chapter, first checkpoint\n        await callGameManagerOnTxtLoad(true, currChapter + 1, 0);\n        return;\n      }\n    } else {\n      // Transition to the next checkpoint\n      await this.showTransitionText(CheckpointConstants.text.checkpoint);\n      await callGameManagerOnTxtLoad(false, currChapter, currCheckpoint + 1);\n      return;\n    }\n  }\n\n  /**\n   * In-game text to be shown during the checkpoint transition.\n   *\n   * @param text text to show\n   */\n  private async showTransitionText(text: string) {\n    const transitionText = createBitmapText(\n      this,\n      text,\n      CheckpointConstants.transitionTextConfig,\n      transitionTextStyle\n    ).setAlpha(0);\n\n    this.add.existing(transitionText);\n\n    // Fade in\n    this.tweens.add({\n      targets: transitionText,\n      ...CheckpointConstants.entryTween\n    });\n\n    await sleep(CheckpointConstants.tweenDuration * 2);\n\n    // Fade out\n    this.tweens.add({\n      targets: transitionText,\n      ...CheckpointConstants.exitTween\n    });\n\n    await sleep(CheckpointConstants.tweenDuration);\n  }\n\n  /**\n   * Checks whether the given checkpoint is the last checkpoint\n   * of the chapter.\n   *\n   * @param chapterDetails the entire story collection of chapters' information\n   * @param currChapter current chapter\n   * @param currCheckpoint current checkpoint\n   */\n  private isLastCheckpoint(\n    chapterDetails: GameChapter[],\n    currChapter: number,\n    currCheckpoint: number\n  ) {\n    return currCheckpoint >= chapterDetails[currChapter].filenames.length - 1;\n  }\n\n  /**\n   * Checks whether the given chapter is the last chapter of the story.\n   *\n   * @param chapterDetails the entire story collection of chapters' information\n   * @param currChapter current chapter\n   */\n  public isLastChapter(chapterDetails: GameChapter[], currChapter: number) {\n    return currChapter >= chapterDetails.length - 1;\n  }\n}\n\nexport default CheckpointTransition;\n","import FontAssets from '../../assets/FontAssets';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\n\nexport const mainMenuStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 30,\n  align: Phaser.GameObjects.BitmapText.ALIGN_RIGHT\n};\n\nconst bannerShow = 200;\nconst bannerHide = 300;\n\nconst MainMenuConstants = {\n  text: {\n    chapterSelect: 'Play Chapter',\n    studentRoom: 'Go to My Room',\n    awards: 'Awards Hall',\n    settings: 'Settings',\n    bindings: 'Key Bindings'\n  },\n  button: { ySpace: screenSize.y * 0.5 },\n  buttonTextConfig: { x: 600, y: 0, oriX: 1.0, oriY: 0.1 },\n  banner: { xHide: bannerHide },\n  onFocusTween: {\n    x: screenCenter.x + bannerShow,\n    duration: 200,\n    ease: 'Power2'\n  },\n  outFocusTween: {\n    x: screenCenter.x + bannerHide,\n    duration: 200,\n    ease: 'Power2'\n  },\n  saBanner: { x: screenSize.x * 0.3, y: screenSize.y * 0.9 }\n};\n\nexport default MainMenuConstants;\n","import ImageAssets from '../../assets/ImageAssets';\nimport SoundAssets from '../../assets/SoundAssets';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport { blackScreen } from '../../effects/FadeEffect';\nimport { putWorkerMessage } from '../../effects/WorkerMessage';\nimport GameLayerManager from '../../layer/GameLayerManager';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport SourceAcademyGame from '../../SourceAcademyGame';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { mandatory } from '../../utils/GameUtils';\nimport { calcTableFormatPos, Direction } from '../../utils/StyleUtils';\nimport MainMenuConstants, { mainMenuStyle } from './MainMenuConstants';\n\n/**\n * Main Menu\n *\n * User can navigate to other scenes from here.\n */\nclass MainMenu extends Phaser.Scene {\n  private layerManager?: GameLayerManager;\n\n  constructor() {\n    super('MainMenu');\n  }\n\n  public async create() {\n    SourceAcademyGame.getInstance().setCurrentSceneRef(this);\n    this.layerManager = new GameLayerManager(this);\n    this.renderBackground();\n    this.renderOptionButtons();\n\n    putWorkerMessage(this, 'T', screenCenter.x * 1.12, screenCenter.y * 1.1);\n\n    SourceAcademyGame.getInstance().getSoundManager().playBgMusic(SoundAssets.galacticHarmony.key);\n  }\n\n  /**\n   * Render background image for the main menu.\n   */\n  private renderBackground() {\n    const backgroundImg = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.spaceshipBg.key\n    ).setDisplaySize(screenSize.x, screenSize.y);\n    const blackOverlay = blackScreen(this).setAlpha(0.15);\n    const saBanner = new Phaser.GameObjects.Image(\n      this,\n      MainMenuConstants.saBanner.x,\n      MainMenuConstants.saBanner.y,\n      ImageAssets.saBanner.key\n    ).setAlpha(0.7);\n    this.getLayerManager().addToLayer(Layer.Background, backgroundImg);\n    this.getLayerManager().addToLayer(Layer.Background, blackOverlay);\n    this.getLayerManager().addToLayer(Layer.Background, saBanner);\n  }\n\n  /**\n   * Render all the buttons for the main menu.\n   * Selection of buttons is detailed at getOptionButtons().\n   */\n  private renderOptionButtons() {\n    const optionsContainer = new Phaser.GameObjects.Container(this, 0, 0);\n    const buttons = this.getOptionButtons();\n\n    const buttonPositions = calcTableFormatPos({\n      direction: Direction.Column,\n      numOfItems: buttons.length,\n      maxYSpace: MainMenuConstants.button.ySpace\n    });\n\n    optionsContainer.add(\n      buttons.map((button, index) =>\n        this.createOptionButton(\n          button.text,\n          buttonPositions[index][0] + MainMenuConstants.banner.xHide,\n          buttonPositions[index][1],\n          button.callback\n        )\n      )\n    );\n\n    this.getLayerManager().addToLayer(Layer.UI, optionsContainer);\n  }\n\n  /**\n   * Format a main menu button with the given text; attach a callback\n   * and position it at the given xPos and yPos.\n   *\n   * @param text text to be displayed on the button\n   * @param xPos x position of the button\n   * @param yPos y position of the button\n   * @param callback callback to be attached to the button\n   */\n  private createOptionButton(text: string, xPos: number, yPos: number, callback: any) {\n    // Animation to trigger on Hover and off Hover\n    const tweenOnHover = (target: Phaser.GameObjects.Container) => {\n      this.tweens.add({\n        targets: target,\n        ...MainMenuConstants.onFocusTween\n      });\n    };\n    const tweenOffHover = (target: Phaser.GameObjects.Container) => {\n      this.tweens.add({\n        targets: target,\n        ...MainMenuConstants.outFocusTween\n      });\n    };\n\n    // Create button with main menu style\n    const optButton: Phaser.GameObjects.Container = createButton(this, {\n      assetKey: ImageAssets.mainMenuOptBanner.key,\n      message: text,\n      textConfig: MainMenuConstants.buttonTextConfig,\n      bitMapTextStyle: mainMenuStyle,\n      onUp: callback,\n      onHover: () => tweenOnHover(optButton),\n      onOut: () => tweenOffHover(optButton),\n      onHoverEffect: false\n    }).setPosition(xPos, yPos);\n\n    return optButton;\n  }\n\n  /**\n   * Return all the buttons available at main menu,\n   * as well as their callbacks.\n   */\n  private getOptionButtons() {\n    return [\n      {\n        text: MainMenuConstants.text.chapterSelect,\n        callback: () => {\n          this.getLayerManager().clearAllLayers();\n          this.scene.start('ChapterSelect');\n        }\n      },\n      {\n        text: MainMenuConstants.text.awards,\n        callback: () => {\n          this.getLayerManager().clearAllLayers();\n          this.scene.start('AwardsHall');\n        }\n      },\n      {\n        text: MainMenuConstants.text.studentRoom,\n        callback: () => {\n          this.getLayerManager().clearAllLayers();\n          this.scene.start('RoomPreview');\n        }\n      },\n      {\n        text: MainMenuConstants.text.settings,\n        callback: () => {\n          this.getLayerManager().clearAllLayers();\n          this.scene.start('Settings');\n        }\n      },\n      {\n        text: MainMenuConstants.text.bindings,\n        callback: () => {\n          this.getLayerManager().clearAllLayers();\n          this.scene.start('Bindings');\n        }\n      }\n    ];\n  }\n  public getLayerManager = () => mandatory(this.layerManager);\n}\n\nexport default MainMenu;\n","import FontAssets from '../../assets/FontAssets';\nimport { screenSize } from '../../commons/CommonConstants';\nimport { BitmapFontStyle } from '../../commons/CommonTypes';\n\nexport const roomDefaultCode = `\nimport { prepend_remote_url, get_screen_width, get_screen_height, load_image, create_image, create_text, create_rect, add, set_display_size, set_alpha, set_origin } from 'game';\n\nfunction preload() {\n    load_image(\"galaxy\", prepend_remote_url(\"/locations/galaxy/normal.png\"));\n}\n\nfunction create() {\n    const width = get_screen_width();\n    const height = get_screen_height();\n    const centre_x = width / 2;\n    const centre_y = height / 2;\n\n    const image = create_image(centre_x, centre_y, \"galaxy\");\n    const image_resized = set_display_size(image, width, height);\n\n    const black_tint = create_rect(centre_x, centre_y, width, height, 0x000011);\n    const black_tint_alpha = set_alpha(black_tint, 0.5);\n\n    const text = create_text(centre_x, centre_y, \"Unable to fetch mission!\");\n    const text_repos = set_origin(text, 0.5, 0.5);\n\n    add(image_resized);\n    add(black_tint_alpha);\n    add(text_repos);\n}\n\nfunction update() {}\n`;\n\nexport const verifiedStyle: BitmapFontStyle = {\n  key: FontAssets.pixelFont.key,\n  size: 20,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nexport const RoomConstants = {\n  assessmentNumber: 'MYROOM',\n  verifiedText: 'VERIFIED',\n  tag: { width: 128, height: 50 },\n  hoverTagTextConfig: { x: 64, y: 0, oriX: 0.5, oriY: 0.55 },\n  refreshButton: { x: 0.95 * screenSize.x, y: 0.92 * screenSize.y }\n};\n","import { Assessment, IProgrammingQuestion } from 'src/commons/assessment/AssessmentTypes';\nimport { getAssessment, getAssessmentOverviews } from 'src/commons/sagas/RequestsSaga';\n\nimport ImageAssets from '../../assets/ImageAssets';\nimport GameModeSequence from '../../mode/sequence/GameModeSequence';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\nimport SourceAcademyGame from '../../SourceAcademyGame';\nimport { HexColor } from '../../utils/StyleUtils';\nimport { createBitmapText } from '../../utils/TextUtils';\nimport RoomPreview from './RoomPreview';\nimport { RoomConstants, roomDefaultCode, verifiedStyle } from './RoomPreviewConstants';\n\n/**\n * Async function that obtains students code for Create-My-Room mission\n *\n * @param {AccountInfo} accInfo - students' account information\n * @returns {Promise<string>} - promise of students code\n */\nexport async function getRoomPreviewCode(): Promise<string> {\n  const roomAssessmentId = await getRoomAssessmentId();\n  if (!roomAssessmentId) {\n    // Get default room code.\n    return getStudentRoomCode(null);\n  }\n  const mission = await getAssessment(\n    roomAssessmentId,\n    SourceAcademyGame.getInstance().getAccountInfo()\n  );\n  const studentCode = getStudentRoomCode(mission);\n  return studentCode;\n}\n\n/**\n * Function that generates the correct assessment id of students\n *\n * @param {AccountInfo} accInfo - students' account information\n */\nasync function getRoomAssessmentId() {\n  const assessments = await getAssessmentOverviews(\n    SourceAcademyGame.getInstance().getAccountInfo()\n  );\n  const roomAssessment = (assessments || []).find(\n    assessment => assessment.number === RoomConstants.assessmentNumber\n  );\n  return roomAssessment ? roomAssessment.id : null;\n}\n\n/**\n * Fetches the student code based on the mission.\n * If student has not attempted the mission; will return\n * the answer template instead.\n *\n * If the mission is invalid (e.g. invalid ID, typo), the\n * default code for the room will be returned instead.\n *\n * @param mission\n */\nfunction getStudentRoomCode(mission: Assessment | null) {\n  if (mission) {\n    const progQn = mission.questions[0] as IProgrammingQuestion;\n    const answer = progQn.answer;\n    return answer ? (answer as string) : progQn.solutionTemplate;\n  }\n  return roomDefaultCode;\n}\n\n/**\n * CMR Game Phases for the phase manager.\n */\nexport const createCMRGamePhases = () => {\n  return new Map([[GamePhaseType.None, new GameModeSequence()]]);\n};\n\n/**\n * Create a verification container.\n *\n * @param scene room preview scene\n * @returns {Phaser.GameObjects.Container} verification container\n */\nexport const createVerifiedHoverContainer = (scene: RoomPreview) => {\n  const hoverContainer = new Phaser.GameObjects.Container(scene, 0, 0);\n\n  const hoverTextBg = new Phaser.GameObjects.Rectangle(\n    scene,\n    0,\n    0,\n    RoomConstants.tag.width,\n    RoomConstants.tag.height,\n    HexColor.darkBlue\n  )\n    .setOrigin(0.0, 0.5)\n    .setAlpha(0.8);\n\n  const hoverTextFrame = new Phaser.GameObjects.Sprite(\n    scene,\n    0,\n    0,\n    ImageAssets.verifiedFrame.key\n  ).setOrigin(0.0, 0.5);\n\n  const hoverLine = new Phaser.GameObjects.Rectangle(\n    scene,\n    0,\n    -hoverTextBg.height * 0.5,\n    hoverTextBg.width,\n    hoverTextBg.height * 0.05,\n    HexColor.offWhite\n  ).setOrigin(0.0, 0.0);\n\n  const hoverText = createBitmapText(\n    scene,\n    RoomConstants.verifiedText,\n    RoomConstants.hoverTagTextConfig,\n    verifiedStyle\n  ).setBlendMode(Phaser.BlendModes.DIFFERENCE);\n\n  scene.tweens.add({\n    targets: hoverLine,\n    alpha: 0.2,\n    y: hoverTextBg.height * 0.35,\n    duration: 2000,\n    ease: 'Power0',\n    yoyo: true,\n    loop: -1\n  });\n\n  hoverContainer.add([hoverTextBg, hoverText, hoverLine, hoverTextFrame]);\n  hoverContainer.setVisible(false);\n  return hoverContainer;\n};\n","import { Context, runInContext } from 'Clang-slang';\nimport { Variant } from 'Clang-slang/dist/types';\nimport { createContext } from 'src/commons/utils/JsSlangHelper';\n\nimport ImageAssets from '../../assets/ImageAssets';\nimport { getAwardProp } from '../../awards/GameAwardsHelper';\nimport GameAwardsManager from '../../awards/GameAwardsManager';\nimport { Constants, screenCenter, screenSize } from '../../commons/CommonConstants';\nimport CommonTextHover from '../../commons/CommonTextHover';\nimport { ItemId } from '../../commons/CommonTypes';\nimport GameDashboardManager from '../../dashboard/GameDashboardManager';\nimport { DashboardPage } from '../../dashboard/GameDashboardTypes';\nimport { addLoadingScreen } from '../../effects/LoadingScreen';\nimport GameEscapeManager from '../../escape/GameEscapeManager';\nimport GameInputManager from '../../input/GameInputManager';\nimport GameLayerManager from '../../layer/GameLayerManager';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport GamePhaseManager from '../../phase/GamePhaseManager';\nimport { GamePhaseType } from '../../phase/GamePhaseTypes';\nimport SourceAcademyGame from '../../SourceAcademyGame';\nimport GameToolbarManager from '../../toolbar/GameToolbarManager';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { mandatory, toS3Path } from '../../utils/GameUtils';\nimport { loadImage, loadSound, loadSpritesheet } from '../../utils/LoaderUtils';\nimport { resizeOverflow } from '../../utils/SpriteUtils';\nimport { RoomConstants, roomDefaultCode } from './RoomPreviewConstants';\nimport { createCMRGamePhases, createVerifiedHoverContainer } from './RoomPreviewHelper';\n\n/**\n * This scene uses the students code as part of its code.\n *\n * Additionally, the scene shares some common functionality as\n * GameManager, in that it incorporates escape menu and collectible\n * menu.\n *\n * Student code is not executed within a layer manager as\n * there are features that do not work well with container\n * e.g. mask, animations.\n *\n * Hence, student code will be executed and added to the scene\n * as per normal. Meanwhile, UI parts of this scene will still\n * make use of the layer manager; separate from student code.\n */\nexport default class RoomPreview extends Phaser.Scene {\n  private layerManager?: GameLayerManager;\n  private inputManager?: GameInputManager;\n  private phaseManager?: GamePhaseManager;\n  private escapeManager?: GameEscapeManager;\n  private collectibleManager?: GameAwardsManager;\n  private achievementManager?: GameAwardsManager;\n  private toolbarManager?: GameToolbarManager;\n  private dashboardManager?: GameDashboardManager;\n\n  private studentCode: string;\n  private preloadImageMap: Map<string, string>;\n  private preloadSoundMap: Map<string, string>;\n  private preloadSpritesheetMap: Map<string, [string, object]>;\n\n  private verifCont: Phaser.GameObjects.Container | undefined;\n\n  private context?: Context;\n\n  constructor() {\n    super('RoomPreview');\n    this.preloadImageMap = new Map<string, string>();\n    this.preloadSoundMap = new Map<string, string>();\n    this.preloadSpritesheetMap = new Map<string, [string, object]>();\n    this.studentCode = roomDefaultCode;\n  }\n\n  public init() {\n    SourceAcademyGame.getInstance().setCurrentSceneRef(this);\n    this.studentCode = SourceAcademyGame.getInstance().getRoomCode();\n    this.createContext();\n  }\n\n  public preload() {\n    addLoadingScreen(this);\n\n    // Initialise one verified tag to be used throughout the CMR\n    this.verifCont = createVerifiedHoverContainer(this);\n  }\n\n  public async create() {\n    // Run student code once to update the context\n    await this.eval(this.studentCode);\n\n    this.renderDefaultBackground();\n\n    /**\n     * We don't use .eval('preload();') at preload() as\n     * .eval() is not awaited by the preload() method i.e. it does not\n     * wait for student's preload function to finish.\n     *\n     * Instead, the students' 'preload()' function simply populate a map\n     * of assets key and path to be loaded.\n     *\n     * We await the students .eval('preload();') at create()\n     * to ensure that the .eval('preload();') is fully resolved.\n     */\n    await this.eval(`preload();`);\n\n    // Preload all necessary assets\n    await Promise.all(\n      Array.from(this.preloadImageMap).map(async ([key, path]) => {\n        await loadImage(this, key, path);\n      })\n    );\n    await Promise.all(\n      Array.from(this.preloadSoundMap).map(async ([key, path]) => {\n        await loadSound(this, key, path);\n      })\n    );\n    await Promise.all(\n      Array.from(this.preloadSpritesheetMap).map(async ([key, [path, config]]) => {\n        await loadSpritesheet(this, key, path, config);\n      })\n    );\n\n    const roomRefreshHover = new CommonTextHover(\n      this,\n      RoomConstants.refreshButton.x - 200,\n      RoomConstants.refreshButton.y - 30,\n      'Refresh Room'\n    );\n\n    const refreshButton = createButton(this, {\n      assetKey: ImageAssets.chapterRepeatButton.key,\n      onUp: async () => {\n        await SourceAcademyGame.getInstance().loadRoomCode();\n        this.studentCode = SourceAcademyGame.getInstance().getRoomCode();\n        this.getLayerManager().clearAllLayers();\n        this.sound.stopAll();\n        this.scene.restart();\n      },\n      onHover: () => roomRefreshHover.setVisible(true),\n      onOut: () => roomRefreshHover.setVisible(false)\n    }).setPosition(RoomConstants.refreshButton.x, RoomConstants.refreshButton.y);\n\n    // Execute create\n    await this.eval(`create();`);\n    SourceAcademyGame.getInstance().getSoundManager().playBgMusic(Constants.nullInteractionId);\n\n    // Initialise managers after students `create()`\n    // This is primarily to ensure layer manager's layer\n    // are on top of the displayed room objects\n    this.initialiseManagers();\n\n    // Binding keyboard triggers require managers to be initialised\n    this.bindKeyboardTriggers();\n\n    // Add verified tag\n    this.getLayerManager().addToLayer(Layer.UI, this.getVerifCont());\n    this.getLayerManager().addToLayer(Layer.UI, refreshButton);\n    this.getLayerManager().addToLayer(Layer.UI, roomRefreshHover);\n\n    this.getToolbarManager().renderToolbarContainer();\n  }\n\n  public update() {\n    /**\n     * runInContext appends new frame everytime it is run,\n     * which leads to out of memory error when we run\n     * runInContext as often as FPS of the game for `update()`.\n     *\n     * Hence, we replace the scope instead of appending\n     * new one each time.\n     */\n    this.eval(`update();`);\n  }\n\n  public createContext() {\n    this.context = createContext([], 'playground', Variant.DEFAULT);\n    this.context.moduleContexts.game = {\n      tabs: null,\n      state: {\n        scene: this,\n        preloadImageMap: this.preloadImageMap,\n        preloadSoundMap: this.preloadSoundMap,\n        preloadSpritesheetMap: this.preloadSpritesheetMap,\n        remotePath: (file: string) => toS3Path(file, true),\n        screenSize: screenSize,\n        createAward: (x: number, y: number, key: ItemId) => this.createAward(x, y, key)\n      }\n    };\n  }\n\n  private async eval(code: string) {\n    // runInContext also automatically updates the context\n    await runInContext(code, this.context!);\n  }\n\n  /**\n   * Bind the escape menu and dashboard to keyboard keys.\n   */\n  private bindKeyboardTriggers() {\n    this.getInputManager().registerKeyboardListener(\n      Phaser.Input.Keyboard.KeyCodes.ESC,\n      'up',\n      async () => {\n        if (this.getPhaseManager().isCurrentPhaseTerminal()) {\n          await this.getPhaseManager().popPhase();\n        } else {\n          await this.getPhaseManager().pushPhase(GamePhaseType.EscapeMenu);\n        }\n      }\n    );\n    this.getInputManager().registerKeyboardListener(\n      Phaser.Input.Keyboard.KeyCodes.TAB,\n      'up',\n      async () => {\n        if (this.getPhaseManager().isCurrentPhase(GamePhaseType.Dashboard)) {\n          await this.getPhaseManager().popPhase();\n        } else if (this.getPhaseManager().isCurrentPhaseTerminal()) {\n          await this.getPhaseManager().swapPhase(GamePhaseType.Dashboard);\n        } else {\n          await this.getPhaseManager().pushPhase(GamePhaseType.Dashboard);\n        }\n      }\n    );\n  }\n\n  /**\n   * Clean up on related managers\n   */\n  public cleanUp() {\n    this.getInputManager().clearListeners();\n    this.getLayerManager().clearAllLayers();\n  }\n\n  /**\n   * Create an award based on the given award key.\n   * The award key is associated with an awardProperty,\n   * which in turn will be used as the source of information for\n   * the award.\n   *\n   * If the award is a valid key and the student already has\n   * the award, the resulting object will have a verification\n   * tag that pops up when student hovers over it.\n   *\n   * Else, we return a default image of a cookie; without\n   * the verification tag.\n   *\n   * @param x x position of the award\n   * @param y y position of the award\n   * @param awardKey key associated with the award\n   */\n  private createAward(x: number, y: number, awardKey: ItemId) {\n    const achievements = this.getUserStateManager().getAchievements();\n    const collectibles = this.getUserStateManager().getCollectibles();\n    const defaultAward = new Phaser.GameObjects.Sprite(this, x, y, ImageAssets.cookies.key);\n\n    if (!achievements.includes(awardKey) && !collectibles.includes(awardKey)) return defaultAward;\n\n    const awardProp = getAwardProp(awardKey);\n    if (!awardProp.completed) return defaultAward;\n\n    const award = new Phaser.GameObjects.Sprite(this, x, y, awardProp.assetKey);\n    return this.attachVerificationTag(award);\n  }\n\n  /**\n   * Attach a verification tag to the sprite.\n   * When user hovers on the sprite, a verification will appear\n   * on the image.\n   *\n   * Used to verify autheticity of the award.\n   *\n   * @param sprite sprite to attach the verification tag to\n   */\n  private attachVerificationTag(sprite: Phaser.GameObjects.Sprite) {\n    const verifCont = this.getVerifCont();\n\n    sprite.setInteractive({ pixelPerfect: true, useHandCursor: true });\n    sprite.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_OVER, () =>\n      verifCont.setVisible(true)\n    );\n    sprite.addListener(Phaser.Input.Events.GAMEOBJECT_POINTER_OUT, () =>\n      verifCont.setVisible(false)\n    );\n    sprite.addListener(\n      Phaser.Input.Events.GAMEOBJECT_POINTER_MOVE,\n      (pointer: Phaser.Input.Pointer) => {\n        verifCont.x = pointer.x + 10;\n        verifCont.y = pointer.y - 10;\n      }\n    );\n    return sprite;\n  }\n\n  /**\n   * Render starting background for the room.\n   */\n  private renderDefaultBackground() {\n    const backgroundAsset = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      this.getDefaultBackgroundKey()\n    );\n    resizeOverflow(backgroundAsset, screenSize.x, screenSize.y);\n\n    // Don't use layer manager because it does not exist at this point\n    this.add.existing(backgroundAsset);\n  }\n\n  /**\n   * Returns the background key to be used, based on the user's assessment\n   * progression.\n   */\n  private getDefaultBackgroundKey() {\n    // Once reversed, the first element is the submitted assessment with the most recent close date\n    const completedAssessmentIds = this.getUserStateManager().getAssessments().reverse();\n    const backgroundMapping = SourceAcademyGame.getInstance().getRoomPreviewMapping();\n\n    // Iterative search for assessment with valid mapping\n    for (let i = 0; i < completedAssessmentIds.length; i++) {\n      if (backgroundMapping.has(completedAssessmentIds[i])) {\n        return completedAssessmentIds[i];\n      }\n    }\n\n    // If there is no valid mapping, we use default background image\n    return ImageAssets.sourceCrashedPod.key;\n  }\n\n  /**\n   * Construct the necessary managers for this scene\n   */\n  private initialiseManagers() {\n    this.layerManager = new GameLayerManager(this);\n    this.inputManager = new GameInputManager(this);\n    this.phaseManager = new GamePhaseManager(createCMRGamePhases(), this.inputManager);\n    this.escapeManager = new GameEscapeManager(this);\n    this.collectibleManager = new GameAwardsManager(\n      this,\n      SourceAcademyGame.getInstance().getUserStateManager().getCollectibles\n    );\n    this.achievementManager = new GameAwardsManager(\n      this,\n      SourceAcademyGame.getInstance().getUserStateManager().getAchievements\n    );\n    this.toolbarManager = new GameToolbarManager(this);\n    this.dashboardManager = new GameDashboardManager(\n      this,\n      [DashboardPage.Collectibles, DashboardPage.Achievements],\n      [this.collectibleManager, this.achievementManager]\n    );\n  }\n\n  private getVerifCont = () => mandatory(this.verifCont);\n  private getUserStateManager = () => SourceAcademyGame.getInstance().getUserStateManager();\n\n  public getInputManager = () => mandatory(this.inputManager);\n  public getLayerManager = () => mandatory(this.layerManager);\n  public getPhaseManager = () => mandatory(this.phaseManager);\n  public getEscapeManager = () => mandatory(this.escapeManager);\n  public getCollectibleManager = () => mandatory(this.collectibleManager);\n  public getAchievementManager = () => mandatory(this.achievementManager);\n  public getToolbarManager = () => mandatory(this.toolbarManager);\n  public getDashboardManager = () => mandatory(this.dashboardManager);\n}\n","import ImageAssets from '../../assets/ImageAssets';\nimport CommonBackButton from '../../commons/CommonBackButton';\nimport { screenCenter, screenSize } from '../../commons/CommonConstants';\nimport CommonRadioButton from '../../commons/CommonRadioButton';\nimport GameLayerManager from '../../layer/GameLayerManager';\nimport { Layer } from '../../layer/GameLayerTypes';\nimport SourceAcademyGame from '../../SourceAcademyGame';\nimport { createButton } from '../../utils/ButtonUtils';\nimport { mandatory } from '../../utils/GameUtils';\nimport { calcTableFormatPos, Direction } from '../../utils/StyleUtils';\nimport { createBitmapText } from '../../utils/TextUtils';\nimport SettingsConstants, {\n  applySettingsTextStyle,\n  optionHeaderTextStyle,\n  optionTextStyle\n} from './SettingsConstants';\n\n/**\n * Settings scene, in which students can control\n * different settings of the game.\n */\nclass Settings extends Phaser.Scene {\n  private bgmVolumeRadioButtons: CommonRadioButton | undefined;\n  private sfxVolumeRadioButtons: CommonRadioButton | undefined;\n  private layerManager?: GameLayerManager;\n\n  constructor() {\n    super('Settings');\n  }\n\n  public async create() {\n    SourceAcademyGame.getInstance().setCurrentSceneRef(this);\n    this.layerManager = new GameLayerManager(this);\n    this.renderBackground();\n    this.renderOptions();\n  }\n\n  /**\n   * Set up the background and add it to the background layer.\n   */\n  private renderBackground() {\n    const background = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.spaceshipBg.key\n    );\n\n    const settingBgImg = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      ImageAssets.settingBanner.key\n    );\n    this.getLayerManager().addToLayer(Layer.Background, background);\n    this.getLayerManager().addToLayer(Layer.Background, settingBgImg);\n  }\n\n  /**\n   * Add various settings that user can use.\n   * Sets up the header and the radio buttons, and add it to the screen.\n   */\n  private renderOptions() {\n    // Create Headers\n    const optCont = new Phaser.GameObjects.Container(this, 0, 0);\n    const optHeader = this.getSettingsHeader();\n    const optHeaderPos = calcTableFormatPos({\n      direction: Direction.Column,\n      numOfItems: optHeader.length,\n      maxYSpace: SettingsConstants.opt.ySpace\n    });\n    optCont.add(\n      optHeader.map((header, index) => this.createOptionHeader(header, optHeaderPos[index][1]))\n    );\n\n    // Get user default choice\n    const { bgmVolume, sfxVolume } = this.getSaveManager().getSettings();\n    const sfxVolIdx = SettingsConstants.volContainerOpts.findIndex(\n      value => parseFloat(value) === sfxVolume\n    );\n    const bgmVolIdx = SettingsConstants.volContainerOpts.findIndex(\n      value => parseFloat(value) === bgmVolume\n    );\n\n    // Create SFX Radio Buttons\n    this.sfxVolumeRadioButtons = this.createOptRadioOptions(sfxVolIdx, optHeaderPos[0][1]);\n    // Create BGM Radio Buttons\n    this.bgmVolumeRadioButtons = this.createOptRadioOptions(bgmVolIdx, optHeaderPos[1][1]);\n\n    // Create apply settings button\n    const applySettingsButton = createButton(this, {\n      assetKey: ImageAssets.mediumButton.key,\n      message: 'Apply Settings',\n      textConfig: { x: 0, y: 0, oriX: 0.33, oriY: 0.85 },\n      bitMapTextStyle: applySettingsTextStyle,\n      onUp: () => this.applySettings()\n    }).setPosition(screenCenter.x, screenSize.y * 0.925);\n\n    // Create back button to main menu\n    const backButton = new CommonBackButton(this, () => {\n      this.getLayerManager().clearAllLayers();\n      this.scene.start('MainMenu');\n    });\n\n    this.getLayerManager().addToLayer(Layer.UI, optCont);\n    this.getLayerManager().addToLayer(Layer.UI, this.sfxVolumeRadioButtons);\n    this.getLayerManager().addToLayer(Layer.UI, this.bgmVolumeRadioButtons);\n    this.getLayerManager().addToLayer(Layer.UI, applySettingsButton);\n    this.getLayerManager().addToLayer(Layer.UI, backButton);\n  }\n\n  /**\n   * Options header to display.\n   */\n  private getSettingsHeader() {\n    return ['SFX', 'BGM'];\n  }\n\n  /**\n   * Formats the header text as well as the blue arrow and\n   * underline, and place it based on the given yPos.\n   *\n   * @param header text for the header\n   * @param yPos y position of the option\n   */\n  private createOptionHeader(header: string, yPos: number) {\n    const optHeaderCont = new Phaser.GameObjects.Container(this, 0, yPos);\n    const headerDiv = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      0,\n      ImageAssets.settingOption.key\n    );\n    const headerText = createBitmapText(\n      this,\n      header,\n      SettingsConstants.optHeaderTextConfig,\n      optionHeaderTextStyle\n    );\n    optHeaderCont.add([headerDiv, headerText]);\n    return optHeaderCont;\n  }\n\n  /**\n   * Create a radio buttons, formatted with settings' style.\n   *\n   * @param defaultChoiceIdx default choice of the radio button\n   * @param yPos y position of the radio button\n   */\n  private createOptRadioOptions(defaultChoiceIdx: number, yPos: number) {\n    return new CommonRadioButton(\n      this,\n      {\n        choices: SettingsConstants.volContainerOpts,\n        defaultChoiceIdx: defaultChoiceIdx,\n        maxXSpace: SettingsConstants.opt.xSpace,\n        choiceTextConfig: SettingsConstants.radioButtonsTextConfig,\n        bitmapTextStyle: optionTextStyle\n      },\n      SettingsConstants.opt.x,\n      -screenCenter.y + yPos\n    );\n  }\n\n  /**\n   * Fetch the current radio buttons value, save it, then apply it.\n   *\n   * This method is responsible in contacting the managers that\n   * need to be aware of the update.\n   */\n  public async applySettings() {\n    const sfxVol = this.sfxVolumeRadioButtons\n      ? parseFloat(this.sfxVolumeRadioButtons.getChosenChoice())\n      : 1;\n    const bgmVol = this.bgmVolumeRadioButtons\n      ? parseFloat(this.bgmVolumeRadioButtons.getChosenChoice())\n      : 1;\n\n    // Save settings\n    await this.getSaveManager().saveSettings({ bgmVolume: bgmVol, sfxVolume: sfxVol });\n\n    // Apply settings\n    SourceAcademyGame.getInstance()\n      .getSoundManager()\n      .applyUserSettings(this.getSaveManager().getSettings());\n  }\n\n  public getSaveManager = () => SourceAcademyGame.getInstance().getSaveManager();\n  public getLayerManager = () => mandatory(this.layerManager);\n}\n\nexport default Settings;\n","import { AssetMap, SoundAsset } from '../assets/AssetsTypes';\nimport { Constants } from '../commons/CommonConstants';\nimport { AssetKey, AssetPath } from '../commons/CommonTypes';\nimport { SettingsJson } from '../save/GameSaveTypes';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { mandatory, toS3Path } from '../utils/GameUtils';\nimport { bgMusicFadeDuration, musicFadeOutTween } from './GameSoundTypes';\n\n/**\n * This class manages the sounds for the entire game\n * It proxies the game's sound manager\n */\nclass GameSoundManager {\n  private soundAssetMap: Map<AssetKey, SoundAsset>;\n  private bgmVol: number;\n  private sfxVol: number;\n\n  private currBgMusicKey: AssetKey;\n  private currBgMusic: Phaser.Sound.WebAudioSound | undefined;\n\n  constructor() {\n    this.soundAssetMap = new Map<AssetKey, SoundAsset>();\n    this.bgmVol = 1;\n    this.sfxVol = 1;\n    this.currBgMusicKey = Constants.nullInteractionId;\n  }\n\n  /**\n   * Apply user settings to the sound manager;\n   * namely the sfxVolume and bgmVolume.\n   *\n   * In the case the volumes are not defined, it will\n   * be defaulted to 1 (max volume).\n   *\n   * @param settings user settings\n   */\n  public applyUserSettings(settings: SettingsJson) {\n    this.bgmVol = settings.bgmVolume !== undefined ? settings.bgmVolume : 1;\n    this.sfxVol = settings.sfxVolume !== undefined ? settings.sfxVolume : 1;\n\n    // Modify currently playing BGM, if any\n    if (this.currBgMusic && this.currBgMusic.isPlaying) {\n      const soundAsset = mandatory(this.getSoundAsset(this.currBgMusicKey));\n      const bgmVol = soundAsset.config.volume !== undefined ? soundAsset.config.volume : 1;\n      this.currBgMusic.setVolume(bgmVol * this.bgmVol);\n    }\n  }\n\n  /**\n   * Store the sound asset within the sound manager.\n   * Sound asset is stored as it is used when playing the\n   * sound (to apply the sound config).\n   *\n   * @param soundAsset sound asset\n   */\n  private addSoundAsset(soundAsset: SoundAsset) {\n    this.soundAssetMap.set(soundAsset.key, soundAsset);\n  }\n\n  /**\n   * Return a sound asset based on its key.\n   * If there is none, return undefined.\n   *\n   * @param key sound asset key\n   */\n  private getSoundAsset(key: AssetKey) {\n    return this.soundAssetMap.get(key);\n  }\n\n  /**\n   * Preload sound assets into the sound manager.\n   *\n   * @param soundAssets array of sound assets\n   */\n  public loadSounds(soundAssets: SoundAsset[]) {\n    soundAssets.forEach(asset => {\n      this.addSoundAsset(asset);\n      this.loadSound(asset.key, toS3Path(asset.path, true));\n    });\n  }\n\n  /**\n   * Preload sound assets into the sound manager.\n   *\n   * @param assetMap AssetMap of sound assets\n   */\n  public loadSoundAssetMap(assetMap: AssetMap<SoundAsset>) {\n    Object.values(assetMap).forEach(asset => {\n      this.addSoundAsset(asset);\n      this.loadSound(asset.key, toS3Path(asset.path, false));\n    });\n  }\n\n  /**\n   * Preload sound asset into the sound manager.\n   *\n   * @param assetKey key to be associated with the sound\n   * @param assetPath path to the sound file\n   */\n  private loadSound(assetKey: AssetKey, assetPath: AssetPath) {\n    this.getCurrentScene().load.audio(assetKey, assetPath);\n  }\n\n  /**\n   * Play a sound, usually an SFX.\n   * The sound will be added, played, and destroyed afterwards; hence\n   * there is no need to keep any reference to it.\n   *\n   * Its volume will be multipled by the current user's SFX volume.\n   *\n   * @param soundKey key associated with the sound.\n   */\n  public playSound(soundKey: AssetKey) {\n    const soundAsset = this.getSoundAsset(soundKey);\n    if (soundAsset) {\n      const vol = soundAsset.config.volume !== undefined ? soundAsset.config.volume : 1;\n      this.getBaseSoundManager().play(soundAsset.key, {\n        ...soundAsset.config,\n        volume: vol * this.sfxVol\n      });\n    }\n  }\n\n  /**\n   * Play a background music. Only one background music is able\n   * to be played at any one time; hence calling this method will\n   * also stop the previous background music.\n   *\n   * If the provided soundKey is the same as the the currently\n   * playing background music, it will be skipped (to avoid strange\n   * stopping and playing of the same music).\n   *\n   * To play no music, the parameter can be set to empty string i.e. ''.\n   *\n   * @param soundKey key to the background music to be played.\n   * @param fadeDuration duration to fade out previous background music\n   */\n  public playBgMusic(soundKey: AssetKey, fadeDuration?: number) {\n    // Game is no longer mounted, do not play the music\n    if (!SourceAcademyGame.getInstance().isMounted) {\n      return;\n    }\n\n    // If same music is already playing, skip\n    if (this.currBgMusicKey === soundKey) {\n      return;\n    }\n\n    // Requested soundKey is empty, stop current BGM\n    if (soundKey === Constants.nullInteractionId && this.currBgMusic) {\n      this.fadeOutAndDestroyMusic(this.currBgMusic, fadeDuration);\n      this.currBgMusic = undefined;\n      this.currBgMusicKey = soundKey;\n      return;\n    }\n\n    // Stop previous BgMusic\n    if (this.currBgMusic) this.fadeOutAndDestroyMusic(this.currBgMusic);\n\n    // Update BGM and key\n    const soundAsset = mandatory(this.getSoundAsset(soundKey));\n    const bgmVol = soundAsset.config.volume !== undefined ? soundAsset.config.volume : 1;\n\n    this.currBgMusic = this.getBaseSoundManager().add(soundAsset.key, {\n      ...soundAsset.config,\n      volume: bgmVol * this.bgmVol\n    }) as Phaser.Sound.WebAudioSound;\n    this.currBgMusicKey = soundAsset.key;\n\n    // Finally, play it\n    this.currBgMusic.play();\n  }\n\n  /**\n   * Fade out a sound and destroy it.\n   *\n   * @param sound sound to be destroyed\n   * @param fadeDuration duration of fade out\n   */\n  private fadeOutAndDestroyMusic(\n    sound: Phaser.Sound.BaseSound,\n    fadeDuration: number = bgMusicFadeDuration\n  ) {\n    this.getCurrentScene().tweens.add({\n      targets: sound,\n      ...musicFadeOutTween,\n      duration: fadeDuration\n    });\n\n    // TODO: fix `TypeError: Cannot read property 'disconnect' of null` error\n    // when user navigates away from game scene before fadeDuration * 2\n    setTimeout(() => sound.destroy(), fadeDuration * 2);\n  }\n\n  /**\n   * Stop all currently playing sounds.\n   */\n  public stopAllSound() {\n    this.getBaseSoundManager().stopAll();\n  }\n\n  /**\n   * Pause currently playing BGM music, if it is playing.\n   */\n  public pauseCurrBgMusic() {\n    if (this.getCurrentScene() && this.currBgMusic && this.currBgMusic.isPlaying) {\n      this.currBgMusic.pause();\n    }\n  }\n\n  /**\n   * Continue currently playing BGM music, if it is paused.\n   */\n  public continueCurrBgMusic() {\n    if (this.getCurrentScene() && this.currBgMusic && this.currBgMusic.isPaused) {\n      this.currBgMusic.play();\n    }\n  }\n\n  /**\n   * We do not use `this.game.sound` as it often\n   * results in crash, due to audio not being present into audio cache.\n   * i.e. calling `.add()` while the sound is not in cache.audio will\n   * result in crash.\n   *\n   * From observation, the audio cache used by `this.game.sound`\n   * and `this.scene.sound` can be different.\n   *\n   * From observation, `loadSound()` loads the audio into\n   * `this.scene.sound.game.cache.audio`; and not into\n   * `this.game.sound.game.cache.audio`.\n   *\n   * Hence, we use `this.getCurrentScene().sound.add` in order to refer\n   * to the correct audio cache.\n   *\n   * NOTE: To check the audio cache, compare between:\n   *  - this.game.sound.game.cache.audio\n   *  - this.scene.sound.game.cache.audio\n   */\n  public getBaseSoundManager = () =>\n    this.getCurrentScene().sound as Phaser.Sound.WebAudioSoundManager;\n  public getCurrentScene = () => mandatory(SourceAcademyGame.getInstance().getCurrentSceneRef());\n}\n\nexport default GameSoundManager;\n","import { GameChapter } from './GameChapterTypes';\n\nconst GameChapterMocks: GameChapter[] = [\n  {\n    title: 'Spaceship Emergency',\n    imageUrl: '/locations/planet-y-orbit/crashing.png',\n    filenames: ['../../assets/mockChapter0.txt', '../../assets/mockChapter0.1.txt']\n  },\n  {\n    title: 'Alien Attack',\n    imageUrl: '/locations/telebay/emergency.png',\n    filenames: ['../../assets/mockChapter1.txt']\n  },\n  {\n    title: 'Jedi Master',\n    imageUrl: '/locations/classroom/normal.png',\n    filenames: ['../../assets/mockChapter2.txt']\n  }\n];\nexport default GameChapterMocks;\n","import { AwardProperty } from '../awards/GameAwardsTypes';\nimport { ItemId } from '../commons/CommonTypes';\nimport { toS3Path } from '../utils/GameUtils';\nimport StringUtils from '../utils/StringUtils';\n\n/**\n * This class parses the awardsMapping.txt, and creates a\n * map of each item id to their corresponding award properties.\n */\nclass AwardParser {\n  public static awardsMapping: Map<ItemId, AwardProperty>;\n\n  /**\n   * This function parses the awards and produces the mapping of award id to award properties.\n   *\n   * @param assetText the entire txt file\n   * @returns {Map<ItemId, AwardProperty>} the mapping of the assets and details corresponding to each award id\n   *                                       the award id may either refer to collectible id or achievement id\n   */\n  public static parse(assetText: string): Map<ItemId, AwardProperty> {\n    AwardParser.awardsMapping = new Map<ItemId, AwardProperty>();\n\n    const assetLines = StringUtils.splitToLines(assetText);\n    const assetParagraphs = StringUtils.splitToParagraph(assetLines);\n\n    assetParagraphs.forEach(([, awardBody]: [string, string[]]) => {\n      AwardParser.parseAwardParagraphs(awardBody);\n    });\n    return this.awardsMapping;\n  }\n\n  /**\n   * This parses the each award paragraph and stores award properties into the award mapping\n   *\n   * @param awardType whether the type is collectible or achievement\n   * @param awardBody whether this is a\n   */\n  private static parseAwardParagraphs(awardBody: string[]) {\n    const awardParagraph = StringUtils.splitToParagraph(awardBody);\n    awardParagraph.forEach(([id, awardProperties]: [ItemId, string[]]) => {\n      const [assetKey, assetPath, title, description] = StringUtils.splitWithLimit(\n        awardProperties[0],\n        ',',\n        3\n      );\n      AwardParser.awardsMapping.set(id, {\n        id,\n        assetKey,\n        assetPath: toS3Path(assetPath, true),\n        title,\n        description,\n        completed: true\n      });\n    });\n  }\n}\n\nexport default AwardParser;\n","import { AssetPath, ItemId } from '../commons/CommonTypes';\nimport { toS3Path } from '../utils/GameUtils';\nimport StringUtils from '../utils/StringUtils';\n\n/**\n * This class parses the roomPreviewMapping.txt, and creates a\n * map of each assesment id to their corresponding background.\n */\nclass RoomPreviewParser {\n  public static backgroundMapping: Map<ItemId, AssetPath>;\n\n  /**\n   * This function parses the text and produces the mapping of assessment id to background key.\n   *\n   * @param assetText the entire txt file\n   * @returns {Map<ItemId, AssetPath>} the mapping of the assessment id to the background key\n   */\n  public static parse(assetText: string): Map<ItemId, AssetPath> {\n    RoomPreviewParser.backgroundMapping = new Map<ItemId, AssetPath>();\n\n    const assetLines = StringUtils.splitToLines(assetText);\n    const assetParagraphs = StringUtils.splitToParagraph(assetLines);\n\n    assetParagraphs.forEach(([assesmentId, assetPath]: [string, string[]]) => {\n      RoomPreviewParser.backgroundMapping.set(assesmentId, toS3Path(assetPath[0], true));\n    });\n    return RoomPreviewParser.backgroundMapping;\n  }\n}\n\nexport default RoomPreviewParser;\n","import FontAssets from '../../assets/FontAssets';\nimport ImageAssets from '../../assets/ImageAssets';\nimport SoundAssets from '../../assets/SoundAssets';\nimport TextAssets from '../../assets/TextAssets';\nimport { addLoadingScreen } from '../../effects/LoadingScreen';\nimport AwardParser from '../../parser/AwardParser';\nimport RoomPreviewParser from '../../parser/RoomPreviewParser';\nimport SourceAcademyGame from '../../SourceAcademyGame';\nimport { toS3Path } from '../../utils/GameUtils';\nimport { loadImage } from '../../utils/LoaderUtils';\n\n/**\n * User entry point into the game.\n *\n * This is where all the fetching happens\n */\nclass Entry extends Phaser.Scene {\n  constructor() {\n    super('Entry');\n  }\n\n  public async preload() {\n    SourceAcademyGame.getInstance().setCurrentSceneRef(this);\n    this.preloadAssets();\n    addLoadingScreen(this);\n\n    await SourceAcademyGame.getInstance().loadGameChapters();\n    await SourceAcademyGame.getInstance().loadRoomCode();\n    await SourceAcademyGame.getInstance().getSaveManager().loadLastSaveState();\n  }\n\n  public async create() {\n    await this.preloadAwards();\n    await SourceAcademyGame.getInstance().getUserStateManager().loadUserState();\n    await this.preloadRoomPreviewBackgrounds();\n\n    this.applyLoadedSettings();\n\n    this.scene.start('MainMenu');\n  }\n\n  /**\n   * Load save state and settings; then applying them.\n   */\n  private applyLoadedSettings() {\n    const userSettings = SourceAcademyGame.getInstance().getSaveManager().getSettings();\n    SourceAcademyGame.getInstance().getSoundManager().applyUserSettings(userSettings);\n  }\n\n  /**\n   * Fetch the awardsMapping text, set it as global variable,\n   * and load all the necessary assets.\n   */\n  private async preloadAwards() {\n    const awardsMappingTxt = this.cache.text.get(TextAssets.awardsMapping.key) || '';\n    const awardsMapping = AwardParser.parse(awardsMappingTxt);\n    SourceAcademyGame.getInstance().setAwardsMapping(awardsMapping);\n    await Promise.all(\n      Array.from(awardsMapping.values()).map(\n        async awardInfo => await loadImage(this, awardInfo.assetKey, awardInfo.assetPath)\n      )\n    );\n  }\n\n  /**\n   * Fetch the roomPreviewMapping text, set it as global variable,\n   * and load all the necessary assets.\n   */\n  private async preloadRoomPreviewBackgrounds() {\n    const roomPreviewMappingTxt = this.cache.text.get(TextAssets.roomPreviewMapping.key) || '';\n    const roomPreviewMapping = RoomPreviewParser.parse(roomPreviewMappingTxt);\n    SourceAcademyGame.getInstance().setRoomPreviewMapping(roomPreviewMapping);\n    await Promise.all(\n      Array.from(roomPreviewMapping.entries()).map(\n        async ([key, value]) => await loadImage(this, key, value)\n      )\n    );\n  }\n\n  /**\n   * Preload all image assets, font assets, and sound assets into the game.\n   */\n  private preloadAssets() {\n    SourceAcademyGame.getInstance().getSoundManager().loadSoundAssetMap(SoundAssets);\n    Object.values(ImageAssets).forEach(asset =>\n      this.load.image(asset.key, toS3Path(asset.path, false))\n    );\n    Object.values(FontAssets).forEach(asset =>\n      this.load.bitmapFont(asset.key, asset.pngPath, asset.fntPath)\n    );\n    Object.values(TextAssets).forEach(asset => this.load.text(asset.key, asset.path));\n  }\n}\n\nexport default Entry;\n","import { getAssessmentOverviews } from 'src/commons/sagas/RequestsSaga';\nimport { AchievementGoal } from 'src/features/achievement/AchievementTypes';\n\nimport { ItemId } from '../commons/CommonTypes';\nimport { promptWithChoices } from '../effects/Prompt';\nimport GameGlobalAPI from '../scenes/gameManager/GameGlobalAPI';\nimport SourceAcademyGame, { GameType } from '../SourceAcademyGame';\nimport StringUtils from '../utils/StringUtils';\nimport { UserStateType } from './GameStateTypes';\n\n/**\n * Manages all states related to user, but not related to the\n * particular story or chapter; e.g. collectibles, achievements, and assessments.\n */\nexport default class GameUserStateManager {\n  private collectibles: Set<string>;\n  private achievements: Set<string>;\n  private assessments: Set<string>;\n\n  constructor() {\n    this.collectibles = new Set([]);\n    this.achievements = new Set([]);\n    this.assessments = new Set([]);\n  }\n\n  public async loadUserState() {\n    if (SourceAcademyGame.getInstance().isGameType(GameType.Simulator)) return;\n    await this.loadAchievements();\n    await this.loadAssessments();\n    this.collectibles = new Set(\n      SourceAcademyGame.getInstance().getSaveManager().getLoadedUserState().collectibles\n    );\n  }\n\n  /**\n   * Adds the given id to the collectible list\n   *\n   * @param collectibleId - collectible you want to check if present\n   */\n  public addCollectible(collectibleId: ItemId) {\n    this.collectibles.add(collectibleId);\n  }\n\n  /**\n   * Fetches assessment overview of the student; based on\n   * the account information. Only include submitted assessments' ids.\n   *\n   * IMPT: The assessments are ordered from earliest close date.\n   */\n  public async loadAssessments() {\n    const assessments = await getAssessmentOverviews(\n      SourceAcademyGame.getInstance().getAccountInfo()\n    );\n    this.assessments = new Set(\n      (assessments || [])\n        .filter(assessment => assessment.status === 'submitted')\n        .sort((a, b) => (a.closeAt <= b.closeAt ? -1 : 1))\n        .map(assessment => assessment.id.toString())\n    );\n  }\n\n  /**\n   * This function checks for the existence of a certain\n   * item ID inside one of the user state lists\n   *\n   * @param userStateType which of the user states you want to check\n   * @param id the item ID of the state you want to check\n   * @returns {Promise<boolean>} true if item ID is found in the user state list\n   */\n  public async isInUserState(userStateType: UserStateType, id: ItemId): Promise<boolean> {\n    if (SourceAcademyGame.getInstance().isGameType(GameType.Game)) {\n      return this[userStateType].has(id);\n    } else {\n      const response = await promptWithChoices(\n        GameGlobalAPI.getInstance().getGameManager(),\n        `${StringUtils.capitalize(userStateType)} ${id}?`,\n        ['Yes', 'No']\n      );\n      return response === 0;\n    }\n  }\n\n  /**\n   * Fetches achievements of the student;\n   */\n  public async loadAchievements() {\n    const awardsMapping = SourceAcademyGame.getInstance().getAwardsMapping();\n    const achievements = SourceAcademyGame.getInstance().getAchievements();\n    const goals = SourceAcademyGame.getInstance().getGoals();\n\n    // Convert goals to map\n    const goalMapping = new Map<string, AchievementGoal>();\n    goals.forEach(goal => goalMapping.set(goal.uuid, goal));\n\n    achievements.forEach(achievement => {\n      const achievementUuid = achievement.uuid.toString();\n      const isCompleted = achievement.goalUuids.reduce(\n        (result, goalUuid) => result && !!goalMapping.get(goalUuid)?.completed,\n        true\n      );\n      const awardProp = awardsMapping.get(achievementUuid);\n\n      if (awardProp) {\n        // If there is mapping, we update the complete attribute\n        const newAwardProp = { ...awardProp, completed: isCompleted };\n        SourceAcademyGame.getInstance().addAwardMapping(newAwardProp.assetKey, newAwardProp);\n        this.achievements.add(newAwardProp.assetKey);\n      }\n    });\n  }\n\n  public getCollectibles = () => Array.from(this.collectibles);\n  public getAchievements = () => Array.from(this.achievements);\n  public getAssessments = () => Array.from(this.assessments);\n}\n","import * as Phaser from 'phaser';\nimport { AwardProperty } from 'src/features/game/awards/GameAwardsTypes';\nimport { Constants, screenSize } from 'src/features/game/commons/CommonConstants';\nimport { AssetPath, ItemId } from 'src/features/game/commons/CommonTypes';\nimport GameSaveManager from 'src/features/game/save/GameSaveManager';\nimport AwardsHall from 'src/features/game/scenes/awardsHall/AwardsHall';\nimport Bindings from 'src/features/game/scenes/bindings/Bindings';\nimport ChapterSelect from 'src/features/game/scenes/chapterSelect/ChapterSelect';\nimport CheckpointTransition from 'src/features/game/scenes/checkpointTransition/CheckpointTransition';\nimport GameManager from 'src/features/game/scenes/gameManager/GameManager';\nimport MainMenu from 'src/features/game/scenes/mainMenu/MainMenu';\nimport RoomPreview from 'src/features/game/scenes/roomPreview/RoomPreview';\nimport Settings from 'src/features/game/scenes/settings/Settings';\nimport GameSoundManager from 'src/features/game/sound/GameSoundManager';\nimport { mandatory } from 'src/features/game/utils/GameUtils';\nimport { StorySimState } from 'src/features/storySimulator/StorySimulatorTypes';\n\nimport { AchievementGoal, AchievementItem } from '../achievement/AchievementTypes';\nimport { fetchGameChapters } from './chapter/GameChapterHelpers';\nimport GameChapterMocks from './chapter/GameChapterMocks';\nimport { GameChapter } from './chapter/GameChapterTypes';\nimport Entry from './scenes/entry/Entry';\nimport { getRoomPreviewCode } from './scenes/roomPreview/RoomPreviewHelper';\nimport GameUserStateManager from './state/GameUserStateManager';\n\nexport type AccountInfo = {\n  accessToken: string;\n  refreshToken: string;\n  role: string;\n  name: string;\n};\n\nexport enum GameType {\n  Simulator = 'Simulator',\n  Game = 'Game'\n}\n\ntype GlobalGameProps = {\n  accountInfo: AccountInfo | undefined;\n  achievements: AchievementItem[] | undefined;\n  awardsMapping: Map<ItemId, AwardProperty>;\n  currentSceneRef?: Phaser.Scene;\n  gameChapters: GameChapter[];\n  gameType: GameType;\n  goals: AchievementGoal[] | undefined;\n  isUsingMock: boolean;\n  roomCode: string;\n  roomPreviewMapping: Map<ItemId, AssetPath>;\n  saveManager: GameSaveManager;\n  setStorySimState: (value: React.SetStateAction<string>) => void;\n  soundManager: GameSoundManager;\n  ssChapterSimFilenames: string[];\n  userStateManager: GameUserStateManager;\n};\n\nexport default class SourceAcademyGame extends Phaser.Game {\n  static instance: SourceAcademyGame;\n  protected global: GlobalGameProps;\n  public isMounted: boolean;\n\n  constructor(config: Phaser.Types.Core.GameConfig, gameType: GameType) {\n    super(config);\n    SourceAcademyGame.instance = this;\n    this.isMounted = true;\n    this.global = {\n      awardsMapping: new Map<ItemId, AwardProperty>(),\n      accountInfo: undefined,\n      achievements: undefined,\n      currentSceneRef: undefined,\n      gameChapters: [],\n      gameType: gameType,\n      goals: undefined,\n      isUsingMock: false,\n      roomCode: '',\n      roomPreviewMapping: new Map<ItemId, AssetPath>(),\n      saveManager: new GameSaveManager(),\n      setStorySimState: Constants.nullFunction,\n      soundManager: new GameSoundManager(),\n      ssChapterSimFilenames: [],\n      userStateManager: new GameUserStateManager()\n    };\n  }\n\n  static getInstance = () => mandatory(SourceAcademyGame.instance);\n\n  public stopAllSounds() {\n    this.sound.stopAll();\n  }\n\n  public setAccountInfo(acc: AccountInfo | undefined) {\n    this.global.accountInfo = acc;\n  }\n\n  public setAchievements(achievements: AchievementItem[]) {\n    this.global.achievements = achievements;\n  }\n\n  public setAwardsMapping(awardsMapping: Map<ItemId, AwardProperty>) {\n    this.global.awardsMapping = awardsMapping;\n  }\n\n  public addAwardMapping(awardId: ItemId, awardProp: AwardProperty) {\n    this.global.awardsMapping.set(awardId, awardProp);\n  }\n\n  public setGoals(goals: AchievementGoal[]) {\n    this.global.goals = goals;\n  }\n\n  public setStorySimStateSetter(setStorySimState: (value: React.SetStateAction<string>) => void) {\n    this.setStorySimState = setStorySimState;\n  }\n\n  public setRoomPreviewMapping(mapping: Map<ItemId, AssetPath>) {\n    this.global.roomPreviewMapping = mapping;\n  }\n\n  public async loadGameChapters() {\n    this.global.gameChapters = await fetchGameChapters();\n  }\n\n  public async loadRoomCode() {\n    this.global.roomCode = await getRoomPreviewCode();\n  }\n\n  public setStorySimState(state: StorySimState) {\n    this.global.setStorySimState(state);\n  }\n\n  public setCurrentSceneRef(scene: Phaser.Scene) {\n    this.global.currentSceneRef = scene;\n  }\n\n  public toggleUsingMock(value?: boolean) {\n    if (value === undefined) {\n      this.global.isUsingMock = !this.global.isUsingMock;\n    } else {\n      this.global.isUsingMock = value;\n    }\n  }\n\n  public setChapterSimStack(checkpointFilenames: string[]) {\n    this.global.ssChapterSimFilenames = checkpointFilenames.reverse();\n  }\n\n  public getAwardsMapping = () => mandatory(this.global.awardsMapping);\n  public getAccountInfo = () => mandatory(this.global.accountInfo);\n  public getAchievements = () => mandatory(this.global.achievements);\n  public getSoundManager = () => mandatory(this.global.soundManager);\n  public getGoals = () => mandatory(this.global.goals);\n  public getRoomPreviewMapping = () => mandatory(this.global.roomPreviewMapping);\n  public getUserStateManager = () => mandatory(this.global.userStateManager);\n  public getSaveManager = () => mandatory(this.global.saveManager);\n  public getCurrentSceneRef = () => mandatory(this.global.currentSceneRef);\n  public isGameType = (gameType: GameType) => this.global.gameType === gameType;\n  public getSSChapterSimFilenames = () => this.global.ssChapterSimFilenames;\n  public getIsUsingMock = () => this.global.isUsingMock;\n  public getRoomCode = () => this.global.roomCode;\n  public getGameChapters = () =>\n    this.global.isUsingMock ? GameChapterMocks : this.global.gameChapters;\n}\n\nconst config = {\n  debug: true,\n  type: Phaser.CANVAS,\n  width: screenSize.x,\n  height: screenSize.y,\n  physics: {\n    default: 'arcade'\n  },\n  scale: {\n    mode: Phaser.Scale.FIT,\n    parent: 'game-display'\n  },\n  fps: {\n    target: 24\n  },\n  scene: [\n    Entry,\n    MainMenu,\n    Settings,\n    ChapterSelect,\n    GameManager,\n    CheckpointTransition,\n    AwardsHall,\n    RoomPreview,\n    Bindings\n  ]\n};\n\nexport const createSourceAcademyGame = () => {\n  return new SourceAcademyGame(config, GameType.Game);\n};\n","import _ from 'lodash';\nimport { request } from 'src/commons/sagas/RequestsSaga';\n\nimport { store } from '../../../pages/createStore';\nimport { toTxtPath } from '../assets/TextAssets';\nimport SourceAcademyGame from '../SourceAcademyGame';\nimport { GameChapter } from './GameChapterTypes';\n\n/**\n * Fetches all chapters from the backend\n *\n * @returns {Promise<GameChapter[]>} - All the chapter objects in a list\n */\nexport async function fetchGameChapters(): Promise<GameChapter[]> {\n  const courseId = store.getState().session.courseId;\n  const response = await request(`courses/${courseId}/stories`, 'GET', {\n    accessToken: SourceAcademyGame.getInstance().getAccountInfo().accessToken,\n    refreshToken: SourceAcademyGame.getInstance().getAccountInfo().refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  if (!response) return [];\n  const chapterDetails = response.status === 200 ? await response.json() : [];\n  const sortedChapters = _.sortBy(chapterDetails, chapterDetail => new Date(chapterDetail.openAt));\n  sortedChapters.forEach(chapter => (chapter.filenames = chapter.filenames.map(toTxtPath)));\n  return sortedChapters;\n}\n","import * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from 'src/commons/utils/Hooks';\nimport { getAchievements, getOwnGoals } from 'src/features/achievement/AchievementActions';\nimport { saveData } from 'src/features/game/save/GameSaveRequests';\nimport { FullSaveState } from 'src/features/game/save/GameSaveTypes';\nimport SourceAcademyGame, {\n  AccountInfo,\n  createSourceAcademyGame\n} from 'src/features/game/SourceAcademyGame';\n\nfunction Game() {\n  const session = useTypedSelector(state => state.session);\n  const dispatch = useDispatch();\n\n  const achievements = useTypedSelector(state => state.achievement.achievements);\n  const goals = useTypedSelector(state => state.achievement.goals);\n\n  const [isTestStudent, setIsTestStudent] = React.useState(false);\n  const [isUsingMock, setIsUsingMock] = React.useState(false);\n\n  React.useEffect(() => {\n    dispatch(getAchievements());\n    dispatch(getOwnGoals());\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    const game = createSourceAcademyGame();\n    return () => {\n      game.isMounted = false;\n      game.stopAllSounds();\n      game.destroy(true);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    SourceAcademyGame.getInstance().setAccountInfo({\n      accessToken: session.accessToken,\n      refreshToken: session.refreshToken,\n      role: session.role,\n      name: session.name\n    } as AccountInfo);\n    SourceAcademyGame.getInstance().setAchievements(achievements);\n    SourceAcademyGame.getInstance().setGoals(goals);\n\n    if (process.env.NODE_ENV === 'development') {\n      setIsTestStudent(true);\n      setIsUsingMock(true);\n      SourceAcademyGame.getInstance().toggleUsingMock(true);\n    }\n  }, [session, achievements, goals]);\n\n  return (\n    <>\n      <div id=\"game-display\"></div>\n      {isTestStudent && (\n        <div className=\"Horizontal\">\n          <button\n            onClick={async () => {\n              await saveData({} as FullSaveState);\n              alert('Game cleared! Please refresh');\n            }}\n          >\n            Clear data\n          </button>\n          <button\n            onClick={() => {\n              setIsUsingMock(!isUsingMock);\n              SourceAcademyGame.getInstance().toggleUsingMock();\n            }}\n          >\n            {isUsingMock ? 'Use Game Chapters' : 'Use Mock Chapters'}\n          </button>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Game;\n","import { AnchorButton } from '@blueprintjs/core';\nimport React from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\n\nimport { PropsType } from './utils/TypeHelper';\n\n// Adapted from https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/modules/Link.js\n\nfunction makeAnchorButton(anchorButtonProps: PropsType<AnchorButton>) {\n  return (props: { href: string; navigate: () => void }) => (\n    <AnchorButton\n      onClick={(event: React.MouseEvent<HTMLElement>) => {\n        try {\n          if (anchorButtonProps.onClick) {\n            anchorButtonProps.onClick(event);\n          }\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented &&\n          event.button === 0 &&\n          (!anchorButtonProps.target || anchorButtonProps.target === '_self') &&\n          !event.metaKey &&\n          !event.altKey &&\n          !event.ctrlKey &&\n          !event.shiftKey\n        ) {\n          event.preventDefault();\n          props.navigate();\n        }\n      }}\n      href={props.href}\n      {...anchorButtonProps}\n    />\n  );\n}\n\n/**\n * A combination of Blueprint's AnchorButton and React Router's Link.\n *\n * This element results in a single <a> that is styled as a Blueprint button.\n *\n * Note: do not use <Link><AnchorButton /></Link>, as that creates `<a><a ... ></a></a>`\n * which is illegal HTML. (The same applies for NavLink.)\n *\n * Also do not use `<Link><Button /></Link>`, as that creates `<a><button ...></button></a>`,\n * which is not ideal.\n */\nexport default function AnchorButtonLink({\n  to,\n  replace,\n  ...anchorButtonProps\n}: PropsType<AnchorButton> & { to: LinkProps['to']; replace?: boolean }) {\n  return <Link to={to} replace={replace} component={makeAnchorButton(anchorButtonProps)} />;\n}\n","import { Button } from '@blueprintjs/core';\nimport * as React from 'react';\nimport AnchorButtonLink from 'src/commons/AnchorButtonLink';\n\nimport { Role } from '../../../../commons/application/ApplicationTypes';\nimport { showSimpleConfirmDialog } from '../../../../commons/utils/DialogHelper';\nimport { GradingOverview } from '../../../../features/grading/GradingTypes';\n\nexport type GradingActionsCellProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleUnsubmitSubmission: (submissionId: number) => void;\n  handleReautogradeSubmission: (submissionId: number) => void;\n};\n\ntype StateProps = {\n  data: GradingOverview;\n  courseId?: number;\n  courseRegId?: number;\n  role?: Role;\n};\n\nconst GradingActionsCell: React.FC<GradingActionsCellProps> = props => {\n  const handleConfirmUnsubmit = async () => {\n    const confirm = await showSimpleConfirmDialog({\n      contents: 'Are you sure you want to unsubmit?',\n      positiveIntent: 'danger',\n      positiveLabel: 'Unsubmit'\n    });\n    if (confirm) {\n      props.handleUnsubmitSubmission(props.data.submissionId);\n    }\n  };\n\n  const handleConfirmReautograde = async () => {\n    const confirm = await showSimpleConfirmDialog({\n      contents: (\n        <>\n          <p>Reautograde this submission?</p>\n          <p>Note: all manual adjustments will be reset to 0.</p>\n        </>\n      ),\n      positiveIntent: 'danger',\n      positiveLabel: 'Reautograde'\n    });\n    if (confirm) {\n      props.handleReautogradeSubmission(props.data.submissionId);\n    }\n  };\n\n  const isOwnSubmission = props.courseRegId && props.courseRegId === props.data.studentId;\n  const canReautograde = isOwnSubmission || props.data.submissionStatus === 'submitted';\n  const canUnsubmit =\n    props.data.submissionStatus === 'submitted' &&\n    props.courseRegId &&\n    (props.courseRegId === props.data.groupLeaderId ||\n      isOwnSubmission ||\n      props.role === Role.Admin);\n\n  return (\n    <>\n      <AnchorButtonLink\n        to={`/courses/${props.courseId}/grading/${props.data.submissionId}`}\n        icon=\"annotation\"\n        minimal\n        title=\"Grade\"\n      />\n      <Button\n        icon=\"refresh\"\n        minimal\n        onClick={handleConfirmReautograde}\n        disabled={!canReautograde}\n        title=\"Reautograde\"\n      />\n      <Button\n        icon=\"arrow-left\"\n        minimal\n        onClick={handleConfirmUnsubmit}\n        disabled={!canUnsubmit}\n        title=\"Unsubmit\"\n      />\n    </>\n  );\n};\n\nexport default GradingActionsCell;\n","import { Icon, IconName, Intent, Position } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport React from 'react';\n\nimport { GradingStatuses } from '../../../../commons/assessment/AssessmentTypes';\nimport { GradingCellProps } from '../../../../features/grading/GradingTypes';\n\n/**\n * Used to render the submission grading status details in the table that displays GradingOverviews.\n * This is a fully fledged component (not SFC) by specification in\n * ag-grid.\n *\n * See {@link https://www.ag-grid.com/example-react-dynamic}\n */\nconst GradingStatusCell: React.FC<GradingCellProps> = props => {\n  const gradingStatus = props.data.gradingStatus;\n  let iconName: IconName;\n  let tooltip: string;\n  let intent: Intent;\n\n  switch (gradingStatus) {\n    case GradingStatuses.graded:\n      iconName = IconNames.TICK;\n      tooltip = `Fully graded: ${props.data.gradedCount} of\n          ${props.data.questionCount}`;\n      intent = Intent.SUCCESS;\n      break;\n    case GradingStatuses.grading:\n      iconName = IconNames.TIME;\n      tooltip = `Partially graded: ${props.data.gradedCount} of\n          ${props.data.questionCount}`;\n      intent = Intent.WARNING;\n      break;\n    case GradingStatuses.none:\n      iconName = IconNames.CROSS;\n      tooltip = `Not graded: ${props.data.gradedCount} of\n          ${props.data.questionCount}`;\n      intent = Intent.DANGER;\n      break;\n    default:\n      iconName = IconNames.DISABLE;\n      tooltip = 'Not applicable';\n      intent = Intent.PRIMARY;\n  }\n\n  return (\n    <div>\n      <Tooltip2 content={tooltip} placement={Position.LEFT} hoverOpenDelay={10} lazy={true}>\n        <Icon icon={iconName} intent={intent} />\n      </Tooltip2>\n    </div>\n  );\n};\n\nexport default GradingStatusCell;\n","import {\n  Button,\n  Divider,\n  H3,\n  Icon,\n  IconName,\n  Intent,\n  NumericInput,\n  Position,\n  Pre\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport React, { useEffect, useState } from 'react';\nimport ReactMde, { ReactMdeProps } from 'react-mde';\nimport { Prompt } from 'react-router';\n\nimport ControlButton from '../../../../commons/ControlButton';\nimport Markdown from '../../../../commons/Markdown';\nimport { getPrettyDate } from '../../../../commons/utils/DateHelper';\nimport { showSimpleConfirmDialog } from '../../../../commons/utils/DialogHelper';\nimport {\n  showSuccessMessage,\n  showWarningMessage\n} from '../../../../commons/utils/NotificationsHelper';\nimport { stringParamToInt } from '../../../../commons/utils/ParamParseHelper';\n\ntype GradingEditorProps = DispatchProps & OwnProps;\n\ntype GradingSaveFunction = (\n  submissionId: number,\n  questionId: number,\n  xpAdjustment: number | undefined,\n  comments?: string\n) => void;\n\nexport type DispatchProps = {\n  handleGradingSave: GradingSaveFunction;\n  handleGradingSaveAndContinue: GradingSaveFunction;\n  handleReautogradeAnswer: (submissionId: number, questionId: number) => void;\n};\n\ntype OwnProps = {\n  solution: number | string | null;\n  questionId: number;\n  submissionId: number;\n  initialXp: number;\n  xpAdjustment: number;\n  maxXp: number;\n  studentName: string;\n  comments: string;\n  graderName?: string;\n  gradedAt?: string;\n};\n\nconst gradingEditorButtonClass = 'grading-editor-button';\n\nconst GradingEditor: React.FC<GradingEditorProps> = props => {\n  /**\n   * A potentially null string which defines the\n   * result for the number XP input. This property being null\n   * will show the hint text in the NumericInput. This property is a string\n   * so as to allow input such as the '-' character.\n   */\n  const [xpAdjustmentInput, setXpAdjustmentInput] = useState<string | null>(\n    props.xpAdjustment.toString()\n  );\n  /**\n   * The text in the react-mde editor, that will be saved\n   * to a comment displayed below the numerical XP */\n  const [editorValue, setEditorValue] = useState(props.comments);\n  /**\n   * The selected tab for the react-mde editor (either 'write' or 'preview')\n   */\n  const [selectedTab, setSelectedTab] = useState<ReactMdeProps['selectedTab']>('write');\n  /**\n   * Determines whether the 'You have unsaved changes'\n   * prompt should appear on page navigation, to prevent the\n   * 'Save and Continue' button from activating the prompt\n   * in cases where navigation occurs before Redux has\n   * updated the props of the Editor component\n   *\n   * This may pose a problem if the user clicks 'Save and Continue'\n   * and the saving process fails. The prompt would no longer\n   * appear although there exist unsaved changes\n   */\n  const [currentlySaving, setCurrentlySaving] = useState(false);\n\n  useEffect(() => {\n    makeInitialState();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.submissionId, props.questionId]);\n\n  const makeInitialState = () => {\n    setXpAdjustmentInput(props.xpAdjustment.toString());\n    setEditorValue(props.comments);\n    setSelectedTab('write');\n    setCurrentlySaving(false);\n  };\n\n  /**\n   * A custom icons provider. It uses a bulky mapping function\n   * defined below.\n   *\n   * See {@link https://github.com/andrerpena/react-mde}\n   */\n  function blueprintIconProvider(name: string) {\n    const blueprintIcon = mdeToBlueprintIconMapping(name);\n    return <Icon icon={blueprintIcon.iconName} htmlTitle={blueprintIcon.title} />;\n  }\n\n  /**\n   * Makes sure that the XP values are permissible before\n   * returning the relevant saving function (for the 'Save Draft'\n   * and 'Submit and Continue' buttons)\n   */\n  const validateXpBeforeSave =\n    (handleSaving: GradingSaveFunction): (() => void) =>\n    () => {\n      const newXpAdjustmentInput = stringParamToInt(xpAdjustmentInput || undefined) || undefined;\n      const xp = props.initialXp + (newXpAdjustmentInput || 0);\n      if (xp < 0 || xp > props.maxXp) {\n        showWarningMessage(\n          `XP ${xp.toString()} is out of bounds. Maximum xp is ${props.maxXp.toString()}.`\n        );\n        return;\n      } else {\n        handleSaving(props.submissionId, props.questionId, newXpAdjustmentInput, editorValue);\n      }\n    };\n\n  /**\n   * Sets the state currentlySaving to true to disable\n   * the 'You have unsaved changes' prompt\n   */\n  const onClickSaveAndContinue: GradingSaveFunction = (\n    submissionId: number,\n    questionId: number,\n    xpAdjustment: number | undefined,\n    comments?: string\n  ) => {\n    const callback = (): void => {\n      props.handleGradingSaveAndContinue(submissionId, questionId, xpAdjustment, comments!);\n    };\n    setCurrentlySaving(true);\n    // TODO: Check (not sure how) if this results in a regression.\n    callback();\n  };\n\n  const onClickReautogradeAnswer = async () => {\n    const confirm = await showSimpleConfirmDialog({\n      contents: (\n        <>\n          <p>Reautograde this answer?</p>\n          <p>Note: manual adjustments will be reset to 0.</p>\n        </>\n      ),\n      positiveLabel: 'Reautograde',\n      positiveIntent: 'danger'\n    });\n    if (confirm) {\n      props.handleReautogradeAnswer(props.submissionId, props.questionId);\n    }\n  };\n\n  /**\n   * Send a warning prompt that loading from a local draft\n   * will overwrite any unsaved changes\n   */\n  const discardChanges = (): void => {\n    if (!checkHasUnsavedChanges() || window.confirm('This will reset the editor. Are you sure?')) {\n      setXpAdjustmentInput(props.xpAdjustment!.toString());\n      setEditorValue(props.comments);\n      // TODO: Check (not sure how) if this results in a regression.\n      showSuccessMessage('Discarded!', 1000);\n    }\n  };\n\n  /**\n   * Handles changes in the XP NumericInput, and updates the local State.\n   *\n   * @param valueAsNumber an unused parameter, as we use strings for the input. @see State\n   * @param valueAsString a string that contains the input. To be parsed by another function.\n   */\n  const onXpAdjustmentInputChange = (valueAsNumber: number, valueAsString: string | null) => {\n    setXpAdjustmentInput(valueAsString);\n  };\n\n  const checkHasUnsavedChanges = () => {\n    const newXpAdjustmentInput = stringParamToInt(xpAdjustmentInput || undefined);\n    return props.xpAdjustment !== newXpAdjustmentInput || props.comments !== editorValue;\n  };\n\n  const generateMarkdownPreview = (markdown: string) =>\n    Promise.resolve(\n      <Markdown\n        content={markdown}\n        simplifiedAutoLink\n        strikethrough\n        tasklists\n        openLinksInNewWindow\n      />\n    );\n\n  // Render\n  const hasUnsavedChanges = checkHasUnsavedChanges();\n  const saveButtonOpts = {\n    intent: hasUnsavedChanges ? Intent.WARNING : Intent.NONE,\n    minimal: !hasUnsavedChanges,\n    className: gradingEditorButtonClass\n  };\n  const discardButtonOpts = {\n    intent: hasUnsavedChanges ? Intent.DANGER : Intent.NONE,\n    minimal: !hasUnsavedChanges,\n    className: gradingEditorButtonClass\n  };\n  const saveAndContinueButtonOpts = {\n    intent: hasUnsavedChanges ? Intent.SUCCESS : Intent.NONE,\n    minimal: !hasUnsavedChanges,\n    className: gradingEditorButtonClass\n  };\n  const onTabChange = (tab: ReactMdeProps['selectedTab']) => setSelectedTab(tab);\n\n  // Derived values\n  const totalXp = props.initialXp + (stringParamToInt(xpAdjustmentInput || undefined) || 0);\n  const xpPlaceholder = `${props.initialXp > 0 ? '-' : ''}${props.initialXp} to ${\n    props.maxXp - props.initialXp\n  }`;\n\n  return (\n    <div className=\"GradingEditor\">\n      {!currentlySaving && hasUnsavedChanges ? (\n        <Prompt message={'You have unsaved changes. Are you sure you want to leave?'} />\n      ) : null}\n\n      <div className=\"grading-editor-header\">\n        <H3>Currently Grading: {props.studentName}</H3>\n      </div>\n      {props.solution !== null ? (\n        <div className=\"grading-editor-marking-scheme\">\n          <Pre>{props.solution.toString()} </Pre>\n        </div>\n      ) : null}\n\n      <div className=\"grading-editor-container\">\n        <div className=\"grading-editor-xp\">\n          <div className=\"autograder-xp\">\n            <div>Autograder XP:</div>\n            <div>\n              {`${props.initialXp} / ${props.maxXp}`}{' '}\n              <Button icon=\"refresh\" small minimal onClick={onClickReautogradeAnswer}></Button>\n            </div>\n          </div>\n          <div className=\"xp-adjustment\">\n            <div>XP adjustment:</div>\n            <div>\n              <NumericInput\n                className=\"adjustment-input\"\n                onValueChange={onXpAdjustmentInputChange}\n                value={xpAdjustmentInput || ''}\n                buttonPosition={Position.RIGHT}\n                fill={true}\n                placeholder={xpPlaceholder}\n                intent={totalXp < 0 || totalXp > props.maxXp ? Intent.DANGER : Intent.NONE}\n                min={0 - props.initialXp}\n                max={props.maxXp > props.initialXp ? props.maxXp - props.initialXp : undefined}\n                stepSize={50}\n                minorStepSize={25}\n                majorStepSize={100}\n              />\n            </div>\n          </div>\n          <div className=\"final-xp\">\n            <div>Final XP:</div>\n            <div>{`${totalXp} / ${props.maxXp}`}</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"react-mde-parent\">\n        <ReactMde\n          value={editorValue}\n          onChange={setEditorValue}\n          selectedTab={selectedTab}\n          onTabChange={onTabChange}\n          generateMarkdownPreview={generateMarkdownPreview}\n          minEditorHeight={200}\n          maxEditorHeight={1000}\n          minPreviewHeight={240}\n          getIcon={blueprintIconProvider}\n        />\n      </div>\n\n      {selectedTab === 'write' && (\n        <div className=\"grading-editor-draft-buttons\">\n          <div className=\"grading-editor-save-button\">\n            <ControlButton\n              label=\"Save Changes\"\n              icon={IconNames.FLOPPY_DISK}\n              onClick={validateXpBeforeSave(props.handleGradingSave)}\n              options={saveButtonOpts}\n            />\n          </div>\n          <div className=\"grading-editor-discard-button\">\n            <ControlButton\n              label=\"Discard Changes\"\n              icon={IconNames.TRASH}\n              onClick={discardChanges}\n              options={discardButtonOpts}\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"grading-editor-save-continue-button\">\n        <ControlButton\n          label=\"Save and Continue\"\n          icon={IconNames.UPDATED}\n          onClick={validateXpBeforeSave(onClickSaveAndContinue)}\n          options={saveAndContinueButtonOpts}\n        />\n      </div>\n      {props.graderName && props.gradedAt && (\n        <>\n          <Divider />\n          <div className=\"grading-editor-last-graded-details\">\n            Last edited by <b>{props.graderName}</b> on {getPrettyDate(props.gradedAt)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst mdeToBlueprintIconMap: Readonly<Record<string, readonly [IconName, string?]>> = {\n  header: [IconNames.HEADER, 'Header Styles'],\n  bold: [IconNames.BOLD, 'Bold'],\n  italic: [IconNames.ITALIC, 'Italic'],\n  strikethrough: [IconNames.STRIKETHROUGH, 'Strikethrough'],\n  link: [IconNames.LINK, 'Link'],\n  quote: [IconNames.CITATION, 'Quote'],\n  code: [IconNames.CODE, 'Monospaced'],\n  image: [IconNames.MEDIA, 'Image'],\n  'unordered-list': [IconNames.UNGROUP_OBJECTS, 'Bullets'],\n  'ordered-list': [IconNames.NUMBERED_LIST, 'Numbering'],\n  'checked-list': [IconNames.SQUARE, 'Checkboxes']\n} as const;\n\n/**\n * Maps react-mde icon names to blueprintjs counterparts\n * to reduce the number of dependencies on icons and\n * keep a more consistent look\n *\n * Also, generate a HTML title for the icon to be shown on mouse hover\n *\n * By default, react-mde would use FontAwesome5 icons if this\n * icon mapping is not provided\n */\nconst mdeToBlueprintIconMapping = (name: string): { iconName: IconName; title?: string } => {\n  switch (name) {\n    case 'header':\n    case 'bold':\n    case 'italic':\n    case 'strikethrough':\n    case 'link':\n    case 'quote':\n    case 'code':\n    case 'image':\n    case 'unordered-list':\n    case 'ordered-list':\n    case 'checked-list':\n      const [iconName, title] = mdeToBlueprintIconMap[name];\n      return { iconName, title };\n    default:\n      // For unknown icons, a question mark icon is returned\n      return {\n        iconName: IconNames.HELP\n      };\n  }\n};\n\nexport default GradingEditor;\n","import { connect, MapDispatchToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  reautogradeAnswer,\n  submitGrading,\n  submitGradingAndContinue\n} from '../../../../commons/application/actions/SessionActions';\nimport GradingEditor, { DispatchProps } from './GradingEditor';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleGradingSave: submitGrading,\n      handleGradingSaveAndContinue: submitGradingAndContinue,\n      handleReautogradeAnswer: reautogradeAnswer\n    },\n    dispatch\n  );\n\nconst GradingEditorContainer = connect(null, mapDispatchToProps)(GradingEditor);\n\nexport default GradingEditorContainer;\n","import { Classes, NonIdealState, Spinner, SpinnerSize } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport SideContentToneMatrix from 'src/commons/sideContent/SideContentToneMatrix';\n\nimport {\n  defaultWorkspaceManager,\n  InterpreterOutput\n} from '../../../../commons/application/ApplicationTypes';\nimport {\n  AutogradingResult,\n  IMCQQuestion,\n  Library,\n  Question,\n  QuestionTypes,\n  Testcase\n} from '../../../../commons/assessment/AssessmentTypes';\nimport { ControlBarProps } from '../../../../commons/controlBar/ControlBar';\nimport { ControlBarClearButton } from '../../../../commons/controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../../../../commons/controlBar/ControlBarEvalButton';\nimport { ControlBarNextButton } from '../../../../commons/controlBar/ControlBarNextButton';\nimport { ControlBarPreviousButton } from '../../../../commons/controlBar/ControlBarPreviousButton';\nimport { ControlBarQuestionViewButton } from '../../../../commons/controlBar/ControlBarQuestionViewButton';\nimport { ControlBarRunButton } from '../../../../commons/controlBar/ControlBarRunButton';\nimport { convertEditorTabStateToProps } from '../../../../commons/editor/EditorContainer';\nimport { Position } from '../../../../commons/editor/EditorTypes';\nimport Markdown from '../../../../commons/Markdown';\nimport { SideContentProps } from '../../../../commons/sideContent/SideContent';\nimport SideContentAutograder from '../../../../commons/sideContent/SideContentAutograder';\nimport { SideContentTab, SideContentType } from '../../../../commons/sideContent/SideContentTypes';\nimport { history } from '../../../../commons/utils/HistoryHelper';\nimport Workspace, { WorkspaceProps } from '../../../../commons/workspace/Workspace';\nimport { EditorTabState, WorkspaceState } from '../../../../commons/workspace/WorkspaceTypes';\nimport { AnsweredQuestion, Grading } from '../../../../features/grading/GradingTypes';\nimport GradingEditor from './GradingEditorContainer';\n\ntype GradingWorkspaceProps = DispatchProps & OwnProps & StateProps;\n\nexport type DispatchProps = {\n  handleBrowseHistoryDown: () => void;\n  handleBrowseHistoryUp: () => void;\n  handleClearContext: (library: Library, shouldInitLibrary: boolean) => void;\n  handleDeclarationNavigate: (cursorPosition: Position) => void;\n  handleEditorEval: () => void;\n  handleEditorValueChange: (val: string) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleGradingFetch: (submissionId: number) => void;\n  handleInterruptEval: () => void;\n  handleReplEval: () => void;\n  handleReplOutputClear: () => void;\n  handleReplValueChange: (newValue: string) => void;\n  handleSendReplInputToOutput: (code: string) => void;\n  handleResetWorkspace: (options: Partial<WorkspaceState>) => void;\n  handleChangeExecTime: (execTimeMs: number) => void;\n  handleSideContentHeightChange: (heightChange: number) => void;\n  handleTestcaseEval: (testcaseId: number) => void;\n  handleRunAllTestcases: () => void;\n  handleDebuggerPause: () => void;\n  handleDebuggerResume: () => void;\n  handleDebuggerReset: () => void;\n  handleUpdateCurrentSubmissionId: (submissionId: number, questionId: number) => void;\n  handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) => void;\n  handlePromptAutocomplete: (row: number, col: number, callback: any) => void;\n};\n\nexport type OwnProps = {\n  submissionId: number;\n  questionId: number;\n};\n\nexport type StateProps = {\n  autogradingResults: AutogradingResult[];\n  grading?: Grading;\n  activeEditorTabIndex: number | null;\n  editorTabs: EditorTabState[];\n  editorTestcases: Testcase[];\n  hasUnsavedChanges: boolean;\n  isRunning: boolean;\n  isDebugging: boolean;\n  enableDebugging: boolean;\n  output: InterpreterOutput[];\n  replValue: string;\n  sideContentHeight?: number;\n  storedSubmissionId?: number;\n  storedQuestionId?: number;\n  courseId?: number;\n};\n\ntype State = {\n  selectedTab: SideContentType;\n};\n\nclass GradingWorkspace extends React.Component<GradingWorkspaceProps, State> {\n  public constructor(props: GradingWorkspaceProps) {\n    super(props);\n\n    this.state = {\n      selectedTab: SideContentType.grading\n    };\n\n    this.handleEval = this.handleEval.bind(this);\n  }\n\n  /**\n   * After mounting (either an older copy of the grading\n   * or a loading screen), try to fetch a newer grading.\n   */\n  public componentDidMount() {\n    this.props.handleGradingFetch(this.props.submissionId);\n\n    if (!this.props.grading) {\n      return;\n    }\n\n    let questionId = this.props.questionId;\n    if (this.props.questionId >= this.props.grading.length) {\n      questionId = this.props.grading.length - 1;\n    }\n\n    const question: AnsweredQuestion = this.props.grading[questionId].question;\n    let answer: string = '';\n\n    if (question.type === QuestionTypes.programming) {\n      if (question.answer) {\n        answer = question.answer as string;\n      } else {\n        answer = question.solutionTemplate || '';\n      }\n    }\n\n    this.props.handleEditorValueChange(answer);\n  }\n\n  /**\n   * Once there is an update (due to the grading being fetched), check\n   * if a workspace reset is needed.\n   */\n  public componentDidUpdate() {\n    /* Don't reset workspace if grading not fetched yet. */\n    if (this.props.grading === undefined) {\n      return;\n    }\n    const questionId = this.props.questionId;\n\n    /**\n     * Check if questionId is out of bounds, if it is, redirect to the\n     * grading overview page\n     *\n     * This occurs if the grading is submitted on the last question,\n     * as the function to move to the next question does not check\n     * if that question exists\n     */\n    if (this.props.grading[questionId] === undefined) {\n      history.push(`/courses/${this.props.courseId}/grading`);\n    } else {\n      this.checkWorkspaceReset(this.props);\n    }\n  }\n\n  public render() {\n    if (this.props.grading === undefined) {\n      return (\n        <NonIdealState\n          className={classNames('WorkspaceParent', Classes.DARK)}\n          description=\"Getting assessment ready...\"\n          icon={<Spinner size={SpinnerSize.LARGE} />}\n        />\n      );\n    }\n\n    /* If questionId is out of bounds, set it to the max. */\n    const questionId =\n      this.props.questionId >= this.props.grading.length\n        ? this.props.grading.length - 1\n        : this.props.questionId;\n    /* Get the question to be graded */\n    const question = this.props.grading[questionId].question as Question;\n    const workspaceProps: WorkspaceProps = {\n      controlBarProps: this.controlBarProps(questionId),\n      editorContainerProps:\n        question.type === QuestionTypes.programming || question.type === QuestionTypes.voting\n          ? {\n              editorVariant: 'normal',\n              editorTabs: this.props.editorTabs.map(convertEditorTabStateToProps),\n              editorSessionId: '',\n              handleDeclarationNavigate: this.props.handleDeclarationNavigate,\n              handleEditorEval: this.handleEval,\n              handleEditorValueChange: this.props.handleEditorValueChange,\n              handleEditorUpdateBreakpoints: this.props.handleEditorUpdateBreakpoints,\n              handlePromptAutocomplete: this.props.handlePromptAutocomplete,\n              isEditorAutorun: false,\n              sourceChapter: Chapter.CLANG,\n              sourceVariant: question?.library?.variant ?? Variant.DEFAULT,\n              externalLibraryName: question?.library?.external?.name || 'NONE'\n            }\n          : undefined,\n      handleSideContentHeightChange: this.props.handleSideContentHeightChange,\n      mcqProps: {\n        mcq: question as IMCQQuestion,\n        handleMCQSubmit: (i: number) => {}\n      },\n      sideBarProps: {\n        tabs: []\n      },\n      sideContentHeight: this.props.sideContentHeight,\n      sideContentProps: this.sideContentProps(this.props, questionId),\n      replProps: {\n        handleBrowseHistoryDown: this.props.handleBrowseHistoryDown,\n        handleBrowseHistoryUp: this.props.handleBrowseHistoryUp,\n        handleReplEval: this.props.handleReplEval,\n        handleReplValueChange: this.props.handleReplValueChange,\n        output: this.props.output,\n        replValue: this.props.replValue,\n        sourceChapter: Chapter.CLANG,\n        sourceVariant: question?.library?.variant ?? Variant.DEFAULT,\n        externalLibrary: question?.library?.external?.name || 'NONE',\n        replButtons: this.replButtons()\n      }\n    };\n    return (\n      <div className={classNames('WorkspaceParent', Classes.DARK)}>\n        <Workspace {...workspaceProps} />\n      </div>\n    );\n  }\n\n  /**\n   * Checks if there is a need to reset the workspace, then executes\n   * a dispatch (in the props) if needed.\n   *\n   * Assumes that 'props.grading' is defined\n   */\n  private checkWorkspaceReset(props: GradingWorkspaceProps) {\n    /* Reset grading if it has changed.*/\n    const submissionId = props.submissionId;\n    const questionId = props.questionId;\n\n    if (props.storedSubmissionId === submissionId && props.storedQuestionId === questionId) {\n      return;\n    }\n    const question = props.grading![questionId].question as Question;\n\n    let autogradingResults: AutogradingResult[] = [];\n    let editorValue: string = '';\n    let editorPrepend: string = '';\n    let editorPostpend: string = '';\n    let editorTestcases: Testcase[] = [];\n\n    if (question.type === QuestionTypes.programming) {\n      const questionData = question as AnsweredQuestion;\n      autogradingResults = questionData.autogradingResults;\n      editorPrepend = questionData.prepend;\n      editorPostpend = questionData.postpend;\n      editorTestcases = questionData.testcases;\n\n      editorValue = questionData.answer as string;\n      if (!editorValue) {\n        editorValue = questionData.solutionTemplate!;\n      }\n    }\n\n    props.handleEditorUpdateBreakpoints([]);\n    props.handleUpdateCurrentSubmissionId(submissionId, questionId);\n    props.handleResetWorkspace({\n      autogradingResults,\n      // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n      editorTabs: [\n        {\n          value: editorValue,\n          prependValue: editorPrepend,\n          postpendValue: editorPostpend,\n          highlightedLines: [],\n          breakpoints: []\n        }\n      ],\n      editorTestcases\n    });\n    props.handleChangeExecTime(\n      question.library.execTimeMs ?? defaultWorkspaceManager.grading.execTime\n    );\n    props.handleClearContext(question.library, true);\n    props.handleUpdateHasUnsavedChanges(false);\n    if (editorValue) {\n      props.handleEditorValueChange(editorValue);\n    }\n  }\n\n  /** Pre-condition: Grading has been loaded */\n  private sideContentProps: (p: GradingWorkspaceProps, q: number) => SideContentProps = (\n    props: GradingWorkspaceProps,\n    questionId: number\n  ) => {\n    const tabs: SideContentTab[] = [\n      {\n        label: `Grading: Question ${questionId + 1}`,\n        iconName: IconNames.TICK,\n        /* Render an editor with the xp given to the current question. */\n        body: (\n          <GradingEditor\n            solution={props.grading![questionId].question.solution}\n            questionId={props.grading![questionId].question.id}\n            submissionId={props.submissionId}\n            initialXp={props.grading![questionId].grade.xp}\n            xpAdjustment={props.grading![questionId].grade.xpAdjustment}\n            maxXp={props.grading![questionId].question.maxXp}\n            studentName={props.grading![questionId].student.name}\n            comments={props.grading![questionId].grade.comments ?? ''}\n            graderName={\n              props.grading![questionId].grade.grader\n                ? props.grading![questionId].grade.grader!.name\n                : undefined\n            }\n            gradedAt={\n              props.grading![questionId].grade.grader\n                ? props.grading![questionId].grade.gradedAt!\n                : undefined\n            }\n          />\n        ),\n        id: SideContentType.grading\n      },\n      {\n        label: `Question ${questionId + 1}`,\n        iconName: IconNames.NINJA,\n        body: <Markdown content={props.grading![questionId].question.content} />,\n        id: SideContentType.questionOverview\n      },\n      {\n        label: `Autograder`,\n        iconName: IconNames.AIRPLANE,\n        body: (\n          <SideContentAutograder\n            testcases={props.editorTestcases}\n            autogradingResults={props.autogradingResults}\n            handleTestcaseEval={this.props.handleTestcaseEval}\n            workspaceLocation=\"grading\"\n          />\n        ),\n        id: SideContentType.autograder\n      }\n    ];\n    const externalLibrary = props.grading![questionId].question.library.external;\n    const functionsAttached = externalLibrary.symbols;\n    if (functionsAttached.includes('get_matrix')) {\n      tabs.push({\n        label: `Tone Matrix`,\n        iconName: IconNames.GRID_VIEW,\n        body: <SideContentToneMatrix />,\n        id: SideContentType.toneMatrix\n      });\n    }\n\n    const sideContentProps: SideContentProps = {\n      onChange: (\n        newTabId: SideContentType,\n        prevTabId: SideContentType,\n        event: React.MouseEvent<HTMLElement>\n      ) => {\n        if (newTabId === prevTabId) {\n          return;\n        }\n        this.setState({ selectedTab: newTabId });\n      },\n      tabs: {\n        beforeDynamicTabs: tabs,\n        afterDynamicTabs: []\n      },\n      workspaceLocation: 'grading'\n    };\n\n    return sideContentProps;\n  };\n\n  /** Pre-condition: Grading has been loaded */\n  private controlBarProps: (q: number) => ControlBarProps = (questionId: number) => {\n    const listingPath = `/courses/${this.props.courseId}/grading`;\n    const gradingWorkspacePath = listingPath + `/${this.props.submissionId}`;\n    const questionProgress: [number, number] = [questionId + 1, this.props.grading!.length];\n\n    const onClickPrevious = () =>\n      history.push(gradingWorkspacePath + `/${(questionId - 1).toString()}`);\n    const onClickNext = () =>\n      history.push(gradingWorkspacePath + `/${(questionId + 1).toString()}`);\n    const onClickReturn = () => history.push(listingPath);\n\n    const nextButton = (\n      <ControlBarNextButton\n        onClickNext={onClickNext}\n        onClickReturn={onClickReturn}\n        questionProgress={questionProgress}\n        key=\"next_question\"\n      />\n    );\n\n    const previousButton = (\n      <ControlBarPreviousButton\n        onClick={onClickPrevious}\n        questionProgress={questionProgress}\n        key=\"previous_question\"\n      />\n    );\n\n    const questionView = (\n      <ControlBarQuestionViewButton questionProgress={questionProgress} key=\"question_view\" />\n    );\n\n    const runButton = <ControlBarRunButton handleEditorEval={this.handleEval} key=\"run\" />;\n\n    return {\n      editorButtons: [runButton],\n      flowButtons: [previousButton, questionView, nextButton]\n    };\n  };\n\n  private replButtons() {\n    const clearButton = (\n      <ControlBarClearButton\n        handleReplOutputClear={this.props.handleReplOutputClear}\n        key=\"clear_repl\"\n      />\n    );\n\n    const evalButton = (\n      <ControlBarEvalButton\n        handleReplEval={this.props.handleReplEval}\n        isRunning={this.props.isRunning}\n        key=\"eval_repl\"\n      />\n    );\n\n    return [evalButton, clearButton];\n  }\n\n  private handleEval() {\n    this.props.handleEditorEval();\n\n    // Run testcases when the autograder tab is selected\n    if (this.state.selectedTab === SideContentType.autograder) {\n      this.props.handleRunAllTestcases();\n    }\n  }\n}\n\nexport default GradingWorkspace;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  beginDebuggerPause,\n  beginInterruptExecution,\n  debuggerReset,\n  debuggerResume\n} from '../../../../commons/application/actions/InterpreterActions';\nimport { fetchGrading } from '../../../../commons/application/actions/SessionActions';\nimport { OverallState } from '../../../../commons/application/ApplicationTypes';\nimport { Library } from '../../../../commons/assessment/AssessmentTypes';\nimport { Position } from '../../../../commons/editor/EditorTypes';\nimport {\n  beginClearContext,\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeExecTime,\n  changeSideContentHeight,\n  clearReplOutput,\n  evalEditor,\n  evalRepl,\n  evalTestcase,\n  navigateToDeclaration,\n  promptAutocomplete,\n  resetWorkspace,\n  runAllTestcases,\n  sendReplInputToOutput,\n  setEditorBreakpoint,\n  updateCurrentSubmissionId,\n  updateEditorValue,\n  updateHasUnsavedChanges,\n  updateReplValue\n} from '../../../../commons/workspace/WorkspaceActions';\nimport { WorkspaceLocation, WorkspaceState } from '../../../../commons/workspace/WorkspaceTypes';\nimport GradingWorkspace, { DispatchProps, OwnProps, StateProps } from './GradingWorkspace';\n\nconst workspaceLocation: WorkspaceLocation = 'grading';\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, OverallState> = (state, props) => {\n  return {\n    autogradingResults: state.workspaces.grading.autogradingResults,\n    activeEditorTabIndex: state.workspaces.grading.activeEditorTabIndex,\n    editorTabs: state.workspaces.grading.editorTabs,\n    editorTestcases: state.workspaces.grading.editorTestcases,\n    grading: state.session.gradings.get(props.submissionId),\n    hasUnsavedChanges: state.workspaces.grading.hasUnsavedChanges,\n    isRunning: state.workspaces.grading.isRunning,\n    isDebugging: state.workspaces.grading.isDebugging,\n    enableDebugging: state.workspaces.grading.enableDebugging,\n    output: state.workspaces.grading.output,\n    replValue: state.workspaces.grading.replValue,\n    sideContentHeight: state.workspaces.grading.sideContentHeight,\n    storedSubmissionId: state.workspaces.grading.currentSubmission,\n    storedQuestionId: state.workspaces.grading.currentQuestion,\n    courseId: state.session.courseId\n  };\n};\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleBrowseHistoryDown: () => browseReplHistoryDown(workspaceLocation),\n      handleBrowseHistoryUp: () => browseReplHistoryUp(workspaceLocation),\n      handleClearContext: (library: Library, shouldInitLibrary: boolean) =>\n        beginClearContext(workspaceLocation, library, shouldInitLibrary),\n      handleDeclarationNavigate: (cursorPosition: Position) =>\n        navigateToDeclaration(workspaceLocation, cursorPosition),\n      handleEditorEval: () => evalEditor(workspaceLocation),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, workspaceLocation),\n      handleEditorUpdateBreakpoints: (breakpoints: string[]) =>\n        setEditorBreakpoint(breakpoints, workspaceLocation),\n      handleGradingFetch: fetchGrading,\n      handleInterruptEval: () => beginInterruptExecution(workspaceLocation),\n      handleReplEval: () => evalRepl(workspaceLocation),\n      handleReplOutputClear: () => clearReplOutput(workspaceLocation),\n      handleReplValueChange: (newValue: string) => updateReplValue(newValue, workspaceLocation),\n      handleSendReplInputToOutput: (code: string) => sendReplInputToOutput(code, workspaceLocation),\n      handleResetWorkspace: (options: Partial<WorkspaceState>) =>\n        resetWorkspace(workspaceLocation, options),\n      handleChangeExecTime: (execTimeMs: number) => changeExecTime(execTimeMs, workspaceLocation),\n      handleSideContentHeightChange: (heightChange: number) =>\n        changeSideContentHeight(heightChange, workspaceLocation),\n      handleTestcaseEval: (testcaseId: number) => evalTestcase(workspaceLocation, testcaseId),\n      handleRunAllTestcases: () => runAllTestcases(workspaceLocation),\n      handleUpdateCurrentSubmissionId: updateCurrentSubmissionId,\n      handleUpdateHasUnsavedChanges: (unsavedChanges: boolean) =>\n        updateHasUnsavedChanges(workspaceLocation, unsavedChanges),\n      handleDebuggerPause: () => beginDebuggerPause(workspaceLocation),\n      handleDebuggerResume: () => debuggerResume(workspaceLocation),\n      handleDebuggerReset: () => debuggerReset(workspaceLocation),\n      handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n        promptAutocomplete(workspaceLocation, row, col, callback)\n    },\n    dispatch\n  );\n\nconst GradingWorkspaceContainer = connect(mapStateToProps, mapDispatchToProps)(GradingWorkspace);\n\nexport default GradingWorkspaceContainer;\n","import { Position } from '@blueprintjs/core';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport React from 'react';\n\nimport { GradingCellProps } from '../../../../features/grading/GradingTypes';\n\n/**\n * Used to render the submission XP details in the table that displays GradingOverviews.\n * This is a fully fledged component (not SFC) by specification in\n * ag-grid.\n *\n * See {@link https://www.ag-grid.com/example-react-dynamic}\n */\nconst GradingXPCell: React.FC<GradingCellProps> = props => {\n  if (props.data.maxXp || props.data.xpBonus) {\n    const tooltip = `Initial XP: ${props.data.initialXp}\n        (${props.data.xpBonus > 0 ? `+${props.data.xpBonus} bonus ` : ''}\n        ${props.data.xpAdjustment >= 0 ? '+' : ''}${props.data.xpAdjustment} adj.)`;\n    return (\n      <div>\n        <Tooltip2 content={tooltip} placement={Position.LEFT} hoverOpenDelay={10} lazy={true}>\n          {`${props.data.currentXp + props.data.xpBonus} / ${props.data.maxXp}`}\n        </Tooltip2>\n      </div>\n    );\n  } else {\n    return <div>No Exp</div>;\n  }\n};\n\nexport default GradingXPCell;\n","import 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nimport {\n  Button,\n  Colors,\n  Divider,\n  FormGroup,\n  InputGroup,\n  Intent,\n  NonIdealState,\n  Spinner,\n  SpinnerSize\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ColDef, GridApi, GridReadyEvent } from 'ag-grid-community';\nimport { ValueFormatterParams } from 'ag-grid-community/dist/lib/entities/colDef';\nimport { AgGridReact } from 'ag-grid-react';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { GradingNavLinkProps, GradingWorkspaceParams } from 'src/features/grading/GradingTypes';\n\nimport { Role } from '../../../commons/application/ApplicationTypes';\nimport ContentDisplay from '../../../commons/ContentDisplay';\nimport NotificationBadge from '../../../commons/notificationBadge/NotificationBadgeContainer';\nimport { filterNotificationsBySubmission } from '../../../commons/notificationBadge/NotificationBadgeHelper';\nimport {\n  Notification,\n  NotificationFilterFunction\n} from '../../../commons/notificationBadge/NotificationBadgeTypes';\nimport { stringParamToInt } from '../../../commons/utils/ParamParseHelper';\nimport {\n  GradingOverview,\n  GradingOverviewWithNotifications\n} from '../../../features/grading/GradingTypes';\nimport GradingActionsCell from './subcomponents/GradingActionsCell';\nimport GradingStatusCell from './subcomponents/GradingStatusCell';\nimport { OwnProps as GradingWorkspaceOwnProps } from './subcomponents/GradingWorkspace';\nimport GradingWorkspaceContainer from './subcomponents/GradingWorkspaceContainer';\nimport GradingXPCell from './subcomponents/GradingXPCell';\n\ntype GradingProps = DispatchProps & StateProps & RouteComponentProps<GradingWorkspaceParams>;\n\nexport type DispatchProps = {\n  handleAcknowledgeNotifications: (withFilter?: NotificationFilterFunction) => void;\n  handleFetchGradingOverviews: (filterToGroup?: boolean) => void;\n  handleUnsubmitSubmission: (submissionId: number) => void;\n  handleReautogradeSubmission: (submissionId: number) => void;\n};\n\nexport type StateProps = {\n  courseRegId?: number;\n  gradingOverviews?: GradingOverview[];\n  notifications: Notification[];\n  role?: Role;\n  courseId?: number;\n};\n\ntype State = {\n  groupFilterEnabled: boolean;\n  currPage: number;\n  maxPages: number;\n  rowCountString: string;\n  isBackDisabled: boolean;\n  isForwardDisabled: boolean;\n};\n\nclass Grading extends React.Component<GradingProps, State> {\n  private columnDefs: ColDef[];\n  private defaultColumnDefs: ColDef;\n  private gridApi?: GridApi;\n\n  public constructor(props: GradingProps) {\n    super(props);\n\n    this.columnDefs = [\n      {\n        headerName: '',\n        field: 'notifications',\n        cellRendererFramework: this.NotificationBadgeCell,\n        width: 30,\n        filter: false,\n        resizable: false,\n        sortable: false,\n        suppressSizeToFit: true\n      },\n      { headerName: 'Assessment Name', field: 'assessmentName' },\n      { headerName: 'Category', field: 'assessmentType', maxWidth: 100 },\n      { headerName: 'Student Name', field: 'studentName' },\n      {\n        headerName: 'Group',\n        field: 'groupName',\n        maxWidth: 100\n      },\n      {\n        headerName: 'Status',\n        field: 'submissionStatus',\n        maxWidth: 100,\n        valueFormatter: (params: ValueFormatterParams) => {\n          const str = params.value as string;\n          return str.charAt(0).toUpperCase() + str.slice(1);\n        },\n        cellStyle: (params: GradingNavLinkProps) => {\n          if (params.data.submissionStatus === 'submitted') {\n            return { backgroundColor: Colors.GREEN5 };\n          }\n          return { backgroundColor: Colors.RED5 };\n        }\n      },\n      {\n        headerName: 'Grading',\n        field: 'gradingStatus',\n        cellRendererFramework: this.GradingStatus,\n        maxWidth: 110\n      },\n      {\n        headerName: 'XP',\n        field: '',\n        cellRendererFramework: this.GradingExp,\n        maxWidth: 100,\n        comparator: (valueA, valueB, nodeA, nodeB, isInverted) => {\n          if (nodeA && nodeB) {\n            return nodeA.data.currentXp - nodeB.data.currentXp;\n          }\n          return valueA - valueB;\n        }\n      },\n      {\n        headerName: 'Actions',\n        colId: 'Actions',\n        width: 120,\n        field: '',\n        cellRendererFramework: GradingActionsCell,\n        cellRendererParams: {\n          courseId: this.props.courseId,\n          courseRegId: this.props.courseRegId,\n          handleUnsubmitSubmission: this.props.handleUnsubmitSubmission,\n          handleReautogradeSubmission: this.props.handleReautogradeSubmission,\n          role: this.props.role\n        },\n        filter: false,\n        resizable: false,\n        sortable: false,\n        suppressSizeToFit: true,\n        cellStyle: {\n          padding: 0\n        }\n      },\n      { headerName: 'Question Count', field: 'questionCount', hide: true },\n      { headerName: 'Questions Graded', field: 'gradedCount', hide: true },\n      { headerName: 'Initial Grade', field: 'initialGrade', hide: true },\n      { headerName: 'Grade Adjustment', field: 'gradeAdjustment', hide: true },\n      { headerName: 'Initial XP', field: 'initialXp', hide: true },\n      { headerName: 'XP Adjustment', field: 'xpAdjustment', hide: true },\n      { headerName: 'Current Grade', field: 'currentGrade', hide: true },\n      { headerName: 'Max Grade', field: 'maxGrade', hide: true },\n      { headerName: 'Current XP (excl. bonus)', field: 'currentXp', hide: true },\n      { headerName: 'Max XP', field: 'maxXp', hide: true },\n      { headerName: 'Bonus XP', field: 'xpBonus', hide: true }\n    ];\n\n    this.defaultColumnDefs = {\n      filter: true,\n      resizable: true,\n      sortable: true\n    };\n\n    this.state = {\n      groupFilterEnabled: false,\n      currPage: 1,\n      maxPages: 1,\n      rowCountString: '(none)',\n      isBackDisabled: true,\n      isForwardDisabled: true\n    };\n  }\n\n  public render() {\n    const submissionId: number | null = stringParamToInt(this.props.match.params.submissionId);\n    // default questionId is 0 (the first question)\n    const questionId: number = stringParamToInt(this.props.match.params.questionId) || 0;\n\n    /* Create a workspace to grade a submission. */\n    if (submissionId !== null) {\n      const props: GradingWorkspaceOwnProps = {\n        submissionId,\n        questionId\n      };\n      return <GradingWorkspaceContainer {...props} />;\n    }\n\n    /* Display either a loading screen or a table with overviews. */\n    const loadingDisplay = (\n      <NonIdealState\n        className=\"Grading\"\n        description=\"Fetching submissions...\"\n        icon={<Spinner size={SpinnerSize.LARGE} />}\n      />\n    );\n\n    const data = this.sortSubmissionsByNotifications().map(e =>\n      !e.studentName ? { ...e, studentName: '(user has yet to log in)' } : e\n    );\n\n    const controls = (\n      <div className=\"grading-controls\">\n        <FormGroup label=\"Filter:\" labelFor=\"text-input\" inline={true}>\n          <InputGroup\n            id=\"filterBar\"\n            large={false}\n            leftIcon=\"filter\"\n            placeholder=\"Enter any text (e.g. mission)\"\n            onKeyPress={this.handleFilterKeypress}\n            onBlur={this.handleApplyFilter}\n          />\n        </FormGroup>\n\n        <div className=\"GridControls ag-grid-controls\">\n          <div className=\"left-controls\">\n            <Button\n              active={this.state.groupFilterEnabled}\n              icon={IconNames.GIT_REPO}\n              intent={this.state.groupFilterEnabled ? Intent.PRIMARY : Intent.NONE}\n              onClick={this.handleGroupsFilter}\n            >\n              <span className=\"hidden-xs\">Show all groups</span>\n            </Button>\n          </div>\n          <div className=\"centre-controls\">\n            <Button\n              icon={IconNames.CHEVRON_BACKWARD}\n              onClick={this.changePaginationView('first')}\n              minimal={true}\n              disabled={this.state.isBackDisabled}\n            />\n            <Button\n              icon={IconNames.CHEVRON_LEFT}\n              onClick={this.changePaginationView('prev')}\n              minimal={true}\n              disabled={this.state.isBackDisabled}\n            />\n            <Button className=\"pagination-details hidden-xs\" disabled={true} minimal={true}>\n              <div>{`Page ${this.state.currPage} of ${this.state.maxPages}`}</div>\n              <div>{this.state.rowCountString}</div>\n            </Button>\n            <Button\n              icon={IconNames.CHEVRON_RIGHT}\n              onClick={this.changePaginationView('next')}\n              minimal={true}\n              disabled={this.state.isForwardDisabled}\n            />\n            <Button\n              icon={IconNames.CHEVRON_FORWARD}\n              onClick={this.changePaginationView('last')}\n              minimal={true}\n              disabled={this.state.isForwardDisabled}\n            />\n          </div>\n          <div className=\"right-controls\">\n            <Button icon={IconNames.EXPORT} onClick={this.exportCSV}>\n              <span className=\"hidden-xs\">Export to CSV</span>\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n\n    const grid = (\n      <div className=\"Grid ag-grid-parent ag-theme-balham\">\n        <AgGridReact\n          domLayout={'autoHeight'}\n          columnDefs={this.columnDefs}\n          defaultColDef={this.defaultColumnDefs}\n          onGridReady={this.onGridReady}\n          onGridSizeChanged={this.resizeGrid}\n          onPaginationChanged={this.updatePaginationState}\n          rowData={data}\n          rowHeight={30}\n          pagination={true}\n          paginationPageSize={25}\n          suppressCellSelection={true}\n          suppressMovableColumns={true}\n          suppressPaginationPanel={true}\n        />\n      </div>\n    );\n\n    const content = (\n      <div className=\"Grading\">\n        {controls}\n        <Divider />\n        {grid}\n      </div>\n    );\n\n    return (\n      <div>\n        <ContentDisplay\n          loadContentDispatch={this.props.handleFetchGradingOverviews}\n          display={this.props.gradingOverviews === undefined ? loadingDisplay : content}\n          fullWidth={false}\n        />\n      </div>\n    );\n  }\n\n  public componentDidUpdate(prevProps: GradingProps, prevState: State) {\n    // Only update grid data when a notification is acknowledged\n    if (this.gridApi && this.props.notifications.length !== prevProps.notifications.length) {\n      // Pass the new reconstructed row data to the grid after fetching the updated notifs\n      this.gridApi.setRowData(this.sortSubmissionsByNotifications());\n    }\n  }\n\n  /** Component to render in table - grading status */\n  private GradingStatus = (props: GradingNavLinkProps) => {\n    return <GradingStatusCell data={props.data} />;\n  };\n\n  private NotificationBadgeCell = (props: GradingNavLinkProps) => {\n    return (\n      <NotificationBadge\n        notificationFilter={filterNotificationsBySubmission(props.data.submissionId)}\n      />\n    );\n  };\n\n  /** Component to render in table - XP */\n  private GradingExp = (props: GradingNavLinkProps) => {\n    return <GradingXPCell data={props.data} />;\n  };\n\n  // Forcibly resizes columns to fit the width of the datagrid - prevents datagrid\n  // from needing to render a horizontal scrollbar when columns overflow grid width\n  private resizeGrid = () => {\n    if (this.gridApi) {\n      this.gridApi.sizeColumnsToFit();\n    }\n  };\n\n  private updatePaginationState = () => {\n    if (this.gridApi) {\n      const newTotalPages = this.gridApi.paginationGetTotalPages();\n      const newCurrPage = newTotalPages === 0 ? 0 : this.gridApi.paginationGetCurrentPage() + 1;\n      this.setState({\n        currPage: newCurrPage,\n        maxPages: newTotalPages,\n        rowCountString: this.formatRowCountString(\n          25,\n          newCurrPage,\n          newTotalPages,\n          this.gridApi.paginationGetRowCount()\n        ),\n        isBackDisabled: newTotalPages === 0 || newCurrPage === 1,\n        isForwardDisabled: newTotalPages === 0 || newCurrPage === newTotalPages\n      });\n    }\n  };\n\n  private formatRowCountString = (\n    pageSize: number,\n    currPage: number,\n    maxPages: number,\n    totalRows: number\n  ) => {\n    return maxPages === 0\n      ? '(none)'\n      : currPage !== maxPages\n      ? `(#${pageSize * currPage - 24} - #${pageSize * currPage})`\n      : `(#${pageSize * currPage - 24} - #${totalRows})`;\n  };\n\n  private handleFilterKeypress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      this.applyFilter(event.currentTarget.value);\n    }\n  };\n\n  private handleApplyFilter = (event: React.FocusEvent<HTMLInputElement>) => {\n    this.applyFilter(event.target.value);\n  };\n\n  private handleGroupsFilter = () => {\n    if (this.gridApi) {\n      this.setState({ groupFilterEnabled: !this.state.groupFilterEnabled });\n      this.props.handleFetchGradingOverviews(this.state.groupFilterEnabled);\n    }\n  };\n\n  private applyFilter = (filter: string) => {\n    this.gridApi?.setQuickFilter(filter);\n  };\n\n  private onGridReady = (params: GridReadyEvent) => {\n    this.gridApi = params.api;\n    this.gridApi.sizeColumnsToFit();\n    this.updatePaginationState();\n  };\n\n  private exportCSV = () => {\n    if (this.gridApi) {\n      this.gridApi.exportDataAsCsv({\n        fileName: `SA submissions (${new Date().toISOString()}).csv`,\n        // Explicitly declare exported columns to avoid exporting trash columns\n        columnKeys: [\n          'assessmentName',\n          'assessmentCategory',\n          'studentName',\n          'groupName',\n          'submissionStatus',\n          'gradingStatus',\n          'questionCount',\n          'gradedCount',\n          'initialGrade',\n          'gradeAdjustment',\n          'currentGrade',\n          'maxGrade',\n          'initialXp',\n          'xpAdjustment',\n          'currentXp',\n          'maxXp',\n          'xpBonus'\n        ]\n      });\n    }\n  };\n\n  private changePaginationView = (type: string) => {\n    return () => {\n      if (this.gridApi) {\n        switch (type) {\n          case 'first':\n            return this.gridApi.paginationGoToFirstPage();\n          case 'prev':\n            return this.gridApi.paginationGoToPreviousPage();\n          case 'next':\n            return this.gridApi.paginationGoToNextPage();\n          case 'last':\n            return this.gridApi.paginationGoToLastPage();\n          default:\n        }\n      }\n    };\n  };\n\n  /** Constructs data nodes for the datagrid by joining grading overviews with their\n   *  associated notifications.\n   *  @return Returns an array of data nodes, prioritising grading overviews with\n   *  notifications first.\n   */\n  private sortSubmissionsByNotifications = () => {\n    if (!this.props.gradingOverviews) {\n      return [];\n    }\n\n    return (this.props.gradingOverviews as GradingOverviewWithNotifications[])\n      .map(overview => ({\n        ...overview,\n        notifications: filterNotificationsBySubmission(overview.submissionId)(\n          this.props.notifications\n        )\n      }))\n      .sort((subX, subY) => subY.notifications.length - subX.notifications.length);\n  };\n}\n\nexport default Grading;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  acknowledgeNotifications,\n  fetchGradingOverviews,\n  reautogradeSubmission,\n  unsubmitSubmission\n} from '../../../commons/application/actions/SessionActions';\nimport { OverallState } from '../../../commons/application/ApplicationTypes';\nimport Grading, { DispatchProps, StateProps } from './Grading';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  gradingOverviews: state.session.gradingOverviews,\n  courseRegId: state.session.courseRegId,\n  notifications: state.session.notifications,\n  role: state.session.role,\n  courseId: state.session.courseId\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleAcknowledgeNotifications: acknowledgeNotifications,\n      handleFetchGradingOverviews: fetchGradingOverviews,\n      handleUnsubmitSubmission: unsubmitSubmission,\n      handleReautogradeSubmission: reautogradeSubmission\n    },\n    dispatch\n  );\n\nconst GradingContainer = connect(mapStateToProps, mapDispatchToProps)(Grading);\n\nexport default GradingContainer;\n","import { Button, Classes, Dialog, Intent, Menu, MenuItem } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ItemListRenderer, ItemRenderer, Select } from '@blueprintjs/select';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport * as React from 'react';\n\nimport {\n  defaultLanguages,\n  SALanguage,\n  sourceLanguages,\n  styliseSublanguage,\n  variantLanguages\n} from '../../../../commons/application/ApplicationTypes';\nimport ControlButton from '../../../../commons/ControlButton';\n\nexport type DefaultChapterSelectProps = DispatchProps & StateProps;\n\nexport type DispatchProps = {\n  handleUpdateSublanguage: (sublang: SALanguage) => void;\n};\n\nexport type StateProps = {\n  sourceChapter: Chapter;\n  sourceVariant: Variant;\n};\n\nconst DefaultChapterSelect: React.FunctionComponent<DefaultChapterSelectProps> = props => {\n  const { handleUpdateSublanguage } = props;\n  const { sourceChapter, sourceVariant } = props;\n\n  const [chosenSublang, setSublanguage] = React.useState<SALanguage>(sourceLanguages[0]);\n  const [isDialogOpen, setDialogState] = React.useState<boolean>(false);\n\n  const handleOpenDialog = React.useCallback(\n    (choice: SALanguage) => {\n      setDialogState(true);\n      setSublanguage(choice);\n    },\n    [setDialogState, setSublanguage]\n  );\n  const handleCloseDialog = React.useCallback(() => {\n    setDialogState(false);\n  }, [setDialogState]);\n  const handleConfirmDialog = React.useCallback(() => {\n    setDialogState(false);\n    handleUpdateSublanguage(chosenSublang);\n  }, [chosenSublang, setDialogState, handleUpdateSublanguage]);\n\n  const chapterRenderer: ItemRenderer<SALanguage> = React.useCallback(\n    (lang, { handleClick }) => (\n      <MenuItem key={lang.displayName} onClick={handleClick} text={lang.displayName} />\n    ),\n    []\n  );\n\n  const chapterListRenderer: ItemListRenderer<SALanguage> = React.useCallback(\n    ({ itemsParentRef, renderItem }) => {\n      const defaultChoices = defaultLanguages.map(renderItem);\n      const variantChoices = variantLanguages.map(renderItem);\n\n      return (\n        <Menu ulRef={itemsParentRef}>\n          {defaultChoices}\n          <MenuItem key=\"variant-menu\" text=\"Variants\" icon=\"cog\">\n            {variantChoices}\n          </MenuItem>\n        </Menu>\n      );\n    },\n    []\n  );\n\n  const DefaultChapterSelectComponent = Select.ofType<SALanguage>();\n\n  const dialog = (\n    <Dialog\n      canEscapeKeyClose={true}\n      canOutsideClickClose={true}\n      className=\"change-default-lang-dialog\"\n      icon={IconNames.ERROR}\n      isCloseButtonShown={true}\n      isOpen={isDialogOpen}\n      onClose={handleCloseDialog}\n      title=\"Updating default Source sublanguage\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        Are you sure you want to update the <b>default Playground Source sublanguage</b> from{' '}\n        {styliseSublanguage(sourceChapter, sourceVariant)} to <b>{chosenSublang.displayName}</b>?\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          <ControlButton label=\"Cancel\" onClick={handleCloseDialog} options={{ minimal: false }} />\n          <ControlButton\n            label=\"Confirm\"\n            onClick={handleConfirmDialog}\n            options={{ minimal: false, intent: Intent.DANGER }}\n          />\n        </div>\n      </div>\n    </Dialog>\n  );\n\n  return (\n    <>\n      <DefaultChapterSelectComponent\n        items={sourceLanguages}\n        onItemSelect={handleOpenDialog}\n        itemRenderer={chapterRenderer}\n        itemListRenderer={chapterListRenderer}\n        filterable={false}\n      >\n        <Button rightIcon={IconNames.DOUBLE_CARET_VERTICAL}>\n          <span className=\"hidden-xs hidden-sm\">Default sublanguage: </span>\n          <span>{styliseSublanguage(sourceChapter, sourceVariant)}</span>\n        </Button>\n      </DefaultChapterSelectComponent>\n      {dialog}\n    </>\n  );\n};\n\nexport default DefaultChapterSelect;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport Constants from 'src/commons/utils/Constants';\n\nimport { OverallState } from '../../../../commons/application/ApplicationTypes';\nimport { changeSublanguage } from '../../../../commons/workspace/WorkspaceActions';\nimport DefaultChapterSelect, { DispatchProps, StateProps } from './DefaultChapterSelect';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  // Temporarily load the defaults when the course configuration fetch has yet to return\n  sourceChapter: state.session.sourceChapter || Constants.defaultSourceChapter,\n  sourceVariant: state.session.sourceVariant || Constants.defaultSourceVariant\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleUpdateSublanguage: changeSublanguage\n    },\n    dispatch\n  );\n\nconst DefaultChapterSelectContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DefaultChapterSelect);\n\nexport default DefaultChapterSelectContainer;\n","import { Classes, Dialog, Intent } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { AssessmentOverview } from '../../../../commons/assessment/AssessmentTypes';\nimport ControlButton from '../../../../commons/ControlButton';\n\nexport type DeleteCellProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleDeleteAssessment: (id: number) => void;\n};\n\ntype StateProps = {\n  data: AssessmentOverview;\n};\n\nconst DeleteCell: React.FunctionComponent<DeleteCellProps> = props => {\n  const [isDialogOpen, setDialogState] = React.useState<boolean>(false);\n\n  const handleOpenDialog = React.useCallback(() => setDialogState(true), []);\n  const handleCloseDialog = React.useCallback(() => setDialogState(false), []);\n\n  const { handleDeleteAssessment, data } = props;\n\n  const handleDelete = React.useCallback(() => {\n    const { id } = data;\n    handleDeleteAssessment(id);\n    handleCloseDialog();\n  }, [data, handleCloseDialog, handleDeleteAssessment]);\n\n  return (\n    <>\n      <ControlButton icon={IconNames.TRASH} onClick={handleOpenDialog} />\n      <Dialog\n        icon={IconNames.WARNING_SIGN}\n        isOpen={isDialogOpen}\n        onClose={handleCloseDialog}\n        title=\"Deleting assessment\"\n        canOutsideClickClose={true}\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <p>\n            Are you sure you want to <b>delete</b> the assessment <i>{data.title}</i>?\n          </p>\n          <p>\n            <b>All submissions and their answers will be deleted as well.</b>\n          </p>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <ControlButton\n              label=\"Cancel\"\n              icon={IconNames.CROSS}\n              onClick={handleCloseDialog}\n              options={{ minimal: false }}\n            />\n            <ControlButton\n              label=\"Confirm\"\n              icon={IconNames.TRASH}\n              onClick={handleDelete}\n              options={{ minimal: false, intent: Intent.DANGER }}\n            />\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n\nexport default DeleteCell;\n","import { Card, Elevation, HTMLSelect, Intent, Switch } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { FileRejection, useDropzone } from 'react-dropzone';\nimport { AssessmentConfiguration } from 'src/commons/assessment/AssessmentTypes';\n\nimport ControlButton from '../../../../commons/ControlButton';\nimport { showWarningMessage } from '../../../../commons/utils/NotificationsHelper';\n\nexport type DropzoneProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleUploadAssessment: (file: File, forceUpdate: boolean, assessmentConfigId: number) => void;\n};\n\ntype StateProps = {\n  assessmentConfigurations?: AssessmentConfiguration[];\n};\n\nconst MaterialDropzone: React.FunctionComponent<DropzoneProps> = props => {\n  const [file, setFile] = React.useState<File | undefined>(undefined);\n  const [isWarningShown, setPromptShown] = React.useState<boolean>(false);\n  const [forceUpdate, setForceUpdate] = React.useState<boolean>(false);\n  const [assessmentConfigId, setAssessmentConfigId] = React.useState<number>(-1);\n\n  React.useEffect(() => {\n    if (props.assessmentConfigurations && assessmentConfigId === -1) {\n      setAssessmentConfigId(props.assessmentConfigurations[0].assessmentConfigId);\n    }\n  }, [props.assessmentConfigurations, assessmentConfigId]);\n\n  const { handleUploadAssessment } = props;\n\n  const htmlSelectOptions = React.useMemo(() => {\n    return props.assessmentConfigurations?.map(e => {\n      return {\n        value: e.assessmentConfigId,\n        label: e.type\n      };\n    });\n  }, [props.assessmentConfigurations]);\n\n  const handleConfirmUpload = React.useCallback(() => {\n    if (assessmentConfigId === -1) {\n      showWarningMessage('Please select a valid assessment type before uploading!');\n      return;\n    }\n    if (file) {\n      handleUploadAssessment(file, forceUpdate, assessmentConfigId);\n      setForceUpdate(false);\n    }\n    setFile(undefined);\n  }, [file, forceUpdate, handleUploadAssessment, assessmentConfigId]);\n  const handleCancelUpload = React.useCallback(() => setFile(undefined), [setFile]);\n\n  const handleDropAccepted = React.useCallback(\n    (acceptedFiles: File[]) => {\n      setFile(acceptedFiles[0]);\n      setForceUpdate(false);\n    },\n    [setFile]\n  );\n  const handleDropRejected = React.useCallback((rejectedFiles: FileRejection[]) => {\n    if (rejectedFiles.length > 1) {\n      showWarningMessage('Uploading multiple files at once is not currently supported!', 2000);\n    }\n  }, []);\n\n  const { getRootProps, getInputProps, isFocused, isDragActive, isDragAccept, isDragReject } =\n    useDropzone({\n      multiple: false,\n      onDropAccepted: handleDropAccepted,\n      onDropRejected: handleDropRejected\n    });\n\n  const classList = React.useMemo(() => {\n    return classNames(\n      'dropzone-base',\n      isFocused || isDragActive ? 'dropzone-active' : undefined,\n      isDragAccept ? 'dropzone-accept' : undefined,\n      isDragReject ? 'dropzone-reject' : undefined\n    );\n  }, [isFocused, isDragActive, isDragAccept, isDragReject]);\n\n  const handleSwitchOnChange = React.useCallback(() => {\n    if (!forceUpdate) {\n      setPromptShown(true);\n    } else {\n      setForceUpdate(false);\n    }\n  }, [forceUpdate, setPromptShown, setForceUpdate]);\n\n  const toggleButton = React.useMemo(\n    () => (\n      <div className=\"toggle-button-wrapper\">\n        <Switch checked={forceUpdate} onChange={handleSwitchOnChange} />\n      </div>\n    ),\n    [forceUpdate, handleSwitchOnChange]\n  );\n\n  const handleConfirmForceUpdate = React.useCallback(() => {\n    setForceUpdate(true);\n    setPromptShown(false);\n  }, [setForceUpdate]);\n  const handleCancelForceUpdate = React.useCallback(() => {\n    setPromptShown(false);\n  }, [setPromptShown]);\n\n  const confirmationPrompt = React.useMemo(\n    () => (\n      <div className=\"dropzone-controls\">\n        <ControlButton\n          label=\"Yes\"\n          icon={IconNames.CONFIRM}\n          onClick={handleConfirmForceUpdate}\n          options={{ minimal: false, intent: Intent.DANGER }}\n        />\n        <ControlButton\n          label=\"No\"\n          icon={IconNames.CROSS}\n          onClick={handleCancelForceUpdate}\n          options={{ minimal: false }}\n        />\n      </div>\n    ),\n    [handleCancelForceUpdate, handleConfirmForceUpdate]\n  );\n\n  return (\n    <>\n      <Card elevation={Elevation.TWO} interactive={true}>\n        <div {...getRootProps({ className: classList })}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop a file here, or click to select a file</p>\n        </div>\n      </Card>\n      {file && (\n        <Card className=\"dropzone-prompt\" elevation={Elevation.TWO} interactive={true}>\n          <h3>{file?.name}</h3>\n          {!isWarningShown && (\n            <>\n              <div className=\"dropzone-controls\">\n                <HTMLSelect\n                  options={htmlSelectOptions}\n                  onChange={e => setAssessmentConfigId(parseInt(e.target.value))}\n                  value={assessmentConfigId}\n                />\n                <ControlButton\n                  label=\"Confirm Upload\"\n                  icon={IconNames.UPLOAD}\n                  onClick={handleConfirmUpload}\n                  options={{ minimal: false, intent: Intent.DANGER }}\n                />\n                <ControlButton\n                  label=\"Cancel Upload\"\n                  icon={IconNames.DELETE}\n                  onClick={handleCancelUpload}\n                  options={{ minimal: false }}\n                />\n              </div>\n              <div className=\"dropzone-controls\">\n                <p>Force update opened assessment</p>\n                {toggleButton}\n              </div>\n            </>\n          )}\n          {isWarningShown && <p>Are you sure that you want to force update the assessment?</p>}\n          {isWarningShown && confirmationPrompt}\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default MaterialDropzone;\n","import { Classes, Dialog, Intent } from '@blueprintjs/core';\nimport { DateInput } from '@blueprintjs/datetime';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as moment from 'moment';\nimport * as React from 'react';\n\nimport { AssessmentOverview } from '../../../../commons/assessment/AssessmentTypes';\nimport ControlButton from '../../../../commons/ControlButton';\nimport { showWarningMessage } from '../../../../commons/utils/NotificationsHelper';\n\nexport type EditCellProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleAssessmentChangeDate: (id: number, openAt: string, closeAt: string) => void;\n};\n\ntype StateProps = {\n  data: AssessmentOverview;\n  forOpenDate: boolean;\n};\n\nconst dateDisplayFormat = 'YYYY-MM-DD HH:mm:ss ZZ';\n\nconst EditCell: React.FunctionComponent<EditCellProps> = props => {\n  const minDate = new Date(2010, 0, 0);\n  const maxDate = new Date(2030, 11, 31);\n\n  const { data, forOpenDate } = props;\n  const currentDateString = forOpenDate ? data.openAt : data.closeAt;\n  const currentDate = moment(currentDateString, moment.ISO_8601, true);\n\n  const [isDialogOpen, setDialogState] = React.useState<boolean>(false);\n  const [newDate, setNewDate] = React.useState<moment.Moment | null>(currentDate);\n\n  const handleOpenDialog = React.useCallback(() => setDialogState(true), []);\n  const handleCloseDialog = React.useCallback(() => setDialogState(false), []);\n\n  const { handleAssessmentChangeDate } = props;\n\n  const handleUpdateDate = React.useCallback(() => {\n    if (!newDate) {\n      // Reset date to current date if no date is selected (null date) in the date input\n      showWarningMessage('No date and time selected!', 2000);\n      setNewDate(currentDate);\n    } else {\n      const { id, openAt, closeAt } = data;\n      handleAssessmentChangeDate(\n        id,\n        forOpenDate ? newDate.toISOString() : openAt,\n        forOpenDate ? closeAt : newDate.toISOString()\n      );\n      handleCloseDialog();\n    }\n  }, [newDate, currentDate, data, handleAssessmentChangeDate, forOpenDate, handleCloseDialog]);\n\n  const handleParseDate = (str: string) => {\n    const date = moment(str, dateDisplayFormat, true);\n    return date.isValid() ? date.toDate() : false;\n  };\n  const handleFormatDate = (date: Date) => moment(date).format(dateDisplayFormat);\n\n  const handleDateChange = React.useCallback(\n    (selectedDate: Date | null) => setNewDate(moment(selectedDate)),\n    []\n  );\n  const handleDateError = React.useCallback(() => {\n    // Reset date to current date if user enters an invalid date string\n    showWarningMessage('Failed to parse date string! Defaulting to current date.', 2000);\n    setNewDate(currentDate);\n  }, [currentDate]);\n\n  const dateInput = (\n    <DateInput\n      formatDate={handleFormatDate}\n      onChange={handleDateChange}\n      onError={handleDateError}\n      parseDate={handleParseDate}\n      placeholder={`${dateDisplayFormat} or select a date`}\n      value={newDate?.toDate()}\n      timePrecision={'second'}\n      fill={true}\n      minDate={minDate}\n      maxDate={maxDate}\n      closeOnSelection={false}\n    />\n  );\n\n  return (\n    <>\n      <span className=\"date-cell-text\">{currentDate.format(dateDisplayFormat)}</span>\n      <ControlButton icon={IconNames.EDIT} onClick={handleOpenDialog} />\n      <Dialog\n        icon={IconNames.INFO_SIGN}\n        isOpen={isDialogOpen}\n        onClose={handleCloseDialog}\n        title=\"Updating assessment settings\"\n        canOutsideClickClose={true}\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <p>{forOpenDate ? 'Opening' : 'Closing'} date and time:</p>\n          {dateInput}\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <ControlButton\n              label=\"Cancel\"\n              icon={IconNames.CROSS}\n              onClick={handleCloseDialog}\n              options={{ minimal: false }}\n            />\n            <ControlButton\n              label=\"Confirm\"\n              icon={IconNames.TICK}\n              onClick={handleUpdateDate}\n              options={{ minimal: false, intent: Intent.DANGER }}\n            />\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n\nexport default EditCell;\n","import { Classes, Dialog, Intent, Switch } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { AssessmentOverview } from '../../../../commons/assessment/AssessmentTypes';\nimport ControlButton from '../../../../commons/ControlButton';\n\nexport type PublishCellProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handlePublishAssessment: (togglePublishTo: boolean, id: number) => void;\n};\n\ntype StateProps = {\n  data: AssessmentOverview;\n};\n\nconst PublishCell: React.FunctionComponent<PublishCellProps> = props => {\n  const { data } = props;\n\n  const [isDialogOpen, setDialogState] = React.useState<boolean>(false);\n  const [isPublished] = React.useState<boolean>(!!data.isPublished);\n\n  const handleOpenDialog = React.useCallback(() => setDialogState(true), []);\n  const handleCloseDialog = React.useCallback(() => setDialogState(false), []);\n\n  const { handlePublishAssessment } = props;\n\n  const handleTogglePublished = React.useCallback(() => {\n    const { id } = data;\n    handlePublishAssessment(!isPublished, id);\n    handleCloseDialog();\n  }, [data, isPublished, handleCloseDialog, handlePublishAssessment]);\n\n  return (\n    <>\n      <Switch className=\"publish-cell\" checked={isPublished} onChange={handleOpenDialog} />\n      <Dialog\n        icon={IconNames.WARNING_SIGN}\n        isOpen={isDialogOpen}\n        onClose={handleCloseDialog}\n        title={`${isPublished ? 'Unpublish' : 'Publish'} assessment`}\n        canOutsideClickClose={true}\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <p>\n            Are you sure you want to <b>{isPublished ? 'unpublish' : 'publish'}</b> the assessment{' '}\n            <i>{data.title}</i>?\n          </p>\n          {isPublished ? (\n            <p>\n              <b>\n                This will hide the assessment for students and prevent them from uploading new\n                answers. Admins and staff are not affected.\n              </b>\n            </p>\n          ) : null}\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <ControlButton\n              label=\"Cancel\"\n              icon={IconNames.CROSS}\n              onClick={handleCloseDialog}\n              options={{ minimal: false }}\n            />\n            <ControlButton\n              label=\"Confirm\"\n              icon={IconNames.CONFIRM}\n              onClick={handleTogglePublished}\n              options={{ minimal: false, intent: Intent.DANGER }}\n            />\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n\nexport default PublishCell;\n","import 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nimport { Button, Collapse, Divider, Intent } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ColDef, ColumnApi, GridApi, GridReadyEvent } from 'ag-grid-community';\nimport { AgGridReact } from 'ag-grid-react';\nimport * as React from 'react';\n\nimport {\n  AssessmentConfiguration,\n  AssessmentOverview\n} from '../../../commons/assessment/AssessmentTypes';\nimport ContentDisplay from '../../../commons/ContentDisplay';\nimport DefaultChapterSelect from './subcomponents/DefaultChapterSelectContainer';\nimport DeleteCell from './subcomponents/GroundControlDeleteCell';\nimport Dropzone from './subcomponents/GroundControlDropzone';\nimport EditCell from './subcomponents/GroundControlEditCell';\nimport PublishCell from './subcomponents/GroundControlPublishCell';\n\nexport type GroundControlProps = DispatchProps & StateProps;\n\nexport type DispatchProps = {\n  handleAssessmentOverviewFetch: () => void;\n  handleDeleteAssessment: (id: number) => void;\n  handleUploadAssessment: (file: File, forceUpdate: boolean, assessmentConfigId: number) => void;\n  handlePublishAssessment: (togglePublishTo: boolean, id: number) => void;\n  handleAssessmentChangeDate: (id: number, openAt: string, closeAt: string) => void;\n  handleFetchCourseConfigs: () => void;\n};\n\nexport type StateProps = {\n  assessmentOverviews?: AssessmentOverview[];\n  assessmentConfigurations?: AssessmentConfiguration[];\n};\n\ntype State = {\n  showDropzone: boolean;\n};\n\nclass GroundControl extends React.Component<GroundControlProps, State> {\n  private columnDefs: ColDef[];\n  private defaultColumnDefs: ColDef;\n  private gridApi?: GridApi;\n  private columnApi?: ColumnApi;\n\n  public constructor(props: GroundControlProps) {\n    super(props);\n\n    this.state = {\n      showDropzone: false\n    };\n\n    this.columnDefs = [\n      {\n        field: 'number',\n        headerName: 'ID',\n        width: 50\n      },\n      {\n        headerName: 'Title',\n        field: 'title'\n      },\n      {\n        headerName: 'Category',\n        field: 'type',\n        width: 100\n      },\n      {\n        headerName: 'Open Date',\n        field: 'openAt',\n        filter: 'agDateColumnFilter',\n        filterParams: {\n          comparator: this.dateFilterComparator,\n          inRangeInclusive: true\n        },\n        sortingOrder: ['desc', 'asc', null],\n        cellRendererFramework: EditCell,\n        cellRendererParams: {\n          handleAssessmentChangeDate: this.props.handleAssessmentChangeDate,\n          forOpenDate: true\n        },\n        width: 150\n      },\n      {\n        headerName: 'Close Date',\n        field: 'closeAt',\n        filter: 'agDateColumnFilter',\n        filterParams: {\n          comparator: this.dateFilterComparator,\n          inRangeInclusive: true\n        },\n        sortingOrder: ['desc', 'asc', null],\n        cellRendererFramework: EditCell,\n        cellRendererParams: {\n          handleAssessmentChangeDate: this.props.handleAssessmentChangeDate,\n          forOpenDate: false\n        },\n        width: 150\n      },\n      {\n        headerName: 'Publish',\n        field: '',\n        cellRendererFramework: PublishCell,\n        cellRendererParams: {\n          handlePublishAssessment: this.props.handlePublishAssessment\n        },\n        width: 100,\n        filter: false,\n        resizable: false,\n        sortable: false,\n        cellStyle: {\n          padding: 0\n        }\n      },\n      {\n        headerName: 'Delete',\n        field: '',\n        cellRendererFramework: DeleteCell,\n        cellRendererParams: {\n          handleDeleteAssessment: this.props.handleDeleteAssessment\n        },\n        width: 100,\n        filter: false,\n        resizable: false,\n        sortable: false,\n        cellStyle: {\n          padding: 0\n        }\n      }\n    ];\n\n    this.defaultColumnDefs = {\n      filter: true,\n      resizable: true,\n      sortable: true\n    };\n  }\n\n  public render() {\n    const controls = (\n      <div className=\"GridControls ground-control-controls\">\n        <Button\n          active={this.state.showDropzone}\n          icon={IconNames.CLOUD_UPLOAD}\n          intent={this.state.showDropzone ? Intent.PRIMARY : Intent.NONE}\n          onClick={this.toggleDropzone}\n        >\n          <span className=\"hidden-xs\">Upload assessment</span>\n        </Button>\n        <DefaultChapterSelect />\n        <Button icon={IconNames.REFRESH} onClick={this.props.handleAssessmentOverviewFetch}>\n          <span className=\"hidden-xs\">Refresh assessments</span>\n        </Button>\n      </div>\n    );\n\n    const dropzone = (\n      <Collapse isOpen={this.state.showDropzone} keepChildrenMounted={true}>\n        <Dropzone\n          handleUploadAssessment={this.props.handleUploadAssessment}\n          assessmentConfigurations={this.props.assessmentConfigurations}\n        />\n      </Collapse>\n    );\n\n    const grid = (\n      <div className=\"Grid ag-grid-parent ag-theme-balham\">\n        <AgGridReact\n          domLayout={'autoHeight'}\n          columnDefs={this.columnDefs}\n          defaultColDef={this.defaultColumnDefs}\n          onGridReady={this.onGridReady}\n          onGridSizeChanged={this.resizeGrid}\n          rowData={this.props.assessmentOverviews}\n          rowHeight={30}\n          suppressCellSelection={true}\n          suppressMovableColumns={true}\n          suppressPaginationPanel={true}\n        />\n      </div>\n    );\n\n    const content = (\n      <div className=\"GroundControl\">\n        {controls}\n        {dropzone}\n        <Divider />\n        {grid}\n      </div>\n    );\n\n    return (\n      <div>\n        <ContentDisplay display={content} loadContentDispatch={this.loadContent} />\n      </div>\n    );\n  }\n\n  private loadContent = () => {\n    // Always load AssessmentOverviews and CourseConfigs to get the latest values (just in case)\n    this.props.handleAssessmentOverviewFetch();\n    this.props.handleFetchCourseConfigs();\n  };\n\n  /*\n   *  Reference: https://www.ag-grid.com/javascript-grid-filter-date/#date-filter-comparator\n   */\n  private dateFilterComparator = (filterDate: Date, cellValue: string) => {\n    const cellDate = new Date(cellValue);\n\n    return cellDate < filterDate ? -1 : cellDate > filterDate ? 1 : 0;\n  };\n\n  private onGridReady = (params: GridReadyEvent) => {\n    this.gridApi = params.api;\n    this.columnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n\n    // Sort assessments by opening date, breaking ties by later of closing dates\n    this.columnApi.applyColumnState({\n      state: [\n        { colId: 'openAt', sort: 'desc' },\n        { colId: 'closeAt', sort: 'desc' }\n      ]\n    });\n  };\n\n  private resizeGrid = () => {\n    if (this.gridApi) {\n      this.gridApi.sizeColumnsToFit();\n    }\n  };\n\n  private toggleDropzone = () => {\n    this.setState({ showDropzone: !this.state.showDropzone });\n  };\n}\n\nexport default GroundControl;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  fetchAssessmentOverviews,\n  fetchCourseConfig\n} from '../../../commons/application/actions/SessionActions';\nimport { OverallState } from '../../../commons/application/ApplicationTypes';\nimport {\n  changeDateAssessment,\n  deleteAssessment,\n  publishAssessment,\n  uploadAssessment\n} from '../../../features/groundControl/GroundControlActions';\nimport GroundControl, { DispatchProps, StateProps } from './GroundControl';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  assessmentOverviews: state.session.assessmentOverviews,\n  assessmentConfigurations: state.session.assessmentConfigurations\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleAssessmentChangeDate: changeDateAssessment,\n      handleAssessmentOverviewFetch: fetchAssessmentOverviews,\n      handleDeleteAssessment: deleteAssessment,\n      handleUploadAssessment: uploadAssessment,\n      handlePublishAssessment: publishAssessment,\n      handleFetchCourseConfigs: fetchCourseConfig\n    },\n    dispatch\n  );\n\nconst GroundControlContainer = connect(mapStateToProps, mapDispatchToProps)(GroundControl);\n\nexport default GroundControlContainer;\n","import { Card, Classes, Dialog, H1, InputGroup } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\nimport Recorder from 'yareco';\n\nimport ControlButton from '../../../../commons/ControlButton';\nimport {\n  Input,\n  PlaybackData,\n  RecordingStatus\n} from '../../../../features/sourceRecorder/SourceRecorderTypes';\n\ntype SourcereelControlbarProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleRecordInit: () => void;\n  handleRecordPause: () => void;\n  handleResetInputs: (inputs: Input[]) => void;\n  handleSaveSourcecastData: (\n    title: string,\n    description: string,\n    uid: string,\n    audio: Blob,\n    playbackData: PlaybackData\n  ) => void;\n  handleSetSourcecastData: (\n    title: string,\n    description: string,\n    uid: string,\n    audioUrl: string,\n    playbackData: PlaybackData\n  ) => void;\n  handleSetIsEditorReadonly: (readonly: boolean) => void;\n  handleTimerPause: () => void;\n  handleTimerReset: () => void;\n  handleTimerResume: (timeBefore: number) => void;\n  handleTimerStart: () => void;\n  handleTimerStop: () => void;\n  getTimerDuration: () => number;\n};\n\ntype StateProps = {\n  currentPlayerTime: number;\n  editorValue: string;\n  playbackData: PlaybackData;\n  recordingStatus: RecordingStatus;\n};\n\ntype State = {\n  dialogOpen: boolean;\n  duration: number;\n  fileDataBlob?: Blob;\n  updater?: NodeJS.Timeout;\n  saveTitle: string;\n  saveDescription: string;\n  saveUID: string;\n};\n\nclass SourcereelControlbar extends React.PureComponent<SourcereelControlbarProps, State> {\n  private recorder?: Recorder = undefined;\n\n  constructor(props: SourcereelControlbarProps) {\n    super(props);\n    this.state = {\n      dialogOpen: false,\n      duration: 0,\n      updater: undefined,\n      saveTitle: '',\n      saveDescription: '',\n      saveUID: ''\n    };\n  }\n\n  public async componentDidMount() {\n    Recorder.getPermission().then(\n      () => {},\n      (error: any) => {\n        alert('Microphone not found: ' + error);\n      }\n    );\n  }\n\n  public render() {\n    const RecorderRecordPauseButton = (\n      <ControlButton\n        label=\"Record Pause\"\n        icon={IconNames.SNOWFLAKE}\n        onClick={this.props.handleRecordPause}\n      />\n    );\n    const RecorderPauseButton = (\n      <ControlButton label=\"Pause\" icon={IconNames.PAUSE} onClick={this.handleRecorderPausing} />\n    );\n    const RecorderResumeButton = (\n      <ControlButton label=\"Resume\" icon={IconNames.PLAY} onClick={this.handleRecorderResuming} />\n    );\n    const RecorderResumeFromCurrentButton = (\n      <ControlButton\n        label=\"Resume Here\"\n        icon={IconNames.PLAY}\n        onClick={this.handleRecorderResumingFromCurrent}\n      />\n    );\n    const RecorderStartButton = (\n      <ControlButton label=\"Record\" icon={IconNames.PLAY} onClick={this.handleRecorderStarting} />\n    );\n    const RecorderStopButton = (\n      <ControlButton label=\"Stop\" icon={IconNames.STOP} onClick={this.handleRecorderStopping} />\n    );\n    const RecorderResetButton = (\n      <ControlButton\n        label=\"Reset\"\n        icon={IconNames.REFRESH}\n        onClick={this.handleRecorderResetting}\n      />\n    );\n    const RecorderSaveButton = (\n      <ControlButton label=\"Upload\" icon={IconNames.FLOPPY_DISK} onClick={this.handleOpenDialog} />\n    );\n    return (\n      <div>\n        <Dialog\n          icon=\"info-sign\"\n          isOpen={this.state.dialogOpen}\n          onClose={this.handleCloseDialog}\n          title=\"Upload Sourcecast\"\n          canOutsideClickClose={true}\n        >\n          <div className={Classes.DIALOG_BODY}>\n            <InputGroup\n              id=\"title\"\n              leftIcon={IconNames.HEADER}\n              onChange={this.handleSaveTitleInputChange}\n              placeholder=\"Title\"\n              value={this.state.saveTitle}\n            />\n            <br />\n            <InputGroup\n              id=\"description\"\n              leftIcon={IconNames.LIST_DETAIL_VIEW}\n              onChange={this.handleSaveDescriptionInputChange}\n              placeholder=\"Description\"\n              value={this.state.saveDescription}\n            />\n            <br />\n            <InputGroup\n              id=\"uid\"\n              leftIcon={IconNames.KEY}\n              onChange={this.handleSaveUIDInputChange}\n              placeholder=\"UID (optional, only alphanumeric, dash and underscore allowed)\"\n              value={this.state.saveUID}\n            />\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <ControlButton\n                label=\"Confirm Upload\"\n                icon={IconNames.TICK}\n                onClick={this.handleRecorderSaving}\n              />\n              <ControlButton\n                label=\"Cancel\"\n                icon={IconNames.CROSS}\n                onClick={this.handleCloseDialog}\n              />\n            </div>\n          </div>\n        </Dialog>\n        <br />\n        <div className=\"Timer\">\n          <Card elevation={2} style={{ background: '#24323F' }}>\n            <H1>\n              {this.renderLabel(\n                this.props.recordingStatus !== RecordingStatus.paused\n                  ? this.state.duration / 1000\n                  : this.props.currentPlayerTime\n              )}\n            </H1>\n          </Card>\n        </div>\n        <br />\n        <div className=\"RecorderControl\">\n          {this.props.recordingStatus === RecordingStatus.notStarted && RecorderStartButton}\n          {this.props.recordingStatus === RecordingStatus.paused && RecorderResumeButton}\n          {this.props.recordingStatus === RecordingStatus.paused && RecorderResumeFromCurrentButton}\n          {this.props.recordingStatus === RecordingStatus.recording && RecorderPauseButton}\n          {this.props.recordingStatus === RecordingStatus.recording && RecorderRecordPauseButton}\n          {this.props.recordingStatus === RecordingStatus.paused && RecorderStopButton}\n          {this.props.recordingStatus === RecordingStatus.finished && RecorderSaveButton}\n          {this.props.recordingStatus !== RecordingStatus.notStarted && RecorderResetButton}\n        </div>\n        <br />\n      </div>\n    );\n  }\n\n  private handleCloseDialog = () => this.setState({ dialogOpen: false });\n\n  private handleOpenDialog = () => this.setState({ dialogOpen: true });\n\n  private updateTimerDuration = () => {\n    this.setState({ duration: this.props.getTimerDuration() });\n  };\n\n  private handleTruncatePlaybackData = () => {\n    const truncatedInputs = this.props.playbackData.inputs.filter(\n      deltaWithTime => deltaWithTime.time <= this.props.currentPlayerTime * 1000\n    );\n    this.props.handleResetInputs(truncatedInputs);\n  };\n\n  private handleRecorderPausing = () => {\n    if (!this.recorder) {\n      return;\n    }\n    const { handleSetIsEditorReadonly, handleSetSourcecastData, handleTimerPause } = this.props;\n    clearInterval(this.state.updater!);\n    handleSetIsEditorReadonly(true);\n    handleTimerPause();\n    this.recorder.pause();\n    const audioUrl = window.URL.createObjectURL(this.recorder.exportWAV());\n    handleSetSourcecastData('', '', '', audioUrl, this.props.playbackData);\n  };\n\n  private handleRecorderStarting = () => {\n    this.recorder = new Recorder();\n    const { handleRecordInit, handleSetIsEditorReadonly, handleTimerStart } = this.props;\n    this.recorder.start().then(\n      () => {\n        handleRecordInit();\n        handleSetIsEditorReadonly(false);\n        handleTimerStart();\n        const updater = setInterval(this.updateTimerDuration, 100);\n        this.setState({ updater });\n        // this.recorder.onRecord = (duration: number) => console.log(duration);\n      },\n      (error: any) => {\n        alert('Microphone not found: ' + error);\n      }\n    );\n  };\n\n  private handleRecorderResuming = () => {\n    if (!this.recorder) {\n      return;\n    }\n    const { handleSetIsEditorReadonly, handleTimerResume } = this.props;\n    handleSetIsEditorReadonly(false);\n    // -1 means resume from the end\n    handleTimerResume(-1);\n    const updater = setInterval(this.updateTimerDuration, 100);\n    this.setState({ updater });\n    this.recorder.resume();\n  };\n\n  private handleRecorderResumingFromCurrent = () => {\n    if (!this.recorder) {\n      return;\n    }\n    const { currentPlayerTime, handleSetIsEditorReadonly, handleTimerResume } = this.props;\n    this.handleTruncatePlaybackData();\n    handleSetIsEditorReadonly(false);\n    handleTimerResume(currentPlayerTime * 1000);\n    const updater = setInterval(this.updateTimerDuration, 100);\n    this.setState({ updater });\n    this.recorder.resume(currentPlayerTime);\n  };\n\n  private handleRecorderStopping = () => {\n    if (!this.recorder) {\n      return;\n    }\n    const { handleSetIsEditorReadonly, handleTimerStop } = this.props;\n    handleSetIsEditorReadonly(false);\n    handleTimerStop();\n    clearInterval(this.state.updater!);\n    this.recorder.stop();\n    this.setState({\n      fileDataBlob: this.recorder.exportWAV()\n    });\n    this.recorder.clear();\n  };\n\n  private handleRecorderResetting = () => {\n    const { handleSetIsEditorReadonly, handleTimerReset } = this.props;\n    handleSetIsEditorReadonly(false);\n    handleTimerReset();\n    clearInterval(this.state.updater!);\n    this.setState({ duration: 0 });\n    if (this.recorder) {\n      this.recorder.stop();\n      this.recorder.clear();\n    }\n  };\n\n  private handleRecorderSaving = () => {\n    if (!this.state.fileDataBlob) {\n      alert('No recording found');\n      return;\n    }\n    this.props.handleSaveSourcecastData(\n      this.state.saveTitle,\n      this.state.saveDescription,\n      this.state.saveUID,\n      this.state.fileDataBlob,\n      this.props.playbackData\n    );\n  };\n\n  private renderLabel = (value: number) => {\n    const min = Math.floor(value / 60);\n    const sec = Math.floor(value - min * 60);\n    const minString = min < 10 ? '0' + min : min;\n    const secString = sec < 10 ? '0' + sec : sec;\n    return minString + ':' + secString;\n  };\n\n  private handleSaveTitleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ saveTitle: event.target.value });\n  };\n\n  private handleSaveDescriptionInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ saveDescription: event.target.value });\n  };\n\n  private handleSaveUIDInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ saveUID: event.target.value });\n  };\n}\n\nexport default SourcereelControlbar;\n","import { Classes, Pre } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  beginDebuggerPause,\n  beginInterruptExecution,\n  debuggerReset,\n  debuggerResume\n} from 'src/commons/application/actions/InterpreterActions';\nimport { fetchSourcecastIndex } from 'src/features/sourceRecorder/sourcecast/SourcecastActions';\nimport {\n  saveSourcecastData,\n  setCodeDeltasToApply,\n  setCurrentPlayerTime,\n  setInputToApply,\n  setSourcecastData,\n  setSourcecastDuration\n} from 'src/features/sourceRecorder/SourceRecorderActions';\nimport {\n  deleteSourcecastEntry,\n  recordInit,\n  resetInputs,\n  timerPause,\n  timerReset,\n  timerResume,\n  timerStart,\n  timerStop\n} from 'src/features/sourceRecorder/sourcereel/SourcereelActions';\n\nimport { InterpreterOutput } from '../../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../../commons/application/types/ExternalTypes';\nimport { ControlBarAutorunButtons } from '../../../commons/controlBar/ControlBarAutorunButtons';\nimport { ControlBarChapterSelect } from '../../../commons/controlBar/ControlBarChapterSelect';\nimport { ControlBarClearButton } from '../../../commons/controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../../../commons/controlBar/ControlBarEvalButton';\nimport {\n  convertEditorTabStateToProps,\n  SourcecastEditorContainerProps\n} from '../../../commons/editor/EditorContainer';\nimport SideContentDataVisualizer from '../../../commons/sideContent/SideContentDataVisualizer';\nimport SideContentEnvVisualizer from '../../../commons/sideContent/SideContentEnvVisualizer';\nimport { SideContentTab, SideContentType } from '../../../commons/sideContent/SideContentTypes';\nimport SourceRecorderControlBar, {\n  SourceRecorderControlBarProps\n} from '../../../commons/sourceRecorder/SourceRecorderControlBar';\nimport SourcecastTable from '../../../commons/sourceRecorder/SourceRecorderTable';\nimport Workspace, { WorkspaceProps } from '../../../commons/workspace/Workspace';\nimport {\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeSideContentHeight,\n  clearReplOutput,\n  navigateToDeclaration,\n  promptAutocomplete,\n  setEditorBreakpoint,\n  toggleEditorAutorun,\n  updateReplValue\n} from '../../../commons/workspace/WorkspaceActions';\nimport { EditorTabState, WorkspaceLocation } from '../../../commons/workspace/WorkspaceTypes';\nimport {\n  CodeDelta,\n  Input,\n  KeyboardCommand,\n  PlaybackData,\n  PlaybackStatus,\n  RecordingStatus,\n  SourcecastData\n} from '../../../features/sourceRecorder/SourceRecorderTypes';\nimport SourcereelControlbar from './subcomponents/SourcereelControlbar';\n\ntype SourcereelProps = DispatchProps & StateProps;\n\nexport type DispatchProps = {\n  handleChapterSelect: (chapter: Chapter) => void;\n  handleEditorEval: () => void;\n  handleEditorValueChange: (val: string) => void;\n  handleExternalSelect: (externalLibraryName: ExternalLibraryName) => void;\n  handleRecordInput: (input: Input) => void;\n  handleReplEval: () => void;\n  handleSetIsEditorReadonly: (editorReadonly: boolean) => void;\n  handleSetSourcecastStatus: (PlaybackStatus: PlaybackStatus) => void;\n};\n\nexport type StateProps = {\n  audioUrl: string;\n  currentPlayerTime: number;\n  codeDeltasToApply: CodeDelta[] | null;\n  activeEditorTabIndex: number | null;\n  editorTabs: EditorTabState[];\n  isEditorReadonly: boolean;\n  enableDebugging: boolean;\n  externalLibraryName: ExternalLibraryName;\n  inputToApply: Input | null;\n  isDebugging: boolean;\n  isEditorAutorun: boolean;\n  isRunning: boolean;\n  output: InterpreterOutput[];\n  playbackData: PlaybackData;\n  playbackDuration: number;\n  playbackStatus: PlaybackStatus;\n  recordingStatus: RecordingStatus;\n  replValue: string;\n  timeElapsedBeforePause: number;\n  sideContentHeight?: number;\n  sourcecastIndex: SourcecastData[] | null;\n  sourceChapter: Chapter;\n  sourceVariant: Variant;\n  timeResumed: number;\n  courseId?: number;\n};\n\nconst workspaceLocation: WorkspaceLocation = 'sourcereel';\n\nconst Sourcereel: React.FC<SourcereelProps> = props => {\n  const [selectedTab, setSelectedTab] = useState(SideContentType.sourcereel);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetchSourcecastIndex('sourcecast');\n  }, []);\n\n  useEffect(() => {\n    const { inputToApply } = props;\n\n    if (!inputToApply) {\n      return;\n    }\n\n    switch (inputToApply.type) {\n      case 'activeTabChange':\n        setSelectedTab(inputToApply.data);\n        break;\n      case 'chapterSelect':\n        props.handleChapterSelect(inputToApply.data);\n        break;\n      case 'externalLibrarySelect':\n        props.handleExternalSelect(inputToApply.data);\n        break;\n      case 'forcePause':\n        props.handleSetSourcecastStatus(PlaybackStatus.forcedPaused);\n        break;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.inputToApply]);\n\n  const getTimerDuration = () => props.timeElapsedBeforePause + Date.now() - props.timeResumed;\n\n  const handleRecordInit = () => {\n    const initData: PlaybackData['init'] = {\n      chapter: props.sourceChapter,\n      externalLibrary: props.externalLibraryName as ExternalLibraryName,\n      // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n      editorValue: props.editorTabs[0].value\n    };\n    dispatch(recordInit(initData, workspaceLocation));\n  };\n\n  const handleRecordPause = () =>\n    props.handleRecordInput({\n      time: getTimerDuration(),\n      type: 'forcePause',\n      data: null\n    });\n\n  const editorEvalHandler = () => {\n    props.handleEditorEval();\n    if (props.recordingStatus !== RecordingStatus.recording) {\n      return;\n    }\n    props.handleRecordInput({\n      time: getTimerDuration(),\n      type: 'keyboardCommand',\n      data: KeyboardCommand.run\n    });\n  };\n  const autorunButtons = (\n    <ControlBarAutorunButtons\n      handleDebuggerPause={() => dispatch(beginDebuggerPause(workspaceLocation))}\n      handleDebuggerResume={() => dispatch(debuggerResume(workspaceLocation))}\n      handleDebuggerReset={() => dispatch(debuggerReset(workspaceLocation))}\n      handleEditorEval={editorEvalHandler}\n      handleInterruptEval={() => dispatch(beginInterruptExecution(workspaceLocation))}\n      handleToggleEditorAutorun={() => dispatch(toggleEditorAutorun(workspaceLocation))}\n      isDebugging={props.isDebugging}\n      isEditorAutorun={props.isEditorAutorun}\n      isRunning={props.isRunning}\n      key=\"autorun\"\n    />\n  );\n\n  const chapterSelectHandler = ({ chapter }: { chapter: Chapter }, e: any) => {\n    props.handleChapterSelect(chapter);\n    if (props.recordingStatus !== RecordingStatus.recording) {\n      return;\n    }\n    props.handleRecordInput({\n      time: getTimerDuration(),\n      type: 'chapterSelect',\n      data: chapter\n    });\n  };\n\n  const chapterSelect = (\n    <ControlBarChapterSelect\n      handleChapterSelect={chapterSelectHandler}\n      sourceChapter={props.sourceChapter}\n      sourceVariant={props.sourceVariant}\n      key=\"chapter\"\n    />\n  );\n\n  const clearButton = (\n    <ControlBarClearButton\n      handleReplOutputClear={() => dispatch(clearReplOutput(workspaceLocation))}\n      key=\"clear_repl\"\n    />\n  );\n\n  const evalButton = (\n    <ControlBarEvalButton\n      handleReplEval={props.handleReplEval}\n      isRunning={props.isRunning}\n      key=\"eval_repl\"\n    />\n  );\n\n  const editorContainerProps: SourcecastEditorContainerProps = {\n    ..._.pick(\n      props,\n      'codeDeltasToApply',\n      'handleEditorEval',\n      'handleEditorValueChange',\n      'isEditorAutorun',\n      'inputToApply',\n      'handleRecordInput',\n      'isEditorReadonly'\n    ),\n    editorVariant: 'sourcecast',\n    editorTabs: props.editorTabs.map(convertEditorTabStateToProps),\n    handleDeclarationNavigate: cursorPosition =>\n      dispatch(navigateToDeclaration(workspaceLocation, cursorPosition)),\n    handleEditorUpdateBreakpoints: breakpoints =>\n      dispatch(setEditorBreakpoint(breakpoints, workspaceLocation)),\n    editorSessionId: '',\n    getTimerDuration: getTimerDuration,\n    isPlaying: props.playbackStatus === PlaybackStatus.playing,\n    isRecording: props.recordingStatus === RecordingStatus.recording\n  };\n\n  const activeTabChangeHandler = (activeTab: SideContentType) => {\n    setSelectedTab(activeTab);\n    if (props.recordingStatus !== RecordingStatus.recording) {\n      return;\n    }\n    props.handleRecordInput({\n      time: getTimerDuration(),\n      type: 'activeTabChange',\n      data: activeTab\n    });\n  };\n\n  const workspaceProps: WorkspaceProps = {\n    controlBarProps: {\n      editorButtons: [autorunButtons, chapterSelect]\n    },\n    editorContainerProps: editorContainerProps,\n    handleSideContentHeightChange: heightChange =>\n      dispatch(changeSideContentHeight(heightChange, workspaceLocation)),\n    replProps: {\n      output: props.output,\n      replValue: props.replValue,\n      handleBrowseHistoryDown: () => dispatch(browseReplHistoryDown(workspaceLocation)),\n      handleBrowseHistoryUp: () => dispatch(browseReplHistoryUp(workspaceLocation)),\n      handleReplEval: props.handleReplEval,\n      handleReplValueChange: newValue => dispatch(updateReplValue(newValue, workspaceLocation)),\n      sourceChapter: props.sourceChapter,\n      sourceVariant: props.sourceVariant,\n      externalLibrary: props.externalLibraryName,\n      replButtons: [evalButton, clearButton]\n    },\n    sideBarProps: {\n      tabs: []\n    },\n    sideContentHeight: props.sideContentHeight,\n    sideContentProps: {\n      onChange: activeTabChangeHandler,\n      selectedTabId: selectedTab,\n      /**\n       * NOTE: An ag-grid console warning is shown here on load as the 'Sourcecast Table' tab\n       * is not the default tab, and the ag-grid table inside it has not been rendered.\n       * This is a known issue with ag-grid, and is okay since only staff and admins have\n       * access to Sourcereel. For more info, see issue #1152 in frontend.\n       */\n      tabs: {\n        beforeDynamicTabs: [\n          {\n            label: 'Recording Panel',\n            iconName: IconNames.COMPASS,\n            body: (\n              <div>\n                <span className=\"Multi-line\">\n                  <Pre> {INTRODUCTION} </Pre>\n                </span>\n                <SourcereelControlbar\n                  currentPlayerTime={props.currentPlayerTime}\n                  // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n                  editorValue={props.editorTabs[0].value}\n                  getTimerDuration={getTimerDuration}\n                  playbackData={props.playbackData}\n                  handleRecordInit={handleRecordInit}\n                  handleRecordPause={handleRecordPause}\n                  handleResetInputs={(inputs: Input[]) =>\n                    dispatch(resetInputs(inputs, workspaceLocation))\n                  }\n                  handleSaveSourcecastData={(title, description, uid, audio, playbackData) =>\n                    dispatch(\n                      saveSourcecastData(title, description, uid, audio, playbackData, 'sourcecast')\n                    )\n                  }\n                  handleSetSourcecastData={(title, description, uid, audioUrl, playbackData) =>\n                    dispatch(\n                      setSourcecastData(\n                        title,\n                        description,\n                        uid,\n                        audioUrl,\n                        playbackData,\n                        'sourcecast'\n                      )\n                    )\n                  }\n                  handleSetIsEditorReadonly={props.handleSetIsEditorReadonly}\n                  handleTimerPause={() => dispatch(timerPause(workspaceLocation))}\n                  handleTimerReset={() => dispatch(timerReset(workspaceLocation))}\n                  handleTimerResume={timeBefore =>\n                    dispatch(timerResume(timeBefore, workspaceLocation))\n                  }\n                  handleTimerStart={() => dispatch(timerStart(workspaceLocation))}\n                  handleTimerStop={() => dispatch(timerStop(workspaceLocation))}\n                  recordingStatus={props.recordingStatus}\n                />\n              </div>\n            ),\n            id: SideContentType.sourcereel\n          },\n          {\n            label: 'Sourcecast Table',\n            iconName: IconNames.EDIT,\n            body: (\n              <div>\n                <SourcecastTable\n                  handleDeleteSourcecastEntry={id =>\n                    dispatch(deleteSourcecastEntry(id, 'sourcecast'))\n                  }\n                  sourcecastIndex={props.sourcecastIndex}\n                  courseId={props.courseId}\n                />\n              </div>\n            ),\n            id: SideContentType.introduction\n          },\n          dataVisualizerTab,\n          envVisualizerTab\n        ],\n        afterDynamicTabs: []\n      },\n      workspaceLocation: 'sourcereel'\n    }\n  };\n  const sourcecastControlbarProps: SourceRecorderControlBarProps = {\n    ..._.pick(\n      props,\n      'handleEditorValueChange',\n      'handleSetIsEditorReadonly',\n      'handleSetSourcecastStatus',\n      'audioUrl',\n      'currentPlayerTime',\n      'playbackData',\n      'playbackStatus',\n      'handleChapterSelect',\n      'handleExternalSelect'\n    ),\n    handleSetCurrentPlayerTime: playerTime =>\n      dispatch(setCurrentPlayerTime(playerTime, 'sourcecast')),\n    handleSetCodeDeltasToApply: (deltas: CodeDelta[]) =>\n      dispatch(setCodeDeltasToApply(deltas, 'sourcecast')),\n    handleSetInputToApply: (inputToApply: Input) =>\n      dispatch(setInputToApply(inputToApply, 'sourcecast')),\n    handleSetSourcecastDuration: duration =>\n      dispatch(setSourcecastDuration(duration, 'sourcecast')),\n    handlePromptAutocomplete: (row, col, callback) =>\n      dispatch(promptAutocomplete(workspaceLocation, row, col, callback)),\n    duration: props.playbackDuration\n  };\n  return (\n    <div className={classNames('Sourcereel', Classes.DARK)}>\n      {props.recordingStatus === RecordingStatus.paused ? (\n        <SourceRecorderControlBar {...sourcecastControlbarProps} />\n      ) : undefined}\n      <Workspace {...workspaceProps} />\n    </div>\n  );\n};\n\nconst INTRODUCTION = 'Welcome to Sourcereel!';\n\nconst dataVisualizerTab: SideContentTab = {\n  label: 'Data Visualizer',\n  iconName: IconNames.EYE_OPEN,\n  body: <SideContentDataVisualizer />,\n  id: SideContentType.dataVisualizer\n};\n\nconst envVisualizerTab: SideContentTab = {\n  label: 'Env Visualizer',\n  iconName: IconNames.GLOBE,\n  body: <SideContentEnvVisualizer />,\n  id: SideContentType.envVisualizer\n};\n\nexport default Sourcereel;\n","import { Chapter, Variant } from 'Clang-slang/dist/types';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { OverallState } from '../../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../../commons/application/types/ExternalTypes';\nimport {\n  chapterSelect,\n  evalEditor,\n  evalRepl,\n  externalLibrarySelect,\n  setIsEditorReadonly,\n  updateEditorValue\n} from '../../../commons/workspace/WorkspaceActions';\nimport { WorkspaceLocation } from '../../../commons/workspace/WorkspaceTypes';\nimport { setSourcecastStatus } from '../../../features/sourceRecorder/SourceRecorderActions';\nimport { Input, PlaybackStatus } from '../../../features/sourceRecorder/SourceRecorderTypes';\nimport { recordInput } from '../../../features/sourceRecorder/sourcereel/SourcereelActions';\nimport Sourcereel, { DispatchProps, StateProps } from './Sourcereel';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  audioUrl: state.workspaces.sourcecast.audioUrl,\n  currentPlayerTime: state.workspaces.sourcecast.currentPlayerTime,\n  codeDeltasToApply: state.workspaces.sourcecast.codeDeltasToApply,\n  activeEditorTabIndex: state.workspaces.sourcereel.activeEditorTabIndex,\n  editorTabs: state.workspaces.sourcereel.editorTabs,\n  enableDebugging: state.workspaces.sourcereel.enableDebugging,\n  externalLibraryName: state.workspaces.sourcereel.externalLibrary,\n  inputToApply: state.workspaces.sourcecast.inputToApply,\n  isDebugging: state.workspaces.sourcereel.isDebugging,\n  isEditorAutorun: state.workspaces.sourcereel.isEditorAutorun,\n  isEditorReadonly: state.workspaces.sourcereel.isEditorReadonly,\n  isRunning: state.workspaces.sourcereel.isRunning,\n  output: state.workspaces.sourcereel.output,\n  playbackData: state.workspaces.sourcereel.playbackData,\n  playbackDuration: state.workspaces.sourcecast.playbackDuration,\n  playbackStatus: state.workspaces.sourcecast.playbackStatus,\n  recordingStatus: state.workspaces.sourcereel.recordingStatus,\n  replValue: state.workspaces.sourcereel.replValue,\n  sideContentHeight: state.workspaces.sourcereel.sideContentHeight,\n  sourcecastIndex: state.workspaces.sourcecast.sourcecastIndex,\n  sourceChapter: Chapter.CLANG,\n  sourceVariant: state.workspaces.sourcereel.context.variant,\n  timeElapsedBeforePause: state.workspaces.sourcereel.timeElapsedBeforePause,\n  timeResumed: state.workspaces.sourcereel.timeResumed,\n  courseId: state.session.courseId\n});\n\nconst location: WorkspaceLocation = 'sourcereel';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleChapterSelect: (chapter: Chapter) => chapterSelect(chapter, Variant.DEFAULT, location),\n      handleEditorEval: () => evalEditor(location),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, location),\n      handleExternalSelect: (externalLibraryName: ExternalLibraryName) =>\n        externalLibrarySelect(externalLibraryName, location),\n      handleRecordInput: (input: Input) => recordInput(input, location),\n      handleReplEval: () => evalRepl(location),\n      handleSetSourcecastStatus: (playbackStatus: PlaybackStatus) =>\n        setSourcecastStatus(playbackStatus, 'sourcecast'),\n      handleSetIsEditorReadonly: (readonly: boolean) => setIsEditorReadonly(location, readonly)\n    },\n    dispatch\n  );\n\nconst SourcereelContainer = connect(mapStateToProps, mapDispatchToProps)(Sourcereel);\n\nexport default SourcereelContainer;\n","export enum StorySimState {\n  Default = 'Default',\n  ObjectPlacement = 'ObjectPlacement',\n  AssetUploader = 'AssetUploader',\n  CheckpointSim = 'CheckpointSim',\n  ChapterSim = 'ChapterSim'\n}\n\nexport type ChapterDetail = {\n  id: string;\n  openAt: string;\n  closeAt: string;\n  title: string;\n  filenames: string[];\n  isPublished: boolean;\n  imageUrl: string;\n};\n","import Constants from '../../commons/utils/Constants';\nimport SourceAcademyGame from '../game/SourceAcademyGame';\nimport { courseId } from '../game/utils/GameUtils';\n\nconst sendRequest =\n  (route: string) =>\n  async (\n    requestPath: string,\n    method: string,\n    headerConfig: object = {},\n    requestDetails: object = {}\n  ) => {\n    try {\n      const accessToken = SourceAcademyGame.getInstance().getAccountInfo().accessToken || '';\n\n      const headers = createHeaders(accessToken);\n      Object.entries(headerConfig).forEach(([key, value]: string[]) => {\n        headers.append(key, value);\n      });\n\n      const config = {\n        method,\n        headers,\n        ...requestDetails\n      };\n\n      return fetch(\n        Constants.backendUrl + `/v2/courses/${courseId()}/${route}/` + requestPath,\n        config\n      );\n    } finally {\n    }\n  };\n\nexport const sendAssetRequest = sendRequest(`admin/assets`);\nexport const sendStoryRequest = sendRequest(`stories`);\nexport const sendAdminStoryRequest = sendRequest(`admin/stories`);\n\nexport function createHeaders(accessToken: string): Headers {\n  const headers = new Headers();\n  headers.append('Accept', 'application/json');\n  headers.append('Authorization', `Bearer ${accessToken}`);\n  return headers;\n}\n","import _ from 'lodash';\n\nimport { sendAdminStoryRequest, sendAssetRequest, sendStoryRequest } from './StorySimulatorRequest';\nimport { ChapterDetail } from './StorySimulatorTypes';\n\n/**\n * List of all folders to fetch S3 assets from\n */\nexport const s3AssetFolders = [\n  'locations',\n  'objects',\n  'images',\n  'avatars',\n  'ui',\n  'sfx',\n  'bgm',\n  'stories'\n];\n\nexport function obtainTextAssets(assetPaths: string[]) {\n  return assetPaths\n    .filter(assetPath => assetPath.startsWith('stories') && assetPath.endsWith('txt'))\n    .map(\n      assetPath => assetPath.slice(8) // remove /stories\n    );\n}\n\nexport const fetchTextAssets = async () => obtainTextAssets(await fetchFolder('stories'));\n\n/**\n * Request to fetches assets from all S3 folders\n *\n * @returns {Promise<string[]>} - full concatenated list of files in the given S3 folders\n */\nexport async function fetchAssetPaths(): Promise<string[]> {\n  const files = await Promise.all(\n    s3AssetFolders.map(async folderName => {\n      const files = await fetchFolder(folderName);\n      return files.length ? files : [`${folderName}`];\n    })\n  );\n  return files.reduce((combinedList, newList) => combinedList.concat(newList), []);\n}\n\n/**\n * Request to fetches assets from one S3 folders\n *\n * @param folderName - S3 folder to fetch from\n * @returns {Promise<string[]>} - list of files in S3 folder\n */\nasync function fetchFolder(folderName: string) {\n  const response = await sendAssetRequest(folderName, 'GET', {\n    'Content-Type': 'application/json'\n  });\n  return response.status === 200 ? response.json() : [];\n}\n\n/**\n * Request to delete an S3 file\n *\n * @param assetPath - file path to delete\n * @returns {Promise<string>} - request response\n */\nexport async function deleteS3File(assetPath: string) {\n  const response = await sendAssetRequest(assetPath, 'DELETE');\n  const message = await response.text();\n  return message || 'Successfully Deleted';\n}\n\n/**\n * Request to upload a group of files into a chosen S3 folder\n *\n * @param fileList - the files to upload\n * @param folderName - which folder to upload to\n * @returns {Promise<string>} - Request responses, concatentated together\n */\nexport async function uploadAssetsToS3(fileList: FileList, folderName: string) {\n  const responses = await Promise.all(\n    Array.from(fileList).map(async file => {\n      const response = await uploadAssetToS3(file, folderName);\n      return file.name + ' => ' + response;\n    })\n  );\n  return responses.join('\\n');\n}\n\n/**\n * Uploads just one file into S3 folder\n *\n * @param file - file to delete\n * @param folderName - file path to delete\n * @returns {Promise<string>} - Request response\n */\nexport async function uploadAssetToS3(file: File, folderName: string) {\n  const formData = new FormData();\n  formData.set('upload', file);\n\n  const response = await sendAssetRequest(\n    `${folderName}/${file.name}`,\n    'POST',\n    {},\n    { body: formData, mode: 'cors' }\n  );\n\n  return response ? response.text() : '';\n}\n\n/**\n * Fetches all chapters from the backend\n *\n * @param accessToken - staff access token\n * @returns {Promise<object[]>} - All the chapter objects in a list\n */\nexport async function fetchChapters(): Promise<ChapterDetail[]> {\n  const response = await sendStoryRequest('', 'GET');\n  const chapterDetails = response.status === 200 ? await response.json() : [];\n  return _.sortBy(chapterDetails, (chapterDetail: ChapterDetail) => new Date(chapterDetail.openAt));\n}\n\n/**\n * Creates or updates a chapter\n *\n * @returns {Promise<string>} - Response\n */\nexport async function updateChapterRequest(id: string, body: object) {\n  const response = await sendAdminStoryRequest(\n    id,\n    'POST',\n    {\n      'Content-Type': 'application/json'\n    },\n    {\n      body: JSON.stringify(body)\n    }\n  );\n  return response.status === 200 ? 'Chapter successfully created/updated' : response.text();\n}\n\n/**\n * Creates a chapter\n *\n * @returns {Promise<string>} - Response\n */\nexport async function deleteChapterRequest(id: string) {\n  const response = await sendAdminStoryRequest(id, 'DELETE');\n  return response.status === 204 ? 'Chapter successfully deleted' : response.text();\n}\n","import { Button, InputGroup, Menu, MenuItem, Position } from '@blueprintjs/core';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport React from 'react';\nimport {\n  s3AssetFolders,\n  uploadAssetsToS3\n} from 'src/features/storySimulator/StorySimulatorService';\n\nconst specifyFolderText = 'Specify own folder...';\nconst folderOverwritePlaceholder = \"Or specify your own, e.g. 'locations/hallway'\";\n\n/**\n * This is component allows storywriters to upload any assets into to\n * specific folders into Story Sim's Asset Uploader\n */\nconst AssetFileUploader = () => {\n  const [fileList, setFileList] = React.useState<FileList>();\n  const [uploadFolder, setUploadFolder] = React.useState<string>(s3AssetFolders[0]);\n\n  const [folderOverwrite, setFolderOverwrite] = React.useState<string>();\n  const [showfolderOverwrite, setShowFolderOverwrite] = React.useState<boolean>(false);\n\n  function handleLoadFile(e: any) {\n    if (!e.target.files) return;\n    const loadedFiles = e.target.files;\n    setFileList(loadedFiles);\n  }\n\n  async function handleUploadButtonClick() {\n    const finalFolder = folderOverwrite || uploadFolder;\n    if (!fileList || !finalFolder) return;\n    const response = await uploadAssetsToS3(fileList, finalFolder);\n    alert(response);\n  }\n\n  function handleChangeUploadFolder(e: any) {\n    if (!e.target.innerText) return;\n    setUploadFolder(e.target.innerText);\n    setShowFolderOverwrite(false);\n  }\n\n  function handleChangeFolderOverwrite(e: any) {\n    setFolderOverwrite(e.target.value);\n  }\n\n  function showSpecifyFolder(e: any) {\n    if (!e.target.innerText) return;\n    setUploadFolder(e.target.innerText);\n    setShowFolderOverwrite(true);\n  }\n\n  const uploadButtonPopoverContent = (\n    <Menu>\n      {s3AssetFolders.map(folder => (\n        <MenuItem onClick={handleChangeUploadFolder} id={folder} key={folder} text={folder} />\n      ))}\n      <MenuItem\n        onClick={showSpecifyFolder}\n        id={specifyFolderText}\n        key={specifyFolderText}\n        text={specifyFolderText}\n      ></MenuItem>\n    </Menu>\n  );\n  return (\n    <div className=\"LeftAlign\">\n      <h4>Choose Folder</h4>\n      <Popover2 placement={Position.BOTTOM} content={uploadButtonPopoverContent}>\n        <Button text={uploadFolder} />\n      </Popover2>\n      {showfolderOverwrite && (\n        <InputGroup\n          placeholder={folderOverwritePlaceholder}\n          onChange={handleChangeFolderOverwrite}\n        />\n      )}\n      <br />\n      <h4>Choose File</h4>\n      <input type=\"file\" multiple onChange={handleLoadFile} />\n      <Button onClick={handleUploadButtonClick}>Upload</Button>\n    </div>\n  );\n};\n\nexport default AssetFileUploader;\n","import { ITreeNode } from '@blueprintjs/core';\nimport _ from 'lodash';\n\n/**\n * This function applies a function fn to every node in a blueprint core Tree\n *\n * @param nodes All parent nodes of the blueprint core tree\n * @param fn Function to apply to every element in the tree\n */\nexport function treeMap(nodes: ITreeNode[] | undefined, fn: (node: ITreeNode) => void) {\n  nodes &&\n    nodes.forEach(node => {\n      fn(node);\n      treeMap(node.childNodes, fn);\n    });\n}\n\n/**\n * This function takes a list of filepaths\n * (e.g. [\"locations/hallway/normal.png\", \"locations/hallway/emergency.png\"]) and returns\n * blueprint core tree nodes, where each node represents a folder/file.\n *\n * The child of each folder node are the files/folders inside it.\n *\n * @param assetPaths - a list of all filepaths\n * @param iconRenderer - Function that dictates what JSX Element/icon to render beside\n *                       all blueprint core nodes basded on the file path\n * @param rootFolders - a default list of parent folder names that you want to display regardless of\n *                      whether or not they have contents\n * @returns {ITreeNode[]} - a blueprint core tree parent nodes\n */\nexport function assetPathsToTree(\n  assetPaths: string[],\n  iconRenderer: (pathName: string) => JSX.Element,\n  rootFolders: string[] = []\n): ITreeNode[] {\n  const assetObj = {};\n  assetPaths.forEach(assetPath => _.set(assetObj, assetPath.split('/'), 'FILE'));\n  rootFolders.forEach(folder => {\n    if (!assetObj[folder] || assetObj[folder] === 'FILE') {\n      assetObj[folder] = [];\n    }\n  });\n\n  function helper(parentFolders: string[], assetObj: object | Array<string>): ITreeNode[] {\n    return Object.keys(assetObj).map(file => {\n      const shortPath = '/' + parentFolders.join('/') + '/' + file;\n      return {\n        id: shortPath,\n        label: file,\n        secondaryLabel: iconRenderer(shortPath),\n        childNodes:\n          assetObj[file] === 'FILE' ? undefined : helper([...parentFolders, file], assetObj[file])\n      };\n    });\n  }\n  return helper([], assetObj);\n}\n","import { memo } from 'react';\nimport { Constants } from 'src/features/game/commons/CommonConstants';\nimport { toS3Path } from 'src/features/game/utils/GameUtils';\n\ntype AssetProps = {\n  assetPath: string;\n};\n\n/**\n * This file renders one asset path so that story writers can preview\n * the asset\n *\n * @assetPath - the asset to render/preview\n */\nconst AssetViewer = memo(({ assetPath }: AssetProps) => {\n  const displayAssetPath = assetPath || Constants.defaultAssetPath;\n  return (\n    <>\n      <img\n        alt=\"asset\"\n        crossOrigin={'anonymous'}\n        src={toS3Path(displayAssetPath, !!assetPath)}\n        width=\"150px\"\n        onError={e => {\n          (e.target as any).onerror = null;\n          (e.target as any).src = toS3Path(Constants.defaultAssetPath, false);\n        }}\n      ></img>\n    </>\n  );\n});\n\nexport default AssetViewer;\n","import { Icon, ITreeNode, Tree } from '@blueprintjs/core';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport React from 'react';\nimport { useRequest } from 'src/commons/utils/Hooks';\nimport {\n  deleteS3File,\n  fetchAssetPaths,\n  s3AssetFolders\n} from 'src/features/storySimulator/StorySimulatorService';\n\nimport { assetPathsToTree, treeMap } from './StorySimulatorAssetSelectionHelper';\nimport StorySimulatorAssetViewer from './StorySimulatorAssetViewer';\n\ntype TreeState = {\n  nodes: ITreeNode[];\n};\n\n/**\n * This component provides a preview of all the S3 asset files.\n *\n * When a image is selected, the filename of the image is stored in session storage,\n * so Story Simulator's Object Placement can read the filename and load the image.\n */\nconst StorySimulatorAssetSelection = () => {\n  const { value: assetPaths } = useRequest<string[]>(fetchAssetPaths, []);\n\n  const [currentAsset, setCurrentAsset] = React.useState('');\n  const [assetTree, setAssetTree] = React.useState<TreeState>({ nodes: [] });\n\n  React.useEffect(() => {\n    setAssetTree({ nodes: assetPathsToTree(assetPaths, toolIcons, s3AssetFolders) });\n  }, [assetPaths]);\n\n  const handleNodeClick = (nodeData: ITreeNode) => {\n    treeMap(assetTree.nodes, (node: ITreeNode) => (node.isSelected = false));\n    nodeData.isSelected = !nodeData.isSelected;\n    nodeData.isExpanded = !nodeData.isExpanded;\n    const selectedPath = nodeData.id.toString();\n    if (!nodeData.childNodes) {\n      setCurrentAsset(selectedPath);\n      sessionStorage.setItem('selectedAsset', selectedPath);\n    }\n    setAssetTree({ ...assetTree });\n  };\n\n  return (\n    <>\n      <StorySimulatorAssetViewer assetPath={currentAsset} />\n      <Tree contents={assetTree.nodes} onNodeClick={handleNodeClick} />\n    </>\n  );\n};\n\n/**\n * Tools that are added to asset selection, includes: trash-can delete tool\n *\n * @param filePath the path to asset you want to supply tools for\n * @returns {JSX.Element} A trash can that deletes the file given the asset path\n */\nconst toolIcons = (filePath: string) => (\n  <Tooltip2 content=\"Delete\">\n    <Icon icon=\"trash\" onClick={deleteFile(filePath)} />\n  </Tooltip2>\n);\n\n/**\n * This function deletes an S3 file given the short filepath\n *\n * @param filePath - the file path e.g. \"stories/chapter0.txt\"\n */\nconst deleteFile = (filePath: string) => async () => {\n  const confirm = window.confirm(\n    `Are you sure you want to delete ${filePath}?\\nThere is no undoing this action!`\n  );\n  alert(confirm ? await deleteS3File(filePath) : 'Whew');\n};\n\nexport default StorySimulatorAssetSelection;\n","import { Button } from '@blueprintjs/core';\nimport { arrayMoveImmutable } from 'array-move';\nimport React from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\n\nconst SortableItem = React.memo(\n  SortableElement(({ value }: any) => (\n    <div>\n      <Button>{value}</Button>\n    </div>\n  ))\n);\n\nexport const SortableList = React.memo(\n  SortableContainer(({ items }: any) => {\n    return (\n      <div>\n        {items &&\n          items.map((value: any, index: number) => (\n            <SortableItem key={`item-${value}`} index={index} value={value} />\n          ))}\n      </div>\n    );\n  })\n);\n\nexport const useSortableList = () => {\n  const [items, setItems] = React.useState<string[]>([]);\n\n  const onSortEnd = React.useCallback(({ oldIndex, newIndex }: any) => {\n    setItems(prevState => arrayMoveImmutable(prevState, oldIndex, newIndex));\n  }, []);\n\n  return {\n    items,\n    setItems,\n    onSortEnd\n  };\n};\n","import { Button, Intent, Switch } from '@blueprintjs/core';\nimport { DatePicker } from '@blueprintjs/datetime';\nimport React from 'react';\nimport { getStandardDateTime } from 'src/commons/utils/DateHelper';\nimport { useInput } from 'src/commons/utils/Hooks';\nimport { SortableList, useSortableList } from 'src/commons/utils/SortableList';\nimport SourceAcademyGame from 'src/features/game/SourceAcademyGame';\nimport { toS3Path } from 'src/features/game/utils/GameUtils';\nimport { callGameManagerForSim } from 'src/features/game/utils/TxtLoaderUtils';\nimport {\n  deleteChapterRequest,\n  updateChapterRequest\n} from 'src/features/storySimulator/StorySimulatorService';\nimport { ChapterDetail } from 'src/features/storySimulator/StorySimulatorTypes';\n\nimport { createChapterIndex, inAYear } from './StorySimulatorChapterSim';\n\ntype ChapterSimProps = {\n  chapterDetail: ChapterDetail;\n  checkpointFilenames?: string[];\n};\n\n/**\n * This is the Chapter Editor Form that\n * storywriters use to either create\n * or udpate chapters for the game.\n *\n * @param chapterDetail the starting state of the form,\n *                      either loaded from defaultChapter if user wants to create a new chapter\n *                      or loaded from the existing chapter if user wants to edit the chapter\n * @param checkpointFilenames the list of all checkpoint text files to choose from\n */\nconst ChapterEditor = React.memo(({ chapterDetail, checkpointFilenames }: ChapterSimProps) => {\n  const { id } = chapterDetail;\n  const { value: title, setValue: setTitle, inputProps: titleProps } = useInput('');\n  const { value: imageUrl, setValue: setImageUrl, inputProps: imageUrlProps } = useInput('');\n  const { items: chosenFiles, setItems: setChosenFiles, onSortEnd } = useSortableList();\n\n  const [isPublished, setIsPublished] = React.useState(false);\n  const [openDate, setOpenDate] = React.useState<Date>(new Date());\n  const [txtsNotChosen, setTxtsNotChosen] = React.useState<string[]>([]);\n  const [rerender, setRender] = React.useState(false);\n\n  React.useEffect(() => {\n    setTitle(chapterDetail.title);\n    setImageUrl(chapterDetail.imageUrl);\n    setOpenDate(new Date(chapterDetail.openAt));\n    setChosenFiles(chapterDetail.filenames);\n    setIsPublished(chapterDetail.isPublished);\n    setTxtsNotChosen(\n      (checkpointFilenames || []).filter(textAsset => !chapterDetail.filenames.includes(textAsset))\n    );\n  }, [\n    chapterDetail,\n    setChosenFiles,\n    setImageUrl,\n    setOpenDate,\n    setTitle,\n    checkpointFilenames,\n    rerender\n  ]);\n\n  const deleteAllFromChosen = () => chosenFiles.map(deleteFileFromChosen);\n\n  const deleteFileFromChosen = React.useCallback(\n    (txtFile: string) => {\n      setChosenFiles(prevItemList => prevItemList.filter(item => item !== txtFile));\n      setTxtsNotChosen(prevItemList => [...prevItemList, txtFile]);\n    },\n    [setChosenFiles]\n  );\n\n  const addFileToChosen = React.useCallback(\n    (txtFile: string) => {\n      setChosenFiles(prevItemList => [...prevItemList, txtFile]);\n      setTxtsNotChosen(prevItemList => prevItemList.filter(item => item !== txtFile));\n    },\n    [setChosenFiles]\n  );\n\n  const saveChapter = async () => {\n    const updatedChapter = {\n      openAt: openDate.toISOString(),\n      closeAt: inAYear(openDate).toISOString(),\n      title,\n      filenames: chosenFiles,\n      imageUrl,\n      isPublished\n    };\n\n    const confirm = window.confirm(\n      `Are you sure you want to save changes to ${JSON.stringify(updatedChapter)}`\n    );\n    if (!confirm) {\n      return;\n    }\n    const response =\n      parseInt(id) === createChapterIndex\n        ? await updateChapterRequest('', { story: updatedChapter })\n        : await updateChapterRequest(id, { story: updatedChapter });\n\n    alert(response);\n  };\n\n  const deleteChapter = async () => {\n    const confirm = window.confirm('Are you sure you want to delete this chapter?');\n    if (confirm) {\n      const response = await deleteChapterRequest(id);\n      alert(response);\n    }\n  };\n\n  const clearChanges = () => {\n    const confirm = window.confirm('Are you you want to clear changes for this chapter?');\n    if (confirm) {\n      setRender(!rerender);\n      alert('Cleared changes');\n    }\n  };\n\n  const simulateChapter = async () => {\n    SourceAcademyGame.getInstance().setChapterSimStack(chosenFiles);\n    await callGameManagerForSim();\n  };\n\n  return (\n    <>\n      <h4>\n        Title: <input className=\"bp4-input\" type=\"text\" {...titleProps} />\n      </h4>\n      <b>Open date: </b>\n      {openDate && getStandardDateTime(openDate.toISOString())}\n      <DatePicker\n        onChange={(date: Date) => {\n          date && setOpenDate(date);\n        }}\n      />\n      <h4>\n        Image url: <input className=\"bp4-input\" type=\"text\" {...imageUrlProps} />\n        <Button onClick={(_: any) => window.open(toS3Path(imageUrl, true))}>View</Button>\n      </h4>\n      <b>Checkpoint Txt Files</b>\n      <SortableList items={chosenFiles} onSortEnd={onSortEnd} />\n      <br />\n      {chosenFiles.length > 0 && (\n        <Button icon={'delete'} onClick={deleteAllFromChosen}>\n          Clear checkpoint files\n        </Button>\n      )}\n      <br />\n      <b>All Txt Files</b>\n      {txtsNotChosen &&\n        txtsNotChosen.map(textFile => {\n          return (\n            <div key={`choice-${textFile}`}>\n              <Button onClick={() => addFileToChosen(textFile)} icon={'add'}>\n                {textFile}\n              </Button>\n            </div>\n          );\n        })}\n      <br />\n      <Button icon=\"play\" onClick={simulateChapter}>\n        Simulate Chapter\n      </Button>\n      <br />\n      <br />\n      <Switch\n        checked={isPublished}\n        labelElement={'Published'}\n        onChange={() => setIsPublished(!isPublished)}\n      />\n      <Button onClick={saveChapter}>Save Changes</Button>\n      <Button intent={Intent.WARNING} onClick={clearChanges}>\n        Clear Changes\n      </Button>\n      <br />\n      <br />\n      <Button icon=\"trash\" intent={Intent.DANGER} onClick={deleteChapter}>\n        Delete Chapter\n      </Button>\n    </>\n  );\n});\n\nexport default ChapterEditor;\n","import React from 'react';\nimport { useRequest } from 'src/commons/utils/Hooks';\nimport { fetchChapters, fetchTextAssets } from 'src/features/storySimulator/StorySimulatorService';\nimport { ChapterDetail } from 'src/features/storySimulator/StorySimulatorTypes';\n\nimport StorySimulatorChapterEditor from './StorySimulatorChapterEditor';\n\nexport const inAYear = (date: Date) => {\n  date.setFullYear(date.getFullYear() + 1);\n  return date;\n};\n\nexport const createChapterIndex = -1;\nconst defaultChapter = {\n  id: createChapterIndex,\n  title: 'title goes here',\n  imageUrl: '/locations/telebay/emergency.png',\n  openAt: new Date().toISOString(),\n  closeAt: inAYear(new Date()).toISOString(),\n  isPublished: false,\n  filenames: []\n};\n\n/**\n * This components renders the chapter editor/chapter creator component\n * based on the chapter chosen in the dropdown.\n *\n * @param textAssets - the list of all text assets on S3 to choose from\n */\nconst ChapterSim = React.memo(() => {\n  const { value: textAssets } = useRequest<string[]>(fetchTextAssets, []);\n  const { value: chapters } = useRequest<ChapterDetail[]>(fetchChapters, []);\n\n  const [chosenIndex, setChosenIndex] = React.useState(createChapterIndex);\n\n  return (\n    <>\n      <h3>Chapter Simulator</h3>\n      <select className=\"bp4-menu\" onChange={(e: any) => setChosenIndex(e.target.value)}>\n        {chapters.map((chapter, chapterIndex) => (\n          <option value={chapterIndex} key={chapterIndex}>\n            {`Chapter ${chapterIndex}: ${chapter.title}`}\n          </option>\n        ))}\n        <option value={createChapterIndex} key={createChapterIndex}>\n          {`Create new chapter`}\n        </option>\n      </select>\n      <hr />\n      <StorySimulatorChapterEditor\n        chapterDetail={chapters[chosenIndex] || defaultChapter}\n        checkpointFilenames={textAssets}\n      />\n    </>\n  );\n});\nexport default ChapterSim;\n","import FontAssets from 'src/features/game/assets/FontAssets';\nimport { screenSize } from 'src/features/game/commons/CommonConstants';\nimport { BitmapFontStyle } from 'src/features/game/commons/CommonTypes';\n\nexport const mainMenuOptStyle: BitmapFontStyle = {\n  key: FontAssets.zektonDarkFont.key,\n  size: 35,\n  align: Phaser.GameObjects.BitmapText.ALIGN_CENTER\n};\n\nconst SSMainMenuConstants = {\n  maxOptButtonsRow: 2,\n  optButton: { xSpace: screenSize.x * 0.9, ySpace: screenSize.y * 0.5 },\n  gameTxtStorageName: {\n    defaultChapter: 'defaultChapter',\n    checkpointTxt: 'checkpointTxt'\n  }\n};\n\nexport default SSMainMenuConstants;\n","import 'ace-builds/webpack-resolver';\n\nimport { Button, Tab, Tabs } from '@blueprintjs/core';\nimport React from 'react';\nimport { toTxtPath } from 'src/features/game/assets/TextAssets';\nimport { toS3Path } from 'src/features/game/utils/GameUtils';\n\ntype Props = {\n  storageName: string;\n  s3TxtFiles: string[];\n};\n\n/**\n * This component enables story writers to upload their txt file contents\n * to the browser, or load a file from S3 and store the txt contents\n * in the browser. So that GameManager can read from these txt files\n *\n * @param storageName the field in browser storage where the loaded/fetched txt files get stored temporarily\n * @param s3TxtFiles the list of S3 txt files to choose from\n */\nfunction CheckpointTxtLoader({ storageName, s3TxtFiles }: Props) {\n  const [chosenFilename, setChosenFilename] = React.useState(s3TxtFiles[0]);\n\n  function onLoadTxt(e: any) {\n    if (!e.target.files) return;\n    const [file] = e.target.files;\n    loadFileLocally(storageName, file);\n  }\n\n  async function changeChosenFilename(e: any) {\n    const filename = e.target.value;\n    setChosenFilename(filename);\n    const response = await fetch(toS3Path(`/stories/${filename}`, true), {\n      headers: createHeadersWithCors()\n    });\n    const txt = await response.text();\n    sessionStorage.setItem(storageName, txt);\n  }\n\n  const uploadButton = <input type=\"file\" onChange={onLoadTxt} style={{ width: '250px' }} />;\n\n  const chooseS3Txt = (\n    <>\n      <select className=\"bp4-menu\" onChange={changeChosenFilename}>\n        {s3TxtFiles.map(file => (\n          <option value={file} key={file}>\n            {file}\n          </option>\n        ))}\n      </select>\n      <Button icon={'download'} onClick={() => window.open(toTxtPath(chosenFilename))} />\n    </>\n  );\n\n  return (\n    <div className=\"LeftAlign\">\n      <hr />\n      <Tabs id=\"Tabs\" key=\"vertical\" renderActiveTabPanelOnly={true}>\n        <Tab id=\"own\" title=\"Local\" panel={uploadButton} />\n        <Tab id=\"s3\" title=\"S3\" panel={chooseS3Txt} />\n      </Tabs>\n      <hr />\n    </div>\n  );\n}\n\nconst loadFileLocally = (storageName: string, txtFile: File) => {\n  const reader = new FileReader();\n  reader.readAsText(txtFile);\n  reader.onloadend = _ => {\n    if (!reader.result) {\n      return;\n    }\n    sessionStorage.setItem(storageName, reader.result.toString());\n  };\n};\n\nexport default CheckpointTxtLoader;\n\nfunction createHeadersWithCors(): Headers {\n  const headers = new Headers();\n  headers.append('Access-Control-Allow-Origin', '*');\n  return headers;\n}\n","import { Button } from '@blueprintjs/core';\nimport { useRequest } from 'src/commons/utils/Hooks';\nimport SourceAcademyGame from 'src/features/game/SourceAcademyGame';\nimport MainMenu from 'src/features/storySimulator/scenes/mainMenu/MainMenu';\nimport mainMenuConstants from 'src/features/storySimulator/scenes/mainMenu/MainMenuConstants';\nimport { fetchTextAssets } from 'src/features/storySimulator/StorySimulatorService';\n\nimport CheckpointTxtLoader from './StorySimulatorCheckpointTxtLoader';\n\n/**\n * This component helps one simulate a checkpoint by\n * supplying two txt files - the default txt file\n * and the checkpoint txt file\n *\n * @param textAssets these are the list of text files on S3, if storywriter's simulation\n *                   involves S3 text files.\n */\nexport default function CheckpointSim() {\n  const { value: textAssets } = useRequest<string[]>(fetchTextAssets, []);\n\n  function simulateCheckpoint() {\n    (SourceAcademyGame.getInstance().getCurrentSceneRef() as MainMenu).simulateCheckpoint();\n  }\n\n  return (\n    <>\n      <h3>Checkpoint Text Loader</h3>\n      <b>Step 1: Choose default checkpoint</b>\n      <CheckpointTxtLoader\n        s3TxtFiles={textAssets}\n        storageName={mainMenuConstants.gameTxtStorageName.defaultChapter}\n      />\n      <b>Step 2: Choose checkpoint text</b>\n      <CheckpointTxtLoader\n        s3TxtFiles={textAssets}\n        storageName={mainMenuConstants.gameTxtStorageName.checkpointTxt}\n      />\n      <br />\n      <Button onClick={simulateCheckpoint} icon=\"play\">\n        Simulate Checkpoint\n      </Button>\n      <br />\n      <br />\n      <Button onClick={clearSessionStorage}>Reset All Files</Button>\n      <br />\n    </>\n  );\n}\n\nfunction clearSessionStorage(e: any) {\n  sessionStorage.setItem(mainMenuConstants.gameTxtStorageName.checkpointTxt, '');\n  sessionStorage.setItem(mainMenuConstants.gameTxtStorageName.defaultChapter, '');\n}\n","import { AssetMap, AssetType, ImageAsset } from 'src/features/game/assets/AssetsTypes';\n\nconst SSImageAssets: AssetMap<ImageAsset> = {\n  storySimBg: {\n    type: AssetType.Image,\n    key: 'student-room',\n    path: '/locations/deathCube_ext/shields-down.png'\n  },\n  shortButton: { type: AssetType.Image, key: 'short-button', path: '/ui/shortButton.png' },\n  invertedButton: {\n    type: AssetType.Image,\n    key: 'inverted-button',\n    path: '/ui/invertedColorButton.png'\n  },\n  blueUnderlay: { type: AssetType.Image, key: 'blue-underlay', path: '/ui/blueUnderlay.png' },\n  topButton: { type: AssetType.Image, key: 'top-button', path: '/ui/topButton.png' },\n  colorIcon: { type: AssetType.Image, key: 'color-icon', path: '/ui/colorIcon.png' },\n  imageIcon: { type: AssetType.Image, key: 'image-icon', path: '/ui/imageIcon.png' },\n  bboxIcon: { type: AssetType.Image, key: 'bbox-icon', path: '/ui/bboxIcon.png' },\n  handIcon: { type: AssetType.Image, key: 'hand-icon', path: '/ui/handIcon.png' },\n  listIcon: { type: AssetType.Image, key: 'list-icon', path: '/ui/listIcon.png' },\n  eraseIcon: { type: AssetType.Image, key: 'erase-icon', path: '/ui/eraserIcon.png' },\n  iconBg: { type: AssetType.Image, key: 'icon-bg', path: '/ui/modeIconBg.png' }\n};\n\nexport default SSImageAssets;\n","import FontAssets from 'src/features/game/assets/FontAssets';\nimport ImageAssets from 'src/features/game/assets/ImageAssets';\nimport SoundAssets from 'src/features/game/assets/SoundAssets';\nimport { screenCenter, screenSize } from 'src/features/game/commons/CommonConstants';\nimport { addLoadingScreen } from 'src/features/game/effects/LoadingScreen';\nimport GameLayerManager from 'src/features/game/layer/GameLayerManager';\nimport { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport Parser from 'src/features/game/parser/Parser';\nimport SourceAcademyGame from 'src/features/game/SourceAcademyGame';\nimport { createButton } from 'src/features/game/utils/ButtonUtils';\nimport { mandatory, toS3Path } from 'src/features/game/utils/GameUtils';\nimport { calcTableFormatPos } from 'src/features/game/utils/StyleUtils';\n\nimport SSImageAssets from '../../assets/ImageAssets';\nimport { StorySimState } from '../../StorySimulatorTypes';\nimport mainMenuConstants, { mainMenuOptStyle } from './MainMenuConstants';\n\n/**\n * Entry point for story simulator.\n *\n * User can access different story simulator\n * functionalities from here.\n */\nclass MainMenu extends Phaser.Scene {\n  private layerManager?: GameLayerManager;\n\n  constructor() {\n    super('StorySimulatorMenu');\n  }\n\n  public preload() {\n    SourceAcademyGame.getInstance().setCurrentSceneRef(this);\n    this.layerManager = new GameLayerManager(this);\n\n    addLoadingScreen(this);\n    Object.values(ImageAssets).forEach(asset =>\n      this.load.image(asset.key, toS3Path(asset.path, false))\n    );\n    Object.values(SSImageAssets).forEach(asset =>\n      this.load.image(asset.key, toS3Path(asset.path, false))\n    );\n    Object.values(FontAssets).forEach(asset =>\n      this.load.bitmapFont(asset.key, asset.pngPath, asset.fntPath)\n    );\n    SourceAcademyGame.getInstance().getSoundManager().loadSoundAssetMap(SoundAssets);\n  }\n\n  public async create() {\n    if (SourceAcademyGame.getInstance().getAccountInfo().role === 'student') {\n      console.log('Students cannot use story sim');\n      return;\n    }\n    this.renderBackground();\n    this.renderOptionButtons();\n  }\n\n  private renderOptionButtons() {\n    const optionsContainer = new Phaser.GameObjects.Container(this, 0, 0);\n    const buttons = this.getOptionButtons();\n\n    const buttonPositions = calcTableFormatPos({\n      numOfItems: buttons.length,\n      maxXSpace: mainMenuConstants.optButton.xSpace,\n      maxYSpace: mainMenuConstants.optButton.ySpace,\n      numItemLimit: mainMenuConstants.maxOptButtonsRow,\n      redistributeLast: true\n    });\n\n    optionsContainer.add(\n      buttons.map((button, index) =>\n        this.createOptButton(\n          button.text,\n          buttonPositions[index][0],\n          buttonPositions[index][1],\n          button.callback\n        )\n      )\n    );\n    this.getLayerManager().addToLayer(Layer.UI, optionsContainer);\n  }\n\n  private getOptionButtons() {\n    return [\n      {\n        text: 'Object Placement',\n        callback: () => {\n          SourceAcademyGame.getInstance().setStorySimState(StorySimState.ObjectPlacement);\n          this.getLayerManager().clearAllLayers();\n          this.scene.start('ObjectPlacement');\n        }\n      },\n      {\n        text: 'Checkpoint Simulator',\n        callback: () => {\n          SourceAcademyGame.getInstance().setStorySimState(StorySimState.CheckpointSim);\n        }\n      },\n      {\n        text: 'Asset Uploader',\n        callback: () => {\n          SourceAcademyGame.getInstance().setStorySimState(StorySimState.AssetUploader);\n        }\n      },\n      {\n        text: 'Chapter Simulator',\n        callback: () => {\n          SourceAcademyGame.getInstance().setStorySimState(StorySimState.ChapterSim);\n        }\n      }\n    ];\n  }\n\n  private createOptButton(text: string, xPos: number, yPos: number, callback: any) {\n    return createButton(this, {\n      assetKey: SSImageAssets.invertedButton.key,\n      message: text,\n      textConfig: { x: 0, y: 0, oriX: 0.5, oriY: 0.5 },\n      bitMapTextStyle: mainMenuOptStyle,\n      onUp: callback\n    }).setPosition(xPos, yPos);\n  }\n\n  public simulateCheckpoint() {\n    const defaultChapterText =\n      sessionStorage.getItem(mainMenuConstants.gameTxtStorageName.defaultChapter) || '';\n    const checkpointTxt =\n      sessionStorage.getItem(mainMenuConstants.gameTxtStorageName.checkpointTxt) || '';\n    if (defaultChapterText === '' && checkpointTxt === '') {\n      return;\n    }\n\n    this.getLayerManager().clearAllLayers();\n\n    Parser.parse(defaultChapterText);\n    if (checkpointTxt) {\n      Parser.parse(checkpointTxt, true);\n    }\n    const gameCheckpoint = Parser.checkpoint;\n\n    this.scene.start('GameManager', {\n      gameCheckpoint,\n      chapterNum: -1,\n      checkpointNum: -1\n    });\n  }\n\n  private renderBackground() {\n    const backgroundImg = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      SSImageAssets.storySimBg.key\n    );\n    backgroundImg.setDisplaySize(screenSize.x, screenSize.y);\n    const backgroundUnderlay = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      SSImageAssets.blueUnderlay.key\n    ).setAlpha(0.5);\n    this.getLayerManager().addToLayer(Layer.Background, backgroundImg);\n    this.getLayerManager().addToLayer(Layer.Background, backgroundUnderlay);\n  }\n  public getLayerManager = () => mandatory(this.layerManager);\n}\n\nexport default MainMenu;\n","import { screenCenter } from 'src/features/game/commons/CommonConstants';\nimport { AssetKey } from 'src/features/game/commons/CommonTypes';\nimport { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport { mandatory, toS3Path } from 'src/features/game/utils/GameUtils';\n\nimport { loadImage } from '../../game/utils/LoaderUtils';\nimport ObjectPlacement from '../scenes/ObjectPlacement/ObjectPlacement';\n\n/**\n * This manager manages the background for Story Simulator's Object Placement scene\n * It handles (1) storing of information on the chosen background (2) Rendering background\n */\nexport default class SSBackgroundManager {\n  private backgroundAssetPath: string | undefined;\n  private objectPlacement: ObjectPlacement | undefined;\n  public x: number;\n  public y: number;\n\n  public constructor() {\n    this.x = screenCenter.x;\n    this.y = screenCenter.y;\n  }\n\n  public initialise(objectPlacement: ObjectPlacement) {\n    this.objectPlacement = objectPlacement;\n  }\n\n  /**\n   * Loads the background if the chosen file comes from the\n   * locations folder\n   *\n   * And records the short path of the background image\n   */\n  public async loadBackground() {\n    const shortPath = sessionStorage.getItem('selectedAsset');\n    if (!shortPath || !shortPath.startsWith('/locations/')) {\n      return;\n    }\n    this.backgroundAssetPath = shortPath;\n\n    const backgroundAssetKey = `!${shortPath}`;\n    this.getObjectPlacement().addAsset(backgroundAssetKey, shortPath);\n\n    const assetKeyOnLoad = await loadImage(\n      this.getObjectPlacement(),\n      backgroundAssetKey,\n      toS3Path(shortPath, true)\n    );\n    this.renderBackground(assetKeyOnLoad);\n  }\n\n  private renderBackground(backgroundAssetKey: AssetKey) {\n    if (backgroundAssetKey[0] !== '!') {\n      return;\n    }\n\n    this.getObjectPlacement().getLayerManager().clearLayerContents(Layer.Background);\n    const backgroundSprite = new Phaser.GameObjects.Image(\n      this.getObjectPlacement(),\n      screenCenter.x,\n      screenCenter.y,\n      backgroundAssetKey\n    ).setInteractive();\n    this.getObjectPlacement().getLayerManager().addToLayer(Layer.Background, backgroundSprite);\n  }\n\n  private getObjectPlacement = () => mandatory(this.objectPlacement);\n\n  public getBackgroundAssetPath() {\n    return this.backgroundAssetPath;\n  }\n\n  public screenLog() {\n    return this.backgroundAssetPath + '\\n';\n  }\n}\n","export enum CursorMode {\n  DrawBBox,\n  DragResizeObj\n}\n","import { ItemId } from 'src/features/game/commons/CommonTypes';\nimport { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport { mandatory } from 'src/features/game/utils/GameUtils';\nimport { resize } from 'src/features/game/utils/SpriteUtils';\nimport StringUtils from 'src/features/game/utils/StringUtils';\nimport { HexColor } from 'src/features/game/utils/StyleUtils';\n\nimport { CursorMode } from '../cursorMode/SSCursorModeTypes';\nimport { ICheckpointLoggable } from '../logger/SSLogManagerTypes';\nimport ObjectPlacement from '../scenes/ObjectPlacement/ObjectPlacement';\nimport { SSBBoxDetail } from './SSBBoxManagerTypes';\n\n/**\n * This manager manages the bounding boxes for Story Simulator's Object Placement scene\n *\n * It handles:\n * (1) Storing of information on bounding boxes\n * (2) Creation of bboxes using mouse drag\n * (3) Rendering of bboxes as translucent white boxes\n */\nexport default class SSBBoxManager implements ICheckpointLoggable {\n  public checkpointTitle = 'boundingBoxes';\n\n  private objectPlacement: ObjectPlacement | undefined;\n  private bboxBeingDrawn: Phaser.GameObjects.Rectangle | undefined;\n  private startingCoordinates: number[] | undefined;\n  private bboxDetailMap: Map<ItemId, SSBBoxDetail>;\n\n  constructor() {\n    this.bboxDetailMap = new Map<ItemId, SSBBoxDetail>();\n  }\n\n  public initialise(objectPlacement: ObjectPlacement) {\n    this.objectPlacement = objectPlacement;\n    this.addBBoxListeners(objectPlacement);\n  }\n\n  /**\n   * Adds pointer up and down listener on the object placement scene\n   * in order to draw bboxes when the mode is bbox draw-mode\n   *\n   * Pointer down causes bbox to be drawn\n   * Pointer up stops a bbox from being drawn\n   *\n   * @param objectPlacement the object placement scene\n   */\n  private addBBoxListeners(objectPlacement: ObjectPlacement) {\n    this.getObjectPlacement()\n      .getInputManager()\n      .registerEventListener('pointerdown', () => {\n        if (this.getObjectPlacement().isCursorMode(CursorMode.DrawBBox)) {\n          this.bboxBeingDrawn = this.createNewBBox();\n        }\n      });\n\n    this.getObjectPlacement()\n      .getInputManager()\n      .registerEventListener('pointerup', () => {\n        if (this.getObjectPlacement().isCursorMode(CursorMode.DrawBBox) && this.bboxBeingDrawn) {\n          if (this.bboxBeingDrawn.displayWidth <= 2 || this.bboxBeingDrawn.displayHeight <= 2) {\n            this.bboxBeingDrawn.destroy();\n            return;\n          }\n          this.bboxBeingDrawn.x += this.bboxBeingDrawn.displayWidth / 2;\n          this.bboxBeingDrawn.y += this.bboxBeingDrawn.displayHeight / 2;\n          this.bboxBeingDrawn.setOrigin(0.5);\n          this.registerBBox(this.bboxBeingDrawn);\n\n          objectPlacement.input.setDraggable(this.bboxBeingDrawn);\n          this.getObjectPlacement().setActiveSelection(this.bboxBeingDrawn);\n\n          this.startingCoordinates = undefined;\n          this.bboxBeingDrawn = undefined;\n        }\n      });\n  }\n\n  /**\n   * Draws a new bbox whose center is the center\n   * created by the dragged bbox\n   */\n  private createNewBBox() {\n    const [x, y] = this.getObjectPlacement().getCoordinates();\n    const bboxBeingDrawn = new Phaser.GameObjects.Rectangle(\n      this.getObjectPlacement(),\n      x,\n      y,\n      1,\n      1,\n      HexColor.white\n    )\n      .setOrigin(0)\n      .setAlpha(0.1)\n      .setInteractive()\n      .setDataEnabled();\n\n    this.startingCoordinates = [x, y];\n    this.getObjectPlacement().getLayerManager().addToLayer(Layer.BBox, bboxBeingDrawn);\n    return bboxBeingDrawn;\n  }\n\n  /**\n   * Memorises the dimensions and coordinates of the drawn\n   * bbox and stores this information\n   */\n  private registerBBox(bboxSprite: Phaser.GameObjects.Rectangle) {\n    const itemId = 'bbox' + this.getObjectPlacement().generateItemIdNumber();\n\n    const objectDetail: SSBBoxDetail = {\n      id: itemId,\n      x: bboxSprite.x,\n      y: bboxSprite.y,\n      width: bboxSprite.displayWidth,\n      height: bboxSprite.displayHeight\n    };\n\n    this.bboxDetailMap.set(itemId, objectDetail);\n\n    bboxSprite.data.set('itemId', itemId);\n    bboxSprite.data.set('type', 'bbox');\n  }\n\n  /**\n   * Returns an array of bounding box details for logging information\n   * into info-boxes by LOg Manager\n   */\n  public getLoggables() {\n    return [...this.bboxDetailMap.values()];\n  }\n\n  public getItemById(itemId: ItemId) {\n    return this.bboxDetailMap.get(itemId);\n  }\n\n  private getObjectPlacement = () => mandatory(this.objectPlacement);\n\n  /**\n   * This function resizes the bbox that is currently being drawn,\n   * so that users can see the effects of drawing a rectangle in real-time.\n   *\n   * @param objectPlacement the bbox being drawn\n   */\n  public resizeWhileBeingDrawn(objectPlacement: ObjectPlacement) {\n    if (\n      !this.getObjectPlacement().isCursorMode(CursorMode.DrawBBox) ||\n      !this.startingCoordinates ||\n      !this.bboxBeingDrawn\n    ) {\n      return;\n    }\n    const [startX, startY] = this.startingCoordinates;\n    const currentX = objectPlacement.input.x;\n    const currentY = objectPlacement.input.y;\n    resize(this.bboxBeingDrawn, currentX - startX, currentY - startY);\n  }\n\n  /**\n   * This function is called when printing the checkpoint text file\n   *\n   * Provides the array of strings that are associated with the `boundingBoxes` entity\n   * that are printed within the location paragraph.\n   */\n  public checkpointTxtLog() {\n    const map: string[] = [];\n    this.bboxDetailMap.forEach((bboxDetail: SSBBoxDetail) => {\n      const bboxDetailArray = [\n        '+' + bboxDetail.id,\n        StringUtils.toIntString(bboxDetail.x),\n        StringUtils.toIntString(bboxDetail.y),\n        StringUtils.toIntString(bboxDetail.width),\n        StringUtils.toIntString(bboxDetail.height)\n      ];\n\n      map.push(bboxDetailArray.join(', '));\n      map.push('    show_dialogue*(click)');\n    });\n    return map;\n  }\n\n  /**\n   * This function receives any transformation updates on bboxes\n   * from Transformation manager and stores information internally in its `bboxDetailMap`\n   *\n   * @param gameObject bounding box being updated\n   * @param attribute attributes being updated for that bbox\n   * @param value value to set this attribute to\n   */\n  public setAttribute(\n    gameObject: Phaser.GameObjects.Rectangle | Phaser.GameObjects.Image,\n    attribute: string,\n    value: number\n  ) {\n    const itemId = gameObject.data.get('itemId');\n    const bboxDetail = this.bboxDetailMap.get(itemId);\n    if (!bboxDetail) return;\n    bboxDetail[attribute] = value;\n  }\n\n  public deleteAll() {\n    this.bboxDetailMap.clear();\n  }\n\n  public delete(gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle) {\n    const itemId = gameObject.data.get('itemId');\n    this.bboxDetailMap.delete(itemId);\n  }\n}\n","const iconBgSize = 55;\n\nconst SSCursorModeConstants = {\n  icon: { bgSize: iconBgSize, size: 40, yInterval: 15 },\n  alpha: { inactive: 0.7, hover: 1.0, active: 0.9 }\n};\n\nexport default SSCursorModeConstants;\n","import { Constants } from 'src/features/game/commons/CommonConstants';\nimport CommonTextHover from 'src/features/game/commons/CommonTextHover';\nimport { AssetKey } from 'src/features/game/commons/CommonTypes';\nimport { createButton } from 'src/features/game/utils/ButtonUtils';\n\nimport SSImageAssets from '../assets/ImageAssets';\nimport SSCursorModeConstants from './SSCursorModeConstants';\nimport { CursorMode } from './SSCursorModeTypes';\n\n/**\n * This manager manages rendering of the cursor mode icons\n * and manages which SS cursor mode is activated\n */\nexport default class SSCursorMode extends Phaser.GameObjects.Container {\n  private isModes: Array<boolean>;\n  private currCursorMode: CursorMode;\n  private cursorModes: Array<Phaser.GameObjects.Container>;\n  private currActiveModeIdx: number;\n\n  constructor(\n    scene: Phaser.Scene,\n    x?: number,\n    y?: number,\n    defaultCursorMode: CursorMode = CursorMode.DragResizeObj\n  ) {\n    super(scene, x, y);\n    this.currCursorMode = defaultCursorMode;\n    this.isModes = new Array<boolean>();\n    this.cursorModes = new Array<Phaser.GameObjects.Container>();\n    this.currActiveModeIdx = Constants.nullSequenceNumber;\n  }\n\n  public getCurrCursorMode() {\n    return this.currCursorMode;\n  }\n\n  public setCursorMode(newMode: CursorMode) {\n    this.currCursorMode = newMode;\n  }\n\n  public addCursorMode(\n    scene: Phaser.Scene,\n    assetKey: AssetKey,\n    isMode: boolean = true,\n    text: string = '',\n    onClick: () => void = Constants.nullFunction,\n    onHover: () => void = Constants.nullFunction,\n    onOut: () => void = Constants.nullFunction\n  ) {\n    // Main container\n    const cursorModeContainer = new Phaser.GameObjects.Container(scene, 0, 0);\n\n    // Update\n    this.isModes.push(isMode);\n    this.cursorModes.push(cursorModeContainer);\n    const currIdx = this.cursorModes.length - 1;\n\n    // On hover text container\n    const hoverText = new CommonTextHover(scene, 0, 0, text);\n\n    const onUp = () => {\n      if (this.isModes[currIdx]) this.currActiveModeIdx = currIdx;\n      onClick();\n      this.renderCursorModesContainer();\n    };\n\n    const onHoverWrapper = () => {\n      if (text !== '') hoverText.setVisible(true);\n      cursorModeContainer.setAlpha(SSCursorModeConstants.alpha.hover);\n      onHover();\n    };\n\n    const onOutWrapper = () => {\n      hoverText.setVisible(false);\n      const activeMode = currIdx === this.currActiveModeIdx && this.isModes[currIdx];\n      cursorModeContainer.setAlpha(\n        activeMode ? SSCursorModeConstants.alpha.active : SSCursorModeConstants.alpha.inactive\n      );\n      onOut();\n    };\n\n    const modeButton = createButton(scene, {\n      assetKey: SSImageAssets.iconBg.key,\n      onUp: onUp,\n      onHover: onHoverWrapper,\n      onOut: onOutWrapper,\n      onPointerMove: (pointer: Phaser.Input.Pointer) => {\n        hoverText.x = pointer.x - cursorModeContainer.x - 100;\n        hoverText.y = pointer.y - cursorModeContainer.y - 100;\n      },\n      onHoverEffect: false\n    });\n\n    // Icon\n    const modeIcon = new Phaser.GameObjects.Sprite(scene, 0, 0, assetKey).setDisplaySize(\n      SSCursorModeConstants.icon.size,\n      SSCursorModeConstants.icon.size\n    );\n\n    modeButton.add(modeIcon);\n\n    cursorModeContainer.add([modeButton, hoverText]);\n  }\n\n  public renderCursorModesContainer() {\n    this.removeAll(false);\n    let spacing = 0;\n    this.cursorModes.forEach((mode, index) => {\n      mode.setPosition(0, spacing);\n      const activeMode = index === this.currActiveModeIdx && this.isModes[index];\n      mode.setAlpha(\n        activeMode ? SSCursorModeConstants.alpha.active : SSCursorModeConstants.alpha.inactive\n      );\n      this.add(mode);\n      spacing += SSCursorModeConstants.icon.bgSize + SSCursorModeConstants.icon.yInterval;\n    });\n  }\n}\n","import FontAssets from 'src/features/game/assets/FontAssets';\nimport { BitmapFontStyle } from 'src/features/game/commons/CommonTypes';\n\nexport const loggableStyle: BitmapFontStyle = {\n  key: FontAssets.zektonFont.key,\n  size: 27,\n  align: Phaser.GameObjects.BitmapText.ALIGN_LEFT\n};\n","import { AssetPath } from 'src/features/game/commons/CommonTypes';\n\nexport function getIdFromShortPath(shortPath: AssetPath) {\n  return shortPath.split('/').pop()!.split('.')[0];\n}\n\nexport const padWithTab = (str: string) => '    ' + str;\n","import { AssetPath } from 'src/features/game/commons/CommonTypes';\nimport { mandatory } from 'src/features/game/utils/GameUtils';\nimport StringUtils from 'src/features/game/utils/StringUtils';\nimport { HexColor } from 'src/features/game/utils/StyleUtils';\nimport { createBitmapText } from 'src/features/game/utils/TextUtils';\n\nimport ObjectPlacement from '../scenes/ObjectPlacement/ObjectPlacement';\nimport { loggableStyle } from './SSLogConstants';\nimport { getIdFromShortPath, padWithTab } from './SSLogManagerHelper';\nimport { ICheckpointLoggable, IScreenLoggable } from './SSLogManagerTypes';\n\n/**\n * This manager manages 2 types of logging\n *\n * (1) On-screen logging of coordinates and asset paths\n * (2) Printing of asset texts onto console\n */\nexport default class SSLogManager {\n  private detailMapContainer: Phaser.GameObjects.Container | undefined;\n  private objectPlacement: ObjectPlacement | undefined;\n\n  public initialise(objectPlacement: ObjectPlacement) {\n    this.objectPlacement = objectPlacement;\n  }\n\n  /**\n   * Prints the checkpoint text file generated onto the console\n   *\n   * @param locationAssetPath The location to use as the base for this text file\n   * @param checkpointLoggers The managers that manage entities that can be logged into the checkpoint\n   */\n  public printCheckpoint(\n    locationAssetPath: AssetPath = '/locations/yourRoom-dim/normal.png',\n    checkpointLoggers: ICheckpointLoggable[]\n  ) {\n    const locationId = locationAssetPath === '' ? 'default' : getIdFromShortPath(locationAssetPath);\n\n    const loggables = checkpointLoggers.map(checkpointLogger => {\n      const txt = checkpointLogger.checkpointTxtLog();\n      if (!txt) {\n        return '';\n      }\n      const details = `${checkpointLogger.checkpointTitle}\\n${txt\n        .map(padWithTab)\n        .map(padWithTab)\n        .join('\\n')}`;\n\n      return details;\n    });\n\n    const checkpoint = `\nstartingLoc: ${locationId}\n\nobjectives\n    talk\n\nlocations\n    ${locationId}, ${locationAssetPath}, ${StringUtils.toCapitalizedWords(locationAssetPath)}\n\n${locationId}\n    modes: explore\n    actions\n        show_dialogue(welcome)\n${loggables.map(padWithTab).join('\\n')}\n\ndialogues\n    welcome\n        Congrats on creating your scene\n    click\n        Invisible bounding box is right here\n`;\n    alert('Chapter ready!');\n    console.log(checkpoint);\n  }\n\n  /**\n   * Renders information box for every entity present\n   * on-screen when mouse is hovered over the \"Show Details\" button.\n   *\n   * @param loggables A list of IScreenLoggable that have x and y coordinates (to determine where their info-box is rendered)\n   *                  Each IScreenLoggable object also contains other details such as asset keys, that will be rendered inside the info-box\n   */\n  public showDetailMap(loggables: IScreenLoggable[]) {\n    this.detailMapContainer = new Phaser.GameObjects.Container(this.getObjectPlacement(), 0, 0);\n\n    loggables.forEach((loggable: IScreenLoggable) => {\n      const loggerRectangle = new Phaser.GameObjects.Rectangle(\n        this.getObjectPlacement(),\n        loggable.x,\n        loggable.y,\n        400,\n        210,\n        HexColor.darkBlue\n      )\n        .setOrigin(0.0, 0.5)\n        .setAlpha(0.9);\n\n      const loggerText = createBitmapText(\n        this.getObjectPlacement(),\n        this.formatObjectDetails(loggable),\n        { x: loggable.x + 20, y: loggable.y + 10, oriX: 0.0, oriY: 0.6 },\n        loggableStyle\n      ).setLetterSpacing(3);\n\n      this.detailMapContainer!.add([loggerRectangle, loggerText]);\n    });\n    this.getObjectPlacement().add.existing(this.detailMapContainer);\n  }\n\n  /**\n   * Helper function for formatting the IScreenLoggable into format readable to users\n   *\n   * @param loggable\n   */\n  private formatObjectDetails(loggable: IScreenLoggable) {\n    return Object.entries(loggable)\n      .map(\n        ([key, value]) =>\n          `${key}: ${typeof value === 'number' ? StringUtils.toIntString(value) : value.toString()}`\n      )\n      .join('\\n');\n  }\n\n  /**\n   * Hide the information boxes shown on screen\n   * when user is no longer hovering over the \"Show Details\" button\n   */\n  public hideDetailMap() {\n    if (this.detailMapContainer) {\n      this.detailMapContainer.destroy();\n    }\n  }\n\n  private getObjectPlacement = () => mandatory(this.objectPlacement);\n}\n","import { screenCenter } from 'src/features/game/commons/CommonConstants';\nimport { AssetKey, ItemId } from 'src/features/game/commons/CommonTypes';\nimport { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport { mandatory, toS3Path } from 'src/features/game/utils/GameUtils';\nimport StringUtils from 'src/features/game/utils/StringUtils';\n\nimport { loadImage } from '../../game/utils/LoaderUtils';\nimport { getIdFromShortPath } from '../logger/SSLogManagerHelper';\nimport { ICheckpointLoggable } from '../logger/SSLogManagerTypes';\nimport ObjectPlacement from '../scenes/ObjectPlacement/ObjectPlacement';\nimport { SSObjectDetail } from './SSObjectManagerTypes';\n\n/**\n * This manager manages the object (image assets) for Story Simulator's Object Placement scene\n *\n * It handles:\n * (1) Storing of information on image assets used\n * (2) Creation of image assets by taking the image name from browser storage\n * (3) Rendering of image assets onto screen\n */\nexport default class SSObjectManager implements ICheckpointLoggable {\n  public checkpointTitle = 'objects';\n\n  private objectPlacement: ObjectPlacement | undefined;\n  private objectDetailMap: Map<ItemId, SSObjectDetail>;\n\n  constructor() {\n    this.objectDetailMap = new Map<ItemId, SSObjectDetail>();\n  }\n\n  public initialise(objectPlacement: ObjectPlacement) {\n    this.objectPlacement = objectPlacement;\n    this.objectDetailMap = new Map<ItemId, SSObjectDetail>();\n  }\n\n  /**\n   * Takes the image path from the session storage\n   * and renders the image on screen\n   */\n  public async loadObject() {\n    const shortPath = sessionStorage.getItem('selectedAsset');\n    if (!shortPath) return;\n    const objectAssetKey = `#${shortPath}`;\n    this.getObjectPlacement().addAsset(objectAssetKey, shortPath);\n\n    const assetKeyOnLoad = await loadImage(\n      this.getObjectPlacement(),\n      objectAssetKey,\n      toS3Path(shortPath, true)\n    );\n    this.renderObject(assetKeyOnLoad);\n  }\n\n  /**\n   * Helper to renders the object in the middle of the screen\n   *\n   * @param objectAssetKey asset key of the image used for the object\n   */\n  private renderObject(objectAssetKey: string) {\n    if (objectAssetKey[0] !== '#') {\n      return;\n    }\n    const objectSprite = new Phaser.GameObjects.Image(\n      this.getObjectPlacement(),\n      screenCenter.x,\n      screenCenter.y,\n      objectAssetKey\n    )\n      .setInteractive()\n      .setDataEnabled();\n    this.getObjectPlacement().input.setDraggable(objectSprite);\n    this.getObjectPlacement().getLayerManager().addToLayer(Layer.Objects, objectSprite);\n\n    this.registerObject(objectAssetKey, objectSprite);\n  }\n\n  /**\n   * Helper to record down information on the object that has been placed onto the scene\n   *\n   * @param objectAssetKey\n   * @param objectSprite\n   */\n  private registerObject(objectAssetKey: AssetKey, objectSprite: Phaser.GameObjects.Image) {\n    const itemId = this.generateItemId(\n      objectAssetKey,\n      this.getObjectPlacement().generateItemIdNumber()\n    );\n\n    const assetShortPath = mandatory(this.getObjectPlacement().getAssetPath(objectAssetKey));\n\n    const objectDetail: SSObjectDetail = {\n      id: itemId,\n      assetKey: objectAssetKey,\n      assetPath: assetShortPath,\n      x: screenCenter.x,\n      y: screenCenter.y\n    };\n\n    this.objectDetailMap.set(itemId, objectDetail);\n\n    objectSprite.data.set('itemId', itemId);\n    objectSprite.data.set('type', 'object');\n\n    this.getObjectPlacement().setActiveSelection(objectSprite);\n  }\n\n  /**\n   * Helper to generate a default id for this object\n   *\n   * @param assetKey\n   * @param objectIdNumber\n   */\n  private generateItemId(assetKey: string, objectIdNumber: number) {\n    const itemName = getIdFromShortPath(assetKey);\n    return `${itemName}${objectIdNumber}`;\n  }\n\n  /**\n   * Returns the list of objects details for logging information\n   * into info-boxes by LogManager\n   */\n  public getLoggables() {\n    return [...this.objectDetailMap.values()];\n  }\n\n  /**\n   * This function is called when printing the checkpoint text file\n   *\n   * Provides the array of strings that are associated with the `objects` entity\n   * that are printed within the location paragraph.\n   */\n  public checkpointTxtLog() {\n    return Array.from(this.objectDetailMap.values()).map((objectDetail: SSObjectDetail) => {\n      const objectDetailArray = [\n        '+' + objectDetail.id,\n        objectDetail.assetPath,\n        StringUtils.toIntString(objectDetail.x),\n        StringUtils.toIntString(objectDetail.y)\n      ];\n      if (objectDetail.width) {\n        objectDetailArray.push(StringUtils.toIntString(objectDetail.width));\n        objectDetailArray.push(StringUtils.toIntString(objectDetail.height!));\n      }\n      return objectDetailArray.join(', ');\n    });\n  }\n\n  private getObjectPlacement = () => mandatory(this.objectPlacement);\n\n  /**\n   * This function receives any transformation updates on objects\n   * from Transformation manager and stores information internally in its `objectDetailMap`\n   *\n   * @param gameObject bounding box being updated\n   * @param attribute attributes being updated for that bbox\n   * @param value value to set this attribute to\n   */\n  public setAttribute(\n    gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n    attribute: string,\n    value: number\n  ) {\n    const itemId = gameObject.data.get('itemId');\n    const itemDetail = this.objectDetailMap.get(itemId);\n    if (!itemDetail) return;\n    itemDetail[attribute] = value;\n  }\n\n  public deleteAll() {\n    this.objectDetailMap.clear();\n  }\n\n  public delete(gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle) {\n    const itemId = gameObject.data.get('itemId');\n    this.objectDetailMap.delete(itemId);\n  }\n}\n","const TransformConstants = {\n  activeSelectMargin: 30,\n  scaleFactor: 1.02\n};\n\nexport default TransformConstants;\n","import { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport { mandatory } from 'src/features/game/utils/GameUtils';\nimport { multiplyDimensions } from 'src/features/game/utils/SpriteUtils';\n\nimport { CursorMode } from '../cursorMode/SSCursorModeTypes';\nimport ObjectPlacement from '../scenes/ObjectPlacement/ObjectPlacement';\nimport TransformConstants from './SSTransformManagerConstants';\n\n/**\n * This manager manages transformation (changing of dimensions and coordinates)\n * of on-screen assets, ie bounding boxes and objects\n *\n * For dragging: It firstly renders the chagnes in real time using Phaser's drag listener\n * When mouse is detached, it updates the details for bbox/objects by contacting their managers\n *\n * For resizing: The `[` and `]` keys are used to resize an object\n */\nexport default class SSTransformManager {\n  private activeSelection: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle | undefined;\n  private activeSelectRect: Phaser.GameObjects.Rectangle | undefined;\n  private objectPlacement: ObjectPlacement | undefined;\n\n  public initialise(objectPlacement: ObjectPlacement) {\n    this.objectPlacement = objectPlacement;\n    this.trackDraggables(objectPlacement);\n    this.drawActiveSelectRect();\n    this.bindDeleteKey();\n  }\n\n  private drawActiveSelectRect() {\n    this.activeSelectRect = new Phaser.GameObjects.Rectangle(\n      this.getObjectPlacement(),\n      0,\n      0,\n      1,\n      1,\n      0\n    ).setAlpha(0.3);\n    this.getObjectPlacement().getLayerManager().addToLayer(Layer.Selector, this.activeSelectRect);\n  }\n\n  private trackDraggables(objectPlacement: ObjectPlacement) {\n    objectPlacement\n      .getInputManager()\n      .registerEventListener(\n        'drag',\n        (\n          pointer: MouseEvent,\n          gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n          dragX: number,\n          dragY: number\n        ) => {\n          if (!objectPlacement.isCursorMode(CursorMode.DrawBBox)) {\n            objectPlacement.getCursorManager().setCursorMode(CursorMode.DragResizeObj);\n            gameObject.x = dragX;\n            gameObject.y = dragY;\n          }\n\n          if (gameObject.data.get('type') === 'object') {\n            objectPlacement.setObjAttribute(gameObject, 'x', dragX);\n            objectPlacement.setObjAttribute(gameObject, 'y', dragY);\n            this.setActiveSelection(gameObject);\n          }\n\n          if (gameObject.data.get('type') === 'bbox') {\n            objectPlacement.setBBoxAttribute(gameObject, 'x', dragX);\n            objectPlacement.setBBoxAttribute(gameObject, 'y', dragY);\n            this.setActiveSelection(gameObject);\n          }\n        }\n      );\n  }\n\n  public resizeActive(enlarge: boolean) {\n    const objectPlacement = this.getObjectPlacement();\n    if (!this.activeSelection || !this.activeSelectRect) {\n      return;\n    }\n    const factor = enlarge ? TransformConstants.scaleFactor : 1 / TransformConstants.scaleFactor;\n    multiplyDimensions(this.activeSelection, factor);\n    this.activeSelectRect.displayHeight =\n      this.activeSelection.displayHeight + TransformConstants.activeSelectMargin;\n    this.activeSelectRect.displayWidth =\n      this.activeSelection.displayWidth + TransformConstants.activeSelectMargin;\n\n    if (this.activeSelection.data.get('type') === 'object') {\n      objectPlacement.setObjAttribute(\n        this.activeSelection,\n        'width',\n        Math.abs(this.activeSelection.displayWidth)\n      );\n      objectPlacement.setObjAttribute(\n        this.activeSelection,\n        'height',\n        Math.abs(this.activeSelection.displayHeight)\n      );\n    }\n\n    if (this.activeSelection.data.get('type') === 'bbox') {\n      objectPlacement.setBBoxAttribute(\n        this.activeSelection,\n        'width',\n        Math.abs(this.activeSelection.displayWidth)\n      );\n      objectPlacement.setBBoxAttribute(\n        this.activeSelection,\n        'height',\n        Math.abs(this.activeSelection.displayHeight)\n      );\n    }\n  }\n\n  public setActiveSelection(gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle) {\n    if (!this.activeSelectRect) {\n      return;\n    }\n    this.activeSelectRect!.setAlpha(0.3);\n    this.activeSelection = gameObject;\n    this.activeSelectRect.x = gameObject.x;\n    this.activeSelectRect.y = gameObject.y;\n\n    this.activeSelectRect.displayHeight =\n      gameObject.displayHeight + TransformConstants.activeSelectMargin;\n    this.activeSelectRect.displayWidth =\n      gameObject.displayWidth + TransformConstants.activeSelectMargin;\n  }\n\n  public deselect() {\n    this.activeSelectRect!.setAlpha(0);\n    this.activeSelection = undefined;\n  }\n\n  private getObjectPlacement = () => mandatory(this.objectPlacement);\n\n  private bindDeleteKey() {\n    const deleteKeys = [\n      Phaser.Input.Keyboard.KeyCodes.BACKSPACE,\n      Phaser.Input.Keyboard.KeyCodes.DELETE\n    ];\n    deleteKeys.forEach(key =>\n      this.getObjectPlacement()\n        .getInputManager()\n        .registerKeyboardListener(key, 'up', () => {\n          this.deleteActiveSelection();\n          this.deselect();\n        })\n    );\n  }\n\n  private deleteActiveSelection() {\n    if (!this.activeSelection) return;\n    switch (this.getType(this.activeSelection)) {\n      case 'object':\n        this.getObjectPlacement().deleteObj(this.activeSelection);\n        break;\n      case 'bbox':\n        this.getObjectPlacement().deleteBBox(this.activeSelection);\n        break;\n    }\n    this.activeSelection.destroy();\n  }\n\n  private getType(gameObject: Phaser.GameObjects.Rectangle | Phaser.GameObjects.Image) {\n    return this.activeSelection?.data.get('type');\n  }\n}\n","const ObjPlacementConstants = {\n  cursor: { x: 100, y: 100 }\n};\n\nexport default ObjPlacementConstants;\n","import CommonBackButton from 'src/features/game/commons/CommonBackButton';\nimport { screenCenter, screenSize } from 'src/features/game/commons/CommonConstants';\nimport { AssetKey, AssetPath } from 'src/features/game/commons/CommonTypes';\nimport GameInputManager from 'src/features/game/input/GameInputManager';\nimport GameLayerManager from 'src/features/game/layer/GameLayerManager';\nimport { Layer } from 'src/features/game/layer/GameLayerTypes';\nimport SourceAcademyGame from 'src/features/game/SourceAcademyGame';\nimport { mandatory } from 'src/features/game/utils/GameUtils';\n\nimport SSImageAssets from '../../assets/ImageAssets';\nimport SSBackgroundManager from '../../background/SSBackgroundManager';\nimport SSBBoxManager from '../../boundingBoxes/SSBBoxManager';\nimport SSCursorMode from '../../cursorMode/SSCursorMode';\nimport { CursorMode } from '../../cursorMode/SSCursorModeTypes';\nimport SSLogManager from '../../logger/SSLogManager';\nimport SSObjectManager from '../../objects/SSObjectManager';\nimport { StorySimState } from '../../StorySimulatorTypes';\nimport SSTransformManager from '../../transform/SSTransformManager';\nimport ObjPlacementConstants from './ObjectPlacementConstants';\n\n/**\n * Allow users to position objects, set backgrounds, and get\n * the coordinates of the objects.\n */\nexport default class ObjectPlacement extends Phaser.Scene {\n  public layerManager?: GameLayerManager;\n  public inputManager?: GameInputManager;\n  private transformManager: SSTransformManager;\n  private cursorModes: SSCursorMode | undefined;\n  private bboxManager: SSBBoxManager;\n  private objectManager: SSObjectManager;\n  private backgroundManager: SSBackgroundManager;\n  private logManager: SSLogManager;\n\n  private assetMap: Map<AssetKey, AssetPath>;\n  private itemIdNumber: number;\n\n  private openBracket: Phaser.Input.Keyboard.Key | undefined;\n  private closedBracket: Phaser.Input.Keyboard.Key | undefined;\n\n  constructor() {\n    super('ObjectPlacement');\n    this.objectManager = new SSObjectManager();\n    this.bboxManager = new SSBBoxManager();\n    this.backgroundManager = new SSBackgroundManager();\n    this.logManager = new SSLogManager();\n    this.transformManager = new SSTransformManager();\n\n    this.cursorModes = undefined;\n    this.itemIdNumber = 0;\n    this.assetMap = new Map<AssetKey, AssetPath>();\n  }\n\n  public init() {\n    this.layerManager = new GameLayerManager(this);\n    this.inputManager = new GameInputManager(this);\n    this.objectManager = new SSObjectManager();\n    this.bboxManager = new SSBBoxManager();\n    this.backgroundManager = new SSBackgroundManager();\n    this.logManager = new SSLogManager();\n    this.transformManager = new SSTransformManager();\n\n    this.cursorModes = undefined;\n    this.itemIdNumber = 0;\n    this.assetMap = new Map<AssetKey, AssetPath>();\n  }\n\n  public create() {\n    SourceAcademyGame.getInstance().setCurrentSceneRef(this);\n\n    this.renderBackground();\n    this.createUIButtons();\n    this.backgroundManager.initialise(this);\n    this.objectManager.initialise(this);\n    this.bboxManager.initialise(this);\n    this.transformManager.initialise(this);\n    this.logManager.initialise(this);\n\n    this.openBracket = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.OPEN_BRACKET);\n    this.closedBracket = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.CLOSED_BRACKET);\n  }\n\n  public update() {\n    if (this.openBracket && this.openBracket.isDown) {\n      this.transformManager.resizeActive(false);\n    }\n    if (this.closedBracket && this.closedBracket.isDown) {\n      this.transformManager.resizeActive(true);\n    }\n\n    this.bboxManager.resizeWhileBeingDrawn(this);\n  }\n\n  private createUIButtons() {\n    const uiContainer = new Phaser.GameObjects.Container(this, 0, 0);\n    const backButton = new CommonBackButton(this, () => {\n      this.cleanUp();\n      SourceAcademyGame.getInstance().setStorySimState(StorySimState.Default);\n      this.scene.start('StorySimulatorMenu');\n    });\n\n    this.cursorModes = new SSCursorMode(\n      this,\n      ObjPlacementConstants.cursor.x,\n      ObjPlacementConstants.cursor.y\n    );\n    this.populateCursorModes();\n\n    uiContainer.add(this.cursorModes);\n    uiContainer.add(backButton);\n\n    this.getLayerManager().addToLayer(Layer.UI, uiContainer);\n  }\n\n  public renderBackground() {\n    const backgroundImg = new Phaser.GameObjects.Image(\n      this,\n      screenCenter.x,\n      screenCenter.y,\n      SSImageAssets.storySimBg.key\n    );\n    backgroundImg.setDisplaySize(screenSize.x, screenSize.y);\n\n    this.getLayerManager().addToLayer(Layer.Background, backgroundImg);\n  }\n\n  private populateCursorModes() {\n    if (this.cursorModes) {\n      // Change background\n      this.cursorModes.addCursorMode(\n        this,\n        SSImageAssets.colorIcon.key,\n        false,\n        'Set background',\n        async () => await this.backgroundManager.loadBackground()\n      );\n\n      // Add object\n      this.cursorModes.addCursorMode(\n        this,\n        SSImageAssets.imageIcon.key,\n        false,\n        'Add selected object',\n        async () => await this.objectManager.loadObject()\n      );\n\n      // Draw BBox\n      this.cursorModes.addCursorMode(\n        this,\n        SSImageAssets.bboxIcon.key,\n        true,\n        'Draw bounding boxes',\n        () => this.cursorModes!.setCursorMode(CursorMode.DrawBBox)\n      );\n\n      // Drag/Resize\n      this.cursorModes.addCursorMode(this, SSImageAssets.handIcon.key, true, 'Drag or resize', () =>\n        this.cursorModes!.setCursorMode(CursorMode.DragResizeObj)\n      );\n\n      // Print info\n      this.cursorModes.addCursorMode(\n        this,\n        SSImageAssets.listIcon.key,\n        false,\n        'Print coordinates',\n        () =>\n          this.logManager.printCheckpoint(this.backgroundManager.getBackgroundAssetPath(), [\n            this.objectManager,\n            this.bboxManager\n          ]),\n        () =>\n          this.logManager.showDetailMap([\n            ...this.objectManager.getLoggables(),\n            ...this.bboxManager.getLoggables()\n          ]),\n        () => this.logManager.hideDetailMap()\n      );\n\n      // Erase Layers\n      this.cursorModes.addCursorMode(this, SSImageAssets.eraseIcon.key, false, 'Erase all', () => {\n        const confirm = window.confirm('Are you sure you want to delete?');\n\n        if (!confirm) return;\n        this.getLayerManager().clearSeveralLayers([Layer.Background, Layer.BBox, Layer.Objects]);\n        this.objectManager.deleteAll();\n        this.bboxManager.deleteAll();\n        this.transformManager.deselect();\n        this.renderBackground();\n      });\n\n      this.cursorModes.renderCursorModesContainer();\n    }\n  }\n\n  public getCursorManager = () => mandatory(this.cursorModes);\n\n  public getCoordinates(): number[] {\n    return [this.input.x, this.input.y];\n  }\n\n  public isCursorMode(cursorMode: CursorMode) {\n    return this.getCursorManager().getCurrCursorMode() === cursorMode;\n  }\n\n  private cleanUp() {\n    this.getInputManager().clearListeners();\n    this.getLayerManager().clearAllLayers();\n  }\n\n  public addAsset(assetKey: AssetKey, assetPath: AssetPath) {\n    this.assetMap.set(assetKey, assetPath);\n  }\n\n  public getAssetPath(assetKey: AssetKey) {\n    return this.assetMap.get(assetKey);\n  }\n\n  public generateItemIdNumber() {\n    return this.itemIdNumber++;\n  }\n\n  public setActiveSelection(gameObject: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle) {\n    this.transformManager.setActiveSelection(gameObject);\n  }\n\n  public setObjAttribute(\n    objectSprite: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n    attribute: string,\n    value: number\n  ) {\n    this.objectManager.setAttribute(objectSprite, attribute, value);\n  }\n\n  public deleteObj(objectSprite: Phaser.GameObjects.Rectangle | Phaser.GameObjects.Image) {\n    this.objectManager.delete(objectSprite);\n  }\n\n  public setBBoxAttribute(\n    bboxSprite: Phaser.GameObjects.Image | Phaser.GameObjects.Rectangle,\n    attribute: string,\n    value: number\n  ) {\n    this.bboxManager.setAttribute(bboxSprite, attribute, value);\n  }\n\n  public deleteBBox(bboxSprite: Phaser.GameObjects.Rectangle | Phaser.GameObjects.Image) {\n    this.bboxManager.delete(bboxSprite);\n  }\n\n  public getInputManager = () => mandatory(this.inputManager);\n  public getLayerManager = () => mandatory(this.layerManager);\n}\n","import * as Phaser from 'phaser';\nimport { screenSize } from 'src/features/game/commons/CommonConstants';\nimport CheckpointTransition from 'src/features/game/scenes/checkpointTransition/CheckpointTransition';\nimport GameManager from 'src/features/game/scenes/gameManager/GameManager';\nimport SourceAcademyGame, { GameType } from 'src/features/game/SourceAcademyGame';\nimport MainMenu from 'src/features/storySimulator/scenes/mainMenu/MainMenu';\nimport ObjectPlacement from 'src/features/storySimulator/scenes/ObjectPlacement/ObjectPlacement';\n\nconst config = {\n  debug: true,\n  type: Phaser.CANVAS,\n  width: screenSize.x,\n  height: screenSize.y,\n  physics: {\n    default: 'arcade'\n  },\n  scale: {\n    mode: Phaser.Scale.FIT,\n    parent: 'game-display'\n  },\n  fps: {\n    target: 24\n  }\n};\n\nexport const createStorySimulatorGame = () => {\n  const game = new SourceAcademyGame(config, GameType.Simulator);\n  game.scene.add('StorySimulatorMenu', MainMenu, true);\n  game.scene.add('ObjectPlacement', ObjectPlacement);\n  game.scene.add('GameManager', GameManager);\n  game.scene.add('CheckpointTransition', CheckpointTransition);\n  return game;\n};\n","import * as React from 'react';\nimport { useTypedSelector } from 'src/commons/utils/Hooks';\nimport SourceAcademyGame, { AccountInfo } from 'src/features/game/SourceAcademyGame';\nimport { StorySimState } from 'src/features/storySimulator/StorySimulatorTypes';\n\nimport StorySimulatorAssetFileUploader from './subcomponents/StorySimulatorAssetFileUploader';\nimport StorySimulatorAssetSelection from './subcomponents/StorySimulatorAssetSelection';\nimport StorySimulatorChapterSim from './subcomponents/StorySimulatorChapterSim';\nimport StorySimulatorCheckpointSim from './subcomponents/StorySimulatorCheckpointSim';\nimport { createStorySimulatorGame } from './subcomponents/storySimulatorGame';\n\n/**\n * Story simulator main page\n *\n * Displays the following elements:\n * (1) Story Simulator phaser canvas\n * (2) Story Simulator control panel\n *\n * Story Simulator control panel's content can be altered using\n * `setStorySimState` function. This function is passed into story\n * simulator phaser game, so that the StorySimulatorMainMenu buttons\n * are able to control what is shown on the Story Simulator panel.\n */\nfunction StorySimulator() {\n  const session = useTypedSelector(state => state.session);\n  const [storySimState, setStorySimState] = React.useState<string>(StorySimState.Default);\n\n  React.useEffect(() => {\n    createStorySimulatorGame().setStorySimStateSetter(setStorySimState);\n  }, []);\n\n  React.useEffect(() => {\n    SourceAcademyGame.getInstance().setAccountInfo({\n      accessToken: session.accessToken,\n      refreshToken: session.refreshToken,\n      role: session.role,\n      name: session.name\n    } as AccountInfo);\n  }, [session]);\n\n  return (\n    <>\n      <div className=\"StorySimulatorWrapper\">\n        <div id=\"game-display\" />\n        <div className=\"LeftAlign StorySimulatorPanel\">\n          {storySimState === StorySimState.Default && (\n            <>\n              <h3>Welcome to story simulator!</h3>\n            </>\n          )}\n          {storySimState === StorySimState.CheckpointSim && <StorySimulatorCheckpointSim />}\n          {storySimState === StorySimState.ObjectPlacement && (\n            <>\n              <h3>Asset Selection</h3>\n              <StorySimulatorAssetSelection />\n            </>\n          )}\n          {storySimState === StorySimState.AssetUploader && (\n            <>\n              <h3>Asset uploader</h3>\n              <StorySimulatorAssetFileUploader />\n              <h3>Asset Viewer</h3>\n              <StorySimulatorAssetSelection />\n            </>\n          )}\n          {storySimState === StorySimState.ChapterSim && <StorySimulatorChapterSim />}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default StorySimulator;\n","import 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nimport { Button, Divider, NonIdealState, Spinner, SpinnerSize } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { GridApi, GridReadyEvent } from 'ag-grid-community';\nimport { AgGridReact } from 'ag-grid-react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchAllUserXp } from 'src/commons/application/actions/SessionActions';\nimport ContentDisplay from 'src/commons/ContentDisplay';\nimport { useTypedSelector } from 'src/commons/utils/Hooks';\n\ntype RowData = {\n  name: string;\n  'NUS Net ID': string;\n  'Assessment Xp': string;\n  'Achievement Xp': string;\n};\n\ntype PageState = {\n  currPage: number;\n  maxPages: number;\n  rowCountString: string;\n  isBackDisabled: boolean;\n  isForwardDisabled: boolean;\n};\n\nconst columnDefs = [\n  { field: 'name' },\n  { field: 'NUS Net ID' },\n  { field: 'Assessment Xp' },\n  { field: 'Achievement Xp' }\n];\n\nconst defaultColDef = {\n  resizable: true,\n  sortable: true\n};\n\nconst XpCalculation: React.FC = () => {\n  const dispatch = useDispatch();\n  const allUserXp = useTypedSelector(state => state.session.allUserXp);\n\n  const [rowData, setRowData] = useState<RowData[]>([]);\n  const [gridApi, setGridApi] = useState<GridApi>();\n  const [pageState, setPageState] = useState<PageState>({\n    currPage: 1,\n    maxPages: 1,\n    rowCountString: '(none)',\n    isBackDisabled: true,\n    isForwardDisabled: true\n  });\n\n  useEffect(() => {\n    if (allUserXp) {\n      const rowData = allUserXp.map(data => {\n        const [name, nusNetId, assessmentXp, achievementXp] = data;\n        return {\n          name: name ?? '',\n          'NUS Net ID': nusNetId ?? '',\n          'Assessment Xp': assessmentXp ?? '0',\n          'Achievement Xp': achievementXp ?? '0'\n        };\n      });\n      setRowData(rowData);\n    }\n  }, [allUserXp]);\n\n  const exportCSV = useCallback(() => {\n    if (gridApi) {\n      gridApi.exportDataAsCsv({\n        fileName: `SA XP Count (${new Date().toISOString()}).csv`,\n        // Explicitly declare exported columns to avoid exporting trash columns\n        columnKeys: ['name', 'NUS Net ID', 'Assessment Xp', 'Achievement Xp']\n      });\n    }\n  }, [gridApi]);\n\n  // Forcibly resizes columns to fit the width of the datagrid - prevents datagrid\n  // from needing to render a horizontal scrollbar when columns overflow grid width\n  const resizeGrid = useCallback(() => {\n    if (gridApi) {\n      gridApi.sizeColumnsToFit();\n    }\n  }, [gridApi]);\n\n  const changePaginationView = useCallback(\n    (type: string) => {\n      return () => {\n        if (gridApi) {\n          switch (type) {\n            case 'first':\n              return gridApi.paginationGoToFirstPage();\n            case 'prev':\n              return gridApi.paginationGoToPreviousPage();\n            case 'next':\n              return gridApi.paginationGoToNextPage();\n            case 'last':\n              return gridApi.paginationGoToLastPage();\n            default:\n          }\n        }\n      };\n    },\n    [gridApi]\n  );\n\n  const updatePaginationState = useCallback(() => {\n    if (gridApi) {\n      const newTotalPages = gridApi.paginationGetTotalPages();\n      const newCurrPage = newTotalPages === 0 ? 0 : gridApi.paginationGetCurrentPage() + 1;\n      setPageState({\n        currPage: newCurrPage,\n        maxPages: newTotalPages,\n        rowCountString: formatRowCountString(\n          25,\n          newCurrPage,\n          newTotalPages,\n          gridApi.paginationGetRowCount()\n        ),\n        isBackDisabled: newTotalPages === 0 || newCurrPage === 1,\n        isForwardDisabled: newTotalPages === 0 || newCurrPage === newTotalPages\n      });\n    }\n  }, [gridApi, setPageState]);\n\n  const onGridReady = useCallback(\n    (params: GridReadyEvent) => {\n      setGridApi(params.api);\n      updatePaginationState();\n    },\n    [setGridApi, updatePaginationState]\n  );\n\n  const Controls = () => {\n    return (\n      <div className=\"grading-controls\">\n        <div className=\"GridControls ag-grid-controls\">\n          <div style={{ width: '130px' }} className=\"left-controls\"></div>\n          <div className=\"centre-controls\">\n            <Button\n              icon={IconNames.CHEVRON_BACKWARD}\n              onClick={changePaginationView('first')}\n              minimal={true}\n              disabled={pageState.isBackDisabled}\n            />\n            <Button\n              icon={IconNames.CHEVRON_LEFT}\n              onClick={changePaginationView('prev')}\n              minimal={true}\n              disabled={pageState.isBackDisabled}\n            />\n            <Button className=\"pagination-details hidden-xs\" disabled={true} minimal={true}>\n              <div>{`Page ${pageState.currPage} of ${pageState.maxPages}`}</div>\n              <div>{pageState.rowCountString}</div>\n            </Button>\n            <Button\n              icon={IconNames.CHEVRON_RIGHT}\n              onClick={changePaginationView('next')}\n              minimal={true}\n              disabled={pageState.isForwardDisabled}\n            />\n            <Button\n              icon={IconNames.CHEVRON_FORWARD}\n              onClick={changePaginationView('last')}\n              minimal={true}\n              disabled={pageState.isForwardDisabled}\n            />\n          </div>\n          <div className=\"right-controls\">\n            <Button icon={IconNames.EXPORT} onClick={exportCSV}>\n              <span className=\"hidden-xs\">Export to CSV</span>\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }; /* Display either a loading screen or a table with overviews. */\n  const LoadingDisplay = (\n    <NonIdealState\n      className=\"Grading\"\n      description=\"Fetching XP...\"\n      icon={<Spinner size={SpinnerSize.LARGE} />}\n    />\n  );\n\n  const Content = (\n    <div className=\"Grading\">\n      <Controls />\n      <Divider />\n      <AgGridReact\n        domLayout={'autoHeight'}\n        className=\"ag-grid-parent ag-theme-balham\"\n        columnDefs={columnDefs}\n        onGridReady={onGridReady}\n        onPaginationChanged={updatePaginationState}\n        onGridSizeChanged={resizeGrid}\n        defaultColDef={defaultColDef}\n        rowData={rowData}\n        rowHeight={30}\n        pagination={true}\n        paginationPageSize={20}\n        suppressCellSelection={true}\n        suppressMovableColumns={true}\n        suppressPaginationPanel={true}\n      />\n    </div>\n  );\n\n  return (\n    <ContentDisplay\n      loadContentDispatch={() => dispatch(fetchAllUserXp())}\n      display={!allUserXp ? LoadingDisplay : Content}\n      fullWidth={false}\n    />\n  );\n};\n\nconst formatRowCountString = (\n  pageSize: number,\n  currPage: number,\n  maxPages: number,\n  totalRows: number\n) => {\n  return maxPages === 0\n    ? '(none)'\n    : currPage !== maxPages\n    ? `(#${pageSize * currPage - 19} - #${pageSize * currPage})`\n    : `(#${pageSize * currPage - 19} - #${totalRows})`;\n};\n\nexport default XpCalculation;\n","import { Card, Classes, NonIdealState, Spinner, SpinnerSize } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect, Route, Switch, useParams, useRouteMatch } from 'react-router';\nimport { useTypedSelector } from 'src/commons/utils/Hooks';\n\nimport {\n  fetchNotifications,\n  updateLatestViewedCourse\n} from '../../commons/application/actions/SessionActions';\nimport AssessmentContainer from '../../commons/assessment/AssessmentContainer';\nimport { assessmentTypeLink } from '../../commons/utils/ParamParseHelper';\nimport { assessmentRegExp, gradingRegExp } from '../../features/academy/AcademyTypes';\nimport Achievement from '../../pages/achievement/AchievementContainer';\nimport Sourcecast from '../../pages/sourcecast/SourcecastContainer';\nimport NotFound from '../notFound/NotFound';\nimport AdminPanel from './adminPanel/AdminPanelContainer';\nimport DashboardContainer from './dashboard/DashboardContainer';\nimport Game from './game/Game';\nimport Grading from './grading/GradingContainer';\nimport GroundControl from './groundControl/GroundControlContainer';\nimport Sourcereel from './sourcereel/SourcereelContainer';\nimport StorySimulator from './storySimulator/StorySimulator';\nimport XpCalculation from './xpCalculation/XpCalculation';\n\nconst Academy: React.FC<{}> = () => {\n  const { path, url } = useRouteMatch();\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(fetchNotifications());\n  }, [dispatch]);\n\n  const assessmentConfigurations = useTypedSelector(\n    state => state.session.assessmentConfigurations\n  );\n  const enableGame = useTypedSelector(state => state.session.enableGame);\n  const role = useTypedSelector(state => state.session.role);\n\n  const staffRoutes =\n    role !== 'student'\n      ? [\n          <Route path={`${path}/groundcontrol`} component={GroundControl} key={0} />,\n          <Route path={`${path}/grading/${gradingRegExp}`} component={Grading} key={1} />,\n          <Route path={`${path}/xpcalculation`} component={XpCalculation} key={2} />,\n          <Route path={`${path}/sourcereel`} component={Sourcereel} key={3} />,\n          <Route path={`${path}/storysimulator`} component={StorySimulator} key={4} />,\n          <Route path={`${path}/dashboard`} component={DashboardContainer} key={5} />\n        ]\n      : null;\n  return (\n    <div className=\"Academy\">\n      <Switch>\n        {assessmentConfigurations?.map(assessmentConfiguration => (\n          <Route\n            path={`${path}/${assessmentTypeLink(assessmentConfiguration.type)}/${assessmentRegExp}`}\n            key={assessmentConfiguration.type}\n          >\n            <AssessmentContainer assessmentConfiguration={assessmentConfiguration} />\n          </Route>\n        ))}\n        {enableGame && <Route path={`${path}/game`} component={Game} />}\n        <Route path={`${path}/sourcecast/:sourcecastId?`} component={Sourcecast} />\n        <Route path={`${path}/achievements`} component={Achievement} />\n        <Route exact={true} path={path}>\n          <Redirect\n            push={false}\n            to={\n              enableGame\n                ? `${url}/game`\n                : assessmentConfigurations && assessmentConfigurations.length > 0\n                ? `${url}/${assessmentTypeLink(assessmentConfigurations[0].type)}`\n                : role === 'admin'\n                ? `${url}/adminpanel`\n                : '/404'\n            }\n          />\n        </Route>\n        {staffRoutes}\n        {role === 'admin' && <Route path={`${path}/adminpanel`} component={AdminPanel} />}\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  );\n};\n\nconst CourseSelectingAcademy: React.FC<{}> = () => {\n  const dispatch = useDispatch();\n  const courseId = useTypedSelector(state => state.session.courseId);\n  const { courseId: routeCourseIdStr } = useParams<{ courseId?: string }>();\n  const routeCourseId = routeCourseIdStr != null ? parseInt(routeCourseIdStr, 10) : undefined;\n\n  React.useEffect(() => {\n    if (routeCourseId !== undefined && courseId !== routeCourseId) {\n      dispatch(updateLatestViewedCourse(routeCourseId));\n    }\n  }, [courseId, dispatch, routeCourseId]);\n\n  return routeCourseId === courseId ? (\n    <Academy />\n  ) : (\n    <div className={classNames('Academy-switching-courses', Classes.DARK)}>\n      <Card className={Classes.ELEVATION_4}>\n        <NonIdealState\n          description=\"Switching courses...\"\n          icon={<Spinner size={SpinnerSize.LARGE} />}\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default CourseSelectingAcademy;\n","import { Card, Elevation, H3, H5 } from '@blueprintjs/core';\nimport React from 'react';\n\nimport { Links } from '../../../commons/utils/Constants';\n\nconst dot = <span className=\"dot\">&bull;</span>;\n\nconst ContributorsDetails: React.FC = () => (\n  <div className=\"outsideDetails\">\n    <Card className=\"contributorsDetails\" elevation={Elevation.ONE}>\n      <H3>The Team behind the Source Academy</H3>\n      <p className=\"description\">\n        The <i>Source Academy</i> is designed and developed by a team of students, most of who have\n        used the system to learn the fundamentals of computing and enjoyed it. This page includes\n        all developers who contributed to the Source Academy <i>Merlin</i> (2023) and its precursors{' '}\n        <i>Rook</i> (2022), <i>Knight</i> (2020) and <i>Cadet</i> (2018). These versions succeeded\n        Source Academy 2 (2017) and ultimately the original Source Academy (2016).\n      </p>\n      <div className=\"leadership\">\n        <H5>\n          <strong>\n            <u>2023 Leadership (Merlin)</u>\n          </strong>\n        </H5>\n        <p>\n          Chow En Rong,\n          <br />\n          Shen Yi Hong\n          <br />\n          <strong>(Frontend)</strong>\n        </p>\n        {dot}\n        <p>\n          Chen Yanyu\n          <br />\n          <strong>(Backend)</strong>\n        </p>\n        {dot}\n        <p>\n          Gokul Rajiv,\n          <br />\n          Lee Hyung Woon\n          <br />\n          <strong>(Game)</strong>\n        </p>\n        {dot}\n        <p>\n          Shen Yi Hong,\n          <br />\n          Zhan Jie,\n          <br />\n          <strong>(Source)</strong>\n        </p>\n        {dot}\n        <p>\n          Lee Yi,\n          <br />\n          Joel Leow\n          <br />\n          <strong>(Modules)</strong>\n        </p>\n        {dot}\n        <p>\n          Richard Dominick\n          <br />\n          <strong>(Robotics)</strong>\n        </p>\n        {dot}\n        <p>\n          Boyd Anderson,\n          <br />\n          Martin Henz,\n          <br />\n          Eldric Liew,\n          <br />\n          Low Kok Lim,\n          <br />\n          Sanka Rasnayaka\n          <br />\n          <strong>(Coordination)</strong>\n        </p>\n      </div>\n      <div className=\"hallOfFame\">\n        <H5>\n          <strong>\n            <u>Hall of Fame</u>\n          </strong>\n        </H5>\n        <p>\n          <strong>Cadet architect</strong>\n        </p>\n        <p>Evan Sebastian</p>\n        <p>\n          <strong>Cadet core team</strong>\n        </p>\n        <p>\n          Julius Putra Tanu Setiaji {dot} Lee Ning Yuan {dot} Vignesh Shankar {dot} Thomas Tan {dot}{' '}\n          Chen Shaowei\n        </p>\n        <p>\n          <strong>Graphic design</strong>\n        </p>\n        <p>\n          Ng Tse Pei {dot} Joey Yeo {dot} Tan Yu Wei {dot} Sigmund Chianasta\n        </p>\n      </div>\n      <div className=\"leadership\">\n        <p>\n          <strong>2019 Leadership</strong>\n        </p>\n        <br />\n        <p>\n          Liow Jia Chen\n          <br />\n          (Backend)\n        </p>\n        {dot}\n        <p>\n          Ge Shuming\n          <br />\n          (Frontend)\n        </p>\n        {dot}\n        <p>\n          Rahul Rajesh\n          <br />\n          (DevOps)\n        </p>\n        {dot}\n        <p>\n          Daryl Tan\n          <br />\n          (Source)\n        </p>\n        {dot}\n        <p>\n          She Jiayu\n          <br />\n          (Tools)\n        </p>\n      </div>\n      <div className=\"leadership\">\n        <p className=\"evenWider\">\n          <strong>2020 Leadership (Knight)</strong>\n        </p>\n        <br />\n        <p>\n          Tiffany Chong\n          <br />\n          (Game)\n        </p>\n        {dot}\n        <p>\n          Anthony Halim\n          <br />\n          (Architecture)\n        </p>\n        {dot}\n        <p>\n          Kan Yip Keng, Jet\n          <br />\n          (Frontend)\n        </p>\n        {dot}\n        <p>\n          Low Jun Kai, Sean\n          <br />\n          (Frontend)\n        </p>\n        {dot}\n        <p>\n          Daryl Tan\n          <br />\n          (Source)\n        </p>\n        {dot}\n        <p className=\"wider\">\n          Tee Hao Wei\n          <br />\n          (Backend &amp; DevOps)\n        </p>\n      </div>\n      <div className=\"leadership\">\n        <p>\n          <strong>2021 Leadership</strong>\n        </p>\n        <br />\n        <p>\n          Tiffany Chong\n          <br />\n          (Game)\n        </p>\n        {dot}\n        <p>\n          Anthony Halim\n          <br />\n          (Frontend)\n        </p>\n        {dot}\n        <p className=\"evenWider\">\n          Daryl Tan, Thomas Tan\n          <br />\n          (Source)\n        </p>\n        {dot}\n        <p className=\"wider\">\n          Tee Hao Wei\n          <br />\n          (Backend &amp; DevOps)\n        </p>\n      </div>\n      <div className=\"leadership\">\n        <p className=\"evenWider\">\n          <strong>2022 Leadership (Rook)</strong>\n        </p>\n        <br />\n        <p>\n          Tee Hao Wei\n          <br />\n          (CTO)\n        </p>\n        {dot}\n        <p>\n          Chow En Rong\n          <br />\n          (Frontend)\n        </p>\n        {dot}\n        <p>\n          Chen Yanyu\n          <br />\n          (Backend)\n        </p>\n        {dot}\n        <p>\n          Samuel Fang\n          <br />\n          (SICP JS)\n        </p>\n        {dot}\n        <p>\n          Gokul Rajiv,\n          <br />\n          Lee Hyung Woon\n          <br />\n          (Game)\n        </p>\n        {dot}\n        <p>\n          Shen Yi Hong,\n          <br />\n          Zhan Jie,\n          <br />\n          Thomas Tan\n          <br />\n          (Source)\n        </p>\n        {dot}\n        <p>\n          Bryan Loh,\n          <br />\n          Marcus Tang\n          <br />\n          (Modules)\n        </p>\n      </div>\n      <div className=\"contributors\">\n        <H5>\n          <strong>\n            <u>All Contributors</u>\n          </strong>\n        </H5>\n        <p>\n          Below are all contributors to the{' '}\n          <a href={Links.githubOrg}>GitHub repositories of the Source Academy</a>. Feel free to join\n          us!\n        </p>\n      </div>\n    </Card>\n  </div>\n);\n\nexport default ContributorsDetails;\n","import {\n  ContributorsInApi,\n  Repo,\n  ReposInApi\n} from '../../../features/contributors/ContributorsTypes';\n\nconst apiRepoDetails: string = 'https://api.github.com/orgs/source-academy/repos';\nconst ignoreRepos: string[] = ['assessments', 'tools', 'source-academy2'];\nconst ignoreContributors: string[] = ['dependabot[bot]', 'dependabot-preview[bot]'];\n\nexport const fetchRepos = async () => {\n  const response = await fetch(apiRepoDetails);\n  const results = await response.json();\n  const repos = await results\n    .filter((repo: ReposInApi) => {\n      return !ignoreRepos.includes(repo.name);\n    })\n    .map((repo: ReposInApi) => {\n      return {\n        key: repo.id,\n        name: repo.name,\n        description: repo.description,\n        link: repo.contributors_url\n      };\n    });\n  return repos;\n};\n\nexport const fetchContributors = async (endpoints: Repo[]) => {\n  const responses = await Promise.all(\n    endpoints.map((endpoint: Repo) => {\n      return fetch(endpoint.link);\n    })\n  );\n  const results = await Promise.all(\n    responses.map((res: any) => {\n      return res.json();\n    })\n  );\n  const contributorsByRepo = await Promise.all(\n    results.map((contributors: ContributorsInApi[]) => {\n      return contributors\n        .filter((contributor: ContributorsInApi) => {\n          return !ignoreContributors.includes(contributor.login);\n        })\n        .map((contributor: ContributorsInApi) => {\n          return {\n            key: contributor.id,\n            photo: contributor.avatar_url,\n            githubPage: contributor.html_url,\n            githubName: contributor.login,\n            commits: contributor.contributions\n          };\n        });\n    })\n  );\n  return contributorsByRepo;\n};\n","import { Card, Elevation, H2, H3, H5 } from '@blueprintjs/core';\nimport React, { useEffect, useState } from 'react';\n\nimport { Contributor, Repo } from '../../../features/contributors/ContributorsTypes';\nimport { fetchContributors, fetchRepos } from './ContributorsGithubApi';\n\nconst ContributorsList: React.FC = () => {\n  const [repos, setRepos] = useState<Repo[]>([]);\n  const [contributors, setContributors] = useState<Contributor[][]>([]);\n\n  useEffect(() => {\n    fetchRepos().then((repos: Repo[]) => {\n      fetchContributors(repos).then((contributors: Contributor[][]) => {\n        setRepos(repos);\n        setContributors(contributors);\n      });\n    });\n  }, []);\n\n  const contributorList = contributors.length ? (\n    contributors.map((array: Contributor[], index: number) => {\n      const repo = repos[index];\n      const arrayMapped = array.map((contributor: Contributor) => {\n        return (\n          <div key={contributor.key}>\n            <img src={contributor.photo} alt=\"Contributor\" />\n            <p>\n              <a href={contributor.githubPage} rel=\"noopener noreferrer\" target=\"_blank\">\n                {contributor.githubName}\n              </a>\n            </p>\n            <p>Commits: {contributor.commits}</p>\n          </div>\n        );\n      });\n      return (\n        <Card key={repo.key} className=\"containerPermalink\" elevation={Elevation.ONE}>\n          <div className=\"repoDetailsPermalink\">\n            <H3>{repo.name}</H3>\n            <H5>{repo.description}</H5>\n          </div>\n          <div className=\"inPermalink\">{arrayMapped}</div>\n        </Card>\n      );\n    })\n  ) : (\n    <H2>Loading...</H2>\n  );\n  return <div>{contributorList}</div>;\n};\n\nexport default ContributorsList;\n","import { Card, Elevation } from '@blueprintjs/core';\nimport React from 'react';\n\nimport ContributorsDetails from './subcomponents/ContributorsDetails';\nimport ContributorsList from './subcomponents/ContributorsList';\n\nconst Contributors: React.FC = () => (\n  <div className=\"fullpage\">\n    <Card className=\"fullpage-content\" elevation={Elevation.THREE}>\n      <ContributorsDetails />\n      <ContributorsList />\n    </Card>\n  </div>\n);\n\nexport default Contributors;\n","import { Classes, NonIdealState } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\ninterface DisabledProps {\n  reason?: string;\n}\n\nconst Disabled: React.FC<DisabledProps> = ({ reason }) => (\n  <div className={classNames('NoPage', Classes.DARK)}>\n    <NonIdealState\n      icon={IconNames.ERROR}\n      title=\"Disabled\"\n      description={`The Source Academy has been disabled${\n        reason ? ` for this reason: ${reason}` : ''\n      }.`}\n    />\n  </div>\n);\n\nexport default Disabled;\n","import * as qs from 'query-string';\nimport { isArray } from 'util';\n\nexport interface IParsedQuery {\n  [key: string]: string | undefined;\n}\n\n/**\n * Parse a query string into an object.\n *\n * This is a wrapper for query-string that disables array and null parsing (so\n * the object has only strings).\n */\nexport function parseQuery(query: string): IParsedQuery {\n  const parsed = qs.parse(query);\n  for (const [key, val] of Object.entries(parsed)) {\n    if (isArray(val)) {\n      parsed[key] = val.join(',');\n    } else if (val === null) {\n      delete parsed[key];\n    }\n  }\n\n  return parsed as IParsedQuery;\n}\n","import { Classes, NonIdealState, Spinner, SpinnerSize } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as qs from 'query-string';\nimport { useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router';\n\nimport Constants from '../../commons/utils/Constants';\nimport { parseQuery } from '../../commons/utils/QueryHelper';\nimport * as GitHubUtils from '../../features/github/GitHubUtils';\n\n/**\n * The page that the user is redirected to after they have approved the app through GitHub.\n * This page will complete the OAuth workflow by sending the access code the back-end to retrieve the auth-token.\n * The auth-token is then broadcasted back to the main browser page.\n */\nfunction GitHubCallback({ location }: RouteComponentProps<{}>) {\n  const accessCode = parseQuery(location.search).code;\n\n  const [state, setState] = useState<'initial' | 'loading' | 'error'>('initial');\n  useEffect(() => {\n    if (state === 'initial' && Constants.githubClientId && accessCode) {\n      setState('loading');\n      retrieveAuthTokenUpdatePage(accessCode, Constants.githubClientId, () => setState('error'));\n    }\n  }, [accessCode, state]);\n\n  if (!Constants.githubClientId) {\n    return (\n      <Failure title=\"We couldn't authenticate you with GitHub\">\n        Client ID not included with deployment. Please try again or contact the website\n        administrator.\n      </Failure>\n    );\n  }\n\n  if (!accessCode) {\n    return (\n      <Failure title=\"We couldn't authenticate you with GitHub\">\n        Access code not found in callback URL. Please try again or contact the website\n        administrator.\n      </Failure>\n    );\n  }\n\n  return state === 'error' ? (\n    <Failure title=\"We couldn't authenticate you with GitHub\">\n      Connection with server was denied, or incorrect payload received. Please try again or contact\n      the website administrator.\n    </Failure>\n  ) : (\n    <div className={classNames('NoPage', Classes.DARK)}>\n      <NonIdealState description=\"Logging In...\" icon={<Spinner size={SpinnerSize.LARGE} />} />\n    </div>\n  );\n}\n\nasync function retrieveAuthTokenUpdatePage(\n  accessCode: string,\n  clientId: string,\n  onError: () => void\n) {\n  const responseObject = await GitHubUtils.exchangeAccessCode(\n    Constants.githubOAuthProxyUrl,\n    qs.stringify({\n      code: accessCode,\n      clientId: clientId\n    })\n  );\n\n  let response: any;\n\n  try {\n    // This line might throw syntax error if the payload received is in the wrong format\n    response = await responseObject.json();\n\n    if (typeof response.access_token === 'undefined') {\n      throw new Error('Access Token not found in payload');\n    }\n  } catch (err) {\n    onError();\n    return;\n  }\n\n  try {\n    // Send auth token back to the main browser page\n    const broadcastChannel = new BroadcastChannel('GitHubOAuthAccessToken');\n    broadcastChannel.postMessage(response.access_token);\n    window.close();\n  } catch (err) {\n    // This block should not be reached during normal running of code\n    // However, BroadcastChannel does not exist in the test environment\n  }\n}\n\nfunction Failure({ title, children }: { title: string; children: string }) {\n  return (\n    <div className={classNames('NoPage', Classes.DARK)}>\n      <NonIdealState icon={IconNames.ERROR} title={title} description={children} />\n    </div>\n  );\n}\n\nexport default GitHubCallback;\n","import {\n  Button,\n  ButtonGroup,\n  Card,\n  Classes,\n  H4,\n  Icon,\n  NonIdealState,\n  Spinner,\n  SpinnerSize\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router';\n\nimport { fetchAuth, login } from '../../commons/application/actions/SessionActions';\nimport Constants from '../../commons/utils/Constants';\nimport { parseQuery } from '../../commons/utils/QueryHelper';\n\nconst providers = [...Constants.authProviders.entries()].map(([id, { name }]) => ({\n  id,\n  name\n}));\n\nconst Login: React.FunctionComponent<{}> = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { code, provider: providerId } = parseQuery(location.search);\n\n  const handleLogin = React.useCallback(providerId => dispatch(login(providerId)), [dispatch]);\n\n  React.useEffect(() => {\n    if (code) {\n      dispatch(fetchAuth(code, providerId));\n    }\n  }, [code, providerId, dispatch]);\n\n  if (code) {\n    return (\n      <div className={classNames('Login', Classes.DARK)}>\n        <Card className={classNames('login-card', Classes.ELEVATION_4)}>\n          <div className=\"login-body\">\n            <NonIdealState\n              description=\"Logging In...\"\n              icon={<Spinner size={SpinnerSize.LARGE} />}\n            />\n          </div>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className={classNames('Login', Classes.DARK)}>\n      <Card className={classNames('login-card', Classes.ELEVATION_4)}>\n        <div className=\"login-header\">\n          <H4>\n            <Icon icon={IconNames.LOCK} />\n            LOGIN\n          </H4>\n        </div>\n        <div className=\"login-body\">\n          <ButtonGroup fill={true} vertical={true}>\n            {providers.map(({ id, name }) => (\n              <LoginButton handleClick={handleLogin} name={name} id={id} key={id} />\n            ))}\n          </ButtonGroup>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nconst LoginButton = ({\n  handleClick,\n  id,\n  name\n}: {\n  handleClick: (id: string) => void;\n  id: string;\n  name: string;\n}) => {\n  return (\n    <Button\n      className={Classes.LARGE}\n      rightIcon={IconNames.LOG_IN}\n      onClick={React.useCallback(() => handleClick(id), [handleClick, id])}\n    >\n      {`Log in with ${name}`}\n    </Button>\n  );\n};\n\nexport default Login;\n","import { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { Question } from '../assessment/AssessmentTypes';\n\nexport const EDITING_ID = -1;\n\nexport type XmlParseStrTask = {\n  $: XmlParseStrOverview;\n  DEPLOYMENT: XmlParseStrDeployment[];\n  GRADERDEPLOYMENT: XmlParseStrDeployment[];\n  PROBLEMS: Array<{ PROBLEM: XmlParseStrProblem[] }>;\n  READING: string[];\n  TEXT: string[];\n  WEBSUMMARY?: string[];\n};\n\nexport type XmlParseStrDeployment = {\n  $: {\n    interpreter: string;\n  };\n  GLOBAL?: Array<{\n    IDENTIFIER: string[];\n    VALUE: string[];\n  }>;\n  IMPORT?: Array<{\n    $: {\n      name: ExternalLibraryName;\n    };\n    SYMBOL: string[];\n  }>;\n  // deprecated EXTERNAL in DEPLOYMENT and GRADERDEPLOYMENT, use IMPORT instead\n  EXTERNAL?: Array<{\n    $: {\n      name: ExternalLibraryName;\n    };\n    SYMBOL: string[];\n  }>;\n};\n\nexport type XmlParseStrOverview = {\n  coverimage: string;\n  duedate: string;\n  kind: string;\n  number: string;\n  title: string;\n  startdate: string;\n  story: string | null;\n};\n\nexport type XmlParseStrProblem = {\n  $: {\n    type: Question['type'];\n    maxgrade: string;\n    maxxp: string;\n  };\n  DEPLOYMENT?: XmlParseStrDeployment[];\n  GRADERDEPLOYMENT?: XmlParseStrDeployment[];\n  TEXT: string[];\n};\n\ntype PProblem = {\n  SNIPPET: Array<{\n    TEMPLATE: string[];\n    PREPEND: string;\n    SOLUTION: string[];\n    POSTPEND: string;\n    TESTCASES: Array<{\n      PUBLIC?: XmlParseStrTestcase[];\n      PRIVATE?: XmlParseStrTestcase[];\n    }>;\n    GRADER: string[];\n  }>;\n  TEXT: string[];\n};\n\nexport type XmlParseStrPProblem = PProblem & XmlParseStrProblem;\n\ntype CProblem = {\n  CHOICE: XmlParseStrProblemChoice[];\n  SNIPPET: {\n    SOLUTION: string[];\n  };\n};\n\nexport type XmlParseStrCProblem = CProblem & XmlParseStrProblem;\n\nexport type XmlParseStrProblemChoice = {\n  $: {\n    correct: string;\n  };\n  TEXT: string[];\n};\n\nexport type XmlParseStrTestcase = {\n  $: {\n    answer: string;\n    score: string;\n  };\n  _: string;\n};\n","import { Chapter } from 'Clang-slang/dist/types';\nimport { Builder } from 'xml2js';\n\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport {\n  Assessment,\n  AssessmentOverview,\n  AssessmentStatuses,\n  AssessmentType,\n  BaseQuestion,\n  emptyLibrary,\n  GradingStatuses,\n  IMCQQuestion,\n  IProgrammingQuestion,\n  Library,\n  MCQChoice,\n  Question,\n  Testcase,\n  TestcaseTypes\n} from '../assessment/AssessmentTypes';\nimport {\n  EDITING_ID,\n  XmlParseStrCProblem,\n  XmlParseStrDeployment,\n  XmlParseStrOverview,\n  XmlParseStrPProblem,\n  XmlParseStrProblem,\n  XmlParseStrProblemChoice,\n  XmlParseStrTask,\n  XmlParseStrTestcase\n} from './XMLParserTypes';\n\nconst capitalizeFirstLetter = (str: string) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport const retrieveLocalAssessment = (): Assessment | null => {\n  const assessment = localStorage.getItem('MissionEditingAssessmentSA');\n  if (assessment) {\n    return JSON.parse(assessment);\n  } else {\n    return null;\n  }\n};\n\nexport const retrieveLocalAssessmentOverview = (): AssessmentOverview | null => {\n  const assessment = localStorage.getItem('MissionEditingOverviewSA');\n  if (assessment) {\n    return JSON.parse(assessment);\n  } else {\n    return null;\n  }\n};\n\nexport const storeLocalAssessment = (assessment: Assessment): void => {\n  localStorage.setItem('MissionEditingAssessmentSA', JSON.stringify(assessment));\n};\n\nexport const storeLocalAssessmentOverview = (overview: AssessmentOverview): void => {\n  localStorage.setItem('MissionEditingOverviewSA', JSON.stringify(overview));\n};\n\nexport const makeEntireAssessment = (result: any): [AssessmentOverview, Assessment] => {\n  const assessmentArr = makeAssessment(result);\n  const overview = makeAssessmentOverview(result, assessmentArr[1]);\n  return [overview, assessmentArr[0]];\n};\n\nconst makeAssessmentOverview = (result: any, maxXpVal: number): AssessmentOverview => {\n  const task: XmlParseStrTask = result.CONTENT.TASK[0];\n  const rawOverview: XmlParseStrOverview = task.$;\n  return {\n    type: capitalizeFirstLetter(rawOverview.kind) as AssessmentType,\n    isManuallyGraded: true, // TODO: This is temporarily hardcoded to true. To be redone when overhauling MissionControl\n    closeAt: rawOverview.duedate,\n    coverImage: rawOverview.coverimage,\n    id: EDITING_ID,\n    maxXp: maxXpVal,\n    number: rawOverview.number || '',\n    openAt: rawOverview.startdate,\n    title: rawOverview.title,\n    reading: task.READING ? task.READING[0] : '',\n    shortSummary: task.WEBSUMMARY ? task.WEBSUMMARY[0] : '',\n    status: AssessmentStatuses.attempting,\n    story: rawOverview.story,\n    xp: 0,\n    gradingStatus: 'none' as GradingStatuses\n  };\n};\n\nconst makeAssessment = (result: any): [Assessment, number] => {\n  const task: XmlParseStrTask = result.CONTENT.TASK[0];\n  const rawOverview: XmlParseStrOverview = task.$;\n  const questionArr = makeQuestions(task);\n  return [\n    {\n      type: capitalizeFirstLetter(rawOverview.kind) as AssessmentType,\n      id: EDITING_ID,\n      globalDeployment: makeLibrary(task.DEPLOYMENT),\n      graderDeployment: makeLibrary(task.GRADERDEPLOYMENT),\n      longSummary: task.TEXT[0],\n      missionPDF: 'google.com',\n      questions: questionArr[0],\n      title: rawOverview.title\n    },\n    questionArr[1]\n  ];\n};\n\nconst altEval = (str: string): any => {\n  // eslint-disable-next-line no-new-func\n  return Function('\"use strict\";return (' + str + ')')();\n};\n\nconst makeLibrary = (deploymentArr: XmlParseStrDeployment[] | undefined): Library => {\n  if (deploymentArr === undefined) {\n    return emptyLibrary();\n  } else {\n    const deployment = deploymentArr[0];\n    const external = deployment.IMPORT || deployment.EXTERNAL;\n    const nameVal = external ? external[0].$.name : 'NONE';\n    const symbolsVal = external ? external[0].SYMBOL || [] : [];\n    const globalsVal = deployment.GLOBAL\n      ? (deployment.GLOBAL.map(x => [x.IDENTIFIER[0], altEval(x.VALUE[0]), x.VALUE[0]]) as Array<\n          [string, any, string]\n        >)\n      : [];\n    return {\n      external: {\n        name: nameVal as ExternalLibraryName,\n        symbols: symbolsVal\n      },\n      globals: globalsVal\n    };\n  }\n};\n\nconst makeQuestions = (task: XmlParseStrTask): [Question[], number] => {\n  let maxXp = 0;\n  const questions: Array<IProgrammingQuestion | IMCQQuestion> = [];\n  task.PROBLEMS[0].PROBLEM.forEach((problem: XmlParseStrProblem, curId: number) => {\n    const localMaxXp = problem.$.maxxp ? parseInt(problem.$.maxxp, 10) : 0;\n    const question: BaseQuestion = {\n      answer: null,\n      content: problem.TEXT[0],\n      id: curId,\n      library: makeLibrary(problem.DEPLOYMENT),\n      graderLibrary: makeLibrary(problem.GRADERDEPLOYMENT),\n      type: problem.$.type,\n      xp: 0,\n      maxXp: localMaxXp\n    };\n    maxXp += localMaxXp;\n    if (question.type === 'programming') {\n      questions.push(makeProgramming(problem as XmlParseStrPProblem, question));\n    }\n    if (question.type === 'mcq') {\n      questions.push(makeMCQ(problem as XmlParseStrCProblem, question));\n    }\n  });\n  return [questions, maxXp];\n};\n\nconst makeMCQ = (problem: XmlParseStrCProblem, question: BaseQuestion): IMCQQuestion => {\n  const choicesVal: MCQChoice[] = [];\n  const solution = problem.SNIPPET ? problem.SNIPPET[0].SOLUTION : undefined;\n  let solutionVal = 0;\n  problem.CHOICE.forEach((choice: XmlParseStrProblemChoice, i: number) => {\n    choicesVal.push({\n      content: choice.TEXT[0],\n      hint: null\n    });\n    solutionVal = choice.$.correct === 'true' ? i : solutionVal;\n  });\n  return {\n    ...question,\n    type: 'mcq',\n    answer: solution ? parseInt(solution[0], 10) : 0,\n    choices: choicesVal,\n    solution: solutionVal\n  };\n};\n\nconst makeProgramming = (\n  problem: XmlParseStrPProblem,\n  question: BaseQuestion\n): IProgrammingQuestion => {\n  const testcases = problem.SNIPPET[0].TESTCASES;\n  const publicTestcases = testcases ? testcases[0].PUBLIC || [] : [];\n  const privateTestcases = testcases ? testcases[0].PRIVATE || [] : [];\n  const prepend = problem.SNIPPET[0].PREPEND;\n  const postpend = problem.SNIPPET[0].POSTPEND;\n  const solution = problem.SNIPPET[0].SOLUTION;\n\n  const result: IProgrammingQuestion = {\n    ...question,\n    autogradingResults: [],\n    prepend: prepend ? (prepend[0] as string).trim() : '',\n    solutionTemplate: problem.SNIPPET[0].TEMPLATE[0].trim() as string,\n    postpend: postpend ? (postpend[0] as string).trim() : '',\n    testcases: publicTestcases.map(testcase => makeTestcase(testcase)),\n    testcasesPrivate: privateTestcases.map(testcase => makeTestcase(testcase)),\n    answer: solution ? (solution[0] as string).trim() : '',\n    type: 'programming'\n  };\n  if (problem.SNIPPET[0].GRADER) {\n    result.graderTemplate = problem.SNIPPET[0].GRADER[0];\n  }\n  return result;\n};\n\nconst makeTestcase = (testcase: XmlParseStrTestcase): Testcase => {\n  return {\n    type: TestcaseTypes.public,\n    answer: testcase.$.answer,\n    score: parseInt(testcase.$.score, 10),\n    program: testcase._\n  };\n};\n\nexport const exportXml = () => {\n  const assessmentStr = localStorage.getItem('MissionEditingAssessmentSA');\n  const overviewStr = localStorage.getItem('MissionEditingOverviewSA');\n  if (assessmentStr && overviewStr) {\n    const assessment: Assessment = JSON.parse(assessmentStr);\n    const overview: AssessmentOverview = JSON.parse(overviewStr);\n    const filename = overview.fileName || overview.title;\n    const builder = new Builder();\n    const xmlTask: XmlParseStrTask = assessmentToXml(assessment, overview);\n    const xml = {\n      CONTENT: {\n        $: {\n          'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n        },\n        TASK: xmlTask\n      }\n    };\n    let xmlStr = builder.buildObject(xml);\n    xmlStr = xmlStr.replace(/(&#xD;)+/g, '');\n    download(filename + '.xml', xmlStr);\n  }\n};\n\nconst download = (filename: string, text: string) => {\n  const element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n\nconst exportLibrary = (library: Library) => {\n  const deployment = {\n    $: {\n      interpreter: Chapter.CLANG.toString()\n    },\n    EXTERNAL: {\n      $: {\n        name: library.external.name\n      }\n    }\n  };\n\n  if (library.external.symbols.length !== 0) {\n    /* tslint:disable:no-string-literal */\n    deployment.EXTERNAL['SYMBOL'] = library.external.symbols;\n  }\n  if (library.globals.length !== 0) {\n    /* tslint:disable:no-string-literal */\n    deployment['GLOBAL'] = library.globals.map(x => {\n      return {\n        IDENTIFIER: x[0],\n        VALUE: x[2]\n      };\n    });\n  }\n  return deployment;\n};\n\nexport const assessmentToXml = (\n  assessment: Assessment,\n  overview: AssessmentOverview\n): XmlParseStrTask => {\n  const task: any = {};\n  const rawOverview: XmlParseStrOverview = {\n    coverimage: overview.coverImage,\n    duedate: overview.closeAt,\n    kind: overview.type.toLowerCase(),\n    number: overview.number || '',\n    startdate: overview.openAt,\n    story: overview.story,\n    title: overview.title\n  };\n  task.$ = rawOverview;\n\n  if (overview.reading && overview.reading !== '') {\n    task.READING = overview.reading;\n  }\n\n  task.WEBSUMMARY = overview.shortSummary;\n  task.TEXT = assessment.longSummary;\n  task.PROBLEMS = { PROBLEM: [] };\n\n  task.DEPLOYMENT = exportLibrary(assessment.globalDeployment!);\n\n  task.GRADERDEPLOYMENT = exportLibrary(assessment.graderDeployment!);\n\n  assessment.questions.forEach((question: Question) => {\n    const problem = {\n      $: {\n        type: question.type\n      },\n      SNIPPET: {\n        SOLUTION: question.answer\n      },\n      TEXT: question.content,\n      CHOICE: [] as any[]\n    };\n\n    /* tslint:disable:no-string-literal */\n    problem.$['DEPLOYMENT'] = exportLibrary(question.library);\n\n    /* tslint:disable:no-string-literal */\n    problem.$['GRADERDEPLOYMENT'] = exportLibrary(question.graderLibrary!);\n\n    if (question.maxXp) {\n      /* tslint:disable:no-string-literal */\n      problem.$['maxxp'] = question.maxXp;\n    }\n\n    if (question.type === 'programming') {\n      if (question.graderTemplate) {\n        /* tslint:disable:no-string-literal */\n        problem.SNIPPET['GRADER'] = question.graderTemplate;\n      }\n      const snippet = {\n        ...problem.SNIPPET,\n        TEMPLATE: question.solutionTemplate,\n        PREPEND: question.prepend,\n        POSTPEND: question.postpend,\n        TESTCASES: '' as any\n      };\n\n      if (question.testcases.length || question.testcasesPrivate!.length) {\n        /* tslint:disable:no-string-literal */\n        snippet.TESTCASES = {};\n        if (question.testcases.length) {\n          const publicTests = question.testcases.map(testcase => {\n            return {\n              $: {\n                answer: testcase.answer,\n                score: testcase.score\n              },\n              _: testcase.program\n            };\n          });\n          snippet.TESTCASES['PUBLIC'] = publicTests;\n        }\n\n        if (question.testcasesPrivate && question.testcasesPrivate.length) {\n          const privateTests = question.testcasesPrivate.map(testcase => {\n            return {\n              $: {\n                answer: testcase.answer,\n                score: testcase.score\n              },\n              _: testcase.program\n            };\n          });\n          snippet.TESTCASES['PRIVATE'] = privateTests;\n        }\n      }\n\n      problem.SNIPPET = snippet;\n    }\n\n    if (question.type === 'mcq') {\n      question.choices.forEach((choice: MCQChoice, i: number) => {\n        problem.CHOICE.push({\n          $: {\n            correct: question.solution === i ? 'true' : 'false'\n          },\n          TEXT: choice.content\n        });\n      });\n    }\n\n    task.PROBLEMS.PROBLEM.push(problem);\n  });\n\n  return task;\n};\n","import {\n  Button,\n  Card,\n  Classes,\n  Dialog,\n  Elevation,\n  H3,\n  H4,\n  H6,\n  Icon,\n  Intent,\n  MenuItem,\n  Text\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ItemRenderer, Select } from '@blueprintjs/select';\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Textarea from 'react-textarea-autosize';\n\nimport defaultCoverImage from '../../assets/default_cover_image.jpg';\nimport { AssessmentOverview, AssessmentType } from '../assessment/AssessmentTypes';\nimport ControlButton from '../ControlButton';\nimport Markdown from '../Markdown';\nimport Constants from '../utils/Constants';\nimport { getPrettyDate } from '../utils/DateHelper';\nimport { exportXml, storeLocalAssessmentOverview } from '../XMLParser/XMLParserHelper';\n\ntype EditingOverviewCardProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  updateEditingOverview: (overview: AssessmentOverview) => void;\n};\n\ntype StateProps = {\n  listingPath: string;\n  overview: AssessmentOverview;\n  assessmentTypes: AssessmentType[];\n};\n\ntype State = {\n  editingOverviewField: string;\n  fieldValue: any;\n  showOptionsOverlay: boolean;\n};\n\nexport class EditingOverviewCard extends React.Component<EditingOverviewCardProps, State> {\n  public constructor(props: EditingOverviewCardProps) {\n    super(props);\n    this.state = {\n      editingOverviewField: '',\n      fieldValue: '',\n      showOptionsOverlay: false\n    };\n  }\n\n  public render() {\n    return (\n      <div>\n        {this.optionsOverlay()}\n        {this.makeEditingOverviewCard(this.props.overview)}\n      </div>\n    );\n  }\n\n  private saveEditOverview = (field: keyof AssessmentOverview) => (e: any) => {\n    const overview = {\n      ...this.props.overview,\n      [field]: this.state.fieldValue\n    };\n    this.setState({\n      editingOverviewField: '',\n      fieldValue: ''\n    });\n    storeLocalAssessmentOverview(overview);\n    this.props.updateEditingOverview(overview);\n  };\n\n  private handleEditOverview = () => (e: any) => {\n    this.setState({\n      fieldValue: e.target.value\n    });\n  };\n\n  private toggleEditField = (field: keyof AssessmentOverview) => (e: any) => {\n    if (this.state.editingOverviewField !== field) {\n      this.setState({\n        editingOverviewField: field,\n        fieldValue: this.props.overview[field]\n      });\n    }\n  };\n\n  private toggleOptionsOverlay = () => {\n    this.setState({\n      showOptionsOverlay: !this.state.showOptionsOverlay\n    });\n  };\n\n  private handleExportXml = (e: any) => {\n    exportXml();\n  };\n\n  private makeEditingOverviewTextarea = (field: keyof AssessmentOverview) => (\n    <Textarea\n      autoFocus={true}\n      className={'editing-textarea'}\n      onChange={this.handleEditOverview()}\n      onBlur={this.saveEditOverview(field)}\n      value={this.state.fieldValue}\n    />\n  );\n\n  private makeEditingOverviewCard = (overview: AssessmentOverview) => (\n    <div>\n      <Card className=\"row listing\" elevation={Elevation.ONE}>\n        <div className=\"col-xs-3 listing-picture\" onClick={this.toggleEditField('coverImage')}>\n          {this.state.editingOverviewField === 'coverImage' ? (\n            this.makeEditingOverviewTextarea('coverImage')\n          ) : (\n            <img\n              alt=\"Assessment cover\"\n              className={`cover-image-${overview.status}`}\n              src={overview.coverImage ? overview.coverImage : defaultCoverImage}\n            />\n          )}\n        </div>\n\n        <div className=\"col-xs-9 listing-text\">\n          {this.makeEditingOverviewCardTitle(overview, overview.title)}\n          <div className=\"row listing-xp\">\n            <H6> {`Max XP: ${overview.maxXp}`} </H6>\n          </div>\n          <div className=\"row listing-description\" onClick={this.toggleEditField('shortSummary')}>\n            {this.state.editingOverviewField === 'shortSummary' ? (\n              this.makeEditingOverviewTextarea('shortSummary')\n            ) : (\n              <Markdown content={createPlaceholder(overview.shortSummary)} />\n            )}\n          </div>\n          <div className=\"listing-controls\">\n            <Text className=\"listing-due-date\">\n              <Icon className=\"listing-due-icon\" iconSize={12} icon={IconNames.TIME} />\n              <div className=\"date-container\">Opens at:&nbsp;</div>\n              <div className=\"date-container\" onClick={this.toggleEditField('openAt')}>\n                {this.state.editingOverviewField === 'openAt'\n                  ? this.makeEditingOverviewTextarea('openAt')\n                  : `${getPrettyDate(overview.openAt)}`}\n              </div>\n\n              <div className=\"date-container\">&nbsp;&nbsp;Due:&nbsp;</div>\n              <div className=\"date-container\" onClick={this.toggleEditField('closeAt')}>\n                {this.state.editingOverviewField === 'closeAt'\n                  ? this.makeEditingOverviewTextarea('closeAt')\n                  : `${getPrettyDate(overview.closeAt)}`}\n              </div>\n            </Text>\n            <Button icon={IconNames.WRENCH} minimal={true} onClick={this.toggleOptionsOverlay}>\n              Other Options\n            </Button>\n            <NavLink\n              to={`${this.props.listingPath}/${overview.id.toString()}/${\n                Constants.defaultQuestionId\n              }`}\n            >\n              <ControlButton label=\"Edit mission\" icon={IconNames.EDIT} />\n            </NavLink>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n\n  private makeEditingOverviewCardTitle = (overview: AssessmentOverview, title: string) => (\n    <div className=\"row listing-title\">\n      <Text ellipsize={true} className={'col-xs-10'}>\n        <H4 onClick={this.toggleEditField('title')}>\n          {this.state.editingOverviewField === 'title'\n            ? this.makeEditingOverviewTextarea('title')\n            : createPlaceholder(title)}\n        </H4>\n      </Text>\n      <div className=\"col-xs-2\">{this.makeExportButton(overview)}</div>\n    </div>\n  );\n\n  private makeExportButton = (overview: AssessmentOverview) => (\n    <Button\n      icon={IconNames.EXPORT}\n      intent={Intent.DANGER}\n      minimal={true}\n      onClick={this.handleExportXml}\n    >\n      Save as XML\n    </Button>\n  );\n\n  private saveCategory = (i: AssessmentType, e: any) => {\n    const overview = {\n      ...this.props.overview,\n      category: i\n    };\n    storeLocalAssessmentOverview(overview);\n    this.props.updateEditingOverview(overview);\n  };\n\n  private optionsOverlay = () => (\n    <Dialog\n      canOutsideClickClose={false}\n      className=\"assessment-reset\"\n      icon={IconNames.WRENCH}\n      isCloseButtonShown={true}\n      isOpen={this.state.showOptionsOverlay}\n      onClose={this.toggleOptionsOverlay}\n      title=\"Other options\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <H3>Assessment Type</H3>\n        {this.assessmentTypeSelect(this.props.overview.type, this.saveCategory)}\n        <H3>Number</H3>\n        <div onClick={this.toggleEditField('number')}>\n          {this.state.editingOverviewField === 'number'\n            ? this.makeEditingOverviewTextarea('number')\n            : createPlaceholder(this.props.overview.number || '')}\n        </div>\n        <H3>Story</H3>\n        <div onClick={this.toggleEditField('story')}>\n          {this.state.editingOverviewField === 'story'\n            ? this.makeEditingOverviewTextarea('story')\n            : createPlaceholder(this.props.overview.story || '')}\n        </div>\n        <br />\n        <H3>Filename</H3>\n        <div onClick={this.toggleEditField('fileName')}>\n          {this.state.editingOverviewField === 'fileName'\n            ? this.makeEditingOverviewTextarea('fileName')\n            : createPlaceholder(this.props.overview.fileName || '')}\n        </div>\n      </div>\n    </Dialog>\n  );\n\n  private assessmentTypeSelect = (\n    assessmentType: AssessmentType,\n    handleSelect = (i: AssessmentType, e?: React.SyntheticEvent<HTMLElement>) => {}\n  ) => (\n    <AssessmentTypeSelectComponent\n      className={Classes.MINIMAL}\n      items={this.props.assessmentTypes}\n      onItemSelect={handleSelect}\n      itemRenderer={assessmentTypeRenderer}\n      filterable={false}\n    >\n      <Button\n        className={Classes.MINIMAL}\n        text={assessmentType}\n        rightIcon={IconNames.DOUBLE_CARET_VERTICAL}\n      />\n    </AssessmentTypeSelectComponent>\n  );\n}\n\nconst createPlaceholder = (str: string): string => {\n  if (str.match('^(\\n| )*$')) {\n    return 'Enter Value Here (If Applicable)';\n  } else {\n    return str;\n  }\n};\n\nconst AssessmentTypeSelectComponent = Select.ofType<AssessmentType>();\n\nconst assessmentTypeRenderer: ItemRenderer<AssessmentType> = (\n  assessmentType,\n  { handleClick, modifiers, query }\n) => <MenuItem active={false} key={assessmentType} onClick={handleClick} text={assessmentType} />;\n","import { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\n\ntype ControlBarToggleEditModeButtonProps = {\n  toggleEditMode?(): void;\n  editingMode?: string;\n};\n\nexport const ControlBarToggleEditModeButton: React.FC<ControlBarToggleEditModeButtonProps> = ({\n  toggleEditMode,\n  editingMode\n}) => {\n  const editMode = editingMode === 'question' ? 'Global' : 'Question Specific';\n  return (\n    <Tooltip2 content={'Switch to ' + editMode + ' Editing Mode'}>\n      <ControlButton\n        label={editMode + ' Editing Mode'}\n        icon={IconNames.REFRESH}\n        onClick={toggleEditMode}\n      />\n    </Tooltip2>\n  );\n};\n","export const getValueFromPath = (path: Array<string | number>, obj: any): any => {\n  for (const next of path) {\n    obj = obj[next];\n  }\n  return obj;\n};\n\nexport const assignToPath = (path: Array<string | number>, value: any, obj: any): void => {\n  let i = 0;\n  for (i = 0; i < path.length - 1; i++) {\n    obj = obj[path[i]];\n  }\n  obj[path[i]] = value;\n};\n\nexport const limitNumberRange =\n  (min: number | null = 0, max: number | null = null) =>\n  (value: number | string): number => {\n    value = typeof value === 'string' ? parseInt(value, 10) : value;\n    let result;\n    if (min !== null && value < min) {\n      result = min;\n    } else if (max !== null && value > max) {\n      result = max;\n    } else {\n      result = value;\n    }\n    return result;\n  };\n","import React, { useState } from 'react';\nimport Textarea from 'react-textarea-autosize';\n\nimport { Assessment } from '../assessment/AssessmentTypes';\nimport Markdown from '../Markdown';\nimport { assignToPath, getValueFromPath } from './EditingWorkspaceSideContentHelper';\n\ntype TextAreaContentProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  processResults?: (newVal: string | number) => string | number;\n  updateAssessment: (assessment: Assessment) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  isNumber?: boolean;\n  path: Array<string | number>;\n  useRawValue?: boolean;\n};\n\nexport const TextAreaContent: React.FC<TextAreaContentProps> = props => {\n  const isNumberVal = props.isNumber || false;\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [isNumber] = useState(isNumberVal);\n  const [fieldValue, setFieldValue] = useState('');\n  const [useRawValue] = useState(props.useRawValue || isNumberVal);\n\n  const saveEditAssessment = (e: any) => {\n    let parsedFieldValue: number | string;\n    if (isNumber) {\n      parsedFieldValue = parseInt(fieldValue, 10);\n      if (isNaN(parsedFieldValue)) {\n        parsedFieldValue = getValueFromPath(props.path, props.assessment);\n      }\n    } else {\n      parsedFieldValue = fieldValue;\n    }\n    const originalVal = getValueFromPath(props.path, props.assessment);\n    if (props.processResults) {\n      parsedFieldValue = props.processResults(parsedFieldValue);\n    }\n    if (parsedFieldValue !== originalVal) {\n      const assessmentVal = props.assessment;\n      assignToPath(props.path, parsedFieldValue, assessmentVal);\n      props.updateAssessment(assessmentVal);\n    }\n\n    setIsEditing(false);\n  };\n\n  const handleEditAssessment = (e: any) => {\n    setFieldValue(e.target.value);\n  };\n\n  const makeEditingTextarea = () => (\n    <Textarea\n      autoFocus={true}\n      className={'editing-textarea'}\n      onChange={handleEditAssessment}\n      onBlur={saveEditAssessment}\n      value={fieldValue}\n    />\n  );\n\n  const toggleEditField = () => (e: any) => {\n    if (!isEditing) {\n      const fieldVal = getValueFromPath(props.path, props.assessment) || '';\n      setIsEditing(true);\n      setFieldValue(typeof fieldVal === 'string' ? fieldVal : fieldVal.toString());\n    }\n  };\n\n  let display;\n  if (isEditing) {\n    display = makeEditingTextarea();\n  } else {\n    const filler = 'Please enter value (if applicable)';\n    let value = getValueFromPath(props.path, props.assessment);\n    if (!props.isNumber) {\n      value = value || '';\n      value = value.match(/^\\s*$/) ? filler : value;\n    }\n    if (useRawValue) {\n      display = value;\n    } else {\n      display = <Markdown content={value} />;\n    }\n  }\n  return <div onClick={toggleEditField()}>{display}</div>;\n};\n\nexport default TextAreaContent;\n","import { Card, Elevation, H6 } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport {\n  Assessment,\n  IProgrammingQuestion,\n  Testcase,\n  testcaseTemplate\n} from '../assessment/AssessmentTypes';\nimport ControlButton from '../ControlButton';\nimport { getValueFromPath } from './EditingWorkspaceSideContentHelper';\nimport TextAreaContent from './EditingWorkspaceSideContentTextAreaContent';\n\ntype AutograderProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleTestcaseEval: (testcase: Testcase) => void;\n  updateAssessment: (assessment: Assessment) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  questionId: number;\n};\n\nexport const AutograderTab: React.FC<AutograderProps> = props => {\n  const addTestcase = (testcases: Testcase[]) => () => {\n    testcases.push(testcaseTemplate());\n    props.updateAssessment(props.assessment);\n  };\n\n  const removeTestcase = (testcases: Testcase[], id: number) => {\n    testcases.splice(id, 1);\n    props.updateAssessment(props.assessment);\n  };\n\n  const autograderCard = (testcasePath: Array<string | number>, index: number) => {\n    const testcases = getValueFromPath(testcasePath, props.assessment) as Testcase[];\n    const testcase = testcases[index];\n\n    return (\n      <div>\n        <Card className=\"row listing\" elevation={Elevation.ONE}>\n          <div className=\"col-xs-9 listing-text\">\n            {/* {makeOverviewCardTitle(overview, index, setBetchaAssessment, renderGradingStatus)} */}\n            <div className=\"row listing-program\">\n              <H6>\n                Test Program:\n                <TextAreaContent\n                  assessment={props.assessment}\n                  path={testcasePath.concat([index, 'program'])}\n                  useRawValue={true}\n                  updateAssessment={props.updateAssessment}\n                />\n              </H6>\n            </div>\n            <div className=\"row listing-expected\">\n              <H6>\n                Score:\n                <TextAreaContent\n                  assessment={props.assessment}\n                  isNumber={true}\n                  path={testcasePath.concat([index, 'score'])}\n                  updateAssessment={props.updateAssessment}\n                />\n              </H6>\n            </div>\n            <div className=\"row listing-expected\">\n              <H6>\n                Expected Answer:\n                <TextAreaContent\n                  assessment={props.assessment}\n                  path={testcasePath.concat([index, 'answer'])}\n                  useRawValue={true}\n                  updateAssessment={props.updateAssessment}\n                />\n              </H6>\n            </div>\n            <div className=\"listing-controls\">\n              <div>\n                <ControlButton\n                  label=\"Test\"\n                  icon={IconNames.PLAY}\n                  onClick={() => props.handleTestcaseEval(testcase)}\n                />\n                <ControlButton\n                  label=\"Delete\"\n                  icon={IconNames.DELETE}\n                  onClick={() => removeTestcase(testcases, index)}\n                />\n              </div>\n            </div>\n          </div>\n        </Card>\n      </div>\n    );\n  };\n\n  const question = props.assessment.questions[props.questionId] as IProgrammingQuestion;\n  const publicTestPath = ['questions', props.questionId, 'testcases'];\n\n  const publicTestcases = question.testcases.map((testcase, index) => (\n    <div key={index}>{autograderCard(publicTestPath, index)}</div>\n  ));\n\n  const privateTestPath = ['questions', props.questionId, 'testcasesPrivate'];\n  const privateTestcases = question.testcasesPrivate!.map((testcase, index) => (\n    <div key={index}>{autograderCard(privateTestPath, index)}</div>\n  ));\n\n  return (\n    <div>\n      Public Testcases\n      {publicTestcases}\n      <ControlButton\n        label=\"New public testcase\"\n        icon={IconNames.PLUS}\n        onClick={addTestcase(question.testcases)}\n      />\n      <br />\n      <br />\n      Private Testcases\n      {privateTestcases}\n      <ControlButton\n        label=\"New private testcase\"\n        icon={IconNames.PLUS}\n        onClick={addTestcase(question.testcasesPrivate!)}\n      />\n    </div>\n  );\n};\n","import { Button, Classes, Divider, MenuItem, Switch } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ItemRenderer, Select } from '@blueprintjs/select';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport * as React from 'react';\n\nimport { SALanguage, sourceLanguages, styliseSublanguage } from '../application/ApplicationTypes';\nimport {\n  External,\n  externalLibraries,\n  ExternalLibraryName\n} from '../application/types/ExternalTypes';\nimport { Assessment, emptyLibrary, Library } from '../assessment/AssessmentTypes';\nimport ControlButton from '../ControlButton';\nimport { assignToPath, getValueFromPath } from './EditingWorkspaceSideContentHelper';\nimport TextAreaContent from './EditingWorkspaceSideContentTextAreaContent';\n\ntype DeploymentTabProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  updateAssessment: (assessment: Assessment) => void;\n  handleRefreshLibrary: (library: Library) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  label: string;\n  pathToLibrary: Array<string | number>;\n  pathToCopy?: Array<string | number>;\n  isOptionalDeployment: boolean;\n};\n\nclass DeploymentTab extends React.Component<DeploymentTabProps, {}> {\n  public render() {\n    if (!this.props.isOptionalDeployment) {\n      return (\n        <div>\n          {this.props.label + ' Deployment'}\n          <br />\n          {this.deploymentTab()}\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Switch\n            checked={!this.isEmptyLibrary()}\n            label={'Enable ' + this.props.label + ' Deployment'}\n            onChange={this.handleSwitchDeployment}\n          />\n          {this.isEmptyLibrary() ? null : this.deploymentTab()}\n        </div>\n      );\n    }\n  }\n\n  private deploymentTab = () => {\n    const deploymentPath = this.props.pathToLibrary;\n    const deployment = getValueFromPath(deploymentPath, this.props.assessment) as Library;\n    // const deploymentDisp = this.props.isGlobalDeployment ? 'Global Deployment' : 'Local Deployment';\n    const symbols = deployment.external.symbols.map((symbol, i) => (\n      <tr key={i}>\n        <td>{this.textareaContent(deploymentPath.concat(['external', 'symbols', i]))}</td>\n        <td style={{ width: '100px' }}>\n          <ControlButton\n            label=\"Delete\"\n            icon={IconNames.MINUS}\n            onClick={this.handleSymbolDelete(i)}\n          />\n        </td>\n      </tr>\n    ));\n\n    const globals = deployment.globals.map((symbol, i) => (\n      <tr key={i}>\n        <td style={{ width: '170px' }}>\n          {this.textareaContent(deploymentPath.concat(['globals', i, 0]))}\n        </td>\n        <td>{this.globalValueTextareaContent(i)}</td>\n        <td style={{ width: '90px' }}>\n          <ControlButton\n            label=\"Delete\"\n            icon={IconNames.MINUS}\n            onClick={this.handleGlobalDelete(i)}\n          />\n        </td>\n      </tr>\n    ));\n\n    const resetLibrary = (\n      <ControlButton\n        label=\"Use this Library\"\n        icon={IconNames.REFRESH}\n        onClick={() => this.props.handleRefreshLibrary(deployment)}\n      />\n    );\n\n    const symbolsFragment = (\n      <React.Fragment>\n        External Library:\n        <br />\n        {externalSelect(deployment.external.name, this.handleExternalSelect!)}\n        <Divider />\n        <div>Symbols:</div>\n        <br />\n        <table style={{ width: '100%' }}>\n          <tbody>{symbols}</tbody>\n        </table>\n        <ControlButton label=\"New Symbol\" icon={IconNames.PLUS} onClick={this.handleNewSymbol} />\n      </React.Fragment>\n    );\n\n    const globalsFragment = (\n      <React.Fragment>\n        <div>Globals:</div>\n        <br />\n        <table style={{ width: '100%', borderSpacing: '5px' }}>\n          <tbody>{globals}</tbody>\n        </table>\n        <ControlButton label=\"New Global\" icon={IconNames.PLUS} onClick={this.handleNewGlobal} />\n      </React.Fragment>\n    );\n\n    return (\n      <div>\n        {/* {deploymentDisp}\n        <br /> */}\n        <Divider />\n        {resetLibrary}\n        <Divider />\n        Interpreter:\n        <br />\n        {chapterSelect(deployment.variant, this.handleChapterSelect)}\n        <Divider />\n        {symbolsFragment}\n        <Divider />\n        {globalsFragment}\n      </div>\n    );\n  };\n\n  private textareaContent = (path: Array<string | number>) => {\n    return (\n      <TextAreaContent\n        assessment={this.props.assessment}\n        path={path}\n        processResults={removeSpaces}\n        updateAssessment={this.props.updateAssessment}\n        useRawValue={true}\n      />\n    );\n  };\n\n  private globalValueTextareaContent = (i: number) => {\n    const pathVal = this.props.pathToLibrary.concat(['globals', i, 2]);\n    return (\n      <TextAreaContent\n        assessment={this.props.assessment}\n        path={pathVal}\n        updateAssessment={this.handleGlobalValueUpdate(i)}\n        useRawValue={true}\n      />\n    );\n  };\n\n  private handleGlobalValueUpdate = (i: number) => (assessment: Assessment) => {\n    const deployment = getValueFromPath(this.props.pathToLibrary, this.props.assessment) as Library;\n    const global = deployment.globals[i];\n    try {\n      global[1] = altEval(global[2]!);\n      this.props.updateAssessment(assessment);\n    } catch (e) {\n      global[2] = '\"Invalid Expression\"';\n    }\n  };\n\n  private handleSymbolDelete = (index: number) => () => {\n    const assessment = this.props.assessment;\n    const deployment = getValueFromPath(this.props.pathToLibrary, assessment) as Library;\n    const symbols = deployment.external.symbols;\n    symbols.splice(index, 1);\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleNewSymbol = () => {\n    const assessment = this.props.assessment;\n    const deployment = getValueFromPath(this.props.pathToLibrary, assessment) as Library;\n    const symbols = deployment.external.symbols;\n    symbols.push('new_symbol');\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleGlobalDelete = (index: number) => () => {\n    const assessment = this.props.assessment;\n    const deployment = getValueFromPath(this.props.pathToLibrary, assessment) as Library;\n    deployment.globals.splice(index, 1);\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleNewGlobal = () => {\n    const assessment = this.props.assessment;\n    const deployment = getValueFromPath(this.props.pathToLibrary, assessment) as Library;\n    deployment.globals.push(['new_global', null, 'null']);\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleChapterSelect = (i: SALanguage, _e?: React.SyntheticEvent<HTMLElement>) => {\n    const assessment = this.props.assessment;\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleExternalSelect = (i: External, _e?: React.SyntheticEvent<HTMLElement>) => {\n    const assessment = this.props.assessment;\n    const deployment = getValueFromPath(this.props.pathToLibrary, assessment) as Library;\n    deployment.external.name = i.name;\n    deployment.external.symbols = JSON.parse(JSON.stringify(externalLibraries.get(i.name)!));\n    this.props.updateAssessment(assessment);\n  };\n\n  private handleSwitchDeployment = () => {\n    const assessment = this.props.assessment;\n    if (this.isEmptyLibrary()) {\n      let library = getValueFromPath(\n        this.props.pathToCopy || ['globalDeployment'],\n        assessment\n      ) as Library;\n      library = JSON.parse(JSON.stringify(library));\n      assignToPath(this.props.pathToLibrary, library, assessment);\n    } else {\n      assignToPath(this.props.pathToLibrary, emptyLibrary(), assessment);\n    }\n    this.props.updateAssessment(assessment);\n  };\n\n  private isEmptyLibrary = (path: Array<string | number> = this.props.pathToLibrary) => {\n    return getValueFromPath(path.concat(['chapter']), this.props.assessment) === -1;\n  };\n}\n\nconst removeSpaces = (str: string | number) => {\n  return typeof str === 'string' ? str.replace(/\\s+/g, '') : str;\n};\n\nconst altEval = (str: string): any => {\n  // eslint-disable-next-line no-new-func\n  return Function('\"use strict\";return (' + str + ')')();\n};\n\nconst chapterSelect = (\n  variant: Variant = Variant.DEFAULT,\n  handleSelect = (i: SALanguage, e?: React.SyntheticEvent<HTMLElement>) => {}\n) => (\n  <ChapterSelectComponent\n    className={Classes.MINIMAL}\n    items={sourceLanguages}\n    onItemSelect={handleSelect}\n    itemRenderer={chapterRenderer}\n    filterable={false}\n  >\n    <Button\n      className={Classes.MINIMAL}\n      text={styliseSublanguage(Chapter.CLANG, variant)}\n      rightIcon={IconNames.DOUBLE_CARET_VERTICAL}\n    />\n  </ChapterSelectComponent>\n);\n\nconst ChapterSelectComponent = Select.ofType<SALanguage>();\n\nconst chapterRenderer: ItemRenderer<SALanguage> = (chap, { handleClick, modifiers, query }) => (\n  <MenuItem active={false} key={chap.displayName} onClick={handleClick} text={chap.displayName} />\n);\n\nconst iExternals = Array.from(externalLibraries.entries()).map((entry, index) => ({\n  name: entry[0] as ExternalLibraryName,\n  key: index,\n  symbols: entry[1]\n}));\n\nconst externalSelect = (\n  currentExternal: string,\n  handleSelect: (i: External, e?: React.SyntheticEvent<HTMLElement>) => void\n) => (\n  <ExternalSelectComponent\n    className={Classes.MINIMAL}\n    items={iExternals}\n    onItemSelect={handleSelect}\n    itemRenderer={externalRenderer}\n    filterable={false}\n  >\n    <Button\n      className={Classes.MINIMAL}\n      text={currentExternal}\n      rightIcon={IconNames.DOUBLE_CARET_VERTICAL}\n    />\n  </ExternalSelectComponent>\n);\n\nconst ExternalSelectComponent = Select.ofType<External>();\n\nconst externalRenderer: ItemRenderer<External> = (external, { handleClick, modifiers, query }) => (\n  <MenuItem active={false} key={external.key} onClick={handleClick} text={external.name} />\n);\n\nexport default DeploymentTab;\n","import * as React from 'react';\n\nimport { Assessment } from '../assessment/AssessmentTypes';\nimport { limitNumberRange } from './EditingWorkspaceSideContentHelper';\nimport TextAreaContent from './EditingWorkspaceSideContentTextAreaContent';\n\ntype GradingTabProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  updateAssessment: (assessment: Assessment) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  path: Array<string | number>;\n};\n\nconst GradingTab: React.FC<GradingTabProps> = props => {\n  const textareaContent = (path: Array<string | number>) => {\n    return (\n      <TextAreaContent\n        assessment={props.assessment}\n        isNumber={true}\n        path={path}\n        processResults={limitNumberRange(0)}\n        updateAssessment={props.updateAssessment}\n      />\n    );\n  };\n\n  return (\n    <div>\n      Max Xp:\n      {textareaContent(props.path.concat(['maxXp']))}\n    </div>\n  );\n};\n\nexport default GradingTab;\n","import { Button, ButtonGroup, Classes, Dialog, Intent } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport React, { useState } from 'react';\n\nimport { Assessment, mcqTemplate, programmingTemplate } from '../assessment/AssessmentTypes';\nimport ControlButton from '../ControlButton';\nimport Markdown from '../Markdown';\nimport { history } from '../utils/HistoryHelper';\n\ntype ManageQuestionTabProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  updateAssessment: (assessment: Assessment) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  hasUnsavedChanges: boolean;\n  questionId: number;\n};\n\nconst ManageQuestionTab: React.FC<ManageQuestionTabProps> = props => {\n  const [showSaveOverlay, setShowSaveOverlay] = useState(false);\n  const [modifyAssessment, setModifyAssessment] = useState<VoidFunction>(() => {});\n\n  const manageQuestionTab = (index: number) => {\n    return (\n      <div>\n        <ControlButton\n          label=\"Clone\"\n          icon={IconNames.DOCUMENT}\n          onClick={confirmSave(\n            makeQuestion(() => deepCopy(props.assessment.questions[index]), index)\n          )}\n        />\n        <ControlButton\n          label=\"Delete\"\n          icon={IconNames.REMOVE}\n          onClick={confirmSave(deleteQuestion(index))}\n        />\n        <ControlButton\n          label=\"Shift Up\"\n          icon={IconNames.CARET_UP}\n          onClick={confirmSave(shiftQuestion(-1, index))}\n          isDisabled={index === 0}\n        />\n        <ControlButton\n          label=\"Shift Down\"\n          icon={IconNames.CARET_DOWN}\n          onClick={confirmSave(shiftQuestion(1, index))}\n          isDisabled={index >= props.assessment.questions.length - 1}\n        />\n        <br />\n        <ControlButton\n          label=\"Insert Programming Question\"\n          icon={IconNames.FONT}\n          onClick={confirmSave(makeQuestion(programmingTemplate, index))}\n        />\n        <ControlButton\n          label=\"Insert MCQ Question\"\n          icon={IconNames.CONFIRM}\n          onClick={confirmSave(makeQuestion(mcqTemplate, index))}\n        />\n      </div>\n    );\n  };\n\n  const shiftQuestion = (dir: number, index: number) => () => {\n    const assessment = props.assessment;\n    const newIndex = index + dir;\n    if (newIndex >= 0 && newIndex < assessment.questions.length) {\n      const question = assessment.questions[index];\n      const questions = assessment.questions;\n      questions[index] = questions[newIndex];\n      questions[newIndex] = question;\n      assessment.questions = questions;\n      props.updateAssessment(assessment);\n      history.push('/mission-control/-1/' + newIndex.toString());\n    }\n  };\n\n  const makeQuestion = (template: () => any, index: number) => () => {\n    const assessment = props.assessment;\n    index = index + 1;\n    const questions = assessment.questions;\n    questions.splice(index, 0, template());\n    assessment.questions = questions;\n    props.updateAssessment(assessment);\n    history.push('/mission-control/-1/' + index.toString());\n  };\n\n  const deleteQuestion = (index: number) => () => {\n    const assessment = props.assessment;\n    let questions = assessment.questions;\n    if (questions.length > 1) {\n      questions = questions.slice(0, index).concat(questions.slice(index + 1));\n    }\n    assessment.questions = questions;\n    props.updateAssessment(assessment);\n  };\n\n  const confirmSave = (modifyAssessment: () => void) => () => {\n    if (props.hasUnsavedChanges) {\n      setShowSaveOverlay(true);\n      setModifyAssessment(modifyAssessment);\n    } else {\n      modifyAssessment();\n    }\n  };\n\n  /**\n   * Asks to save work.\n   */\n  const confirmSaveOverlay = (\n    <Dialog\n      className=\"assessment-reset\"\n      icon={IconNames.ERROR}\n      isCloseButtonShown={true}\n      isOpen={showSaveOverlay}\n      title=\"Confirmation: Save unsaved changes?\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <Markdown content=\"Are you sure you want to save over your unsaved changes?\" />\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <ButtonGroup>\n          <ControlButton\n            label=\"Cancel\"\n            onClick={() => setShowSaveOverlay(false)}\n            options={{ minimal: false }}\n          />\n          <ControlButton\n            label=\"Confirm\"\n            onClick={() => {\n              modifyAssessment();\n              setShowSaveOverlay(false);\n            }}\n            options={{ minimal: false, intent: Intent.DANGER }}\n          />\n        </ButtonGroup>\n      </div>\n    </Dialog>\n  );\n\n  return (\n    <div>\n      {confirmSaveOverlay}\n      {props.assessment.questions.map((q, index) => (\n        <div key={index}>\n          Question {index + 1}\n          <br />\n          <Button className=\"mcq-option col-xs-12\" minimal={true}>\n            <Markdown\n              content={q.content.length > 200 ? q.content.substring(0, 300) + '...' : q.content}\n            />\n          </Button>\n          {manageQuestionTab(index)}\n          <br />\n          <br />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst deepCopy = (arr: any) => {\n  return JSON.parse(JSON.stringify(arr));\n};\n\nexport default ManageQuestionTab;\n","import { Card } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { Assessment, IMCQQuestion } from '../assessment/AssessmentTypes';\nimport ControlButton from '../ControlButton';\nimport { limitNumberRange } from './EditingWorkspaceSideContentHelper';\nimport TextAreaContent from './EditingWorkspaceSideContentTextAreaContent';\n\ntype MCQQuestionTemplateTabProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  updateAssessment: (assessment: Assessment) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  questionId: number;\n};\n\nconst MCQQuestionTemplateTab: React.FC<MCQQuestionTemplateTabProps> = props => {\n  const addOption = () => {\n    const { assessment, questionId } = props;\n    const question = assessment!.questions[questionId] as IMCQQuestion;\n    const choices = question.choices.concat([\n      {\n        content: 'A',\n        hint: null\n      }\n    ]);\n    question.choices = choices;\n    assessment!.questions[questionId] = question;\n    props.updateAssessment(assessment);\n  };\n\n  const delOption = () => {\n    const { assessment, questionId } = props;\n    const question = assessment!.questions[questionId] as IMCQQuestion;\n    const choices = question.choices.slice(0, question.choices.length - 1);\n    question.choices = choices;\n    assessment!.questions[questionId] = question;\n    props.updateAssessment(assessment);\n  };\n\n  const textareaContent = (\n    path: Array<string | number>,\n    isNumber: boolean = false,\n    range: number[] = [0]\n  ) => {\n    if (isNumber) {\n      return (\n        <TextAreaContent\n          assessment={props.assessment}\n          isNumber={true}\n          path={path}\n          processResults={limitNumberRange(range[0], range[1])}\n          updateAssessment={props.updateAssessment}\n        />\n      );\n    } else {\n      return (\n        <TextAreaContent\n          assessment={props.assessment}\n          path={path}\n          updateAssessment={props.updateAssessment}\n        />\n      );\n    }\n  };\n\n  // Render\n  const { questionId } = props;\n  const question = props.assessment!.questions[questionId] as IMCQQuestion;\n  const mcqButton = question.choices.map((choice, i) => (\n    <div key={i} className=\"mcq-option col-xs-12\">\n      Option {i}:{textareaContent(['questions', questionId, 'choices', i, 'content'])}\n      <br />\n      Hint:\n      {textareaContent(['questions', questionId, 'choices', i, 'hint'])}\n    </div>\n  ));\n  const deleteButton = (\n    <ControlButton label=\"Delete Option\" icon={IconNames.REMOVE} onClick={delOption} />\n  );\n\n  return (\n    <div className=\"MCQChooser row\">\n      <Card className=\"mcq-content-parent col-xs-12 middle-xs\">\n        <div className=\"row mcq-options-parent between-xs\">\n          {mcqButton}\n          Solution:\n          {textareaContent(['questions', questionId, 'solution'], true, [\n            0,\n            question.choices.length\n          ])}\n          <br />\n          <ControlButton label=\"Add Option\" icon={IconNames.CONFIRM} onClick={addOption} />\n          {question.choices.length > 0 ? deleteButton : undefined}\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default MCQQuestionTemplateTab;\n","import { Button, Card, Classes, Divider, IconName, MenuItem } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { ItemRenderer, Select } from '@blueprintjs/select';\nimport React, { useState } from 'react';\nimport AceEditor from 'react-ace';\n\nimport { Assessment } from '../assessment/AssessmentTypes';\nimport ControlButton from '../ControlButton';\nimport { EditorTabState } from '../workspace/WorkspaceTypes';\nimport { assignToPath, getValueFromPath } from './EditingWorkspaceSideContentHelper';\n\ntype QuestionEditorProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  updateAssessment: (assessment: Assessment) => void;\n  handleEditorValueChange: (val: string) => void;\n  handleUpdateActiveEditorTab: (options: Partial<EditorTabState>) => void;\n};\n\ntype StateProps = {\n  assessment: Assessment;\n  editorValue: string;\n  questionId: number;\n};\n\nconst questionEditorPaths = ['prepend', 'postpend', 'solutionTemplate', 'answer'] as const;\n\nexport type QuestionEditorId = typeof questionEditorPaths[number];\n\nconst QuestionEditorSelect = Select.ofType<QuestionEditor>();\n\nexport type QuestionEditor = {\n  label: string;\n  icon: IconName;\n  id: QuestionEditorId;\n};\n\nconst questionEditors: QuestionEditor[] = [\n  {\n    label: 'Prepend',\n    icon: IconNames.CHEVRON_UP,\n    id: 'prepend'\n  },\n  {\n    label: 'Postpend',\n    icon: IconNames.CHEVRON_DOWN,\n    id: 'postpend'\n  },\n  {\n    label: 'Solution Template',\n    icon: IconNames.MANUAL,\n    id: 'solutionTemplate'\n  },\n  {\n    label: 'Suggested Answer',\n    icon: IconNames.TICK,\n    id: 'answer'\n  }\n];\n\n/*\n * activeEditor is the default editor to show initially\n */\nconst ProgrammingQuestionTemplateTab: React.FC<QuestionEditorProps> = props => {\n  const [activeEditor, setActiveEditor] = useState(questionEditors[0]);\n  const [templateValue, setTemplateValue] = useState('');\n  const [templateFocused, setTemplateFocused] = useState(false);\n\n  const programmingTab = () => {\n    const qnPath = ['questions', props.questionId];\n    const path = qnPath.concat(activeEditor.id);\n\n    const copyFromEditorButton = (\n      <ControlButton\n        label=\"Copy from Editor\"\n        icon={IconNames.IMPORT}\n        onClick={handleCopyFromEditor(path)}\n      />\n    );\n\n    const copyToEditorButton = (\n      <ControlButton\n        label=\"Copy to Editor\"\n        icon={IconNames.EXPORT}\n        onClick={handleCopyToEditor(path)}\n      />\n    );\n\n    const editorPanel = (\n      <div>\n        {copyFromEditorButton}\n        {copyToEditorButton}\n        <Divider />\n        {editor(path)}\n      </div>\n    );\n\n    const menuRenderer: ItemRenderer<QuestionEditor> = (editor, { handleClick }) => (\n      <MenuItem\n        active={false}\n        key={editor.id}\n        onClick={handleClick}\n        text={editor.label}\n        icon={editor.icon}\n      />\n    );\n\n    const editorSelect = (\n      currentEditor: QuestionEditor,\n      handleSelect: (i: QuestionEditor) => void\n    ) => (\n      <QuestionEditorSelect\n        className={Classes.MINIMAL}\n        items={questionEditors}\n        itemRenderer={menuRenderer}\n        onItemSelect={handleSelect}\n        filterable={false}\n      >\n        <Button\n          className={Classes.MINIMAL}\n          text={currentEditor.label}\n          icon={IconNames.EDIT}\n          rightIcon={IconNames.DOUBLE_CARET_VERTICAL}\n        />\n      </QuestionEditorSelect>\n    );\n\n    return (\n      <div className=\"side-content\">\n        <Card>\n          {editorSelect(activeEditor, setActiveEditor)}\n          <Divider />\n          <div className=\"side-content-text\">{editorPanel}</div>\n        </Card>\n      </div>\n    );\n  };\n\n  const editor = (path: Array<string | number>) => {\n    const value = templateFocused ? templateValue : getValueFromPath(path, props.assessment);\n\n    return (\n      <div onClick={focusEditor(path)} onBlur={unFocusEditor(path)}>\n        <AceEditor\n          className=\"react-ace\"\n          editorProps={{\n            $blockScrolling: Infinity\n          }}\n          fontSize={14}\n          highlightActiveLine={false}\n          mode=\"javascript\"\n          onChange={setTemplateValue}\n          theme=\"source\"\n          value={value}\n          width=\"100%\"\n        />\n      </div>\n    );\n  };\n\n  const focusEditor =\n    (path: Array<string | number>) =>\n    (e: any): void => {\n      if (!templateFocused) {\n        setTemplateValue(getValueFromPath(path, props.assessment));\n        setTemplateFocused(true);\n      }\n    };\n\n  const unFocusEditor =\n    (path: Array<string | number>) =>\n    (e: any): void => {\n      if (templateFocused) {\n        const value = getValueFromPath(path, props.assessment);\n        if (value !== templateValue) {\n          const assessmentVal = props.assessment;\n          assignToPath(path, templateValue, assessmentVal);\n          props.updateAssessment(assessmentVal);\n        }\n\n        if (activeEditor.id === 'prepend') {\n          const editorPrepend = templateValue;\n          props.handleUpdateActiveEditorTab({ prependValue: editorPrepend });\n        } else if (activeEditor.id === 'postpend') {\n          const editorPostpend = templateValue;\n          props.handleUpdateActiveEditorTab({ postpendValue: editorPostpend });\n        }\n\n        setTemplateValue('');\n        setTemplateFocused(false);\n      }\n    };\n\n  const handleCopyFromEditor = (path: Array<string | number>) => (): void => {\n    const assessment = props.assessment;\n    assignToPath(path, props.editorValue, assessment);\n    props.updateAssessment(assessment);\n  };\n\n  const handleCopyToEditor = (path: Array<string | number>) => (): void => {\n    const value = getValueFromPath(path, props.assessment);\n    props.handleEditorValueChange(value);\n  };\n\n  return programmingTab();\n};\n\nexport default ProgrammingQuestionTemplateTab;\n","import {\n  ButtonGroup,\n  Classes,\n  Dialog,\n  Intent,\n  NonIdealState,\n  Spinner,\n  SpinnerSize\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\nimport { InterpreterOutput } from '../application/ApplicationTypes';\nimport {\n  Assessment,\n  AssessmentOverview,\n  IMCQQuestion,\n  IProgrammingQuestion,\n  Library,\n  Question,\n  QuestionTypes,\n  Testcase\n} from '../assessment/AssessmentTypes';\nimport { ControlBarProps } from '../controlBar/ControlBar';\nimport { ControlBarClearButton } from '../controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../controlBar/ControlBarEvalButton';\nimport { ControlBarNextButton } from '../controlBar/ControlBarNextButton';\nimport { ControlBarPreviousButton } from '../controlBar/ControlBarPreviousButton';\nimport { ControlBarQuestionViewButton } from '../controlBar/ControlBarQuestionViewButton';\nimport { ControlBarResetButton } from '../controlBar/ControlBarResetButton';\nimport { ControlBarRunButton } from '../controlBar/ControlBarRunButton';\nimport { ControlButtonSaveButton } from '../controlBar/ControlBarSaveButton';\nimport { ControlBarToggleEditModeButton } from '../controlBar/ControlBarToggleEditModeButton';\nimport ControlButton from '../ControlButton';\nimport { AutograderTab } from '../editingWorkspaceSideContent/EditingWorkspaceSideContentAutograderTab';\nimport DeploymentTab from '../editingWorkspaceSideContent/EditingWorkspaceSideContentDeploymentTab';\nimport GradingTab from '../editingWorkspaceSideContent/EditingWorkspaceSideContentGradingTab';\nimport ManageQuestionTab from '../editingWorkspaceSideContent/EditingWorkspaceSideContentManageQuestionTab';\nimport MCQQuestionTemplateTab from '../editingWorkspaceSideContent/EditingWorkspaceSideContentMcqQuestionTemplateTab';\nimport ProgrammingQuestionTemplateTab from '../editingWorkspaceSideContent/EditingWorkspaceSideContentProgrammingQuestionTemplateTab';\nimport { TextAreaContent } from '../editingWorkspaceSideContent/EditingWorkspaceSideContentTextAreaContent';\nimport { convertEditorTabStateToProps } from '../editor/EditorContainer';\nimport { Position } from '../editor/EditorTypes';\nimport Markdown from '../Markdown';\nimport { SideContentProps } from '../sideContent/SideContent';\nimport SideContentToneMatrix from '../sideContent/SideContentToneMatrix';\nimport { SideContentTab, SideContentType } from '../sideContent/SideContentTypes';\nimport { history } from '../utils/HistoryHelper';\nimport Workspace, { WorkspaceProps } from '../workspace/Workspace';\nimport { EditorTabState, WorkspaceState } from '../workspace/WorkspaceTypes';\nimport {\n  retrieveLocalAssessment,\n  storeLocalAssessment,\n  storeLocalAssessmentOverview\n} from '../XMLParser/XMLParserHelper';\n\nexport type EditingWorkspaceProps = DispatchProps & StateProps & OwnProps;\n\nexport type DispatchProps = {\n  handleBrowseHistoryDown: () => void;\n  handleBrowseHistoryUp: () => void;\n  handleChapterSelect: (chapter: any, changeEvent: any) => void;\n  handleClearContext: (library: Library, shouldInitLibrary: boolean) => void;\n  handleDeclarationNavigate: (cursorPosition: Position) => void;\n  handleEditorEval: () => void;\n  handleEditorValueChange: (val: string) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleInterruptEval: () => void;\n  handleReplEval: () => void;\n  handleReplOutputClear: () => void;\n  handleReplValueChange: (newValue: string) => void;\n  handleResetWorkspace: (options: Partial<WorkspaceState>) => void;\n  handleUpdateWorkspace: (options: Partial<WorkspaceState>) => void;\n  handleUpdateActiveEditorTab: (options: Partial<EditorTabState>) => void;\n  handleSave: (id: number, answer: number | string) => void;\n  handleSideContentHeightChange: (heightChange: number) => void;\n  handleTestcaseEval: (testcaseId: number) => void;\n  handleDebuggerPause: () => void;\n  handleDebuggerResume: () => void;\n  handleDebuggerReset: () => void;\n  handleUpdateCurrentAssessmentId: (assessmentId: number, questionId: number) => void;\n  handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) => void;\n  handlePromptAutocomplete: (row: number, col: number, callback: any) => void;\n};\n\nexport type OwnProps = {\n  assessmentId: number;\n  questionId: number;\n  assessmentOverview: AssessmentOverview;\n  updateAssessmentOverview: (overview: AssessmentOverview) => void;\n  notAttempted: boolean;\n  closeDate: string;\n};\n\nexport type StateProps = {\n  activeEditorTabIndex: number | null;\n  editorTabs: EditorTabState[];\n  hasUnsavedChanges: boolean;\n  isRunning: boolean;\n  isDebugging: boolean;\n  enableDebugging: boolean;\n  output: InterpreterOutput[];\n  replValue: string;\n  sideContentHeight?: number;\n  storedAssessmentId?: number;\n  storedQuestionId?: number;\n};\n\nconst EditingWorkspace: React.FC<EditingWorkspaceProps> = props => {\n  const [assessment, setAssessment] = useState(retrieveLocalAssessment());\n  const [editingMode, setEditingMode] = useState('question');\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [showResetTemplateOverlay, setShowResetTemplateOverlay] = useState(false);\n  const [originalMaxXp, setOriginalMaxXp] = useState(0);\n\n  /**\n   * After mounting (either an older copy of the assessment\n   * or a loading screen), try to fetch a newer assessment,\n   * and show the briefing.\n   */\n  useEffect(() => {\n    if (assessment) {\n      resetWorkspaceValues();\n      setOriginalMaxXp(getMaxXp());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * Once there is an update (due to the assessment being fetched), check\n   * if a workspace reset is needed.\n   */\n  useEffect(() => checkWorkspaceReset());\n\n  if (assessment === null || assessment!.questions.length === 0) {\n    return (\n      <NonIdealState\n        className={classNames('WorkspaceParent', Classes.DARK)}\n        description=\"Getting mission ready...\"\n        icon={<Spinner size={SpinnerSize.LARGE} />}\n      />\n    );\n  }\n\n  /* If questionId is out of bounds, set it within range. */\n  const formatedQuestionId = () => {\n    let questionId = props.questionId;\n    if (questionId < 0) {\n      questionId = 0;\n    } else if (questionId >= assessment!.questions.length) {\n      questionId = assessment!.questions.length - 1;\n    }\n    return questionId;\n  };\n\n  /**\n   * Resets to last save.\n   */\n  const resetTemplateOverlay = () => (\n    <Dialog\n      className=\"assessment-reset\"\n      icon={IconNames.ERROR}\n      isCloseButtonShown={true}\n      isOpen={showResetTemplateOverlay}\n      title=\"Confirmation: Reset editor?\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <Markdown content=\"Are you sure you want to reset to your last save?\" />\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <ButtonGroup>\n          <ControlButton\n            label=\"Cancel\"\n            onClick={() => setShowResetTemplateOverlay(false)}\n            options={{ minimal: false }}\n          />\n          <ControlButton\n            label=\"Confirm\"\n            onClick={() => {\n              const assessment = retrieveLocalAssessment()!;\n              setAssessment(assessment);\n              setHasUnsavedChanges(false);\n              setShowResetTemplateOverlay(false);\n              setOriginalMaxXp(getMaxXp());\n              handleRefreshLibrary();\n              resetWorkspaceValues();\n            }}\n            options={{ minimal: false, intent: Intent.DANGER }}\n          />\n        </ButtonGroup>\n      </div>\n    </Dialog>\n  );\n\n  /**\n   * Checks if there is a need to reset the workspace, then executes\n   * a dispatch (in the props) if needed.\n   */\n  function checkWorkspaceReset() {\n    /* Don't reset workspace if assessment not fetched yet. */\n    if (assessment === undefined) {\n      return;\n    }\n\n    /* Reset assessment if it has changed.*/\n    const assessmentId = -1;\n    const questionId = formatedQuestionId();\n\n    if (props.storedAssessmentId !== assessmentId || props.storedQuestionId !== questionId) {\n      resetWorkspaceValues();\n      props.handleUpdateCurrentAssessmentId(assessmentId, questionId);\n      props.handleUpdateHasUnsavedChanges(false);\n      if (hasUnsavedChanges) {\n        setAssessment(retrieveLocalAssessment());\n        setHasUnsavedChanges(false);\n      }\n      handleRefreshLibrary();\n    }\n  }\n\n  const handleRefreshLibrary = (library: Library | undefined = undefined) => {\n    const question = assessment!.questions[formatedQuestionId()];\n    if (!library) {\n      library = question.library;\n    }\n    if (library && library.globals.length > 0) {\n      const globalsVal = library.globals.map((x: any) => x[0]);\n      const symbolsVal = library.external.symbols.concat(globalsVal);\n      library = {\n        ...library,\n        external: {\n          name: library.external.name,\n          symbols: uniq(symbolsVal)\n        }\n      };\n    }\n    props.handleClearContext(library, true);\n  };\n\n  const resetWorkspaceValues = () => {\n    const question: Question = assessment!.questions[formatedQuestionId()];\n    let editorValue: string;\n    let editorPrepend = '';\n    let editorPostpend = '';\n    if (question.type === QuestionTypes.programming) {\n      if (question.editorValue) {\n        editorValue = question.editorValue;\n      } else {\n        editorValue = (question as IProgrammingQuestion).solutionTemplate as string;\n      }\n      editorPrepend = (question as IProgrammingQuestion).prepend;\n      editorPostpend = (question as IProgrammingQuestion).postpend;\n    } else {\n      editorValue = '//If you see this, this is a bug. Please report bug.';\n    }\n\n    props.handleResetWorkspace({\n      // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n      editorTabs: [\n        {\n          value: editorValue,\n          prependValue: editorPrepend,\n          postpendValue: editorPostpend,\n          highlightedLines: [],\n          breakpoints: []\n        }\n      ]\n    });\n    props.handleEditorValueChange(editorValue);\n  };\n\n  const handleTestcaseEval = (testcase: Testcase) => {\n    const editorTestcases = [testcase];\n    props.handleUpdateWorkspace({ editorTestcases });\n    props.handleTestcaseEval(0);\n  };\n\n  const handleSave = () => {\n    // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n    assessment!.questions[formatedQuestionId()].editorValue = props.editorTabs[0].value;\n    setAssessment(assessment);\n    setHasUnsavedChanges(false);\n    storeLocalAssessment(assessment);\n    // this.handleRefreshLibrary();\n    handleSaveXp();\n  };\n\n  const handleSaveXp = () => {\n    const curXp = getMaxXp();\n    const changeXp = curXp - originalMaxXp;\n    if (changeXp !== 0) {\n      const overview = props.assessmentOverview;\n      if (changeXp !== 0) {\n        overview.maxXp = curXp;\n      }\n      setOriginalMaxXp(curXp);\n      props.updateAssessmentOverview(overview);\n      storeLocalAssessmentOverview(overview);\n    }\n  };\n\n  const getMaxXp = () => {\n    let xp = 0;\n    const questions = assessment!.questions;\n    for (const question of questions) {\n      xp += question.maxXp;\n    }\n    return xp as number;\n  };\n  const updateEditAssessmentState = (assessmentVal: Assessment) => {\n    setAssessment(assessmentVal);\n    setHasUnsavedChanges(true);\n  };\n\n  const updateAndSaveAssessment = (assessmentVal: Assessment) => {\n    setAssessment(assessmentVal);\n    handleRefreshLibrary();\n    handleSave();\n    resetWorkspaceValues();\n  };\n\n  const toggleEditingMode = () => {\n    const toggle = editingMode === 'question' ? 'global' : 'question';\n    setEditingMode(toggle);\n  };\n\n  /** Pre-condition: IAssessment has been loaded */\n  const sideContentProps: (p: EditingWorkspaceProps, q: number) => SideContentProps = (\n    props: EditingWorkspaceProps,\n    questionId: number\n  ) => {\n    const currentAssessment = assessment!;\n    let tabs: SideContentTab[];\n    if (editingMode === 'question') {\n      const qnType = currentAssessment!.questions[props.questionId].type;\n      const questionTemplateTab =\n        qnType === 'mcq' ? (\n          <MCQQuestionTemplateTab\n            assessment={currentAssessment}\n            questionId={questionId}\n            updateAssessment={updateEditAssessmentState}\n          />\n        ) : (\n          <ProgrammingQuestionTemplateTab\n            assessment={currentAssessment}\n            questionId={questionId}\n            updateAssessment={updateEditAssessmentState}\n            // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n            editorValue={props.editorTabs[0].value}\n            handleEditorValueChange={props.handleEditorValueChange}\n            handleUpdateActiveEditorTab={props.handleUpdateActiveEditorTab}\n          />\n        );\n\n      tabs = [\n        {\n          label: `Question ${questionId + 1}`,\n          iconName: IconNames.NINJA,\n          body: (\n            <TextAreaContent\n              assessment={currentAssessment}\n              path={['questions', questionId, 'content']}\n              updateAssessment={updateEditAssessmentState}\n            />\n          ),\n          id: SideContentType.editorQuestionOverview\n        },\n        {\n          label: `Question Template`,\n          iconName: IconNames.DOCUMENT,\n          body: questionTemplateTab,\n          id: SideContentType.editorQuestionTemplate\n        },\n        {\n          label: `Manage Local Deployment`,\n          iconName: IconNames.HOME,\n          body: (\n            <DeploymentTab\n              assessment={currentAssessment}\n              label={'Question Specific'}\n              handleRefreshLibrary={handleRefreshLibrary}\n              pathToLibrary={['questions', questionId, 'library']}\n              updateAssessment={updateEditAssessmentState}\n              isOptionalDeployment={true}\n            />\n          ),\n          id: SideContentType.editorLocalDeployment\n        },\n        {\n          label: `Manage Local Grader Deployment`,\n          iconName: IconNames.CONFIRM,\n          body: (\n            <DeploymentTab\n              assessment={currentAssessment}\n              label={'Question Specific Grader'}\n              handleRefreshLibrary={handleRefreshLibrary}\n              pathToLibrary={['questions', questionId, 'graderLibrary']}\n              pathToCopy={['questions', questionId, 'library']}\n              updateAssessment={updateEditAssessmentState}\n              isOptionalDeployment={true}\n            />\n          ),\n          id: SideContentType.editorLocalGraderDeployment\n        },\n        {\n          label: `Grading`,\n          iconName: IconNames.TICK,\n          body: (\n            <GradingTab\n              assessment={currentAssessment}\n              path={['questions', questionId]}\n              updateAssessment={updateEditAssessmentState}\n            />\n          ),\n          id: SideContentType.editorGrading\n        }\n      ];\n      if (qnType === 'programming') {\n        tabs.push({\n          label: `Autograder`,\n          iconName: IconNames.AIRPLANE,\n          body: (\n            <AutograderTab\n              assessment={currentAssessment}\n              questionId={questionId}\n              handleTestcaseEval={handleTestcaseEval}\n              updateAssessment={updateEditAssessmentState}\n            />\n          ),\n          id: SideContentType.editorAutograder\n        });\n      }\n      const functionsAttached = currentAssessment!.globalDeployment!.external.symbols;\n      if (functionsAttached.includes('get_matrix')) {\n        tabs.push({\n          label: `Tone Matrix`,\n          iconName: IconNames.GRID_VIEW,\n          body: <SideContentToneMatrix />,\n          id: SideContentType.toneMatrix\n        });\n      }\n    } else {\n      tabs = [\n        {\n          label: `${currentAssessment!.type} Briefing`,\n          iconName: IconNames.BRIEFCASE,\n          body: (\n            <TextAreaContent\n              assessment={currentAssessment}\n              path={['longSummary']}\n              updateAssessment={updateEditAssessmentState}\n            />\n          ),\n          id: SideContentType.editorBriefing\n        },\n        {\n          label: `Manage Question`,\n          iconName: IconNames.WRENCH,\n          body: (\n            <ManageQuestionTab\n              assessment={currentAssessment}\n              hasUnsavedChanges={hasUnsavedChanges}\n              questionId={questionId}\n              updateAssessment={updateAndSaveAssessment}\n            />\n          ),\n          id: SideContentType.editorManageQuestion\n        },\n        {\n          label: `Manage Global Deployment`,\n          iconName: IconNames.GLOBE,\n          body: (\n            <DeploymentTab\n              assessment={currentAssessment}\n              label={'Global'}\n              handleRefreshLibrary={handleRefreshLibrary}\n              pathToLibrary={['globalDeployment']}\n              updateAssessment={updateEditAssessmentState}\n              isOptionalDeployment={false}\n            />\n          ),\n          id: SideContentType.editorGlobalDeployment\n        },\n        {\n          label: `Manage Global Grader Deployment`,\n          iconName: IconNames.CONFIRM,\n          body: (\n            <DeploymentTab\n              assessment={currentAssessment}\n              label={'Global Grader'}\n              handleRefreshLibrary={handleRefreshLibrary}\n              pathToLibrary={['graderDeployment']}\n              updateAssessment={updateEditAssessmentState}\n              isOptionalDeployment={true}\n            />\n          ),\n          id: SideContentType.editorGlobalGraderDeployment\n        }\n      ];\n    }\n\n    return {\n      tabs: { beforeDynamicTabs: tabs, afterDynamicTabs: [] }\n    };\n  };\n\n  /** Pre-condition: IAssessment has been loaded */\n  const controlBarProps: (q: number) => ControlBarProps = (questionId: number) => {\n    const listingPath = '/mission-control';\n    const assessmentWorkspacePath = listingPath + `/${assessment!.id.toString()}`;\n    const questionProgress: [number, number] = [questionId + 1, assessment!.questions.length];\n\n    const onClickPrevious = () =>\n      history.push(assessmentWorkspacePath + `/${(questionId - 1).toString()}`);\n    const onClickNext = () =>\n      history.push(assessmentWorkspacePath + `/${(questionId + 1).toString()}`);\n    const onClickReturn = () => history.push(listingPath);\n\n    const onClickResetTemplate = () => {\n      setShowResetTemplateOverlay(() => hasUnsavedChanges);\n    };\n\n    const nextButton = (\n      <ControlBarNextButton\n        onClickNext={onClickNext}\n        onClickReturn={onClickReturn}\n        questionProgress={questionProgress}\n        key=\"next_question\"\n      />\n    );\n\n    const previousButton = (\n      <ControlBarPreviousButton\n        onClick={onClickPrevious}\n        questionProgress={questionProgress}\n        key=\"previous_question\"\n      />\n    );\n\n    const questionView = (\n      <ControlBarQuestionViewButton questionProgress={questionProgress} key=\"question_view\" />\n    );\n\n    const resetButton = (\n      <ControlBarResetButton onClick={onClickResetTemplate} key=\"reset_template\" />\n    );\n\n    const runButton = <ControlBarRunButton handleEditorEval={props.handleEditorEval} key=\"run\" />;\n\n    const saveButton = (\n      <ControlButtonSaveButton\n        hasUnsavedChanges={hasUnsavedChanges}\n        onClickSave={handleSave}\n        key=\"save\"\n      />\n    );\n\n    const toggleEditModeButton = (\n      <ControlBarToggleEditModeButton\n        editingMode={editingMode}\n        toggleEditMode={toggleEditingMode}\n        key=\"toggle_edit_mode\"\n      />\n    );\n\n    return {\n      editorButtons: [runButton, saveButton, resetButton],\n      flowButtons: [previousButton, questionView, nextButton],\n      editingWorkspaceButtons: [toggleEditModeButton]\n    };\n  };\n\n  function replButtons() {\n    const clearButton = (\n      <ControlBarClearButton handleReplOutputClear={props.handleReplOutputClear} key=\"clear_repl\" />\n    );\n\n    const evalButton = (\n      <ControlBarEvalButton\n        handleReplEval={props.handleReplEval}\n        isRunning={props.isRunning}\n        key=\"eval_repl\"\n      />\n    );\n\n    return [evalButton, clearButton];\n  }\n\n  const questionId = formatedQuestionId();\n  const question: Question = assessment.questions[questionId];\n\n  const workspaceProps: WorkspaceProps = {\n    controlBarProps: controlBarProps(questionId),\n    editorContainerProps:\n      question.type === QuestionTypes.programming\n        ? {\n            editorVariant: 'normal',\n            editorTabs: props.editorTabs\n              .map(convertEditorTabStateToProps)\n              .map((editorTabStateProps, index) => {\n                // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n                //       Specifically, need to update questions such that they can span multiple files.\n                if (index !== 0) {\n                  return editorTabStateProps;\n                }\n                return {\n                  ...editorTabStateProps,\n                  editorValue:\n                    editorTabStateProps.editorValue ||\n                    question.editorValue ||\n                    (question as IProgrammingQuestion).solutionTemplate\n                };\n              }),\n            editorSessionId: '',\n            handleDeclarationNavigate: props.handleDeclarationNavigate,\n            handleEditorEval: props.handleEditorEval,\n            handleEditorValueChange: props.handleEditorValueChange,\n            handleEditorUpdateBreakpoints: props.handleEditorUpdateBreakpoints,\n            handleUpdateHasUnsavedChanges: props.handleUpdateHasUnsavedChanges,\n            handlePromptAutocomplete: props.handlePromptAutocomplete,\n            isEditorAutorun: false\n          }\n        : undefined,\n    handleSideContentHeightChange: props.handleSideContentHeightChange,\n    hasUnsavedChanges: hasUnsavedChanges,\n    mcqProps: {\n      mcq: question as IMCQQuestion,\n      handleMCQSubmit: (option: number) =>\n        props.handleSave(assessment!.questions[questionId].id, option)\n    },\n    sideBarProps: {\n      tabs: []\n    },\n    sideContentHeight: props.sideContentHeight,\n    sideContentProps: sideContentProps(props, questionId),\n    replProps: {\n      handleBrowseHistoryDown: props.handleBrowseHistoryDown,\n      handleBrowseHistoryUp: props.handleBrowseHistoryUp,\n      handleReplEval: props.handleReplEval,\n      handleReplValueChange: props.handleReplValueChange,\n      output: props.output,\n      replValue: props.replValue,\n      sourceChapter: Chapter.CLANG,\n      sourceVariant: Variant.DEFAULT,\n      externalLibrary: question?.library?.external?.name || 'NONE',\n      replButtons: replButtons()\n    }\n  };\n  return (\n    <div className={classNames('WorkspaceParent', Classes.DARK)}>\n      {resetTemplateOverlay()}\n      <Workspace {...workspaceProps} />\n    </div>\n  );\n};\n\nfunction uniq(a: string[]) {\n  const seen = {};\n  return a.filter(item => (seen.hasOwnProperty(item) ? false : (seen[item] = true)));\n}\n\nexport default EditingWorkspace;\n","import { Chapter, Variant } from 'Clang-slang/dist/types';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  beginDebuggerPause,\n  beginInterruptExecution,\n  debuggerReset,\n  debuggerResume\n} from '../application/actions/InterpreterActions';\nimport { submitAnswer } from '../application/actions/SessionActions';\nimport { OverallState } from '../application/ApplicationTypes';\nimport { Library } from '../assessment/AssessmentTypes';\nimport { Position } from '../editor/EditorTypes';\nimport {\n  beginClearContext,\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeSideContentHeight,\n  chapterSelect,\n  clearReplOutput,\n  evalEditor,\n  evalRepl,\n  evalTestcase,\n  navigateToDeclaration,\n  promptAutocomplete,\n  resetWorkspace,\n  setEditorBreakpoint,\n  updateActiveEditorTab,\n  updateCurrentAssessmentId,\n  updateEditorValue,\n  updateHasUnsavedChanges,\n  updateReplValue,\n  updateWorkspace\n} from '../workspace/WorkspaceActions';\nimport { EditorTabState, WorkspaceLocation, WorkspaceState } from '../workspace/WorkspaceTypes';\nimport EditingWorkspace, { DispatchProps, OwnProps, StateProps } from './EditingWorkspace';\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, OverallState> = (state, props) => {\n  return {\n    activeEditorTabIndex: state.workspaces.assessment.activeEditorTabIndex,\n    editorTabs: state.workspaces.assessment.editorTabs,\n    hasUnsavedChanges: state.workspaces.assessment.hasUnsavedChanges,\n    isRunning: state.workspaces.assessment.isRunning,\n    isDebugging: state.workspaces.assessment.isDebugging,\n    enableDebugging: state.workspaces.assessment.enableDebugging,\n    output: state.workspaces.assessment.output,\n    replValue: state.workspaces.assessment.replValue,\n    sideContentHeight: state.workspaces.assessment.sideContentHeight,\n    storedAssessmentId: state.workspaces.assessment.currentAssessment,\n    storedQuestionId: state.workspaces.assessment.currentQuestion\n  };\n};\n\nconst workspaceLocation: WorkspaceLocation = 'assessment';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleBrowseHistoryDown: () => browseReplHistoryDown(workspaceLocation),\n      handleBrowseHistoryUp: () => browseReplHistoryUp(workspaceLocation),\n      handleChapterSelect: (chapter: Chapter, changeEvent: any) =>\n        chapterSelect(chapter, Variant.DEFAULT, workspaceLocation),\n      handleClearContext: (library: Library, shouldInitLibrary: boolean) =>\n        beginClearContext(workspaceLocation, library, shouldInitLibrary),\n      handleDeclarationNavigate: (cursorPosition: Position) =>\n        navigateToDeclaration(workspaceLocation, cursorPosition),\n      handleEditorEval: () => evalEditor(workspaceLocation),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, workspaceLocation),\n      handleEditorUpdateBreakpoints: (breakpoints: string[]) =>\n        setEditorBreakpoint(breakpoints, workspaceLocation),\n      handleInterruptEval: () => beginInterruptExecution(workspaceLocation),\n      handleReplEval: () => evalRepl(workspaceLocation),\n      handleReplOutputClear: () => clearReplOutput(workspaceLocation),\n      handleReplValueChange: (newValue: string) => updateReplValue(newValue, workspaceLocation),\n      handleResetWorkspace: (options: Partial<WorkspaceState>) =>\n        resetWorkspace(workspaceLocation, options),\n      handleUpdateWorkspace: (options: Partial<WorkspaceState>) =>\n        updateWorkspace(workspaceLocation, options),\n      handleUpdateActiveEditorTab: (options: Partial<EditorTabState>) =>\n        updateActiveEditorTab(workspaceLocation, options),\n      handleSave: submitAnswer,\n      handleSideContentHeightChange: (heightChange: number) =>\n        changeSideContentHeight(heightChange, workspaceLocation),\n      handleTestcaseEval: (testcaseId: number) => evalTestcase(workspaceLocation, testcaseId),\n      handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) =>\n        updateHasUnsavedChanges(workspaceLocation, hasUnsavedChanges),\n      handleUpdateCurrentAssessmentId: updateCurrentAssessmentId,\n      handleDebuggerPause: () => beginDebuggerPause(workspaceLocation),\n      handleDebuggerResume: () => debuggerResume(workspaceLocation),\n      handleDebuggerReset: () => debuggerReset(workspaceLocation),\n      handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n        promptAutocomplete(workspaceLocation, row, col, callback)\n    },\n    dispatch\n  );\n\nconst EditingWorkspaceContainer = connect(mapStateToProps, mapDispatchToProps)(EditingWorkspace);\n\nexport default EditingWorkspaceContainer;\n","import { FileInput } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\nimport { parseString } from 'xml2js';\n\nimport {\n  Assessment,\n  AssessmentOverview,\n  assessmentTemplate,\n  overviewTemplate\n} from '../assessment/AssessmentTypes';\nimport ControlButton from '../ControlButton';\nimport {\n  makeEntireAssessment,\n  retrieveLocalAssessment,\n  storeLocalAssessment,\n  storeLocalAssessmentOverview\n} from '../XMLParser/XMLParserHelper';\n\ntype MissionCreatorProps = DispatchProps & OwnProps;\n\nexport type DispatchProps = {\n  newAssessment: (assessment: Assessment) => void;\n};\n\ntype OwnProps = {\n  updateEditingOverview: (overview: AssessmentOverview) => void;\n};\n\ntype State = {\n  fileInputText: string;\n};\n\nclass MissionCreator extends React.Component<MissionCreatorProps, State> {\n  private fileReader?: FileReader = undefined;\n  public constructor(props: any) {\n    super(props);\n    this.handleFileRead = this.handleFileRead.bind(this);\n    this.handleChangeFile = this.handleChangeFile.bind(this);\n    this.makeMission = this.makeMission.bind(this);\n    this.state = {\n      fileInputText: 'Import XML'\n    };\n  }\n\n  public componentDidMount() {\n    const assessment = retrieveLocalAssessment();\n    if (assessment) {\n      this.props.newAssessment(assessment);\n    }\n  }\n\n  public render() {\n    return (\n      <div>\n        <div>Please ensure that the xml uploaded is trustable.</div>\n        <div>\n          <FileInput\n            text={this.state.fileInputText}\n            inputProps={{ accept: '.xml' }}\n            onChange={this.handleChangeFile}\n          />\n        </div>\n        <div>\n          <ControlButton\n            label=\"Make New Mission\"\n            icon={IconNames.NEW_OBJECT}\n            onClick={this.makeMission}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private handleFileRead = (file: any) => (e: any) => {\n    if (!this.fileReader) {\n      return;\n    }\n    const content = this.fileReader.result;\n    if (content) {\n      parseString(content, (err: any, result: any) => {\n        // tslint:disable-next-line:no-console\n        console.dir(file);\n        try {\n          const entireAssessment: [AssessmentOverview, Assessment] = makeEntireAssessment(result);\n          entireAssessment[0].fileName = file.name.slice(0, -4);\n          storeLocalAssessmentOverview(entireAssessment[0]);\n          this.props.updateEditingOverview(entireAssessment[0]);\n\n          storeLocalAssessment(entireAssessment[1]);\n          this.props.newAssessment(entireAssessment[1]);\n          this.setState({\n            fileInputText: 'Success!'\n          });\n        } catch (err) {\n          // tslint:disable-next-line:no-console\n          console.log(err);\n          this.setState({\n            fileInputText: 'Invalid XML!'\n          });\n        }\n      });\n    }\n  };\n\n  private handleChangeFile = (e: any) => {\n    const files = e.target.files;\n    if (e.target.files) {\n      this.fileReader = new FileReader();\n      this.fileReader.onloadend = this.handleFileRead(files[0]);\n      this.fileReader.readAsText(files[0]);\n    }\n  };\n\n  private makeMission = () => {\n    storeLocalAssessmentOverview(overviewTemplate());\n    this.props.updateEditingOverview(overviewTemplate());\n    storeLocalAssessment(assessmentTemplate());\n    this.props.newAssessment(assessmentTemplate());\n  };\n}\n\nexport default MissionCreator;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { updateAssessment } from '../application/actions/SessionActions';\nimport MissionCreator, { DispatchProps } from './MissionCreator';\n\nconst mapStateToProps: MapStateToProps<{}, any, {}> = (state, ownProps) => ownProps;\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      newAssessment: updateAssessment\n    },\n    dispatch\n  );\n\nconst MissionCreatorContainer = connect(mapStateToProps, mapDispatchToProps)(MissionCreator);\n\nexport default MissionCreatorContainer;\n","import React, { useState } from 'react';\nimport { RouteComponentProps } from 'react-router';\n\nimport {\n  AssessmentStatuses,\n  AssessmentType,\n  AssessmentWorkspaceParams\n} from '../../commons/assessment/AssessmentTypes';\nimport ContentDisplay from '../../commons/ContentDisplay';\nimport { EditingOverviewCard } from '../../commons/editingOverviewCard/EditingOverviewCard';\nimport { OwnProps as EditingWorkspaceOwnProps } from '../../commons/editingWorkspace/EditingWorkspace';\nimport EditingWorkspaceContainer from '../../commons/editingWorkspace/EditingWorkspaceContainer';\nimport MissionCreator from '../../commons/missionCreator/MissionCreatorContainer';\nimport Constants from '../../commons/utils/Constants';\nimport { stringParamToInt } from '../../commons/utils/ParamParseHelper';\nimport { retrieveLocalAssessmentOverview } from '../../commons/XMLParser/XMLParserHelper';\n\nexport type MissionControlProps = StateProps & RouteComponentProps<AssessmentWorkspaceParams>;\n\nexport type StateProps = {\n  assessmentTypes: AssessmentType[];\n};\n\nconst nullFunction = () => {};\n\nconst MissionControl: React.FC<MissionControlProps> = props => {\n  const [editingOverview, setEditingOverview] = useState(retrieveLocalAssessmentOverview());\n\n  const assessmentId: number | null = stringParamToInt(props.match.params.assessmentId);\n  const questionId: number =\n    stringParamToInt(props.match.params.questionId) || Constants.defaultQuestionId;\n\n  // If mission for testing is to render, create workspace\n  if (assessmentId === -1 && editingOverview) {\n    const overview = editingOverview;\n    const assessmentProps: EditingWorkspaceOwnProps = {\n      assessmentId,\n      questionId,\n      assessmentOverview: overview,\n      updateAssessmentOverview: setEditingOverview,\n      notAttempted: overview.status === AssessmentStatuses.not_attempted,\n      closeDate: overview.closeAt\n    };\n    return (\n      <div className=\"Academy\">\n        <EditingWorkspaceContainer {...assessmentProps} />\n      </div>\n    );\n  }\n\n  const display = (\n    <>\n      <MissionCreator updateEditingOverview={setEditingOverview} />\n      {editingOverview && (\n        <EditingOverviewCard\n          overview={editingOverview}\n          updateEditingOverview={setEditingOverview}\n          listingPath=\"/mission-control\"\n          assessmentTypes={props.assessmentTypes}\n        />\n      )}\n    </>\n  );\n\n  // Finally, render the ContentDisplay.\n  return (\n    <div className=\"Assessment Academy\">\n      <ContentDisplay display={display} loadContentDispatch={nullFunction} />\n    </div>\n  );\n};\n\nexport default MissionControl;\n","import { connect, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { OverallState } from 'src/commons/application/ApplicationTypes';\n\nimport MissionControl, { StateProps } from './MissionControl';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  assessmentTypes: state.session.assessmentConfigurations?.map(e => e.type) || []\n});\n\nconst MissionControlContainer = withRouter(connect(mapStateToProps)(MissionControl));\n\nexport default MissionControlContainer;\n","import { NumericInput, Position } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport React from 'react';\n\ntype ControlBarExecutionTimeProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleChangeExecTime?: (execTime: number) => void;\n};\n\ntype StateProps = {\n  execTime?: number;\n  key: string;\n};\n\nexport const ControlBarExecutionTime: React.FC<ControlBarExecutionTimeProps> = props => {\n  return (\n    <Tooltip2 content=\"Execution Time\" placement={Position.TOP}>\n      <NumericInput\n        leftIcon={IconNames.TIME}\n        style={{ width: 80 }}\n        min={1000}\n        value={props.execTime}\n        onValueChange={props.handleChangeExecTime}\n      />\n    </Tooltip2>\n  );\n};\n","import { Classes, Colors, Menu } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport * as React from 'react';\nimport * as CopyToClipboard from 'react-copy-to-clipboard';\n\nimport { checkSessionIdExists, createNewSession } from '../collabEditing/CollabEditingHelper';\nimport ControlButton from '../ControlButton';\nimport { showWarningMessage } from '../utils/NotificationsHelper';\n\ntype ControlBarSessionButtonsProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleSetEditorSessionId?: (editorSessionId: string) => void;\n};\n\ntype StateProps = {\n  editorSessionId?: string;\n  editorValue: string;\n  sharedbConnected?: boolean;\n  key: string;\n};\n\ntype State = {\n  joinElemValue: string;\n};\n\nfunction handleError(error: any) {\n  showWarningMessage(`Could not connect: ${(error && error.message) || error || 'Unknown error'}`);\n}\n\nexport class ControlBarSessionButtons extends React.PureComponent<\n  ControlBarSessionButtonsProps,\n  State\n> {\n  private inviteInputElem: React.RefObject<HTMLInputElement>;\n\n  constructor(props: ControlBarSessionButtonsProps) {\n    super(props);\n    this.state = { joinElemValue: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.inviteInputElem = React.createRef();\n    this.selectInviteInputText = this.selectInviteInputText.bind(this);\n  }\n\n  public render() {\n    const handleStartInvite = () => {\n      // FIXME this handler should be a Saga action or at least in a controller\n      if (this.props.editorSessionId === '') {\n        createNewSession(this.props.editorValue || '').then(sessionId => {\n          this.props.handleSetEditorSessionId!(sessionId);\n        }, handleError);\n      }\n    };\n\n    const inviteButtonPopoverContent = (\n      <>\n        <input value={this.props.editorSessionId} readOnly={true} ref={this.inviteInputElem} />\n        <CopyToClipboard text={'' + this.props.editorSessionId}>\n          <ControlButton icon={IconNames.DUPLICATE} onClick={this.selectInviteInputText} />\n        </CopyToClipboard>\n      </>\n    );\n\n    const inviteButton = (\n      <Popover2\n        popoverClassName=\"Popover-share\"\n        inheritDarkTheme={false}\n        content={inviteButtonPopoverContent}\n      >\n        <ControlButton label=\"Invite\" icon={IconNames.GRAPH} onClick={handleStartInvite} />\n      </Popover2>\n    );\n\n    const handleStartJoining = (event: React.FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      // FIXME this handler should be a Saga action or at least in a controller\n      checkSessionIdExists(this.state.joinElemValue).then(\n        exists => {\n          if (exists) {\n            this.props.handleSetEditorSessionId!(this.state!.joinElemValue);\n          } else {\n            this.props.handleSetEditorSessionId!('');\n            showWarningMessage('Could not find a session with that ID.');\n          }\n        },\n        error => {\n          this.props.handleSetEditorSessionId!('');\n          handleError(error);\n        }\n      );\n    };\n\n    const joinButtonPopoverContent = (\n      // TODO: this form should use Blueprint\n      <form onSubmit={handleStartJoining}>\n        <input type=\"text\" value={this.state.joinElemValue} onChange={this.handleChange} />\n        <span className={Classes.POPOVER_DISMISS}>\n          <ControlButton icon={IconNames.KEY_ENTER} options={{ type: 'submit' }} />\n        </span>\n      </form>\n    );\n\n    const joinButton = (\n      <Popover2\n        popoverClassName=\"Popover-share\"\n        inheritDarkTheme={false}\n        content={joinButtonPopoverContent}\n      >\n        <ControlButton label=\"Join\" icon={IconNames.LOG_IN} />\n      </Popover2>\n    );\n\n    const leaveButton = (\n      <ControlButton\n        label=\"Leave\"\n        icon={IconNames.FEED}\n        onClick={() => {\n          // FIXME: this handler should be a Saga action or at least in a controller\n          this.props.handleSetEditorSessionId!('');\n          this.setState({ joinElemValue: '' });\n        }}\n      />\n    );\n\n    return (\n      <Popover2\n        content={\n          <Menu large={true}>\n            {inviteButton}\n            {this.props.editorSessionId === '' ? joinButton : leaveButton}\n          </Menu>\n        }\n      >\n        <ControlButton\n          label=\"Session\"\n          icon={IconNames.SOCIAL_MEDIA}\n          options={{\n            iconColor:\n              this.props.editorSessionId === ''\n                ? undefined\n                : this.props.sharedbConnected\n                ? Colors.GREEN3\n                : Colors.RED3\n          }}\n        />\n      </Popover2>\n    );\n  }\n\n  private selectInviteInputText() {\n    if (this.inviteInputElem.current !== null) {\n      this.inviteInputElem.current.focus();\n      this.inviteInputElem.current.select();\n    }\n  }\n\n  private handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ joinElemValue: event.target.value });\n  }\n}\n","import { NonIdealState, Position, Spinner, SpinnerSize, Text } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Popover2, Tooltip2 } from '@blueprintjs/popover2';\nimport * as React from 'react';\nimport * as CopyToClipboard from 'react-copy-to-clipboard';\n\nimport ControlButton from '../ControlButton';\nimport Constants from '../utils/Constants';\n\ntype ControlBarShareButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleGenerateLz?: () => void;\n  handleShortenURL: (s: string) => void;\n  handleUpdateShortURL: (s: string) => void;\n};\n\ntype StateProps = {\n  queryString?: string;\n  shortURL?: string;\n  key: string;\n  isSicp?: boolean;\n};\n\ntype State = {\n  keyword: string;\n  isLoading: boolean;\n};\n\nexport class ControlBarShareButton extends React.PureComponent<ControlBarShareButtonProps, State> {\n  private shareInputElem: React.RefObject<HTMLInputElement>;\n\n  constructor(props: ControlBarShareButtonProps) {\n    super(props);\n    this.selectShareInputText = this.selectShareInputText.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n    this.shareInputElem = React.createRef();\n    this.state = { keyword: '', isLoading: false };\n  }\n\n  public render() {\n    const shareButtonPopoverContent =\n      this.props.queryString === undefined ? (\n        <Text>\n          Share your programs! Type something into the editor (left), then click on this button\n          again.\n        </Text>\n      ) : this.props.isSicp ? (\n        <div>\n          <input defaultValue={this.props.queryString!} readOnly={true} ref={this.shareInputElem} />\n          <Tooltip2 content=\"Copy link to clipboard\">\n            <CopyToClipboard text={this.props.queryString!}>\n              <ControlButton icon={IconNames.DUPLICATE} onClick={this.selectShareInputText} />\n            </CopyToClipboard>\n          </Tooltip2>\n        </div>\n      ) : (\n        <>\n          {!this.props.shortURL || this.props.shortURL === 'ERROR' ? (\n            !this.state.isLoading || this.props.shortURL === 'ERROR' ? (\n              <div>\n                {Constants.urlShortenerBase}&nbsp;\n                <input\n                  placeholder={'custom string (optional)'}\n                  onChange={this.handleChange}\n                  style={{ width: 175 }}\n                />\n                <ControlButton\n                  label=\"Get Link\"\n                  icon={IconNames.SHARE}\n                  onClick={() => {\n                    this.props.handleShortenURL(this.state.keyword);\n                    this.setState({ isLoading: true });\n                  }}\n                />\n              </div>\n            ) : (\n              <div>\n                <NonIdealState\n                  description=\"Generating Shareable Link...\"\n                  icon={<Spinner size={SpinnerSize.SMALL} />}\n                />\n              </div>\n            )\n          ) : (\n            <div key={this.props.shortURL}>\n              <input defaultValue={this.props.shortURL} readOnly={true} ref={this.shareInputElem} />\n              <Tooltip2 content=\"Copy link to clipboard\">\n                <CopyToClipboard text={this.props.shortURL}>\n                  <ControlButton icon={IconNames.DUPLICATE} onClick={this.selectShareInputText} />\n                </CopyToClipboard>\n              </Tooltip2>\n            </div>\n          )}\n        </>\n      );\n\n    return (\n      <Popover2\n        popoverClassName=\"Popover-share\"\n        inheritDarkTheme={false}\n        content={shareButtonPopoverContent}\n      >\n        <Tooltip2 content=\"Get shareable link\" placement={Position.TOP}>\n          <ControlButton label=\"Share\" icon={IconNames.SHARE} onClick={() => this.toggleButton()} />\n        </Tooltip2>\n      </Popover2>\n    );\n  }\n\n  public componentDidUpdate(prevProps: ControlBarShareButtonProps) {\n    if (this.props.shortURL !== prevProps.shortURL) {\n      this.setState({ keyword: '', isLoading: false });\n    }\n  }\n\n  private toggleButton() {\n    if (this.props.handleGenerateLz) {\n      this.props.handleGenerateLz();\n    }\n\n    // reset state\n    this.props.handleUpdateShortURL('');\n    this.setState({ keyword: '', isLoading: false });\n  }\n\n  private handleChange(event: React.FormEvent<HTMLInputElement>) {\n    this.setState({ keyword: event.currentTarget.value });\n  }\n\n  private selectShareInputText() {\n    if (this.shareInputElem.current !== null) {\n      this.shareInputElem.current.focus();\n      this.shareInputElem.current.select();\n    }\n  }\n}\n","import { NumericInput, Position } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport React from 'react';\n\ntype ControlBarStepLimitProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleChangeStepLimit?: (stepLimit: number) => void;\n};\n\ntype StateProps = {\n  stepLimit?: number;\n  key: string;\n};\n\nexport const ControlBarStepLimit: React.FC<ControlBarStepLimitProps> = props => {\n  return (\n    <Tooltip2 content=\"Step Limit\" placement={Position.TOP}>\n      <NumericInput\n        leftIcon={IconNames.VERTICAL_BAR_CHART_ASC}\n        style={{ width: 80 }}\n        min={500}\n        max={5000}\n        value={props.stepLimit}\n        onValueChange={props.handleChangeStepLimit}\n      />\n    </Tooltip2>\n  );\n};\n","import { Chapter, Variant } from 'Clang-slang/dist/types';\n\nimport { Links } from './Constants';\n\nconst MAIN_INTRODUCTION = `\nWelcome to the Source Academy playground!\n`;\n\nconst HOTKEYS_INTRODUCTION = `\n\nIn the editor on the left, you can use the [_Ace keyboard shortcuts_](${Links.aceHotkeys}) \nand also the [_Source Academy keyboard shortcuts_](${Links.sourceHotkeys}).\n\n`;\n\nconst generateIntroductionText = (sourceChapter: Chapter, sourceVariant: Variant) => {\n  return MAIN_INTRODUCTION + HOTKEYS_INTRODUCTION;\n};\n\nexport const generateSourceIntroduction = (sourceChapter: Chapter, sourceVariant: Variant) => {\n  return generateIntroductionText(sourceChapter, sourceVariant);\n};\n","import { Classes } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Octokit } from '@octokit/rest';\nimport { Ace, Range } from 'ace-builds';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport classNames from 'classnames';\nimport _, { isEqual } from 'lodash';\nimport { decompressFromEncodedURIComponent } from 'lz-string';\nimport * as React from 'react';\nimport { HotKeys } from 'react-hotkeys';\nimport { useDispatch } from 'react-redux';\nimport { RouteComponentProps, useHistory, useLocation } from 'react-router';\nimport {\n  beginDebuggerPause,\n  beginInterruptExecution,\n  debuggerReset,\n  debuggerResume\n} from 'src/commons/application/actions/InterpreterActions';\nimport {\n  setEditorSessionId,\n  setSharedbConnected\n} from 'src/commons/collabEditing/CollabEditingActions';\nimport { useResponsive, useTypedSelector } from 'src/commons/utils/Hooks';\nimport {\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeSideContentHeight,\n  changeStepLimit,\n  evalEditor,\n  navigateToDeclaration,\n  promptAutocomplete,\n  sendReplInputToOutput,\n  toggleEditorAutorun,\n  updateReplValue\n} from 'src/commons/workspace/WorkspaceActions';\nimport { WorkspaceLocation } from 'src/commons/workspace/WorkspaceTypes';\nimport {\n  generateLzString,\n  shortenURL,\n  updateShortURL\n} from 'src/features/playground/PlaygroundActions';\n\nimport {\n  InterpreterOutput,\n  isSourceLanguage,\n  sourceLanguages\n} from '../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport { ControlBarAutorunButtons } from '../../commons/controlBar/ControlBarAutorunButtons';\nimport { ControlBarChapterSelect } from '../../commons/controlBar/ControlBarChapterSelect';\nimport { ControlBarClearButton } from '../../commons/controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../../commons/controlBar/ControlBarEvalButton';\nimport { ControlBarExecutionTime } from '../../commons/controlBar/ControlBarExecutionTime';\nimport { ControlBarSessionButtons } from '../../commons/controlBar/ControlBarSessionButton';\nimport { ControlBarShareButton } from '../../commons/controlBar/ControlBarShareButton';\nimport { ControlBarStepLimit } from '../../commons/controlBar/ControlBarStepLimit';\nimport {\n  convertEditorTabStateToProps,\n  NormalEditorContainerProps\n} from '../../commons/editor/EditorContainer';\nimport { Position } from '../../commons/editor/EditorTypes';\nimport Markdown from '../../commons/Markdown';\nimport MobileWorkspace, {\n  MobileWorkspaceProps\n} from '../../commons/mobileWorkspace/MobileWorkspace';\nimport { SideContentTab, SideContentType } from '../../commons/sideContent/SideContentTypes';\nimport { Links } from '../../commons/utils/Constants';\nimport { generateSourceIntroduction } from '../../commons/utils/IntroductionHelper';\nimport { stringParamToInt } from '../../commons/utils/ParamParseHelper';\nimport { parseQuery } from '../../commons/utils/QueryHelper';\nimport Workspace, { WorkspaceProps } from '../../commons/workspace/Workspace';\nimport { EditorTabState } from '../../commons/workspace/WorkspaceTypes';\nimport { initSession, log } from '../../features/eventLogging';\nimport { GitHubSaveInfo } from '../../features/github/GitHubTypes';\nimport { PersistenceFile } from '../../features/persistence/PersistenceTypes';\nimport {\n  CodeDelta,\n  Input,\n  SelectionRange\n} from '../../features/sourceRecorder/SourceRecorderTypes';\n\nexport type PlaygroundProps = OwnProps &\n  DispatchProps &\n  StateProps &\n  RouteComponentProps<{}> & {\n    workspaceLocation?: WorkspaceLocation;\n  };\n\nexport type OwnProps = {\n  isSicpEditor?: boolean;\n  initialEditorValueHash?: string;\n  prependLength?: number;\n  handleCloseEditor?: () => void;\n};\n\nexport type DispatchProps = {\n  handleChangeExecTime: (execTime: number) => void;\n  handleChapterSelect: (chapter: Chapter, variant: Variant) => void;\n  handleEditorValueChange: (val: string) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleReplEval: () => void;\n  handleReplOutputClear: () => void;\n  handleUsingSubst: (usingSubst: boolean) => void;\n};\n\nexport type StateProps = {\n  activeEditorTabIndex: number | null;\n  editorTabs: EditorTabState[];\n  editorSessionId: string;\n  execTime: number;\n  isEditorAutorun: boolean;\n  isRunning: boolean;\n  isDebugging: boolean;\n  enableDebugging: boolean;\n  output: InterpreterOutput[];\n  queryString?: string;\n  shortURL?: string;\n  replValue: string;\n  sideContentHeight?: number;\n  playgroundSourceChapter: number;\n  playgroundSourceVariant: Variant;\n  courseSourceChapter?: number;\n  courseSourceVariant?: Variant;\n  stepLimit: number;\n  sharedbConnected: boolean;\n  usingSubst: boolean;\n  persistenceUser: string | undefined;\n  persistenceFile: PersistenceFile | undefined;\n  githubOctokitObject: { octokit: Octokit | undefined };\n  githubSaveInfo: GitHubSaveInfo;\n};\n\nconst keyMap = { goGreen: 'h u l k' };\n\nexport async function handleHash(hash: string, props: PlaygroundProps) {\n  const qs = parseQuery(hash);\n\n  const chapter = stringParamToInt(qs.chap) || undefined;\n  const programLz = qs.lz ?? qs.prgrm;\n  const program = programLz && decompressFromEncodedURIComponent(programLz);\n  if (program) {\n    props.handleEditorValueChange(program);\n  }\n  const variant: Variant =\n    sourceLanguages.find(\n      language => language.chapter === chapter && language.variant === qs.variant\n    )?.variant ?? Variant.DEFAULT;\n  if (chapter) {\n    props.handleChapterSelect(chapter, variant);\n  }\n\n  const execTime = Math.max(stringParamToInt(qs.exec || '1000') || 1000, 1000);\n  if (execTime) {\n    props.handleChangeExecTime(execTime);\n  }\n}\n\nconst Playground: React.FC<PlaygroundProps> = ({ workspaceLocation = 'playground', ...props }) => {\n  const { isSicpEditor } = props;\n  const { isMobileBreakpoint } = useResponsive();\n  const propsRef = React.useRef(props);\n  propsRef.current = props;\n\n  const dispatch = useDispatch();\n\n  const [deviceSecret, setDeviceSecret] = React.useState<string | undefined>();\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const shouldAddDevice = searchParams.get('add_device');\n\n  // Hide search query from URL to maintain an illusion of security. The device secret\n  // is still exposed via the 'Referer' header when requesting external content (e.g. Google API fonts)\n  if (shouldAddDevice && !deviceSecret) {\n    setDeviceSecret(shouldAddDevice);\n    history.replace(location.pathname);\n  }\n\n  const [, setLastEdit] = React.useState(new Date());\n  const [isGreen, setIsGreen] = React.useState(false);\n  const [selectedTab, setSelectedTab] = React.useState(\n    shouldAddDevice ? SideContentType.remoteExecution : SideContentType.introduction\n  );\n  const [hasBreakpoints, setHasBreakpoints] = React.useState(false);\n  const [sessionId, setSessionId] = React.useState(() =>\n    initSession('playground', {\n      // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n      editorValue: propsRef.current.editorTabs[0].value,\n      chapter: propsRef.current.playgroundSourceChapter\n    })\n  );\n\n  const usingRemoteExecution =\n    useTypedSelector(state => !!state.session.remoteExecutionSession) && !isSicpEditor;\n  // this is still used by remote execution (EV3)\n  // specifically, for the editor Ctrl+B to work\n  const externalLibraryName = useTypedSelector(\n    state => state.workspaces.playground.externalLibrary\n  );\n\n  React.useEffect(() => {\n    // When the editor session Id changes, then treat it as a new session.\n    setSessionId(\n      initSession('playground', {\n        // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n        editorValue: propsRef.current.editorTabs[0].value,\n        chapter: propsRef.current.playgroundSourceChapter\n      })\n    );\n  }, [props.editorSessionId]);\n\n  const hash = isSicpEditor ? props.initialEditorValueHash : props.location.hash;\n\n  React.useEffect(() => {\n    if (!hash) {\n      // If not a accessing via shared link, use the Source chapter and variant in the current course\n      if (props.courseSourceChapter && props.courseSourceVariant) {\n        propsRef.current.handleChapterSelect(props.courseSourceChapter, props.courseSourceVariant);\n      }\n      return;\n    }\n    handleHash(hash, propsRef.current);\n  }, [hash, props.courseSourceChapter, props.courseSourceVariant]);\n\n  /**\n   * Handles toggling of relevant SideContentTabs when mobile breakpoint it hit\n   */\n  React.useEffect(() => {\n    if (isMobileBreakpoint && desktopOnlyTabIds.includes(selectedTab)) {\n      setSelectedTab(SideContentType.mobileEditor);\n    } else if (!isMobileBreakpoint && mobileOnlyTabIds.includes(selectedTab)) {\n      setSelectedTab(SideContentType.introduction);\n    }\n  }, [isMobileBreakpoint, selectedTab]);\n\n  const handlers = React.useMemo(\n    () => ({\n      goGreen: () => setIsGreen(!isGreen)\n    }),\n    [isGreen]\n  );\n\n  const onEditorValueChange = React.useCallback(val => {\n    setLastEdit(new Date());\n    propsRef.current.handleEditorValueChange(val);\n  }, []);\n\n  const onChangeTabs = React.useCallback(\n    (\n      newTabId: SideContentType,\n      prevTabId: SideContentType,\n      event: React.MouseEvent<HTMLElement>\n    ) => {\n      if (newTabId === prevTabId) {\n        return;\n      }\n\n      const { handleUsingSubst, handleReplOutputClear, playgroundSourceChapter } = propsRef.current;\n\n      /**\n       * Do nothing when clicking the mobile 'Run' tab while on the stepper tab.\n       */\n      if (\n        !(\n          prevTabId === SideContentType.substVisualizer &&\n          newTabId === SideContentType.mobileEditorRun\n        )\n      ) {\n        if (playgroundSourceChapter <= 2 && newTabId === SideContentType.substVisualizer) {\n          handleUsingSubst(true);\n        }\n\n        if (prevTabId === SideContentType.substVisualizer && !hasBreakpoints) {\n          handleReplOutputClear();\n          handleUsingSubst(false);\n        }\n\n        setSelectedTab(newTabId);\n      }\n    },\n    [hasBreakpoints]\n  );\n\n  const pushLog = React.useCallback(\n    (newInput: Input) => {\n      log(sessionId, newInput);\n    },\n    [sessionId]\n  );\n\n  const handleEditorEval = React.useCallback(\n    () => dispatch(evalEditor(workspaceLocation)),\n    [dispatch, workspaceLocation]\n  );\n\n  const autorunButtons = React.useMemo(() => {\n    return (\n      <ControlBarAutorunButtons\n        {..._.pick(props, 'isDebugging', 'isEditorAutorun', 'isRunning')}\n        handleInterruptEval={() => dispatch(beginInterruptExecution(workspaceLocation))}\n        handleToggleEditorAutorun={() => dispatch(toggleEditorAutorun(workspaceLocation))}\n        handleEditorEval={handleEditorEval}\n        handleDebuggerPause={() => dispatch(beginDebuggerPause(workspaceLocation))}\n        handleDebuggerReset={() => dispatch(debuggerReset(workspaceLocation))}\n        handleDebuggerResume={() => dispatch(debuggerResume(workspaceLocation))}\n        key=\"autorun\"\n        autorunDisabled={usingRemoteExecution}\n        sourceChapter={props.playgroundSourceChapter}\n        // Disable pause for non-Source languages since they cannot be paused\n        pauseDisabled={usingRemoteExecution || !isSourceLanguage(props.playgroundSourceChapter)}\n      />\n    );\n  }, [dispatch, handleEditorEval, props, usingRemoteExecution, workspaceLocation]);\n\n  const chapterSelectHandler = React.useCallback(\n    ({ chapter, variant }: { chapter: Chapter; variant: Variant }, e: any) => {\n      const { handleUsingSubst, handleReplOutputClear, handleChapterSelect } = propsRef.current;\n      if ((chapter <= 2 && hasBreakpoints) || selectedTab === SideContentType.substVisualizer) {\n        handleUsingSubst(true);\n      }\n      if (chapter > 2) {\n        handleReplOutputClear();\n        handleUsingSubst(false);\n      }\n\n      const input: Input = {\n        time: Date.now(),\n        type: 'chapterSelect',\n        data: chapter\n      };\n\n      pushLog(input);\n\n      handleChapterSelect(chapter, variant);\n    },\n    [hasBreakpoints, selectedTab, pushLog]\n  );\n\n  const chapterSelect = React.useMemo(\n    () => (\n      <ControlBarChapterSelect\n        handleChapterSelect={chapterSelectHandler}\n        sourceChapter={props.playgroundSourceChapter}\n        sourceVariant={props.playgroundSourceVariant}\n        key=\"chapter\"\n        disabled={usingRemoteExecution}\n      />\n    ),\n    [\n      chapterSelectHandler,\n      props.playgroundSourceChapter,\n      props.playgroundSourceVariant,\n      usingRemoteExecution\n    ]\n  );\n\n  const clearButton = React.useMemo(\n    () =>\n      selectedTab === SideContentType.substVisualizer ? null : (\n        <ControlBarClearButton\n          handleReplOutputClear={props.handleReplOutputClear}\n          key=\"clear_repl\"\n        />\n      ),\n    [props.handleReplOutputClear, selectedTab]\n  );\n\n  const evalButton = React.useMemo(\n    () =>\n      selectedTab === SideContentType.substVisualizer ? null : (\n        <ControlBarEvalButton\n          handleReplEval={props.handleReplEval}\n          isRunning={props.isRunning}\n          key=\"eval_repl\"\n        />\n      ),\n    [props.handleReplEval, props.isRunning, selectedTab]\n  );\n\n  const executionTime = React.useMemo(\n    () => (\n      <ControlBarExecutionTime\n        execTime={props.execTime}\n        handleChangeExecTime={props.handleChangeExecTime}\n        key=\"execution_time\"\n      />\n    ),\n    [props.execTime, props.handleChangeExecTime]\n  );\n\n  const stepperStepLimit = React.useMemo(\n    () => (\n      <ControlBarStepLimit\n        stepLimit={props.stepLimit}\n        handleChangeStepLimit={limit => dispatch(changeStepLimit(limit, workspaceLocation))}\n        key=\"step_limit\"\n      />\n    ),\n    [dispatch, props.stepLimit, workspaceLocation]\n  );\n\n  const { handleEditorValueChange } = props;\n\n  // No point memoing this, it uses props.editorValue\n  const sessionButtons = (\n    <ControlBarSessionButtons\n      editorSessionId={props.editorSessionId}\n      // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n      editorValue={props.editorTabs[0].value}\n      handleSetEditorSessionId={id => dispatch(setEditorSessionId(workspaceLocation, id))}\n      sharedbConnected={props.sharedbConnected}\n      key=\"session\"\n    />\n  );\n\n  const shareButton = React.useMemo(() => {\n    const queryString = isSicpEditor\n      ? Links.playground + '#' + props.initialEditorValueHash\n      : props.queryString;\n    return (\n      <ControlBarShareButton\n        handleGenerateLz={() => dispatch(generateLzString())}\n        handleShortenURL={s => dispatch(shortenURL(s))}\n        handleUpdateShortURL={s => dispatch(updateShortURL(s))}\n        queryString={queryString}\n        shortURL={props.shortURL}\n        isSicp={isSicpEditor}\n        key=\"share\"\n      />\n    );\n  }, [dispatch, isSicpEditor, props.initialEditorValueHash, props.queryString, props.shortURL]);\n\n  const playgroundIntroductionTab: SideContentTab = React.useMemo(\n    () => ({\n      label: 'Introduction',\n      iconName: IconNames.HOME,\n      body: (\n        <Markdown\n          content={generateSourceIntroduction(\n            props.playgroundSourceChapter,\n            props.playgroundSourceVariant\n          )}\n          openLinksInNewWindow={true}\n        />\n      ),\n      id: SideContentType.introduction\n    }),\n    [props.playgroundSourceChapter, props.playgroundSourceVariant]\n  );\n\n  const tabs = React.useMemo(() => {\n    const tabs: SideContentTab[] = [playgroundIntroductionTab];\n\n    return tabs;\n  }, [playgroundIntroductionTab]);\n\n  // Remove Intro and Remote Execution tabs for mobile\n  const mobileTabs = [...tabs].filter(({ id }) => !(id && desktopOnlyTabIds.includes(id)));\n\n  const onLoadMethod = React.useCallback(\n    (editor: Ace.Editor) => {\n      const addFold = () => {\n        editor.getSession().addFold('    ', new Range(1, 0, props.prependLength!, 0));\n        editor.renderer.off('afterRender', addFold);\n      };\n\n      editor.renderer.on('afterRender', addFold);\n    },\n    [props.prependLength]\n  );\n\n  const onChangeMethod = React.useCallback(\n    (newCode: string, delta: CodeDelta) => {\n      handleEditorValueChange(newCode);\n\n      const input: Input = {\n        time: Date.now(),\n        type: 'codeDelta',\n        data: delta\n      };\n\n      pushLog(input);\n    },\n    [handleEditorValueChange, pushLog]\n  );\n\n  const onCursorChangeMethod = React.useCallback(\n    (selection: any) => {\n      const input: Input = {\n        time: Date.now(),\n        type: 'cursorPositionChange',\n        data: selection.getCursor()\n      };\n\n      pushLog(input);\n    },\n    [pushLog]\n  );\n\n  const onSelectionChangeMethod = React.useCallback(\n    (selection: any) => {\n      const range: SelectionRange = selection.getRange();\n      const isBackwards: boolean = selection.isBackwards();\n      if (!isEqual(range.start, range.end)) {\n        const input: Input = {\n          time: Date.now(),\n          type: 'selectionRangeData',\n          data: { range, isBackwards }\n        };\n\n        pushLog(input);\n      }\n    },\n    [pushLog]\n  );\n\n  const handleEditorUpdateBreakpoints = React.useCallback(\n    (breakpoints: string[]) => {\n      // get rid of holes in array\n      const numberOfBreakpoints = breakpoints.filter(arrayItem => !!arrayItem).length;\n      if (numberOfBreakpoints > 0) {\n        setHasBreakpoints(true);\n        if (propsRef.current.playgroundSourceChapter <= 2) {\n          /**\n           * There are breakpoints set on Source Chapter 2, so we set the\n           * Redux state for the editor to evaluate to the substituter\n           */\n\n          propsRef.current.handleUsingSubst(true);\n        }\n      }\n      if (numberOfBreakpoints === 0) {\n        setHasBreakpoints(false);\n\n        if (selectedTab !== SideContentType.substVisualizer) {\n          propsRef.current.handleReplOutputClear();\n          propsRef.current.handleUsingSubst(false);\n        }\n      }\n      propsRef.current.handleEditorUpdateBreakpoints(breakpoints);\n    },\n    [selectedTab]\n  );\n\n  const replDisabled = usingRemoteExecution;\n\n  const editorContainerProps: NormalEditorContainerProps = {\n    ..._.pick(props, 'editorSessionId', 'isEditorAutorun'),\n    editorVariant: 'normal',\n    editorTabs: props.editorTabs.map(convertEditorTabStateToProps),\n    handleDeclarationNavigate: (cursorPosition: Position) =>\n      dispatch(navigateToDeclaration(workspaceLocation, cursorPosition)),\n    handleEditorEval,\n    handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n      dispatch(promptAutocomplete(workspaceLocation, row, col, callback)),\n    handleSendReplInputToOutput: (code: string) =>\n      dispatch(sendReplInputToOutput(code, workspaceLocation)),\n    handleSetSharedbConnected: (connected: boolean) =>\n      dispatch(setSharedbConnected(workspaceLocation, connected)),\n    onChange: onChangeMethod,\n    onCursorChange: onCursorChangeMethod,\n    onSelectionChange: onSelectionChangeMethod,\n    onLoad: isSicpEditor && props.prependLength ? onLoadMethod : undefined,\n    sourceChapter: props.playgroundSourceChapter,\n    externalLibraryName,\n    sourceVariant: props.playgroundSourceVariant,\n    handleEditorValueChange: onEditorValueChange,\n    handleEditorUpdateBreakpoints: handleEditorUpdateBreakpoints\n  };\n\n  const replProps = {\n    ..._.pick(props, 'output', 'replValue', 'handleReplEval', 'usingSubst'),\n    handleBrowseHistoryDown: () => dispatch(browseReplHistoryDown(workspaceLocation)),\n    handleBrowseHistoryUp: () => dispatch(browseReplHistoryUp(workspaceLocation)),\n    handleReplValueChange: (newValue: string) =>\n      dispatch(updateReplValue(newValue, workspaceLocation)),\n    sourceChapter: props.playgroundSourceChapter,\n    sourceVariant: props.playgroundSourceVariant,\n    externalLibrary: ExternalLibraryName.NONE, // temporary placeholder as we phase out libraries\n    hidden: selectedTab === SideContentType.substVisualizer,\n    inputHidden: replDisabled,\n    replButtons: [replDisabled ? null : evalButton, clearButton],\n    disableScrolling: isSicpEditor\n  };\n\n  const sideBarProps = {\n    tabs: [\n      // TODO: Re-enable on master once the feature is production-ready.\n      // {\n      //   label: 'Files',\n      //   body: <FileSystemView basePath=\"/playground\" />,\n      //   iconName: IconNames.FOLDER_CLOSE,\n      //   id: SideContentType.files\n      // }\n    ]\n  };\n\n  const workspaceProps: WorkspaceProps = {\n    controlBarProps: {\n      editorButtons: [\n        autorunButtons,\n        chapterSelect,\n        usingRemoteExecution || !isSourceLanguage(props.playgroundSourceChapter)\n          ? null\n          : props.usingSubst\n          ? stepperStepLimit\n          : executionTime\n      ]\n    },\n    editorContainerProps: editorContainerProps,\n    handleSideContentHeightChange: change =>\n      dispatch(changeSideContentHeight(change, workspaceLocation)),\n    replProps: replProps,\n    sideBarProps: sideBarProps,\n    sideContentHeight: props.sideContentHeight,\n    sideContentProps: {\n      selectedTabId: selectedTab,\n      onChange: onChangeTabs,\n      tabs: {\n        beforeDynamicTabs: tabs,\n        afterDynamicTabs: []\n      },\n      workspaceLocation: isSicpEditor ? 'sicp' : 'playground',\n      sideContentHeight: props.sideContentHeight\n    },\n    sideContentIsResizeable: selectedTab !== SideContentType.substVisualizer\n  };\n\n  const mobileWorkspaceProps: MobileWorkspaceProps = {\n    editorContainerProps: editorContainerProps,\n    replProps: replProps,\n    sideBarProps: sideBarProps,\n    mobileSideContentProps: {\n      mobileControlBarProps: {\n        editorButtons: [\n          autorunButtons,\n          chapterSelect,\n          shareButton,\n          isSicpEditor ? null : sessionButtons\n        ]\n      },\n      selectedTabId: selectedTab,\n      onChange: onChangeTabs,\n      tabs: {\n        beforeDynamicTabs: mobileTabs,\n        afterDynamicTabs: []\n      },\n      workspaceLocation: isSicpEditor ? 'sicp' : 'playground'\n    }\n  };\n\n  return isMobileBreakpoint ? (\n    <div className={classNames('Playground', Classes.DARK, isGreen ? 'GreenScreen' : undefined)}>\n      <MobileWorkspace {...mobileWorkspaceProps} />\n    </div>\n  ) : (\n    <HotKeys\n      className={classNames('Playground', Classes.DARK, isGreen ? 'GreenScreen' : undefined)}\n      keyMap={keyMap}\n      handlers={handlers}\n    >\n      <Workspace {...workspaceProps} />\n    </HotKeys>\n  );\n};\n\nconst mobileOnlyTabIds: readonly SideContentType[] = [\n  SideContentType.mobileEditor,\n  SideContentType.mobileEditorRun\n];\nconst desktopOnlyTabIds: readonly SideContentType[] = [SideContentType.introduction];\n\nexport default Playground;\n","import { Chapter, Variant } from 'Clang-slang/dist/types';\nimport _ from 'lodash';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { OverallState } from '../../commons/application/ApplicationTypes';\nimport {\n  changeExecTime,\n  chapterSelect,\n  clearReplOutput,\n  evalRepl,\n  setEditorBreakpoint,\n  toggleUsingSubst,\n  updateEditorValue\n} from '../../commons/workspace/WorkspaceActions';\nimport { WorkspaceLocation } from '../../commons/workspace/WorkspaceTypes';\nimport Playground, { DispatchProps, StateProps } from './Playground';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  ..._.pick(\n    state.workspaces.playground,\n    'activeEditorTabIndex',\n    'editorTabs',\n    'editorSessionId',\n    'execTime',\n    'stepLimit',\n    'isEditorAutorun',\n    'isRunning',\n    'isDebugging',\n    'enableDebugging',\n    'output',\n    'replValue',\n    'sideContentHeight',\n    'sharedbConnected',\n    'usingSubst'\n  ),\n  queryString: state.playground.queryString,\n  shortURL: state.playground.shortURL,\n  playgroundSourceChapter: Chapter.CLANG,\n  playgroundSourceVariant: state.workspaces.playground.context.variant,\n  courseSourceChapter: state.session.sourceChapter,\n  courseSourceVariant: state.session.sourceVariant,\n  persistenceUser: state.session.googleUser,\n  persistenceFile: state.playground.persistenceFile,\n  githubOctokitObject: state.session.githubOctokitObject,\n  githubSaveInfo: state.playground.githubSaveInfo\n});\n\nconst workspaceLocation: WorkspaceLocation = 'playground';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleChangeExecTime: (execTime: number) => changeExecTime(execTime, workspaceLocation),\n      handleChapterSelect: (chapter: Chapter, variant: Variant) =>\n        chapterSelect(chapter, variant, workspaceLocation),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, workspaceLocation),\n      handleEditorUpdateBreakpoints: (breakpoints: string[]) =>\n        setEditorBreakpoint(breakpoints, workspaceLocation),\n      handleReplEval: () => evalRepl(workspaceLocation),\n      handleReplOutputClear: () => clearReplOutput(workspaceLocation),\n      handleUsingSubst: (usingSubst: boolean) => toggleUsingSubst(usingSubst, workspaceLocation)\n    },\n    dispatch\n  );\n\nconst PlaygroundContainer = () => {\n  const Component = withRouter(connect(mapStateToProps, mapDispatchToProps)(Playground));\n  return <Component workspaceLocation={workspaceLocation} />;\n};\n\nexport default PlaygroundContainer;\n","import { Card, H2, UL } from '@blueprintjs/core';\nimport Constants, { Links } from 'src/commons/utils/Constants';\nimport { useTypedSelector } from 'src/commons/utils/Hooks';\n\nconst Welcome: React.FC = () => {\n  const name = useTypedSelector(store => store.session.name);\n\n  return (\n    <div className=\"fullpage\">\n      <Card className=\"fullpage-content\">\n        <div style={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}>\n          <div>\n            <H2>Welcome to {Constants.sourceAcademyDeploymentName}</H2>\n            <div>\n              You have logged in as <strong>{name}</strong>. {Constants.sourceAcademyDeploymentName}{' '}\n              does not have any course information for this account.\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <UL style={{ textAlign: 'left' }}>\n                <li>\n                  If you are enrolled in a course, check with the course staff to make sure your\n                  account is added to the course.\n                </li>\n                <li>\n                  If you are looking for a course to join, check{' '}\n                  <a href={Links.resourcesForLearners}>here</a> to find a course that suits your\n                  needs.\n                </li>\n                <li>\n                  If you are an instructor and want to create a course, click{' '}\n                  <a href={Links.resourcesForEducators}>here</a> for a list of resources to get\n                  started.\n                </li>\n              </UL>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Welcome;\n","import { Callout, ProgressBar } from '@blueprintjs/core';\nimport { IconName } from '@blueprintjs/icons';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AssessmentOverview, AssessmentType } from '../assessment/AssessmentTypes';\nimport { assessmentTypeLink } from '../utils/ParamParseHelper';\n\ntype ProfileCardProps = DispatchProps & StateProps;\n\ntype StateProps = {\n  item: AssessmentOverview;\n  courseId?: number;\n};\n\ntype DispatchProps = {\n  getFrac: (num: number, den: number) => number;\n  parseColour: (frac: number) => string;\n  renderIcon: (category: AssessmentType) => IconName;\n};\n\nconst ProfileCard: React.FC<ProfileCardProps> = props => {\n  const { item } = props;\n\n  const isInvalidXP = item.maxXp <= 0 && item.xp === 0;\n\n  const xpDetails = (\n    <div className=\"xp-details\">\n      <div className=\"title\">XP</div>\n      <div className=\"value\">\n        {item.xp} / {item.maxXp}\n      </div>\n      <ProgressBar\n        animate={false}\n        className={'value-bar' + props.parseColour(props.getFrac(item.xp, item.maxXp))}\n        stripes={false}\n        value={props.getFrac(item.xp, item.maxXp)}\n      />\n    </div>\n  );\n\n  return (\n    // Make each card navigate the user to the respective assessment\n    <NavLink\n      className=\"profile-summary-navlink\"\n      key={`${item.title}-${item.id}`}\n      target=\"_blank\"\n      to={`/courses/${props.courseId}/${assessmentTypeLink(item.type)}/${item.id}/0`}\n      activeClassName=\"profile-summary-navlink\"\n    >\n      <Callout\n        className=\"profile-summary-callout\"\n        key={`${item.title}-${item.id}`}\n        icon={props.renderIcon(item.type)}\n        title={item.title}\n      >\n        {isInvalidXP ? '' : xpDetails}\n      </Callout>\n    </NavLink>\n  );\n};\n\nexport default ProfileCard;\n","import { Drawer, DrawerSize, NonIdealState, Spinner } from '@blueprintjs/core';\nimport { IconName, IconNames } from '@blueprintjs/icons';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchAssessmentOverviews, fetchTotalXp } from '../application/actions/SessionActions';\nimport { Role } from '../application/ApplicationTypes';\nimport {\n  AssessmentConfiguration,\n  AssessmentOverview,\n  AssessmentStatuses,\n  AssessmentType,\n  GradingStatuses\n} from '../assessment/AssessmentTypes';\nimport Constants from '../utils/Constants';\nimport { useTypedSelector } from '../utils/Hooks';\nimport ProfileCard from './ProfileCard';\n\nexport type ProfileProps = OwnProps;\n\ntype StateProps = {\n  name?: string;\n  role?: Role;\n  assessmentOverviews?: AssessmentOverview[];\n  assessmentConfigurations?: AssessmentConfiguration[];\n  xp?: number;\n  courseId?: number;\n};\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst Profile: React.FC<ProfileProps> = props => {\n  // FIXME: `xp` is actually of type number | undefined here!\n  // Fix the session type, then remove the typecast below\n  const { name, role, assessmentOverviews, assessmentConfigurations, xp, courseId } =\n    useTypedSelector(state => state.session) as StateProps;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (name && role && !assessmentOverviews) {\n      // If assessment overviews are not loaded, fetch them\n      dispatch(fetchAssessmentOverviews());\n    }\n  }, [assessmentOverviews, dispatch, name, role, xp]);\n\n  useEffect(() => {\n    if (courseId && !xp) {\n      dispatch(fetchTotalXp());\n    }\n  }, [courseId, dispatch, xp]);\n\n  const [isLoaded, setIsLoaded] = useState(name && role && assessmentOverviews);\n\n  useEffect(() => {\n    setIsLoaded(name && role && assessmentOverviews);\n  }, [assessmentOverviews, name, role]);\n\n  // Render\n  let content: JSX.Element;\n\n  if (!isLoaded) {\n    content = <NonIdealState description=\"Loading...\" icon={<Spinner />} />;\n  } else {\n    // Check if there are any closed assessments, else render a placeholder <div>\n    const numClosed = assessmentOverviews!.filter(\n      item => item.status === AssessmentStatuses.submitted\n    ).length;\n\n    const userXp = xp || 0;\n    const caFulfillmentLevel = Constants.caFulfillmentLevel;\n    const fullXp = caFulfillmentLevel * 1000;\n\n    const userDetails = (\n      <div className=\"profile-header\">\n        <div className=\"profile-username\">\n          <div className=\"name\">{name}</div>\n          <div className=\"role\">{role}</div>\n        </div>\n      </div>\n    );\n\n    if (numClosed === 0) {\n      content = (\n        <div className=\"profile-content\">\n          {userDetails}\n          <div className=\"profile-placeholder\">\n            There are no closed assessments to render grade and XP of.\n          </div>\n        </div>\n      );\n    } else {\n      // Performs boundary checks if denominator is 0 or if it exceeds 1 (100%)\n      const getFrac = (num: number, den: number): number => {\n        return den <= 0 || num / den > 1 ? 1 : num / den;\n      };\n\n      // Given a fraction between 0 and 1 inclusive, returns a className to apply colour with CSS\n      const parseColour = (frac: number): string => {\n        return frac < 0\n          ? ''\n          : frac >= 0.8\n          ? ' progress-steelblue'\n          : frac >= 0.45\n          ? ' progress-deepskyblue'\n          : ' progress-skyblue';\n      };\n\n      // Given an assessment category, return its icon\n      const renderIcon = (assessmentType: AssessmentType) => {\n        const icons: IconName[] = [\n          IconNames.FLAME,\n          IconNames.LIGHTBULB,\n          IconNames.PREDICTIVE_ANALYSIS,\n          IconNames.COMPARISON,\n          IconNames.MANUAL\n        ];\n        if (assessmentConfigurations) {\n          const index = assessmentConfigurations.findIndex(c => c.type === assessmentType);\n\n          // For rendering hidden assessments not visible to the student\n          // e.g. studio participation marks\n          return index > 0 ? icons[index] : IconNames.PULSE;\n        } else {\n          // Should never hit this case as there are no assessments, submissions or answers\n          // if there are no assessmentTypes\n          return IconNames.PULSE;\n        }\n      };\n\n      // Build condensed assessment cards from an array of assessments\n      const summaryCallouts = assessmentOverviews!\n        .filter(\n          item =>\n            item.status === AssessmentStatuses.submitted &&\n            (item.gradingStatus === GradingStatuses.graded ||\n              item.gradingStatus === GradingStatuses.excluded)\n        )\n        .map((assessment, index) => {\n          return (\n            <ProfileCard\n              key={index}\n              item={assessment}\n              getFrac={getFrac}\n              parseColour={parseColour}\n              renderIcon={renderIcon}\n              courseId={courseId}\n            />\n          );\n        });\n\n      content = (\n        <div className=\"profile-content\">\n          {userDetails}\n\n          <div className=\"profile-progress\">\n            <div className=\"profile-xp\">\n              <Spinner\n                className={'profile-spinner' + parseColour(getFrac(userXp, fullXp))}\n                size={144}\n                value={getFrac(userXp, fullXp)}\n              />\n              <div className=\"type\">XP Progress</div>\n              <div className=\"total-value\">\n                {userXp} / {fullXp}*\n              </div>\n              <div className=\"percentage\">{(getFrac(userXp, fullXp) * 100).toFixed(2)}%</div>\n            </div>\n          </div>\n          <div className=\"profile-xp-footer\">\n            *{fullXp}XP needed to reach full CA level of {caFulfillmentLevel}\n          </div>\n          <div className=\"profile-callouts\">{summaryCallouts}</div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <Drawer\n      className=\"profile\"\n      icon={IconNames.USER}\n      isCloseButtonShown={true}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      title=\"User Profile\"\n      position=\"left\"\n      size={DrawerSize.SMALL}\n    >\n      {content}\n    </Drawer>\n  );\n};\n\nexport default Profile;\n","import { Classes, Dialog } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { Links } from '../utils/Constants';\n\ntype DialogProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst DropdownAbout: React.SFC<DialogProps> = props => (\n  <Dialog\n    className=\"about\"\n    icon={IconNames.HELP}\n    isCloseButtonShown={true}\n    isOpen={props.isOpen}\n    onClose={props.onClose}\n    title=\"About\"\n  >\n    <div className={Classes.DIALOG_BODY}>\n      <div className=\"abt\">\n        <p>\n          The <i>Source Academy</i> is a computer-mediated learning environment for studying the\n          structure and interpretation of computer programs. Students write and run their programs\n          in their web browser, using sublanguages of JavaScript called{' '}\n          <a href={Links.sourceDocs}>Source</a>, designed for the textbook{' '}\n          <a href={Links.textbook}>\n            Structure and Interpretation of Computer Programs, JavaScript Edition\n          </a>\n          .\n        </p>\n        <p>\n          The Source Academy is available under the Apache License 2.0 at the GitHub organisation{' '}\n          <a href={Links.githubOrg}>source-academy</a>. More information and resources are available\n          at the <a href={Links.about}>about pages</a> of the Source Academy.\n        </p>\n      </div>\n    </div>\n  </Dialog>\n);\n\nexport default DropdownAbout;\n","import { Classes, Dialog, HTMLSelect } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport { Role } from '../application/ApplicationTypes';\nimport { UserCourse } from '../application/types/SessionTypes';\nimport { history } from '../utils/HistoryHelper';\n\ntype DialogProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  courses: UserCourse[];\n  courseId?: number;\n};\n\nconst DropdownCourses: React.FC<DialogProps> = props => {\n  const { courses } = props;\n\n  const options = courses.map(course => ({\n    value: course.courseId,\n    label: course.courseName.concat(!course.viewable ? ' - disabled' : ''),\n    disabled: !course.viewable && course.role !== Role.Admin\n  }));\n\n  const onChangeHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    history.push(`/courses/${e.currentTarget.value}`);\n    props.onClose();\n  };\n\n  return (\n    <Dialog\n      className=\"my-courses\"\n      icon={IconNames.PROPERTIES}\n      isCloseButtonShown={true}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      title=\"My Courses\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <div>Select a course to switch to:</div>\n        <HTMLSelect\n          value={props.courseId}\n          options={options}\n          fill\n          onChange={onChangeHandler}\n          disabled={courses.length <= 1}\n        />\n      </div>\n    </Dialog>\n  );\n};\n\nexport default DropdownCourses;\n","import {\n  Button,\n  Classes,\n  Dialog,\n  FormGroup,\n  HTMLSelect,\n  InputGroup,\n  Switch,\n  Tab,\n  Tabs,\n  Text,\n  TextArea\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport * as React from 'react';\n\nimport { CourseHelpTextEditorTab } from '../../pages/academy/adminPanel/subcomponents/CourseConfigPanel';\nimport { sourceLanguages } from '../application/ApplicationTypes';\nimport { UpdateCourseConfiguration } from '../application/types/SessionTypes';\nimport Markdown from '../Markdown';\nimport { showWarningMessage } from '../utils/NotificationsHelper';\n\ntype DialogProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  handleCreateCourse: (courseConfig: UpdateCourseConfiguration) => void;\n};\n\nconst DropdownCreateCourse: React.FC<DialogProps> = props => {\n  const [courseConfig, setCourseConfig] = React.useState<UpdateCourseConfiguration>({\n    courseName: '',\n    courseShortName: '',\n    viewable: true,\n    enableGame: true,\n    enableAchievements: true,\n    enableSourcecast: true,\n    sourceChapter: Chapter.CLANG,\n    sourceVariant: Variant.DEFAULT,\n    moduleHelpText: ''\n  });\n\n  const [courseHelpTextSelectedTab, setCourseHelpTextSelectedTab] =\n    React.useState<CourseHelpTextEditorTab>(CourseHelpTextEditorTab.WRITE);\n\n  const sourceChapterOptions = [{ value: Chapter.CLANG }];\n\n  const sourceVariantOptions = (chapter: Chapter) =>\n    sourceLanguages\n      .filter(e => e.chapter === chapter)\n      .map(e => {\n        return {\n          label: e.variant.replace(/^\\w/, c => c.toUpperCase()),\n          value: e.variant\n        };\n      });\n\n  const submitHandler = () => {\n    // Validate that courseName is not an empty string\n    if (courseConfig.courseName === '') {\n      showWarningMessage('Course Name cannot be empty!');\n      return;\n    }\n    props.handleCreateCourse(courseConfig);\n    props.onClose();\n  };\n\n  const onChangeTabs = React.useCallback(\n    (\n      newTabId: CourseHelpTextEditorTab,\n      prevTabId: CourseHelpTextEditorTab,\n      event: React.MouseEvent<HTMLElement>\n    ) => {\n      if (newTabId === prevTabId) {\n        return;\n      }\n      setCourseHelpTextSelectedTab(newTabId);\n    },\n    [setCourseHelpTextSelectedTab]\n  );\n\n  return (\n    <Dialog\n      className=\"create-course\"\n      icon={IconNames.ADD}\n      isCloseButtonShown={true}\n      canOutsideClickClose={false}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      title=\"Create Course\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <div>\n          <b>Create your own Source Academy course and manage your own learners!</b>\n        </div>\n        <br />\n        <FormGroup\n          helperText=\"Please enter the course name that will be used for course selection\"\n          label=\"Course Name\"\n          labelInfo=\"(* required)\"\n          labelFor=\"courseName\"\n        >\n          <InputGroup\n            id=\"courseName\"\n            value={courseConfig.courseName}\n            onChange={e =>\n              setCourseConfig({\n                ...courseConfig,\n                courseName: e.target.value\n              })\n            }\n          />\n        </FormGroup>\n        <FormGroup\n          helperText=\"Usually the module code of the course. This will be displayed on the top left.\"\n          label={'Course Short Name'}\n          labelInfo=\"(optional)\"\n          labelFor=\"courseShortName\"\n        >\n          <InputGroup\n            id=\"courseShortName\"\n            value={courseConfig.courseShortName}\n            onChange={e =>\n              setCourseConfig({\n                ...courseConfig,\n                courseShortName: e.target.value\n              })\n            }\n          />\n        </FormGroup>\n        <FormGroup\n          helperText=\"The module help text will be used in the course help dialog.\"\n          labelFor=\"moduleHelpText\"\n        >\n          <Text tagName=\"span\">Module Help Text&nbsp;</Text>\n          <Text tagName=\"span\" className=\"optional-text\">\n            (optional)\n          </Text>\n          <Tabs\n            selectedTabId={courseHelpTextSelectedTab}\n            onChange={onChangeTabs}\n            className=\"module-help-text-tabs\"\n          >\n            <Tab id={CourseHelpTextEditorTab.WRITE} title=\"Write\" />\n            <Tab id={CourseHelpTextEditorTab.PREVIEW} title=\"Preview\" />\n          </Tabs>\n          {courseHelpTextSelectedTab === CourseHelpTextEditorTab.WRITE && (\n            <TextArea\n              id=\"moduleHelpText\"\n              className=\"input-textarea\"\n              fill={true}\n              value={courseConfig.moduleHelpText}\n              onChange={e =>\n                setCourseConfig({\n                  ...courseConfig,\n                  moduleHelpText: e.target.value\n                })\n              }\n            />\n          )}\n          {courseHelpTextSelectedTab === CourseHelpTextEditorTab.PREVIEW && (\n            <div className=\"input-markdown\">\n              <Markdown content={courseConfig.moduleHelpText || ''} openLinksInNewWindow />\n            </div>\n          )}\n        </FormGroup>\n\n        <div className=\"boolean-container\">\n          <div>\n            <Switch\n              checked={courseConfig.viewable}\n              inline\n              label=\"Viewable\"\n              onChange={e =>\n                setCourseConfig({\n                  ...courseConfig,\n                  viewable: (e.target as HTMLInputElement).checked\n                })\n              }\n            />\n            <Switch\n              checked={courseConfig.enableAchievements}\n              inline\n              label=\"Enable Achievements\"\n              onChange={e =>\n                setCourseConfig({\n                  ...courseConfig,\n                  enableAchievements: (e.target as HTMLInputElement).checked\n                })\n              }\n            />\n          </div>\n          <div>\n            <Switch\n              checked={courseConfig.enableGame}\n              inline\n              label=\"Enable Game\"\n              onChange={e =>\n                setCourseConfig({\n                  ...courseConfig,\n                  enableGame: (e.target as HTMLInputElement).checked\n                })\n              }\n            />\n\n            <Switch\n              checked={courseConfig.enableSourcecast}\n              inline\n              label=\"Enable Sourcecast\"\n              onChange={e =>\n                setCourseConfig({\n                  ...courseConfig,\n                  enableSourcecast: (e.target as HTMLInputElement).checked\n                })\n              }\n            />\n          </div>\n        </div>\n        <div>\n          <FormGroup\n            label=\"Default Source Chapter\"\n            labelInfo=\"(configurable later on)\"\n            labelFor=\"source-chapter\"\n          >\n            <HTMLSelect\n              id=\"source-chapter\"\n              options={sourceChapterOptions}\n              value={courseConfig.sourceChapter}\n              onChange={e => {\n                setCourseConfig({\n                  ...courseConfig,\n                  sourceChapter: parseInt(e.target.value)\n                });\n              }}\n              fill\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Default Source Variant\"\n            labelInfo=\"(configurable later on)\"\n            labelFor=\"source-variant\"\n          >\n            <HTMLSelect\n              id=\"source-variant\"\n              options={sourceVariantOptions(courseConfig.sourceChapter!)}\n              value={courseConfig.sourceVariant}\n              onChange={e => {\n                setCourseConfig({\n                  ...courseConfig,\n                  sourceVariant: e.target.value as Variant\n                });\n              }}\n              fill\n            />\n          </FormGroup>\n        </div>\n        <div className=\"create-course-button-container\">\n          <Button text=\"Create Course\" onClick={submitHandler} />\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default DropdownCreateCourse;\n","import { Classes, Dialog } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\n\nimport Markdown from '../Markdown';\nimport { Links } from '../utils/Constants';\nimport { useTypedSelector } from '../utils/Hooks';\n\ntype DialogProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst DropdownHelp: React.SFC<DialogProps> = props => {\n  const moduleHelpText = useTypedSelector(store => store.session.moduleHelpText);\n\n  return (\n    <Dialog\n      className=\"help\"\n      icon={IconNames.ERROR}\n      isCloseButtonShown={true}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      title=\"Help\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        {moduleHelpText ? (\n          <Markdown content={moduleHelpText} openLinksInNewWindow />\n        ) : (\n          <>\n            <p>\n              We recommend recent updates of the browsers <b>Google Chrome</b>,{' '}\n              <b>Microsoft Edge</b>, or <b>Mozilla Firefox</b> to visit the Source Academy.\n            </p>\n            <p>\n              If you encounter issues with the Source Academy using these browsers, please use the\n              issue system of the{' '}\n              <a href={Links.githubIssues}>Source Academy frontend repository on GitHub</a>.\n            </p>\n          </>\n        )}\n      </div>\n    </Dialog>\n  );\n};\nexport default DropdownHelp;\n","import { Classes, Dialog, FormGroup, HTMLSelect, Icon, PopoverPosition } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport { useContext, useMemo } from 'react';\n\nimport { EditorBinding, WorkspaceSettingsContext } from '../WorkspaceSettingsContext';\n\ntype DialogProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst DropdownSettings: React.FC<DialogProps> = props => {\n  const [workspaceSettings, setWorkspaceSettings] = useContext(WorkspaceSettingsContext)!;\n\n  const options = useMemo(\n    () => [\n      {\n        label: 'None',\n        value: EditorBinding.NONE\n      },\n      {\n        label: 'Vim',\n        value: EditorBinding.VIM\n      },\n      {\n        label: 'Emacs',\n        value: EditorBinding.EMACS\n      }\n    ],\n    []\n  );\n\n  const handleEditorBindingChange: React.ChangeEventHandler<HTMLSelectElement> = e => {\n    setWorkspaceSettings({\n      ...workspaceSettings,\n      // Typecast to EditorBinding here is ok since the HTMLSelect only contains 'EditorBinding' options\n      editorBinding: e.target.value as EditorBinding\n    });\n  };\n\n  return (\n    <Dialog\n      className=\"settings\"\n      icon={IconNames.COG}\n      isCloseButtonShown={true}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      title=\"Settings\"\n    >\n      <div className={Classes.DIALOG_BODY}>\n        <FormGroup label=\"Editor Binding: \" labelFor=\"editor-binding\" inline>\n          <HTMLSelect\n            id=\"editor-binding\"\n            options={options}\n            value={workspaceSettings.editorBinding}\n            onChange={handleEditorBindingChange}\n          />\n          <Tooltip2\n            position={PopoverPosition.TOP}\n            className=\"form-field-help-text\"\n            content={\n              \"Optional editor bindings for advanced users. Set to 'None' for default text editor behaviour.\"\n            }\n          >\n            <Icon icon=\"help\" />\n          </Tooltip2>\n        </FormGroup>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default DropdownSettings;\n","import { Menu, MenuItem, Position } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport React, { useState } from 'react';\n\nimport { UpdateCourseConfiguration, UserCourse } from '../application/types/SessionTypes';\nimport ControlButton from '../ControlButton';\nimport Profile from '../profile/Profile';\nimport DropdownAbout from './DropdownAbout';\nimport DropdownCourses from './DropdownCourses';\nimport DropdownCreateCourse from './DropdownCreateCourse';\nimport DropdownHelp from './DropdownHelp';\nimport DropdownSettings from './DropdownSettings';\n\ntype DropdownProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleLogOut: () => void;\n  handleCreateCourse: (courseConfig: UpdateCourseConfiguration) => void;\n};\n\ntype StateProps = {\n  name?: string;\n  courses: UserCourse[];\n  courseId?: number;\n};\n\nconst Dropdown: React.FC<DropdownProps> = props => {\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isAboutOpen, setIsAboutOpen] = useState(false);\n  const [isHelpOpen, setIsHelpOpen] = useState(false);\n  const [isProfileOpen, setIsProfileOpen] = useState(false);\n  const [isMyCoursesOpen, setIsMyCoursesOpen] = useState(false);\n  const [isCreateCourseOpen, setIsCreateCourseOpen] = useState(false);\n\n  function menu(props: DropdownProps) {\n    const profile =\n      props.name && props.courseId != null ? (\n        <MenuItem icon={IconNames.USER} onClick={toggleProfileOpen} text={titleCase(props.name)} />\n      ) : null;\n\n    const myCourses = props.name ? (\n      <MenuItem icon={IconNames.PROPERTIES} onClick={toggleMyCoursesOpen} text=\"My Courses\" />\n    ) : null;\n\n    const createCourse = props.name ? (\n      <MenuItem icon={IconNames.ADD} onClick={toggleCreateCourseOpen} text=\"Create Course\" />\n    ) : null;\n\n    const logout = props.name ? (\n      <MenuItem icon={IconNames.LOG_OUT} text=\"Logout\" onClick={props.handleLogOut} />\n    ) : null;\n\n    return (\n      <Menu>\n        {profile}\n        {myCourses}\n        {createCourse}\n        <MenuItem icon={IconNames.COG} onClick={toggleSettingsOpen} text=\"Settings\" />\n        <MenuItem icon={IconNames.HELP} onClick={toggleAboutOpen} text=\"About\" />\n        <MenuItem icon={IconNames.ERROR} onClick={toggleHelpOpen} text=\"Help\" />\n        {logout}\n      </Menu>\n    );\n  }\n\n  const toggleSettingsOpen = () => {\n    setIsSettingsOpen(oldValue => !oldValue);\n  };\n\n  const toggleAboutOpen = () => {\n    setIsAboutOpen(oldValue => !oldValue);\n  };\n\n  const toggleHelpOpen = () => setIsHelpOpen(oldValue => !oldValue);\n\n  const toggleProfileOpen = () => setIsProfileOpen(oldValue => !oldValue);\n\n  const toggleMyCoursesOpen = () => setIsMyCoursesOpen(oldValue => !oldValue);\n\n  const toggleCreateCourseOpen = () => setIsCreateCourseOpen(oldValue => !oldValue);\n\n  return (\n    <>\n      <Popover2 content={menu(props)} inheritDarkTheme={false} placement={Position.BOTTOM}>\n        <ControlButton icon={IconNames.CARET_DOWN} />\n      </Popover2>\n      <DropdownSettings isOpen={isSettingsOpen} onClose={toggleSettingsOpen} />\n      <DropdownAbout isOpen={isAboutOpen} onClose={toggleAboutOpen} />\n      <DropdownHelp isOpen={isHelpOpen} onClose={toggleHelpOpen} />\n      {props.name ? (\n        <DropdownCourses\n          isOpen={isMyCoursesOpen}\n          onClose={toggleMyCoursesOpen}\n          courses={props.courses}\n          courseId={props.courseId}\n        />\n      ) : null}\n      {props.name ? (\n        <DropdownCreateCourse\n          isOpen={isCreateCourseOpen}\n          onClose={toggleCreateCourseOpen}\n          handleCreateCourse={props.handleCreateCourse}\n        />\n      ) : null}\n      {props.name ? <Profile isOpen={isProfileOpen} onClose={toggleProfileOpen} /> : null}\n    </>\n  );\n};\n\nconst titleCase = (str: string) =>\n  str.replace(/\\w\\S*/g, wrd => wrd.charAt(0).toUpperCase() + wrd.substr(1).toLowerCase());\n\nexport default Dropdown;\n","import { Alignment, Classes, Icon, Navbar, NavbarGroup } from '@blueprintjs/core';\nimport { IconName, IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AssessmentType } from 'src/commons/assessment/AssessmentTypes';\nimport { assessmentTypeLink } from 'src/commons/utils/ParamParseHelper';\n\nimport { Role } from '../../application/ApplicationTypes';\nimport NotificationBadgeContainer from '../../notificationBadge/NotificationBadgeContainer';\nimport { filterNotificationsByType } from '../../notificationBadge/NotificationBadgeHelper';\n\ntype OwnProps = {\n  courseId: number;\n  role: Role;\n  assessmentTypes?: AssessmentType[];\n};\n\nconst AcademyNavigationBar: React.FunctionComponent<OwnProps> = props => (\n  <Navbar className=\"NavigationBar secondary-navbar\">\n    <NavbarGroup align={Alignment.LEFT}>\n      {props.assessmentTypes?.map((assessmentType, idx) => (\n        <NavLink\n          to={`/courses/${props.courseId}/${assessmentTypeLink(assessmentType)}`}\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n          key={idx}\n        >\n          <Icon icon={icons[idx]} />\n          <div className=\"navbar-button-text hidden-xs hidden-sm\">{assessmentType}</div>\n          <NotificationBadgeContainer\n            notificationFilter={filterNotificationsByType(assessmentType)}\n            disableHover={true}\n          />\n        </NavLink>\n      ))}\n    </NavbarGroup>\n    {props.role === Role.Admin || props.role === Role.Staff ? (\n      <NavbarGroup align={Alignment.RIGHT}>\n        <NavLink\n          to={`/courses/${props.courseId}/groundcontrol`}\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        >\n          <Icon icon={IconNames.SATELLITE} />\n          <div className=\"navbar-button-text hidden-xs hidden-sm\">Ground Control</div>\n        </NavLink>\n\n        <NavLink\n          to={`/courses/${props.courseId}/dashboard`}\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        >\n          <Icon icon={IconNames.GLOBE} />\n          <div className=\"navbar-button-text hidden-xs hidden-sm\">Dashboard</div>\n        </NavLink>\n\n        <NavLink\n          to={`/courses/${props.courseId}/sourcereel`}\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        >\n          <Icon icon={IconNames.MOBILE_VIDEO} />\n          <div className=\"navbar-button-text hidden-xs hidden-sm hidden-md\">Sourcereel</div>\n        </NavLink>\n\n        {props.role === Role.Admin && (\n          <NavLink\n            to={`/courses/${props.courseId}/xpcalculation`}\n            activeClassName={Classes.ACTIVE}\n            className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n          >\n            <Icon icon={IconNames.CALCULATOR} />\n            <div className=\"navbar-button-text hidden-xs hidden-sm\">XP Calculation</div>\n          </NavLink>\n        )}\n\n        <NavLink\n          to={`/courses/${props.courseId}/grading`}\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        >\n          <Icon icon={IconNames.ENDORSED} />\n          <div className=\"navbar-button-text hidden-xs hidden-sm hidden-md\">Grading</div>\n          <NotificationBadgeContainer\n            notificationFilter={filterNotificationsByType('Grading')}\n            disableHover={true}\n          />\n        </NavLink>\n\n        <NavLink\n          to={`/courses/${props.courseId}/storysimulator`}\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        >\n          <Icon icon={IconNames.CROWN} />\n          <div className=\"navbar-button-text hidden-xs hidden-sm hidden-md\">Story Simulator</div>\n        </NavLink>\n\n        {props.role === Role.Admin && (\n          <NavLink\n            to={`/courses/${props.courseId}/adminpanel`}\n            activeClassName={Classes.ACTIVE}\n            className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n          >\n            <Icon icon={IconNames.SETTINGS} />\n            <div className=\"navbar-button-text hidden-xs hidden-sm hidden-md hidden-lg\">\n              Admin Panel\n            </div>\n          </NavLink>\n        )}\n      </NavbarGroup>\n    ) : null}\n  </Navbar>\n);\n\nexport const icons: IconName[] = [\n  IconNames.FLAME,\n  IconNames.LIGHTBULB,\n  IconNames.PREDICTIVE_ANALYSIS,\n  IconNames.COMPARISON,\n  IconNames.MANUAL,\n  IconNames.GRAPH,\n  IconNames.LAB_TEST,\n  IconNames.CALCULATOR\n];\n\nexport default AcademyNavigationBar;\n","import { Classes, Drawer, Icon } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Role } from 'src/commons/application/ApplicationTypes';\nimport Constants from 'src/commons/utils/Constants';\nimport { assessmentTypeLink } from 'src/commons/utils/ParamParseHelper';\n\nimport { AssessmentType } from '../../assessment/AssessmentTypes';\nimport NotificationBadgeContainer from '../../notificationBadge/NotificationBadgeContainer';\nimport { filterNotificationsByType } from '../../notificationBadge/NotificationBadgeHelper';\nimport { icons } from './AcademyNavigationBar';\n\ntype NavigationBarMobileSideMenuProps = DrawerProps & OwnProps;\n\ntype DrawerProps = {\n  name?: string;\n  role?: Role;\n  isOpen: boolean;\n  onClose: () => void;\n  handleGitHubLogIn: () => void;\n  handleGitHubLogOut: () => void;\n};\n\ntype OwnProps = {\n  enableAchievements?: boolean;\n  enableSourcecast?: boolean;\n  assessmentTypes?: AssessmentType[];\n  courseId?: number;\n};\n\nconst NavigationBarMobileSideMenu: React.FC<NavigationBarMobileSideMenuProps> = props => (\n  <Drawer\n    isOpen={props.isOpen}\n    position=\"left\"\n    onClose={props.onClose}\n    title=\"\"\n    className={Classes.DARK}\n  >\n    {props.role ? (\n      props.assessmentTypes?.map((assessmentType, idx) => (\n        <NavLink\n          to={`/courses/${props.courseId}/${assessmentTypeLink(assessmentType)}`}\n          activeClassName={Classes.ACTIVE}\n          className={classNames(\n            'NavigationBar__link__mobile',\n            Classes.BUTTON,\n            Classes.MINIMAL,\n            Classes.LARGE\n          )}\n          onClick={props.onClose}\n          key={idx}\n        >\n          <Icon icon={icons[idx]} />\n          <div>{assessmentType}</div>\n          <NotificationBadgeContainer\n            notificationFilter={filterNotificationsByType(assessmentType)}\n            disableHover={true}\n          />\n        </NavLink>\n      ))\n    ) : (\n      <></>\n    )}\n\n    {props.role && props.enableSourcecast && (\n      <NavLink\n        activeClassName={Classes.ACTIVE}\n        className={classNames(\n          'NavigationBar__link__mobile',\n          Classes.BUTTON,\n          Classes.MINIMAL,\n          Classes.LARGE\n        )}\n        to={`/courses/${props.courseId}/sourcecast`}\n        onClick={props.onClose}\n      >\n        <Icon icon={IconNames.MUSIC} />\n        <div>Sourcecast</div>\n      </NavLink>\n    )}\n\n    {props.role && (\n      <NavLink\n        activeClassName={Classes.ACTIVE}\n        className={classNames(\n          'NavigationBar__link__mobile',\n          Classes.BUTTON,\n          Classes.MINIMAL,\n          Classes.LARGE\n        )}\n        to=\"/playground\"\n        onClick={props.onClose}\n      >\n        <Icon icon={IconNames.CODE} />\n        <div>Playground</div>\n      </NavLink>\n    )}\n\n    {Constants.enableGitHubAssessments && (\n      <NavLink\n        activeClassName={Classes.ACTIVE}\n        className={classNames(\n          'NavigationBar__link_mobile',\n          Classes.BUTTON,\n          Classes.MINIMAL,\n          Classes.LARGE\n        )}\n        to=\"/githubassessments\"\n        onClick={props.onClose}\n      >\n        <Icon icon={IconNames.BRIEFCASE} />\n        <div className=\"navbar-button-text\">Classroom</div>\n      </NavLink>\n    )}\n    {props.name && (\n      <NavLink\n        activeClassName={Classes.ACTIVE}\n        className={classNames(\n          'NavigationBar__link_mobile',\n          Classes.BUTTON,\n          Classes.MINIMAL,\n          Classes.LARGE\n        )}\n        to={`/sicpjs/`}\n        onClick={props.onClose}\n      >\n        <Icon icon={IconNames.BOOK} />\n        <div className=\"navbar-button-text\">SICP JS</div>\n      </NavLink>\n    )}\n    {props.role && props.enableAchievements && (\n      <NavLink\n        activeClassName={Classes.ACTIVE}\n        className={classNames(\n          'NavigationBar__link__mobile',\n          Classes.BUTTON,\n          Classes.MINIMAL,\n          Classes.LARGE\n        )}\n        to={`/courses/${props.courseId}/achievements`}\n        onClick={props.onClose}\n      >\n        <Icon icon={IconNames.MOUNTAIN} />\n        <div>Achievements</div>\n      </NavLink>\n    )}\n  </Drawer>\n);\n\nexport default NavigationBarMobileSideMenu;\n","import {\n  Alignment,\n  Button,\n  Classes,\n  Drawer,\n  FocusStyleManager,\n  Icon,\n  Navbar,\n  NavbarDivider,\n  NavbarGroup,\n  NavbarHeading,\n  Position\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport classNames from 'classnames';\nimport { Location } from 'history';\nimport * as React from 'react';\nimport { match, NavLink, Route, Switch, useLocation } from 'react-router-dom';\n\nimport { Role } from '../application/ApplicationTypes';\nimport { UpdateCourseConfiguration, UserCourse } from '../application/types/SessionTypes';\nimport { AssessmentType } from '../assessment/AssessmentTypes';\nimport Dropdown from '../dropdown/Dropdown';\nimport NotificationBadgeContainer from '../notificationBadge/NotificationBadgeContainer';\nimport { filterNotificationsByType } from '../notificationBadge/NotificationBadgeHelper';\nimport Constants from '../utils/Constants';\nimport { useResponsive } from '../utils/Hooks';\nimport { assessmentTypeLink } from '../utils/ParamParseHelper';\nimport AcademyNavigationBar, { icons } from './subcomponents/AcademyNavigationBar';\nimport NavigationBarMobileSideMenu from './subcomponents/NavigationBarMobileSideMenu';\n\ntype NavigationBarProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleLogOut: () => void;\n  handleGitHubLogIn: () => void;\n  handleGitHubLogOut: () => void;\n  handleCreateCourse: (courseConfig: UpdateCourseConfiguration) => void;\n};\n\ntype StateProps = {\n  role?: Role;\n  name?: string;\n  courses: UserCourse[];\n  courseId?: number;\n  courseShortName?: string;\n  enableAchievements?: boolean;\n  enableSourcecast?: boolean;\n  assessmentTypes?: AssessmentType[];\n};\n\nconst matchSourcecastAchievement = /^\\/courses\\/\\d+\\/(sourcecast|achievements)/;\nconst matchExceptSourcecastAchievement = (match: match | null, location: Location) => {\n  if (!match) {\n    return false;\n  }\n\n  if (matchSourcecastAchievement.test(location.pathname)) {\n    return false;\n  }\n\n  return true;\n};\n\nconst NavigationBar: React.FC<NavigationBarProps> = props => {\n  const [mobileSideMenuOpen, setMobileSideMenuOpen] = React.useState(false);\n  const { isMobileBreakpoint } = useResponsive();\n  const location = useLocation();\n\n  FocusStyleManager.onlyShowFocusOnTabs();\n\n  // Handles both the desktop and mobile versions of the playground-only left navbar group\n  const playgroundOnlyNavbarLeft = Constants.enableGitHubAssessments ? (\n    isMobileBreakpoint ? (\n      <>\n        <NavbarGroup align={Alignment.LEFT}>\n          <Button\n            onClick={() => setMobileSideMenuOpen(!mobileSideMenuOpen)}\n            icon={IconNames.MENU}\n            large={true}\n            minimal={true}\n          />\n          <NavLink\n            className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n            to=\"/\"\n          >\n            <Icon icon={IconNames.SYMBOL_DIAMOND} />\n            <NavbarHeading style={{ paddingBottom: '0px' }}>Source Academy</NavbarHeading>\n          </NavLink>\n          <Drawer\n            isOpen={mobileSideMenuOpen}\n            position=\"left\"\n            onClose={() => setMobileSideMenuOpen(false)}\n            title=\"\"\n            className={Classes.DARK}\n          >\n            <NavLink\n              activeClassName={Classes.ACTIVE}\n              className={classNames(\n                'NavigationBar__link__mobile',\n                Classes.BUTTON,\n                Classes.MINIMAL,\n                Classes.LARGE\n              )}\n              to=\"/playground\"\n              onClick={() => setMobileSideMenuOpen(false)}\n            >\n              <Icon icon={IconNames.CODE} />\n              <div>Playground</div>\n            </NavLink>\n            <NavLink\n              activeClassName={Classes.ACTIVE}\n              className={classNames(\n                'NavigationBar__link__mobile',\n                Classes.BUTTON,\n                Classes.MINIMAL,\n                Classes.LARGE\n              )}\n              to=\"/githubassessments/missions\"\n              onClick={() => setMobileSideMenuOpen(false)}\n            >\n              <Icon icon={IconNames.BRIEFCASE} />\n              <div>Classroom</div>\n            </NavLink>\n          </Drawer>\n        </NavbarGroup>\n      </>\n    ) : (\n      <NavbarGroup align={Alignment.LEFT}>\n        <NavLink\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link__mobile', Classes.BUTTON, Classes.MINIMAL)}\n          to=\"/playground\"\n        >\n          <Icon icon={IconNames.CODE} />\n          <div>Playground</div>\n        </NavLink>\n        <NavLink\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link__mobile', Classes.BUTTON, Classes.MINIMAL)}\n          to=\"/githubassessments\"\n        >\n          <Icon icon={IconNames.BRIEFCASE} />\n          <div>Classroom</div>\n        </NavLink>\n      </NavbarGroup>\n    )\n  ) : (\n    <NavbarGroup align={Alignment.LEFT}>\n      <NavLink\n        activeClassName={Classes.ACTIVE}\n        className={classNames('NavigationBar__link__mobile', Classes.BUTTON, Classes.MINIMAL)}\n        to=\"/playground\"\n      >\n        <Icon icon={IconNames.CODE} />\n        <div>Playground</div>\n      </NavLink>\n    </NavbarGroup>\n  );\n\n  // Handles the Source Academy @ NUS left mobile navbar group\n  const mobileNavbarLeft = (\n    <NavbarGroup align={Alignment.LEFT}>\n      {(props.role || Constants.enableGitHubAssessments) && (\n        <Button\n          onClick={() => setMobileSideMenuOpen(!mobileSideMenuOpen)}\n          icon={IconNames.MENU}\n          large={true}\n          minimal={true}\n        />\n      )}\n\n      <NavLink\n        className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        activeClassName={Classes.ACTIVE}\n        to={props.courseId == null ? '/welcome' : `/courses/${props.courseId}`}\n      >\n        <Icon icon={IconNames.SYMBOL_DIAMOND} />\n        <NavbarHeading style={{ paddingBottom: '0px' }}>\n          {props.courseShortName || 'Source Academy @ NUS'}\n        </NavbarHeading>\n      </NavLink>\n\n      {(props.role || Constants.enableGitHubAssessments) && (\n        <NavigationBarMobileSideMenu\n          name={props.name}\n          role={props.role}\n          courseId={props.courseId}\n          enableAchievements={props.enableAchievements}\n          enableSourcecast={props.enableSourcecast}\n          assessmentTypes={props.assessmentTypes}\n          isOpen={mobileSideMenuOpen}\n          onClose={() => setMobileSideMenuOpen(false)}\n          handleGitHubLogIn={() => props.handleGitHubLogIn}\n          handleGitHubLogOut={() => props.handleGitHubLogOut}\n        />\n      )}\n    </NavbarGroup>\n  );\n\n  const desktopNavbarLeftPopoverContent = (\n    <Navbar>\n      <NavbarGroup>\n        {props.assessmentTypes?.map((assessmentType, idx) => (\n          <NavLink\n            to={`/courses/${props.courseId}/${assessmentTypeLink(assessmentType)}`}\n            activeClassName={Classes.ACTIVE}\n            className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n            key={assessmentType}\n          >\n            <Icon icon={icons[idx]} />\n            <div className=\"navbar-button-text\">{assessmentType}</div>\n            <NotificationBadgeContainer\n              notificationFilter={filterNotificationsByType(assessmentType)}\n              disableHover={true}\n            />\n          </NavLink>\n        ))}\n      </NavbarGroup>\n    </Navbar>\n  );\n\n  const desktopLogoButton = (\n    <NavLink\n      activeClassName={Classes.ACTIVE}\n      className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n      to={props.courseId == null ? '/welcome' : `/courses/${props.courseId}`}\n      isActive={matchExceptSourcecastAchievement}\n    >\n      <Icon icon={IconNames.SYMBOL_DIAMOND} />\n      <NavbarHeading style={{ paddingBottom: '0px' }}>\n        {props.courseShortName || 'Source Academy @ NUS'}\n      </NavbarHeading>\n    </NavLink>\n  );\n\n  const enableDesktopPopoverIn = [\n    '/playground',\n    '/contributors',\n    `/courses/${props.courseId}/sourcecast`,\n    `/courses/${props.courseId}/achievements`\n  ];\n  const enableDesktopPopover =\n    props.courseId != null && !!enableDesktopPopoverIn.find(x => location.pathname.startsWith(x));\n\n  // Handles the Source Academy @ NUS left desktop navbar group\n  const desktopNavbarLeft = (\n    <NavbarGroup align={Alignment.LEFT}>\n      {enableDesktopPopover ? (\n        <Popover2\n          position={Position.BOTTOM_RIGHT}\n          interactionKind=\"hover\"\n          content={desktopNavbarLeftPopoverContent}\n          popoverClassName={'desktop-navbar-popover'}\n        >\n          {desktopLogoButton}\n        </Popover2>\n      ) : (\n        desktopLogoButton\n      )}\n\n      {props.role && props.enableSourcecast && (\n        <NavLink\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n          to={`/courses/${props.courseId}/sourcecast`}\n        >\n          <Icon icon={IconNames.MUSIC} />\n          <div className=\"navbar-button-text\">Sourcecast</div>\n        </NavLink>\n      )}\n      {props.role && (\n        <NavLink\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n          to=\"/playground\"\n        >\n          <Icon icon={IconNames.CODE} />\n          <div className=\"navbar-button-text\">Playground</div>\n        </NavLink>\n      )}\n      {Constants.enableGitHubAssessments && (\n        <NavLink\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n          to=\"/githubassessments\"\n        >\n          <Icon icon={IconNames.BRIEFCASE} />\n          <div className=\"navbar-button-text\">Classroom</div>\n        </NavLink>\n      )}\n      {props.name}\n      {props.role && props.enableAchievements && (\n        <NavLink\n          activeClassName={Classes.ACTIVE}\n          className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n          to={`/courses/${props.courseId}/achievements`}\n        >\n          <Icon icon={IconNames.MOUNTAIN} />\n          <div className=\"navbar-button-text\">Achievements</div>\n        </NavLink>\n      )}\n    </NavbarGroup>\n  );\n\n  const commonNavbarRight = (\n    <NavbarGroup align={Alignment.RIGHT}>\n      <NavLink\n        activeClassName={Classes.ACTIVE}\n        className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n        to=\"/contributors\"\n      >\n        <Icon icon={IconNames.HEART} />\n      </NavLink>\n\n      <div className=\"visible-xs\">\n        <NavbarDivider className=\"thin-divider\" />\n      </div>\n      <div className=\"hidden-xs\">\n        <NavbarDivider className=\"default-divider\" />\n      </div>\n\n      <Dropdown\n        handleLogOut={props.handleLogOut}\n        handleCreateCourse={props.handleCreateCourse}\n        courses={props.courses}\n        courseId={props.courseId}\n        name={props.name}\n      />\n    </NavbarGroup>\n  );\n\n  return (\n    <>\n      <Navbar className={classNames('NavigationBar', 'primary-navbar', Classes.DARK)}>\n        {Constants.playgroundOnly\n          ? playgroundOnlyNavbarLeft\n          : isMobileBreakpoint\n          ? mobileNavbarLeft\n          : desktopNavbarLeft}\n        {commonNavbarRight}\n      </Navbar>\n\n      <Switch>\n        <Route path=\"/playground\" />\n        <Route path=\"/githubassessments\" />\n        <Route path=\"/contributors\" />\n        <Route path=\"/courses/:courseId/sourcecast\" />\n        <Route path=\"/courses/:courseId/achievements\" />\n        <Route>\n          {!Constants.playgroundOnly && props.role && !isMobileBreakpoint && (\n            <AcademyNavigationBar\n              role={props.role}\n              assessmentTypes={props.assessmentTypes}\n              courseId={props.courseId!}\n            />\n          )}\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default NavigationBar;\n","import { Button, Classes, Dialog, H4, Intent } from '@blueprintjs/core';\nimport moment from 'moment';\nimport * as React from 'react';\nimport { Redirect, Route, RouteComponentProps, Switch } from 'react-router';\n\nimport Academy from '../../pages/academy/Academy';\nimport Contributors from '../../pages/contributors/Contributors';\nimport Disabled from '../../pages/disabled/Disabled';\nimport GitHubClassroom from '../../pages/githubAssessments/GitHubClassroom';\nimport GitHubCallback from '../../pages/githubCallback/GitHubCallback';\nimport Login from '../../pages/login/Login';\nimport MissionControlContainer from '../../pages/missionControl/MissionControlContainer';\nimport NotFound from '../../pages/notFound/NotFound';\nimport Playground from '../../pages/playground/PlaygroundContainer';\nimport Welcome from '../../pages/welcome/Welcome';\nimport { AssessmentConfiguration } from '../assessment/AssessmentTypes';\nimport NavigationBar from '../navigationBar/NavigationBar';\nimport Constants from '../utils/Constants';\nimport { useLocalStorageState } from '../utils/Hooks';\nimport { defaultWorkspaceSettings, WorkspaceSettingsContext } from '../WorkspaceSettingsContext';\nimport { Role } from './ApplicationTypes';\nimport { UpdateCourseConfiguration, UserCourse } from './types/SessionTypes';\n\nexport type ApplicationProps = DispatchProps & StateProps & RouteComponentProps<{}>;\n\nexport type DispatchProps = {\n  handleLogOut: () => void;\n  handleGitHubLogIn: () => void;\n  handleGitHubLogOut: () => void;\n  fetchUserAndCourse: () => void;\n  handleCreateCourse: (courseConfig: UpdateCourseConfiguration) => void;\n  updateCourseResearchAgreement: (agreedToResearch: boolean) => void;\n};\n\nexport type StateProps = {\n  role?: Role;\n  name?: string;\n  courses: UserCourse[];\n  courseId?: number;\n  courseShortName?: string;\n  enableAchievements?: boolean;\n  enableSourcecast?: boolean;\n  assessmentConfigurations?: AssessmentConfiguration[];\n  agreedToResearch?: boolean | null;\n};\n\nconst loginPath = <Route path=\"/login\" component={Login} key=\"login\" />;\n\nconst Application: React.FC<ApplicationProps> = props => {\n  const intervalId = React.useRef<number | undefined>(undefined);\n  const [isDisabled, setIsDisabled] = React.useState(computeDisabledState());\n  const isMobile = /iPhone|iPad|Android/.test(navigator.userAgent);\n  const isPWA = window.matchMedia('(display-mode: standalone)').matches; // Checks if user is accessing from the PWA\n  const browserDimensions = React.useRef({ height: 0, width: 0 });\n\n  const [workspaceSettings, setWorkspaceSettings] = useLocalStorageState(\n    Constants.workspaceSettingsLocalStorageKey,\n    defaultWorkspaceSettings\n  );\n\n  const isLoggedIn = typeof props.name === 'string';\n  const isCourseLoaded = isLoggedIn && typeof props.role === 'string';\n\n  // Effect to fetch the latest user info and course configurations from the backend on refresh,\n  // if the user was previously logged in\n  React.useEffect(() => {\n    if (props.name) {\n      props.fetchUserAndCourse();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (Constants.disablePeriods.length > 0) {\n      intervalId.current = window.setInterval(() => {\n        const disabled = computeDisabledState();\n        if (isDisabled !== disabled) {\n          setIsDisabled(disabled);\n        }\n      }, 5000);\n    }\n\n    return () => {\n      if (intervalId.current) {\n        window.clearInterval(intervalId.current);\n      }\n    };\n  }, [isDisabled]);\n\n  /**\n   * The following effect prevents the mobile browser interface from hiding on scroll by setting the\n   * application height to the window's innerHeight, even after orientation changes. This ensures that\n   * the app UI does not break due to the hiding of the browser interface when the user is not on the PWA.\n   *\n   * Note: When the soft keyboard is up on Android devices, the viewport height decreases and triggers\n   * the 'resize' event. The conditional in orientationChangeHandler checks specifically for this, and\n   * does not update the application height when the Android keyboard triggers the resize event. IOS\n   * devices are not affected.\n   */\n  React.useEffect(() => {\n    const orientationChangeHandler = () => {\n      if (\n        !(\n          window.innerHeight < browserDimensions.current.height &&\n          window.innerWidth === browserDimensions.current.width\n        )\n      ) {\n        // If it is not an Android soft keyboard triggering the resize event, update the application height.\n        document.documentElement.style.setProperty(\n          '--application-height',\n          window.innerHeight + 'px'\n        );\n      }\n      browserDimensions.current = { height: window.innerHeight, width: window.innerWidth };\n    };\n\n    if (!isPWA && isMobile) {\n      orientationChangeHandler();\n      window.addEventListener('resize', orientationChangeHandler);\n    }\n\n    return () => {\n      if (!isPWA && isMobile) {\n        window.removeEventListener('resize', orientationChangeHandler);\n      }\n    };\n  }, [isPWA, isMobile]);\n\n  // Paths common to both deployments\n  const commonPaths = [\n    <Route path=\"/contributors\" component={Contributors} key=\"contributors\" />,\n    <Route path=\"/callback/github\" component={GitHubCallback} key=\"githubCallback\" />,\n    Constants.enableGitHubAssessments ? (\n      <Route\n        path=\"/githubassessments\"\n        render={() => (\n          <GitHubClassroom\n            handleGitHubLogIn={props.handleGitHubLogIn}\n            handleGitHubLogOut={props.handleGitHubLogOut}\n          />\n        )}\n        key=\"githubAssessments\"\n      />\n    ) : null\n  ];\n\n  const isDisabledEffective = !['staff', 'admin'].includes(props.role!) && isDisabled;\n\n  return (\n    <WorkspaceSettingsContext.Provider value={[workspaceSettings, setWorkspaceSettings]}>\n      <div className=\"Application\">\n        <NavigationBar\n          handleLogOut={props.handleLogOut}\n          handleGitHubLogIn={props.handleGitHubLogIn}\n          handleGitHubLogOut={props.handleGitHubLogOut}\n          handleCreateCourse={props.handleCreateCourse}\n          role={props.role}\n          name={props.name}\n          courses={props.courses}\n          courseId={props.courseId}\n          courseShortName={props.courseShortName}\n          enableAchievements={props.enableAchievements}\n          enableSourcecast={props.enableSourcecast}\n          assessmentTypes={React.useMemo(\n            () => props.assessmentConfigurations?.map(c => c.type),\n            [props.assessmentConfigurations]\n          )}\n        />\n        <div className=\"Application__main\">\n          {isDisabledEffective && (\n            <Switch>\n              {!Constants.playgroundOnly && loginPath}\n              {/* if not logged in, and we're not a playground-only deploy, then redirect to login (for staff) */}\n              {!isCourseLoaded && !Constants.playgroundOnly\n                ? [\n                    <Route path=\"/courses\" render={redirectToLogin} key={0} />,\n                    <Route exact={true} path=\"/\" render={redirectToLogin} key={1} />\n                  ]\n                : []}\n              <Route>\n                <Disabled reason={typeof isDisabled === 'string' ? isDisabled : undefined} />\n              </Route>\n            </Switch>\n          )}\n          {!isDisabledEffective && Constants.playgroundOnly && (\n            <Switch>\n              {commonPaths}\n              <Route path=\"/playground\" component={Playground} />\n              <Route exact={true} path=\"/\">\n                <Redirect to=\"/playground\" />\n              </Route>\n              <Route component={NotFound} />\n            </Switch>\n          )}\n          {!isDisabledEffective && !Constants.playgroundOnly && (\n            <Switch>\n              {loginPath}\n              {commonPaths}\n              <Route path={'/courses/:courseId(\\\\d+)?'} render={toAcademy(props)} />\n              <Route path=\"/welcome\" render={ensureUserAndRouteTo(props, <Welcome />)} />\n              <Route\n                path={'/mission-control/:assessmentId(-?\\\\d+)?/:questionId(\\\\d+)?'}\n                component={MissionControlContainer}\n              />\n              <Route\n                path=\"/playground\"\n                render={ensureUserAndRoleAndRouteTo(props, <Playground />)}\n              />\n\n              <Redirect\n                from=\"/\"\n                exact={true}\n                to={props.courseId != null ? `/courses/${props.courseId}` : '/welcome'}\n              />\n              {props.courseId != null && [\n                <Redirect\n                  from=\"/sourcecast/:splat?\"\n                  to={`/courses/${props.courseId}/sourcecast/:splat?`}\n                  key=\"legacy-sourcecast\"\n                />,\n                <Redirect\n                  from=\"/achievements/:splat?\"\n                  to={`/courses/${props.courseId}/achievements/:splat?`}\n                  key=\"legacy-achievements\"\n                />,\n                <Redirect\n                  from=\"/academy/:splat?\"\n                  to={`/courses/${props.courseId}/:splat?`}\n                  key=\"legacy-academy\"\n                />\n              ]}\n              <Route component={NotFound} />\n            </Switch>\n          )}\n        </div>\n\n        {/* agreedToResearch has a default value of undefined in the store.\n            It will take on null/true/false when the backend returns. */}\n        {Constants.showResearchPrompt && props.agreedToResearch === null && (\n          <div className=\"research-prompt\">\n            <Dialog\n              className={Classes.DARK}\n              title=\"Agreement to Participate in Educational Research\"\n              canOutsideClickClose={false}\n              canEscapeKeyClose={false}\n              isCloseButtonShown={false}\n              isOpen\n            >\n              <div className={Classes.DIALOG_BODY}>\n                <H4>Welcome to your new Source Academy @ NUS course!</H4>\n                <div>\n                  Here at Source Academy @ NUS, our mission is to bring out the beauty and fun in\n                  programming and the ideas behind programming, and to make these ideas universally\n                  accessible. This includes educational research!\n                </div>\n                <br />\n                <div>\n                  We collect programs that students run in Source Academy @ NUS and store them\n                  anonymously for our research. You are free to opt out of this collection, with no\n                  penalty for you whatsoever. Contact your course instructor if you have questions\n                  or concerns about this research.\n                </div>\n              </div>\n              <div className={Classes.DIALOG_FOOTER}>\n                <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                  <Button\n                    text=\"I would like to opt out\"\n                    onClick={() => props.updateCourseResearchAgreement(false)}\n                  />\n                  <Button\n                    text=\"I consent!\"\n                    intent={Intent.SUCCESS}\n                    onClick={() => props.updateCourseResearchAgreement(true)}\n                  />\n                </div>\n              </div>\n            </Dialog>\n          </div>\n        )}\n      </div>\n    </WorkspaceSettingsContext.Provider>\n  );\n};\n\nconst redirectToLogin = () => <Redirect to=\"/login\" />;\nconst redirectToWelcome = () => <Redirect to=\"/welcome\" />;\n\n/**\n * A user routes to /academy,\n *  1. If the user is logged in, render the Academy component\n *  2. If the user is not logged in, redirect to /login\n */\nconst toAcademy = ({ name, role }: ApplicationProps) =>\n  name === undefined ? redirectToLogin : role === undefined ? redirectToWelcome : () => <Academy />;\n\n/**\n * Routes a user to the specified route,\n *  1. If the user is logged in, render the specified component\n *  2. If the user is not logged in, redirect to /login\n */\nconst ensureUserAndRouteTo = ({ name }: ApplicationProps, to: JSX.Element) =>\n  name === undefined ? redirectToLogin : () => to;\n\n/**\n * Routes a user to the specified route,\n *  1. If the user is logged in and has a latest viewed course, render the\n *     specified component\n *  2. If the user is not logged in, redirect to /login\n *  3. If the user is logged in, but does not have a course, redirect to /welcome\n */\nconst ensureUserAndRoleAndRouteTo = ({ name, role }: ApplicationProps, to: JSX.Element) =>\n  name === undefined ? redirectToLogin : role === undefined ? redirectToWelcome : () => to;\n\nfunction computeDisabledState() {\n  const now = moment();\n  for (const { start, end, reason } of Constants.disablePeriods) {\n    if (start.isBefore(now) && end.isAfter(now)) {\n      return reason || true;\n    }\n  }\n  return false;\n}\n\nexport default Application;\n","import { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { createCourse } from 'src/features/academy/AcademyActions';\n\nimport { logOut } from './actions/CommonsActions';\nimport {\n  fetchUserAndCourse,\n  loginGitHub,\n  logoutGitHub,\n  updateCourseResearchAgreement\n} from './actions/SessionActions';\nimport Application, { DispatchProps, StateProps } from './Application';\nimport { OverallState } from './ApplicationTypes';\n\n/**\n * Provides the title of the application for display.\n * An object with the relevant properties must be\n * returned instead of an object of type @type {IApplicationProps},\n * as the routing properties of @type {RouteComponentProps} are\n * provided using the withRouter() method below.\n */\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => ({\n  role: state.session.role,\n  name: state.session.name,\n  courses: state.session.courses,\n  courseId: state.session.courseId,\n  courseShortName: state.session.courseShortName,\n  enableAchievements: state.session.enableAchievements,\n  enableSourcecast: state.session.enableSourcecast,\n  assessmentConfigurations: state.session.assessmentConfigurations,\n  agreedToResearch: state.session.agreedToResearch\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleLogOut: logOut,\n      handleGitHubLogIn: loginGitHub,\n      handleGitHubLogOut: logoutGitHub,\n      fetchUserAndCourse: fetchUserAndCourse,\n      handleCreateCourse: createCourse,\n      updateCourseResearchAgreement: updateCourseResearchAgreement\n    },\n    dispatch\n  );\n\nconst ApplicationContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(Application));\n\nexport default ApplicationContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL || '', window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL || ''}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      // Check for updates every 5 minutes\n      setInterval(() => {\n        try {\n          registration.update();\n        } catch {}\n      }, 300_000);\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { BFSRequire, configure } from 'browserfs';\nimport { ApiError } from 'browserfs/dist/node/core/api_error';\nimport { FSModule } from 'browserfs/dist/node/core/FS';\nimport React, { createContext, ReactNode, useState } from 'react';\n\nexport const FileSystemContext = createContext<FSModule | undefined>(undefined);\n\ntype FileSystemProviderProps = {\n  children: ReactNode;\n};\n\nconst FileSystemProvider: React.FC<FileSystemProviderProps> = ({ children }) => {\n  const [fileSystem, setFileSystem] = useState<FSModule>();\n\n  configure(\n    {\n      fs: 'MountableFileSystem',\n      options: {\n        '/playground': {\n          fs: 'IndexedDB',\n          options: {\n            storeName: 'playground'\n          }\n        }\n      }\n    },\n    (err: ApiError | null | undefined) => {\n      if (err) {\n        console.error(err);\n      }\n      setFileSystem(BFSRequire('fs'));\n    }\n  );\n\n  return <FileSystemContext.Provider value={fileSystem}>{children}</FileSystemContext.Provider>;\n};\n\nexport default FileSystemProvider;\n","import 'src/styles/index.scss';\n\nimport * as Sentry from '@sentry/browser';\n// import { setModulesStaticURL } from 'Clang-slang/dist/modules/moduleLoader';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport ApplicationContainer from 'src/commons/application/ApplicationContainer';\nimport Constants, { Links } from 'src/commons/utils/Constants';\nimport { history } from 'src/commons/utils/HistoryHelper';\nimport { showWarningMessage } from 'src/commons/utils/NotificationsHelper';\nimport { register as registerServiceWorker } from 'src/commons/utils/RegisterServiceWorker';\nimport { triggerSyncLogs } from 'src/features/eventLogging/client';\nimport { store } from 'src/pages/createStore';\n\nimport FileSystemProvider from './pages/fileSystem/FileSystemProvider';\n\nif (Constants.sentryDsn) {\n  Sentry.init({\n    dsn: Constants.sentryDsn,\n    environment: Constants.sourceAcademyEnvironment,\n    release: `cadet-frontend@${Constants.sourceAcademyVersion}`\n  });\n  const userId = store.getState().session.userId;\n  Sentry.setUser(typeof userId !== 'undefined' ? { id: userId.toString() } : null);\n}\n\nconst rootContainer = document.getElementById('root') as HTMLElement;\n(window as any).__REDUX_STORE__ = store; // need this for slang's display\nconsole.log(\n  `%cSource Academy ${Constants.sourceAcademyEnvironment}-${Constants.sourceAcademyVersion}; ` +\n    `Please visit ${Links.githubIssues} to report bugs or issues.`,\n  'font-weight: bold;'\n);\n\n// setModulesStaticURL(Constants.moduleBackendUrl);\n// console.log(`Using module backend: ${Constants.moduleBackendUrl}`);\n\nrender(\n  <Provider store={store}>\n    <FileSystemProvider>\n      <Router history={history}>\n        <ApplicationContainer />\n      </Router>\n    </FileSystemProvider>\n  </Provider>,\n  rootContainer\n);\n\nregisterServiceWorker({\n  onUpdate: () => {\n    showWarningMessage(\n      'A new version of Source Academy is available. Please refresh the browser.',\n      0\n    );\n  }\n});\n\nif (Constants.cadetLoggerUrl) {\n  // Seriously: registerServiceWorker onSuccess and onUpdate are separate paths.\n  // Neither of them actually fire in localhost...\n  const sync = () => triggerSyncLogs(store.getState().session.accessToken);\n  navigator.serviceWorker.ready.then(() => {\n    setInterval(sync, Constants.cadetLoggerInterval);\n  });\n}\n","export const SYNC_LOGS = 'SYNC_LOGS';\n\nexport function triggerSyncLogs(accessToken?: string) {\n  if (!accessToken) {\n    return;\n  }\n  navigator.serviceWorker.controller?.postMessage({ type: SYNC_LOGS, accessToken });\n}\n","import { WorkspaceState } from '../../../commons/workspace/WorkspaceTypes';\nimport {\n  CodeDelta,\n  Input,\n  PlaybackData,\n  PlaybackStatus,\n  SourcecastData\n} from '../SourceRecorderTypes';\n\nexport const FETCH_SOURCECAST_INDEX = 'FETCH_SOURCECAST_INDEX';\nexport const SET_IS_EDITOR_READONLY = 'SET_IS_EDITOR_READONLY';\nexport const UPDATE_SOURCECAST_INDEX = 'UPDATE_SOURCECAST_INDEX';\n\ntype SourcecastWorkspaceAttr = {\n  readonly audioUrl: string;\n  readonly codeDeltasToApply: CodeDelta[] | null;\n  readonly currentPlayerTime: number;\n  readonly description: string | null;\n  readonly inputToApply: Input | null;\n  readonly playbackData: PlaybackData;\n  readonly playbackDuration: number;\n  readonly playbackStatus: PlaybackStatus;\n  readonly sourcecastIndex: SourcecastData[] | null;\n  readonly title: string | null;\n  readonly uid: string | null;\n};\nexport type SourcecastWorkspaceState = SourcecastWorkspaceAttr & WorkspaceState;\n","export const LOG_OUT = 'LOG_OUT';\n","import { Position } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\n\ntype ControlButtonRunButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleEditorEval: () => void;\n};\n\ntype StateProps = {\n  key: string;\n  color?: string;\n  className?: string;\n};\n\nexport const ControlBarRunButton: React.FC<ControlButtonRunButtonProps> = props => {\n  return (\n    <Tooltip2 content=\"...or press shift-enter in the editor\" placement={Position.TOP}>\n      <ControlButton\n        label=\"Run\"\n        icon={IconNames.PLAY}\n        onClick={props.handleEditorEval}\n        options={{ iconColor: props.color, className: props.className }}\n      />\n    </Tooltip2>\n  );\n};\n","import { Octokit } from '@octokit/rest';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\n\nimport { Grading, GradingOverview } from '../../../features/grading/GradingTypes';\nimport { Device, DeviceSession } from '../../../features/remoteExecution/RemoteExecutionTypes';\nimport {\n  Assessment,\n  AssessmentConfiguration,\n  AssessmentOverview\n} from '../../assessment/AssessmentTypes';\nimport { MissionRepoData } from '../../githubAssessments/GitHubMissionTypes';\nimport { Notification } from '../../notificationBadge/NotificationBadgeTypes';\nimport { GameState, Role, Story } from '../ApplicationTypes';\n\nexport const FETCH_AUTH = 'FETCH_AUTH';\nexport const FETCH_USER_AND_COURSE = 'FETCH_USER_AND_COURSE';\nexport const FETCH_COURSE_CONFIG = 'FETCH_COURSE_CONFIG';\nexport const FETCH_ASSESSMENT = 'FETCH_ASSESSMENT';\nexport const FETCH_ASSESSMENT_ADMIN = 'FETCH_ASSESSMENT_ADMIN';\nexport const FETCH_ASSESSMENT_OVERVIEWS = 'FETCH_ASSESSMENT_OVERVIEWS';\nexport const FETCH_ALL_USER_XP = 'FETCH_ALL_USER_XP';\nexport const FETCH_TOTAL_XP = 'FETCH_TOTAL_XP';\nexport const FETCH_TOTAL_XP_ADMIN = 'FETCH_TOTAL_XP_ADMIN';\nexport const FETCH_GRADING = 'FETCH_GRADING';\nexport const FETCH_GRADING_OVERVIEWS = 'FETCH_GRADING_OVERVIEWS';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT_GOOGLE = 'LOGOUT_GOOGLE';\nexport const LOGIN_GITHUB = 'LOGIN_GITHUB';\nexport const LOGOUT_GITHUB = 'LOGOUT_GITHUB';\nexport const SET_TOKENS = 'SET_TOKENS';\nexport const SET_USER = 'SET_USER';\nexport const SET_COURSE_CONFIGURATION = 'SET_COURSE_CONFIGURATION';\nexport const SET_COURSE_REGISTRATION = 'SET_COURSE_REGISTRATION';\nexport const SET_ASSESSMENT_CONFIGURATIONS = 'SET_ASSESSMENT_CONFIGURATIONS';\nexport const SET_ADMIN_PANEL_COURSE_REGISTRATIONS = 'SET_ADMIN_PANEL_COURSE_REGISTRATIONS';\nexport const SET_GOOGLE_USER = 'SET_GOOGLE_USER';\nexport const SET_GITHUB_ASSESSMENT = 'SET_GITHUB_ASSESSMENT';\nexport const SET_GITHUB_OCTOKIT_OBJECT = 'SET_GITHUB_OCTOKIT_OBJECT';\nexport const SET_GITHUB_ACCESS_TOKEN = 'SET_GITHUB_ACCESS_TOKEN';\nexport const SUBMIT_ANSWER = 'SUBMIT_ANSWER';\nexport const SUBMIT_ASSESSMENT = 'SUBMIT_ASSESSMENT';\nexport const SUBMIT_GRADING = 'SUBMIT_GRADING';\nexport const SUBMIT_GRADING_AND_CONTINUE = 'SUBMIT_GRADING_AND_CONTINUE';\nexport const REAUTOGRADE_SUBMISSION = 'REAUTOGRADE_SUBMISSION';\nexport const REAUTOGRADE_ANSWER = 'REAUTOGRADE_ANSWER';\nexport const REMOVE_GITHUB_OCTOKIT_OBJECT_AND_ACCESS_TOKEN =\n  'REMOVE_GITHUB_OCTOKIT_OBJECT_AND_ACCESS_TOKEN';\nexport const UNSUBMIT_SUBMISSION = 'UNSUBMIT_SUBMISSION';\nexport const UPDATE_ASSESSMENT_OVERVIEWS = 'UPDATE_ASSESSMENT_OVERVIEWS';\nexport const UPDATE_TOTAL_XP = 'UPDATE_TOTAL_XP';\nexport const UPDATE_ALL_USER_XP = 'UPDATE_ALL_USER_XP';\nexport const UPDATE_ASSESSMENT = 'UPDATE_ASSESSMENT';\nexport const UPDATE_GRADING_OVERVIEWS = 'UPDATE_GRADING_OVERVIEWS';\nexport const UPDATE_GRADING = 'UPDATE_GRADING';\nexport const FETCH_NOTIFICATIONS = 'FETCH_NOTIFICATIONS';\nexport const ACKNOWLEDGE_NOTIFICATIONS = 'ACKNOWLEDGE_NOTIFICATIONS';\nexport const UPDATE_NOTIFICATIONS = 'UPDATE_NOTIFICATIONS';\nexport const UPDATE_LATEST_VIEWED_COURSE = 'UPDATE_LATEST_VIEWED_COURSE';\nexport const UPDATE_COURSE_CONFIG = 'UPDATE_COURSE_CONFIG';\nexport const FETCH_ASSESSMENT_CONFIGS = 'FETCH_ASSESSMENT_CONFIGS';\nexport const UPDATE_ASSESSMENT_CONFIGS = 'UPDATE_ASSESSMENT_CONFIGS';\nexport const DELETE_ASSESSMENT_CONFIG = 'DELETE_ASSESSMENT_CONFIG';\nexport const FETCH_ADMIN_PANEL_COURSE_REGISTRATIONS = 'FETCH_ADMIN_PANEL_COURSE_REGISTRATIONS';\nexport const UPDATE_USER_ROLE = 'UPDATE_USER_ROLE';\nexport const UPDATE_COURSE_RESEARCH_AGREEMENT = 'UPDATE_COURSE_RESEARCH_AGREEMENT';\nexport const DELETE_USER_COURSE_REGISTRATION = 'DELETE_USER_COURSE_REGISTRATION';\n\nexport const UPLOAD_KEYSTROKE_LOGS = 'UPLOAD_KEYSTROKE_LOGS';\nexport const UPLOAD_UNSENT_LOGS = 'UPLOAD_UNSENT_LOGS';\n\nexport type SessionState = {\n  // Tokens\n  readonly accessToken?: string;\n  readonly refreshToken?: string;\n\n  // User\n  readonly userId?: number;\n  readonly name?: string;\n  readonly courses: UserCourse[];\n\n  // Course Registration\n  readonly courseRegId?: number;\n  readonly role?: Role;\n  readonly group: string | null;\n  readonly gameState: GameState;\n  readonly courseId?: number;\n  readonly xp: number;\n  readonly allUserXp: string[][] | undefined;\n  readonly story: Story;\n\n  // Course Configuration\n  readonly courseName?: string;\n  readonly courseShortName?: string;\n  readonly viewable?: boolean;\n  readonly enableGame?: boolean;\n  readonly enableAchievements?: boolean;\n  readonly enableSourcecast?: boolean;\n  readonly sourceChapter?: number;\n  readonly sourceVariant?: Variant;\n  readonly moduleHelpText?: string;\n  readonly assetsPrefix?: string;\n\n  readonly assessmentConfigurations?: AssessmentConfiguration[];\n  readonly userCourseRegistrations?: AdminPanelCourseRegistration[];\n\n  // For research data collection\n  readonly agreedToResearch?: boolean | null;\n  readonly sessionId: number;\n\n  readonly assessmentOverviews?: AssessmentOverview[];\n  readonly assessments: Map<number, Assessment>;\n  readonly gradingOverviews?: GradingOverview[];\n  readonly gradings: Map<number, Grading>;\n  readonly notifications: Notification[];\n  readonly googleUser?: string;\n  readonly githubAssessment?: MissionRepoData;\n  readonly githubOctokitObject: { octokit: Octokit | undefined };\n  readonly githubAccessToken?: string;\n  readonly remoteExecutionDevices?: Device[];\n  readonly remoteExecutionSession?: DeviceSession;\n};\n\nexport type Tokens = {\n  accessToken: string;\n  refreshToken: string;\n};\n\nexport type UserCourse = {\n  courseId: number;\n  courseName: string;\n  courseShortName: string;\n  role: Role;\n  viewable: boolean;\n};\n\nexport type User = {\n  userId: number;\n  name: string;\n  courses: UserCourse[];\n};\n\nexport type CourseRegistration = {\n  courseRegId: number;\n  role: Role;\n  group: string | null;\n  gameState?: GameState;\n  courseId: number;\n  xp: number;\n  story?: Story;\n  agreedToResearch: boolean | null;\n};\n\nexport type CourseConfiguration = {\n  courseName: string;\n  courseShortName: string;\n  viewable: boolean;\n  enableGame: boolean;\n  enableAchievements: boolean;\n  enableSourcecast: boolean;\n  sourceChapter: Chapter;\n  sourceVariant: Variant;\n  moduleHelpText: string;\n  assetsPrefix: string;\n};\n\nexport type AdminPanelCourseRegistration = {\n  courseRegId: number;\n  courseId: number;\n  name?: string;\n  username: string;\n  role: Role;\n  group?: string;\n};\n\nexport type UpdateCourseConfiguration = Partial<CourseConfiguration>;\n","import React from 'react';\n\nexport enum EditorBinding {\n  NONE = '',\n  VIM = 'vim',\n  EMACS = 'emacs'\n}\n\nexport type WorkspaceSettings = {\n  editorBinding: EditorBinding;\n};\n\nexport const defaultWorkspaceSettings: WorkspaceSettings = {\n  editorBinding: EditorBinding.NONE\n};\n\n/**\n * The WorkspaceSettingsContext stores the local storage-based application settings.\n *\n * The local storage state is initialized in Application.tsx via the useLocalStorageState hook.\n */\nexport const WorkspaceSettingsContext = React.createContext<\n  [WorkspaceSettings, React.Dispatch<React.SetStateAction<WorkspaceSettings>>] | null\n>(null);\n","export const CHANGE_DATE_ASSESSMENT = 'CHANGE_DATE_ASSESSMENT';\nexport const DELETE_ASSESSMENT = 'DELETE_ASSESSMENT';\nexport const PUBLISH_ASSESSMENT = 'PUBLISH_ASSESSMENT';\nexport const UPLOAD_ASSESSMENT = 'UPLOAD_ASSESSMENT';\n","export const PERSISTENCE_OPEN_PICKER = 'PERSISTENCE_OPEN_PICKER';\nexport const PERSISTENCE_SAVE_FILE_AS = 'PERSISTENCE_SAVE_FILE_AS';\nexport const PERSISTENCE_SAVE_FILE = 'PERSISTENCE_SAVE_FILE';\nexport const PERSISTENCE_INITIALISE = 'PERSISTENCE_INITIALISE';\n\nexport type PersistenceState = 'INACTIVE' | 'SAVED' | 'DIRTY';\n\nexport type PersistenceFile = {\n  id: string;\n  name: string;\n  lastSaved?: Date;\n};\n","import { Octokit } from '@octokit/rest';\nimport {\n  GetResponseDataTypeFromEndpointMethod,\n  GetResponseTypeFromEndpointMethod\n} from '@octokit/types';\nimport { Chapter } from 'Clang-slang/dist/types';\nimport { isEqual } from 'lodash';\n\nimport { IMCQQuestion, Testcase } from '../assessment/AssessmentTypes';\nimport { showWarningMessage } from '../utils/NotificationsHelper';\nimport { MissionData, MissionMetadata, MissionRepoData, TaskData } from './GitHubMissionTypes';\n\nexport const maximumTasksPerMission = 20;\n\nconst jsonStringify = (object: any) => JSON.stringify(object, null, 4);\nconst convertTestsToSaveableJson = (tests: Testcase[]) => {\n  const saveableTests = tests.map((test: Testcase) => {\n    return {\n      answer: test.answer,\n      program: test.program,\n      score: test.score ? test.score : 0,\n      type: test.type ? test.type : 'public'\n    };\n  });\n  return jsonStringify(saveableTests);\n};\nconst identity = (content: any) => content;\n\n// 1) fileName: the name of the file corresponding to the named property\n// 2) isDefaultValue: function should return true if the input value is the default value of the property\n// 3) fromStringConverter: a function to be applied to raw text data to convert it into the property\n// 4) toStringConverter: a function to be applied to the property to convert it to raw text data\nconst taskDataPropertyTable = {\n  taskDescription: {\n    fileName: 'Problem.md',\n    isDefaultValue: (value: string) => value === '',\n    fromStringConverter: identity,\n    toStringConverter: identity\n  },\n  starterCode: {\n    fileName: 'StarterCode.js',\n    isDefaultValue: (value: string) => value === '',\n    fromStringConverter: identity,\n    toStringConverter: identity\n  },\n  savedCode: {\n    fileName: 'SavedCode.js',\n    isDefaultValue: (value: string) => value === '',\n    fromStringConverter: identity,\n    toStringConverter: identity\n  },\n  testPrepend: {\n    fileName: 'TestPrepend.js',\n    isDefaultValue: (value: string) => value === '',\n    fromStringConverter: identity,\n    toStringConverter: identity\n  },\n  testPostpend: {\n    fileName: 'TestPostpend.js',\n    isDefaultValue: (value: string) => value === '',\n    fromStringConverter: identity,\n    toStringConverter: identity\n  },\n  testCases: {\n    fileName: 'TestCases.json',\n    isDefaultValue: (value: Testcase[]) => value.length === 0,\n    fromStringConverter: JSON.parse,\n    toStringConverter: convertTestsToSaveableJson\n  }\n};\n\n/**\n * Retrieves mission information - such as the briefings, questions, metadata etc. from a GitHub Repository.\n *\n * @param missionRepoData Repository information where the mission is stored\n * @param octokit The Octokit instance for the authenticated user\n */\nexport async function getMissionData(missionRepoData: MissionRepoData, octokit: Octokit) {\n  const briefingStringPromise = getContentAsString(\n    missionRepoData.repoOwner,\n    missionRepoData.repoName,\n    'README.md',\n    octokit\n  );\n\n  const metadataStringPromise = getContentAsString(\n    missionRepoData.repoOwner,\n    missionRepoData.repoName,\n    '.metadata',\n    octokit\n  );\n\n  const tasksDataPromise = getTasksData(\n    missionRepoData.repoOwner,\n    missionRepoData.repoName,\n    octokit\n  );\n\n  const [briefingString, metadataString, tasksData] = await Promise.all([\n    briefingStringPromise,\n    metadataStringPromise,\n    tasksDataPromise\n  ]);\n  const missionMetadata = convertMetadataStringToMissionMetadata(metadataString);\n\n  const newMissionData: MissionData = {\n    missionRepoData: missionRepoData,\n    missionBriefing: briefingString,\n    missionMetadata: missionMetadata,\n    tasksData: tasksData\n  };\n\n  return newMissionData;\n}\n\n/**\n * Retrieves information regarding each task in the Mission from the GitHub repository.\n *\n * @param repoOwner The owner of the mission repository\n * @param repoName The name of the mission repository\n * @param octokit The Octokit instance for the authenticated user\n */\nasync function getTasksData(repoOwner: string, repoName: string, octokit: Octokit) {\n  const questions: TaskData[] = [];\n\n  if (octokit === undefined) {\n    return questions;\n  }\n\n  // Get files in root\n  type GetContentResponse = GetResponseTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n  const rootFolderContents: GetContentResponse = await octokit.repos.getContent({\n    owner: repoOwner,\n    repo: repoName,\n    path: ''\n  });\n\n  type GetContentData = GetResponseDataTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n  const files: GetContentData = rootFolderContents.data;\n\n  if (!Array.isArray(files)) {\n    return questions;\n  }\n\n  const promises = [];\n\n  for (let i = 1; i <= maximumTasksPerMission; i++) {\n    const questionFolderName = 'Q' + i;\n\n    // We make the assumption that there are no gaps in question numbering\n    // If the question does not exist, we may break\n    if (files.find(file => file.name === questionFolderName) === undefined) {\n      break;\n    }\n\n    promises.push(\n      octokit.repos\n        .getContent({\n          owner: repoOwner,\n          repo: repoName,\n          path: questionFolderName\n        })\n        .then((folderContents: GetContentResponse) => {\n          if (!Array.isArray(folderContents.data)) {\n            return;\n          }\n\n          const folderContentsAsArray = folderContents.data as any[];\n          const folderContentFileNames = folderContentsAsArray.map(\n            (file: any) => file.name as string\n          );\n\n          const properties = Object.keys(taskDataPropertyTable);\n\n          const filteredProperties = properties.filter((property: string) =>\n            folderContentFileNames.includes(taskDataPropertyTable[property].fileName)\n          );\n\n          const promises = filteredProperties.map(async (property: string) => {\n            const fileName = taskDataPropertyTable[property].fileName;\n\n            const stringContent = await getContentAsString(\n              repoOwner,\n              repoName,\n              questionFolderName + '/' + fileName,\n              octokit\n            );\n\n            return taskDataPropertyTable[property].fromStringConverter(stringContent);\n          });\n\n          return Promise.all(promises).then((stringContents: string[]) => {\n            const taskData: TaskData = {\n              questionNumber: i,\n              taskDescription: '',\n              starterCode: '',\n              savedCode: '',\n              testPrepend: '',\n              testPostpend: '',\n              testCases: []\n            };\n\n            for (let i = 0; i < stringContents.length; i++) {\n              taskData[filteredProperties[i]] = stringContents[i];\n            }\n\n            if (taskData.savedCode === '') {\n              taskData.savedCode = taskData.starterCode;\n            }\n\n            questions.push(taskData);\n          });\n        })\n        .catch(err => {\n          showWarningMessage('Error occurred while trying to retrieve file content', 1000);\n          console.error(err);\n        })\n    );\n  }\n  await Promise.all(promises);\n  questions.sort((a, b) => a.questionNumber - b.questionNumber);\n\n  return questions;\n}\n\n/**\n * Retrieves content from a single file on GitHub and returns it in string form.\n *\n * @param repoOwner The owner of the mission repository\n * @param repoName The name of the mission repository\n * @param filepath The path to the file to be retrieved\n * @param octokit The Octokit instance for the authenticated user\n */\nexport async function getContentAsString(\n  repoOwner: string,\n  repoName: string,\n  filepath: string,\n  octokit: Octokit\n) {\n  let contentString = '';\n\n  if (octokit === undefined) {\n    return contentString;\n  }\n\n  try {\n    type GetContentResponse = GetResponseTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n    const fileInfo: GetContentResponse = await octokit.repos.getContent({\n      owner: repoOwner,\n      repo: repoName,\n      path: filepath\n    });\n\n    contentString = Buffer.from((fileInfo.data as any).content, 'base64').toString();\n  } catch (err) {\n    showWarningMessage('Error occurred while trying to retrieve file content', 1000);\n    console.error(err);\n  }\n\n  return contentString;\n}\n\n/**\n * Converts the contents of the '.metadata' file into a MissionMetadata object.\n *\n * @param metadataString The file contents of the '.metadata' file of a mission repository\n */\nfunction convertMetadataStringToMissionMetadata(metadataString: string) {\n  try {\n    return JSON.parse(metadataString) as MissionMetadata;\n  } catch (err) {\n    console.error(err);\n    return {\n      sourceVersion: Chapter.CLANG\n    } as MissionMetadata;\n  }\n}\n\nfunction convertMissionMetadataToMetadataString(missionMetadata: MissionMetadata) {\n  return jsonStringify(missionMetadata);\n}\n\n/**\n * Discovers files to be changed when saving to an existing GitHub repository\n * Return value is an array in the format [filenameToContentMap, foldersToDelete]\n * filenameToContentMap is an object whose key-value pairs are filenames and their new contents\n * foldersToDelete is an array containing the names of folders\n * @param missionMetadata The current MissionMetadata\n * @param cachedMissionMetadata The cached MissionMetadata\n * @param briefingContent The current briefing\n * @param cachedBriefingContent The cached briefing\n * @param taskList The current taskList\n * @param cachedTaskList The cached taskList\n * @param isTeacherMode If this is true, any changes to the saved code will be made to starter code instead\n */\nexport function discoverFilesToBeChangedWithMissionRepoData(\n  missionMetadata: MissionMetadata,\n  cachedMissionMetadata: MissionMetadata,\n  briefingContent: string,\n  cachedBriefingContent: string,\n  taskList: TaskData[],\n  cachedTaskList: TaskData[],\n  isTeacherMode: boolean\n): [any, string[]] {\n  const filenameToContentMap = {};\n  const foldersToDelete: string[] = [];\n\n  if (missionMetadata !== cachedMissionMetadata) {\n    filenameToContentMap['.metadata'] = convertMissionMetadataToMetadataString(missionMetadata);\n  }\n\n  if (briefingContent !== cachedBriefingContent) {\n    filenameToContentMap['README.md'] = briefingContent;\n  }\n\n  let i = 0;\n  while (i < taskList.length) {\n    const taskNumber = i + 1;\n    const questionFolderName = 'Q' + taskNumber;\n\n    if (taskNumber > cachedTaskList.length) {\n      // Look for files to create\n      filenameToContentMap[questionFolderName + '/StarterCode.js'] = taskList[i].savedCode;\n      filenameToContentMap[questionFolderName + '/Problem.md'] = taskList[i].taskDescription;\n\n      const propertiesToCheck = ['testCases', 'testPrepend', 'testPostpend'];\n\n      for (const propertyName of propertiesToCheck) {\n        const currentValue = taskList[i][propertyName];\n        const isDefaultValue = taskDataPropertyTable[propertyName].isDefaultValue(currentValue);\n\n        if (!isDefaultValue) {\n          const onRepoFileName =\n            questionFolderName + '/' + taskDataPropertyTable[propertyName].fileName;\n          const stringContent = taskDataPropertyTable[propertyName].toStringConverter(\n            taskList[i][propertyName]\n          );\n\n          filenameToContentMap[onRepoFileName] = stringContent;\n        }\n      }\n    } else {\n      // Look for files to edit\n      const propertiesToCheck = Object.keys(taskDataPropertyTable);\n\n      for (const propertyName of propertiesToCheck) {\n        const currentValue = taskList[i][propertyName];\n        const cachedValue = cachedTaskList[i][propertyName];\n\n        if (!isEqual(currentValue, cachedValue)) {\n          const onRepoFileName =\n            questionFolderName + '/' + taskDataPropertyTable[propertyName].fileName;\n          const stringContent = taskDataPropertyTable[propertyName].toStringConverter(\n            taskList[i][propertyName]\n          );\n\n          filenameToContentMap[onRepoFileName] = stringContent;\n        }\n      }\n\n      if (\n        isTeacherMode &&\n        filenameToContentMap[questionFolderName + '/' + taskDataPropertyTable['savedCode'].fileName]\n      ) {\n        // replace changes to savedCode with changes to starterCode\n        const savedCodeValue =\n          filenameToContentMap[\n            questionFolderName + '/' + taskDataPropertyTable['savedCode'].fileName\n          ];\n        delete filenameToContentMap[\n          questionFolderName + '/' + taskDataPropertyTable['savedCode'].fileName\n        ];\n        filenameToContentMap[\n          questionFolderName + '/' + taskDataPropertyTable['starterCode'].fileName\n        ] = savedCodeValue;\n      }\n    }\n    i++;\n  }\n\n  while (i < cachedTaskList.length) {\n    const taskNumber = i + 1;\n    foldersToDelete.push('Q' + taskNumber);\n    i++;\n  }\n\n  return [filenameToContentMap, foldersToDelete];\n}\n\n/**\n * Discovers files to be changed when saving to a new GitHub repository\n * @param missionMetadata The current MissionMetadata\n * @param briefingContent The current briefing\n * @param taskList The current taskList\n */\nexport function discoverFilesToBeCreatedWithoutMissionRepoData(\n  missionMetadata: MissionMetadata,\n  briefingContent: string,\n  taskList: TaskData[]\n) {\n  const filenameToContentMap = {};\n  filenameToContentMap['.metadata'] = convertMissionMetadataToMetadataString(missionMetadata);\n  filenameToContentMap['README.md'] = briefingContent;\n\n  const propertiesToCheck = ['testCases', 'testPrepend', 'testPostpend'];\n\n  for (let i = 0; i < taskList.length; i++) {\n    const taskNumber = i + 1;\n    const questionFolderName = 'Q' + taskNumber;\n\n    filenameToContentMap[questionFolderName + '/' + taskDataPropertyTable['starterCode'].fileName] =\n      taskList[i].savedCode;\n    filenameToContentMap[\n      questionFolderName + '/' + taskDataPropertyTable['taskDescription'].fileName\n    ] = taskList[i].taskDescription;\n\n    propertiesToCheck.forEach((propertyName: string) => {\n      const currentValue = taskList[i][propertyName];\n      const isDefaultValue = taskDataPropertyTable[propertyName].isDefaultValue(currentValue);\n\n      if (!isDefaultValue) {\n        const onRepoFileName =\n          questionFolderName + '/' + taskDataPropertyTable[propertyName].fileName;\n        const stringContent = taskDataPropertyTable[propertyName].toStringConverter(\n          taskList[i][propertyName]\n        );\n\n        filenameToContentMap[onRepoFileName] = stringContent;\n      }\n    });\n  }\n\n  return filenameToContentMap;\n}\n\n/**\n * Checks if the textual contents of a GitHub-hosted file is for an MCQ question, and converts it if so\n * returns an array of 2 values, a boolean and an IMCQQuestion\n * The boolean specifies whether the input corresponded to an MCQQuestion\n * The IMCQQuestion is only meaningful if the boolean is true, and contains the converted information\n * @param possibleMCQText The text to be checked and converted\n */\nexport function convertToMCQQuestionIfMCQText(possibleMCQText: string): [boolean, IMCQQuestion] {\n  let isMCQText = false;\n  const mcqQuestion = {\n    answer: 0,\n    choices: [],\n    solution: -1,\n    type: 'mcq',\n    content: '',\n    grade: 0,\n    id: 0,\n    library: { chapter: Chapter.CLANG, external: { name: 'NONE', symbols: [] }, globals: [] },\n    maxGrade: 0,\n    xp: 0,\n    maxXp: 0\n  } as IMCQQuestion;\n\n  const trimmedText = possibleMCQText.trim();\n\n  if (trimmedText.substring(0, 3).toLowerCase() === 'mcq') {\n    isMCQText = true;\n  }\n\n  if (isMCQText) {\n    const onlyQuestionInformation = trimmedText.substring(3, trimmedText.length);\n    try {\n      const intermediateObject = JSON.parse(onlyQuestionInformation);\n\n      const studentAnswer = intermediateObject.answer;\n      const intermediateChoices = intermediateObject.choices as any[];\n      const choices = intermediateChoices.map((question: { option: string; hint: string }) => {\n        return {\n          content: question.option,\n          hint: question.hint\n        };\n      });\n      const solution = intermediateObject.solution;\n\n      mcqQuestion.answer = studentAnswer;\n      mcqQuestion.choices = choices;\n      mcqQuestion.solution = solution;\n    } catch (err) {\n      isMCQText = false;\n    }\n  }\n\n  return [isMCQText, mcqQuestion];\n}\n\n/**\n * Converts an IMCQQuestion object into textual contents to be saved to a GitHub repository\n * @param mcq The IMCQQuestion object\n */\nexport function convertIMCQQuestionToMCQText(mcq: IMCQQuestion) {\n  const studentAnswer = mcq.answer;\n  const choices = mcq.choices.map((choice: { content: string; hint: string | null }) => {\n    return {\n      option: choice.content,\n      hint: choice.hint\n    };\n  });\n  const solution = mcq.solution;\n\n  const json = {\n    choices: choices,\n    answer: studentAnswer,\n    solution: solution\n  };\n\n  return 'MCQ\\n' + jsonStringify(json);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetPropertyError = exports.GetInheritedPropertyError = exports.GetPropertyError = exports.ConstAssignment = exports.VariableRedeclaration = exports.InvalidNumberOfArguments = exports.UnassignedVariable = exports.UndefinedVariable = exports.CallingNonFunctionValue = exports.MaximumStackLimitExceeded = exports.ExceptionError = exports.InterruptedError = void 0;\n/* tslint:disable: max-classes-per-file */\n/* tslint:disable:max-line-length */\nconst astring_1 = require(\"astring\");\nconst types_1 = require(\"../types\");\nconst stringify_1 = require(\"../utils/stringify\");\nconst runtimeSourceError_1 = require(\"./runtimeSourceError\");\nclass InterruptedError extends runtimeSourceError_1.RuntimeSourceError {\n    constructor(node) {\n        super(node);\n    }\n    explain() {\n        return 'Execution aborted by user.';\n    }\n    elaborate() {\n        return 'TODO';\n    }\n}\nexports.InterruptedError = InterruptedError;\nclass ExceptionError {\n    constructor(error, location) {\n        this.error = error;\n        this.location = location;\n        this.type = types_1.ErrorType.RUNTIME;\n        this.severity = types_1.ErrorSeverity.ERROR;\n    }\n    explain() {\n        return this.error.toString();\n    }\n    elaborate() {\n        return 'TODO';\n    }\n}\nexports.ExceptionError = ExceptionError;\nclass MaximumStackLimitExceeded extends runtimeSourceError_1.RuntimeSourceError {\n    constructor(node, calls) {\n        super(node);\n        this.calls = calls;\n        this.customGenerator = Object.assign(Object.assign({}, astring_1.baseGenerator), { CallExpression(node, state) {\n                state.write((0, astring_1.generate)(node.callee));\n                state.write('(');\n                const argsRepr = node.arguments.map((arg) => (0, stringify_1.stringify)(arg.value));\n                state.write(argsRepr.join(', '));\n                state.write(')');\n            } });\n    }\n    explain() {\n        const repr = (call) => (0, astring_1.generate)(call, { generator: this.customGenerator });\n        return ('Maximum call stack size exceeded\\n  ' + this.calls.map(call => repr(call) + '..').join('  '));\n    }\n    elaborate() {\n        return 'TODO';\n    }\n}\nexports.MaximumStackLimitExceeded = MaximumStackLimitExceeded;\nMaximumStackLimitExceeded.MAX_CALLS_TO_SHOW = 3;\nclass CallingNonFunctionValue extends runtimeSourceError_1.RuntimeSourceError {\n    constructor(callee, node) {\n        super(node);\n        this.callee = callee;\n        this.node = node;\n    }\n    explain() {\n        return `Calling non-function value ${(0, stringify_1.stringify)(this.callee)}.`;\n    }\n    elaborate() {\n        const calleeVal = this.callee;\n        const calleeStr = (0, stringify_1.stringify)(calleeVal);\n        let argStr = '';\n        const callArgs = this.node.arguments;\n        argStr = callArgs.map(astring_1.generate).join(', ');\n        const elabStr = `Because ${calleeStr} is not a function, you cannot run ${calleeStr}(${argStr}).`;\n        const multStr = `If you were planning to perform multiplication by ${calleeStr}, you need to use the * operator.`;\n        if (Number.isFinite(calleeVal)) {\n            return `${elabStr} ${multStr}`;\n        }\n        else {\n            return elabStr;\n        }\n    }\n}\nexports.CallingNonFunctionValue = CallingNonFunctionValue;\nclass UndefinedVariable extends runtimeSourceError_1.RuntimeSourceError {\n    constructor(name, node) {\n        super(node);\n        this.name = name;\n    }\n    explain() {\n        return `Name ${this.name} not declared.`;\n    }\n    elaborate() {\n        return `Before you can read the value of ${this.name}, you need to declare it as a variable or a constant. You can do this using the let or const keywords.`;\n    }\n}\nexports.UndefinedVariable = UndefinedVariable;\nclass UnassignedVariable extends runtimeSourceError_1.RuntimeSourceError {\n    constructor(name, node) {\n        super(node);\n        this.name = name;\n    }\n    explain() {\n        return `Name ${this.name} declared later in current scope but not yet assigned`;\n    }\n    elaborate() {\n        return `If you're trying to access the value of ${this.name} from an outer scope, please rename the inner ${this.name}. An easy way to avoid this issue in future would be to avoid declaring any variables or constants with the name ${this.name} in the same scope.`;\n    }\n}\nexports.UnassignedVariable = UnassignedVariable;\nclass InvalidNumberOfArguments extends runtimeSourceError_1.RuntimeSourceError {\n    constructor(node, expected, got, hasVarArgs = false) {\n        super(node);\n        this.expected = expected;\n        this.got = got;\n        this.hasVarArgs = hasVarArgs;\n        this.calleeStr = (0, astring_1.generate)(node.callee);\n    }\n    explain() {\n        return `Expected ${this.expected} ${this.hasVarArgs ? 'or more ' : ''}arguments, but got ${this.got}.`;\n    }\n    elaborate() {\n        const calleeStr = this.calleeStr;\n        const pluralS = this.expected === 1 ? '' : 's';\n        return `Try calling function ${calleeStr} again, but with ${this.expected} argument${pluralS} instead. Remember that arguments are separated by a ',' (comma).`;\n    }\n}\nexports.InvalidNumberOfArguments = InvalidNumberOfArguments;\nclass VariableRedeclaration extends runtimeSourceError_1.RuntimeSourceError {\n    constructor(node, name, writable) {\n        super(node);\n        this.node = node;\n        this.name = name;\n        this.writable = writable;\n    }\n    explain() {\n        return `Redeclaring name ${this.name}.`;\n    }\n    elaborate() {\n        if (this.writable === true) {\n            const elabStr = `Since ${this.name} has already been declared, you can assign a value to it without re-declaring.`;\n            let initStr = '';\n            if (this.node.type === 'FunctionDeclaration') {\n                initStr =\n                    '(' + this.node.params.map(astring_1.generate).join(',') + ') => {...';\n            }\n            else if (this.node.type === 'VariableDeclaration') {\n                initStr = (0, astring_1.generate)(this.node.declarations[0].init);\n            }\n            return `${elabStr} As such, you can just do\\n\\n\\t${this.name} = ${initStr};\\n`;\n        }\n        else if (this.writable === false) {\n            return `You will need to declare another variable, as ${this.name} is read-only.`;\n        }\n        else {\n            return '';\n        }\n    }\n}\nexports.VariableRedeclaration = VariableRedeclaration;\nclass ConstAssignment extends runtimeSourceError_1.RuntimeSourceError {\n    constructor(node, name) {\n        super(node);\n        this.name = name;\n    }\n    explain() {\n        return `Cannot assign new value to constant ${this.name}.`;\n    }\n    elaborate() {\n        return `As ${this.name} was declared as a constant, its value cannot be changed. You will have to declare a new variable.`;\n    }\n}\nexports.ConstAssignment = ConstAssignment;\nclass GetPropertyError extends runtimeSourceError_1.RuntimeSourceError {\n    constructor(node, obj, prop) {\n        super(node);\n        this.obj = obj;\n        this.prop = prop;\n    }\n    explain() {\n        return `Cannot read property ${this.prop} of ${(0, stringify_1.stringify)(this.obj)}.`;\n    }\n    elaborate() {\n        return 'TODO';\n    }\n}\nexports.GetPropertyError = GetPropertyError;\nclass GetInheritedPropertyError extends runtimeSourceError_1.RuntimeSourceError {\n    constructor(node, obj, prop) {\n        super(node);\n        this.obj = obj;\n        this.prop = prop;\n        this.type = types_1.ErrorType.RUNTIME;\n        this.severity = types_1.ErrorSeverity.ERROR;\n        this.location = node.loc;\n    }\n    explain() {\n        return `Cannot read inherited property ${this.prop} of ${(0, stringify_1.stringify)(this.obj)}.`;\n    }\n    elaborate() {\n        return 'TODO';\n    }\n}\nexports.GetInheritedPropertyError = GetInheritedPropertyError;\nclass SetPropertyError extends runtimeSourceError_1.RuntimeSourceError {\n    constructor(node, obj, prop) {\n        super(node);\n        this.obj = obj;\n        this.prop = prop;\n    }\n    explain() {\n        return `Cannot assign property ${this.prop} of ${(0, stringify_1.stringify)(this.obj)}.`;\n    }\n    elaborate() {\n        return 'TODO';\n    }\n}\nexports.SetPropertyError = SetPropertyError;\n//# sourceMappingURL=errors.js.map","export const FETCH_GROUP_GRADING_SUMMARY = 'FETCH_GROUP_GRADING_SUMMARY';\nexport const UPDATE_GROUP_GRADING_SUMMARY = 'UPDATE_GROUP_GRADING_SUMMARY';\n\nexport type DashboardState = {\n  gradingSummary: GradingSummary;\n};\n\n/**\n * As we are dynamically rendering the ag-grid table based on the number of assessment types in\n * the course, we cannot properly type the fields in GradingSummary.\n *\n * In short, cols contains the keys to each object in rows, and corresponds to the display order of ag-grid columns.\n */\nexport type GradingSummary = {\n  cols: string[];\n  rows: Object[];\n};\n","import { Chapter, Variant } from 'Clang-slang/dist/types';\nimport moment, { Moment } from 'moment';\n\nfunction isTrue(value?: string, defaultTo?: boolean): boolean {\n  return typeof value === 'undefined' && typeof defaultTo !== 'undefined'\n    ? defaultTo\n    : typeof value === 'string' && value.toUpperCase() === 'TRUE';\n}\n\nconst isTest = process.env.NODE_ENV === 'test';\n\nconst sourceAcademyVersion = process.env.REACT_APP_VERSION || 'local';\nconst sourceAcademyEnvironment = process.env.REACT_APP_ENVIRONMENT || 'dev';\nconst sourceAcademyDeploymentName = process.env.REACT_APP_DEPLOYMENT_NAME || 'Source Academy';\nconst showResearchPrompt = isTest || isTrue(process.env.REACT_APP_SHOW_RESEARCH_PROMPT);\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\nconst cadetLoggerUrl = isTest ? undefined : process.env.REACT_APP_CADET_LOGGER;\nconst cadetLoggerInterval = parseInt(process.env.REACT_APP_CADET_LOGGER_INTERVAL || '10000', 10);\nconst useBackend = !isTest && isTrue(process.env.REACT_APP_USE_BACKEND);\nconst defaultSourceChapter = Chapter.CLANG;\nconst defaultSourceVariant = Variant.DEFAULT;\nconst defaultQuestionId = 0;\nconst maxBrowseIndex = 50;\nconst mobileBreakpoint = 768;\nconst urlShortenerBase = process.env.REACT_APP_URL_SHORTENER_BASE;\nconst urlShortenerSignature = process.env.REACT_APP_URL_SHORTENER_SIGNATURE;\nconst moduleBackendUrl = process.env.REACT_APP_MODULE_BACKEND_URL || 'modules';\nconst sharedbBackendUrl = process.env.REACT_APP_SHAREDB_BACKEND_URL || '';\nconst playgroundOnly = !isTest && isTrue(process.env.REACT_APP_PLAYGROUND_ONLY, true);\nconst enableGitHubAssessments = isTest || isTrue(process.env.REACT_APP_ENABLE_GITHUB_ASSESSMENTS);\nconst sentryDsn = process.env.REACT_APP_SENTRY_DSN;\nconst googleClientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst googleApiKey = process.env.REACT_APP_GOOGLE_API_KEY;\nconst googleAppId = process.env.REACT_APP_GOOGLE_APP_ID;\nconst githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID || '';\nconst githubOAuthProxyUrl = process.env.REACT_APP_GITHUB_OAUTH_PROXY_URL || '';\nconst sicpBackendUrl =\n  process.env.REACT_APP_SICPJS_BACKEND_URL || 'https://sicp.sourceacademy.org/';\nconst workspaceSettingsLocalStorageKey = 'workspace-settings';\n\n// For achievements feature (CA - Continual Assessment)\n// TODO: remove dependency of the ca levels on the env file\nconst caFulfillmentLevel = isTest\n  ? 24\n  : parseInt(process.env.REACT_APP_CA_FULFILLMENT_LEVEL || '0');\n\nconst authProviders: Map<string, { name: string; endpoint: string; isDefault: boolean }> =\n  new Map();\n\nfor (let i = 1; ; ++i) {\n  const id = process.env[`REACT_APP_OAUTH2_PROVIDER${i}`];\n  if (!id) {\n    break;\n  }\n\n  const name = process.env[`REACT_APP_OAUTH2_PROVIDER${i}_NAME`] || 'Unnamed provider';\n  const endpoint = process.env[`REACT_APP_OAUTH2_PROVIDER${i}_ENDPOINT`] || '';\n\n  authProviders.set(id, { name, endpoint, isDefault: i === 1 });\n}\n\nconst disablePeriods: Array<{ start: Moment; end: Moment; reason?: string }> = [];\n\nif (!isTest) {\n  for (let i = 1; ; ++i) {\n    const startStr = process.env[`REACT_APP_DISABLE${i}_START`];\n    const endStr = process.env[`REACT_APP_DISABLE${i}_END`];\n    if (!startStr || !endStr) {\n      break;\n    }\n    const reason = process.env[`REACT_APP_DISABLE${i}_REASON`];\n    const start = moment(startStr);\n    const end = moment(endStr);\n    if (end.isBefore(start) || moment().isAfter(end)) {\n      continue;\n    }\n    disablePeriods.push({ start, end, reason });\n  }\n}\n\nexport enum Links {\n  githubIssues = 'https://github.com/source-academy/frontend/issues',\n  githubOrg = 'https://github.com/source-academy',\n  about = 'https://about.sourceacademy.org',\n\n  moduleDetails = 'https://www.comp.nus.edu.sg/~cs1101s',\n  luminus = 'https://luminus.nus.edu.sg/modules/41d42e9a-5880-43b5-8ee6-75f5a41355e3/announcements/active',\n  piazza = 'https://piazza.com/class/kas136yscf8605',\n\n  resourcesForEducators = 'https://about.sourceacademy.org/educator/README.html',\n  resourcesForLearners = 'https://about.sourceacademy.org/learner/README.html',\n\n  sourceAcademyAssets = 'https://source-academy-assets.s3-ap-southeast-1.amazonaws.com/',\n  sourceDocs = 'https://docs.sourceacademy.org/',\n  techSVC = 'mailto:techsvc@comp.nus.edu.sg',\n  techSVCNumber = '6516 2736',\n  textbook = 'https://sourceacademy.org/sicpjs/',\n  playground = 'https://sourceacademy.org/playground',\n  textbookChapter2_2 = 'https://sourceacademy.org/sicpjs/2.2',\n  textbookChapter3_2 = 'https://sourceacademy.org/sicpjs/3.2',\n  aceHotkeys = 'https://github.com/ajaxorg/ace/wiki/Default-Keyboard-Shortcuts',\n  sourceHotkeys = 'https://github.com/source-academy/frontend/wiki/Source-Academy-Keyboard-Shortcuts',\n\n  source_1 = 'https://docs.sourceacademy.org/source_1/',\n  source_1_Lazy = 'https://docs.sourceacademy.org/source_1_lazy/',\n  source_1_Wasm = 'https://docs.sourceacademy.org/source_1_wasm/',\n  source_2 = 'https://docs.sourceacademy.org/source_2/',\n  source_2_Lazy = 'https://docs.sourceacademy.org/source_2_lazy/',\n  source_3 = 'https://docs.sourceacademy.org/source_3/',\n  source_3_Concurrent = 'https://docs.sourceacademy.org/source_3_concurrent/',\n  source_3_Nondet = 'https://docs.sourceacademy.org/source_3_non-det/',\n  source_4 = 'https://docs.sourceacademy.org/source_4/',\n  source_4_Gpu = 'https://docs.sourceacademy.org/source_4_gpu/',\n  ecmaScript_2021 = 'https://262.ecma-international.org/12.0/'\n}\n\nconst Constants = {\n  sourceAcademyVersion,\n  sourceAcademyEnvironment,\n  sourceAcademyDeploymentName,\n  showResearchPrompt,\n  backendUrl,\n  cadetLoggerUrl,\n  useBackend,\n  defaultSourceChapter,\n  defaultSourceVariant,\n  defaultQuestionId,\n  maxBrowseIndex,\n  mobileBreakpoint,\n  urlShortenerBase,\n  urlShortenerSignature,\n  moduleBackendUrl,\n  authProviders,\n  playgroundOnly,\n  enableGitHubAssessments,\n  sentryDsn,\n  googleClientId,\n  googleApiKey,\n  googleAppId,\n  githubClientId,\n  githubOAuthProxyUrl,\n  sharedbBackendUrl,\n  disablePeriods,\n  cadetLoggerInterval,\n  sicpBackendUrl,\n  workspaceSettingsLocalStorageKey,\n  caFulfillmentLevel\n};\n\nexport default Constants;\n","import { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\n\ntype ControlBarPreviousButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  onClick?(): any;\n};\n\ntype StateProps = {\n  key: string;\n  questionProgress: [number, number] | null;\n};\n\nexport const ControlBarPreviousButton: React.FC<ControlBarPreviousButtonProps> = props => {\n  return props.questionProgress![0] <= 1 ? null : (\n    <ControlButton label=\"Previous\" icon={IconNames.ARROW_LEFT} onClick={props.onClick} />\n  );\n};\n","import React from 'react';\n\nimport ControlButton from '../ControlButton';\n\n/**\n * @prop questionProgress a tuple of (current question number, question length) where\n *   the current question number is 1-based.\n */\ntype ControlBarQuestionViewButtonProps = {\n  questionProgress: [number, number] | null;\n};\n\nexport const ControlBarQuestionViewButton: React.FC<ControlBarQuestionViewButtonProps> = ({\n  questionProgress\n}) => {\n  return (\n    <ControlButton\n      label={`Question ${questionProgress![0]} of ${questionProgress![1]}  `}\n      isDisabled\n    />\n  );\n};\n","import { cloneDeep, uniq } from 'lodash';\nimport { v4 } from 'uuid';\n\nimport {\n  AchievementGoal,\n  AchievementItem,\n  AchievementStatus,\n  defaultGoalProgress,\n  GoalDefinition,\n  GoalProgress,\n  GoalType\n} from '../../../features/achievement/AchievementTypes';\nimport { showDangerMessage } from '../../utils/NotificationsHelper';\nimport { isExpired, isReleased } from './DateHelper';\n\n/**\n * An AchievementNode item encapsulates all important information of an achievement item\n *\n * @param {AchievementItem} achievement the achievement item\n * @param {Date | undefined} displayDeadline deadline displayed on the achievement card\n * @param {number} xp attained XP of the achievement\n * @param {number} progressFrac progress percentage in fraction. It is always between 0 to 1, both inclusive.\n * @param {AchievementStatus} status the achievement status\n * @param {Set<string>} children a set of immediate prerequisites uuid\n * @param {Set<string>} descendant a set of all descendant prerequisites uuid (including immediate prerequisites)\n * @param {Set<string>} parents a set of all immediate parent uuid\n */\nclass AchievementNode {\n  public achievement: AchievementItem;\n  public displayDeadline?: Date;\n  public xp: number;\n  public progressFrac: number;\n  public status: AchievementStatus;\n  public children: Set<string>;\n  public descendant: Set<string>;\n  public parents: Set<string>;\n\n  constructor(achievement: AchievementItem) {\n    const { deadline, prerequisiteUuids } = achievement;\n\n    this.achievement = achievement;\n    this.displayDeadline = deadline;\n    this.xp = 0;\n    this.progressFrac = 0;\n    this.status = AchievementStatus.ACTIVE;\n    this.children = new Set(prerequisiteUuids);\n    this.descendant = new Set(prerequisiteUuids);\n    this.parents = new Set();\n  }\n}\n\n/**\n * The AchievementInferencer consumes achievements and goals, then infers useful React props\n *\n * Note: The inferencer is responsible for assigning new UUIDs to AchievementItem and AchievementGoal\n */\nclass AchievementInferencer {\n  private nodeList: Map<string, AchievementNode> = new Map(); // key = achievementUuid, value = AchievementNode\n  private goalList: Map<string, AchievementGoal> = new Map(); // key = goalUuid, value = AchievementGoal\n  private textToUuid: Map<string, string> = new Map(); // key = goalText, value = goalUuid\n  private titleToUuid: Map<string, string> = new Map(); // key = achievementTitle, value = achievementUuid\n  private achievementsToDelete: string[] = [];\n  private goalsToDelete: string[] = [];\n\n  constructor(achievements: AchievementItem[], goals: AchievementGoal[]) {\n    this.nodeList = this.constructNodeList(achievements);\n    this.goalList = this.constructGoalList(goals);\n    this.processNodes();\n    this.processGoals();\n  }\n\n  /**\n   * Invalid Goal for the getters to return if the goal does not exist in the goalList\n   */\n  private invalidGoal: AchievementGoal = {\n    uuid: 'invalid',\n    text: 'invalid',\n    achievementUuids: [],\n    meta: { type: GoalType.MANUAL, targetCount: 0 },\n    count: 0,\n    targetCount: 0,\n    completed: false\n  };\n\n  /**\n   * Invalid Achievement for the getters to return if the goal does not exist in the goalList\n   */\n  private invalidAchievement: AchievementItem = {\n    uuid: 'invalid',\n    title: 'invalid',\n    xp: 0,\n    isVariableXp: false,\n    deadline: undefined,\n    release: undefined,\n    isTask: false,\n    position: 0,\n    prerequisiteUuids: [],\n    goalUuids: [],\n    cardBackground: 'invalid',\n    view: { coverImage: 'invalid', description: 'invalid', completionText: 'invalid' }\n  };\n\n  /**\n   * Returns an array of AchievementItem\n   */\n  public getAllAchievements() {\n    return [...this.nodeList.values()].map(node => node.achievement);\n  }\n\n  /**\n   * Returns an array of AchievementItem that have been released\n   */\n  public getAllReleasedAchievements() {\n    return [...this.nodeList.values()]\n      .filter(node => node.status !== AchievementStatus.UNRELEASED)\n      .map(node => node.achievement);\n  }\n\n  public getAllCompletedAchievements() {\n    return [...this.nodeList.values()]\n      .filter(node => node.status === AchievementStatus.COMPLETED)\n      .map(node => node.achievement);\n  }\n\n  /**\n   * Returns an array of achievementUuid\n   */\n  public getAllAchievementUuids() {\n    return [...this.nodeList.keys()];\n  }\n\n  /**\n   * Returns an array of AchievementGoal\n   */\n  public getAllGoals() {\n    return [...this.goalList.values()];\n  }\n\n  /**\n   * Returns an array of goalUuid\n   */\n  public getAllGoalUuids() {\n    return [...this.goalList.keys()];\n  }\n\n  /**\n   * Returns true if achievement exists\n   */\n  public hasAchievement(uuid: string) {\n    return this.nodeList.has(uuid);\n  }\n\n  /**\n   * Returns true if the achievement is a prerequisite of another achievement\n   *\n   * @param uuid Achievement uuid\n   */\n  public isPrerequisite(uuid: string) {\n    const node = this.nodeList.get(uuid);\n    return node ? node.parents.size > 0 : false;\n  }\n\n  /**\n   * Returns the AchievementItem\n   * Returns an invalid achievement item if the achievement is not in the map\n   *\n   * @param uuid Achievement Uuid\n   */\n  public getAchievement(uuid: string) {\n    const node = this.nodeList.get(uuid);\n    return node ? node.achievement : this.invalidAchievement;\n  }\n\n  /**\n   * Returns true if goal exists\n   */\n  public hasGoal(uuid: string) {\n    return this.goalList.has(uuid);\n  }\n\n  /**\n   * Returns the AchievementGoal\n   * Returns an invalid goal if the goal is not in the map\n   *\n   * @param uuid Goal Uuid\n   */\n  public getGoal(uuid: string) {\n    return this.goalList.get(uuid) || this.invalidGoal;\n  }\n\n  /**\n   * Returns the GoalDefinition\n   *\n   * @param uuid Goal Uuid\n   */\n  public getGoalDefinition(uuid: string) {\n    return this.getGoal(uuid) as GoalDefinition;\n  }\n\n  public getGoalProgress(uuid: string) {\n    return this.getGoal(uuid) as GoalProgress;\n  }\n\n  /**\n   * Returns the position of the achievement\n   *\n   * @param uuid Achievement Uuid\n   */\n  public getAchievementPositionByUuid(uuid: string) {\n    return this.getAchievement(uuid).position;\n  }\n\n  /**\n   * Returns the uuids of the achievements that were deleted\n   */\n  public getAchievementsToDelete() {\n    return this.achievementsToDelete;\n  }\n\n  /**\n   * Returns the uuids of the goals that were deleted\n   */\n  public getGoalsToDelete() {\n    return this.goalsToDelete;\n  }\n\n  /**\n   * Resets the array so the same achievement/goal is not deleted twice\n   */\n  public resetToDelete() {\n    this.achievementsToDelete = [];\n    this.goalsToDelete = [];\n  }\n\n  /**\n   * Returns an array of achievements that use the goal\n   *\n   * @param goalUuid UUID of the goal in question\n   */\n  public getAchievementsByGoal(goalUuid: string) {\n    return this.getGoal(goalUuid).achievementUuids;\n  }\n\n  public listSortedAchievementUuids() {\n    return this.getAllAchievements()\n      .sort((a, b) => a.position - b.position)\n      .map(achievement => achievement.uuid);\n  }\n\n  /**\n   * Returns true if the goal is invalid\n   *\n   * @param goal An AchievementGoal\n   */\n  public isInvalidGoal(goal: AchievementGoal) {\n    return goal === this.invalidGoal;\n  }\n\n  /**\n   * Returns true if the achievement is invalid\n   *\n   * @param achievement An AchievementItem\n   */\n  public isInvalidAchievement(achievement: AchievementItem) {\n    return achievement === this.invalidAchievement;\n  }\n\n  /**\n   * Inserts a new AchievementItem into the Inferencer,\n   * then returns the newly assigned achievementUuid\n   *\n   * @param achievement the AchievementItem\n   */\n  public insertAchievement(achievement: AchievementItem) {\n    // first, generate a new unique uuid\n    let newUuid = v4();\n    // a small overhead to truly guarantee uniqueness\n    while (this.nodeList.has(newUuid)) {\n      newUuid = v4();\n    }\n\n    // then assign the new unique uuid by overwriting the achievement item supplied by param\n    // and insert it into nodeList\n    achievement.uuid = newUuid;\n\n    this.nodeList.set(newUuid, new AchievementNode(achievement));\n\n    // finally, process the nodeList\n    this.processNodes();\n    this.normalizePositions(achievement.uuid, achievement.position);\n\n    return newUuid;\n  }\n\n  /**\n   * Inserts a new AchievementItem into the Inferencer,\n   * then returns the newly assigned achievementUuid.\n   * Used for inserting assessment achievements on the fly.\n   *\n   * @param achievement the AchievementItem\n   */\n  public insertFakeAchievement(achievement: AchievementItem) {\n    // and insert it into nodeList\n    this.nodeList.set(achievement.uuid, new AchievementNode(achievement));\n\n    // finally, process the nodeList\n    this.processNodes();\n    this.normalizePositions(achievement.uuid, achievement.position);\n\n    return achievement.uuid;\n  }\n\n  /**\n   * Inserts a new GoalDefinition into the Inferencer,\n   * then returns the newly assigned goalUuid\n   *\n   * @param definition the GoalDefinition\n   */\n  public insertGoalDefinition(definition: GoalDefinition) {\n    // first, generate a new unique uuid by finding the max uuid\n    let newUuid = v4();\n    // a small overhead to truly guarantee uniqueness\n    while (this.goalList.has(newUuid)) {\n      newUuid = v4();\n    }\n\n    // then assign the new unique uuid by overwriting the goal item supplied by param\n    // and insert it into goalList\n    definition.uuid = newUuid;\n    this.goalList.set(newUuid, { ...definition, ...defaultGoalProgress });\n\n    // finally, process the goalList\n    this.processGoals();\n\n    return newUuid;\n  }\n\n  /**\n   * Inserts a new GoalDefinition into the Inferencer,\n   * then returns the newly assigned goalUuid\n   * Used for inserting assessment goals on the fly\n   *\n   * @param definition the GoalDefinition\n   * @param complete whether the goal should be marked as completed or not\n   */\n  public insertFakeGoalDefinition(definition: GoalDefinition, complete: boolean) {\n    // then assign the new unique uuid by overwriting the goal item supplied by param\n    // and insert it into goalList\n    if (complete) {\n      this.goalList.set(definition.uuid, {\n        ...definition,\n        count: 1,\n        targetCount: 1,\n        completed: true\n      });\n    } else {\n      this.goalList.set(definition.uuid, {\n        ...definition,\n        count: 0,\n        targetCount: 1,\n        completed: false\n      });\n    }\n\n    // finally, process the goalList\n    this.processGoals();\n\n    return definition.uuid;\n  }\n\n  /**\n   * Updates the AchievementItem in the Inferencer\n   *\n   * @param achievement the AchievementItem\n   */\n  public modifyAchievement(achievement: AchievementItem) {\n    // directly replace the AchievementNode in nodeList\n    this.nodeList.set(achievement.uuid, new AchievementNode(achievement));\n\n    // then, process the nodeList\n    this.processNodes();\n    this.normalizePositions(achievement.uuid, achievement.position);\n  }\n\n  /**\n   * Updates the GoalDefinition in the Inferencer\n   *\n   * @param definition the GoalDefinition\n   */\n  public modifyGoalDefinition(definition: GoalDefinition) {\n    // directly replace the GoalDefinition in goalList\n    this.goalList.set(definition.uuid, { ...definition, ...defaultGoalProgress });\n\n    // then, process the nodeList and goalList\n    this.processNodes();\n    this.processGoals();\n  }\n\n  public modifyGoalProgress(progress: GoalProgress) {\n    const goal = this.getGoal(progress.uuid);\n    if (this.isInvalidGoal(goal)) {\n      return;\n    }\n    this.goalList.set(progress.uuid, { ...goal, ...progress });\n\n    const achievementUuids = goal.achievementUuids;\n    for (const uuid in achievementUuids) {\n      const node = this.nodeList.get(uuid);\n      if (node) {\n        this.generateXp(node);\n        this.generateProgressFrac(node);\n        this.generateStatus(node);\n      }\n    }\n  }\n\n  /**\n   * Removes the AchievementItem from the Inferencer\n   *\n   * @param targetUuid Achievement Uuid\n   */\n  public removeAchievement(targetUuid: string) {\n    const hasTarget = (node: AchievementNode) => node.children.has(targetUuid);\n\n    const sanitizeNode = (node: AchievementNode) => {\n      const newPrerequisiteUuids = node.achievement.prerequisiteUuids.filter(\n        uuid => uuid !== targetUuid\n      );\n      node.achievement.prerequisiteUuids = newPrerequisiteUuids;\n\n      return new AchievementNode(node.achievement);\n    };\n\n    // first, remove achievement from node list\n    this.nodeList.delete(targetUuid);\n    // then, remove reference of the target in other achievement's prerequisite\n    this.nodeList.forEach((node, uuid) => {\n      if (hasTarget(node)) {\n        this.nodeList.set(uuid, sanitizeNode(node));\n      }\n    });\n\n    // add the achievement to the list of things to delete\n    this.achievementsToDelete.push(targetUuid);\n\n    // finally, process the nodeList\n    this.processNodes();\n    this.normalizePositions();\n  }\n\n  /**\n   * Removes the GoalDefinition from the Inferencer\n   *\n   * @param targetUuid Goal Uuid\n   */\n  public removeGoalDefinition(targetUuid: string) {\n    const findTargetIndex = (node: AchievementNode) =>\n      node.achievement.goalUuids.findIndex(uuid => uuid === targetUuid);\n\n    const sanitizeNode = (node: AchievementNode) => {\n      const targetIndex = findTargetIndex(node);\n      if (targetIndex !== -1) {\n        node.achievement.goalUuids.splice(targetIndex, 1);\n      }\n    };\n\n    // first, remove goal from goal list\n    this.goalList.delete(targetUuid);\n    // then, remove the goalUuid from all achievement goalUuids\n    this.nodeList.forEach(node => sanitizeNode(node));\n\n    // add the goal to the list of things to delete\n    this.goalsToDelete.push(targetUuid);\n\n    // finally, process the nodeList and goalList\n    this.processNodes();\n    this.processGoals();\n  }\n\n  /**\n   * Returns an array of achievementUuid that isTask or is completed\n   */\n  public listTaskUuids() {\n    return this.getAllAchievements()\n      .filter(achievement => achievement.isTask || this.isCompleted(achievement))\n      .map(task => task.uuid);\n  }\n\n  /**\n   * Returns an array of achievementId that isTask or is completed sorted by position\n   */\n  public listSortedTaskUuids() {\n    return this.getAllAchievements()\n      .filter(achievement => achievement.isTask || this.isCompleted(achievement))\n      .sort((taskA, taskB) => taskA.position - taskB.position)\n      .map(sortedTask => sortedTask.uuid);\n  }\n\n  /**\n   * Returns an array of achievementId that isTask or is completed sorted by position\n   */\n  public listSortedReleasedTaskUuids() {\n    return this.getAllReleasedAchievements()\n      .filter(achievement => achievement.isTask || this.isCompleted(achievement))\n      .sort((taskA, taskB) => taskA.position - taskB.position)\n      .map(sortedTask => sortedTask.uuid);\n  }\n\n  /**\n   * Returns an array of achievementId sorted by position\n   */\n  public listAllSortedAchievementUuids() {\n    return this.getAllAchievements()\n      .sort((taskA, taskB) => taskA.position - taskB.position)\n      .map(sortedTask => sortedTask.uuid);\n  }\n\n  /**\n   * Returns whether an achievement is completed or not.\n   *\n   * NOTE: It might be better (more efficient) to simply have a completed proporty on each achievement.\n   */\n  public isCompleted(achievement: AchievementItem) {\n    const goalLength = achievement.goalUuids.length;\n    const prereqLength = achievement.prerequisiteUuids.length;\n\n    // an achievement with no goals and prerequisites should not be considered complete\n    if (goalLength === 0 && prereqLength === 0) {\n      return false;\n    }\n\n    // if any of the goals are not complete, return false\n    for (let i = 0; i < goalLength; i++) {\n      if (!this.getGoal(achievement.goalUuids[i]).completed) {\n        return false;\n      }\n    }\n    // if any of the prereqs are not complete, return false\n    for (let i = 0; i < prereqLength; i++) {\n      if (!this.isCompleted(this.getAchievement(achievement.prerequisiteUuids[i]))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns an array of AchievementGoal which belongs to the achievement\n   *\n   * @param uuid Achievement Uuid\n   */\n  public listGoals(uuid: string) {\n    const { goalUuids } = this.getAchievement(uuid);\n    return goalUuids.map(goalUuid => this.getGoal(goalUuid));\n  }\n\n  /**\n   * Returns an array of AchievementGoal which belongs to the prerequisites of the achievement\n   *\n   * @param uuid Achievement Uuid\n   */\n  public listPrerequisiteGoals(uuid: string) {\n    const childGoalUuids: string[] = [];\n    for (const childUuid of this.getImmediateChildren(uuid)) {\n      const { goalUuids } = this.getAchievement(childUuid);\n      goalUuids.forEach(goalUuid => childGoalUuids.push(goalUuid));\n    }\n\n    return childGoalUuids.map(goalUuid => this.getGoal(goalUuid));\n  }\n\n  /**\n   * Returns the Goal Uuid associate to the Goal Text or undefined\n   *\n   * @param text goalText\n   */\n  public getUuidByText(text: string) {\n    return this.textToUuid.get(text);\n  }\n\n  /**\n   * Returns the Goal Text associate to the Goal Uuid or undefined\n   *\n   * @param text goalUuid\n   */\n  public getTextByUuid(uuid: string) {\n    return this.getGoal(uuid).text;\n  }\n\n  /**\n   * Returns the Achievement Uuid associate to the Achievement Title or undefined\n   *\n   * @param title achievementTitle\n   */\n  public getUuidByTitle(title: string) {\n    return this.titleToUuid.get(title);\n  }\n\n  /**\n   * Returns the Achievement Title associate to the Achievement Uuid or undefined\n   *\n   * @param text achievementUuid\n   */\n  public getTitleByUuid(uuid: string) {\n    return this.getAchievement(uuid).title;\n  }\n\n  /**\n   * Returns XP earned from the achievement\n   *\n   * @param uuid Achievement Uuid\n   */\n  public getAchievementXp(uuid: string) {\n    const achievement = this.getAchievement(uuid);\n    if (achievement.isVariableXp) {\n      return this.listGoals(achievement.uuid).reduce((xp, goal) => xp + goal.count, 0);\n    } else {\n      return achievement.xp;\n    }\n  }\n\n  /**\n   * Returns total XP earned from all achievements\n   */\n  public getTotalXp() {\n    return this.getAllCompletedAchievements().reduce(\n      (totalXp, achievement) => totalXp + this.getAchievementXp(achievement.uuid),\n      0\n    );\n  }\n\n  /**\n   * Returns the achievement progress percentage in fraction\n   *\n   * @param uuid Achievement Uuid\n   */\n  public getProgressFrac(uuid: string) {\n    return this.nodeList.has(uuid) ? this.nodeList.get(uuid)!.progressFrac : 0;\n  }\n\n  /**\n   * Returns the achievement status\n   *\n   * @param uuid Achievement Uuid\n   */\n  public getStatus(uuid: string) {\n    return this.nodeList.has(uuid) ? this.nodeList.get(uuid)!.status : AchievementStatus.ACTIVE;\n  }\n\n  /**\n   * Returns the achievement display deadline\n   *\n   * @param uuid Achievement Uuid\n   */\n  public getDisplayDeadline(uuid: string) {\n    return this.nodeList.has(uuid) ? this.nodeList.get(uuid)!.displayDeadline : undefined;\n  }\n\n  /**\n   * Returns true if the child is a prerequisite of parent achievement\n   *\n   * @param uuid Parent Achievement Uuid\n   * @param childUuid Child Achievement Uuid\n   */\n  public isImmediateChild(uuid: string, childUuid: string) {\n    return this.nodeList.has(uuid) ? this.nodeList.get(uuid)!.children.has(childUuid) : false;\n  }\n\n  /**\n   * Returns a set of prerequisite uuid\n   *\n   * @param uuid Achievement Uuid\n   */\n  public getImmediateChildren(uuid: string) {\n    return this.nodeList.has(uuid) ? this.nodeList.get(uuid)!.children : new Set<string>();\n  }\n\n  /**\n   * Returns true if an achievement is a descendant of ancestor achievement\n   *\n   * @param uuid Ancestor Achievement Uuid\n   * @param childUuid Descendant Achievement Uuid\n   */\n  public isDescendant(uuid: string, childUuid: string) {\n    return this.nodeList.has(uuid) ? this.nodeList.get(uuid)!.descendant.has(childUuid) : false;\n  }\n\n  /**\n   * Returns a set of descendant uuid\n   *\n   * @param uuid Achievement Uuid\n   */\n  public getDescendants(uuid: string) {\n    return this.nodeList.has(uuid) ? this.nodeList.get(uuid)!.descendant : new Set<string>();\n  }\n\n  /**\n   * Returns the total XP of the achievement and all its descendants\n   *\n   * @param uuid Achievement uuid\n   */\n  public getDescendantXp(uuid: string) {\n    let totalXp = this.getAchievementXp(uuid);\n\n    this.getDescendants(uuid).forEach(descendantUuid => {\n      if (this.isCompleted(this.getAchievement(descendantUuid))) {\n        totalXp += this.getAchievementXp(descendantUuid);\n      }\n    });\n\n    return totalXp;\n  }\n\n  /**\n   * Returns a list of achievementUuid that may be a prerequisite of the achievement\n   *\n   * @param uuid Achievement Uuid\n   */\n  public listAvailablePrerequisiteUuids(uuid: string) {\n    return this.getAllAchievementUuids().filter(\n      target =>\n        target !== uuid && !this.isDescendant(uuid, target) && !this.isDescendant(target, uuid)\n    );\n  }\n\n  /**\n   * Recalculates the AchievementNode data of each achievements, O(N) operation\n   */\n  private processNodes() {\n    this.titleToUuid = new Map();\n\n    this.nodeList.forEach(node => {\n      const { title, uuid } = node.achievement;\n      this.titleToUuid.set(title, uuid);\n\n      node.achievement.prerequisiteUuids = uniq(node.achievement.prerequisiteUuids);\n      node.achievement.goalUuids = uniq(node.achievement.goalUuids);\n\n      this.generateParentReference(node);\n      this.generateDescendant(node);\n      this.generateDisplayDeadline(node);\n      this.generateXp(node);\n      this.generateProgressFrac(node);\n      this.generateStatus(node);\n    });\n  }\n\n  private processGoals() {\n    this.textToUuid = new Map();\n\n    this.goalList.forEach(goal => {\n      const { text, uuid } = goal;\n      this.textToUuid.set(text, uuid);\n      goal.achievementUuids = uniq(goal.achievementUuids);\n    });\n  }\n\n  /**\n   * Returns a new nodeList constructed based on achievements\n   *\n   * @param achievements an array of AchievementItem\n   */\n  private constructNodeList(achievements: AchievementItem[]) {\n    const nodeList = new Map<string, AchievementNode>();\n    achievements.forEach(achievement =>\n      nodeList.set(achievement.uuid, new AchievementNode(cloneDeep(achievement)))\n    );\n    return nodeList;\n  }\n\n  /**\n   * Returns a new goalList constructed based on goals\n   *\n   * @param goals an array of AchievementGoal\n   */\n  private constructGoalList(goals: AchievementGoal[]) {\n    const goalList = new Map<string, AchievementGoal>();\n    goals.forEach(goal => goalList.set(goal.uuid, cloneDeep(goal)));\n    return goalList;\n  }\n\n  /**\n   * Mark immediate children's parent as this node\n   *\n   * @param node The AchievementNode\n   */\n  private generateParentReference(node: AchievementNode) {\n    // Mark immediate childeren\n    for (const childUuid of node.children) {\n      this.nodeList.get(childUuid)?.parents.add(node.achievement.uuid);\n    }\n  }\n\n  /**\n   * Recursively append grandchildren's uuid to children, O(N) operation\n   *\n   * @param node the AchievementNode\n   */\n  private generateDescendant(node: AchievementNode) {\n    for (const childUuid of node.descendant) {\n      if (childUuid === node.achievement.uuid) {\n        const { title } = node.achievement;\n        // Note: not the best error handling practice, but as long as admin verifies the\n        // data in AchievementPreview and do not publish new achievements with circular\n        // dependency error, it should be suffice\n        showDangerMessage(`Circular dependency detected in achievement ${title}`, 30000);\n      }\n      for (const grandchildUuid of this.getDescendants(childUuid)) {\n        // Newly added grandchild is appended to the back of the set.\n        node.descendant.add(grandchildUuid);\n        // Hence the great grandchildren will be added when the iterator reaches there\n      }\n    }\n  }\n\n  /**\n   * Set the node's display deadline by comparing with all descendants' deadlines\n   *\n   * Displays the closest unexpired deadline of all descendants. If none (e.g. descendant\n   * deadlines are expired or undefined), then display the node's own deadline\n   *\n   * @param node the AchievementNode\n   */\n  private generateDisplayDeadline(node: AchievementNode) {\n    // Comparator of two deadlines\n    const compareDeadlines = (\n      displayDeadline: Date | undefined,\n      currentDeadline: Date | undefined\n    ) => {\n      if (currentDeadline === undefined || isExpired(currentDeadline)) {\n        // currentDeadline undefined or expired, nothing change\n        return displayDeadline;\n      } else if (displayDeadline === undefined) {\n        return currentDeadline;\n      } else {\n        // currentDeadline unexpired, displayDeadline may or may not expired\n        // hence display the closest unexpired deadline\n        return isExpired(displayDeadline) || currentDeadline < displayDeadline\n          ? currentDeadline\n          : displayDeadline;\n      }\n    };\n\n    // Temporary array of all descendants' deadlines\n    const descendantDeadlines: (Date | undefined)[] = [];\n    for (const childUuid of node.descendant) {\n      const childDeadline = this.getAchievement(childUuid).deadline;\n      descendantDeadlines.push(childDeadline);\n    }\n\n    // Reduces the temporary array to a single Date value\n    node.displayDeadline = descendantDeadlines.reduce(compareDeadlines, node.displayDeadline);\n  }\n\n  /**\n   * Calculates the achievement attained XP\n   *\n   * @param node the AchievementNode\n   */\n  private generateXp(node: AchievementNode) {\n    const { goalUuids, isVariableXp } = node.achievement;\n    const allGoalsCompleted = goalUuids.reduce(\n      (completion, goalUuid) => completion && this.getGoal(goalUuid).completed,\n      true\n    );\n    node.xp = allGoalsCompleted\n      ? isVariableXp\n        ? goalUuids.reduce((xp, goalUuid) => xp + this.getGoal(goalUuid).count, 0)\n        : node.achievement.xp\n      : 0;\n  }\n\n  /**\n   * Calculates the achievement progress percentage between [0..1]\n   *\n   * @param node the AchievementNode\n   */\n  private generateProgressFrac(node: AchievementNode) {\n    const { goalUuids } = node.achievement;\n    if (goalUuids.length === 0) {\n      node.progressFrac = 0;\n    } else {\n      const num = goalUuids.reduce((count, goalUuid) => count + this.getGoal(goalUuid).count, 0);\n      const denom = goalUuids.reduce(\n        (count, goalUuid) => count + this.getGoal(goalUuid).targetCount,\n        0\n      );\n      node.progressFrac = Math.min(denom === 0 ? 0 : num / denom, 1);\n    }\n  }\n\n  /**\n   * Generates the achievement status\n   *\n   * AchievementStatus.COMPLETED if contains goals and all goals completed\n   * AchievementStatus.ACTIVE if has at least 1 active descendant\n   * AchievementStatus.EXPIRED if none of the above\n   *\n   * @param node the AchievementNode\n   */\n  private generateStatus(node: AchievementNode) {\n    // checks if the achievement's goals and prereqs are complete\n    const achievementCompleted = this.isCompleted(node.achievement);\n\n    const hasReleased = isReleased(node.achievement.release);\n    const hasUnexpiredDeadline = !isExpired(node.displayDeadline);\n\n    node.status = achievementCompleted\n      ? AchievementStatus.COMPLETED\n      : hasReleased\n      ? hasUnexpiredDeadline\n        ? AchievementStatus.ACTIVE\n        : AchievementStatus.EXPIRED\n      : AchievementStatus.UNRELEASED;\n  }\n\n  /**\n   * Reassign the achievement position number without changing their orders.\n   * If anchorUuid and anchorPosition is supplied, the anchor achievement is\n   * guaranteed to have its position set at anchorPosition.\n   *\n   * @param anchorUuid anchor achievementUuid\n   * @param anchorPosition anchor position\n   */\n  private normalizePositions(anchorUuid?: string, anchorPosition?: number) {\n    let newPosition = 1;\n    this.getAllAchievements()\n      .filter(achievement => achievement.isTask)\n      .filter(achievement => achievement.position >= 0) // force negative position tasks to show up on top\n      .sort((taskA, taskB) => taskA.position - taskB.position)\n      .forEach(sortedTask => (sortedTask.position = newPosition++));\n    this.getAllAchievements()\n      .filter(achievement => !achievement.isTask)\n      .forEach(nonTask => (nonTask.position = 0));\n\n    // If some achievement got misplaced at the anchorPosition, swap it\n    // back with the anchor achievement\n    if (anchorUuid && anchorPosition && anchorPosition !== 0) {\n      const anchorAchievement = this.getAchievement(anchorUuid);\n      const newPosition = anchorAchievement.position;\n      if (newPosition !== anchorPosition) {\n        const misplacedAchievement = this.getAllAchievements().find(\n          achievement => achievement.position === anchorPosition\n        );\n        if (misplacedAchievement) {\n          misplacedAchievement.position = newPosition;\n          anchorAchievement.position = anchorPosition;\n        }\n      }\n    }\n  }\n}\n\nexport default AchievementInferencer;\n","import React from 'react';\nimport Draggable, { DraggableEventHandler } from 'react-draggable';\n\nimport Repl, { ReplProps } from '../repl/Repl';\n\ntype DraggableReplProps = {\n  position: { x: number; y: number };\n  onDrag: DraggableEventHandler;\n  disabled: boolean;\n  replProps: ReplProps;\n};\n\nconst DraggableRepl: React.FC<DraggableReplProps> = (props: DraggableReplProps) => {\n  return (\n    <Draggable\n      axis=\"y\"\n      handle=\"#dragHandle\"\n      position={props.position}\n      bounds={{ top: -500, left: 0, right: 0, bottom: 0 }}\n      onDrag={props.onDrag}\n      disabled={props.disabled}\n    >\n      <div className=\"mobile-draggable\">\n        {!props.disabled ? (\n          <div className=\"handle enabled\" id=\"dragHandle\">\n            {['1', '2', '3'].map(i => (\n              <div className=\"circle\" key={i} />\n            ))}\n          </div>\n        ) : (\n          <div className=\"handle disabled\" id=\"draghandle\">\n            {['1', '2', '3'].map(i => (\n              <div className=\"circle\" key={i} />\n            ))}\n          </div>\n        )}\n        <div className=\"REPL-content\">\n          <Repl {...props.replProps} />\n        </div>\n      </div>\n    </Draggable>\n  );\n};\n\nexport default DraggableRepl;\n","import { Ace } from 'ace-builds';\nimport React from 'react';\nimport Draggable, { DraggableEvent, DraggableEventHandler } from 'react-draggable';\nimport Keyboard from 'react-simple-keyboard';\n\nexport type MobileKeyboardProps = OwnProps;\n\ntype OwnProps = {\n  targetKeyboardInput: Ace.Editor | null;\n};\n\nconst MobileKeyboard: React.FC<MobileKeyboardProps> = props => {\n  const [isKeyboardShown, setIsKeyoardShown] = React.useState(false);\n  const [buttonContent, setButtonContent] = React.useState('ᐸ');\n  const [keyboardPosition, setKeyboardPosition] = React.useState({ x: 0, y: 0 });\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const onDrag: DraggableEventHandler = (\n    e: DraggableEvent,\n    position: { x: number; y: number }\n  ): void => {\n    setKeyboardPosition(position);\n  };\n\n  const handlePreventDefault = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.preventDefault();\n  };\n\n  const handleHiding = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (isKeyboardShown) {\n      //do hiding\n      document.getElementById('mobile-keyboard-toggle')!.style.setProperty('display', 'none');\n      document.getElementById('mobile-floating-toggle')!.style.setProperty('width', '42px');\n      document.getElementById('mobile-floating-toggle')!.style.setProperty('opacity', '0.6');\n      setButtonContent('ᐸ');\n      setIsKeyoardShown(false);\n    } else {\n      //do showing\n      document.getElementById('mobile-keyboard-toggle')!.style.setProperty('display', 'flex');\n      document.getElementById('mobile-floating-toggle')!.style.setProperty('width', '99%');\n      document.getElementById('mobile-floating-toggle')!.style.setProperty('opacity', '1');\n      setButtonContent('ᐳ');\n      setIsKeyoardShown(true);\n    }\n  };\n\n  const handleRowToggle = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setSelectedIndex((selectedIndex + 1) % 3);\n    const keyboardClass = document.getElementsByClassName('simple-keyboard-shortcut');\n    Array.from(keyboardClass as HTMLCollectionOf<HTMLElement>)[0].style.top =\n      -selectedIndex * 45 + 'px';\n  };\n\n  const handleKeyPress = (button: string) => {\n    if (!props.targetKeyboardInput) {\n      return;\n    }\n    const editor = props.targetKeyboardInput;\n    if (button === '{arrowleft}') {\n      editor.navigateLeft();\n    } else if (button === '{arrowright}') {\n      editor.navigateRight();\n    } else if (button === '{bksp}') {\n      editor.remove('left');\n    } else if (button === '{tab}') {\n      editor.insert('\\t');\n    } else if (['+', '-', '*', '/', '%', '=>', '===', '&&', '||'].includes(button)) {\n      editor.insert(' ' + button + ' ');\n    } else {\n      editor.insert(button);\n    }\n  };\n\n  const keyboardProps = {\n    onKeyPress: handleKeyPress,\n    baseClass: 'simple-keyboard-shortcut',\n    layout: {\n      default: [\n        '{ } ( ) \" \\' _ => ;',\n        '{tab} && || ! < > = ===',\n        '+ - * / % // {arrowleft} {arrowright}'\n      ]\n    },\n    buttonTheme: [\n      {\n        class: 'mobile-navigation',\n        buttons: '{arrowleft} {arrowright}'\n      },\n      {\n        class: 'big-buttons',\n        buttons: '=== &&'\n      }\n    ],\n    theme: 'hg-theme-default',\n    preventMouseDownDefault: true,\n    disableCaretPositioning: false\n  };\n\n  return (\n    <Draggable\n      axis=\"y\"\n      handle=\"#floating-dragHandle\"\n      position={keyboardPosition}\n      bounds={{ top: -200, left: 0, right: 0, bottom: +200 }}\n      onDrag={onDrag}\n    >\n      <div className=\"mobile-floating-keyboard\" id=\"mobile-floating-toggle\">\n        <button\n          className=\"mobile-floating-toggle\"\n          onClick={handleHiding}\n          onMouseDown={handlePreventDefault}\n        >\n          {buttonContent}\n        </button>\n\n        <div className=\"mobile-keyboard-toggle-container\" id=\"mobile-keyboard-toggle\">\n          <div className=\"mobile-keyboard-container\">\n            <Keyboard {...keyboardProps} />\n          </div>\n          <button\n            className=\"mobile-keyboard-row-toggle\"\n            onClick={handleRowToggle}\n            onMouseDown={handlePreventDefault}\n          >\n            ⤸\n          </button>\n        </div>\n\n        <div id=\"floating-dragHandle\">:</div>\n      </div>\n    </Draggable>\n  );\n};\n\nexport default MobileKeyboard;\n","import { Button, Classes } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport classNames from 'classnames';\n\nimport { ControlBarProps } from '../../controlBar/ControlBar';\n\nconst MobileControlBar: React.FC<ControlBarProps> = props => {\n  const controlBarMenu = (\n    <div className=\"mobile-control-bar\">\n      {props.editorButtons}\n      {props.flowButtons}\n      {props.editingWorkspaceButtons}\n    </div>\n  );\n\n  return (\n    <Popover2 content={controlBarMenu} autoFocus={false}>\n      <Button\n        icon={IconNames.COG}\n        className={classNames(Classes.MINIMAL, 'mobile-control-bar-button')}\n      />\n    </Popover2>\n  );\n};\n\nexport default MobileControlBar;\n","import { Classes, Icon, Tab, Tabs } from '@blueprintjs/core';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { ControlBarProps } from '../../controlBar/ControlBar';\nimport GenericSideContent, {\n  generateIconId,\n  GenericSideContentProps\n} from '../../sideContent/GenericSideContent';\nimport { SideContentTab, SideContentType } from '../../sideContent/SideContentTypes';\nimport { propsAreEqual } from '../../utils/MemoizeHelper';\nimport { WorkspaceLocation } from '../../workspace/WorkspaceTypes';\nimport MobileControlBar from './MobileControlBar';\n\nexport type MobileSideContentProps = Omit<GenericSideContentProps, 'renderFunction'> &\n  Required<Pick<GenericSideContentProps, 'onChange'>> &\n  StateProps &\n  MobileControlBarProps;\n\ntype StateProps = {\n  selectedTabId: SideContentType;\n  renderActiveTabPanelOnly?: boolean;\n};\n\ntype MobileControlBarProps = {\n  mobileControlBarProps: ControlBarProps;\n};\n\nconst renderTab = (tab: SideContentTab, isIOS: boolean, workspaceLocation?: WorkspaceLocation) => {\n  const iconSize = 20;\n  const tabId = tab.id === undefined ? tab.label : tab.id;\n  const tabTitle: JSX.Element = (\n    <Tooltip2\n      content={tab.label}\n      onOpening={() => {\n        // Handles iOS hover requiring double taps to press the button\n        if (isIOS) {\n          document.getElementById(generateIconId(tabId))?.click();\n        }\n      }}\n    >\n      <div className=\"side-content-tooltip\" id={generateIconId(tabId)}>\n        <Icon icon={tab.iconName} iconSize={iconSize} />\n      </div>\n    </Tooltip2>\n  );\n\n  return (\n    <Tab\n      key={tabId}\n      id={tabId}\n      title={tabTitle}\n      disabled={tab.disabled}\n      className=\"side-content-tab\"\n    />\n  );\n};\n\nconst MobileSideContent: React.FC<MobileSideContentProps> = React.memo(\n  ({ selectedTabId, renderActiveTabPanelOnly, mobileControlBarProps, ...otherProps }) => {\n    const isIOS = /iPhone|iPod/.test(navigator.platform);\n\n    /**\n     * renderedPanels is not memoized since a change in selectedTabId (when changing tabs)\n     * would force React.useMemo to recompute the nullary function anyway\n     */\n    const renderedPanels = (dynamicTabs: SideContentTab[]) => {\n      // TODO: Fix the CSS of all the panels (e.g. subst_visualizer)\n      const renderPanel = (tab: SideContentTab, workspaceLocation?: WorkspaceLocation) => {\n        if (!tab.body) return;\n\n        const tabBody: JSX.Element = workspaceLocation\n          ? {\n              ...tab.body,\n              props: {\n                ...tab.body.props,\n                workspaceLocation\n              }\n            }\n          : tab.body;\n\n        // Render the other panels only when their corresponding tab is selected\n        return (\n          <div\n            className={\n              tab.id === selectedTabId ? 'mobile-selected-panel' : 'mobile-unselected-panel'\n            }\n            key={tab.id}\n          >\n            {tabBody}\n          </div>\n        );\n      };\n\n      return dynamicTabs.map(tab => renderPanel(tab, otherProps.workspaceLocation));\n    };\n\n    return (\n      <GenericSideContent\n        {...otherProps}\n        renderFunction={(dynamicTabs, changeTabsCallback) => {\n          return (\n            <>\n              {renderedPanels(dynamicTabs)}\n              <div className=\"mobile-tabs-container\">\n                <Tabs\n                  id=\"mobile-side-content\"\n                  onChange={changeTabsCallback}\n                  renderActiveTabPanelOnly={renderActiveTabPanelOnly}\n                  selectedTabId={selectedTabId}\n                  className={classNames(Classes.DARK, 'mobile-side-content')}\n                >\n                  {dynamicTabs.map(tab => renderTab(tab, isIOS, otherProps.workspaceLocation))}\n\n                  {/* Render the bottom ControlBar 'Cog' button only in the Playground or Sicp Workspace */}\n                  {(otherProps.workspaceLocation === 'playground' ||\n                    otherProps.workspaceLocation === 'sicp') && (\n                    <MobileControlBar {...mobileControlBarProps} />\n                  )}\n                </Tabs>\n              </div>\n            </>\n          );\n        }}\n      />\n    );\n  },\n  propsAreEqual\n);\n\nexport default MobileSideContent;\n","import { FocusStyleManager } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Ace } from 'ace-builds';\nimport React from 'react';\nimport { DraggableEvent } from 'react-draggable';\nimport { useMediaQuery } from 'react-responsive';\nimport { Prompt } from 'react-router';\n\nimport ControlBar from '../controlBar/ControlBar';\nimport EditorContainer, { EditorContainerProps } from '../editor/EditorContainer';\nimport McqChooser, { McqChooserProps } from '../mcqChooser/McqChooser';\nimport { ReplProps } from '../repl/Repl';\nimport { SideBarTab } from '../sideBar/SideBar';\nimport { SideContentTab, SideContentType } from '../sideContent/SideContentTypes';\nimport DraggableRepl from './DraggableRepl';\nimport MobileKeyboard from './MobileKeyboard';\nimport MobileSideContent, { MobileSideContentProps } from './mobileSideContent/MobileSideContent';\n\nexport type MobileWorkspaceProps = StateProps;\n\ntype StateProps = {\n  editorContainerProps?: EditorContainerProps; // Either editorProps or mcqProps must be provided\n  hasUnsavedChanges?: boolean; // Not used in Playground\n  mcqProps?: McqChooserProps; // Not used in Playground\n  replProps: ReplProps;\n  sideBarProps: {\n    tabs: SideBarTab[];\n  };\n  mobileSideContentProps: MobileSideContentProps;\n};\n\nconst MobileWorkspace: React.FC<MobileWorkspaceProps> = props => {\n  const isAndroid = /Android/.test(navigator.userAgent);\n  const isPortrait = useMediaQuery({ orientation: 'portrait' });\n  const [draggableReplPosition, setDraggableReplPosition] = React.useState({ x: 0, y: 0 });\n\n  // For disabling draggable Repl when in stepper tab\n  const [isDraggableReplDisabled, setIsDraggableReplDisabled] = React.useState(false);\n\n  // Get rid of the focus border on blueprint components\n  FocusStyleManager.onlyShowFocusOnTabs();\n\n  // Handles the panel height when the mobile top controlbar is rendered in the Assessment Workspace\n  React.useEffect(() => {\n    if (props.mobileSideContentProps.workspaceLocation === 'assessment') {\n      document.documentElement.style.setProperty(\n        '--mobile-panel-height',\n        'calc(100% - 100px - 1.1rem)'\n      );\n    }\n\n    return () => {\n      document.documentElement.style.setProperty('--mobile-panel-height', 'calc(100% - 70px)');\n    };\n    // This effect should only trigger once during the initial rendering of the workspace\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * The following effect prevents the bottom MobileSideContent tabs from floating above the\n   * soft keyboard on Android devices. This is due to the viewport height changing when the soft\n   * keyboard is up on Android devices. IOS devices are not affected.\n   */\n  React.useEffect(() => {\n    if (isPortrait && isAndroid) {\n      document.documentElement.style.setProperty('overflow', 'auto');\n      const metaViewport = document.querySelector('meta[name=viewport]');\n      metaViewport!.setAttribute(\n        'content',\n        'height=' + window.innerHeight + ', width=device-width'\n      );\n    }\n\n    // Reset above CSS and hides draggable Repl on orientation change\n    return () => {\n      if (isAndroid) {\n        document.documentElement.style.setProperty('overflow', 'hidden');\n        const metaViewport = document.querySelector('meta[name=viewport]');\n        metaViewport!.setAttribute(\n          'content',\n          'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0'\n        );\n      }\n      handleHideRepl();\n    };\n  }, [isPortrait, isAndroid]);\n\n  const [targetKeyboardInput, setTargetKeyboardInput] = React.useState<Ace.Editor | null>(null);\n\n  const clearTargetKeyboardInput = () => setTargetKeyboardInput(null);\n\n  const enableMobileKeyboardForEditor = (props: EditorContainerProps): EditorContainerProps => {\n    const onFocus = (event: any, editor?: Ace.Editor) => {\n      if (props.onFocus) {\n        props.onFocus(event, editor);\n      }\n      if (!editor) {\n        return;\n      }\n      setTargetKeyboardInput(editor);\n    };\n    const onBlur = (event: any, editor?: Ace.Editor) => {\n      if (props.onBlur) {\n        props.onBlur(event, editor);\n      }\n      clearTargetKeyboardInput();\n    };\n    return {\n      ...props,\n      onFocus,\n      onBlur\n    };\n  };\n\n  const enableMobileKeyboardForRepl = (props: ReplProps): ReplProps => {\n    const onFocus = (editor: Ace.Editor) => {\n      if (props.onFocus) {\n        props.onFocus(editor);\n      }\n      setTargetKeyboardInput(editor);\n    };\n    const onBlur = () => {\n      if (props.onBlur) {\n        props.onBlur();\n      }\n      clearTargetKeyboardInput();\n    };\n    return {\n      ...props,\n      onFocus,\n      onBlur\n    };\n  };\n\n  const createWorkspaceInput = () => {\n    if (props.editorContainerProps) {\n      const editorContainerProps = {\n        ...props.editorContainerProps\n      };\n      if (editorContainerProps.editorVariant === 'sourcecast') {\n        editorContainerProps.setDraggableReplPosition = () => handleShowRepl(-100);\n      }\n      return <EditorContainer {...enableMobileKeyboardForEditor(props.editorContainerProps)} />;\n    } else {\n      return <McqChooser {...props.mcqProps!} />;\n    }\n  };\n\n  /**\n   * The following 3 'react-draggable' handlers include the updating of CSS variable:\n   * '--mobile-repl-height'.\n   *\n   * 'position: absolute' for the 'react-draggable' component is used in conjunction with the\n   * modification of the mobile browser's meta viewport height to ensure that the draggable\n   * component (and bottom MobileSideContentTabs) remain at the bottom of the screen when the\n   * keyboard is up on Android devices. This is because viewport height changes by default when\n   * the keyboard is up on Android devices, causing unexpected UI distortions. IOS devices do\n   * not have this problem.\n   * ('position: fixed' does not work as the element would then be positioned relative to the\n   * browser window, and would still be 'pushed up' by the keyboard)\n   *\n   * Since 'position: absolute' elements take up 'full space', we have to dynamically update the\n   * height of the entire draggable component ('--mobile-repl-height') to ensure that the draggable\n   * component is 'properly closed' and does not continue to display content underneath the\n   * MobileSideContentTabs.\n   *\n   * This also ensures proper scrolling of overflowing Repl outputs inside the dynamically resizing\n   * draggable component.\n   */\n  const onDrag = (e: DraggableEvent, position: { x: number; y: number }): void => {\n    document.documentElement.style.setProperty(\n      '--mobile-repl-height',\n      Math.max(-position.y, 0) + 'px'\n    );\n    setDraggableReplPosition(position);\n  };\n\n  const handleShowRepl = (offset: number) => {\n    document.documentElement.style.setProperty('--mobile-repl-height', Math.max(-offset, 0) + 'px');\n    setDraggableReplPosition({ x: 0, y: offset });\n  };\n\n  const handleHideRepl = () => {\n    setDraggableReplPosition({ x: 0, y: 0 });\n    document.documentElement.style.setProperty('--mobile-repl-height', '0px');\n  };\n\n  const handleTabChangeForRepl = (newTabId: SideContentType, prevTabId: SideContentType) => {\n    // Evaluate program upon pressing the run tab.\n    if (newTabId === SideContentType.mobileEditorRun) {\n      props.editorContainerProps?.handleEditorEval();\n    }\n\n    // Show the REPL upon pressing the run tab if the previous tab is not listed below.\n    if (\n      newTabId === SideContentType.mobileEditorRun &&\n      !(\n        prevTabId === SideContentType.substVisualizer ||\n        prevTabId === SideContentType.autograder ||\n        prevTabId === SideContentType.testcases\n      )\n    ) {\n      handleShowRepl(-300);\n    } else {\n      handleHideRepl();\n    }\n\n    // Disable draggable REPL when on the files & stepper tab.\n    if (\n      newTabId === SideContentType.files ||\n      newTabId === SideContentType.substVisualizer ||\n      (prevTabId === SideContentType.substVisualizer &&\n        newTabId === SideContentType.mobileEditorRun)\n    ) {\n      setIsDraggableReplDisabled(true);\n    } else {\n      setIsDraggableReplDisabled(false);\n    }\n  };\n\n  // Convert sidebar tabs with a side content tab ID into side content tabs.\n  const sideBarTabs: SideContentTab[] = props.sideBarProps.tabs.filter(tab => tab.id !== undefined);\n\n  const mobileEditorTab: SideContentTab = React.useMemo(\n    () => ({\n      label: 'Editor',\n      iconName: IconNames.EDIT,\n      body: null,\n      id: SideContentType.mobileEditor\n    }),\n    []\n  );\n\n  const mobileRunTab: SideContentTab = React.useMemo(\n    () => ({\n      label: 'Run',\n      iconName: IconNames.PLAY,\n      body: null,\n      id: SideContentType.mobileEditorRun\n    }),\n    []\n  );\n\n  const updatedMobileSideContentProps = () => {\n    return {\n      ...props.mobileSideContentProps,\n      onChange: (\n        newTabId: SideContentType,\n        prevTabId: SideContentType,\n        event: React.MouseEvent<HTMLElement>\n      ) => {\n        props.mobileSideContentProps.onChange(newTabId, prevTabId, event);\n        handleTabChangeForRepl(newTabId, prevTabId);\n      },\n      tabs: {\n        beforeDynamicTabs: [\n          ...sideBarTabs,\n          mobileEditorTab,\n          ...props.mobileSideContentProps.tabs.beforeDynamicTabs\n        ],\n        afterDynamicTabs: [...props.mobileSideContentProps.tabs.afterDynamicTabs, mobileRunTab]\n      }\n    };\n  };\n\n  const inAssessmentWorkspace =\n    props.mobileSideContentProps.workspaceLocation === 'assessment' ||\n    props.mobileSideContentProps.workspaceLocation === 'githubAssessment';\n\n  return (\n    <div className=\"workspace mobile-workspace\">\n      {props.hasUnsavedChanges ? (\n        <Prompt\n          message={'You have changes that may not be saved. Are you sure you want to leave?'}\n        />\n      ) : null}\n\n      {/* Render the top ControlBar when it is the Assessment Workspace */}\n      {inAssessmentWorkspace && (\n        <ControlBar {...props.mobileSideContentProps.mobileControlBarProps} />\n      )}\n\n      <div>\n        <div className=\"mobile-editor-panel\">{createWorkspaceInput()}</div>\n        <MobileSideContent {...updatedMobileSideContentProps()} />\n      </div>\n\n      <DraggableRepl\n        key=\"repl\"\n        position={draggableReplPosition}\n        onDrag={onDrag}\n        disabled={isDraggableReplDisabled}\n        replProps={enableMobileKeyboardForRepl(props.replProps)}\n      />\n\n      <MobileKeyboard targetKeyboardInput={targetKeyboardInput} />\n    </div>\n  );\n};\n\nexport default MobileWorkspace;\n","import { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\n\ntype ControlBarReturnToAcademyButtonProps = {\n  onClick?(): any;\n};\n\nexport const ControlBarReturnToAcademyButton: React.FC<ControlBarReturnToAcademyButtonProps> = ({\n  onClick\n}) => {\n  return (\n    <ControlButton\n      label=\"Return to Academy\"\n      icon={IconNames.ARROW_RIGHT}\n      onClick={onClick}\n      options={{ iconOnRight: true }}\n    />\n  );\n};\n","import { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\nimport { ControlBarReturnToAcademyButton } from './ControlBarReturnToAcademyButton';\n\ntype ControlBarNextButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  onClickNext?(): any;\n  onClickReturn?(): any;\n};\n\ntype StateProps = {\n  key: string;\n  questionProgress: [number, number] | null;\n};\n\nexport const ControlBarNextButton: React.FC<ControlBarNextButtonProps> = props => {\n  return props.questionProgress![0] === props.questionProgress![1] ? (\n    <ControlBarReturnToAcademyButton onClick={props.onClickReturn} key=\"return_to_academy\" />\n  ) : (\n    <ControlButton\n      label=\"Next\"\n      icon={IconNames.ARROW_RIGHT}\n      onClick={props.onClickNext}\n      options={{ iconOnRight: true }}\n    />\n  );\n};\n","import React from 'react';\nimport { RefObject } from 'react';\n\nimport { IVisible } from '../EnvVisualizerTypes';\n\n/**\n * class to implement the IVisible interface, used by both compact and non-compact components.\n */\nexport abstract class Visible implements IVisible {\n  protected _x: number = 0;\n  protected _y: number = 0;\n  protected _width: number = 0;\n  protected _height: number = 0;\n  protected _isDrawn: boolean = false;\n  x(): number {\n    return this._x;\n  }\n  y(): number {\n    return this._y;\n  }\n  width(): number {\n    return this._width;\n  }\n  height(): number {\n    return this._height;\n  }\n  isDrawn(): boolean {\n    return this._isDrawn;\n  }\n  reset(): void {\n    this._isDrawn = false;\n  }\n  ref: RefObject<any> = React.createRef();\n  abstract draw(key?: number): React.ReactNode;\n}\n","/** configs for dimensions */\nexport enum CompactConfig {\n  CanvasMinHeight = 300,\n  CanvasMinWidth = 300,\n  CanvasPaddingX = 30,\n  CanvasPaddingY = 30,\n\n  LevelPaddingX = 10,\n  LevelPaddingY = 10,\n\n  FrameMinWidth = 100,\n  FramePaddingX = 20,\n  FramePaddingY = 30,\n  FrameMarginX = 30,\n  FrameMarginY = 10,\n  FrameCornerRadius = 3,\n\n  FnRadius = 15,\n  FnInnerRadius = 3,\n  FnTooltipOpacity = 0.3,\n\n  DataMinWidth = 20,\n  DataUnitWidth = 40,\n  DataUnitHeight = 40,\n  DataCornerRadius = 3,\n  DataHitStrokeWidth = 5,\n\n  TextPaddingX = 10,\n  TextPaddingY = 30,\n  TextMargin = 5,\n  TextMinWidth = 30,\n  FontFamily = 'monospace, monospace',\n  FontSize = 15,\n  FontStyle = 'normal',\n  FontVariant = 'normal',\n\n  HoveredColor = '#32CD32',\n\n  ArrowHeadSize = 10,\n  ArrowStrokeWidth = 1,\n  ArrowHitStrokeWidth = 5,\n  ArrowHoveredStrokeWidth = 2,\n  ArrowCornerRadius = 40,\n\n  SA_WHITE = '#999999',\n  SA_BLUE = '#2c3e50',\n  PRINT_BACKGROUND = 'white',\n\n  ConstantColon = ':= ',\n  VariableColon = ': ',\n  Ellipsis = '…',\n\n  UnassignedData = '',\n  GlobalFrameDefaultText = ':::pre-declared names::',\n  GlobalEnvId = '-1'\n}\n\nexport const ShapeDefaultProps = {\n  preventDefault: false\n};\n","/** configs for dimensions */\nexport enum Config {\n  CanvasMinHeight = 300,\n  CanvasMinWidth = 300,\n  CanvasPaddingX = 30,\n  CanvasPaddingY = 30,\n\n  LevelPaddingX = 10,\n  LevelPaddingY = 10,\n\n  FrameMinWidth = 100,\n  FramePaddingX = 20,\n  FramePaddingY = 30,\n  FrameMarginX = 60,\n  FrameMarginY = 100,\n  FrameCornerRadius = 3,\n\n  FnRadius = 15,\n  FnInnerRadius = 3,\n  FnTooltipOpacity = 0.6,\n\n  DataMinWidth = 20,\n  DataUnitWidth = 40,\n  DataUnitPaddingY = 40,\n  DataUnitPaddingX = 50,\n  DataUnitHeight = 40,\n  DataCornerRadius = 3,\n  DataHitStrokeWidth = 5,\n  DataGroupMaxDist = 500,\n\n  TextPaddingX = 10,\n  TextPaddingY = 20,\n  TextMargin = 5,\n  TextMinWidth = 30,\n  FontFamily = 'monospace, monospace',\n  FontSize = 15,\n  FontStyle = 'normal',\n  FontVariant = 'normal',\n\n  HoveredColor = '#32CD32',\n\n  ArrowHeadSize = 10,\n  ArrowStrokeWidth = 1,\n  ArrowHitStrokeWidth = 5,\n  ArrowHoveredStrokeWidth = 2,\n  ArrowUnhoveredOpacity = 0.8,\n  ArrowCornerRadius = 10,\n  ArrowMinHeight = 100,\n  ArrowNumLanes = 5,\n  ArrowLaneInterval = 1, // lane for next arrow = previous lane + lane interval % num lanes.\n  FrameArrowStrokeWidth = 2,\n  FrameArrowHoveredStrokeWidth = 2.5,\n  MaxExportWidth = 20000,\n  MaxExportHeight = 12000,\n\n  SA_WHITE = '#999999',\n  SA_BLUE = '#2c3e50',\n  PRINT_BACKGROUND = 'white',\n\n  ConstantColon = ':= ',\n  VariableColon = ': ',\n  Ellipsis = '…',\n\n  UnassignedData = '',\n  GlobalFrameDefaultText = ':::pre-declared names::',\n  GlobalEnvId = '-1'\n}\n\nexport const ShapeDefaultProps = {\n  preventDefault: false\n};\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport React from 'react';\nimport { Group, Label as KonvaLabel, Tag as KonvaTag, Text as KonvaText } from 'react-konva';\n\nimport EnvVisualizer from '../EnvVisualizer';\nimport { Config, ShapeDefaultProps } from '../EnvVisualizerConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { Data, IHoverable } from '../EnvVisualizerTypes';\nimport { getTextWidth, setHoveredCursor, setUnhoveredCursor } from '../EnvVisualizerUtils';\nimport { Frame } from './Frame';\nimport { Visible } from './Visible';\n\nexport interface TextOptions {\n  maxWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  fontStyle: string;\n  fontVariant: string;\n  isStringIdentifiable: boolean;\n}\n\nexport const defaultOptions: TextOptions = {\n  maxWidth: Number.MAX_VALUE, // maximum width this text should be\n  fontFamily: Config.FontFamily.toString(), // default is Arial\n  fontSize: Number(Config.FontSize), // in pixels. Default is 12\n  fontStyle: Config.FontStyle.toString(), // can be normal, bold, or italic. Default is normal\n  fontVariant: Config.FontVariant.toString(), // can be normal or small-caps. Default is normal\n  isStringIdentifiable: false // if true, contain strings within double quotation marks \"\". Default is false\n};\n\n/** this class encapsulates a string to be drawn onto the canvas */\nexport class Text extends Visible implements IHoverable {\n  readonly _hoveredWidth: number;\n\n  readonly partialStr: string; // truncated string representation of data\n  readonly fullStr: string; // full string representation of data\n\n  readonly options: TextOptions = defaultOptions;\n  readonly frame?: Frame;\n\n  constructor(\n    readonly data: Data,\n    x: number,\n    y: number,\n    /** additional options (for customization of text) */\n    options: Partial<TextOptions> = {},\n    frame?: Frame\n  ) {\n    super();\n    this._x = x;\n    this._y = y;\n    this.frame = frame;\n    this.options = { ...this.options, ...options };\n\n    const { fontSize, fontStyle, fontFamily, maxWidth, isStringIdentifiable } = this.options;\n\n    this.fullStr = this.partialStr = isStringIdentifiable\n      ? JSON.stringify(data) || String(data)\n      : String(data);\n    this._height = fontSize;\n\n    const widthOf = (s: string) => getTextWidth(s, `${fontStyle} ${fontSize}px ${fontFamily}`);\n    this._hoveredWidth = widthOf(this.partialStr);\n    if (this._hoveredWidth > maxWidth) {\n      let truncatedText = Config.Ellipsis.toString();\n      let i = 0;\n      while (widthOf(this.partialStr.substring(0, i) + Config.Ellipsis.toString()) < maxWidth) {\n        truncatedText = this.partialStr.substring(0, i++) + Config.Ellipsis.toString();\n      }\n      this._width = widthOf(truncatedText);\n      this.partialStr = truncatedText;\n    } else {\n      this._width = Math.max(Config.TextMinWidth, widthOf(this.partialStr));\n    }\n  }\n\n  hoveredWidth(): number {\n    return this._hoveredWidth;\n  }\n  updatePosition = (x: number, y: number) => {\n    this._x = x;\n    this._y = y;\n  };\n  onMouseEnter = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    setHoveredCursor(currentTarget);\n    this.ref.current.moveToTop();\n    this.ref.current.show();\n    currentTarget.getLayer()?.draw();\n  };\n\n  onMouseLeave = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    setUnhoveredCursor(currentTarget);\n    this.ref.current.hide();\n    currentTarget.getLayer()?.draw();\n  };\n\n  draw(): React.ReactNode {\n    const props = {\n      fontFamily: this.options.fontFamily,\n      fontSize: this.options.fontSize,\n      fontStyle: this.options.fontStyle,\n      fill: EnvVisualizer.getPrintableMode()\n        ? Config.SA_BLUE.toString()\n        : Config.SA_WHITE.toString()\n    };\n    return (\n      <Group key={Layout.key++} onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n        <KonvaLabel x={this.x()} y={this.y()}>\n          <KonvaText {...ShapeDefaultProps} key={Layout.key++} text={this.partialStr} {...props} />\n        </KonvaLabel>\n        <KonvaLabel x={this.x()} y={this.y()} ref={this.ref} visible={false} listening={false}>\n          <KonvaTag\n            {...ShapeDefaultProps}\n            fill={EnvVisualizer.getPrintableMode() ? 'white' : 'black'}\n            opacity={0.5}\n            listening={false}\n          />\n          <KonvaText\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            text={this.fullStr}\n            {...props}\n            listening={false}\n          />\n        </KonvaLabel>\n      </Group>\n    );\n  }\n}\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Arrow as KonvaArrow, Group as KonvaGroup, Path as KonvaPath } from 'react-konva';\n\nimport EnvVisualizer from '../../EnvVisualizer';\nimport { Config, ShapeDefaultProps } from '../../EnvVisualizerConfig';\nimport { Layout } from '../../EnvVisualizerLayout';\nimport { IHoverable, IVisible, StepsArray } from '../../EnvVisualizerTypes';\nimport {\n  setHoveredCursor,\n  setHoveredStyle,\n  setUnhoveredCursor,\n  setUnhoveredStyle\n} from '../../EnvVisualizerUtils';\nimport { Frame } from '../Frame';\nimport { Text } from '../Text';\nimport { Visible } from '../Visible';\n\n/** this class encapsulates an arrow to be drawn between 2 points */\nexport class GenericArrow<Source extends IVisible, Target extends IVisible>\n  extends Visible\n  implements IHoverable\n{\n  points: number[] = [];\n  source: Source;\n  target: Target | undefined;\n\n  private _path: string = '';\n  private selected: boolean = false;\n  readonly unhovered_opacity: number = Config.ArrowUnhoveredOpacity;\n  readonly hovered_opacity: number = 1;\n\n  constructor(source: Source) {\n    super();\n    this.source = source;\n    this._x = source.x();\n    this._y = source.y();\n  }\n  path() {\n    return this._path;\n  }\n  to(target: Target): GenericArrow<Source, Target> {\n    this.target = target;\n    this._width = Math.abs(target.x() - this.source.x());\n    this._height = Math.abs(target.y() - this.source.y());\n    return this;\n  }\n  isSelected(): boolean {\n    return this.selected;\n  }\n  /**\n   * Calculates the steps that this arrows takes.\n   * The arrow is decomposed into numerous straight line segments, each of which we\n   * can consider as a step of dx in the x direction and of dy in the y direction.\n   * The line segment is thus defined by 2 points (x, y) and (x + dx, y + dy)\n   * where (x, y) is the ending coordinate of the previous line segment.\n   * This function returns an array of such steps, represented by an array of functions\n   *  [ (x, y) => [x + dx1, y + dy1], (x, y) => [x + dx2, y + dy2], ... ].\n   * From this, we can retrieve the points that make up the arrow as such:\n   * (from.x from.y), (from.x + dx1, from.y + dy1), (from.x + dx1 + dx2, from.y + dy1 + dy2), ..\n   *\n   * Note that the functions need not be of the form (x, y) => [x + dx, y + dy];\n   * (x, y) => [to.x, to.y] is valid as well, and is used to specify a step to the ending coordinates\n   *\n   * @return an array of steps represented by functions\n   */\n  protected calculateSteps(): StepsArray {\n    const to = this.target;\n    if (!to) return [];\n    return [() => [to.x(), to.y()]];\n  }\n  getStrokeWidth(): number {\n    return Number(Config.ArrowStrokeWidth);\n  }\n  onMouseEnter(e: KonvaEventObject<MouseEvent>) {\n    setHoveredCursor(e.target);\n    setHoveredStyle(e.currentTarget, {\n      strokeWidth: Number(Config.ArrowHoveredStrokeWidth)\n    });\n    this.ref.current.opacity = this.unhovered_opacity;\n  }\n  onClick({ currentTarget }: KonvaEventObject<MouseEvent>) {\n    this.selected = !this.selected;\n    if (!this.isSelected()) {\n      if (\n        !(this.source instanceof Text && this.source.frame?.isSelected()) &&\n        !(this.source instanceof Frame && this.source.isSelected())\n      ) {\n        setUnhoveredStyle(currentTarget, {\n          strokeWidth: this.getStrokeWidth()\n        });\n        this.ref.current.opacity = this.unhovered_opacity;\n      } else {\n        setHoveredStyle(currentTarget, {\n          strokeWidth: Number(Config.ArrowHoveredStrokeWidth) * this.unhovered_opacity\n        });\n        this.ref.current.opacity = this.hovered_opacity;\n      }\n    }\n  }\n  onMouseLeave(e: KonvaEventObject<MouseEvent>) {\n    setUnhoveredCursor(e.target);\n    if (!this.isSelected()) {\n      if (\n        (this.source instanceof Text && this.source.frame?.isSelected()) ||\n        (this.source instanceof Frame && this.source.isSelected())\n      ) {\n        setHoveredStyle(e.currentTarget, {\n          strokeWidth: Number(Config.ArrowHoveredStrokeWidth) * this.unhovered_opacity\n        });\n        this.ref.current.opacity = this.hovered_opacity;\n      } else {\n        setUnhoveredStyle(e.currentTarget, {\n          strokeWidth: this.getStrokeWidth()\n        });\n        this.ref.current.opacity = this.unhovered_opacity;\n      }\n    }\n  }\n  draw() {\n    const points = this.calculateSteps().reduce<Array<number>>(\n      (points, step) => [...points, ...step(points[points.length - 2], points[points.length - 1])],\n      [this.source.x(), this.source.y()]\n    );\n    points.splice(0, 2);\n\n    let path = '';\n    // starting point\n    path += `M ${points[0]} ${points[1]} `;\n    if (points.length === 4) {\n      // end the path if the line only has starting and ending coordinates\n      path += `L ${points[2]} ${points[3]} `;\n    } else {\n      let n = 0;\n      while (n < points.length - 4) {\n        const [xa, ya, xb, yb, xc, yc] = points.slice(n, n + 6);\n        const dx1 = (xb - xa) / 2;\n        const dx2 = (xc - xb) / 2;\n        const dy1 = (yb - ya) / 2;\n        const dy2 = (yc - yb) / 2;\n        const r1 = Math.sqrt(Math.pow(dx1, 2) + Math.pow(dy1, 2)) / 2;\n        const r2 = Math.sqrt(Math.pow(dx2, 2) + Math.pow(dy2, 2)) / 2;\n        const br = Math.min(Config.ArrowCornerRadius, r1, r2);\n        const x1 = xb - (br * dx1) / r1;\n        const y1 = yb - (br * dy1) / r1;\n        const x2 = xb + (br * dx2) / r2;\n        const y2 = yb + (br * dy2) / r2;\n\n        // draw quadratic curves over corners\n        path += `L ${x1} ${y1} Q ${xb} ${yb} ${x2} ${y2} `;\n        n += 2;\n      }\n    }\n    // end path\n    path += `L ${points[points.length - 2]} ${points[points.length - 1]} `;\n    this._path = path;\n    return (\n      <KonvaGroup\n        key={Layout.key++}\n        ref={this.ref}\n        onMouseEnter={e => this.onMouseEnter(e)}\n        onMouseLeave={e => this.onMouseLeave(e)}\n        onClick={e => this.onClick(e)}\n        opacity={this.unhovered_opacity}\n      >\n        <KonvaPath\n          {...ShapeDefaultProps}\n          stroke={\n            EnvVisualizer.getPrintableMode()\n              ? Config.SA_BLUE.toString()\n              : Config.SA_WHITE.toString()\n          }\n          strokeWidth={this.getStrokeWidth()}\n          hitStrokeWidth={Number(Config.ArrowHitStrokeWidth)}\n          data={path}\n          key={Layout.key++}\n        />\n        <KonvaArrow\n          {...ShapeDefaultProps}\n          points={points.slice(points.length - 4)}\n          fill={\n            EnvVisualizer.getPrintableMode()\n              ? Config.SA_BLUE.toString()\n              : Config.SA_WHITE.toString()\n          }\n          strokeEnabled={false}\n          pointerWidth={Number(Config.ArrowHeadSize)}\n          pointerLength={Number(Config.ArrowHeadSize)}\n          key={Layout.key++}\n        />\n      </KonvaGroup>\n    );\n  }\n}\n","import { KonvaEventObject } from 'konva/lib/Node';\n\nimport { Config } from '../../EnvVisualizerConfig';\nimport { StepsArray } from '../../EnvVisualizerTypes';\nimport { setHoveredStyle, setUnhoveredStyle } from '../../EnvVisualizerUtils';\nimport { ArrowLane } from '../ArrowLane';\nimport { Frame } from '../Frame';\nimport { GenericArrow } from './GenericArrow';\n\n/** this class encapsulates an GenericArrow to be drawn between 2 points */\nexport class ArrowFromFrame extends GenericArrow<Frame, Frame> {\n  protected calculateSteps() {\n    const target = this.target;\n    if (!target) return [];\n\n    const steps: StepsArray = [(x, y) => [x + Config.FramePaddingX, y]];\n    const differentiateByParentFrame = true;\n    if (target instanceof Frame) {\n      // To differentiate frames pointing to different parent frames\n      if (differentiateByParentFrame) {\n        steps.push((x, y) => [\n          x,\n          ArrowLane.getHorizontalLaneAfterSource(target, y).getPosition(target)\n        ]);\n      } else {\n        steps.push((x, y) => [x, y - Config.FrameMarginY]);\n      }\n      steps.push((x, y) => [target.x() + Config.FramePaddingX, y]);\n    }\n\n    steps.push((x, y) => [target.x() + Config.FramePaddingX, target.y() + target.height()]);\n    return steps;\n  }\n\n  getStrokeWidth(): number {\n    return Number(Config.FrameArrowStrokeWidth);\n  }\n\n  onClick(e: KonvaEventObject<MouseEvent>) {\n    super.onClick(e);\n    setHoveredStyle(e.currentTarget, {\n      strokeWidth: Number(Config.FrameArrowHoveredStrokeWidth)\n    });\n  }\n\n  onMouseEnter(e: KonvaEventObject<MouseEvent>) {\n    super.onMouseEnter(e);\n    setHoveredStyle(e.currentTarget, {\n      strokeWidth: Number(Config.FrameArrowHoveredStrokeWidth)\n    });\n  }\n\n  onMouseLeave(e: KonvaEventObject<MouseEvent>) {\n    super.onMouseLeave(e);\n    if (this.isSelected() || (this.source as Frame).isSelected()) {\n      setHoveredStyle(e.currentTarget, {\n        strokeWidth: Number(Config.FrameArrowStrokeWidth)\n      });\n    } else {\n      setUnhoveredStyle(e.currentTarget, {\n        strokeWidth: Number(Config.FrameArrowStrokeWidth)\n      });\n    }\n  }\n}\n","import React, { RefObject } from 'react';\nimport { Rect } from 'react-konva';\n\nimport EnvVisualizer from '../EnvVisualizer';\nimport { Config, ShapeDefaultProps } from '../EnvVisualizerConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { Data } from '../EnvVisualizerTypes';\nimport { ArrayValue } from './values/ArrayValue';\nimport { Visible } from './Visible';\n\n/** this classes encapsulates an empty array */\nexport class ArrayEmptyUnit extends Visible {\n  readonly value: null = null;\n\n  readonly data: Data = [];\n  ref: RefObject<any> = React.createRef();\n\n  constructor(readonly parent: ArrayValue) {\n    super();\n    this._x = this.parent.x();\n    this._y = this.parent.y();\n    this._height = this.parent.height();\n    this._width = this.parent.width();\n  }\n\n  updatePosition = () => {\n    this._x = this.parent.x();\n    this._y = this.parent.y();\n  };\n\n  draw(): React.ReactNode {\n    return (\n      <Rect\n        {...ShapeDefaultProps}\n        key={Layout.key++}\n        x={this.x()}\n        y={this.y()}\n        width={this.width()}\n        height={this.height()}\n        stroke={\n          EnvVisualizer.getPrintableMode() ? Config.SA_BLUE.toString() : Config.SA_WHITE.toString()\n        }\n        ref={this.ref}\n      />\n    );\n  }\n}\n","import { Config } from '../../EnvVisualizerConfig';\nimport { StepsArray } from '../../EnvVisualizerTypes';\nimport { ArrowLane } from '../ArrowLane';\nimport { Frame } from '../Frame';\nimport { FnValue } from '../values/FnValue';\nimport { GlobalFnValue } from '../values/GlobalFnValue';\nimport { GenericArrow } from './GenericArrow';\n\n/** this class encapsulates an GenericArrow to be drawn between 2 points */\nexport class ArrowFromFn extends GenericArrow<FnValue | GlobalFnValue, Frame> {\n  protected calculateSteps() {\n    const source = this.source;\n    const target = this.target;\n    if (!target) return [];\n\n    const steps: StepsArray = [(x, y) => [x + Config.FnRadius * 3, y]];\n\n    if (target.y() < source.y() && source.y() < target.y() + target.height()) {\n      steps.push((x, y) => [x, y - Config.FnRadius * 2]);\n      steps.push((x, y) => [target.x() + (source.x() < target.x() ? 0 : target.width()), y]);\n    } else {\n      steps.push((x, y) => [x, y - Config.FnRadius * 2]);\n      steps.push((x, y) => [\n        ArrowLane.getVerticalLaneBeforeTarget(source, x).getPosition(source),\n        y\n      ]);\n      steps.push((x, y) => [\n        x,\n        ArrowLane.getHorizontalLaneBeforeTarget(target, y).getPosition(target)\n      ]);\n      steps.push((x, y) => [target.x() + (target.x() < x ? target.width() : 0), y]);\n      steps.push((x, y) => [x, target.y() + (target.y() < source.y() ? target.height() : 0)]);\n    }\n\n    return steps;\n  }\n}\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport React from 'react';\n\nimport { Data, IHoverable, ReferenceType } from '../../EnvVisualizerTypes';\nimport { Visible } from '../Visible';\n\n/** the value of a `Binding` or an `ArrayUnit` */\nexport abstract class Value extends Visible implements IHoverable {\n  abstract onMouseEnter(e: KonvaEventObject<MouseEvent>): void;\n  abstract onMouseLeave(e: KonvaEventObject<MouseEvent>): void;\n\n  /** draw logic */\n  abstract draw(key?: number): React.ReactNode;\n  /** add reference (binding / array unit) to this value */\n  addReference(newReference: ReferenceType): void {\n    this.referencedBy.push(newReference);\n  }\n  abstract updatePosition(pos?: { x: number; y: number }): void;\n\n  /** references to this value */\n  abstract referencedBy: ReferenceType[];\n  /** the underlying data of this value */\n  abstract readonly data: Data;\n}\n","import { Environment } from 'Clang-slang/dist/types';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport React, { RefObject } from 'react';\nimport {\n  Circle,\n  Group,\n  Label as KonvaLabel,\n  Tag as KonvaTag,\n  Text as KonvaText\n} from 'react-konva';\n\nimport EnvVisualizer from '../../EnvVisualizer';\nimport { Config, ShapeDefaultProps } from '../../EnvVisualizerConfig';\nimport { Layout } from '../../EnvVisualizerLayout';\nimport { EnvTreeNode, FnTypes, IHoverable, ReferenceType } from '../../EnvVisualizerTypes';\nimport {\n  getBodyText,\n  getNonEmptyEnv,\n  getParamsText,\n  getTextWidth,\n  setHoveredStyle,\n  setUnhoveredStyle\n} from '../../EnvVisualizerUtils';\nimport { ArrowFromFn } from '../arrows/ArrowFromFn';\nimport { GenericArrow } from '../arrows/GenericArrow';\nimport { Binding } from '../Binding';\nimport { Frame } from '../Frame';\nimport { GlobalFnValue } from './GlobalFnValue';\nimport { Value } from './Value';\n\n/** this class encapsulates a JS Slang function (not from the global frame) that\n *  contains extra props such as environment and fnName */\nexport class FnValue extends Value implements IHoverable {\n  centerX: number;\n  readonly tooltipWidth: number;\n  readonly exportTooltipWidth: number;\n  readonly radius: number = Config.FnRadius;\n  readonly innerRadius: number = Config.FnInnerRadius;\n\n  /** name of this function */\n  readonly fnName: string;\n  readonly paramsText: string;\n  readonly bodyText: string;\n  readonly exportBodyText: string;\n  readonly tooltip: string;\n  readonly exportTooltip: string;\n  private selected: boolean = false;\n  private _arrow: GenericArrow<FnValue | GlobalFnValue, Frame> | undefined;\n\n  /** the parent/enclosing environment of this fn value */\n  readonly enclosingEnvNode: EnvTreeNode;\n  readonly ref: RefObject<any> = React.createRef();\n  readonly labelRef: RefObject<any> = React.createRef();\n\n  constructor(\n    /** underlying JS Slang function (contains extra props) */\n    readonly data: FnTypes,\n    /** what this value is being referenced by */\n    readonly referencedBy: ReferenceType[]\n  ) {\n    super();\n    Layout.memoizeValue(this);\n\n    // derive the coordinates from the main reference (binding / array unit)\n    const mainReference = this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x = mainReference.frame.x() + mainReference.frame.width() + Config.FrameMarginX / 4;\n      this._y = mainReference.y();\n      this.centerX = this._x + this.radius * 2;\n    } else {\n      if (mainReference.isLastUnit) {\n        this._x = mainReference.x() + Config.DataUnitWidth * 2;\n        this._y = mainReference.y() + Config.DataUnitHeight / 2 - this.radius;\n      } else {\n        this._x = mainReference.x();\n        this._y = mainReference.y() + mainReference.parent.height() + Config.DataUnitHeight;\n      }\n      this.centerX = this._x + Config.DataUnitWidth / 2;\n      this._x = this.centerX - this.radius * 2;\n    }\n    this._y += this.radius;\n\n    this._width = this.radius * 4;\n    this._height = this.radius * 2;\n\n    this.enclosingEnvNode = Layout.environmentTree.getTreeNode(\n      getNonEmptyEnv(this.data.environment) as Environment\n    ) as EnvTreeNode;\n    this.fnName = this.data.functionName;\n\n    this.paramsText = `params: (${getParamsText(this.data)})`;\n    this.bodyText = `body: ${getBodyText(this.data)}`;\n    this.exportBodyText =\n      (this.bodyText.length > 23 ? this.bodyText.slice(0, 20) : this.bodyText)\n        .split('\\n')\n        .slice(0, 2)\n        .join('\\n') + ' ...';\n    this.tooltip = `${this.paramsText}\\n${this.bodyText}`;\n    this.exportTooltip = `${this.paramsText}\\n${this.exportBodyText}`;\n    this.tooltipWidth = Math.max(getTextWidth(this.paramsText), getTextWidth(this.bodyText));\n    this.exportTooltipWidth = Math.max(\n      getTextWidth(this.paramsText),\n      getTextWidth(this.exportBodyText)\n    );\n  }\n\n  isSelected(): boolean {\n    return this.selected;\n  }\n  arrow(): GenericArrow<FnValue | GlobalFnValue, Frame> | undefined {\n    return this._arrow;\n  }\n  updatePosition(): void {\n    const mainReference =\n      this.referencedBy.find(\n        x => x instanceof Binding && (x as Binding).frame.envTreeNode === this.enclosingEnvNode\n      ) || this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x = mainReference.frame.x() + mainReference.frame.width() + Config.FrameMarginX / 4;\n      this._y = mainReference.y();\n      this.centerX = this._x + this.radius * 2;\n    } else {\n      if (mainReference.isLastUnit) {\n        this._x = mainReference.x() + Config.DataUnitWidth * 2;\n        this._y = mainReference.y() + Config.DataUnitHeight / 2 - this.radius;\n      } else {\n        this._x = mainReference.x();\n        this._y = mainReference.y() + mainReference.parent.height() + Config.DataUnitHeight;\n      }\n      this.centerX = this._x + Config.DataUnitWidth / 2;\n      this._x = this.centerX - this.radius * 2;\n    }\n    this._y += this.radius;\n  }\n  reset(): void {\n    super.reset();\n    this.referencedBy.length = 0;\n  }\n  onMouseEnter = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    this.labelRef.current.moveToTop();\n    this.labelRef.current.show();\n    setHoveredStyle(currentTarget);\n  };\n\n  onMouseLeave = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    if (!this.selected) {\n      this.labelRef.current.hide();\n      setUnhoveredStyle(currentTarget);\n    } else {\n      const container = currentTarget.getStage()?.container();\n      container && (container.style.cursor = 'default');\n    }\n  };\n  onClick = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    this.selected = !this.selected;\n    if (!this.selected) {\n      this.labelRef.current.hide();\n      setUnhoveredStyle(currentTarget);\n    } else {\n      this.labelRef.current.show();\n      setHoveredStyle(currentTarget);\n    }\n  };\n\n  draw(): React.ReactNode {\n    this._isDrawn = true;\n    this._arrow =\n      this.enclosingEnvNode.frame && new ArrowFromFn(this).to(this.enclosingEnvNode.frame);\n    return (\n      <React.Fragment key={Layout.key++}>\n        <Group\n          onMouseEnter={e => this.onMouseEnter(e)}\n          onMouseLeave={e => this.onMouseLeave(e)}\n          onClick={e => this.onClick(e)}\n          ref={this.ref}\n        >\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX - this.radius}\n            y={this.y()}\n            radius={this.radius}\n            stroke={\n              EnvVisualizer.getPrintableMode()\n                ? Config.SA_BLUE.toString()\n                : Config.SA_WHITE.toString()\n            }\n          />\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX - this.radius}\n            y={this.y()}\n            radius={this.innerRadius}\n            fill={\n              EnvVisualizer.getPrintableMode()\n                ? Config.SA_BLUE.toString()\n                : Config.SA_WHITE.toString()\n            }\n          />\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX + this.radius}\n            y={this.y()}\n            radius={this.radius}\n            stroke={\n              EnvVisualizer.getPrintableMode()\n                ? Config.SA_BLUE.toString()\n                : Config.SA_WHITE.toString()\n            }\n          />\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX + this.radius}\n            y={this.y()}\n            radius={this.innerRadius}\n            fill={\n              EnvVisualizer.getPrintableMode()\n                ? Config.SA_BLUE.toString()\n                : Config.SA_WHITE.toString()\n            }\n          />\n        </Group>\n        {EnvVisualizer.getPrintableMode() ? (\n          <KonvaLabel\n            x={this.x() + this.width() + Config.TextPaddingX * 2}\n            y={this.y() - Config.TextPaddingY}\n            visible={true}\n            ref={this.labelRef}\n          >\n            <KonvaTag stroke=\"black\" fill={'white'} opacity={Number(Config.FnTooltipOpacity)} />\n            <KonvaText\n              text={this.exportTooltip}\n              fontFamily={Config.FontFamily.toString()}\n              fontSize={Number(Config.FontSize)}\n              fontStyle={Config.FontStyle.toString()}\n              fill={Config.SA_BLUE.toString()}\n              padding={5}\n            />\n          </KonvaLabel>\n        ) : (\n          <KonvaLabel\n            x={this.x() + this.width() + Config.TextPaddingX * 2}\n            y={this.y() - Config.TextPaddingY}\n            visible={false}\n            ref={this.labelRef}\n          >\n            <KonvaTag stroke=\"black\" fill={'black'} opacity={Number(Config.FnTooltipOpacity)} />\n            <KonvaText\n              text={this.tooltip}\n              fontFamily={Config.FontFamily.toString()}\n              fontSize={Number(Config.FontSize)}\n              fontStyle={Config.FontStyle.toString()}\n              fill={Config.SA_WHITE.toString()}\n              padding={5}\n            />\n          </KonvaLabel>\n        )}\n        {this._arrow?.draw()}\n      </React.Fragment>\n    );\n  }\n}\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport React, { RefObject } from 'react';\nimport {\n  Circle,\n  Group,\n  Label as KonvaLabel,\n  Tag as KonvaTag,\n  Text as KonvaText\n} from 'react-konva';\n\nimport EnvVisualizer from '../../EnvVisualizer';\nimport { Config, ShapeDefaultProps } from '../../EnvVisualizerConfig';\nimport { Layout } from '../../EnvVisualizerLayout';\nimport { ReferenceType } from '../../EnvVisualizerTypes';\nimport {\n  getBodyText,\n  getParamsText,\n  getTextWidth,\n  setHoveredStyle,\n  setUnhoveredStyle\n} from '../../EnvVisualizerUtils';\nimport { ArrowFromFn } from '../arrows/ArrowFromFn';\nimport { GenericArrow } from '../arrows/GenericArrow';\nimport { Binding } from '../Binding';\nimport { Frame } from '../Frame';\nimport { FnValue } from './FnValue';\nimport { Value } from './Value';\n\n/** this encapsulates a function from the global frame\n * (which has no extra props such as environment or fnName) */\nexport class GlobalFnValue extends Value {\n  centerX: number;\n  readonly tooltipWidth: number;\n  readonly exportTooltipWidth: number;\n  readonly radius: number = Config.FnRadius;\n  readonly innerRadius: number = Config.FnInnerRadius;\n  private _arrow: GenericArrow<FnValue | GlobalFnValue, Frame> | undefined;\n\n  readonly paramsText: string;\n  readonly bodyText: string;\n  readonly exportBodyText: string;\n  readonly tooltip: string;\n  readonly exportTooltip: string;\n  private selected: boolean = false;\n\n  readonly ref: RefObject<any> = React.createRef();\n  readonly labelRef: RefObject<any> = React.createRef();\n\n  constructor(\n    /** underlying function */\n    readonly data: () => any,\n    /** what this value is being referenced by */\n    readonly referencedBy: ReferenceType[]\n  ) {\n    super();\n    Layout.memoizeValue(this);\n\n    // derive the coordinates from the main reference (binding / array unit)\n    const mainReference = this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x = mainReference.frame.x() + mainReference.frame.width() + Config.FrameMarginX / 4;\n      this._y = mainReference.y();\n      this.centerX = this._x + this.radius * 2;\n    } else {\n      if (mainReference.isLastUnit) {\n        this._x = mainReference.x() + Config.DataUnitWidth * 2;\n        this._y = mainReference.y() + Config.DataUnitHeight / 2 - this.radius;\n      } else {\n        this._x = mainReference.x();\n        this._y = mainReference.y() + mainReference.parent.height() + Config.DataUnitHeight;\n      }\n      this.centerX = this._x + Config.DataUnitWidth / 2;\n      this._x = this.centerX - this.radius * 2;\n    }\n    this._y += this.radius;\n\n    this._width = this.radius * 4;\n    this._height = this.radius * 2;\n\n    this.paramsText = `params: ${getParamsText(this.data)}`;\n    this.bodyText = `body: ${getBodyText(this.data)}`;\n    this.exportBodyText =\n      (this.bodyText.length > 23 ? this.bodyText.slice(0, 20) : this.bodyText)\n        .split('\\n')\n        .slice(0, 2)\n        .join('\\n') + ' ...';\n    this.tooltip = `${this.paramsText}\\n${this.bodyText}`;\n    this.exportTooltip = `${this.paramsText}\\n${this.exportBodyText}`;\n    this.tooltipWidth =\n      Math.max(getTextWidth(this.paramsText), getTextWidth(this.bodyText)) + Config.TextPaddingX;\n    this.exportTooltipWidth = Math.max(\n      getTextWidth(this.paramsText),\n      getTextWidth(this.exportBodyText)\n    );\n  }\n\n  isSelected(): boolean {\n    return this.selected;\n  }\n  arrow(): GenericArrow<FnValue | GlobalFnValue, Frame> | undefined {\n    return this._arrow;\n  }\n\n  updatePosition(): void {\n    const mainReference = this.referencedBy.find(x => x instanceof Binding) || this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x = mainReference.frame.x() + mainReference.frame.width() + Config.FrameMarginX / 4;\n      this._y = mainReference.y();\n      this.centerX = this._x + this.radius * 2;\n    } else {\n      if (mainReference.isLastUnit) {\n        this._x = mainReference.x() + Config.DataUnitWidth * 2;\n        this._y = mainReference.y() + Config.DataUnitHeight / 2 - this.radius;\n      } else {\n        this._x = mainReference.x();\n        this._y = mainReference.y() + mainReference.parent.height() + Config.DataUnitHeight;\n      }\n      this.centerX = this._x + Config.DataUnitWidth / 2;\n      this._x = this.centerX - this.radius * 2;\n    }\n    this._y += this.radius;\n  }\n\n  onMouseEnter = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    this.labelRef.current.show();\n    setHoveredStyle(currentTarget);\n  };\n\n  onMouseLeave = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    if (!this.selected) {\n      this.labelRef.current.hide();\n      setUnhoveredStyle(currentTarget);\n    } else {\n      const container = currentTarget.getStage()?.container();\n      container && (container.style.cursor = 'default');\n    }\n  };\n  onClick = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    this.selected = !this.selected;\n    if (!this.selected) {\n      this.labelRef.current.hide();\n      setUnhoveredStyle(currentTarget);\n    } else {\n      this.labelRef.current.show();\n      setHoveredStyle(currentTarget);\n    }\n  };\n\n  draw(): React.ReactNode {\n    this._isDrawn = true;\n    this._arrow =\n      Layout.globalEnvNode.frame && new ArrowFromFn(this).to(Layout.globalEnvNode.frame);\n    return (\n      <React.Fragment key={Layout.key++}>\n        <Group\n          onMouseEnter={e => this.onMouseEnter(e)}\n          onMouseLeave={e => this.onMouseLeave(e)}\n          onClick={e => this.onClick(e)}\n          ref={this.ref}\n        >\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX - this.radius}\n            y={this.y()}\n            radius={this.radius}\n            stroke={\n              EnvVisualizer.getPrintableMode()\n                ? Config.SA_BLUE.toString()\n                : Config.SA_WHITE.toString()\n            }\n          />\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX - this.radius}\n            y={this.y()}\n            radius={this.innerRadius}\n            fill={\n              EnvVisualizer.getPrintableMode()\n                ? Config.SA_BLUE.toString()\n                : Config.SA_WHITE.toString()\n            }\n          />\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX + this.radius}\n            y={this.y()}\n            radius={this.radius}\n            stroke={\n              EnvVisualizer.getPrintableMode()\n                ? Config.SA_BLUE.toString()\n                : Config.SA_WHITE.toString()\n            }\n          />\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX + this.radius}\n            y={this.y()}\n            radius={this.innerRadius}\n            fill={\n              EnvVisualizer.getPrintableMode()\n                ? Config.SA_BLUE.toString()\n                : Config.SA_WHITE.toString()\n            }\n          />\n        </Group>\n        {EnvVisualizer.getPrintableMode() ? (\n          <KonvaLabel\n            x={this.x() + this.width() + Config.TextPaddingX * 2}\n            y={this.y() - Config.TextPaddingY}\n            visible={true}\n            ref={this.labelRef}\n          >\n            <KonvaTag stroke=\"black\" fill={'white'} opacity={Number(Config.FnTooltipOpacity)} />\n            <KonvaText\n              text={this.exportTooltip}\n              fontFamily={Config.FontFamily.toString()}\n              fontSize={Number(Config.FontSize)}\n              fontStyle={Config.FontStyle.toString()}\n              fill={Config.SA_BLUE.toString()}\n              padding={5}\n            />\n          </KonvaLabel>\n        ) : (\n          <KonvaLabel\n            x={this.x() + this.width() + Config.TextPaddingX * 2}\n            y={this.y() - Config.TextPaddingY}\n            visible={false}\n            ref={this.labelRef}\n          >\n            <KonvaTag stroke=\"black\" fill={'black'} opacity={Number(Config.FnTooltipOpacity)} />\n            <KonvaText\n              text={this.tooltip}\n              fontFamily={Config.FontFamily.toString()}\n              fontSize={Number(Config.FontSize)}\n              fontStyle={Config.FontStyle.toString()}\n              fill={Config.SA_WHITE.toString()}\n              padding={5}\n            />\n          </KonvaLabel>\n        )}\n        {this._arrow?.draw()}\n      </React.Fragment>\n    );\n  }\n}\n","import { Config } from '../../EnvVisualizerConfig';\nimport { IVisible, StepsArray } from '../../EnvVisualizerTypes';\nimport { ArrayUnit } from '../ArrayUnit';\nimport { ArrowLane } from '../ArrowLane';\nimport { ArrayValue } from '../values/ArrayValue';\nimport { FnValue } from '../values/FnValue';\nimport { GlobalFnValue } from '../values/GlobalFnValue';\nimport { Value } from '../values/Value';\nimport { GenericArrow } from './GenericArrow';\n\n/** this class encapsulates an GenericArrow to be drawn between 2 points */\nexport class ArrowFromArrayUnit extends GenericArrow<ArrayUnit, Value> {\n  private static emergeFromTopOrBottom(steps: StepsArray, from: ArrayUnit, to: IVisible) {\n    // Move up if target above source or to the right with same vertical position.\n    // Moves up slightly more if target is to the right.\n    steps.push((x, y) => [\n      x,\n      y +\n        (to.y() > from.y() || (to.y() === from.y() && to.x() <= from.x()) ? 0.9 : -0.9) *\n          Config.DataUnitHeight\n    ]);\n  }\n  protected calculateSteps() {\n    const source = this.source as ArrayUnit;\n    const target = this.target;\n    if (!target) return [];\n\n    const steps: StepsArray = [\n      (x, y) => [x + Config.DataUnitWidth / 2, y + Config.DataUnitHeight / 2]\n    ];\n    if (target instanceof FnValue || target instanceof GlobalFnValue) {\n      if (Math.abs(target.y() - source.y()) < Config.DataUnitHeight * 2) {\n        ArrowFromArrayUnit.emergeFromTopOrBottom(steps, source, target);\n\n        steps.push(() => [target.centerX + Config.FnRadius * 2 + Config.FnRadius, target.y()]);\n        steps.push((x, y) => [x - Config.FnRadius, y]);\n      } else {\n        steps.push(() => [target.centerX + Config.FnRadius * 2, target.y()]);\n      }\n    } else if (target instanceof ArrayValue) {\n      if (source.parent === target) {\n        steps.push((x, y) => [x, y - (Config.DataUnitHeight * 3) / 4]);\n        steps.push((x, y) => [x + Config.DataUnitHeight / 3, y]);\n        steps.push((x, y) => [x, y + Config.DataUnitHeight / 4]);\n      } else if (\n        source.isLastUnit &&\n        target.x() - source.x() <= Config.DataUnitWidth * 3 &&\n        target.x() > source.x() &&\n        target.level === source.parent.level\n      ) {\n        // pointing to next element in list.\n        steps.push(() => [target.x(), target.y() + Config.DataUnitHeight / 2]);\n      } else {\n        ArrowFromArrayUnit.emergeFromTopOrBottom(steps, source, target);\n\n        const potentialVerticalLaneX = ArrowLane.getVerticalLaneAfterSource(\n          target,\n          source.x()\n        ).getPosition(target);\n        // move to vertical lane only if lane exists between source and target\n        if ((potentialVerticalLaneX - source.x()) * (potentialVerticalLaneX - target.x()) < 0) {\n          steps.push((x, y) => [potentialVerticalLaneX, y]);\n        }\n        // move to horizontal lane only if lane exists between source and target\n        const potentialHorizontalLaneY = ArrowLane.getHorizontalLaneBeforeTarget(\n          target,\n          source.y()\n        ).getPosition(target);\n        if ((potentialHorizontalLaneY - source.y()) * (potentialHorizontalLaneY - target.y()) < 0) {\n          steps.push((x, y) => {\n            return (potentialHorizontalLaneY - y) * (potentialHorizontalLaneY - target.y()) > 0\n              ? [x, y]\n              : [x, ArrowLane.getHorizontalLaneBeforeTarget(target, y).getPosition(target)];\n          });\n        }\n\n        // Move to x position closer to array on horizontal lane\n        steps.push((x, y) => {\n          let newX: number;\n          let yDiff = target.y() + Config.DataUnitHeight / 2 - y;\n          const newY =\n            target.y() + Config.DataUnitHeight / 2 - (Math.sign(yDiff) * Config.DataUnitHeight) / 2;\n          yDiff = newY - y;\n          if (x < target.x() - Config.DataUnitWidth) {\n            // move right up to the point diagonally to the left of the start of the array.\n            newX = Math.max(x + Config.DataUnitWidth, target.x() - Math.abs(yDiff));\n          } else if (\n            x >=\n            target.x() + target.units.length * Config.DataUnitWidth + Config.DataUnitWidth\n          ) {\n            // move left up to the point diagonally to the right of the end of the array.\n            newX = target.x() + target.units.length * Config.DataUnitWidth;\n            newX = Math.min(x - Config.DataUnitWidth, newX + Math.abs(yDiff));\n          } else {\n            // if current point of arrow is somewhere above / below array, move halfway to corner of some arrayunit.\n            if (x < target.x()) {\n              newX = target.x();\n            } else if (\n              x >=\n              target.x() + target.units.length * Config.DataUnitWidth + Config.DataUnitWidth\n            ) {\n              newX = target.x() + target.units.length * Config.DataUnitWidth + Config.DataUnitWidth;\n            } else {\n              const index = Math.floor((x - target.x()) / Config.DataUnitWidth);\n              newX = target.x() + Config.DataUnitWidth * index;\n            }\n            return [(x + newX) / 2, (y + newY) / 2];\n          }\n          return [newX, y];\n        });\n        // Move to corner of some arrayunit.\n        steps.push((x, y) => {\n          const index = Math.floor((x - target.x()) / Config.DataUnitWidth);\n          const yDiff = target.y() + Config.DataUnitHeight / 2 - y;\n          const newY =\n            target.y() + Config.DataUnitHeight / 2 - (Math.sign(yDiff) * Config.DataUnitHeight) / 2;\n          if (x < target.x()) {\n            return [target.x(), newY];\n          } else if (x >= target.x() + target.units.length * Config.DataUnitWidth) {\n            return [target.x() + target.units.length * Config.DataUnitWidth, newY];\n          } else {\n            return [target.x() + Config.DataUnitWidth * index, newY];\n          }\n        });\n      }\n    } else {\n      // this shouldn't happen.\n      steps.push(() => [target.x(), target.y()]);\n    }\n    return steps;\n  }\n}\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport React, { RefObject } from 'react';\nimport { Shape } from 'react-konva';\n\nimport { ShapeDefaultProps } from '../../EnvVisualizerConfig';\n\ninterface Props {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  cornerRadius: { upperLeft: number; lowerLeft: number; upperRight: number; lowerRight: number };\n  stroke: string;\n  fillEnabled: boolean;\n  hitStrokeWidth: number;\n  forwardRef: RefObject<any>;\n  onMouseEnter?: ({ currentTarget }: KonvaEventObject<MouseEvent>) => void;\n  onMouseLeave?: ({ currentTarget }: KonvaEventObject<MouseEvent>) => void;\n  onClick?: ({ currentTarget }: KonvaEventObject<MouseEvent>) => void;\n}\n\n/**\n * Represents Rectangle with rounded corners, for boundary of arrays (compact and non-compact).\n */\nexport const RoundedRect: React.FC<Props> = ({\n  x,\n  y,\n  width,\n  height,\n  cornerRadius,\n  forwardRef,\n  ...props\n}) => {\n  return (\n    <Shape\n      sceneFunc={(context, shape) => {\n        const { upperLeft, lowerLeft, upperRight, lowerRight } = cornerRadius;\n        context.beginPath();\n        context.moveTo(x + upperLeft, y);\n        context.lineTo(x + width - upperRight, y);\n        context.quadraticCurveTo(x + width, y, x + width, y + upperRight);\n        context.lineTo(x + width, y + height - lowerRight);\n        context.quadraticCurveTo(x + width, y + height, x + width - lowerRight, y + height);\n        context.lineTo(x + lowerLeft, y + height);\n        context.quadraticCurveTo(x, y + height, x, y + height - lowerLeft);\n        context.lineTo(x, y + upperLeft);\n        context.quadraticCurveTo(x, y, x + upperLeft, y);\n        context.closePath();\n        // (!) Konva specific method, it is very important\n        context.fillStrokeShape(shape);\n      }}\n      {...ShapeDefaultProps}\n      ref={forwardRef}\n      {...props}\n    />\n  );\n};\n","import React from 'react';\nimport { Line as KonvaLine } from 'react-konva';\n\nimport EnvVisualizer from '../EnvVisualizer';\nimport { Config, ShapeDefaultProps } from '../EnvVisualizerConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { ReferenceType } from '../EnvVisualizerTypes';\nimport { Visible } from './Visible';\n\n/** this classes encapsulates a null value in Source pairs or arrays */\nexport class ArrayNullUnit extends Visible {\n  arrayUnit: ReferenceType;\n  referencedBy: ReferenceType[];\n\n  constructor(referencedBy: ReferenceType[]) {\n    super();\n    this.referencedBy = referencedBy;\n    this.arrayUnit = referencedBy[0];\n    this._x = this.arrayUnit.x();\n    this._y = this.arrayUnit.y();\n    this._height = this.arrayUnit.height();\n    this._width = this.arrayUnit.width();\n  }\n\n  updatePosition = () => {\n    this._x = this.arrayUnit.x();\n    this._y = this.arrayUnit.y();\n  };\n\n  draw(): React.ReactNode {\n    return (\n      <KonvaLine\n        {...ShapeDefaultProps}\n        key={Layout.key++}\n        points={[this.x(), this.y() + this.height(), this.x() + this.width(), this.y()]}\n        stroke={\n          EnvVisualizer.getPrintableMode() ? Config.SA_BLUE.toString() : Config.SA_WHITE.toString()\n        }\n        hitStrokeWidth={Number(Config.DataHitStrokeWidth)}\n        ref={this.ref}\n        listening={false}\n      />\n    );\n  }\n}\n","import React from 'react';\n\nimport { Config } from '../../EnvVisualizerConfig';\nimport { Layout } from '../../EnvVisualizerLayout';\nimport { PrimitiveTypes, ReferenceType } from '../../EnvVisualizerTypes';\nimport { getTextWidth, isNull } from '../../EnvVisualizerUtils';\nimport { ArrayNullUnit } from '../ArrayNullUnit';\nimport { Binding } from '../Binding';\nimport { Text } from '../Text';\nimport { Value } from './Value';\n\n/** this classes encapsulates a primitive value in Source: number, string or null */\nexport class PrimitiveValue extends Value {\n  /** the text to be rendered */\n  readonly text: Text | ArrayNullUnit;\n\n  constructor(\n    /** data */\n    readonly data: PrimitiveTypes,\n    /** what this value is being referenced by */\n    readonly referencedBy: ReferenceType[]\n  ) {\n    super();\n\n    // derive the coordinates from the main reference (binding / array unit)\n    const mainReference = this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x = mainReference.x() + getTextWidth(mainReference.keyString) + Config.TextPaddingX;\n      this._y = mainReference.y();\n      this.text = new Text(this.data, this._x, this._y, { isStringIdentifiable: true });\n    } else {\n      const maxWidth = mainReference.width();\n      const textWidth = Math.min(getTextWidth(String(this.data)), maxWidth);\n      this._x = mainReference.x() + (mainReference.width() - textWidth) / 2;\n      this._y = mainReference.y() + (mainReference.height() - Config.FontSize) / 2;\n      this.text = isNull(this.data)\n        ? new ArrayNullUnit([mainReference])\n        : new Text(this.data, this.x(), this.y(), {\n            maxWidth: maxWidth,\n            isStringIdentifiable: true\n          });\n    }\n\n    this._width = this.text.width();\n    this._height = this.text.height();\n  }\n\n  reset(): void {\n    super.reset();\n    this.referencedBy.length = 0;\n  }\n  updatePosition = () => {\n    const mainReference = this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x = mainReference.x() + getTextWidth(mainReference.keyString) + Config.TextPaddingX;\n      this._y = mainReference.y();\n    } else {\n      const maxWidth = mainReference.width();\n      const textWidth = Math.min(getTextWidth(String(this.data)), maxWidth);\n      this._x = mainReference.x() + (mainReference.width() - textWidth) / 2;\n      this._y = mainReference.y() + (mainReference.height() - Config.FontSize) / 2;\n    }\n    this.text instanceof Text\n      ? this.text.updatePosition(this.x(), this.y())\n      : this.text.updatePosition();\n  };\n  onMouseEnter(): void {}\n  onMouseLeave(): void {}\n\n  draw(): React.ReactNode {\n    this._isDrawn = true;\n    return <React.Fragment key={Layout.key++}>{this.text.draw()}</React.Fragment>;\n  }\n}\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport React from 'react';\n\nimport EnvVisualizer from '../EnvVisualizer';\nimport { Config } from '../EnvVisualizerConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { Data } from '../EnvVisualizerTypes';\nimport { setHoveredStyle, setUnhoveredStyle } from '../EnvVisualizerUtils';\nimport { ArrowFromArrayUnit } from './arrows/ArrowFromArrayUnit';\nimport { GenericArrow } from './arrows/GenericArrow';\nimport { RoundedRect } from './shapes/RoundedRect';\nimport { ArrayValue } from './values/ArrayValue';\nimport { FnValue } from './values/FnValue';\nimport { GlobalFnValue } from './values/GlobalFnValue';\nimport { PrimitiveValue } from './values/PrimitiveValue';\nimport { Value } from './values/Value';\nimport { Visible } from './Visible';\n\n/** this class encapsulates a single unit (box) of array to be rendered.\n *  this unit is part of an ArrayValue */\nexport class ArrayUnit extends Visible {\n  readonly value: Value;\n\n  /** check if this is the first unit in the array */\n  readonly isFirstUnit: boolean;\n  /** check if this is the last unit in the array */\n  readonly isLastUnit: boolean;\n  /** check if this unit is the main reference of the value */\n  readonly isMainReference: boolean;\n  /** check if the value is already drawn */\n\n  parent: ArrayValue;\n  arrow: GenericArrow<ArrayUnit, Value> | undefined = undefined;\n\n  constructor(\n    /** index of this unit in its parent */\n    readonly idx: number,\n    /** the value this unit contains*/\n    readonly data: Data,\n    /** parent of this unit */\n    parent: ArrayValue\n  ) {\n    super();\n    this.parent = parent;\n    this._x = this.parent.x() + this.idx * Config.DataUnitWidth;\n    this._y = this.parent.y();\n    this._height = Config.DataUnitHeight;\n    this._width = Config.DataUnitWidth;\n    this.isFirstUnit = this.idx === 0;\n    this.isLastUnit = this.idx === this.parent.data.length - 1;\n    this.value = Layout.createValue(this.data, this);\n    this.isMainReference = this.value.referencedBy.length > 1;\n  }\n\n  updatePosition = () => {\n    this._x = this.parent.x() + this.idx * Config.DataUnitWidth;\n    this._y = this.parent.y();\n    this.value instanceof PrimitiveValue && this.value.updatePosition();\n  };\n\n  onMouseEnter = () => {\n    this.parent.units.forEach(u => {\n      setHoveredStyle(u.ref.current);\n    });\n  };\n\n  onMouseLeave = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (!this.parent.isSelected()) {\n      this.parent.units.forEach(u => {\n        setUnhoveredStyle(u.ref.current);\n      });\n    } else {\n      const container = currentTarget.getStage()?.container();\n      container && (container.style.cursor = 'default');\n    }\n  };\n\n  onClick = () => {\n    this.parent.onClick();\n  };\n\n  draw(): React.ReactNode {\n    if (this._isDrawn) return null;\n    this._isDrawn = true;\n\n    const cornerRadius = {\n      upperLeft: 0,\n      lowerLeft: 0,\n      upperRight: 0,\n      lowerRight: 0\n    };\n\n    if (this.isFirstUnit)\n      cornerRadius.upperLeft = cornerRadius.lowerLeft = Number(Config.DataCornerRadius);\n    if (this.isLastUnit)\n      cornerRadius.upperRight = cornerRadius.lowerRight = Number(Config.DataCornerRadius);\n    if (!(this.value instanceof PrimitiveValue)) {\n      this.arrow = new ArrowFromArrayUnit(this).to(this.value);\n      this.parent.addArrow(this.arrow);\n      if (this.value instanceof ArrayValue) {\n        this.value.addArrow(this.arrow);\n      }\n    }\n\n    return (\n      <React.Fragment key={Layout.key++}>\n        <RoundedRect\n          key={Layout.key++}\n          x={this.x()}\n          y={this.y()}\n          width={this.width()}\n          height={this.height()}\n          stroke={\n            EnvVisualizer.getPrintableMode()\n              ? Config.SA_BLUE.toString()\n              : Config.SA_WHITE.toString()\n          }\n          hitStrokeWidth={Number(Config.DataHitStrokeWidth)}\n          fillEnabled={false}\n          forwardRef={this.ref}\n          cornerRadius={cornerRadius}\n          onClick={this.onClick}\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n        />\n        {!(this.value instanceof FnValue || this.value instanceof GlobalFnValue) &&\n          this.value.draw()}\n        {this.arrow && this.arrow.draw()}\n      </React.Fragment>\n    );\n  }\n}\n","import React, { RefObject } from 'react';\nimport { Group, Rect } from 'react-konva';\n\nimport { Config } from '../../EnvVisualizerConfig';\nimport { Layout } from '../../EnvVisualizerLayout';\nimport { Data, ReferenceType } from '../../EnvVisualizerTypes';\nimport { setUnhoveredStyle } from '../../EnvVisualizerUtils';\nimport { ArrayEmptyUnit } from '../ArrayEmptyUnit';\nimport { ArrayLevel } from '../ArrayLevel';\nimport { ArrayUnit } from '../ArrayUnit';\nimport { ArrowFromText } from '../arrows/ArrowFromText';\nimport { GenericArrow } from '../arrows/GenericArrow';\nimport { Binding } from '../Binding';\nimport { Text } from '../Text';\nimport { Value } from './Value';\n\n/** this class encapsulates an array value in source,\n *  defined as a JS array with not 2 elements */\nexport class ArrayValue extends Value {\n  /** array of units this array is made of */\n  units: ArrayUnit[] = [];\n  private emptyUnit: ArrayEmptyUnit | undefined = undefined;\n  level: ArrayLevel | undefined;\n  private _arrows: (GenericArrow<Text, ArrayValue> | GenericArrow<ArrayUnit, Value>)[] = [];\n  private selected: boolean = false;\n  ref: RefObject<any> = React.createRef();\n  parentArray: ArrayValue | undefined = undefined;\n  arrayLevelY: number = -1;\n\n  constructor(\n    /** underlying values this array contains */\n    readonly data: Data[],\n    /** what this value is being referenced by */\n    readonly referencedBy: ReferenceType[]\n  ) {\n    super();\n    Layout.memoizeValue(this);\n\n    // derive the coordinates from the main reference (binding / array unit)\n    const mainReference = this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x = mainReference.frame.x() + mainReference.frame.width() + Config.FrameMarginX;\n      this._y = mainReference.y();\n    } else {\n      this.parentArray = mainReference.parent;\n      if (mainReference.isLastUnit) {\n        this._x = mainReference.x() + Config.DataUnitWidth * 2;\n        this._y = mainReference.y();\n      } else {\n        this._x = mainReference.x();\n        this._y = mainReference.y() + mainReference.parent.height() + Config.DataUnitHeight;\n      }\n    }\n\n    this._width = this.data.length * Config.DataUnitWidth + Config.DataMinWidth;\n    this._height = Config.DataUnitHeight;\n\n    // initialize array units from the last index\n    for (let i = this.data.length - 1; i >= 0; i--) {\n      const unit = new ArrayUnit(i, this.data[i], this);\n      this.units = [unit, ...this.units];\n    }\n  }\n  onMouseEnter(): void {}\n  onMouseLeave(): void {}\n  isSelected(): boolean {\n    return this.selected;\n  }\n  arrows(): (GenericArrow<Text, ArrayValue> | GenericArrow<ArrayUnit, Value>)[] {\n    return this._arrows;\n  }\n  reset(): void {\n    super.reset();\n    this.units.map(x => x.reset());\n    this.referencedBy.length = 0;\n    this._arrows = [];\n  }\n\n  onClick = () => {\n    this.selected = !this.selected;\n    if (!this.selected) {\n      this.units.forEach(u => {\n        setUnhoveredStyle(u.ref.current);\n      });\n      this.emptyUnit && setUnhoveredStyle(this.emptyUnit.ref.current);\n    }\n  };\n\n  setLevel(arrLevel: ArrayLevel, level: number): void {\n    this.level = arrLevel;\n    this.arrayLevelY = level;\n  }\n\n  updatePosition(pos: { x: number; y: number } = { x: -1, y: -1 }): void {\n    this._x = pos.x > 0 ? pos.x : this._x;\n    this._y = pos.y > 0 ? pos.y : this._y;\n    this.units.forEach(unit => {\n      unit.updatePosition();\n    });\n  }\n\n  addArrow = (arrow: GenericArrow<Text, ArrayValue> | GenericArrow<ArrayUnit, Value>) => {\n    this._arrows.push(arrow);\n  };\n\n  draw(): React.ReactNode {\n    if (this.isDrawn()) {\n      return null;\n    }\n    this._isDrawn = true;\n    this._arrows = (this.referencedBy.filter(x => x instanceof Binding) as Binding[]).map(x => {\n      const arrow: GenericArrow<Text, ArrayValue> = new ArrowFromText<ArrayValue>(x.key).to(this);\n      x.frame.trackObjects(this);\n      x.frame.trackObjects(arrow);\n      return arrow;\n    }) as GenericArrow<Text, ArrayValue>[];\n    if (this.units.length === 0) {\n      this.emptyUnit = new ArrayEmptyUnit(this);\n    }\n    return (\n      <Group key={Layout.key++} ref={this.ref}>\n        {this._arrows.map(arrow => arrow.draw())}\n        {this.units.length > 0 && this.units.map(unit => unit.draw())}\n        {this.emptyUnit && this.emptyUnit.draw()}\n        <Rect width={this.width()} height={this.height()} />\n      </Group>\n    );\n  }\n}\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport React from 'react';\nimport { Group, Rect } from 'react-konva';\n\nimport EnvVisualizer from '../EnvVisualizer';\nimport { Config, ShapeDefaultProps } from '../EnvVisualizerConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { Env, EnvTreeNode, IHoverable } from '../EnvVisualizerTypes';\nimport {\n  getNonEmptyEnv,\n  getTextWidth,\n  isDummyKey,\n  isPrimitiveData,\n  isUnassigned,\n  setHoveredCursor,\n  setHoveredStyle,\n  setUnhoveredCursor,\n  setUnhoveredStyle\n} from '../EnvVisualizerUtils';\nimport { ArrowFromFrame } from './arrows/ArrowFromFrame';\nimport { GenericArrow } from './arrows/GenericArrow';\nimport { Binding } from './Binding';\nimport { Level } from './Level';\nimport { Text } from './Text';\nimport { ArrayValue } from './values/ArrayValue';\nimport { Visible } from './Visible';\n\nconst frameNames = new Map([\n  ['global', 'Global'],\n  ['programEnvironment', 'Program'],\n  ['forLoopEnvironment', 'Body of for-loop'],\n  ['forBlockEnvironment', 'Control variable of for-loop'],\n  ['blockEnvironment', 'Block'],\n  ['functionBodyEnvironment', 'Function Body']\n]);\n\n/** this class encapsulates a frame of key-value bindings to be drawn on canvas */\nexport class Frame extends Visible implements IHoverable {\n  /** total height = frame height + frame title height */\n  totalHeight: number;\n  /** width of this frame + max width of the bound values */\n  totalWidth: number;\n  totalHoveredWidth: number;\n\n  /** the bindings this frame contains */\n  readonly bindings: Binding[] = [];\n  /** name of this frame to display */\n  readonly name: Text;\n  /** the level in which this frame resides */\n  level: Level | undefined;\n  /** environment associated with this frame */\n  environment: Env;\n  /** the parent/enclosing frame of this frame (the frame above it) */\n  readonly parentFrame: Frame | undefined;\n  static maxXCoord: number = -1;\n  static maxX: number = Config.CanvasPaddingX.valueOf();\n  static cumWidths: number[] = [Config.CanvasPaddingX.valueOf()];\n  static heights: number[] = [Config.CanvasPaddingY.valueOf()];\n  offsetY: number;\n  /** set of values to highlight when frame is over. */\n  private values: Visible[] = [];\n  private selected: boolean = false;\n\n  constructor(\n    /** environment tree node that contains this frame */\n    readonly envTreeNode: EnvTreeNode,\n    /** the frame to the left of this frame, on the same level. used for calculating this frame's position */\n    readonly xCoord: number,\n    readonly yCoord: number\n  ) {\n    super();\n    this._width = Config.FrameMinWidth;\n    this.level = envTreeNode.level as Level;\n    this.environment = envTreeNode.environment;\n    this.parentFrame = envTreeNode.parent?.frame;\n    this.xCoord = xCoord;\n    this.yCoord = yCoord;\n    Frame.maxXCoord = Math.max(xCoord, Frame.maxXCoord);\n    this._x = xCoord === 0 ? Config.CanvasPaddingX : Frame.cumWidths[xCoord];\n\n    this.name = new Text(\n      frameNames.get(this.environment.name) || this.environment.name,\n      this.x(),\n      this.level.y(),\n      { maxWidth: this.width() }\n    );\n    this.offsetY = this.name.height() + Config.TextPaddingY / 3;\n    this._y = this.level.y() + this.offsetY;\n    this._width = Config.FramePaddingX * 2;\n    this.totalWidth = this.width();\n    this.totalHoveredWidth = this.totalWidth;\n    this._height = Config.FramePaddingY * 2;\n    this.totalHeight = this.height() + this.name.height() + Config.TextPaddingY / 2;\n    this.update(envTreeNode);\n  }\n\n  /**\n   * Find the frame x-coordinate given a x-position.\n   * @param x absolute position\n   * @returns Largest x-coordinate smaller than or equal to a given x position.\n   */\n  static lastXCoordBelow(x: number) {\n    let l = Frame.cumWidths.length;\n    while (l--) {\n      if (Frame.cumWidths[l] <= x) {\n        return l;\n      }\n    }\n    return 0;\n  }\n\n  trackObjects(value: Visible): boolean {\n    const exists: boolean = this.values.includes(value);\n    !exists && this.values.push(value);\n    return !exists;\n  }\n\n  /**\n   * update absolute position of frame and its bindings.\n   * @param x Target x-position\n   * @param y Target y-position\n   */\n  updatePosition = (x: number, y: number) => {\n    this._x = x;\n    this._y = y + this.offsetY;\n    this.name.updatePosition(this.x(), y);\n    this.bindings.forEach(binding => {\n      binding.updatePosition(this.x(), y);\n    });\n  };\n\n  update = (envTreeNode: EnvTreeNode) => {\n    this.level = envTreeNode.level as Level;\n    this.environment = envTreeNode.environment;\n    this.offsetY = this.name.height() + Config.TextPaddingY / 3;\n    this._y = this.level.y() + this.offsetY;\n    // width of the frame = max width of the bindings in the frame + frame padding * 2\n    let maxBindingWidth = 0;\n    for (const [key, data] of Object.entries(this.environment.head)) {\n      const bindingWidth =\n        Math.max(Config.TextMinWidth, getTextWidth(key + Config.ConstantColon)) +\n        Config.TextPaddingX +\n        (isUnassigned(data)\n          ? Math.max(Config.TextMinWidth, getTextWidth(Config.UnassignedData.toString()))\n          : isPrimitiveData(data)\n          ? Math.max(Config.TextMinWidth, getTextWidth(String(data)))\n          : 0);\n      maxBindingWidth = Math.max(maxBindingWidth, bindingWidth);\n    }\n    this._width = maxBindingWidth + Config.FramePaddingX * 2;\n    this.values = [];\n\n    // initializes bindings (keys + values)\n    let prevBinding: Binding | null = null;\n    let totalWidth = this._width;\n    let exportWidth = this._width;\n    this.totalHoveredWidth = Math.max(totalWidth, this.name.hoveredWidth());\n\n    const descriptors = Object.getOwnPropertyDescriptors(this.environment.head);\n    const entries = [];\n    const dummyEntries = [];\n    for (const entry of Object.entries(descriptors)) {\n      if (isDummyKey(entry[0])) {\n        const actualEnv = getNonEmptyEnv(entry[1].value.environment);\n        if (\n          this.environment.id === Config.GlobalEnvId ||\n          (actualEnv && actualEnv.id === this.environment.id)\n        ) {\n          dummyEntries.push(entry);\n        }\n      } else {\n        entries.push(entry);\n      }\n    }\n    entries.push(...dummyEntries);\n\n    for (const [key, data] of entries) {\n      const currBinding: Binding = new Binding(key, data.value, this, prevBinding, !data.writable);\n      if (\n        this.bindings.findIndex(\n          v =>\n            v.value === currBinding.value &&\n            (currBinding.isDummyBinding || v.keyString === currBinding.keyString)\n        ) === -1\n      ) {\n        this.bindings.push(currBinding);\n        prevBinding = currBinding;\n        totalWidth = Math.max(totalWidth, currBinding.width() + Config.FramePaddingX);\n        exportWidth = Math.max(exportWidth, currBinding.exportWidth() + Config.FramePaddingX);\n        this.totalHoveredWidth = Math.max(\n          this.totalHoveredWidth,\n          currBinding.hoveredWidth() + Config.FramePaddingX\n        );\n      }\n    }\n\n    if (EnvVisualizer.getPrintableMode()) {\n      this.totalWidth = exportWidth;\n    } else {\n      this.totalWidth = totalWidth;\n    }\n\n    // derive the height of the frame from the the position of the last binding\n    this._height = prevBinding\n      ? prevBinding.y() + prevBinding.height() + Config.FramePaddingY - this.y()\n      : Config.FramePaddingY * 2;\n    this.totalHeight = this.height() + this.name.height() + Config.TextPaddingY / 2;\n    const nextX =\n      Frame.cumWidths[this.xCoord] + this.totalWidth + Config.FrameMarginX + Config.FnRadius;\n    Frame.cumWidths[this.xCoord + 1] =\n      Frame.cumWidths[this.xCoord + 1] === undefined\n        ? nextX\n        : Math.max(Frame.cumWidths[this.xCoord + 1], nextX);\n    Frame.maxX = Math.max(\n      Frame.maxX,\n      Frame.cumWidths[this.xCoord] +\n        (EnvVisualizer.getPrintableMode() ? this.totalWidth : this.totalHoveredWidth),\n      Frame.cumWidths[Frame.cumWidths.length - 1]\n    );\n    Frame.heights[this.yCoord] = Math.max(Frame.heights[this.yCoord] || 0, this.totalHeight);\n  };\n\n  static reset = () => {\n    Frame.maxX = Config.CanvasPaddingX.valueOf();\n    Frame.maxXCoord = -1;\n    Frame.cumWidths = [Config.CanvasPaddingX.valueOf()];\n    Frame.heights = [Config.CanvasPaddingY.valueOf()];\n  };\n\n  isSelected = () => {\n    return this.selected;\n  };\n\n  onMouseEnter = () => {\n    setHoveredCursor(this.ref.current);\n    setHoveredStyle(this.ref.current);\n    this.bindings.forEach(x => {\n      const arrow = x.getArrow();\n      arrow && setHoveredStyle(arrow.ref.current);\n    });\n    this.values.forEach(x => {\n      x && setHoveredStyle(x.ref.current);\n    });\n  };\n\n  onMouseLeave = () => {\n    setUnhoveredCursor(this.ref.current);\n    if (!this.selected) {\n      setUnhoveredStyle(this.ref.current);\n      this.bindings.forEach(x => {\n        const arrow = x.getArrow();\n        arrow && !arrow.isSelected() && setUnhoveredStyle(arrow.ref.current);\n      });\n      this.values.forEach(x => {\n        if (!(x instanceof ArrayValue) || !x.isSelected()) {\n          x && setUnhoveredStyle(x.ref.current);\n        }\n      });\n    }\n  };\n\n  /**\n   * Highlights frame and\n   */\n  onClick = (e: KonvaEventObject<MouseEvent>) => {\n    this.selected = !this.selected;\n    if (!this.selected) {\n      setUnhoveredStyle(this.ref.current);\n      this.bindings.forEach(x => {\n        const arrow = x.getArrow();\n        arrow && !arrow.isSelected() && setUnhoveredStyle(arrow.ref.current);\n      });\n      this.values.forEach(x => {\n        if (!(x instanceof ArrayValue) || !x.isSelected()) {\n          x && setUnhoveredStyle(x.ref.current);\n        }\n      });\n    } else {\n      setHoveredStyle(this.ref.current);\n      this.bindings.forEach(x => {\n        const arrow = x.getArrow();\n        arrow && setHoveredStyle(arrow.ref.current);\n      });\n      this.values.forEach(x => {\n        x && setHoveredStyle(x.ref.current);\n      });\n    }\n  };\n\n  draw(): React.ReactNode {\n    let arrowToParentFrame: GenericArrow<Frame, Frame> | undefined = undefined;\n    if (this.parentFrame !== undefined) {\n      arrowToParentFrame = new ArrowFromFrame(this).to(this.parentFrame);\n      this.trackObjects(arrowToParentFrame);\n    }\n    return (\n      <Group key={Layout.key++} ref={this.ref}>\n        {arrowToParentFrame && arrowToParentFrame.draw()}\n        {this.bindings.map(binding => !(binding.data instanceof ArrayValue) && binding.draw())}\n        {this.name.draw()}\n        <Rect\n          {...ShapeDefaultProps}\n          x={this.x()}\n          y={this.y()}\n          width={this.width()}\n          height={this.height()}\n          stroke={\n            EnvVisualizer.getPrintableMode()\n              ? Config.SA_BLUE.toString()\n              : Config.SA_WHITE.toString()\n          }\n          cornerRadius={Number(Config.FrameCornerRadius)}\n          key={Layout.key++}\n          onClick={e => this.onClick(e)}\n          onMouseEnter={() => this.onMouseEnter()}\n          onMouseLeave={() => this.onMouseLeave()}\n        />\n      </Group>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Visible } from './Visible';\n\n/** this class encapsulates a level of frames to be drawn with the same y values */\nexport abstract class Level extends Visible {\n  protected constructor(\n    /** the level of this */\n    readonly parentLevel: Level | null\n  ) {\n    super();\n  }\n\n  abstract setY(y: number): any;\n\n  abstract draw(): React.ReactNode;\n}\n","import React from 'react';\nimport { Group, Rect } from 'react-konva';\n\nimport { Config, ShapeDefaultProps } from '../EnvVisualizerConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { FrameLevel } from './FrameLevel';\nimport { Level } from './Level';\nimport { ArrayValue } from './values/ArrayValue';\nimport { Value } from './values/Value';\n\n/** this class encapsulates a level of arrays to be drawn between two frame levels */\nexport class ArrayLevel extends Level {\n  private _minX: number = Infinity;\n  private _count: number = 0;\n  position: [x: number, y: number][][] = [[]];\n\n  // Prevent new arrays from being placed above existing arrays in the array level\n  private _rowCount: number = 0;\n\n  /** all the frames in this level */\n  readonly arrays: ArrayValue[] = [];\n\n  constructor(\n    /** the level of this */\n    readonly parentLevel: FrameLevel\n  ) {\n    super(parentLevel);\n    this._x = Config.CanvasPaddingX;\n    this._y = 0;\n    this._width = 0;\n    this._rowCount = 0;\n  }\n\n  minX(): number {\n    return this._minX;\n  }\n  count(): number {\n    return this._count;\n  }\n  getNumLanes = (): number => {\n    return this._rowCount;\n  };\n\n  /**\n   * Inserts array into ArrayLevel. Handles overlaps\n   * @param array\n   * @param x desired x-position of array\n   */\n  addArray = (array: ArrayValue, x: number) => {\n    x = x || 0;\n    // set highest allowed y-position to highest existing y-position in group of arrays connected to array.\n\n    let level = array.parentArray?.arrayLevelY ?? 0;\n    let width = 0;\n    let tail: Value = array;\n    const visitedTail: Value[] = [];\n    while (tail instanceof ArrayValue) {\n      if (visitedTail.includes(tail)) {\n        break;\n      }\n      visitedTail.push(tail);\n      width += Config.DataUnitPaddingX + tail.units.length * Config.DataUnitWidth;\n      if (tail.units.length > 0 && tail.units[tail.units.length - 1].value instanceof ArrayValue) {\n        tail = tail.units[tail.units.length - 1].value;\n      }\n    }\n    // Determine the highest allowed y-position for new array\n    positions: for (const positions of this.position.slice(level)) {\n      for (const position of positions) {\n        // Prevent new arrays from being created above existing arrays in level\n        if (position[0] < x + width + Config.DataMinWidth && position[1] > x) {\n          level++;\n          continue positions;\n        }\n      }\n      break;\n    }\n    this._minX = Math.min(x, this._minX);\n    this._count++;\n    this._rowCount = Math.max(this._rowCount, level);\n    this.position[level] = this.position[level] || [];\n    this.position[level].push([x, x + array.width() + Config.DataUnitWidth / 2]);\n    this.position[level].sort((a, b) => a[0] - b[0]);\n    const arrayMargin = Config.DataUnitPaddingY;\n    const curY = this._y + level * Config.DataUnitHeight + (level + 1) * arrayMargin;\n    array.updatePosition({ x, y: curY });\n    array.setLevel(this, level);\n    this._height = Math.max(this._height, curY + arrayMargin);\n    this.arrays.push(array);\n    this._width = Math.max(this._width, x + array.width());\n  };\n\n  setY = (y: number) => {\n    this.arrays.forEach(array => {\n      return array.updatePosition({ x: array.x(), y: array.y() - this.y() + y });\n    });\n    this._y = y;\n  };\n\n  reset = () => {\n    this._minX = Infinity;\n    this._count = 0;\n  };\n\n  draw(): React.ReactNode {\n    return (\n      <Group key={Layout.key++} ref={this.ref}>\n        <Rect\n          {...ShapeDefaultProps}\n          x={this.x()}\n          y={this.y()}\n          width={this.width()}\n          height={this.height()}\n          key={Layout.key++}\n          listening={false}\n        />\n        {this.arrays.map(array => array.draw())}\n      </Group>\n    );\n  }\n}\n","import React from 'react';\nimport { Group, Rect } from 'react-konva';\n\nimport { Config, ShapeDefaultProps } from '../EnvVisualizerConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { EnvTreeNode } from '../EnvVisualizerTypes';\nimport { ArrayLevel } from './ArrayLevel';\nimport { Frame } from './Frame';\nimport { Level } from './Level';\n\n/** this class encapsulates a level of frames to be drawn with the same y values */\nexport class FrameLevel extends Level {\n  static maxXcoord: number = 0;\n  static maxYcoord: number = 0;\n  lastXcoord: number;\n  readonly yCoord: number;\n\n  /** all the frames in this level */\n  readonly frames: Frame[] = [];\n\n  constructor(\n    /** the level of this */\n    readonly parentLevel: ArrayLevel | null\n  ) {\n    super(parentLevel);\n    this._x = Config.CanvasPaddingX;\n    this._y = 0;\n    this._width = 0;\n    this.lastXcoord = -1;\n    this.yCoord = FrameLevel.maxYcoord++;\n  }\n\n  height(): number {\n    return Frame.heights[this.yCoord] + Config.FrameMarginY;\n  }\n\n  /**\n   * Insert the next frame into this FrameLevel.\n   * If node.xCoord is specified and is valid (right of existing frames on level), uses it.\n   * else, places the frame to the right of the last frame on level.\n   * (calculate xCoord of frames, and addFrames in order from left to right and top to bottom.)\n   * @param node\n   */\n  addFrame = (node: EnvTreeNode) => {\n    // use the node's xCoord if its set and to right of last frame in level, else use put at right of last frame in level.\n    const coordinate = Math.max(node.xCoord ?? 0, FrameLevel.maxXcoord, this.lastXcoord + 1);\n    this.lastXcoord = coordinate;\n    FrameLevel.maxXcoord = Math.max(FrameLevel.maxXcoord, coordinate);\n    node.level = this;\n    if (this.frames[coordinate] !== undefined) {\n      this.frames[coordinate].update(node);\n    } else {\n      this.frames[coordinate] = new Frame(node, coordinate, this.yCoord);\n      node.frame = this.frames[coordinate];\n    }\n    this._width = Frame.maxX;\n  };\n\n  /**\n   * set y-position of frame level, and updates y-position of all frames in level\n   * @param y target y-coordinate\n   */\n  setY = (y: number) => {\n    this._y = y;\n    this.frames.forEach(frame => {\n      frame.updatePosition(frame.x(), y);\n    });\n  };\n\n  static reset = () => {\n    FrameLevel.maxXcoord = 0;\n    FrameLevel.maxYcoord = 0;\n  };\n\n  draw(): React.ReactNode {\n    return (\n      <Group key={Layout.key++} ref={this.ref}>\n        <Rect\n          {...ShapeDefaultProps}\n          x={this.x()}\n          y={this.y()}\n          width={this.width()}\n          height={this.height()}\n          key={Layout.key++}\n          listening={false}\n        />\n        {this.frames.reverse().map(frame => frame.draw())}\n      </Group>\n    );\n  }\n}\n","import React from 'react';\nimport { Group, Rect } from 'react-konva';\n\nimport { Config, ShapeDefaultProps } from '../EnvVisualizerConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { EnvTreeNode } from '../EnvVisualizerTypes';\nimport { getNextChildren } from '../EnvVisualizerUtils';\nimport { ArrayLevel } from './ArrayLevel';\nimport { ArrayUnit } from './ArrayUnit';\nimport { ArrowLane } from './ArrowLane';\nimport { Binding } from './Binding';\nimport { Frame } from './Frame';\nimport { FrameLevel } from './FrameLevel';\nimport { Level } from './Level';\nimport { ArrayValue } from './values/ArrayValue';\nimport { Visible } from './Visible';\n\n/**\n * Grid class encapsulates a grid of frames to be drawn.\n * Grid contains alternating layers of ArrayLevel and FrameLevel.\n */\nexport class Grid extends Visible {\n  /** list of all levels */\n  frameLevels: FrameLevel[];\n  arrayLevels: ArrayLevel[];\n  levels: Level[];\n  widths: number[];\n  static cumHeights: number[];\n\n  constructor(\n    /** the environment tree nodes */\n    readonly envTreeNodes: EnvTreeNode[][]\n  ) {\n    super();\n    this._x = 0;\n    this._y = 0;\n    this.frameLevels = [];\n    this.arrayLevels = [];\n    this.levels = [];\n    this.widths = [];\n    Grid.cumHeights = [];\n    this._height = 0;\n    this._width = 0;\n    this.update(envTreeNodes);\n  }\n\n  destroy = () => {\n    this.frameLevels.forEach(l => l.ref.current.destroyChildren());\n  };\n\n  /**\n   * Processes updates to Layout.environmentTree.\n   * @param envTreeNodes an array of different arrays of EnvTreeNodes corresponding to a single level.\n   */\n  update(envTreeNodes: EnvTreeNode[][]) {\n    Frame.reset();\n    FrameLevel.reset();\n    ArrowLane.reset();\n    this.arrayLevels.forEach(x => x.reset());\n    this.frameLevels = [];\n    this.arrayLevels = [];\n    this.levels = [];\n    const nodes: Array<[number, EnvTreeNode]> = envTreeNodes.reduce((result, nodes, i) => {\n      if (i === 0) {\n        this.frameLevels[i] = new FrameLevel(null);\n        this.arrayLevels[i] = new ArrayLevel(this.frameLevels[i]);\n      } else {\n        this.frameLevels[i] = new FrameLevel(this.arrayLevels[i - 1]);\n        this.arrayLevels[i] = new ArrayLevel(this.frameLevels[i]);\n      }\n      this.levels.push(this.frameLevels[i]);\n      this.levels.push(this.arrayLevels[i]);\n      return [...result, ...nodes.map<[number, EnvTreeNode]>(node => [i, node])];\n    }, new Array<[number, EnvTreeNode]>());\n\n    nodes.sort((a, b) => parseInt(a[1].environment.id) - parseInt(b[1].environment.id));\n    this.widths = [];\n    Grid.cumHeights = [];\n    // Compute the x coordinate of each frame by the max of 1 + the last xcoord of all frames before that frame on the same level\n    // and the xcoord of its immediate parent\n    const grid: (EnvTreeNode | undefined)[][] = [];\n    nodes.forEach(node => {\n      // children frame not to left of parent.\n      grid[node[0]] = grid[node[0]] ?? [];\n      node[1].xCoord = Math.max(\n        grid[node[0]].length - 1 + 1,\n        (node[1] as EnvTreeNode).parent?.xCoord ?? 0\n      );\n      grid[node[0]][node[1].xCoord] = node[1];\n      if (node[1].parent) {\n        let currentNode = node[1];\n        let level = node[0];\n        let updatedParent = true;\n        // if current frame is the first child of its parent frame and none of the frames to the left of the current frame\n        // is pointing to any frame to the right of the parent frame, shift the parent frame above the current frame\n        // (and move all frames to its right.) This will not violate the rule that all frames mustn't be at the left of its parent frame\n        // since the parent frame will not be at the right of the current frame, and any children frame of frames to the right of the parent frame\n        // will be created to right of those frames.\n        while (updatedParent) {\n          const parentNode = currentNode.parent;\n          if (\n            parentNode.xCoord &&\n            parentNode.children.flatMap(x => getNextChildren(x as EnvTreeNode))[0] === currentNode\n          ) {\n            if (currentNode.xCoord === undefined || parentNode.xCoord === undefined) {\n              updatedParent = false;\n            } else {\n              const diff: number = currentNode.xCoord - parentNode.xCoord;\n              const oldParentCoord = parentNode.xCoord;\n              if (\n                diff > 0 &&\n                grid[level]\n                  .slice(oldParentCoord, currentNode.xCoord)\n                  .every(\n                    x =>\n                      x === undefined ||\n                      parseInt(x.parent.environment.id ?? 0) < parseInt(parentNode.environment.id)\n                  )\n              ) {\n                grid[level - 1].slice(oldParentCoord).forEach(x => {\n                  if (x !== undefined) {\n                    x.xCoord = x.xCoord ? x.xCoord + diff : x.xCoord;\n                  }\n                });\n                grid[level - 1] = [\n                  ...grid[level - 1].slice(0, oldParentCoord),\n                  ...Array(diff).fill(undefined),\n                  ...grid[level - 1].slice(oldParentCoord)\n                ];\n                level = level - 1;\n                currentNode = parentNode;\n              } else {\n                updatedParent = false;\n              }\n            }\n          } else {\n            updatedParent = false;\n          }\n        }\n      }\n    });\n    // ordered by increasing y coord (since frame guaranteed to be to the right of its parent, and all frames are sorted by frame id)\n    // followed by increasing xCoord\n    nodes.sort((a, b) => (a[1].xCoord ?? 0) - (b[1].xCoord ?? 0));\n    nodes.forEach(node => this.frameLevels[node[0]].addFrame(node[1]));\n\n    Layout.values.forEach((v, d, m) => {\n      if (v instanceof ArrayValue) {\n        let bindings = v.referencedBy.filter(r => r instanceof Binding) as Binding[];\n        let p: ArrayUnit = v.referencedBy.find(x => x instanceof ArrayUnit) as ArrayUnit;\n        const belongsToFrame = v.referencedBy[0] instanceof Binding;\n        while (bindings.length === 0) {\n          bindings = p.parent.referencedBy.filter(r => r instanceof Binding) as Binding[];\n          p = p.parent.referencedBy.find(x => x instanceof ArrayUnit) as ArrayUnit;\n        }\n\n        if (belongsToFrame) {\n          const y = (v.referencedBy[0] as Binding).frame.yCoord;\n          // array close to first declaration, aligned to the frame to its right for clarity.\n          const x =\n            Frame.cumWidths[(v.referencedBy[0] as Binding).frame.xCoord + 1] +\n            0.8 * Config.FrameMarginX;\n          // Alternative approach to move array closer to horizontal mean of bindings\n          // https://github.com/source-academy/frontend/blob/dcd34c1cb792b96123d9163d2e31c960bedf123d/src/features/envVisualizer/components/Grid.tsx#L109\n          this.arrayLevels[Math.floor(y)].addArray(v, x);\n        } else if (v.referencedBy[0] instanceof ArrayUnit) {\n          const y = v.referencedBy[0].parent.level?.parentLevel?.yCoord ?? 0;\n          const x =\n            v.referencedBy[0].x() +\n            (v.referencedBy[0] instanceof ArrayUnit && v.referencedBy[0].isLastUnit\n              ? Config.DataUnitWidth + Config.DataUnitPaddingX\n              : 0);\n          this.arrayLevels[Math.floor(y)].addArray(v, x);\n        }\n      }\n    });\n    // Put the array levels and frame levels at same vertical position.\n    // Requires all array's x-position to be at the right of all frames and its fn values.\n    Grid.cumHeights = this.levels.reduce(\n      (res, b, i) => {\n        let height;\n        if (i % 2 === 0) {\n          const arrayLevel = this.arrayLevels[Math.floor(i / 2)] as ArrayLevel;\n          height =\n            Frame.cumWidths[(b as FrameLevel).lastXcoord + 1] <= arrayLevel.minX()\n              ? 0\n              : Frame.heights[Math.floor(i / 2)] +\n                (Frame.heights[Math.floor(i / 2)] > 0\n                  ? Config.FrameMarginY / 2\n                  : Config.FrameMarginY / 2);\n        } else {\n          const frameLevel = this.frameLevels[Math.floor(i / 2)] as FrameLevel;\n          height =\n            Frame.heights[Math.floor(i / 2)] +\n            (Frame.heights[Math.floor(i / 2)] > 0 ? Config.FrameMarginY : 0);\n          if ((b as ArrayLevel).count() > 0) {\n            if (Frame.cumWidths[frameLevel.lastXcoord + 1] <= (b as ArrayLevel).minX()) {\n              height = Math.max(\n                height,\n                this.arrayLevels[Math.floor((i - 1) / 2)].height() +\n                  (this.arrayLevels[Math.floor((i - 1) / 2)].height() > 0\n                    ? Config.FrameMarginY\n                    : Config.FrameMarginY / 2)\n              );\n            } else {\n              height = this.arrayLevels[Math.floor((i - 1) / 2)].height() + Config.FrameMarginY;\n            }\n          }\n        }\n        return [...res, res[res.length - 1] + height];\n      },\n      [Config.CanvasPaddingY.valueOf()]\n    );\n    this.levels.forEach((level, i) => {\n      level.setY(Grid.cumHeights[i]);\n    });\n\n    // get the cumulative height of all the array and frame levels\n    this._height = Grid.cumHeights[Grid.cumHeights.length - 1];\n    // get the maximum width of all the array and frame levels\n    this._width =\n      Math.max(\n        this.frameLevels.reduce<number>((a, b) => Math.max(a, b.width()), 0),\n        this.arrayLevels.reduce<number>((a, b) => Math.max(a, b.width()), 0)\n      ) + Config.FrameMarginX;\n  }\n\n  /**\n   * Find the Grid y-coordinate given a x-position.\n   * @param y absolute position\n   * @returns Largest x-coordinate smaller than or equal to a given x position.\n   */\n  static lastYCoordBelow(y: number) {\n    let l = Grid.cumHeights.length;\n    while (l--) {\n      if (Grid.cumHeights[l] <= y) {\n        return l;\n      }\n    }\n    return 0;\n  }\n\n  draw(): React.ReactNode {\n    return (\n      <Group key={Layout.key++}>\n        <Rect\n          {...ShapeDefaultProps}\n          x={this.x()}\n          y={this.y()}\n          width={this.width()}\n          height={this.height()}\n          key={Layout.key++}\n          listening={false}\n        />\n        {this.arrayLevels.reverse().map(level => level.draw())}\n        {this.frameLevels.reverse().map(level => level.draw())}\n      </Group>\n    );\n  }\n}\n","import { Config } from '../EnvVisualizerConfig';\nimport { Data, IVisible } from '../EnvVisualizerTypes';\nimport { Frame } from './Frame';\nimport { Grid } from './Grid';\nimport { Value } from './values/Value';\n\n/** this class tracks the target objects for each lane. */\nexport class ArrowLane {\n  readonly id: number;\n  static verticalLanes: ArrowLane[] = [];\n  static horizontalLanes: ArrowLane[] = [];\n  static arrayLevelLanes: ArrowLane[] = [];\n  public objects: (Data | IVisible)[] = [];\n  public frames: Frame[] = [];\n  readonly isVertical: boolean = true;\n\n  constructor(coord: number, isVertical: boolean) {\n    this.id = coord;\n    this.isVertical = isVertical;\n  }\n\n  static reset = () => {\n    ArrowLane.verticalLanes = [];\n    ArrowLane.horizontalLanes = [];\n    ArrowLane.arrayLevelLanes = [];\n  };\n\n  static getVerticalLaneBeforeTarget = (target: IVisible, currentX: number): ArrowLane => {\n    // get the lane between currentX and target right before the target\n    let xCoord = Frame.lastXCoordBelow(target.x()) + (currentX > target.x() ? 0 : 1);\n    const x = Frame.cumWidths[xCoord];\n    if (target.x() > x && currentX > x) {\n      xCoord++;\n    }\n    if (ArrowLane.verticalLanes[xCoord] === undefined) {\n      ArrowLane.verticalLanes[xCoord] = new ArrowLane(xCoord, true);\n    }\n    return ArrowLane.verticalLanes[xCoord];\n  };\n\n  static getVerticalLaneAfterSource = (target: IVisible, currentX: number): ArrowLane => {\n    // get the lane between currentX and target right after currentX\n    let xCoord = Frame.lastXCoordBelow(currentX) + (currentX > target.x() ? 0 : 1);\n    const x = Frame.cumWidths[xCoord];\n    if (target.x() > x && currentX > x) {\n      xCoord++;\n    }\n    if (ArrowLane.verticalLanes[xCoord] === undefined) {\n      ArrowLane.verticalLanes[xCoord] = new ArrowLane(xCoord, true);\n    }\n    return ArrowLane.verticalLanes[xCoord];\n  };\n\n  static getHorizontalLaneBeforeTarget = (target: IVisible, currentY: number): ArrowLane => {\n    // get the horizontal lane between currentY and target right before target\n    const yCoord = Grid.lastYCoordBelow(target.y()) + (currentY > target.y() ? 1 : 0);\n    if (ArrowLane.horizontalLanes[yCoord] === undefined) {\n      ArrowLane.horizontalLanes[yCoord] = new ArrowLane(yCoord, false);\n    }\n    return ArrowLane.horizontalLanes[yCoord];\n  };\n\n  static getHorizontalLaneAfterSource = (target: IVisible, currentY: number): ArrowLane => {\n    // get the horizontal lane between currentY and target right after currentY\n    const yCoord = Grid.lastYCoordBelow(currentY) + (currentY > target.y() ? 0 : 1);\n    if (ArrowLane.horizontalLanes[yCoord] === undefined) {\n      ArrowLane.horizontalLanes[yCoord] = new ArrowLane(yCoord, false);\n    }\n    return ArrowLane.horizontalLanes[yCoord];\n  };\n\n  getPosition = (target: Value | IVisible): number => {\n    // this method of calculating the position of arrows can be improved,\n    // currently just tries to fit arrows into the padding of the frame/array levels, might be better\n    // to place the arrow lanes between the levels, so we can reduce the padding between levels.\n    // place frame arrows on bottom half of horizontal lanes\n    if (target instanceof Frame) {\n      let index = this.frames.indexOf(target);\n      if (index === -1) {\n        index = this.frames.push(target) - 1;\n      }\n      const lane: number = (index * Config.ArrowLaneInterval) % Config.ArrowNumLanes;\n      return (\n        Grid.cumHeights[this.id] -\n        Config.FrameMarginY * 0.45 -\n        (lane / Config.ArrowNumLanes) * Config.FrameMarginY * 0.35\n      );\n    } else {\n      let index = this.objects.indexOf(target instanceof Value ? target.data : target);\n      if (index === -1) {\n        index = this.objects.push(target instanceof Value ? target.data : target) - 1;\n      }\n      const lane: number = (index * Config.ArrowLaneInterval) % Config.ArrowNumLanes;\n      if (this.isVertical) {\n        return (\n          Frame.cumWidths[this.id] -\n          Config.FrameMarginX * 0.9 +\n          Config.FnRadius +\n          (lane / (Config.ArrowNumLanes + 1)) * Config.FrameMarginX * 0.7\n        );\n      } else {\n        if (this.id % 2 === 0) {\n          // arrow between array level (above) and above horizontal frame arows (below)\n          return (\n            Grid.cumHeights[this.id] -\n            Config.FrameMarginY * 0.1 -\n            (lane / Config.ArrowNumLanes) * Config.FrameMarginY * 0.35\n          );\n        } else {\n          // arrows below frame level and above array level\n          return (\n            Grid.cumHeights[this.id] -\n            Config.FrameMarginY * 0.1 -\n            (lane / Config.ArrowNumLanes) * Config.FrameMarginY * 0.35\n          );\n        }\n      }\n    }\n  };\n}\n","import { Config } from '../../EnvVisualizerConfig';\nimport { StepsArray } from '../../EnvVisualizerTypes';\nimport { ArrowLane } from '../ArrowLane';\nimport { Frame } from '../Frame';\nimport { Grid } from '../Grid';\nimport { Text } from '../Text';\nimport { ArrayValue } from '../values/ArrayValue';\nimport { FnValue } from '../values/FnValue';\nimport { GlobalFnValue } from '../values/GlobalFnValue';\nimport { Value } from '../values/Value';\nimport { GenericArrow } from './GenericArrow';\n\n/** this class encapsulates an GenericArrow to be drawn between 2 points */\nexport class ArrowFromText<V extends Value> extends GenericArrow<Text, V> {\n  protected calculateSteps() {\n    const source = this.source;\n    const target = this.target;\n    if (!target) return [];\n\n    const steps: StepsArray = [(x, y) => [x + source.width(), y + source.height() / 2]];\n    if (target instanceof ArrayValue) {\n      steps.push((x, y) => [x + Config.TextMargin + Config.TextPaddingX, y]); // Spacing to right of text in frame\n      steps.push((x, y) => {\n        const newX = ArrowLane.getVerticalLaneAfterSource(target, x).getPosition(target);\n        return newX < x\n          ? [x, y - Math.sign(source.y() - target.y()) * (source.height() + Config.TextMargin)]\n          : [x, y];\n      }); // if the potential vertical lane is to the left, loop above or below text to allow GenericArrow to move left.\n      steps.push((x, y) => [\n        ArrowLane.getVerticalLaneAfterSource(target, x).getPosition(target),\n        y\n      ]);\n      // move to horizontal lane only if lane exists between source and target\n      const potentialHorizontalLaneY = ArrowLane.getHorizontalLaneBeforeTarget(\n        target,\n        source.y()\n      ).getPosition(target);\n      if ((potentialHorizontalLaneY - source.y()) * (potentialHorizontalLaneY - target.y()) < 0) {\n        steps.push((x, y) => {\n          const newY = ArrowLane.getHorizontalLaneBeforeTarget(target, y).getPosition(target);\n          return (newY - y) * (newY - target.y()) > 0\n            ? [x, y]\n            : [x, ArrowLane.getHorizontalLaneBeforeTarget(target, y).getPosition(target)];\n        });\n      }\n\n      // Move to x position closer to array on horizontal lane\n      steps.push((x, y) => {\n        let newX: number;\n        let yDiff = target.y() + Config.DataUnitHeight / 2 - y;\n        yDiff = Math.abs(yDiff - (Math.sign(yDiff) * Config.DataUnitHeight) / 2);\n        if (x < target.x()) {\n          newX = Math.max(x + Config.DataUnitWidth, target.x() - yDiff);\n        } else if (x >= target.x() + target.units.length * Config.DataUnitWidth) {\n          newX = target.x() + target.units.length * Config.DataUnitWidth;\n          newX = Math.min(x - Config.DataUnitWidth, newX + yDiff);\n        } else {\n          // if current point of arrow is somewhere above / below array, move halfway to corner of some arrayunit.\n          const index = Math.floor((x - target.x()) / Config.DataUnitWidth);\n          newX = target.x() + Config.DataUnitWidth * index;\n          return [(x + newX) / 2, (y + target.y()) / 2];\n        }\n        return [newX, y];\n      });\n      // Move to array pointing to corner of some arrayunit\n      steps.push((x, y) => {\n        const index = Math.floor((x - target.x()) / Config.DataUnitWidth);\n        const yDiff = source.y() - (target.y() + Config.DataUnitHeight / 2);\n        const newY =\n          target.y() +\n          Config.DataUnitHeight / 2 +\n          ((Math.abs(yDiff) < Config.DataUnitHeight ? 0 : Math.sign(yDiff)) *\n            Config.DataUnitHeight) /\n            2;\n        if (x < target.x()) {\n          return [target.x(), newY];\n        } else if (x >= target.x() + target.units.length * Config.DataUnitWidth) {\n          return [target.x() + target.units.length * Config.DataUnitWidth, newY];\n        } else {\n          return [target.x() + Config.DataUnitWidth * index, newY];\n        }\n      });\n    } else if (target instanceof FnValue || target instanceof GlobalFnValue) {\n      if (target.x() < source.x()) {\n        // move target the left of current frame above the binding.\n        steps.push((x, y) => [x + Config.TextMargin, y]);\n        steps.push((x, y) => [x, y - Math.sign(source.y() - target.y()) * source.height()]);\n        if (\n          Grid.lastYCoordBelow(target.y()) === Grid.lastYCoordBelow(source.y()) &&\n          Frame.lastXCoordBelow(source.x()) === Frame.lastXCoordBelow(target.x()) + 1\n        ) {\n          // Move directly target object\n          steps.push((x, y) => [target.centerX + Config.FnRadius * 3, y]);\n          steps.push((x, y) => [x, target.y()]);\n          steps.push((x, y) => [x - Config.FnRadius, y]);\n        } else {\n          // vertical lane, horizontal lane, vertical lane,\n          steps.push((x, y) => [\n            ArrowLane.getVerticalLaneAfterSource(target, x).getPosition(target),\n            y\n          ]);\n          steps.push((x, y) => [\n            x,\n            ArrowLane.getHorizontalLaneBeforeTarget(target, y).getPosition(target)\n          ]);\n          steps.push((x, y) => [\n            ArrowLane.getVerticalLaneBeforeTarget(target, x).getPosition(target),\n            y\n          ]);\n          steps.push((x, y) => [x, target.y()]);\n          steps.push((x, y) => [target.centerX + Config.FnRadius * 2, y]);\n        }\n      } else {\n        if (\n          Grid.lastYCoordBelow(target.y()) === Grid.lastYCoordBelow(source.y()) &&\n          Frame.lastXCoordBelow(source.x()) === Frame.lastXCoordBelow(target.x())\n        ) {\n          steps.push((x, y) => [target.x(), y]);\n          steps.push((x, y) => [x, target.y()]);\n        } else {\n          steps.push((x, y) => [\n            ArrowLane.getVerticalLaneAfterSource(target, x).getPosition(target),\n            y\n          ]);\n          steps.push((x, y) => [\n            x,\n            ArrowLane.getHorizontalLaneBeforeTarget(target, y).getPosition(target)\n          ]);\n          steps.push((x, y) => [\n            ArrowLane.getVerticalLaneBeforeTarget(target, x).getPosition(target),\n            y\n          ]);\n          steps.push((x, y) => [x, target.y()]);\n          steps.push((x, y) => [target.centerX + Config.FnRadius * 2, y]);\n        }\n      }\n    } else {\n      steps.push((x, y) => [x, target.y()]);\n      steps.push((x, y) => [target.x(), y]);\n    }\n    return steps;\n  }\n}\n","import React from 'react';\n\nimport { Config } from '../../EnvVisualizerConfig';\nimport { Layout } from '../../EnvVisualizerLayout';\nimport { ReferenceType, UnassignedData } from '../../EnvVisualizerTypes';\nimport { getTextWidth } from '../../EnvVisualizerUtils';\nimport { Binding } from '../Binding';\nimport { Text } from '../Text';\nimport { Value } from './Value';\n\n/** this class encapsulates an unassigned value in Source, internally represented as a symbol */\nexport class UnassignedValue extends Value {\n  readonly data: UnassignedData = Symbol();\n  readonly text: Text;\n\n  constructor(readonly referencedBy: ReferenceType[]) {\n    super();\n\n    // derive the coordinates from the main reference (binding / array unit)\n    const mainReference = this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x = mainReference.x() + getTextWidth(mainReference.keyString) + Config.TextPaddingX;\n      this._y = mainReference.y();\n      this.text = new Text(Config.UnassignedData.toString(), this._x, this._y, {\n        isStringIdentifiable: false\n      });\n    } else {\n      const maxWidth = mainReference.width();\n      const textWidth = Math.min(getTextWidth(String(this.data)), maxWidth);\n      this._x = mainReference.x() + (mainReference.width() - textWidth) / 2;\n      this._y = mainReference.y() + (mainReference.height() - Config.FontSize) / 2;\n      this.text = new Text(Config.UnassignedData.toString(), this._x, this._y, {\n        maxWidth: maxWidth,\n        isStringIdentifiable: false\n      });\n    }\n\n    this._width = this.text.width();\n    this._height = this.text.height();\n  }\n\n  reset(): void {\n    super.reset();\n    this.referencedBy.length = 0;\n  }\n  updatePosition(): void {\n    const mainReference = this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x = mainReference.x() + getTextWidth(mainReference.keyString) + Config.TextPaddingX;\n      this._y = mainReference.y();\n    } else {\n      const maxWidth = mainReference.width();\n      const textWidth = Math.min(getTextWidth(String(this.data)), maxWidth);\n      this._x = mainReference.x() + (mainReference.width() - textWidth) / 2;\n      this._y = mainReference.y() + (mainReference.height() - Config.FontSize) / 2;\n    }\n    this.text.updatePosition(this._x, this._y);\n  }\n  onMouseEnter(): void {}\n  onMouseLeave(): void {}\n\n  draw(): React.ReactNode {\n    this._isDrawn = true;\n    return <React.Fragment key={Layout.key++}>{this.text.draw()}</React.Fragment>;\n  }\n}\n","import React from 'react';\n\nimport EnvVisualizer from '../EnvVisualizer';\nimport { Config } from '../EnvVisualizerConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { Data } from '../EnvVisualizerTypes';\nimport { isDummyKey, isMainReference } from '../EnvVisualizerUtils';\nimport { ArrowFromText } from './arrows/ArrowFromText';\nimport { GenericArrow } from './arrows/GenericArrow';\nimport { Frame } from './Frame';\nimport { Text } from './Text';\nimport { ArrayValue } from './values/ArrayValue';\nimport { FnValue } from './values/FnValue';\nimport { GlobalFnValue } from './values/GlobalFnValue';\nimport { PrimitiveValue } from './values/PrimitiveValue';\nimport { UnassignedValue } from './values/UnassignedValue';\nimport { Value } from './values/Value';\nimport { Visible } from './Visible';\n\n/** a `binding` is a key-value pair in a frame */\nexport class Binding extends Visible {\n  readonly offsetY: number;\n  /** The maximum width of binding when hovered or clicked (takes tooltip into consideration) */\n  readonly _hoveredWidth: number;\n  readonly isMainReference: boolean;\n\n  /** value associated with this binding */\n  readonly value: Value;\n  /** key of this binding */\n  readonly key: Text;\n  /**\n   * `true` if this is a dummy binding\n   * i.e. the value is anonymous\n   */\n  readonly isDummyBinding: boolean = false;\n  keyYOffset: number;\n  private arrow: GenericArrow<Text, Value> | undefined = undefined;\n  public getArrow = (): GenericArrow<Text, Value> | undefined => {\n    return this.arrow;\n  };\n\n  constructor(\n    /** the key of this binding */\n    readonly keyString: string,\n    /** the value of this binding */\n    readonly data: Data,\n    /** frame this binding is in */\n    readonly frame: Frame,\n    /** previous binding (the binding above it) */\n    readonly prevBinding: Binding | null,\n    readonly isConstant: boolean = false\n  ) {\n    super();\n    this.isDummyBinding = isDummyKey(this.keyString);\n\n    // derive the coordinates from the binding above it\n    if (this.prevBinding) {\n      this._x = this.prevBinding.x();\n      this.offsetY = this.prevBinding.offsetY + this.prevBinding.height() + Config.TextPaddingY;\n    } else {\n      this._x = this.frame.x() + Config.FramePaddingX;\n      this.offsetY = this.frame.y() + Config.FramePaddingY;\n    }\n    this._y = this.offsetY;\n\n    this.keyString += isConstant ? Config.ConstantColon : Config.VariableColon;\n    this.value = Layout.createValue(data, this);\n    this.isMainReference = isMainReference(this.value, this);\n    if (this.isMainReference) {\n      // Moves the function object next to the correct frame\n      this.value.updatePosition();\n    }\n    this.keyYOffset =\n      (this.value instanceof FnValue || this.value instanceof GlobalFnValue) && this.isMainReference\n        ? (this.value.height() - Config.FontSize) / 2\n        : 0;\n    this.key = new Text(this.keyString, this.x(), this.offsetY + this.keyYOffset, {}, frame);\n\n    // derive the width from the right bound of the value (either no extra space or width of function object.)\n    this._width =\n      !(this.value instanceof ArrayValue) && this.isMainReference\n        ? this.value.x() + this.value.width() - this.x()\n        : this.key.width();\n    this._hoveredWidth =\n      this._width +\n      (this.value instanceof FnValue || this.value instanceof GlobalFnValue\n        ? this.value.tooltipWidth\n        : 0);\n    this._height = Math.max(\n      this.key.height(),\n      (this.value instanceof FnValue || this.value instanceof GlobalFnValue) && this.isMainReference\n        ? this.value.height()\n        : 0\n    );\n\n    if (this.isDummyBinding && !this.isMainReference) {\n      if (this.prevBinding) {\n        this.offsetY = this.prevBinding.offsetY;\n        this._width = this.prevBinding.width();\n        this._height = this.prevBinding.height();\n      }\n    }\n    this._y = this.offsetY;\n  }\n  hoveredWidth(): number {\n    return EnvVisualizer.getPrintableMode()\n      ? this._hoveredWidth\n      : this._width +\n          (this.value instanceof FnValue || this.value instanceof GlobalFnValue\n            ? this.value.tooltipWidth\n            : 0);\n  }\n  exportWidth(): number {\n    return (\n      this._width +\n      (this.value instanceof FnValue || this.value instanceof GlobalFnValue\n        ? this.value.exportTooltipWidth\n        : 0)\n    );\n  }\n  /**\n   * update absolute position of binding and its value.\n   * @param x Target x-position\n   * @param y Target y-position\n   */\n  updatePosition = (x: number, y: number) => {\n    this._x = x + Config.FramePaddingX;\n    this._y = y + this.offsetY;\n    this.key.updatePosition(this.x(), this.y() + this.keyYOffset);\n    if (isMainReference(this.value, this)) {\n      this.value.updatePosition();\n    }\n  };\n\n  draw(): React.ReactNode {\n    if (\n      !(\n        this.isDummyBinding || // value is unreferenced in dummy binding\n        this.value instanceof PrimitiveValue ||\n        this.value instanceof UnassignedValue ||\n        this.value instanceof ArrayValue\n      )\n    ) {\n      this.arrow = new ArrowFromText(this.key).to(this.value);\n    }\n    return (\n      <React.Fragment key={Layout.key++}>\n        {this.isDummyBinding\n          ? null // omit the key since value is anonymous\n          : this.key.draw()}\n        {this.arrow && this.arrow.draw()}\n        {!(this.value instanceof ArrayValue) && this.isMainReference ? this.value.draw() : null}\n      </React.Fragment>\n    );\n  }\n}\n","import { Environment } from 'Clang-slang/dist/types';\nimport { Group } from 'konva/lib/Group';\nimport { Node } from 'konva/lib/Node';\nimport { Shape } from 'konva/lib/Shape';\nimport { cloneDeep } from 'lodash';\n\nimport { Value as CompactValue } from './compactComponents/values/Value';\nimport { Binding } from './components/Binding';\nimport { FnValue } from './components/values/FnValue';\nimport { GlobalFnValue } from './components/values/GlobalFnValue';\nimport { Value } from './components/values/Value';\nimport EnvVisualizer from './EnvVisualizer';\nimport { Config } from './EnvVisualizerConfig';\nimport {\n  CompactReferenceType,\n  Data,\n  EmptyObject,\n  Env,\n  EnvTree,\n  EnvTreeNode,\n  FnTypes,\n  PrimitiveTypes,\n  ReferenceType\n} from './EnvVisualizerTypes';\n\n// TODO: can make use of lodash\n/** Returns `true` if `x` is an object */\nexport function isObject(x: any): x is object {\n  return x === Object(x);\n}\n\n/** Returns `true` if `object` is empty */\nexport function isEmptyObject(object: Object): object is EmptyObject {\n  return Object.keys(object).length === 0;\n}\n\n/** Returns `true` if `object` is `Environment` */\nexport function isEnvironment(object: Object): object is Environment {\n  return 'head' in object && 'tail' in object && 'name' in object;\n}\n\n/** Returns `true` if `object` is `EnvTreeNode` */\nexport function isEnvTreeNode(object: Object): object is EnvTreeNode {\n  return 'parent' in object && 'children' in object;\n}\n\n/** Returns `true` if `object` is `EnvTree` */\nexport function isEnvTree(object: Object): object is EnvTree {\n  return 'root' in object;\n}\n\n/** Returns `true` if `env` is empty (that is, head of env is an empty object) */\nexport function isEmptyEnvironment(env: Env): env is Env & { head: EmptyObject } {\n  return env === null || isEmptyObject(env.head);\n}\n\n/** Returns `true` if `data` is a Javascript array */\nexport function isArray(data: Data): data is Data[] {\n  return Array.isArray(data);\n}\n\n/** Returns `true` if `x` is a Javascript function */\nexport function isFunction(x: any): x is () => any {\n  return x && {}.toString.call(x) === '[object Function]';\n}\n\n/** Returns `true` if `data` is a JS Slang function */\nexport function isFn(data: Data): data is FnTypes {\n  return isFunction(data) && 'environment' in data && 'functionName' in data;\n}\n\n/** Returns `true` if `x` is a JS Slang function in the global frame */\nexport function isGlobalFn(x: any): x is () => any {\n  return isFunction(x) && !isFn(x);\n}\n\n/** Returns `true` if `data` is null */\nexport function isNull(data: Data): data is null {\n  return data === null;\n}\n\n/** Returns `true` if `data` is undefined */\nexport function isUndefined(data: Data): data is undefined {\n  return data === undefined;\n}\n\n/** Returns `true` if `data` is a string */\nexport function isString(data: Data): data is string {\n  return typeof data === 'string';\n}\n\n/** Returns `true` if `data` is a number */\nexport function isNumber(data: Data): data is number {\n  return typeof data === 'number';\n}\n\n/** Returns `true` if `data` is a symbol */\nexport function isUnassigned(data: Data): data is symbol {\n  return typeof data === 'symbol';\n}\n\n/** Returns `true` if `data` is a boolean */\nexport function isBoolean(data: Data): data is boolean {\n  return typeof data === 'boolean';\n}\n\n/** Returns `true` if `data` is a primitive, defined as a null | data | number */\nexport function isPrimitiveData(data: Data): data is PrimitiveTypes {\n  return isUndefined(data) || isNull(data) || isString(data) || isNumber(data) || isBoolean(data);\n}\n\n/** Returns `true` if `reference` is the main reference of `value` */\nexport function isMainReference(value: Value, reference: ReferenceType) {\n  if (value instanceof FnValue) {\n    // chooses the frame of the enclosing environment, not necessarily the first in referencedBy.\n    return (\n      reference instanceof Binding &&\n      value.enclosingEnvNode === (reference as Binding).frame.envTreeNode &&\n      value.referencedBy.findIndex(x => x instanceof Binding && x === reference) !== -1\n    );\n  } else if (value instanceof GlobalFnValue) {\n    return value.referencedBy.find(x => x instanceof Binding) === reference;\n  } else {\n    return value.referencedBy[0] === reference;\n  }\n}\n\n/** Returns `true` if `reference` is the main reference of `value` */\nexport function isCompactMainReference(value: CompactValue, reference: CompactReferenceType) {\n  return value.referencedBy[0] === reference;\n}\n\n/** checks if `value` is a `number` */\n/** Returns `true` if `value` is a `number` */\nexport function isNumeric(value: string) {\n  return /^-?\\d+$/.test(value);\n}\n\n/**\n * Returns `true` if `key` is a dummy key.\n * dummy key is an integral unique id.\n */\nexport function isDummyKey(key: string) {\n  return isNumeric(key);\n}\n\n/**\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\n *\n * @param {string} text The text to be rendered.\n * @param {string} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n */\nexport function getTextWidth(\n  text: string,\n  font: string = `${Config.FontStyle} ${Config.FontSize}px ${Config.FontFamily}`\n): number {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n\n  if (!context || !text) {\n    return 0;\n  }\n\n  context.font = font;\n  const longestLine = text\n    .split('\\n')\n    .reduce<string>(\n      (accText, currValue) =>\n        context.measureText(accText).width > context.measureText(currValue).width\n          ? accText\n          : currValue,\n      ''\n    );\n  const metrics = context.measureText(longestLine);\n  return metrics.width;\n}\n\n/** Returns the parameter string of the given function */\nexport function getParamsText(data: () => any): string {\n  if (isFn(data)) {\n    return data.node.params.map((node: any) => node.name).join(',');\n  } else {\n    const fnString = data.toString();\n    return fnString.substring(fnString.indexOf('('), fnString.indexOf('{')).trim();\n  }\n}\n\n/** Returns the body string of the given function */\nexport function getBodyText(data: () => any): string {\n  const fnString = data.toString();\n  if (isFn(data)) {\n    let body =\n      data.node.type === 'FunctionDeclaration' || fnString.substring(0, 8) === 'function'\n        ? fnString.substring(fnString.indexOf('{'))\n        : fnString.substring(fnString.indexOf('=') + 3);\n\n    if (body[0] !== '{') body = '{\\n  return ' + body + ';\\n}';\n    return body;\n  } else {\n    return fnString.substring(fnString.indexOf('{'));\n  }\n}\n\nexport function setHoveredCursor(target: Node | Group) {\n  const container = target.getStage()?.container();\n  container && (container.style.cursor = 'pointer');\n}\n\nexport function setUnhoveredCursor(target: Node | Group) {\n  const container = target.getStage()?.container();\n  container && (container.style.cursor = 'default');\n}\n\n/** Updates the styles of a Konva node and its children on hover, and then redraw the layer */\nexport function setHoveredStyle(target: Node | Group, hoveredAttrs: any = {}): void {\n  const nodes: (Group | Shape | Node)[] =\n    target instanceof Group ? Array.from(target.children || []) : [];\n  nodes.push(target);\n  nodes.forEach(node => {\n    node.setAttrs({\n      stroke: node.attrs.stroke ? Config.HoveredColor.toString() : node.attrs.stroke,\n      fill: node.attrs.fill ? Config.HoveredColor.toString() : node.attrs.fill,\n      ...hoveredAttrs\n    });\n  });\n}\n\n/** Updates the styles of a Konva node and its children on unhover, and then redraw the layer */\nexport function setUnhoveredStyle(target: Node | Group, unhoveredAttrs: any = {}): void {\n  const nodes: (Group | Shape | Node)[] =\n    target instanceof Group ? Array.from(target.children || []) : [];\n  nodes.push(target);\n\n  nodes.forEach(node => {\n    node.setAttrs({\n      stroke: node.attrs.stroke\n        ? EnvVisualizer.getPrintableMode()\n          ? Config.SA_BLUE.toString()\n          : Config.SA_WHITE.toString()\n        : node.attrs.stroke,\n      fill: node.attrs.fill\n        ? EnvVisualizer.getPrintableMode()\n          ? Config.SA_BLUE.toString()\n          : Config.SA_WHITE.toString()\n        : node.attrs.fill,\n      ...unhoveredAttrs\n    });\n  });\n}\n\n/** Extracts the non-empty tail environment from the given environment */\nexport function getNonEmptyEnv(environment: Env): Env {\n  if (environment === null) {\n    return null;\n  } else if (isEmptyEnvironment(environment)) {\n    return getNonEmptyEnv(environment.tail);\n  } else {\n    return environment;\n  }\n}\n\n/**\n * Finds the underlying `Environment` objects and copies property descriptors\n * from source frames to destination frames. Property descriptors are important for us\n * to distinguish between constants and variables.\n */\nexport function copyOwnPropertyDescriptors(source: any, destination: any) {\n  if (isFunction(source) || isPrimitiveData(source)) {\n    return;\n  }\n  if (isEnvTree(source) && isEnvTree(destination)) {\n    copyOwnPropertyDescriptors(source.root, destination.root);\n  } else if (isEnvTreeNode(source) && isEnvTreeNode(destination)) {\n    // recurse only on children and environment\n    copyOwnPropertyDescriptors(source.children, destination.children);\n    copyOwnPropertyDescriptors(source.environment, destination.environment);\n  } else if (isArray(source) && isArray(destination)) {\n    // recurse on array items\n    source.forEach((item, i) => copyOwnPropertyDescriptors(item, destination[i]));\n  } else if (isEnvironment(source) && isEnvironment(destination)) {\n    // copy descriptors from source frame to destination frame\n    Object.defineProperties(destination.head, Object.getOwnPropertyDescriptors(source.head));\n    // recurse on tail\n    copyOwnPropertyDescriptors(source.tail, destination.tail);\n  }\n}\n\n/**\n * Creates a deep clone of `EnvTree`\n *\n * TODO: move this function to EnvTree class\n * so we can invoke like so: environmentTree.deepCopy()\n */\nexport function deepCopyTree(value: EnvTree): EnvTree {\n  const clone = cloneDeep(value);\n  copyOwnPropertyDescriptors(value, clone);\n  return clone;\n}\n\nexport function getNextChildren(c: EnvTreeNode): EnvTreeNode[] {\n  if (isEmptyEnvironment(c.environment)) {\n    const nextChildren: EnvTreeNode[] = [];\n    c.children.forEach(gc => {\n      nextChildren.push(...getNextChildren(gc as EnvTreeNode));\n    });\n    return nextChildren;\n  } else {\n    return [c];\n  }\n}\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport { Arrow as KonvaArrow, Group as KonvaGroup, Path as KonvaPath } from 'react-konva';\n\nimport { Visible } from '../../components/Visible';\nimport EnvVisualizer from '../../EnvVisualizer';\nimport { CompactConfig, ShapeDefaultProps } from '../../EnvVisualizerCompactConfig';\nimport { Layout } from '../../EnvVisualizerLayout';\nimport { IVisible, StepsArray } from '../../EnvVisualizerTypes';\nimport { setHoveredStyle, setUnhoveredStyle } from '../../EnvVisualizerUtils';\n\n/** this class encapsulates an arrow to be drawn between 2 points */\nexport class GenericArrow<Source extends IVisible, Target extends IVisible> extends Visible {\n  private _path: string = '';\n  points: number[] = [];\n  source: Source;\n  target: Target | undefined;\n\n  constructor(from: Source) {\n    super();\n    this.source = from;\n    this.target = undefined;\n    this._x = from.x();\n    this._y = from.y();\n  }\n  path(): string {\n    return this._path;\n  }\n\n  to(to: Target): GenericArrow<Source, Target> {\n    this.target = to;\n    this._width = Math.abs(to.x() - this.source.x());\n    this._height = Math.abs(to.y() - this.source.y());\n    return this;\n  }\n\n  /**\n   * Calculates the steps that this arrows takes.\n   * The arrow is decomposed into numerous straight line segments, each of which we\n   * can consider as a step of dx in the x direction and of dy in the y direction.\n   * The line segment is thus defined by 2 points (x, y) and (x + dx, y + dy)\n   * where (x, y) is the ending coordinate of the previous line segment.\n   * This function returns an array of such steps, represented by an array of functions\n   *  [ (x, y) => [x + dx1, y + dy1], (x, y) => [x + dx2, y + dy2], ... ].\n   * From this, we can retrieve the points that make up the arrow as such:\n   * (from.x from.y), (from.x + dx1, from.y + dy1), (from.x + dx1 + dx2, from.y + dy1 + dy2), ..\n   *\n   * Note that the functions need not be of the form (x, y) => [x + dx, y + dy];\n   * (x, y) => [to.x, to.y] is valid as well, and is used to specify a step to the ending coordinates\n   *\n   * @return an array of steps represented by functions\n   */\n  protected calculateSteps(): StepsArray {\n    const to = this.target;\n    if (!to) return [];\n    return [() => [to.x(), to.y()]];\n  }\n\n  onMouseEnter = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    setHoveredStyle(currentTarget, {\n      strokeWidth: Number(CompactConfig.ArrowHoveredStrokeWidth)\n    });\n  };\n\n  onMouseLeave = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    setUnhoveredStyle(currentTarget, {\n      strokeWidth: Number(CompactConfig.ArrowStrokeWidth)\n    });\n  };\n  onClick() {}\n\n  draw() {\n    const points = this.calculateSteps().reduce<Array<number>>(\n      (points, step) => [...points, ...step(points[points.length - 2], points[points.length - 1])],\n      [this.source.x(), this.source.y()]\n    );\n    points.splice(0, 2);\n\n    // starting point\n    this._path += `M ${points[0]} ${points[1]} `;\n    if (points.length === 4) {\n      // end the path if the line only has starting and ending coordinates\n      this._path += `L ${points[2]} ${points[3]} `;\n    } else {\n      let n = 0;\n      while (n < points.length - 4) {\n        const [xa, ya, xb, yb, xc, yc] = points.slice(n, n + 6);\n        const dx1 = xb - xa;\n        const dx2 = xc - xb;\n        const dy1 = yb - ya;\n        const dy2 = yc - yb;\n        const br = Math.min(\n          CompactConfig.ArrowCornerRadius,\n          Math.max(Math.abs(dx1), Math.abs(dy1)) / 2,\n          Math.max(Math.abs(dx2), Math.abs(dy2)) / 2\n        );\n        const x1 = xb - br * Math.sign(dx1);\n        const y1 = yb - br * Math.sign(dy1);\n        const x2 = xb + br * Math.sign(dx2);\n        const y2 = yb + br * Math.sign(dy2);\n\n        // draw quadratic curves over corners\n        this._path += `L ${x1} ${y1} Q ${xb} ${yb} ${x2} ${y2}`;\n        n += 2;\n      }\n    }\n    // end path\n    this._path += `L ${points[points.length - 2]} ${points[points.length - 1]} `;\n    return (\n      <KonvaGroup\n        key={Layout.key++}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n      >\n        <KonvaPath\n          {...ShapeDefaultProps}\n          stroke={\n            EnvVisualizer.getPrintableMode()\n              ? CompactConfig.SA_BLUE.toString()\n              : CompactConfig.SA_WHITE.toString()\n          }\n          strokeWidth={Number(CompactConfig.ArrowStrokeWidth)}\n          hitStrokeWidth={Number(CompactConfig.ArrowHitStrokeWidth)}\n          data={this.path()}\n          key={Layout.key++}\n        />\n        <KonvaArrow\n          {...ShapeDefaultProps}\n          points={points.slice(points.length - 4)}\n          fill={\n            EnvVisualizer.getPrintableMode()\n              ? CompactConfig.SA_BLUE.toString()\n              : CompactConfig.SA_WHITE.toString()\n          }\n          strokeEnabled={false}\n          pointerWidth={Number(CompactConfig.ArrowHeadSize)}\n          key={Layout.key++}\n        />\n      </KonvaGroup>\n    );\n  }\n}\n","import { CompactConfig } from '../../EnvVisualizerCompactConfig';\nimport { StepsArray } from '../../EnvVisualizerTypes';\nimport { Frame } from '../Frame';\nimport { GenericArrow } from './GenericArrow';\n\n/** this class encapsulates an GenericArrow to be drawn between 2 points */\nexport class ArrowFromFrame extends GenericArrow<Frame, Frame> {\n  protected calculateSteps() {\n    const to = this.target;\n    if (!to) return [];\n\n    const steps: StepsArray = [(x, y) => [x + CompactConfig.FramePaddingX, y]];\n\n    if (to instanceof Frame) {\n      steps.push((x, y) => [x, y - CompactConfig.FrameMarginY]);\n      steps.push((x, y) => [to.x() + CompactConfig.FramePaddingX, y]);\n    }\n\n    steps.push((x, y) => [to.x() + CompactConfig.FramePaddingX, to.y() + to.height()]);\n    return steps;\n  }\n}\n","import React from 'react';\nimport { Rect } from 'react-konva';\n\nimport { Visible } from '../components/Visible';\nimport EnvVisualizer from '../EnvVisualizer';\nimport { CompactConfig, ShapeDefaultProps } from '../EnvVisualizerCompactConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { Data } from '../EnvVisualizerTypes';\nimport { ArrayValue } from './values/ArrayValue';\n\n/** this classes encapsulates an empty array */\nexport class ArrayEmptyUnit extends Visible {\n  readonly value: null = null;\n\n  readonly data: Data = [];\n\n  constructor(readonly parent: ArrayValue) {\n    super();\n    this._x = this.parent.x();\n    this._y = this.parent.y();\n    this._height = this.parent.height();\n    this._width = this.parent.width();\n  }\n  x(): number {\n    return this._x;\n  }\n  y(): number {\n    return this._y;\n  }\n  height(): number {\n    return this._height;\n  }\n  width(): number {\n    return this._width;\n  }\n  updatePosition = () => {\n    this._x = this.parent.x();\n    this._y = this.parent.y();\n  };\n  reset(): void {}\n\n  draw(): React.ReactNode {\n    return (\n      <Rect\n        {...ShapeDefaultProps}\n        key={Layout.key++}\n        x={this.x()}\n        y={this.y()}\n        width={this.width()}\n        height={this.height()}\n        stroke={\n          EnvVisualizer.getPrintableMode()\n            ? CompactConfig.SA_BLUE.toString()\n            : CompactConfig.SA_WHITE.toString()\n        }\n        ref={this.ref}\n      />\n    );\n  }\n}\n","import { CompactConfig } from '../../EnvVisualizerCompactConfig';\nimport { StepsArray } from '../../EnvVisualizerTypes';\nimport { Frame } from '../Frame';\nimport { FnValue } from '../values/FnValue';\nimport { GlobalFnValue } from '../values/GlobalFnValue';\nimport { GenericArrow } from './GenericArrow';\n\n/** this class encapsulates an GenericArrow to be drawn between 2 points */\nexport class ArrowFromFn extends GenericArrow<FnValue | GlobalFnValue, Frame> {\n  protected calculateSteps() {\n    const from = this.source;\n    const to = this.target;\n    if (!to) return [];\n\n    const steps: StepsArray = [(x, y) => [x + CompactConfig.FnRadius * 3, y]];\n\n    if (to.y() < from.y() && from.y() < to.y() + to.height()) {\n      steps.push((x, y) => [x, y - CompactConfig.FnRadius * 2]);\n      steps.push((x, y) => [to.x() + (from.x() < to.x() ? 0 : to.width()), y]);\n    } else {\n      steps.push(() => [to.x() + to.width() / 2, to.y() + (to.y() < from.y() ? to.height() : 0)]);\n    }\n\n    return steps;\n  }\n}\n","import React from 'react';\n\nimport { Visible } from '../../components/Visible';\nimport { CompactReferenceType, Data } from '../../EnvVisualizerTypes';\n\n/** the value of a `Binding` or an `ArrayUnit` */\nexport abstract class Value extends Visible {\n  /** draw logic */\n  abstract draw(): React.ReactNode;\n  /** add reference (binding / array unit) to this value */\n  addReference(newReference: CompactReferenceType): void {\n    this.referencedBy.push(newReference);\n  }\n  abstract updatePosition(pos?: { x: number; y: number }): void;\n\n  /** references to this value */\n  public referencedBy: CompactReferenceType[] = [];\n  /** the underlying data of this value */\n  abstract readonly data: Data;\n}\n","import { Environment } from 'Clang-slang/dist/types';\nimport { KonvaEventObject } from 'konva/lib/Node';\nimport React, { RefObject } from 'react';\nimport {\n  Circle,\n  Group,\n  Label as KonvaLabel,\n  Tag as KonvaTag,\n  Text as KonvaText\n} from 'react-konva';\n\nimport EnvVisualizer from '../../EnvVisualizer';\nimport { CompactConfig, ShapeDefaultProps } from '../../EnvVisualizerCompactConfig';\nimport { Layout } from '../../EnvVisualizerLayout';\nimport { CompactReferenceType, EnvTreeNode, FnTypes, IHoverable } from '../../EnvVisualizerTypes';\nimport {\n  getBodyText,\n  getNonEmptyEnv,\n  getParamsText,\n  getTextWidth,\n  setHoveredStyle,\n  setUnhoveredStyle\n} from '../../EnvVisualizerUtils';\nimport { ArrowFromFn } from '../arrows/ArrowFromFn';\nimport { Binding } from '../Binding';\nimport { Value } from './Value';\n\n/** this class encapsulates a JS Slang function (not from the global frame) that\n *  contains extra props such as environment and fnName */\nexport class FnValue extends Value implements IHoverable {\n  /** name of this function */\n  readonly radius: number = CompactConfig.FnRadius;\n  readonly innerRadius: number = CompactConfig.FnInnerRadius;\n  readonly tooltipWidth: number;\n  readonly centerX: number;\n\n  readonly fnName: string;\n  readonly paramsText: string;\n  readonly bodyText: string;\n  readonly exportBodyText: string;\n  readonly tooltip: string;\n  readonly exportTooltip: string;\n  readonly exportTooltipWidth: number;\n  private _arrow: ArrowFromFn | undefined;\n\n  /** the parent/enclosing environment of this fn value */\n  readonly enclosingEnvNode: EnvTreeNode;\n  readonly labelRef: RefObject<any> = React.createRef();\n\n  constructor(\n    /** underlying JS Slang function (contains extra props) */\n    readonly data: FnTypes,\n    /** what this value is being referenced by */\n    readonly referencedBy: CompactReferenceType[]\n  ) {\n    super();\n    Layout.memoizeCompactValue(this);\n\n    // derive the coordinates from the main reference (binding / array unit)\n    const mainReference = this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x =\n        mainReference.frame.x() + mainReference.frame.width() + CompactConfig.FrameMarginX / 4;\n      this._y = mainReference.y();\n      this.centerX = this._x + this.radius * 2;\n    } else {\n      if (mainReference.isLastUnit) {\n        this._x = mainReference.x() + CompactConfig.DataUnitWidth * 2;\n        this._y = mainReference.y() + CompactConfig.DataUnitHeight / 2 - this.radius;\n      } else {\n        this._x = mainReference.x();\n        this._y = mainReference.y() + mainReference.parent.height() + CompactConfig.DataUnitHeight;\n      }\n      this.centerX = this._x + CompactConfig.DataUnitWidth / 2;\n      this._x = this.centerX - this.radius * 2;\n    }\n    this._y += this.radius;\n\n    this._width = this.radius * 4;\n    this._height = this.radius * 2;\n\n    this.enclosingEnvNode = Layout.environmentTree.getTreeNode(\n      getNonEmptyEnv(this.data.environment) as Environment\n    ) as EnvTreeNode;\n    this.fnName = this.data.functionName;\n\n    this.paramsText = `params: (${getParamsText(this.data)})`;\n    this.bodyText = `body: ${getBodyText(this.data)}`;\n    this.exportBodyText =\n      (this.bodyText.length > 23 ? this.bodyText.slice(0, 20) : this.bodyText)\n        .split('\\n')\n        .slice(0, 2)\n        .join('\\n') + ' ...';\n    this.tooltip = `${this.paramsText}\\n${this.bodyText}`;\n    this.exportTooltip = `${this.paramsText}\\n${this.exportBodyText}`;\n    this.tooltipWidth = Math.max(getTextWidth(this.paramsText), getTextWidth(this.bodyText));\n    this.exportTooltipWidth = Math.max(\n      getTextWidth(this.paramsText),\n      getTextWidth(this.exportBodyText)\n    );\n  }\n\n  onMouseEnter = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    this.ref.current.moveToTop();\n    this.labelRef.current.show();\n    setHoveredStyle(currentTarget);\n  };\n\n  onMouseLeave = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    this.labelRef.current.hide();\n    setUnhoveredStyle(currentTarget);\n  };\n  updatePosition(): void {}\n  draw(): React.ReactNode {\n    this._arrow =\n      this.enclosingEnvNode.compactFrame &&\n      (new ArrowFromFn(this).to(this.enclosingEnvNode.compactFrame) as ArrowFromFn);\n    return (\n      <React.Fragment key={Layout.key++}>\n        <Group\n          onMouseEnter={e => this.onMouseEnter(e)}\n          onMouseLeave={e => this.onMouseLeave(e)}\n          ref={this.ref}\n        >\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX - this.radius}\n            y={this.y()}\n            radius={this.radius}\n            stroke={\n              EnvVisualizer.getPrintableMode()\n                ? CompactConfig.SA_BLUE.toString()\n                : CompactConfig.SA_WHITE.toString()\n            }\n          />\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX - this.radius}\n            y={this.y()}\n            radius={this.innerRadius}\n            fill={\n              EnvVisualizer.getPrintableMode()\n                ? CompactConfig.SA_BLUE.toString()\n                : CompactConfig.SA_WHITE.toString()\n            }\n          />\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX + this.radius}\n            y={this.y()}\n            radius={this.radius}\n            stroke={\n              EnvVisualizer.getPrintableMode()\n                ? CompactConfig.SA_BLUE.toString()\n                : CompactConfig.SA_WHITE.toString()\n            }\n          />\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX + this.radius}\n            y={this.y()}\n            radius={this.innerRadius}\n            fill={\n              EnvVisualizer.getPrintableMode()\n                ? CompactConfig.SA_BLUE.toString()\n                : CompactConfig.SA_WHITE.toString()\n            }\n          />\n        </Group>\n        {EnvVisualizer.getPrintableMode() ? (\n          <KonvaLabel\n            x={this.x() + this.width() + CompactConfig.TextPaddingX * 2}\n            y={this.y() - CompactConfig.TextPaddingY}\n            visible={true}\n            ref={this.labelRef}\n          >\n            <KonvaTag\n              stroke=\"black\"\n              fill={'white'}\n              opacity={Number(CompactConfig.FnTooltipOpacity)}\n            />\n            <KonvaText\n              text={this.exportTooltip}\n              fontFamily={CompactConfig.FontFamily.toString()}\n              fontSize={Number(CompactConfig.FontSize)}\n              fontStyle={CompactConfig.FontStyle.toString()}\n              fill={CompactConfig.SA_BLUE.toString()}\n              padding={5}\n            />\n          </KonvaLabel>\n        ) : (\n          <KonvaLabel\n            x={this.x() + this.width() + CompactConfig.TextPaddingX * 2}\n            y={this.y() - CompactConfig.TextPaddingY}\n            visible={false}\n            ref={this.labelRef}\n          >\n            <KonvaTag\n              stroke=\"black\"\n              fill={'black'}\n              opacity={Number(CompactConfig.FnTooltipOpacity)}\n            />\n            <KonvaText\n              text={this.tooltip}\n              fontFamily={CompactConfig.FontFamily.toString()}\n              fontSize={Number(CompactConfig.FontSize)}\n              fontStyle={CompactConfig.FontStyle.toString()}\n              fill={CompactConfig.SA_WHITE.toString()}\n              padding={5}\n            />\n          </KonvaLabel>\n        )}\n        {this._arrow?.draw()}\n      </React.Fragment>\n    );\n  }\n}\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport React, { RefObject } from 'react';\nimport {\n  Circle,\n  Group,\n  Label as KonvaLabel,\n  Tag as KonvaTag,\n  Text as KonvaText\n} from 'react-konva';\n\nimport EnvVisualizer from '../../EnvVisualizer';\nimport { CompactConfig, ShapeDefaultProps } from '../../EnvVisualizerCompactConfig';\nimport { Layout } from '../../EnvVisualizerLayout';\nimport { CompactReferenceType, IHoverable } from '../../EnvVisualizerTypes';\nimport {\n  getBodyText,\n  getParamsText,\n  getTextWidth,\n  setHoveredStyle,\n  setUnhoveredStyle\n} from '../../EnvVisualizerUtils';\nimport { ArrowFromFn } from '../arrows/ArrowFromFn';\nimport { Binding } from '../Binding';\nimport { Value } from './Value';\n\n/** this encapsulates a function from the global frame\n * (which has no extra props such as environment or fnName) */\nexport class GlobalFnValue extends Value implements IHoverable {\n  centerX: number;\n  readonly tooltipWidth: number;\n  readonly exportTooltipWidth: number;\n  readonly radius: number = CompactConfig.FnRadius;\n  readonly innerRadius: number = CompactConfig.FnInnerRadius;\n  private _arrow: ArrowFromFn | undefined;\n\n  readonly paramsText: string;\n  readonly bodyText: string;\n  readonly exportBodyText: string;\n  readonly tooltip: string;\n  readonly exportTooltip: string;\n  private selected: boolean = false;\n\n  readonly labelRef: RefObject<any> = React.createRef();\n\n  constructor(\n    /** underlying function */\n    readonly data: () => any,\n    /** what this value is being referenced by */\n    readonly referencedBy: CompactReferenceType[]\n  ) {\n    super();\n    Layout.memoizeCompactValue(this);\n\n    // derive the coordinates from the main reference (binding / array unit)\n    const mainReference = this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x =\n        mainReference.frame.x() + mainReference.frame.width() + CompactConfig.FrameMarginX / 4;\n      this._y = mainReference.y();\n      this.centerX = this._x + this.radius * 2;\n    } else {\n      if (mainReference.isLastUnit) {\n        this._x = mainReference.x() + CompactConfig.DataUnitWidth * 2;\n        this._y = mainReference.y() + CompactConfig.DataUnitHeight / 2 - this.radius;\n      } else {\n        this._x = mainReference.x();\n        this._y = mainReference.y() + mainReference.parent.height() + CompactConfig.DataUnitHeight;\n      }\n      this.centerX = this._x + CompactConfig.DataUnitWidth / 2;\n      this._x = this.centerX - this.radius * 2;\n    }\n    this._y += this.radius;\n\n    this._width = this.radius * 4;\n    this._height = this.radius * 2;\n\n    this.paramsText = `params: ${getParamsText(this.data)}`;\n    this.bodyText = `body: ${getBodyText(this.data)}`;\n    this.exportBodyText =\n      (this.bodyText.length > 23 ? this.bodyText.slice(0, 20) : this.bodyText)\n        .split('\\n')\n        .slice(0, 2)\n        .join('\\n') + ' ...';\n    this.tooltip = `${this.paramsText}\\n${this.bodyText}`;\n    this.exportTooltip = `${this.paramsText}\\n${this.exportBodyText}`;\n    this.tooltipWidth =\n      Math.max(getTextWidth(this.paramsText), getTextWidth(this.bodyText)) +\n      CompactConfig.TextPaddingX;\n    this.exportTooltipWidth = Math.max(\n      getTextWidth(this.paramsText),\n      getTextWidth(this.exportBodyText)\n    );\n  }\n  isSelected(): boolean {\n    return this.selected;\n  }\n  arrow(): ArrowFromFn | undefined {\n    return this._arrow;\n  }\n\n  updatePosition(): void {\n    const mainReference = this.referencedBy.find(x => x instanceof Binding) || this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x =\n        mainReference.frame.x() + mainReference.frame.width() + CompactConfig.FrameMarginX / 4;\n      this._y = mainReference.y();\n      this.centerX = this._x + this.radius * 2;\n    } else {\n      if (mainReference.isLastUnit) {\n        this._x = mainReference.x() + CompactConfig.DataUnitWidth * 2;\n        this._y = mainReference.y() + CompactConfig.DataUnitHeight / 2 - this.radius;\n      } else {\n        this._x = mainReference.x();\n        this._y = mainReference.y() + mainReference.parent.height() + CompactConfig.DataUnitHeight;\n      }\n      this.centerX = this._x + CompactConfig.DataUnitWidth / 2;\n      this._x = this.centerX - this.radius * 2;\n    }\n    this._y += this.radius;\n  }\n\n  onMouseEnter = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    this.labelRef.current.show();\n    setHoveredStyle(currentTarget);\n  };\n\n  onMouseLeave = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    if (!this.selected) {\n      this.labelRef.current.hide();\n      setUnhoveredStyle(currentTarget);\n    } else {\n      const container = currentTarget.getStage()?.container();\n      container && (container.style.cursor = 'default');\n    }\n  };\n  onClick = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    if (EnvVisualizer.getPrintableMode()) return;\n    this.selected = !this.selected;\n    if (!this.selected) {\n      this.labelRef.current.hide();\n      setUnhoveredStyle(currentTarget);\n    } else {\n      this.labelRef.current.show();\n      setHoveredStyle(currentTarget);\n    }\n  };\n\n  draw(): React.ReactNode {\n    this._isDrawn = true;\n    this._arrow =\n      Layout.globalEnvNode.compactFrame &&\n      (new ArrowFromFn(this).to(Layout.globalEnvNode.compactFrame) as ArrowFromFn);\n    return (\n      <React.Fragment key={Layout.key++}>\n        <Group\n          onMouseEnter={e => this.onMouseEnter(e)}\n          onMouseLeave={e => this.onMouseLeave(e)}\n          onClick={e => this.onClick(e)}\n          ref={this.ref}\n        >\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX - this.radius}\n            y={this.y()}\n            radius={this.radius}\n            stroke={\n              EnvVisualizer.getPrintableMode()\n                ? CompactConfig.SA_BLUE.toString()\n                : CompactConfig.SA_WHITE.toString()\n            }\n          />\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX - this.radius}\n            y={this.y()}\n            radius={this.innerRadius}\n            fill={\n              EnvVisualizer.getPrintableMode()\n                ? CompactConfig.SA_BLUE.toString()\n                : CompactConfig.SA_WHITE.toString()\n            }\n          />\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX + this.radius}\n            y={this.y()}\n            radius={this.radius}\n            stroke={\n              EnvVisualizer.getPrintableMode()\n                ? CompactConfig.SA_BLUE.toString()\n                : CompactConfig.SA_WHITE.toString()\n            }\n          />\n          <Circle\n            {...ShapeDefaultProps}\n            key={Layout.key++}\n            x={this.centerX + this.radius}\n            y={this.y()}\n            radius={this.innerRadius}\n            fill={\n              EnvVisualizer.getPrintableMode()\n                ? CompactConfig.SA_BLUE.toString()\n                : CompactConfig.SA_WHITE.toString()\n            }\n          />\n        </Group>\n        {EnvVisualizer.getPrintableMode() ? (\n          <KonvaLabel\n            x={this.x() + this.width() + CompactConfig.TextPaddingX * 2}\n            y={this.y() - CompactConfig.TextPaddingY}\n            visible={true}\n            ref={this.labelRef}\n          >\n            <KonvaTag\n              stroke=\"black\"\n              fill={'white'}\n              opacity={Number(CompactConfig.FnTooltipOpacity)}\n            />\n            <KonvaText\n              text={this.exportTooltip}\n              fontFamily={CompactConfig.FontFamily.toString()}\n              fontSize={Number(CompactConfig.FontSize)}\n              fontStyle={CompactConfig.FontStyle.toString()}\n              fill={CompactConfig.SA_BLUE.toString()}\n              padding={5}\n            />\n          </KonvaLabel>\n        ) : (\n          <KonvaLabel\n            x={this.x() + this.width() + CompactConfig.TextPaddingX * 2}\n            y={this.y() - CompactConfig.TextPaddingY}\n            visible={false}\n            ref={this.labelRef}\n          >\n            <KonvaTag\n              stroke=\"black\"\n              fill={'black'}\n              opacity={Number(CompactConfig.FnTooltipOpacity)}\n            />\n            <KonvaText\n              text={this.tooltip}\n              fontFamily={CompactConfig.FontFamily.toString()}\n              fontSize={Number(CompactConfig.FontSize)}\n              fontStyle={CompactConfig.FontStyle.toString()}\n              fill={CompactConfig.SA_WHITE.toString()}\n              padding={5}\n            />\n          </KonvaLabel>\n        )}\n        {Layout.globalEnvNode.compactFrame &&\n          new ArrowFromFn(this).to(Layout.globalEnvNode.compactFrame).draw()}\n      </React.Fragment>\n    );\n  }\n}\n","import { CompactConfig } from '../../EnvVisualizerCompactConfig';\nimport { StepsArray } from '../../EnvVisualizerTypes';\nimport { ArrayUnit } from '../ArrayUnit';\nimport { ArrayValue } from '../values/ArrayValue';\nimport { FnValue } from '../values/FnValue';\nimport { GlobalFnValue } from '../values/GlobalFnValue';\nimport { Value } from '../values/Value';\nimport { GenericArrow } from './GenericArrow';\n\n/** this class encapsulates an GenericArrow to be drawn between 2 points */\nexport class ArrowFromArrayUnit extends GenericArrow<ArrayUnit, Value> {\n  protected calculateSteps() {\n    const from = this.source;\n    const to = this.target;\n    if (!to) return [];\n\n    const steps: StepsArray = [\n      (x, y) => [x + CompactConfig.DataUnitWidth / 2, y + CompactConfig.DataUnitHeight / 2]\n    ];\n\n    if (to instanceof FnValue || to instanceof GlobalFnValue) {\n      steps.push(() => [from.x() < to.x() ? to.x() : to.centerX, to.y()]);\n    } else if (to instanceof ArrayValue) {\n      if (from.y() === to.y()) {\n        if (Math.abs(from.x() - to.x()) > CompactConfig.DataUnitWidth * 2) {\n          steps.push((x, y) => [x, y - CompactConfig.DataUnitHeight]);\n          steps.push(() => [\n            to.x() + CompactConfig.DataUnitWidth / 2,\n            to.y() - CompactConfig.DataUnitHeight / 2\n          ]);\n          steps.push((x, y) => [x, y + CompactConfig.DataUnitHeight / 2]);\n        } else {\n          steps.push(() => [to.x(), to.y() + CompactConfig.DataUnitHeight / 2]);\n        }\n      } else {\n        steps.push(() => [\n          to.x() + CompactConfig.DataUnitWidth / 2,\n          to.y() + (from.y() > to.y() ? CompactConfig.DataUnitHeight : 0)\n        ]);\n      }\n    }\n\n    return steps;\n  }\n}\n","import React from 'react';\nimport { Line as KonvaLine } from 'react-konva';\n\nimport { Visible } from '../components/Visible';\nimport EnvVisualizer from '../EnvVisualizer';\nimport { CompactConfig, ShapeDefaultProps } from '../EnvVisualizerCompactConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { CompactReferenceType, ReferenceType } from '../EnvVisualizerTypes';\n\n/** this classes encapsulates a null value in Source pairs or arrays */\nexport class ArrayNullUnit extends Visible {\n  arrayUnit: CompactReferenceType | ReferenceType;\n  referencedBy: (CompactReferenceType | ReferenceType)[];\n\n  constructor(referencedBy: (CompactReferenceType | ReferenceType)[]) {\n    super();\n    this.referencedBy = referencedBy;\n    this.arrayUnit = referencedBy[0];\n    this._x = this.arrayUnit.x();\n    this._y = this.arrayUnit.y();\n    this._height = this.arrayUnit.height();\n    this._width = this.arrayUnit.width();\n  }\n\n  updatePosition = () => {};\n\n  draw(): React.ReactNode {\n    return (\n      <KonvaLine\n        {...ShapeDefaultProps}\n        key={Layout.key++}\n        points={[this.x(), this.y() + this.height(), this.x() + this.width(), this.y()]}\n        stroke={\n          EnvVisualizer.getPrintableMode()\n            ? CompactConfig.SA_BLUE.toString()\n            : CompactConfig.SA_WHITE.toString()\n        }\n        hitStrokeWidth={Number(CompactConfig.DataHitStrokeWidth)}\n        ref={this.ref}\n        listening={false}\n      />\n    );\n  }\n}\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport React from 'react';\nimport { Label as KonvaLabel, Tag as KonvaTag, Text as KonvaText } from 'react-konva';\n\nimport { Visible } from '../components/Visible';\nimport { CompactConfig, ShapeDefaultProps } from '../EnvVisualizerCompactConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { Data, IHoverable } from '../EnvVisualizerTypes';\nimport { getTextWidth } from '../EnvVisualizerUtils';\n\nexport interface TextOptions {\n  maxWidth: number;\n  fontSize: number;\n  fontFamily: string;\n  fontStyle: string;\n  fontVariant: string;\n  isStringIdentifiable: boolean;\n}\n\nexport const defaultOptions: TextOptions = {\n  maxWidth: Number.MAX_VALUE, // maximum width this text should be\n  fontFamily: CompactConfig.FontFamily.toString(), // default is Arial\n  fontSize: Number(CompactConfig.FontSize), // in pixels. Default is 12\n  fontStyle: CompactConfig.FontStyle.toString(), // can be normal, bold, or italic. Default is normal\n  fontVariant: CompactConfig.FontVariant.toString(), // can be normal or small-caps. Default is normal\n  isStringIdentifiable: false // if true, contain strings within double quotation marks \"\". Default is false\n};\n\n/** this class encapsulates a string to be drawn onto the canvas */\nexport class Text extends Visible implements IHoverable {\n  readonly _height: number;\n  readonly _width: number;\n\n  readonly partialStr: string; // truncated string representation of data\n  readonly fullStr: string; // full string representation of data\n\n  readonly options: TextOptions = defaultOptions;\n\n  constructor(\n    readonly data: Data,\n    readonly _x: number,\n    readonly _y: number,\n    /** additional options (for customization of text) */\n    options: Partial<TextOptions> = {}\n  ) {\n    super();\n    this.options = { ...this.options, ...options };\n\n    const { fontSize, fontStyle, fontFamily, maxWidth, isStringIdentifiable } = this.options;\n\n    this.fullStr = this.partialStr = isStringIdentifiable\n      ? JSON.stringify(data) || String(data)\n      : String(data);\n    this._height = fontSize;\n\n    const widthOf = (s: string) => getTextWidth(s, `${fontStyle} ${fontSize}px ${fontFamily}`);\n    if (widthOf(this.partialStr) > maxWidth) {\n      let truncatedText = CompactConfig.Ellipsis.toString();\n      let i = 0;\n      while (\n        widthOf(this.partialStr.substring(0, i) + CompactConfig.Ellipsis.toString()) < maxWidth\n      ) {\n        truncatedText = this.partialStr.substring(0, i++) + CompactConfig.Ellipsis.toString();\n      }\n      this._width = widthOf(truncatedText);\n      this.partialStr = truncatedText;\n    } else {\n      this._width = Math.max(CompactConfig.TextMinWidth, widthOf(this.partialStr));\n    }\n  }\n\n  onMouseEnter = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    const container = currentTarget.getStage()?.container();\n    container && (container.style.cursor = 'pointer');\n    this.ref.current.moveToTop();\n    this.ref.current.show();\n    currentTarget.getLayer()?.draw();\n  };\n\n  onMouseLeave = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    const container = currentTarget.getStage()?.container();\n    container && (container.style.cursor = 'default');\n    this.ref.current.hide();\n    currentTarget.getLayer()?.draw();\n  };\n\n  draw(): React.ReactNode {\n    const props = {\n      fontFamily: this.options.fontFamily,\n      fontSize: this.options.fontSize,\n      fontStyle: this.options.fontStyle,\n      fill: CompactConfig.SA_WHITE.toString()\n    };\n    return (\n      <React.Fragment key={Layout.key++}>\n        <KonvaLabel\n          x={this.x()}\n          y={this.y()}\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n        >\n          <KonvaText {...ShapeDefaultProps} key={Layout.key++} text={this.partialStr} {...props} />\n        </KonvaLabel>\n        <KonvaLabel\n          x={this.x()}\n          y={this.y()}\n          ref={this.ref}\n          visible={false}\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n        >\n          <KonvaTag {...ShapeDefaultProps} fill={'black'} opacity={0.5} />\n          <KonvaText {...ShapeDefaultProps} key={Layout.key++} text={this.fullStr} {...props} />\n        </KonvaLabel>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nimport { CompactConfig } from '../../EnvVisualizerCompactConfig';\nimport { Layout } from '../../EnvVisualizerLayout';\nimport { CompactReferenceType, PrimitiveTypes } from '../../EnvVisualizerTypes';\nimport { getTextWidth, isNull } from '../../EnvVisualizerUtils';\nimport { ArrayNullUnit } from '../ArrayNullUnit';\nimport { Binding } from '../Binding';\nimport { Text } from '../Text';\nimport { Value } from './Value';\n\n/** this classes encapsulates a primitive value in Source: number, string or null */\nexport class PrimitiveValue extends Value {\n  /** the text to be rendered */\n  readonly text: Text | ArrayNullUnit;\n\n  constructor(\n    /** data */\n    readonly data: PrimitiveTypes,\n    /** what this value is being referenced by */\n    readonly referencedBy: CompactReferenceType[]\n  ) {\n    super();\n\n    // derive the coordinates from the main reference (binding / array unit)\n    const mainReference = this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x =\n        mainReference.x() + getTextWidth(mainReference.keyString) + CompactConfig.TextPaddingX;\n      this._y = mainReference.y();\n      this.text = new Text(this.data, this.x(), this.y(), { isStringIdentifiable: true });\n    } else {\n      const maxWidth = mainReference.width();\n      const textWidth = Math.min(getTextWidth(String(this.data)), maxWidth);\n      this._x = mainReference.x() + (mainReference.width() - textWidth) / 2;\n      this._y = mainReference.y() + (mainReference.height() - CompactConfig.FontSize) / 2;\n      this.text = isNull(this.data)\n        ? new ArrayNullUnit([mainReference])\n        : new Text(this.data, this.x(), this.y(), {\n            maxWidth: maxWidth,\n            isStringIdentifiable: true\n          });\n    }\n\n    this._width = this.text.width();\n    this._height = this.text.height();\n  }\n  updatePosition(): void {}\n  draw(): React.ReactNode {\n    return <React.Fragment key={Layout.key++}>{this.text.draw()}</React.Fragment>;\n  }\n}\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport React from 'react';\n\nimport { RoundedRect } from '../components/shapes/RoundedRect';\nimport { Visible } from '../components/Visible';\nimport EnvVisualizer from '../EnvVisualizer';\nimport { CompactConfig } from '../EnvVisualizerCompactConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { Data } from '../EnvVisualizerTypes';\nimport { setHoveredStyle, setUnhoveredStyle } from '../EnvVisualizerUtils';\nimport { Arrow } from './arrows/Arrow';\nimport { ArrowFromArrayUnit } from './arrows/ArrowFromArrayUnit';\nimport { ArrayValue } from './values/ArrayValue';\nimport { PrimitiveValue } from './values/PrimitiveValue';\nimport { Value } from './values/Value';\n\n/** this class encapsulates a single unit (box) of array to be rendered.\n *  this unit is part of an ArrayValue */\nexport class ArrayUnit extends Visible {\n  readonly value: Value;\n\n  /** check if this is the first unit in the array */\n  readonly isFirstUnit: boolean;\n  /** check if this is the last unit in the array */\n  readonly isLastUnit: boolean;\n  /** check if this unit is the main reference of the value */\n  readonly isMainReference: boolean;\n  parent: ArrayValue;\n  arrow: Arrow | undefined = undefined;\n\n  constructor(\n    /** index of this unit in its parent */\n    readonly idx: number,\n    /** the value this unit contains*/\n    readonly data: Data,\n    /** parent of this unit */\n    parent: ArrayValue\n  ) {\n    super();\n    this.parent = parent;\n    this._x = this.parent.x() + this.idx * CompactConfig.DataUnitWidth;\n    this._y = this.parent.y();\n    this._height = CompactConfig.DataUnitHeight;\n    this._width = CompactConfig.DataUnitWidth;\n    this.isFirstUnit = this.idx === 0;\n    this.isLastUnit = this.idx === this.parent.data.length - 1;\n    this.value = Layout.createCompactValue(this.data, this);\n    this.isMainReference = this.value.referencedBy.length > 1;\n  }\n\n  updatePosition = () => {};\n\n  onMouseEnter = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    setHoveredStyle(currentTarget);\n  };\n\n  onMouseLeave = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    setUnhoveredStyle(currentTarget);\n  };\n\n  draw(): React.ReactNode {\n    if (this.isDrawn()) return null;\n    this._isDrawn = true;\n\n    const cornerRadius = {\n      upperLeft: 0,\n      lowerLeft: 0,\n      upperRight: 0,\n      lowerRight: 0\n    };\n\n    if (this.isFirstUnit)\n      cornerRadius.upperLeft = cornerRadius.lowerLeft = Number(CompactConfig.DataCornerRadius);\n    if (this.isLastUnit)\n      cornerRadius.upperRight = cornerRadius.lowerRight = Number(CompactConfig.DataCornerRadius);\n\n    return (\n      <React.Fragment key={Layout.key++}>\n        <RoundedRect\n          key={Layout.key++}\n          x={this.x()}\n          y={this.y()}\n          width={this.width()}\n          height={this.height()}\n          stroke={\n            EnvVisualizer.getPrintableMode()\n              ? CompactConfig.SA_BLUE.toString()\n              : CompactConfig.SA_WHITE.toString()\n          }\n          hitStrokeWidth={Number(CompactConfig.DataHitStrokeWidth)}\n          fillEnabled={false}\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n          cornerRadius={cornerRadius}\n          forwardRef={this.ref}\n        />\n        {this.value.draw()}\n        {this.value instanceof PrimitiveValue || new ArrowFromArrayUnit(this).to(this.value).draw()}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nimport { CompactConfig } from '../../EnvVisualizerCompactConfig';\nimport { Layout } from '../../EnvVisualizerLayout';\nimport { CompactReferenceType, Data } from '../../EnvVisualizerTypes';\nimport { ArrayEmptyUnit } from '../ArrayEmptyUnit';\nimport { ArrayUnit } from '../ArrayUnit';\nimport { Binding } from '../Binding';\nimport { PrimitiveValue } from './PrimitiveValue';\nimport { Value } from './Value';\n\n/** this class encapsulates an array value in source,\n *  defined as a JS array with not 2 elements */\nexport class ArrayValue extends Value {\n  /** array of units this array is made of */\n  units: ArrayUnit[] = [];\n\n  constructor(\n    /** underlying values this array contains */\n    readonly data: Data[],\n    /** what this value is being referenced by */\n    readonly referencedBy: CompactReferenceType[]\n  ) {\n    super();\n    Layout.memoizeCompactValue(this);\n\n    // derive the coordinates from the main reference (binding / array unit)\n    const mainReference = this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x = mainReference.frame.x() + mainReference.frame.width() + CompactConfig.FrameMarginX;\n      this._y = mainReference.y();\n    } else {\n      if (mainReference.isLastUnit) {\n        this._x = mainReference.x() + CompactConfig.DataUnitWidth * 2;\n        this._y = mainReference.y();\n      } else {\n        this._x = mainReference.x();\n        this._y = mainReference.y() + mainReference.parent.height() + CompactConfig.DataUnitHeight;\n      }\n    }\n\n    this._width = this.data.length * CompactConfig.DataUnitWidth + CompactConfig.DataMinWidth;\n    this._height = CompactConfig.DataUnitHeight;\n\n    // initialize array units from the last index\n    for (let i = this.data.length - 1; i >= 0; i--) {\n      const unit = new ArrayUnit(i, this.data[i], this);\n\n      // update the dimensions, so that children array values can derive their coordinates\n      // from these intermediate dimensions\n\n      // update the width\n      this._width = Math.max(\n        this.width(),\n        unit.value.width() +\n          (!(unit.value instanceof PrimitiveValue) && i === this.data.length - 1\n            ? (i + 1) * CompactConfig.DataUnitWidth + CompactConfig.DataUnitWidth\n            : i * CompactConfig.DataUnitWidth)\n      );\n\n      // update the height\n      this._height = Math.max(\n        this._height,\n        unit.value instanceof PrimitiveValue || unit.isMainReference\n          ? CompactConfig.DataUnitHeight\n          : unit.value.y() + unit.value.height() - unit.y()\n      );\n\n      this.units = [unit, ...this.units];\n    }\n  }\n  reset(): void {\n    super.reset();\n    this.units.map(x => x.reset());\n    this.referencedBy.length = 0;\n  }\n  updatePosition(): void {}\n\n  draw(): React.ReactNode {\n    if (this.isDrawn()) return null;\n    this._isDrawn = true;\n    return (\n      <React.Fragment key={Layout.key++}>\n        {this.units.length > 0\n          ? this.units.map(unit => unit.draw())\n          : new ArrayEmptyUnit(this).draw()}\n      </React.Fragment>\n    );\n  }\n}\n","import { CompactConfig } from '../../EnvVisualizerCompactConfig';\nimport { StepsArray } from '../../EnvVisualizerTypes';\nimport { Text } from '../Text';\nimport { ArrayValue } from '../values/ArrayValue';\nimport { Value } from '../values/Value';\nimport { GenericArrow } from './GenericArrow';\n\n/** this class encapsulates an GenericArrow to be drawn between 2 points */\nexport class ArrowFromText extends GenericArrow<Text, Value> {\n  protected calculateSteps() {\n    const from = this.source;\n    const to = this.target;\n    if (!to) return [];\n\n    const steps: StepsArray = [(x, y) => [x + from.width(), y + from.height() / 2]];\n\n    if (to.x() < from.x()) {\n      if (to instanceof ArrayValue) {\n        steps.push((x, y) => [x + CompactConfig.TextMargin, y]);\n        steps.push((x, y) => [x, to.y() - CompactConfig.DataUnitHeight / 3]);\n        steps.push((x, y) => [to.x() + CompactConfig.DataUnitWidth / 2, y]);\n        steps.push((x, y) => [x, to.y()]);\n      } else {\n        steps.push((x, y) => [x + CompactConfig.TextMargin, y]);\n        steps.push((x, y) => [x, y - from.height() / 2 - CompactConfig.TextMargin]);\n        steps.push((x, y) => [to.x() + to.width() + CompactConfig.ArrowHeadSize, y]);\n        steps.push((x, y) => [x, to.y()]);\n        steps.push((x, y) => [x - CompactConfig.ArrowHeadSize, y]);\n      }\n    } else {\n      steps.push((x, y) => [\n        to.x(),\n        to.y() + (to instanceof ArrayValue ? CompactConfig.DataUnitHeight / 2 : 0)\n      ]);\n    }\n\n    return steps;\n  }\n}\n","import React from 'react';\n\nimport { CompactConfig } from '../../EnvVisualizerCompactConfig';\nimport { Layout } from '../../EnvVisualizerLayout';\nimport { CompactReferenceType, UnassignedData } from '../../EnvVisualizerTypes';\nimport { getTextWidth } from '../../EnvVisualizerUtils';\nimport { Binding } from '../Binding';\nimport { Text } from '../Text';\nimport { Value } from './Value';\n\n/** this class encapsulates an unassigned value in Source, internally represented as a symbol */\nexport class UnassignedValue extends Value {\n  readonly data: UnassignedData = Symbol();\n  readonly text: Text;\n\n  constructor(readonly referencedBy: CompactReferenceType[]) {\n    super();\n\n    // derive the coordinates from the main reference (binding / array unit)\n    const mainReference = this.referencedBy[0];\n    if (mainReference instanceof Binding) {\n      this._x =\n        mainReference.x() + getTextWidth(mainReference.keyString) + CompactConfig.TextPaddingX;\n      this._y = mainReference.y();\n      this.text = new Text(CompactConfig.UnassignedData.toString(), this._x, this._y, {\n        isStringIdentifiable: false\n      });\n    } else {\n      const maxWidth = mainReference.width();\n      const textWidth = Math.min(getTextWidth(String(this.data)), maxWidth);\n      this._x = mainReference.x() + (mainReference.width() - textWidth) / 2;\n      this._y = mainReference.y() + (mainReference.height() - CompactConfig.FontSize) / 2;\n      this.text = new Text(CompactConfig.UnassignedData.toString(), this._x, this._y, {\n        maxWidth: maxWidth,\n        isStringIdentifiable: false\n      });\n    }\n\n    this._width = this.text.width();\n    this._height = this.text.height();\n  }\n\n  reset(): void {\n    super.reset();\n    this.referencedBy.length = 0;\n  }\n  updatePosition(): void {}\n\n  draw(): React.ReactNode {\n    this._isDrawn = true;\n    return <React.Fragment key={Layout.key++}>{this.text.draw()}</React.Fragment>;\n  }\n}\n","import React from 'react';\n\nimport { Visible } from '../components/Visible';\nimport { CompactConfig } from '../EnvVisualizerCompactConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { Data } from '../EnvVisualizerTypes';\nimport { isCompactMainReference, isDummyKey } from '../EnvVisualizerUtils';\nimport { ArrowFromText } from './arrows/ArrowFromText';\nimport { GenericArrow } from './arrows/GenericArrow';\nimport { Frame } from './Frame';\nimport { Text } from './Text';\nimport { ArrayValue } from './values/ArrayValue';\nimport { FnValue } from './values/FnValue';\nimport { GlobalFnValue } from './values/GlobalFnValue';\nimport { PrimitiveValue } from './values/PrimitiveValue';\nimport { UnassignedValue } from './values/UnassignedValue';\nimport { Value } from './values/Value';\n\n/** a `binding` is a key-value pair in a frame */\nexport class Binding extends Visible {\n  /** value associated with this binding */\n  readonly value: Value;\n  /** key of this binding */\n  readonly key: Text;\n  /**\n   * `true` if this is a dummy binding\n   * i.e. the value is anonymous\n   */\n  readonly isDummyBinding: boolean = false;\n  private arrow: GenericArrow<Text, Value> | undefined = undefined;\n  public getArrow = (): GenericArrow<Text, Value> | undefined => {\n    return this.arrow;\n  };\n\n  constructor(\n    /** the key of this binding */\n    readonly keyString: string,\n    /** the value of this binding */\n    readonly data: Data,\n    /** frame this binding is in */\n    readonly frame: Frame,\n    /** previous binding (the binding above it) */\n    readonly prevBinding: Binding | null,\n    readonly isConstant: boolean = false\n  ) {\n    super();\n    this.isDummyBinding = isDummyKey(this.keyString);\n\n    // derive the coordinates from the binding above it\n    if (this.prevBinding) {\n      this._x = this.prevBinding.x();\n      this._y = this.prevBinding.y() + this.prevBinding.height() + CompactConfig.TextPaddingY;\n    } else {\n      this._x = this.frame.x() + CompactConfig.FramePaddingX;\n      this._y = this.frame.y() + CompactConfig.FramePaddingY;\n    }\n\n    this.keyString += isConstant ? CompactConfig.ConstantColon : CompactConfig.VariableColon;\n    this.value = Layout.createCompactValue(data, this);\n\n    const keyYOffset =\n      this.value instanceof ArrayValue\n        ? (CompactConfig.DataUnitHeight - CompactConfig.FontSize) / 2\n        : (this.value.height() - CompactConfig.FontSize) / 2;\n\n    this.key = new Text(this.keyString, this.x(), this.y() + keyYOffset);\n\n    // derive the width from the right bound of the value\n    this._width = isCompactMainReference(this.value, this)\n      ? this.value.x() +\n        this.value.width() -\n        this.x() +\n        (this.value instanceof FnValue || this.value instanceof GlobalFnValue\n          ? this.value.tooltipWidth\n          : 0)\n      : this.key.width();\n\n    this._height = Math.max(this.key.height(), this.value.height());\n\n    if (this.isDummyBinding && !isCompactMainReference(this.value, this)) {\n      if (this.prevBinding) {\n        this._y = this.prevBinding.y();\n        this._width = this.prevBinding.width();\n        this._height = this.prevBinding.height();\n      }\n    }\n  }\n\n  draw(): React.ReactNode {\n    return (\n      <React.Fragment key={Layout.key++}>\n        {this.isDummyBinding\n          ? null // omit the key since value is anonymous\n          : this.key.draw()}\n        {this.isDummyBinding || // value is unreferenced in dummy binding\n        this.value instanceof PrimitiveValue ||\n        this.value instanceof UnassignedValue\n          ? null\n          : new ArrowFromText(this.key).to(this.value).draw()}\n        {isCompactMainReference(this.value, this) ? this.value.draw() : null}\n      </React.Fragment>\n    );\n  }\n}\n","import { KonvaEventObject } from 'konva/lib/Node';\nimport React from 'react';\nimport { Group, Rect } from 'react-konva';\n\nimport { Visible } from '../components/Visible';\nimport EnvVisualizer from '../EnvVisualizer';\nimport { CompactConfig, ShapeDefaultProps } from '../EnvVisualizerCompactConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { Env, EnvTreeNode, IHoverable } from '../EnvVisualizerTypes';\nimport {\n  getNonEmptyEnv,\n  getTextWidth,\n  isDummyKey,\n  isPrimitiveData,\n  isUnassigned,\n  setHoveredStyle,\n  setUnhoveredStyle\n} from '../EnvVisualizerUtils';\nimport { ArrowFromFrame } from './arrows/ArrowFromFrame';\nimport { Binding } from './Binding';\nimport { Level } from './Level';\nimport { Text } from './Text';\n\nconst frameNames = new Map([\n  ['global', 'Global'],\n  ['programEnvironment', 'Program'],\n  ['forLoopEnvironment', 'Body of for-loop'],\n  ['forBlockEnvironment', 'Control variable of for-loop'],\n  ['blockEnvironment', 'Block'],\n  ['functionBodyEnvironment', 'Function Body']\n]);\n\n/** this class encapsulates a frame of key-value bindings to be drawn on canvas */\nexport class Frame extends Visible implements IHoverable {\n  /** total height = frame height + frame title height */\n  readonly totalHeight: number;\n  /** width of this frame + max width of the bound values */\n  readonly totalWidth: number;\n\n  /** the bindings this frame contains */\n  readonly bindings: Binding[] = [];\n  /** name of this frame to display */\n  readonly name: Text;\n  /** the level in which this frame resides */\n  readonly level: Level | undefined;\n  /** environment associated with this frame */\n  readonly environment: Env;\n  /** the parent/enclosing frame of this frame (the frame above it) */\n  readonly parentFrame: Frame | undefined;\n\n  constructor(\n    /** environment tree node that contains this frame */\n    readonly envTreeNode: EnvTreeNode,\n    /** the frame to the left of this frame, on the same level. used for calculating this frame's position */\n    readonly leftSiblingFrame: Frame | null\n  ) {\n    super();\n    this._width = CompactConfig.FrameMinWidth;\n    this.level = envTreeNode.compactLevel as Level;\n    this.environment = envTreeNode.environment;\n    this.parentFrame = envTreeNode.parent?.compactFrame;\n    this._x = this.level.x();\n    // derive the x coordinate from the left sibling frame\n    this.leftSiblingFrame &&\n      (this._x +=\n        this.leftSiblingFrame.x() + this.leftSiblingFrame.totalWidth + CompactConfig.FrameMarginX);\n\n    this.name = new Text(\n      frameNames.get(this.environment.name) || this.environment.name,\n      this.x(),\n      this.level.y(),\n      { maxWidth: this.width() }\n    );\n    this._y = this.level.y() + this.name.height() + CompactConfig.TextPaddingY / 2;\n\n    // width of the frame = max width of the bindings in the frame + frame padding * 2 (the left and right padding)\n    let maxBindingWidth = 0;\n    for (const [key, data] of Object.entries(this.environment.head)) {\n      const bindingWidth =\n        Math.max(CompactConfig.TextMinWidth, getTextWidth(key + CompactConfig.ConstantColon)) +\n        CompactConfig.TextPaddingX +\n        (isUnassigned(data)\n          ? Math.max(\n              CompactConfig.TextMinWidth,\n              getTextWidth(CompactConfig.UnassignedData.toString())\n            )\n          : isPrimitiveData(data)\n          ? Math.max(CompactConfig.TextMinWidth, getTextWidth(String(data)))\n          : 0);\n      maxBindingWidth = Math.max(maxBindingWidth, bindingWidth);\n    }\n    this._width = maxBindingWidth + CompactConfig.FramePaddingX * 2;\n\n    // initializes bindings (keys + values)\n    let prevBinding: Binding | null = null;\n    let totalWidth = this._width;\n\n    const descriptors = Object.getOwnPropertyDescriptors(this.environment.head);\n    const entries = [];\n    const dummyEntries = [];\n    for (const entry of Object.entries(descriptors)) {\n      if (isDummyKey(entry[0])) {\n        const actualEnv = getNonEmptyEnv(entry[1].value.environment);\n        if (\n          this.environment.id === CompactConfig.GlobalEnvId ||\n          (actualEnv && actualEnv.id === this.environment.id)\n        ) {\n          dummyEntries.push(entry);\n        }\n      } else {\n        entries.push(entry);\n      }\n    }\n    entries.push(...dummyEntries);\n\n    for (const [key, data] of entries) {\n      const currBinding: Binding = new Binding(key, data.value, this, prevBinding, !data.writable);\n      this.bindings.push(currBinding);\n      prevBinding = currBinding;\n      totalWidth = Math.max(totalWidth, currBinding.width() + CompactConfig.FramePaddingX);\n    }\n    this.totalWidth = totalWidth;\n\n    // derive the height of the frame from the the position of the last binding\n    this._height = prevBinding\n      ? prevBinding.y() + prevBinding.height() + CompactConfig.FramePaddingY - this.y()\n      : CompactConfig.FramePaddingY * 2;\n\n    this.totalHeight = this.height() + this.name.height() + CompactConfig.TextPaddingY / 2;\n  }\n\n  onMouseEnter = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    setHoveredStyle(currentTarget);\n  };\n\n  onMouseLeave = ({ currentTarget }: KonvaEventObject<MouseEvent>) => {\n    setUnhoveredStyle(currentTarget);\n  };\n\n  draw(): React.ReactNode {\n    return (\n      <Group key={Layout.key++}>\n        {this.name.draw()}\n        <Rect\n          {...ShapeDefaultProps}\n          x={this.x()}\n          y={this.y()}\n          width={this.width()}\n          height={this.height()}\n          stroke={\n            EnvVisualizer.getPrintableMode()\n              ? CompactConfig.SA_BLUE.toString()\n              : CompactConfig.SA_WHITE.toString()\n          }\n          cornerRadius={Number(CompactConfig.FrameCornerRadius)}\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n          key={Layout.key++}\n        />\n        {this.bindings.map(binding => binding.draw())}\n        {this.parentFrame && new ArrowFromFrame(this).to(this.parentFrame).draw()}\n      </Group>\n    );\n  }\n}\n","import React from 'react';\nimport { Group, Rect } from 'react-konva';\n\nimport { Visible } from '../components/Visible';\nimport { CompactConfig, ShapeDefaultProps } from '../EnvVisualizerCompactConfig';\nimport { Layout } from '../EnvVisualizerLayout';\nimport { EnvTreeNode } from '../EnvVisualizerTypes';\nimport { Frame } from './Frame';\n\n/** this class encapsulates a level of frames to be drawn with the same y values */\nexport class Level extends Visible {\n  /** all the frames in this level */\n  readonly frames: Frame[] = [];\n\n  constructor(\n    /** the level of this */\n    readonly parentLevel: Level | null,\n    /** the environment tree nodes contained in this level */\n    readonly envTreeNodes: EnvTreeNode[]\n  ) {\n    super();\n    this._x = CompactConfig.CanvasPaddingX;\n    this._y = CompactConfig.CanvasPaddingY;\n    this.parentLevel && (this._y += this.parentLevel.height() + this.parentLevel.y());\n    let prevFrame: Frame | null = null;\n    envTreeNodes.forEach(e => {\n      e.compactLevel = this;\n      const newFrame = new Frame(e, prevFrame);\n      e.compactFrame = newFrame;\n      this.frames.push(newFrame);\n      prevFrame = newFrame;\n    });\n\n    // get the max height of all the frames in this level\n    this._height = this.frames.reduce<number>(\n      (maxHeight, frame) => Math.max(maxHeight, frame.totalHeight),\n      0\n    );\n    const lastFrame = this.frames[this.frames.length - 1];\n    // derive the width of this level from the last frame\n    this._width = lastFrame.x() + lastFrame.totalWidth - this.x() + CompactConfig.LevelPaddingX;\n  }\n\n  destroy() {\n    this.ref.current.destroyChildren();\n  }\n\n  draw(): React.ReactNode {\n    return (\n      <Group key={Layout.key++} ref={this.ref}>\n        <Rect\n          {...ShapeDefaultProps}\n          x={this.x()}\n          y={this.y()}\n          width={this.width()}\n          height={this.height()}\n          key={Layout.key++}\n          listening={false}\n        />\n        {this.frames.map(frame => frame.draw())}\n      </Group>\n    );\n  }\n}\n","import { Button, ButtonGroup, Checkbox } from '@blueprintjs/core';\nimport { Frame } from 'Clang-slang/dist/types';\nimport React, { RefObject } from 'react';\nimport { Layer, Rect, Stage } from 'react-konva';\n\nimport { Level as CompactLevel } from './compactComponents/Level';\nimport { ArrayValue as CompactArrayValue } from './compactComponents/values/ArrayValue';\nimport { FnValue as CompactFnValue } from './compactComponents/values/FnValue';\nimport { GlobalFnValue as CompactGlobalFnValue } from './compactComponents/values/GlobalFnValue';\nimport { PrimitiveValue as CompactPrimitiveValue } from './compactComponents/values/PrimitiveValue';\nimport { UnassignedValue as CompactUnassignedValue } from './compactComponents/values/UnassignedValue';\nimport { Value as CompactValue } from './compactComponents/values/Value';\nimport { Grid } from './components/Grid';\nimport { ArrayValue } from './components/values/ArrayValue';\nimport { FnValue } from './components/values/FnValue';\nimport { GlobalFnValue } from './components/values/GlobalFnValue';\nimport { PrimitiveValue } from './components/values/PrimitiveValue';\nimport { UnassignedValue } from './components/values/UnassignedValue';\nimport { Value } from './components/values/Value';\nimport EnvVisualizer from './EnvVisualizer';\nimport { Config, ShapeDefaultProps } from './EnvVisualizerConfig';\nimport {\n  CompactReferenceType,\n  Data,\n  EnvTree,\n  EnvTreeNode,\n  ReferenceType\n} from './EnvVisualizerTypes';\nimport {\n  deepCopyTree,\n  getNextChildren,\n  isArray,\n  isDummyKey,\n  isFn,\n  isFunction,\n  isGlobalFn,\n  isPrimitiveData,\n  isUnassigned\n} from './EnvVisualizerUtils';\n\n/** this class encapsulates the logic for calculating the layout */\nexport class Layout {\n  /** the height of the stage */\n  static nonCompactHeight: number;\n  /** the width of the non-compact stage */\n  static nonCompactWidth: number;\n  /** the width of the compact stage */\n  static compactWidth: number;\n  /** the height of the compact stage */\n  static compactHeight: number;\n  /** the visible height of the stage */\n  static visibleHeight: number = window.innerHeight;\n  /** the visible width of the stage */\n  static visibleWidth: number = window.innerWidth;\n  /** total height of stage */\n  static stageHeight: number = window.innerHeight;\n  /** total width of stage */\n  static stageWidth: number = window.innerWidth;\n  /** the unique key assigned to each node */\n  static key: number = 0;\n\n  /** the environment tree */\n  static environmentTree: EnvTree;\n  /** the global environment */\n  static globalEnvNode: EnvTreeNode;\n  /** grid of frames */\n  static grid: Grid;\n  static compactLevels: CompactLevel[] = [];\n\n  /** memoized values */\n  static values = new Map<Data, Value>();\n  static compactValues = new Map<Data, CompactValue>();\n  /** memoized layout */\n  static prevLayout: React.ReactNode;\n  static currentDark: React.ReactNode;\n  static currentLight: React.ReactNode;\n  static currentCompactDark: React.ReactNode;\n  static currentCompactLight: React.ReactNode;\n  static stageRef: RefObject<any> = React.createRef();\n  // buffer for faster rendering of diagram when scrolling\n  static invisiblePaddingVertical: number = 300;\n  static invisiblePaddingHorizontal: number = 300;\n  static scrollContainerRef: RefObject<any> = React.createRef();\n\n  static updateDimensions(width: number, height: number) {\n    // update the size of the scroll container and stage given the width and height of the sidebar content.\n    Layout.visibleWidth = width;\n    Layout.visibleHeight = height;\n    if (\n      Layout.stageRef.current !== null &&\n      (Math.min(Layout.width(), window.innerWidth) > Layout.stageWidth ||\n        Math.min(Layout.height(), window.innerHeight) > Layout.stageHeight)\n    ) {\n      Layout.currentLight = undefined;\n      Layout.currentDark = undefined;\n      Layout.currentCompactLight = undefined;\n      Layout.currentCompactDark = undefined;\n      Layout.stageWidth = Math.min(Layout.width(), window.innerWidth);\n      Layout.stageHeight = Math.min(Layout.height(), window.innerHeight);\n      Layout.stageRef.current.width(Layout.stageWidth);\n      Layout.stageRef.current.height(Layout.stageHeight);\n      EnvVisualizer.redraw();\n    }\n    if (Layout.stageHeight > Layout.visibleHeight) {\n    }\n    Layout.invisiblePaddingVertical =\n      Layout.stageHeight > Layout.visibleHeight\n        ? (Layout.stageHeight - Layout.visibleHeight) / 2\n        : 0;\n    Layout.invisiblePaddingHorizontal =\n      Layout.stageWidth > Layout.visibleWidth ? (Layout.stageWidth - Layout.visibleWidth) / 2 : 0;\n\n    const container: HTMLElement | null = this.scrollContainerRef.current as HTMLDivElement;\n    if (container) {\n      container.style.width = `${Layout.visibleWidth}px`;\n      container.style.height = `${Layout.visibleHeight}px`;\n    }\n  }\n\n  /** processes the runtime context from JS Slang */\n  static setContext(envTree: EnvTree): void {\n    Layout.currentLight = undefined;\n    Layout.currentDark = undefined;\n    Layout.currentCompactLight = undefined;\n    Layout.currentCompactDark = undefined;\n    // clear/initialize data and value arrays\n    Layout.values.forEach((v, d) => {\n      v.reset();\n    });\n    Layout.values.clear();\n    Layout.compactValues.forEach((v, d) => {\n      v.reset();\n    });\n    Layout.compactValues.clear();\n    Layout.key = 0;\n    // deep copy so we don't mutate the context\n    Layout.environmentTree = deepCopyTree(envTree);\n    Layout.globalEnvNode = Layout.environmentTree.root;\n\n    // remove program environment and merge bindings into global env\n    Layout.removeProgramEnv();\n    // remove global functions that are not referenced in the program\n    Layout.removeUnreferencedGlobalFns();\n    // initialize levels and frames\n    Layout.initializeGrid();\n\n    // calculate height and width by considering lowest and widest level\n    if (EnvVisualizer.getCompactLayout()) {\n      const lastLevel = Layout.compactLevels[Layout.compactLevels.length - 1];\n      Layout.compactHeight = Math.max(\n        Config.CanvasMinHeight,\n        lastLevel.y() + lastLevel.height() + Config.CanvasPaddingY\n      );\n\n      Layout.compactWidth = Math.max(\n        Config.CanvasMinWidth,\n        Layout.compactLevels.reduce<number>(\n          (maxWidth, level) => Math.max(maxWidth, level.width()),\n          0\n        ) +\n          Config.CanvasPaddingX * 2\n      );\n    } else {\n      Layout.nonCompactHeight = Math.max(\n        Config.CanvasMinHeight,\n        this.grid.height() + Config.CanvasPaddingY\n      );\n      Layout.nonCompactWidth = Math.max(\n        Config.CanvasMinWidth,\n        this.grid.width() + Config.CanvasPaddingX * 2\n      );\n    }\n  }\n\n  /** remove program environment containing predefined functions */\n  private static removeProgramEnv() {\n    if (!Layout.globalEnvNode.children) return;\n\n    const programEnvNode = Layout.globalEnvNode.children[0];\n    const globalEnvNode = Layout.globalEnvNode;\n\n    // merge programEnvNode bindings into globalEnvNode\n    globalEnvNode.environment.head = {\n      ...programEnvNode.environment.head,\n      ...globalEnvNode.environment.head\n    };\n\n    // update globalEnvNode children\n    if (programEnvNode.children) {\n      globalEnvNode.resetChildren(programEnvNode.children);\n    }\n\n    // go through new bindings and update functions to be global functions\n    // by removing extra props such as functionName\n    for (const value of Object.values(globalEnvNode.environment.head)) {\n      if (isFn(value)) {\n        delete (value as { functionName?: string }).functionName;\n      }\n    }\n  }\n\n  /** remove any global functions not referenced elsewhere in the program */\n  private static removeUnreferencedGlobalFns(): void {\n    const referencedGlobalFns = new Set<() => any>();\n    const visitedData = new Set<Data[]>();\n    const findGlobalFnReferences = (envNode: EnvTreeNode): void => {\n      for (const data of Object.values(envNode.environment.head)) {\n        if (isGlobalFn(data)) {\n          referencedGlobalFns.add(data);\n        } else if (isArray(data)) {\n          findGlobalFnReferencesInData(data);\n        }\n      }\n      if (envNode.children) {\n        envNode.children.forEach(findGlobalFnReferences);\n      }\n    };\n\n    const findGlobalFnReferencesInData = (data: Data[]): void => {\n      data.forEach(d => {\n        if (isGlobalFn(d)) {\n          referencedGlobalFns.add(d);\n        } else if (isArray(d) && !visitedData.has(d)) {\n          visitedData.add(d);\n          findGlobalFnReferencesInData(d);\n        }\n      });\n    };\n\n    if (Layout.globalEnvNode.children) {\n      Layout.globalEnvNode.children.forEach(findGlobalFnReferences);\n    }\n\n    const newFrame: Frame = {};\n    for (const [key, data] of Object.entries(Layout.globalEnvNode.environment.head)) {\n      if (referencedGlobalFns.has(data) || isDummyKey(key)) {\n        newFrame[key] = data;\n      }\n    }\n\n    Layout.globalEnvNode.environment.head = {\n      [Config.GlobalFrameDefaultText]: Symbol(),\n      ...newFrame\n    };\n  }\n\n  public static width(): number {\n    return EnvVisualizer.getCompactLayout() ? Layout.compactWidth : Layout.nonCompactWidth;\n  }\n\n  public static height(): number {\n    return EnvVisualizer.getCompactLayout() ? Layout.compactHeight : Layout.nonCompactHeight;\n  }\n\n  /** initializes grid */\n  private static initializeGrid(): void {\n    if (EnvVisualizer.getCompactLayout()) {\n      this.compactLevels = [];\n      let frontier: EnvTreeNode[] = [Layout.globalEnvNode];\n      let prevLevel: CompactLevel | null = null;\n      let currLevel: CompactLevel;\n\n      while (frontier.length > 0) {\n        currLevel = new CompactLevel(prevLevel, frontier);\n        this.compactLevels.push(currLevel);\n        const nextFrontier: EnvTreeNode[] = [];\n\n        frontier.forEach(e => {\n          e.children.forEach(c => {\n            const nextChildren = getNextChildren(c as EnvTreeNode);\n            nextChildren.forEach(c => (c.parent = e));\n            nextFrontier.push(...nextChildren);\n          });\n        });\n\n        prevLevel = currLevel;\n        frontier = nextFrontier;\n      }\n    } else {\n      const frontiers: EnvTreeNode[][] = [];\n      let frontier = [Layout.globalEnvNode];\n\n      while (frontier.length > 0) {\n        frontiers.push(frontier);\n\n        const nextFrontier: EnvTreeNode[] = [];\n\n        frontier.forEach(e => {\n          e.children.forEach(c => {\n            const nextChildren = getNextChildren(c as EnvTreeNode);\n            nextChildren.forEach(c => (c.parent = e));\n            nextFrontier.push(...nextChildren);\n          });\n        });\n\n        frontier = nextFrontier;\n      }\n      if (this.grid === undefined) {\n        this.grid = new Grid(frontiers);\n      } else {\n        this.grid.update(frontiers);\n      }\n    }\n  }\n\n  /** memoize `Value` (used to detect circular references in non-primitive `Value`) */\n  static memoizeValue(value: Value): void {\n    Layout.values.set(value.data, value);\n  }\n\n  /** create an instance of the corresponding `Value` if it doesn't already exists,\n   *  else, return the existing value */\n  static createValue(data: Data, reference: ReferenceType): Value {\n    if (isUnassigned(data)) {\n      return new UnassignedValue([reference]);\n    } else if (isPrimitiveData(data)) {\n      return new PrimitiveValue(data, [reference]);\n    } else {\n      // try to find if this value is already created\n      const existingValue = Layout.values.get(data);\n      if (existingValue) {\n        existingValue.addReference(reference);\n        return existingValue;\n      }\n\n      // else create a new one\n      let newValue: Value = new PrimitiveValue(null, [reference]);\n      if (isArray(data)) {\n        newValue = new ArrayValue(data, [reference]);\n      } else if (isFunction(data)) {\n        if (isFn(data)) {\n          // normal JS Slang function\n          newValue = new FnValue(data, [reference]);\n        } else {\n          // function from the global env (has no extra props such as env, fnName)\n          newValue = new GlobalFnValue(data, [reference]);\n        }\n      }\n\n      return newValue;\n    }\n  }\n\n  /** memoize `Value` (used to detect circular references in non-primitive `Value`) */\n  static memoizeCompactValue(value: CompactValue): void {\n    Layout.compactValues.set(value.data, value);\n  }\n\n  /** create an instance of the corresponding `Value` if it doesn't already exists,\n   *  else, return the existing value */\n  static createCompactValue(data: Data, reference: CompactReferenceType): CompactValue {\n    if (isUnassigned(data)) {\n      return new CompactUnassignedValue([reference]);\n    } else if (isPrimitiveData(data)) {\n      return new CompactPrimitiveValue(data, [reference]);\n    } else {\n      // try to find if this value is already created\n      const existingValue = Layout.compactValues.get(data);\n      if (existingValue) {\n        existingValue.addReference(reference);\n        return existingValue;\n      }\n\n      // else create a new one\n      let newValue: CompactValue = new CompactPrimitiveValue(null, [reference]);\n      if (isArray(data)) {\n        newValue = new CompactArrayValue(data, [reference]);\n      } else if (isFunction(data)) {\n        if (isFn(data)) {\n          // normal JS Slang function\n          newValue = new CompactFnValue(data, [reference]);\n        } else {\n          // function from the global env (has no extra props such as env, fnName)\n          newValue = new CompactGlobalFnValue(data, [reference]);\n        }\n      }\n\n      return newValue;\n    }\n  }\n\n  /**\n   * Scrolls diagram to top left, and saves the diagram as multiple images of width < MaxExportWidth.\n   */\n  static exportImage = () => {\n    const container: HTMLElement | null = this.scrollContainerRef.current as HTMLDivElement;\n    container.scrollTo({ left: 0, top: 0 });\n    Layout.handleScrollPosition(0, 0);\n    const height = Layout.height();\n    const width = Layout.width();\n    const horizontalImages = Math.ceil(width / Config.MaxExportWidth);\n    const verticalImages = Math.ceil(height / Config.MaxExportHeight);\n    const download_images = () => {\n      const download_next = (n: number) => {\n        if (n >= horizontalImages * verticalImages) {\n          return;\n        }\n        const x = n % horizontalImages;\n        const y = Math.floor(n / horizontalImages);\n        const a = document.createElement('a');\n        a.style.display = 'none';\n        a.href = this.stageRef.current.toDataURL({\n          x: x * Config.MaxExportWidth + Layout.invisiblePaddingHorizontal,\n          y: y * Config.MaxExportHeight + Layout.invisiblePaddingVertical,\n          width: Math.min(width - x * Config.MaxExportWidth, Config.MaxExportWidth),\n          height: Math.min(height - y * Config.MaxExportHeight, Config.MaxExportHeight),\n          mimeType: 'image/jpeg'\n        });\n\n        a.download = `diagram_${x}_${y}.jpg`;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        setTimeout(function () {\n          download_next(n + 1);\n        }, 1000);\n      };\n      // Initiate the first download.\n      download_next(0);\n    };\n    download_images();\n  };\n\n  /** Calculate the test to be displayed for button to save the images.*/\n  private static saveButtonText(): String {\n    return `Save ${\n      Layout.width() > Config.MaxExportWidth || Layout.height() > Config.MaxExportHeight\n        ? Math.ceil(Layout.width() / Config.MaxExportWidth) *\n            Math.ceil(Layout.height() / Config.MaxExportHeight) +\n          ' images'\n        : 'image'\n    }`;\n  }\n\n  /**\n   * Calculates the required transformation for the stage given the scroll-container div scroll position.\n   * @param x x position of the scroll container\n   * @param y y position of the scroll container\n   */\n  private static handleScrollPosition(x: number, y: number) {\n    const dx = x - Layout.invisiblePaddingHorizontal;\n    const dy = y - Layout.invisiblePaddingVertical;\n    this.stageRef.current.container().style.transform = 'translate(' + dx + 'px, ' + dy + 'px)';\n    this.stageRef.current.x(-dx);\n    this.stageRef.current.y(-dy);\n  }\n\n  static draw(): React.ReactNode {\n    if (Layout.key !== 0) {\n      return Layout.prevLayout;\n    } else {\n      const layout = (\n        <div className={'sa-env-visualizer'}>\n          <div\n            id=\"scroll-container\"\n            ref={Layout.scrollContainerRef}\n            onScroll={e =>\n              Layout.handleScrollPosition(e.currentTarget.scrollLeft, e.currentTarget.scrollTop)\n            }\n            style={{\n              width: Layout.visibleWidth,\n              height: Layout.visibleHeight,\n              overflow: 'auto',\n              margin: '10px'\n            }}\n          >\n            <div\n              id=\"large-container\"\n              style={{\n                width: Layout.width(),\n                height: Layout.height(),\n                overflow: 'hidden',\n                backgroundColor: EnvVisualizer.getPrintableMode()\n                  ? Config.PRINT_BACKGROUND.toString()\n                  : Config.SA_BLUE.toString()\n              }}\n            >\n              <div style={{ right: 40, position: 'absolute', display: 'flex', alignSelf: 'right' }}>\n                <ButtonGroup vertical>\n                  <Button\n                    large={true}\n                    outlined={true}\n                    style={{\n                      backgroundColor: EnvVisualizer.getPrintableMode()\n                        ? Config.PRINT_BACKGROUND.toString()\n                        : Config.SA_BLUE.toString(),\n                      opacity: 0.8,\n                      borderColor: EnvVisualizer.getPrintableMode()\n                        ? Config.SA_BLUE.toString()\n                        : Config.PRINT_BACKGROUND.toString()\n                    }}\n                    onMouseUp={() => {\n                      EnvVisualizer.toggleCompactLayout();\n                      EnvVisualizer.redraw();\n                    }}\n                  >\n                    <Checkbox\n                      checked={!EnvVisualizer.getCompactLayout()}\n                      label=\"Experimental\"\n                      style={{\n                        marginBottom: '0px',\n                        color: EnvVisualizer.getPrintableMode()\n                          ? Config.SA_BLUE.toString()\n                          : Config.PRINT_BACKGROUND.toString()\n                      }}\n                    />\n                  </Button>\n                  <Button\n                    large={true}\n                    outlined={true}\n                    style={{\n                      backgroundColor: EnvVisualizer.getPrintableMode()\n                        ? Config.PRINT_BACKGROUND.toString()\n                        : Config.SA_BLUE.toString(),\n                      opacity: 0.8,\n                      borderColor: EnvVisualizer.getPrintableMode()\n                        ? Config.SA_BLUE.toString()\n                        : Config.PRINT_BACKGROUND.toString()\n                    }}\n                    onMouseUp={() => {\n                      EnvVisualizer.togglePrintableMode();\n                      EnvVisualizer.redraw();\n                    }}\n                  >\n                    <Checkbox\n                      checked={EnvVisualizer.getPrintableMode()}\n                      label=\"Printable\"\n                      style={{\n                        marginBottom: '0px',\n                        color: EnvVisualizer.getPrintableMode()\n                          ? Config.SA_BLUE.toString()\n                          : Config.PRINT_BACKGROUND.toString()\n                      }}\n                    />\n                  </Button>\n                  <Button\n                    outlined={true}\n                    text={Layout.saveButtonText()}\n                    large={true}\n                    onClick={this.exportImage}\n                    style={{\n                      color: EnvVisualizer.getPrintableMode()\n                        ? Config.SA_BLUE.toString()\n                        : Config.PRINT_BACKGROUND.toString(),\n                      backgroundColor: EnvVisualizer.getPrintableMode()\n                        ? Config.PRINT_BACKGROUND.toString()\n                        : Config.SA_BLUE.toString(),\n                      opacity: 0.8,\n                      borderColor: EnvVisualizer.getPrintableMode()\n                        ? Config.SA_BLUE.toString()\n                        : Config.PRINT_BACKGROUND.toString()\n                    }}\n                  />\n                </ButtonGroup>\n              </div>\n              <Stage width={Layout.stageWidth} height={Layout.stageHeight} ref={this.stageRef}>\n                <Layer>\n                  <Rect\n                    {...ShapeDefaultProps}\n                    x={0}\n                    y={0}\n                    width={Layout.width()}\n                    height={Layout.height()}\n                    fill={\n                      EnvVisualizer.getPrintableMode()\n                        ? Config.PRINT_BACKGROUND.toString()\n                        : Config.SA_BLUE.toString()\n                    }\n                    key={Layout.key++}\n                    listening={false}\n                  />\n                  {!EnvVisualizer.getCompactLayout() && Layout.grid.draw()}\n                  {EnvVisualizer.getCompactLayout() &&\n                    Layout.compactLevels.map(level => level.draw())}\n                </Layer>\n              </Stage>\n            </div>\n          </div>\n        </div>\n      );\n      Layout.prevLayout = layout;\n      if (EnvVisualizer.getCompactLayout()) {\n        if (EnvVisualizer.getPrintableMode()) {\n          Layout.currentCompactLight = layout;\n        } else {\n          Layout.currentCompactDark = layout;\n        }\n      } else {\n        if (EnvVisualizer.getPrintableMode()) {\n          Layout.currentLight = layout;\n        } else {\n          Layout.currentDark = layout;\n        }\n      }\n\n      return layout;\n    }\n  }\n}\n","import { Context } from 'Clang-slang';\nimport React from 'react';\n\nimport { Layout } from './EnvVisualizerLayout';\nimport { EnvTree } from './EnvVisualizerTypes';\nimport { deepCopyTree } from './EnvVisualizerUtils';\n\ntype SetVis = (vis: React.ReactNode) => void;\n\n/** Environment Visualizer is exposed from this class */\nexport default class EnvVisualizer {\n  /** callback function to update the visualization state in the SideContentEnvVis component */\n  private static setVis: SetVis;\n  private static printableMode: boolean = false;\n  private static compactLayout: boolean = true;\n  private static environmentTree: EnvTree;\n  public static togglePrintableMode(): void {\n    EnvVisualizer.printableMode = !EnvVisualizer.printableMode;\n  }\n  public static toggleCompactLayout(): void {\n    EnvVisualizer.compactLayout = !EnvVisualizer.compactLayout;\n  }\n  public static getPrintableMode(): boolean {\n    return EnvVisualizer.printableMode;\n  }\n  public static getCompactLayout(): boolean {\n    return EnvVisualizer.compactLayout;\n  }\n\n  /** SideContentEnvVis initializes this onMount with the callback function */\n  static init(setVis: SetVis, width: number, height: number) {\n    Layout.visibleHeight = height;\n    Layout.visibleWidth = width;\n    this.setVis = setVis;\n  }\n\n  static clear() {\n    Layout.values.clear();\n    Layout.compactValues.clear();\n  }\n\n  /** updates the visualization state in the SideContentEnvVis component based on\n   * the JS Slang context passed in */\n  static drawEnv(context: Context) {\n    // store environmentTree at last breakpoint.\n    EnvVisualizer.environmentTree = deepCopyTree(context.runtime.environmentTree as EnvTree);\n    if (!this.setVis) throw new Error('env visualizer not initialized');\n\n    Layout.setContext(context.runtime.environmentTree as EnvTree);\n    this.setVis(Layout.draw());\n    Layout.updateDimensions(Layout.visibleWidth, Layout.visibleHeight);\n\n    // icon to blink\n    const icon = document.getElementById('env_visualizer-icon');\n    icon && icon.classList.add('side-content-tab-alert');\n  }\n\n  static redraw() {\n    if (this.environmentTree) {\n      // checks if the required diagram exists, and updates the dom node using setVis\n      if (\n        EnvVisualizer.getCompactLayout() &&\n        EnvVisualizer.getPrintableMode() &&\n        Layout.currentCompactLight !== undefined\n      ) {\n        this.setVis(Layout.currentCompactLight);\n      } else if (\n        EnvVisualizer.getCompactLayout() &&\n        !EnvVisualizer.getPrintableMode() &&\n        Layout.currentCompactDark !== undefined\n      ) {\n        this.setVis(Layout.currentCompactDark);\n      } else if (\n        !EnvVisualizer.getCompactLayout() &&\n        EnvVisualizer.getPrintableMode() &&\n        Layout.currentLight !== undefined\n      ) {\n        this.setVis(Layout.currentLight);\n      } else if (\n        !EnvVisualizer.getCompactLayout() &&\n        !EnvVisualizer.getPrintableMode() &&\n        Layout.currentDark !== undefined\n      ) {\n        this.setVis(Layout.currentDark);\n      } else {\n        Layout.setContext(EnvVisualizer.environmentTree);\n        this.setVis(Layout.draw());\n      }\n      Layout.updateDimensions(Layout.visibleWidth, Layout.visibleHeight);\n    }\n  }\n\n  static updateDimensions(width: number, height: number) {\n    if (Layout.stageRef != null && width !== null && height !== null) {\n      Layout.updateDimensions(width, height);\n    }\n  }\n}\n","import { SourceError, Variant } from 'Clang-slang/dist/types';\n\nimport { ExternalLibrary, ExternalLibraryName } from '../application/types/ExternalTypes';\n\nexport const FETCH_ASSESSMENT_OVERVIEWS = 'FETCH_ASSESSMENT_OVERVIEWS';\nexport const SUBMIT_ASSESSMENT = 'SUBMIT_ASSESSMENT';\n\nexport enum AssessmentStatuses {\n  attempting = 'attempting',\n  attempted = 'attempted',\n  not_attempted = 'not_attempted',\n  submitted = 'submitted'\n}\nexport type AssessmentStatus = keyof typeof AssessmentStatuses;\n\nexport type AssessmentWorkspaceParams = {\n  assessmentId?: string;\n  questionId?: string;\n};\n\nexport enum GradingStatuses {\n  excluded = 'excluded',\n  graded = 'graded',\n  grading = 'grading',\n  none = 'none'\n}\nexport type GradingStatus = keyof typeof GradingStatuses;\n\nexport type AssessmentType = string;\n\nexport enum TestcaseTypes {\n  // These are rendered in full by the Mission Autograder\n  public = 'public',\n  // These are rendered with a placeholder by the Autograder\n  opaque = 'opaque',\n  // These should only exist in the grading workspace for submissions\n  secret = 'secret'\n}\nexport type TestcaseType = keyof typeof TestcaseTypes;\n\nexport enum QuestionTypes {\n  programming = 'programming',\n  mcq = 'mcq',\n  voting = 'voting'\n}\nexport type QuestionType = keyof typeof QuestionTypes;\n\n/*\nW* Used to display information regarding an assessment in the UI.\n*\n * @property closeAt an ISO 8601 compliant date string specifiying when\n *   the assessment closes\n * @property openAt an ISO 8601 compliant date string specifiying when\n *   the assessment opens\n */\nexport type AssessmentOverview = {\n  type: AssessmentType;\n  isManuallyGraded: boolean;\n  closeAt: string;\n  coverImage: string;\n  fileName?: string; // For mission control\n  gradingStatus: GradingStatus;\n  id: number;\n  isPublished?: boolean;\n  maxXp: number;\n  number?: string; // For mission control\n  openAt: string;\n  private?: boolean;\n  reading?: string; // For mission control\n  shortSummary: string;\n  status: AssessmentStatus;\n  story: string | null;\n  title: string;\n  xp: number;\n};\n\n/*\n * Used when an assessment is being actively attempted/graded.\n */\nexport type Assessment = {\n  type: AssessmentType;\n  globalDeployment?: Library; // For mission control\n  graderDeployment?: Library; // For mission control\n  id: number;\n  longSummary: string;\n  missionPDF: string;\n  title: string;\n  questions: Question[];\n};\n\nexport type AssessmentConfiguration = {\n  assessmentConfigId: number;\n  type: AssessmentType;\n  isManuallyGraded: boolean;\n  displayInDashboard: boolean;\n  hoursBeforeEarlyXpDecay: number;\n  earlySubmissionXp: number;\n};\n\nexport interface IProgrammingQuestion extends BaseQuestion {\n  answer: string | null;\n  autogradingResults: AutogradingResult[];\n  graderTemplate?: string;\n  prepend: string;\n  postpend: string;\n  solutionTemplate: string;\n  testcases: Testcase[];\n  testcasesPrivate?: Testcase[]; // For mission control\n  type: 'programming';\n}\n\nexport interface IMCQQuestion extends BaseQuestion {\n  answer: number | null;\n  choices: MCQChoice[];\n  solution?: number;\n  type: 'mcq';\n}\n\nexport interface IContestVotingQuestion extends BaseQuestion {\n  answer: ContestEntry[];\n  prepend: string;\n  postpend: string;\n  contestEntries: ContestEntry[];\n  contestLeaderboard: ContestEntry[];\n  type: 'voting';\n}\n\nexport type BaseQuestion = {\n  answer: string | number | ContestEntry[] | null;\n  comments?: string;\n  content: string;\n  editorValue?: string;\n  gradedAt?: string;\n  grader?: {\n    name: string;\n    id: number;\n  };\n  graderLibrary?: Library; // For mission control\n  id: number;\n  library: Library;\n  maxXp: number;\n  type: QuestionType;\n  xp: number;\n  blocking?: boolean; // Determines whether the learner can progress to the next question without passing local testcases\n  // TODO: The blocking field is made optional now as the Question type is being shared with GitHub Assessments, which has not implemented\n  // the question-level blocking feature. Is to be made compulsory after this is implemented in GitHub Assessments\n};\n\nexport type Question = IProgrammingQuestion | IMCQQuestion | IContestVotingQuestion;\n\nexport type Library = {\n  variant?: Variant;\n  execTimeMs?: number;\n  external: ExternalLibrary;\n  globals: Array<{\n    0: string;\n    1: any;\n    2?: string; // For mission control\n  }>;\n  moduleParams?: any;\n};\n\nexport type Testcase = {\n  answer: string; // the correct answer to the testcase\n  errors?: SourceError[]; // errors raised by interpreter during execution\n  program: string; // the program to be appended to the student's code\n  result?: any; // the result from the execution of the testcase\n  score: number;\n  type: TestcaseType;\n};\n\nexport type ContestEntry = {\n  submission_id: number;\n  answer: ContestEntryCodeAnswer; //contest entry program to be input into editor\n  score?: number;\n  final_score?: number;\n  student_name?: string;\n};\n\nexport type ContestEntryCodeAnswer = {\n  code: string;\n};\n\nexport type MCQChoice = {\n  content: string;\n  hint: string | null;\n};\n\nexport type AutogradingResult = {\n  resultType: string;\n  expected?: string; // the correct answer for the testcase\n  actual?: string; // the received answer from the student's code\n  errors?: AutogradingError[];\n};\n\nexport type AutogradingError = {\n  errorType: string;\n  line?: number;\n  location?: string;\n  errorLine?: string;\n  errorExplanation?: string;\n  errorMessage?: string;\n};\n\nexport const emptyLibrary = (): Library => {\n  return {\n    external: {\n      name: 'NONE' as ExternalLibraryName,\n      symbols: []\n    },\n    globals: []\n  };\n};\n\nexport const normalLibrary = (): Library => {\n  return {\n    external: {\n      name: 'NONE' as ExternalLibraryName,\n      symbols: []\n    },\n    globals: []\n  };\n};\n\nexport const overviewTemplate = (): AssessmentOverview => {\n  return {\n    type: 'Missions',\n    isManuallyGraded: true,\n    closeAt: '2100-12-01T00:00+08',\n    coverImage: 'https://fakeimg.pl/300/',\n    id: -1,\n    maxXp: 0,\n    openAt: '2000-01-01T00:00+08',\n    title: 'Insert title here',\n    reading: '',\n    shortSummary: 'Insert short summary here',\n    status: AssessmentStatuses.not_attempted,\n    story: 'mission',\n    xp: 0,\n    gradingStatus: 'none'\n  };\n};\n\nexport const programmingTemplate = (): IProgrammingQuestion => {\n  return {\n    autogradingResults: [],\n    answer: '// [Marking Scheme]\\n// 1 mark for correct answer',\n    content: 'Enter content here',\n    id: 0,\n    library: emptyLibrary(),\n    graderLibrary: emptyLibrary(),\n    prepend: '',\n    solutionTemplate: '//This is a mock solution template',\n    postpend: '',\n    testcases: [],\n    testcasesPrivate: [],\n    type: 'programming',\n    xp: 0,\n    maxXp: 0,\n    blocking: false\n  };\n};\n\nexport const testcaseTemplate = (): Testcase => {\n  return {\n    type: TestcaseTypes.public,\n    answer: '',\n    score: 0,\n    program: ''\n  };\n};\n\nexport const mcqTemplate = (): IMCQQuestion => {\n  return {\n    answer: 3,\n    content: 'This is a mock MCQ question',\n    choices: [\n      {\n        content: 'A',\n        hint: null\n      },\n      {\n        content: 'B',\n        hint: null\n      },\n      {\n        content: 'C',\n        hint: null\n      },\n      {\n        content: 'D',\n        hint: null\n      }\n    ],\n    id: 2,\n    library: emptyLibrary(),\n    graderLibrary: emptyLibrary(),\n    type: 'mcq',\n    solution: 0,\n    xp: 0,\n    maxXp: 0,\n    blocking: false\n  };\n};\n\nexport const assessmentTemplate = (): Assessment => {\n  return {\n    type: 'Missions',\n    globalDeployment: normalLibrary(),\n    graderDeployment: emptyLibrary(),\n    id: -1,\n    longSummary: 'Insert mission briefing here',\n    missionPDF: 'www.google.com',\n    questions: [programmingTemplate()],\n    title: 'Insert title here'\n  };\n};\n","import { action } from 'typesafe-actions';\n\nimport {\n  CHANGE_DATE_ASSESSMENT,\n  DELETE_ASSESSMENT,\n  PUBLISH_ASSESSMENT,\n  UPLOAD_ASSESSMENT\n} from './GroundControlTypes';\n\nexport const changeDateAssessment = (id: number, openAt: string, closeAt: string) =>\n  action(CHANGE_DATE_ASSESSMENT, { id, openAt, closeAt });\n\nexport const deleteAssessment = (id: number) => action(DELETE_ASSESSMENT, id);\n\nexport const publishAssessment = (togglePublishTo: boolean, id: number) =>\n  action(PUBLISH_ASSESSMENT, { id, togglePublishTo });\n\nexport const uploadAssessment = (file: File, forceUpdate: boolean, assessmentConfigId: number) =>\n  action(UPLOAD_ASSESSMENT, { file, forceUpdate, assessmentConfigId });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { DebuggerContext, WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport { ModuleSideContent, SideContentTab, SideContentType } from './SideContentTypes';\n\nconst currentlyActiveTabsLabel: Map<WorkspaceLocation, string[]> = new Map<\n  WorkspaceLocation,\n  string[]\n>();\n\n/**\n * Returns an array of SideContentTabs to be spawned\n * @param debuggerContext - DebuggerContext object from redux store\n */\nexport const getDynamicTabs = (debuggerContext: DebuggerContext): SideContentTab[] => {\n  const tabsToSpawn = getModuleTabs(debuggerContext).filter(tab => tab.toSpawn(debuggerContext));\n  // Convert ModuleSideContent to SideContentTab.\n  const spawnedTabs: SideContentTab[] = [\n    ...tabsToSpawn.map(tab => ({\n      ...tab,\n      body: tab.body(debuggerContext),\n      // set tab.id as module\n      id: SideContentType.module\n    }))\n  ];\n  // only set if debuggerContext.workspaceLocation is not undefined\n  if (debuggerContext.workspaceLocation) {\n    currentlyActiveTabsLabel.set(\n      debuggerContext.workspaceLocation,\n      spawnedTabs.map(tab => tab.label)\n    );\n  }\n  return spawnedTabs;\n};\n\n/**\n * Extracts included Modules' side contents from DebuggerContext.\n * @param debuggerContext - DebuggerContext object from redux store\n */\nexport const getModuleTabs = (debuggerContext: DebuggerContext): ModuleSideContent[] => {\n  // Check if Clang-slang's context object is null\n  if (debuggerContext.context == null) {\n    return [];\n  }\n\n  // Get module contexts\n  const rawModuleContexts = debuggerContext.context.moduleContexts;\n  if (rawModuleContexts == null) {\n    return [];\n  }\n\n  // Pass React into functions\n  const moduleTabs: ModuleSideContent[] = Object.values(rawModuleContexts).flatMap(\n    context => context.tabs?.map((tab: any) => tab(React, ReactDOM)) ?? []\n  );\n\n  return moduleTabs;\n};\n","import { TabId } from '@blueprintjs/core';\nimport React from 'react';\n\nimport { useTypedSelector } from '../utils/Hooks';\nimport { DebuggerContext, WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport { getDynamicTabs } from './SideContentHelper';\nimport { SideContentTab, SideContentType } from './SideContentTypes';\n\n/**\n * Generates an icon id given a TabId.\n * Used to set and remove the 'side-content-tab-alert' style to the tabs.\n */\nexport const generateIconId = (tabId: TabId) => `${tabId}-icon`;\n\n/**\n * @property onChange A function that is called whenever the\n * active tab is changed by the user.\n *\n * @property tabs An array of SideContentTabs.\n *  The tabs will be rendered in order of the array.\n *  If this array is empty, no tabs will be rendered.\n */\nexport type GenericSideContentProps = DispatchProps &\n  StateProps & {\n    renderFunction: (\n      dynamicTabs: SideContentTab[],\n      changeTabsCallback: (\n        newTabId: SideContentType,\n        prevTabId: SideContentType,\n        event: React.MouseEvent<HTMLElement>\n      ) => void\n    ) => React.ReactElement;\n  };\n\ntype DispatchProps = {\n  // Optional due to uncontrolled tab component in EditingWorkspace\n  onChange?: (\n    newTabId: SideContentType,\n    prevTabId: SideContentType,\n    event: React.MouseEvent<HTMLElement>\n  ) => void;\n};\n\ntype StateProps = {\n  tabs: {\n    beforeDynamicTabs: SideContentTab[];\n    afterDynamicTabs: SideContentTab[];\n  };\n  workspaceLocation?: WorkspaceLocation;\n};\n\nconst GenericSideContent = (props: GenericSideContentProps) => {\n  const { tabs, onChange } = props;\n  const [dynamicTabs, setDynamicTabs] = React.useState(\n    tabs.beforeDynamicTabs.concat(tabs.afterDynamicTabs)\n  );\n\n  // Fetch debuggerContext from store\n  const debuggerContext = useTypedSelector(\n    state => props.workspaceLocation && state.workspaces[props.workspaceLocation].debuggerContext\n  );\n  React.useEffect(() => {\n    const allActiveTabs = tabs.beforeDynamicTabs\n      .concat(getDynamicTabs(debuggerContext || ({} as DebuggerContext)))\n      .concat(tabs.afterDynamicTabs);\n    setDynamicTabs(allActiveTabs);\n  }, [tabs, debuggerContext]);\n\n  const changeTabsCallback = React.useCallback(\n    (\n      newTabId: SideContentType,\n      prevTabId: SideContentType,\n      event: React.MouseEvent<HTMLElement>\n    ): void => {\n      /**\n       * Remove the 'side-content-tab-alert' class that causes tabs flash.\n       * To be run when tabs are changed.\n       * Currently this style is only used for the \"Env Visualizer\" tab.\n       */\n      const resetAlert = (prevTabId: TabId) => {\n        const iconId = generateIconId(prevTabId);\n        const icon = document.getElementById(iconId);\n\n        // The new selected tab will still have the \"side-content-tab-alert\" class, but the CSS hides it\n        if (icon) {\n          icon.classList.remove('side-content-tab-alert');\n        }\n      };\n\n      if (onChange === undefined) {\n        resetAlert(prevTabId);\n      } else {\n        onChange(newTabId, prevTabId, event);\n        resetAlert(prevTabId);\n      }\n    },\n    [onChange]\n  );\n\n  return props.renderFunction(dynamicTabs, changeTabsCallback);\n};\n\nexport default GenericSideContent;\n","import { UpdateCourseConfiguration } from 'src/commons/application/types/SessionTypes';\nimport { UsernameRoleGroup } from 'src/pages/academy/adminPanel/subcomponents/AddUserPanel';\nimport { action } from 'typesafe-actions';\n\nimport { ADD_NEW_USERS_TO_COURSE, CREATE_COURSE, SAVE_CANVAS } from './AcademyTypes';\n\nexport const saveCanvas = (canvas: HTMLCanvasElement) => action(SAVE_CANVAS, canvas);\n\nexport const createCourse = (courseConfig: UpdateCourseConfiguration) =>\n  action(CREATE_COURSE, courseConfig);\n\nexport const addNewUsersToCourse = (users: UsernameRoleGroup[], provider: string) =>\n  action(ADD_NEW_USERS_TO_COURSE, { users, provider });\n","export default __webpack_public_path__ + \"static/media/default_cover_image.e2be0724.jpg\";","import { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\n\ntype ControlBarResetButtonProps = {\n  onClick?(): any;\n};\n\nexport const ControlBarResetButton: React.FC<ControlBarResetButtonProps> = ({ onClick }) => {\n  return <ControlButton label=\"Reset\" icon={IconNames.REPEAT} onClick={onClick} />;\n};\n","import { Intent } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport React from 'react';\n\nimport ControlButton from '../ControlButton';\n\ntype ControlBarSaveButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  onClickSave?(): any;\n};\n\ntype StateProps = {\n  key: string;\n  hasUnsavedChanges?: boolean;\n};\n\nexport const ControlButtonSaveButton: React.FC<ControlBarSaveButtonProps> = props => {\n  const saveButtonOpts = props.hasUnsavedChanges ? { intent: Intent.WARNING, minimal: false } : {};\n\n  return (\n    <ControlButton\n      label=\"Save\"\n      icon={IconNames.FLOPPY_DISK}\n      onClick={props.onClickSave}\n      options={saveButtonOpts}\n    />\n  );\n};\n","import { action } from 'typesafe-actions';\n\nimport { WorkspaceLocation } from '../../../commons/workspace/WorkspaceTypes';\nimport { SourcecastData } from '../SourceRecorderTypes';\nimport { FETCH_SOURCECAST_INDEX, UPDATE_SOURCECAST_INDEX } from './SourcecastTypes';\n\nexport const fetchSourcecastIndex = (workspaceLocation: WorkspaceLocation) =>\n  action(FETCH_SOURCECAST_INDEX, {\n    workspaceLocation\n  });\n\nexport const updateSourcecastIndex = (\n  index: SourcecastData[],\n  workspaceLocation: WorkspaceLocation\n) =>\n  action(UPDATE_SOURCECAST_INDEX, {\n    index,\n    workspaceLocation\n  });\n","/**\n * Represents the config used to draw the drawings.\n */\nexport const Config = {\n  StrokeWidth: 2,\n  Stroke: 'white',\n  Fill: 'white',\n\n  BoxWidth: 45,\n  BoxMinWidth: 15, // Set to half of BoxHeight for empty arrays following EnvVisualizerConfig\n  BoxHeight: 30,\n  BoxSpacingX: 50,\n  BoxSpacingY: 60,\n\n  DistanceX: 45 / 2, // Half of box width\n  DistanceY: 60,\n  CircleRadiusLarge: 15,\n  CircleRadiusSmall: 4,\n\n  ArrowPointerOffsetHorizontal: 13, // Pixels to offset the arrow head by\n  ArrowPointerOffsetVertical: -5, // Pixels to offset the arrow head by\n  ArrowPointerSize: 5,\n  ArrowMarginTop: 15,\n  ArrowMarginBottom: 15,\n  ArrowMarginHorizontal: 15,\n\n  MaxTextLength: 20\n};\n","// list.js: Supporting lists in the Scheme style, using pairs made\n//          up of two-element JavaScript array (vector)\n\n// Author: Martin Henz\n\n// Note: this library is used in the externalLibs of the frontend.\n// It is distinct from the LISTS library of Source §2, which contains\n// primitive and predeclared functions from Chapter 2 of SICP JS.\n\n// 'use strict'\n// array test works differently for Rhino and\n// the Firefox environment (especially Web Console)\nexport function array_test(x) {\n  if (Array.isArray === undefined) {\n    return x instanceof Array;\n  } else {\n    return Array.isArray(x);\n  }\n}\n\n// pair constructs a pair using a two-element array\n// LOW-LEVEL FUNCTION, NOT SOURCE\nexport function pair(x, xs) {\n  return [x, xs];\n}\n\n// is_pair returns true iff arg is a two-element array\n// LOW-LEVEL FUNCTION, NOT SOURCE\nexport function is_pair(x) {\n  return array_test(x) && x.length === 2;\n}\n\n// head returns the first component of the given pair,\n// throws an exception if the argument is not a pair\n// LOW-LEVEL FUNCTION, NOT SOURCE\nexport function head(xs) {\n  if (is_pair(xs)) {\n    return xs[0];\n  } else {\n    throw new Error('head(xs) expects a pair as argument xs, but encountered ' + xs);\n  }\n}\n\n// tail returns the second component of the given pair\n// throws an exception if the argument is not a pair\n// LOW-LEVEL FUNCTION, NOT SOURCE\nexport function tail(xs) {\n  if (is_pair(xs)) {\n    return xs[1];\n  } else {\n    throw new Error('tail(xs) expects a pair as argument xs, but encountered ' + xs);\n  }\n}\n\n// is_null returns true if arg is exactly null\n// LOW-LEVEL FUNCTION, NOT SOURCE\nexport function is_null(xs) {\n  return xs === null;\n}\n\n// is_list recurses down the list and checks that it ends with the empty list []\n// does not throw Value exceptions\n// LOW-LEVEL FUNCTION, NOT SOURCE\nexport function is_list(xs) {\n  for (; ; xs = tail(xs)) {\n    if (is_null(xs)) {\n      return true;\n    } else if (!is_pair(xs)) {\n      return false;\n    }\n  }\n}\n\n// list makes a list out of its arguments\n// LOW-LEVEL FUNCTION, NOT SOURCE\nexport function list() {\n  let the_list = null;\n  for (let i = arguments.length - 1; i >= 0; i--) {\n    the_list = pair(arguments[i], the_list);\n  }\n  return the_list;\n}\n\n// list_to_vector returns vector that contains the elements of the argument list\n// in the given order.\n// list_to_vector throws an exception if the argument is not a list\n// LOW-LEVEL FUNCTION, NOT SOURCE\nexport function list_to_vector(lst) {\n  const vector = [];\n  while (!is_null(lst)) {\n    vector.push(head(lst));\n    lst = tail(lst);\n  }\n  return vector;\n}\n\n// vector_to_list returns a list that contains the elements of the argument vector\n// in the given order.\n// vector_to_list throws an exception if the argument is not a vector\n// LOW-LEVEL FUNCTION, NOT SOURCE\nexport function vector_to_list(vector) {\n  let result = null;\n  for (let i = vector.length - 1; i >= 0; i = i - 1) {\n    result = pair(vector[i], result);\n  }\n  return result;\n}\n\n// returns the length of a given argument list\n// throws an exception if the argument is not a list\nexport function length(xs) {\n  let i = 0;\n  while (!is_null(xs)) {\n    i += 1;\n    xs = tail(xs);\n  }\n  return i;\n}\n\n// map applies first arg f to the elements of the second argument,\n// assumed to be a list.\n// f is applied element-by-element:\n// map(f,[1,[2,[]]]) results in [f(1),[f(2),[]]]\n// map throws an exception if the second argument is not a list,\n// and if the second argument is a non-empty list and the first\n// argument is not a function.\n// tslint:disable-next-line:ban-types\nexport function map(f, xs) {\n  return is_null(xs) ? null : pair(f(head(xs)), map(f, tail(xs)));\n}\n\n// build_list takes a non-negative integer n as first argument,\n// and a function fun as second argument.\n// build_list returns a list of n elements, that results from\n// applying fun to the numbers from 0 to n-1.\n// tslint:disable-next-line:ban-types\nexport function build_list(n, fun) {\n  if (typeof n !== 'number' || n < 0 || Math.floor(n) !== n) {\n    throw new Error(\n      'build_list(n, fun) expects a positive integer as argument n, but encountered ' + n\n    );\n  }\n\n  // tslint:disable-next-line:ban-types\n  function build(i, alreadyBuilt) {\n    if (i < 0) {\n      return alreadyBuilt;\n    } else {\n      return build(i - 1, pair(fun(i), alreadyBuilt));\n    }\n  }\n\n  return build(n - 1, null);\n}\n\n// for_each applies first arg fun to the elements of the list passed as\n// second argument. fun is applied element-by-element:\n// for_each(fun,[1,[2,[]]]) results in the calls fun(1) and fun(2).\n// for_each returns true.\n// for_each throws an exception if the second argument is not a list,\n// and if the second argument is a non-empty list and the\n// first argument is not a function.\n// tslint:disable-next-line:ban-types\nexport function for_each(fun, xs) {\n  if (!is_list(xs)) {\n    throw new Error('for_each expects a list as argument xs, but encountered ' + xs);\n  }\n  for (; !is_null(xs); xs = tail(xs)) {\n    fun(head(xs));\n  }\n  return true;\n}\n\n// reverse reverses the argument list\n// reverse throws an exception if the argument is not a list.\nexport function reverse(xs) {\n  if (!is_list(xs)) {\n    throw new Error('reverse(xs) expects a list as argument xs, but encountered ' + xs);\n  }\n  let result = null;\n  for (; !is_null(xs); xs = tail(xs)) {\n    result = pair(head(xs), result);\n  }\n  return result;\n}\n\n// append first argument list and second argument list.\n// In the result, the [] at the end of the first argument list\n// is replaced by the second argument list\n// append throws an exception if the first argument is not a list\nexport function append(xs, ys) {\n  if (is_null(xs)) {\n    return ys;\n  } else {\n    return pair(head(xs), append(tail(xs), ys));\n  }\n}\n\n// member looks for a given first-argument element in a given\n// second argument list. It returns the first postfix sublist\n// that starts with the given element. It returns [] if the\n// element does not occur in the list\nexport function member(v, xs) {\n  for (; !is_null(xs); xs = tail(xs)) {\n    if (head(xs) === v) {\n      return xs;\n    }\n  }\n  return null;\n}\n\n// removes the first occurrence of a given first-argument element\n// in a given second-argument list. Returns the original list\n// if there is no occurrence.\nexport function remove(v, xs) {\n  if (is_null(xs)) {\n    return null;\n  } else {\n    if (v === head(xs)) {\n      return tail(xs);\n    } else {\n      return pair(head(xs), remove(v, tail(xs)));\n    }\n  }\n}\n\n// Similar to remove. But removes all instances of v instead of just the first\nexport function remove_all(v, xs) {\n  if (is_null(xs)) {\n    return null;\n  } else {\n    if (v === head(xs)) {\n      return remove_all(v, tail(xs));\n    } else {\n      return pair(head(xs), remove_all(v, tail(xs)));\n    }\n  }\n}\n\n// for backwards-compatibility\n// equal computes the structural equality\n// over its arguments\nexport function equal(item1, item2) {\n  if (is_pair(item1) && is_pair(item2)) {\n    return equal(head(item1), head(item2)) && equal(tail(item1), tail(item2));\n  } else {\n    return item1 === item2;\n  }\n}\n\n// assoc treats the second argument as an association,\n// a list of (index,value) pairs.\n// assoc returns the first (index,value) pair whose\n// index equal (using structural equality) to the given\n// first argument v. Returns false if there is no such\n// pair\nexport function assoc(v, xs) {\n  if (is_null(xs)) {\n    return false;\n  } else if (equal(v, head(head(xs)))) {\n    return head(xs);\n  } else {\n    return assoc(v, tail(xs));\n  }\n}\n\n// filter returns the sublist of elements of given list xs\n// for which the given predicate function returns true.\n// tslint:disable-next-line:ban-types\nexport function filter(pred, xs) {\n  if (is_null(xs)) {\n    return xs;\n  } else {\n    if (pred(head(xs))) {\n      return pair(head(xs), filter(pred, tail(xs)));\n    } else {\n      return filter(pred, tail(xs));\n    }\n  }\n}\n\n// enumerates numbers starting from start,\n// using a step size of 1, until the number\n// exceeds end.\nexport function enum_list(start, end) {\n  if (typeof start !== 'number') {\n    throw new Error(\n      'enum_list(start, end) expects a number as argument start, but encountered ' + start\n    );\n  }\n  if (typeof end !== 'number') {\n    throw new Error(\n      'enum_list(start, end) expects a number as argument start, but encountered ' + end\n    );\n  }\n  if (start > end) {\n    return null;\n  } else {\n    return pair(start, enum_list(start + 1, end));\n  }\n}\n\n// Returns the item in list lst at index n (the first item is at position 0)\nexport function list_ref(xs, n) {\n  if (typeof n !== 'number' || n < 0 || Math.floor(n) !== n) {\n    throw new Error(\n      'list_ref(xs, n) expects a positive integer as argument n, but encountered ' + n\n    );\n  }\n  for (; n > 0; --n) {\n    xs = tail(xs);\n  }\n  return head(xs);\n}\n\n// accumulate applies given operation op to elements of a list\n// in a right-to-left order, first apply op to the last element\n// and an initial element, resulting in r1, then to the\n// second-last element and r1, resulting in r2, etc, and finally\n// to the first element and r_n-1, where n is the length of the\n// list.\n// accumulate(op,zero,list(1,2,3)) results in\n// op(1, op(2, op(3, zero)))\nexport function accumulate(op, initial, sequence) {\n  if (is_null(sequence)) {\n    return initial;\n  } else {\n    return op(head(sequence), accumulate(op, initial, tail(sequence)));\n  }\n}\n\n// set_head(xs,x) changes the head of given pair xs to be x,\n// throws an exception if the argument is not a pair\n// LOW-LEVEL FUNCTION, NOT SOURCE\nexport function set_head(xs, x) {\n  if (is_pair(xs)) {\n    xs[0] = x;\n    return undefined;\n  } else {\n    throw new Error('set_head(xs,x) expects a pair as argument xs, but encountered ' + xs);\n  }\n}\n\n// set_tail(xs,x) changes the tail of given pair xs to be x,\n// throws an exception if the argument is not a pair\n// LOW-LEVEL FUNCTION, NOT SOURCE\nexport function set_tail(xs, x) {\n  if (is_pair(xs)) {\n    xs[1] = x;\n    return undefined;\n  } else {\n    throw new Error('set_tail(xs,x) expects a pair as argument xs, but encountered ' + xs);\n  }\n}\n","import { Config } from './Config';\nimport { Data, EmptyList, List, Pair } from './dataVisualizerTypes';\nimport { is_list, is_pair } from './list';\n\n/**\n *  Returns data in text form, fitted into the box.\n *  If not possible to fit data, return undefined. A number will be assigned and logged in the console.\n */\nexport function toText(data: Data, full: boolean = false): string | undefined {\n  if (full) {\n    return '' + data;\n  } else {\n    const type = typeof data;\n    if ((type === 'function' || type === 'object') && data !== null) {\n      return undefined;\n    } else if (type === 'string') {\n      const dataString = data + '';\n      const str = dataString.substring(0, Config.MaxTextLength);\n      return `\"${str}${dataString.length > Config.MaxTextLength ? '...' : ''}\"`;\n    } else {\n      return `${data}`;\n    }\n  }\n}\n\nexport function isArray(data: Data): data is Array<Data> {\n  return Array.isArray(data);\n}\n\nexport function isFunction(data: Data): data is Function {\n  return typeof data === 'function';\n}\n\nexport function isPair(data: Data): data is Pair {\n  return is_pair(data);\n}\n\nexport function isList(data: Data): data is List {\n  return is_list(data);\n}\n\nexport function isEmptyList(data: Data): data is EmptyList {\n  return data === null;\n}\n\nexport { head, tail } from './list';\n","import React from 'react';\nimport { Arrow } from 'react-konva';\n\nimport { Config } from '../Config';\n\ntype ArrowConfig = { from: { x: number; y: number }; to: { x: number; y: number } };\n\n/**\n * Represents an arrow used to connect a parent node and a child node.\n *\n * Used with ArrayDrawable and FunctionDrawable.\n */\nexport class ArrowDrawable extends React.PureComponent<ArrowConfig> {\n  render() {\n    return (\n      <Arrow\n        key={this.props + ''}\n        points={[\n          this.props.from.x,\n          this.props.from.y,\n          this.props.to.x + Config.ArrowPointerOffsetHorizontal,\n          this.props.to.y + Config.ArrowPointerOffsetVertical\n        ]}\n        pointerWidth={Config.ArrowPointerSize}\n        pointerLength={Config.ArrowPointerSize}\n        fill={Config.Fill}\n        stroke={Config.Stroke}\n        strokeWidth={Config.StrokeWidth}\n        preventDefault={false}\n      ></Arrow>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport { Arrow } from 'react-konva';\n\nimport { Config } from '../Config';\n\ntype ArrowConfig = { from: { x: number; y: number }; to: { x: number; y: number } };\n\n/**\n * Represents an arrow used to connect a parent node and a child node that has been drawn before,\n * that is positioned to the top left of the parent node.\n *\n */\nexport class BackwardArrowDrawable extends PureComponent<ArrowConfig> {\n  /**\n   *  Connects a box to a previously known box, the arrow path is more complicated.\n   *\n   *  After coming out of the starting box, it moves to the left,\n   *  Then goes to the correct y-value and turns to reach the top of the end box.\n   *  It then directly points to the end box. All turnings are 90 degress.\n   *\n   *        │\n   *  ▲     │\n   *  └─────┘\n   */\n  render() {\n    // The starting coordinate is the centre of the starting box\n    // The ending coordinate is along the top edge of the ending box, and Config.ArrowSpaceHorizontal pixels from the left edge\n    const bottomY = this.props.from.y + Config.BoxHeight / 2 + Config.ArrowMarginBottom;\n\n    // The x coordinate of the left most part of the backward arrow\n    const leftX = this.props.to.x - Config.ArrowMarginHorizontal;\n\n    // The y coordinate of the top most part of the backward arrow\n    const topY = this.props.to.y - Config.ArrowMarginTop;\n\n    const path = [\n      this.props.from.x,\n      this.props.from.y,\n      this.props.from.x,\n      bottomY,\n      leftX,\n      bottomY,\n      leftX,\n      topY,\n      this.props.to.x + Config.ArrowPointerOffsetHorizontal,\n      topY,\n      this.props.to.x + Config.ArrowPointerOffsetHorizontal,\n      this.props.to.y + Config.ArrowPointerOffsetVertical\n    ];\n    return (\n      <Arrow\n        points={path}\n        pointerLength={Config.ArrowPointerSize}\n        pointerWidth={Config.ArrowPointerSize}\n        fill={Config.Fill}\n        stroke={Config.Stroke}\n        strokeWidth={Config.StrokeWidth}\n        preventDefault={false}\n      ></Arrow>\n    );\n  }\n}\n","export class TreeNode {\n  public children: TreeNode[] | null;\n\n  constructor() {\n    this.children = null;\n  }\n}\n","import { TreeNode } from './BaseTreeNode';\nimport { DrawableTreeNode } from './DrawableTreeNode';\n\n/**\n * Represents a node that is already parsed earlier in the tree.\n */\nexport class AlreadyParsedTreeNode extends TreeNode {\n  public actualNode: DrawableTreeNode;\n\n  constructor(actualNode: DrawableTreeNode) {\n    super();\n    this.actualNode = actualNode;\n  }\n}\n","import { Data } from '../dataVisualizerTypes';\nimport { TreeNode } from './BaseTreeNode';\n\n/**\n * Represents node corresponding to a data object (neither pair nor function).\n */\nexport class DataTreeNode extends TreeNode {\n  public readonly data: Data;\n\n  constructor(data: Data) {\n    super();\n    this.data = data;\n  }\n}\n","import { TreeNode } from './BaseTreeNode';\n\n/**\n * Represents a node whose drawable should be cached.\n *\n * Concrete implementations: ArrayTreeNode, FunctionTreeNode\n */\nexport abstract class DrawableTreeNode extends TreeNode {\n  protected _drawable?: JSX.Element;\n  public drawableX?: number;\n  public drawableY?: number;\n\n  get drawable() {\n    return this._drawable;\n  }\n\n  /**\n   * Creates a Konva object representing the drawable. Should be called only once.\n   * Subsequent references of the drawable to be obtained using the drawable getter.\n   *\n   * @param x The x position of the drawable.\n   * @param y The y position of the drawable.\n   * @param parentX The x position of the parent.\n   * @param parentY The y position of the parent.\n   */\n  abstract createDrawable(x: number, y: number, parentX: number, parentY: number): JSX.Element;\n}\n","import React from 'react';\nimport { Line } from 'react-konva';\n\nimport { Config } from '../Config';\n\ntype NullProps = {\n  x: number;\n  y: number;\n};\n\n/**\n *  Represents the diagonal line drawn over the tail of a pair\n *  when the tail is an empty box.\n *\n *  Used in conjunction with ArrayDrawable.\n */\nexport class NullDrawable extends React.PureComponent<NullProps> {\n  render() {\n    return (\n      <Line\n        x={this.props.x}\n        y={this.props.y}\n        points={[0, Config.BoxHeight, Config.BoxWidth, 0]}\n        strokeWidth={Config.StrokeWidth - 1}\n        stroke={Config.Stroke}\n        preventDefault={false}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Group, Line, Rect, Text } from 'react-konva';\n\nimport { Config } from '../Config';\nimport DataVisualizer from '../dataVisualizer';\nimport { isEmptyList, isList, toText } from '../dataVisualizerUtils';\nimport { DataTreeNode, TreeNode } from '../tree/TreeNode';\nimport { NullDrawable } from './NullDrawable';\n\ntype ArrayProps = {\n  nodes: TreeNode[];\n  x: number;\n  y: number;\n};\n\n/**\n *  Represents an array in a tree.\n */\nexport class ArrayDrawable extends React.PureComponent<ArrayProps> {\n  render() {\n    const createChildText = (node: DataTreeNode, index: number) => {\n      const nodeValue = node.data;\n      if (!isList(nodeValue)) {\n        const textValue: string | undefined = toText(nodeValue);\n        const textToDisplay = textValue ?? '*' + DataVisualizer.displaySpecialContent(node);\n        return (\n          <Text\n            key={'' + nodeValue + index}\n            text={textToDisplay}\n            align={'center'}\n            width={Config.BoxWidth}\n            x={Config.BoxWidth * index}\n            y={Math.floor((Config.BoxHeight - 1.2 * 12) / 2)}\n            fontStyle={textValue === undefined ? 'italic' : 'normal'}\n            fill={'white'}\n            preventDefault={false}\n          />\n        );\n      } else if (isEmptyList(nodeValue)) {\n        const props = {\n          x: index * Config.BoxWidth,\n          y: 0\n        };\n        return <NullDrawable key={index} {...props} />;\n      } else {\n        return null;\n      }\n    };\n\n    return (\n      <Group x={this.props.x} y={this.props.y}>\n        {/* Outer rectangle */}\n        <Rect\n          width={Math.max(Config.BoxWidth * this.props.nodes.length, Config.BoxMinWidth)}\n          height={Config.BoxHeight}\n          strokeWidth={Config.StrokeWidth}\n          stroke={Config.Stroke}\n          fill={'#17181A'}\n          preventDefault={false}\n        />\n        {/* Vertical lines in the box */}\n        {this.props.nodes.length > 1 &&\n          Array.from(Array(this.props.nodes.length - 1), (e, i) => {\n            return (\n              <Line\n                key={'line' + i}\n                points={[Config.BoxWidth * (i + 1), 0, Config.BoxWidth * (i + 1), Config.BoxHeight]}\n                strokeWidth={Config.StrokeWidth}\n                stroke={Config.Stroke}\n                preventDefault={false}\n              />\n            );\n          })}\n        {this.props.nodes.map(\n          (child, index) => child instanceof DataTreeNode && createChildText(child, index)\n        )}\n      </Group>\n    );\n  }\n}\n","import React from 'react';\nimport { Circle, Group } from 'react-konva';\n\nimport { Config } from '../Config';\n\ntype FunctionProps = {\n  x: number;\n  y: number;\n};\n\n/**\n * Represents a function object drawn using two circles.\n */\nexport class FunctionDrawable extends React.PureComponent<FunctionProps> {\n  render() {\n    return (\n      <Group {...this.props}>\n        {/* Left circle */}\n        <Circle\n          radius={Config.CircleRadiusLarge}\n          strokeWidth={Config.StrokeWidth}\n          stroke={Config.Stroke}\n          x={Config.CircleRadiusLarge}\n          y={Config.CircleRadiusLarge}\n          preventDefault={false}\n        />\n\n        {/* Right circle */}\n        <Circle\n          radius={Config.CircleRadiusLarge}\n          strokeWidth={Config.StrokeWidth}\n          stroke={Config.Stroke}\n          x={Config.CircleRadiusLarge * 3 + Config.StrokeWidth}\n          y={Config.CircleRadiusLarge}\n          preventDefault={false}\n        />\n\n        {/* Left dot */}\n        <Circle\n          radius={Config.CircleRadiusSmall}\n          strokeWidth={Config.StrokeWidth}\n          stroke={Config.Fill}\n          fill={Config.Fill}\n          x={Config.CircleRadiusLarge}\n          y={Config.CircleRadiusLarge}\n          preventDefault={false}\n        />\n\n        {/* Right dot */}\n        <Circle\n          radius={Config.CircleRadiusSmall}\n          strokeWidth={Config.StrokeWidth}\n          stroke={Config.Stroke}\n          fill={Config.Fill}\n          x={Config.CircleRadiusLarge * 3 + Config.StrokeWidth}\n          y={Config.CircleRadiusLarge}\n          preventDefault={false}\n        />\n      </Group>\n    );\n  }\n}\n","import { Group } from 'react-konva';\n\nimport { Config } from '../Config';\nimport { ArrowDrawable, FunctionDrawable } from '../drawable/Drawable';\nimport { DrawableTreeNode } from './DrawableTreeNode';\n\n/**\n * Represents a node corresponding to a Source (and Javascript) function.\n */\nexport class FunctionTreeNode extends DrawableTreeNode {\n  createDrawable(x: number, y: number, parentX: number, parentY: number): JSX.Element {\n    this._drawable = (\n      <Group key={x + ', ' + y}>\n        <FunctionDrawable {...{ x, y }}></FunctionDrawable>\n        {(parentX !== x || parentY !== y) && (\n          <ArrowDrawable\n            {...{\n              from: {\n                x: parentX + Config.BoxWidth / 2,\n                y: parentY + Config.BoxHeight / 2\n              },\n              to: {\n                x,\n                y\n              }\n            }}\n          ></ArrowDrawable>\n        )}\n      </Group>\n    );\n\n    this.drawableX = x;\n    this.drawableY = y;\n\n    return this._drawable;\n  }\n}\n","import { Group } from 'react-konva';\n\nimport { Config } from '../Config';\nimport { ArrayDrawable, ArrowDrawable } from '../drawable/Drawable';\nimport { DrawableTreeNode } from './DrawableTreeNode';\n\n/**\n * Represents a node corresponding to a Source pair or array.\n */\nexport class ArrayTreeNode extends DrawableTreeNode {\n  createDrawable(x: number, y: number, parentX: number, parentY: number): JSX.Element {\n    const arrayProps = { nodes: this.children ?? [], x, y };\n    const arrayDrawable = <ArrayDrawable {...arrayProps}></ArrayDrawable>;\n\n    this._drawable = (\n      <Group key={x + ', ' + y}>\n        {arrayDrawable}\n        {(parentX !== x || parentY !== y) && (\n          <ArrowDrawable\n            {...{\n              from: {\n                x: parentX + Config.BoxWidth / 2,\n                y: parentY + Config.BoxHeight / 2\n              },\n              to: {\n                x,\n                y\n              }\n            }}\n          ></ArrowDrawable>\n        )}\n      </Group>\n    );\n    this.drawableX = x;\n    this.drawableY = y;\n    return this._drawable;\n  }\n}\n","import Konva from 'konva';\nimport { Layer, Text } from 'react-konva';\n\nimport { Config } from '../Config';\nimport { Data, Pair } from '../dataVisualizerTypes';\nimport { isArray, isFunction, toText } from '../dataVisualizerUtils';\nimport { ArrowDrawable } from '../drawable/ArrowDrawable';\nimport { BackwardArrowDrawable } from '../drawable/BackwardArrowDrawable';\nimport { AlreadyParsedTreeNode } from './AlreadyParsedTreeNode';\nimport {\n  ArrayTreeNode,\n  DataTreeNode,\n  DrawableTreeNode,\n  FunctionTreeNode,\n  TreeNode\n} from './TreeNode';\n\n/**\n *  A tree object built based on the given Data, Function or Array of\n *  data/functions/arrays.\n */\nexport class Tree {\n  private _rootNode: TreeNode;\n  private nodes: DrawableTreeNode[];\n\n  /**\n   * Constructs a tree given a root node and a list of nodes.\n   * @param rootNode The root node of the tree.\n   * @param nodes The memoized nodes of the tree in list form.\n   */\n  constructor(rootNode: TreeNode, nodes: DrawableTreeNode[]) {\n    this._rootNode = rootNode;\n    this.nodes = nodes;\n  }\n\n  /**\n   * The root node of the tree.\n   */\n  get rootNode(): TreeNode {\n    return this._rootNode;\n  }\n\n  /**\n   * Returns the memoized node of the given id.\n   * @param id The id of the node.\n   */\n  getNodeById(id: number): DrawableTreeNode {\n    return this.nodes[id];\n  }\n\n  static fromSourceStructure(tree: Data): Tree {\n    let nodeCount = 0;\n\n    function constructNode(structure: Data): TreeNode {\n      const alreadyDrawnNode = visitedStructures.get(structure);\n      if (alreadyDrawnNode !== undefined) {\n        return new AlreadyParsedTreeNode(alreadyDrawnNode);\n      }\n      return isArray(structure)\n        ? constructTree(structure)\n        : isFunction(structure)\n        ? constructFunction(structure)\n        : constructData(structure);\n    }\n\n    /**\n     * Returns a node representing the given tree as a pair.\n     * Also memoizes the pair object, for the case where the\n     * pair appears multiple times in the data structure.\n     * @param tree The Source tree to construct a node for.\n     */\n    function constructTree(tree: Array<Data>) {\n      const node = new ArrayTreeNode();\n\n      visitedStructures.set(tree, node);\n      treeNodes[nodeCount] = node;\n      nodeCount++;\n\n      // Done like that instead of in constructor to prevent infinite recursion\n      node.children = tree.map(constructNode);\n\n      return node;\n    }\n\n    /**\n     * Returns a node representing the given function.\n     * Also memoizes the function object, for the case where the\n     * function appears multiple times in the data structure.\n     * @param func The function to construct a node for.\n     */\n    function constructFunction(func: Function) {\n      const node = new FunctionTreeNode();\n\n      // memoise current function\n      visitedStructures.set(func, node);\n      treeNodes[nodeCount] = node;\n      nodeCount++;\n\n      return node;\n    }\n\n    /**\n     * Returns a node representing the given data.\n     * Anything except functions and pairs are considered data, including empty lists.\n     * @param data The data to construct a node for.\n     */\n    function constructData(data: Data) {\n      return new DataTreeNode(data);\n    }\n\n    const visitedStructures: Map<Function | Pair | Array<Data>, DrawableTreeNode> = new Map(); // detects cycles\n    const treeNodes: DrawableTreeNode[] = [];\n    const rootNode = constructNode(tree);\n\n    return new Tree(rootNode, treeNodes);\n  }\n\n  draw(): TreeDrawer {\n    return new TreeDrawer(this);\n  }\n}\n\n/**\n *  Drawer function of a tree\n */\nclass TreeDrawer {\n  private tree: Tree;\n\n  private drawables: JSX.Element[];\n  private nodeWidths: Map<TreeNode, number>;\n  public width: number = 0;\n  public height: number = 0;\n\n  // Used to account for backward arrow\n  private minX = 0;\n  private minY = 0;\n\n  constructor(tree: Tree) {\n    this.tree = tree;\n    this.drawables = [];\n    this.nodeWidths = new Map();\n  }\n\n  /**\n   *  Draws a tree at x, y, by calling drawNode on the root at x, y.\n   */\n  draw(x: number, y: number): JSX.Element {\n    if (this.tree.rootNode instanceof DataTreeNode) {\n      const text = toText(this.tree.rootNode.data);\n      const textConfig = {\n        text: text,\n        align: 'center',\n        fontStyle: 'normal',\n        fontSize: 20,\n        fill: Config.Stroke\n      };\n      const konvaText = new Konva.Text(textConfig);\n      this.width = konvaText.width();\n      this.height = konvaText.height();\n      return (\n        <Layer>\n          <Text {...textConfig} />\n        </Layer>\n      );\n    } else {\n      this.drawNode(this.tree.rootNode, x, y, x, y);\n      this.width = this.getNodeWidth(this.tree.rootNode) - this.minX;\n      this.height = this.getNodeHeight(this.tree.rootNode) - this.minY + Config.StrokeWidth;\n      return (\n        <Layer key={x + ', ' + y} offsetX={this.minX} offsetY={this.minY}>\n          {this.drawables}\n        </Layer>\n      );\n    }\n  }\n\n  /**\n   *  Draws the box for the pair representing the tree, then recursively draws its children.\n   *  A slash is drawn for empty lists.\n   *\n   *  If a child node has been drawn previously, an arrow is drawn pointing to the children,\n   *  instead of drawing the child node again.\n   * @param node The node to draw.\n   * @param x The x position to draw at.\n   * @param y The y position to draw at.\n   * @param parentX The x position of the parent. If there is no parent, it is the same as x.\n   * @param parentY The y position of the parent. If there is no parent, it is the same as y.\n   */\n  drawNode(node: TreeNode, x: number, y: number, parentX: number, parentY: number) {\n    if (node instanceof AlreadyParsedTreeNode) {\n      // if its child is part of a cycle and it's been drawn, link back to that node instead\n      const drawnNode = node.actualNode;\n      const arrowProps = {\n        from: {\n          x: parentX + Config.BoxWidth / 2,\n          y: parentY + Config.BoxHeight / 2\n        },\n        to: {\n          x: drawnNode.drawableX!,\n          y: drawnNode.drawableY!\n        }\n      };\n\n      const isBackwardArrow = arrowProps.from.y >= arrowProps.to.y;\n\n      let arrow: JSX.Element;\n\n      if (isBackwardArrow) {\n        // Update the minX and minY, in case overflow to the top or left happens\n        this.minX = Math.min(\n          this.minX,\n          drawnNode.drawableX! - Config.ArrowMarginHorizontal - Config.StrokeWidth / 2\n        );\n        this.minY = Math.min(\n          this.minY,\n          drawnNode.drawableY! - Config.ArrowMarginTop - Config.StrokeWidth / 2\n        );\n        arrow = (\n          <BackwardArrowDrawable key={'Arrow (back)' + parentX + x + parentY + y} {...arrowProps} />\n        );\n      } else {\n        arrow = <ArrowDrawable key={'Arrow' + parentX + x + parentY + y} {...arrowProps} />;\n      }\n      this.drawables.push(arrow);\n    }\n\n    if (!(node instanceof DrawableTreeNode)) return;\n\n    // draws the content\n    if (node instanceof FunctionTreeNode) {\n      const drawable = node.createDrawable(x, y, parentX, parentY);\n      this.drawables.push(drawable);\n    } else if (node instanceof ArrayTreeNode) {\n      const drawable = node.createDrawable(x, y, parentX, parentY);\n      this.drawables.push(drawable);\n\n      // if it has children, draw them\n      // const width = this.getNodeWidth(node);\n      let leftX = x;\n      node.children?.forEach((childNode, index) => {\n        const childY = childNode instanceof AlreadyParsedTreeNode ? y : y + Config.DistanceY;\n        this.drawNode(childNode, leftX, childY, x + Config.BoxWidth * index, y);\n        const childNodeWidth = this.getNodeWidth(childNode);\n        leftX += childNodeWidth ? childNodeWidth + Config.DistanceX : 0;\n      });\n    }\n  }\n\n  /**\n   * Returns the width taken up by the node in pixels.\n   * @param node The node to calculate the width of.\n   */\n  getNodeWidth(node: TreeNode): number {\n    if (node instanceof DataTreeNode || node instanceof AlreadyParsedTreeNode) {\n      return 0;\n    } else if (node instanceof FunctionTreeNode) {\n      return Config.CircleRadiusLarge * 4 + 2 * Config.StrokeWidth;\n    } else if (node instanceof ArrayTreeNode) {\n      if (this.nodeWidths.has(node)) {\n        return this.nodeWidths.get(node) ?? 0;\n      } else if (node.children != null) {\n        const childrenWidths = node.children\n          .map(node => this.getNodeWidth(node))\n          .filter(x => x > 0);\n        const childrenWidth =\n          childrenWidths.length > 0 ? childrenWidths.reduce((x, y) => x + y + Config.DistanceX) : 0;\n        const nodeWidth = Math.max(\n          node.children.length * Config.BoxWidth + Config.StrokeWidth,\n          childrenWidth,\n          Config.BoxMinWidth + Config.StrokeWidth\n        );\n        this.nodeWidths.set(node, nodeWidth);\n        return nodeWidth;\n      } else {\n        return 0;\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  /**\n   * Returns the height taken up by the node in pixels.\n   * @param node The node to calculate the width of.\n   */\n  getNodeHeight(node: TreeNode): number {\n    if (node instanceof DataTreeNode) {\n      return 0;\n    } else if (node instanceof FunctionTreeNode) {\n      return Config.BoxHeight;\n    } else if (node instanceof AlreadyParsedTreeNode) {\n      return Config.ArrowMarginBottom;\n    } else if (node instanceof ArrayTreeNode) {\n      // Height of array node is BoxHeight + StrokeWidth / 2 + max(childrenHeights)\n      return (\n        (node.children ?? [])\n          .map(child => {\n            const childHeight = this.getNodeHeight(child);\n            return childHeight + (child instanceof DrawableTreeNode ? Config.DistanceY / 2 : 0);\n          })\n          .filter(height => height > 0)\n          .reduce((x, y) => Math.max(x, y), 0) + Config.BoxHeight\n      );\n    } else {\n      return 0;\n    }\n  }\n}\n","import { Stage } from 'react-konva';\n\nimport { Config } from './Config';\nimport { Data, Step } from './dataVisualizerTypes';\nimport { Tree } from './tree/Tree';\nimport { DataTreeNode } from './tree/TreeNode';\n\n/**\n * The data visualizer class.\n * Exposes three function: init, drawData, and clear.\n *\n * init is used by SideContentDataVisualizer as a hook.\n * drawData is the draw_data function in source.\n * clear is used by WorkspaceSaga to reset the visualizer after every \"Run\" button press\n */\nexport default class DataVisualizer {\n  private static empty(step: Step[]) {}\n  private static setSteps: (step: Step[]) => void = DataVisualizer.empty;\n  private static _instance = new DataVisualizer();\n\n  private steps: Step[] = [];\n  private nodeLabel = 0;\n  private nodeToLabelMap: Map<DataTreeNode, number> = new Map();\n\n  private constructor() {}\n\n  public static init(setSteps: (step: Step[]) => void): void {\n    DataVisualizer.setSteps = setSteps;\n  }\n\n  public static drawData(structures: Data[]): void {\n    if (!DataVisualizer.setSteps) {\n      throw new Error('Data visualizer not initialized');\n    }\n    DataVisualizer._instance.addStep(structures);\n    DataVisualizer.setSteps(DataVisualizer._instance.steps);\n  }\n\n  public static clear(): void {\n    DataVisualizer._instance = new DataVisualizer();\n    DataVisualizer.setSteps(DataVisualizer._instance.steps);\n  }\n\n  public static displaySpecialContent(dataNode: DataTreeNode): number {\n    return DataVisualizer._instance.displaySpecialContent(dataNode);\n  }\n\n  private displaySpecialContent(dataNode: DataTreeNode): number {\n    if (this.nodeToLabelMap.has(dataNode)) {\n      return this.nodeToLabelMap.get(dataNode) ?? 0;\n    } else {\n      console.log('*' + this.nodeLabel + ': ' + dataNode.data);\n      this.nodeToLabelMap.set(dataNode, this.nodeLabel);\n      return this.nodeLabel++;\n    }\n  }\n\n  private addStep(structures: Data[]) {\n    const step = structures.map(this.createDrawing);\n    this.steps.push(step);\n  }\n\n  /**\n   *  For student use. Draws a structure by converting it into a tree object, attempts to draw on the canvas,\n   *  Then shift it to the left end.\n   */\n  private createDrawing(xs: Data): JSX.Element {\n    const treeDrawer = Tree.fromSourceStructure(xs).draw();\n\n    // To account for overflow to the left side due to a backward arrow\n    // const leftMargin = Config.ArrowMarginHorizontal + Config.StrokeWidth;\n    const leftMargin = Config.StrokeWidth / 2;\n\n    // To account for overflow to the top due to a backward arrow\n    const topMargin = Config.StrokeWidth / 2;\n\n    const layer = treeDrawer.draw(leftMargin, topMargin);\n    return (\n      <Stage key={xs} width={treeDrawer.width + leftMargin} height={treeDrawer.height + topMargin}>\n        {layer}\n      </Stage>\n    );\n  }\n}\n","import { Chapter, Language, SourceError, Variant } from 'Clang-slang/dist/types';\n\nimport { AcademyState } from '../../features/academy/AcademyTypes';\nimport { AchievementState } from '../../features/achievement/AchievementTypes';\nimport { DashboardState } from '../../features/dashboard/DashboardTypes';\nimport { Grading } from '../../features/grading/GradingTypes';\nimport { PlaygroundState } from '../../features/playground/PlaygroundTypes';\nimport { PlaybackStatus, RecordingStatus } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { Assessment } from '../assessment/AssessmentTypes';\nimport Constants from '../utils/Constants';\nimport { createContext } from '../utils/JsSlangHelper';\nimport {\n  DebuggerContext,\n  WorkspaceLocation,\n  WorkspaceManagerState,\n  WorkspaceState\n} from '../workspace/WorkspaceTypes';\nimport { ExternalLibraryName } from './types/ExternalTypes';\nimport { SessionState } from './types/SessionTypes';\n\nexport type OverallState = {\n  readonly academy: AcademyState;\n  readonly achievement: AchievementState;\n  readonly application: ApplicationState;\n  readonly playground: PlaygroundState;\n  readonly session: SessionState;\n  readonly workspaces: WorkspaceManagerState;\n  readonly dashboard: DashboardState;\n};\n\nexport type ApplicationState = {\n  readonly environment: ApplicationEnvironment;\n};\n\nexport type Story = {\n  story: string;\n  playStory: boolean;\n};\n\nexport type GameState = {\n  collectibles: { [id: string]: string };\n  completed_quests: string[];\n};\n\n/**\n * An output while the program is still being run in the interpreter. As a\n * result, there are no return values or SourceErrors yet. However, there could\n * have been calls to display (console.log) that need to be printed out.\n */\nexport type RunningOutput = {\n  type: 'running';\n  consoleLogs: string[];\n};\n\n/**\n * An output which reflects the program which the user had entered. Not a true\n * Output from the interpreter, but simply there to let he user know what had\n * been entered.\n */\nexport type CodeOutput = {\n  type: 'code';\n  value: string;\n};\n\n/**\n * An output which represents a program being run successfully, i.e. with a\n * return value at the end. A program can have either a return value, or errors,\n * but not both.\n */\nexport type ResultOutput = {\n  type: 'result';\n  value: any;\n  consoleLogs: string[];\n  runtime?: number;\n  isProgram?: boolean;\n};\n\n/**\n * An output which represents a program being run unsuccessfully, i.e. with\n * errors at the end. A program can have either a return value, or errors, but\n * not both.\n */\nexport type ErrorOutput = {\n  type: 'errors';\n  errors: SourceError[];\n  consoleLogs: string[];\n};\n\nexport type InterpreterOutput = RunningOutput | CodeOutput | ResultOutput | ErrorOutput;\n\nexport enum ApplicationEnvironment {\n  Development = 'development',\n  Production = 'production',\n  Test = 'test'\n}\n\nexport enum Role {\n  Student = 'student',\n  Staff = 'staff',\n  Admin = 'admin'\n}\n\n/**\n * Defines the languages available for use on Source Academy,\n * including Source sublanguages and other languages e.g. full JS.\n * For external libraries, see ExternalLibrariesTypes.ts\n */\nexport interface SALanguage extends Language {\n  displayName: string;\n}\n\nconst variantDisplay: Map<Variant, string> = new Map([[Variant.DEFAULT, 'Clang']]);\n\nexport const styliseSublanguage = (chapter: Chapter, variant: Variant = Variant.DEFAULT) => {\n  return `Source \\xa7${chapter}${\n    variantDisplay.has(variant) ? ` ${variantDisplay.get(variant)}` : ''\n  }`;\n};\n\nexport const sublanguages: Language[] = [{ chapter: Chapter.CLANG, variant: Variant.DEFAULT }];\n\nexport const sourceLanguages: SALanguage[] = sublanguages.map(sublang => {\n  return {\n    ...sublang,\n    displayName: styliseSublanguage(sublang.chapter, sublang.variant)\n  };\n});\n\nexport const defaultLanguages = sourceLanguages.filter(\n  sublang => sublang.variant === Variant.DEFAULT\n);\n\nexport const variantLanguages = sourceLanguages.filter(\n  sublang => sublang.variant !== Variant.DEFAULT\n);\n\nexport const isSourceLanguage = (chapter: Chapter) => [Chapter.CLANG].includes(chapter);\n\nconst currentEnvironment = (): ApplicationEnvironment => {\n  switch (process.env.NODE_ENV) {\n    case 'development':\n      return ApplicationEnvironment.Development;\n    case 'production':\n      return ApplicationEnvironment.Production;\n    default:\n      return ApplicationEnvironment.Test;\n  }\n};\n\nexport const defaultAcademy: AcademyState = {\n  gameCanvas: undefined\n};\n\nexport const defaultApplication: ApplicationState = {\n  environment: currentEnvironment()\n};\n\nexport const defaultDashboard: DashboardState = {\n  gradingSummary: {\n    cols: [],\n    rows: []\n  }\n};\n\nexport const defaultAchievement: AchievementState = {\n  achievements: [],\n  goals: [],\n  users: [],\n  assessmentOverviews: []\n};\n\nexport const defaultPlayground: PlaygroundState = {\n  githubSaveInfo: { repoName: '', filePath: '' }\n};\n\nexport const defaultEditorValue = '1+1';\n\n/**\n * Create a default IWorkspaceState for 'resetting' a workspace.\n * Takes in parameters to set the Clang-slang library and chapter.\n *\n * @param workspaceLocation the location of the workspace, used for context\n */\nexport const createDefaultWorkspace = (workspaceLocation: WorkspaceLocation): WorkspaceState => ({\n  autogradingResults: [],\n  context: createContext<WorkspaceLocation>([], workspaceLocation, Constants.defaultSourceVariant),\n  activeEditorTabIndex: 0,\n  editorTabs: [\n    {\n      value: ['playground', 'sourcecast', 'githubAssessments'].includes(workspaceLocation)\n        ? defaultEditorValue\n        : '',\n      prependValue: '',\n      postpendValue: '',\n      highlightedLines: [],\n      breakpoints: []\n    }\n  ],\n  editorSessionId: '',\n  isEditorReadonly: false,\n  editorTestcases: [],\n  externalLibrary: ExternalLibraryName.NONE,\n  execTime: 1000,\n  output: [],\n  replHistory: {\n    browseIndex: null,\n    records: [],\n    originalValue: ''\n  },\n  replValue: '',\n  sharedbConnected: false,\n  stepLimit: 1000,\n  globals: [],\n  isEditorAutorun: false,\n  isRunning: false,\n  isDebugging: false,\n  enableDebugging: true,\n  debuggerContext: {} as DebuggerContext\n});\n\nexport const defaultWorkspaceManager: WorkspaceManagerState = {\n  assessment: {\n    ...createDefaultWorkspace('assessment'),\n    currentAssessment: undefined,\n    currentQuestion: undefined,\n    hasUnsavedChanges: false\n  },\n  grading: {\n    ...createDefaultWorkspace('grading'),\n    currentSubmission: undefined,\n    currentQuestion: undefined,\n    hasUnsavedChanges: false\n  },\n  playground: {\n    ...createDefaultWorkspace('playground'),\n    usingSubst: false\n  },\n  sourcecast: {\n    ...createDefaultWorkspace('sourcecast'),\n    audioUrl: '',\n    codeDeltasToApply: null,\n    currentPlayerTime: 0,\n    description: null,\n    inputToApply: null,\n    playbackData: {\n      init: {\n        editorValue: '',\n        chapter: Chapter.CLANG,\n        externalLibrary: ExternalLibraryName.NONE\n      },\n      inputs: []\n    },\n    playbackDuration: 0,\n    playbackStatus: PlaybackStatus.paused,\n    sourcecastIndex: null,\n    title: null,\n    uid: null\n  },\n  sourcereel: {\n    ...createDefaultWorkspace('sourcereel'),\n    playbackData: {\n      init: {\n        editorValue: '',\n        chapter: Chapter.CLANG,\n        externalLibrary: ExternalLibraryName.NONE\n      },\n      inputs: []\n    },\n    recordingStatus: RecordingStatus.notStarted,\n    timeElapsedBeforePause: 0,\n    timeResumed: 0\n  },\n  sicp: {\n    ...createDefaultWorkspace('sicp'),\n    usingSubst: false\n  },\n  githubAssessment: {\n    ...createDefaultWorkspace('githubAssessment'),\n    hasUnsavedChanges: false\n  }\n};\n\nexport const defaultSession: SessionState = {\n  courses: [],\n  group: null,\n  gameState: {\n    completed_quests: [],\n    collectibles: {}\n  },\n  xp: 0,\n  allUserXp: undefined,\n  story: {\n    story: '',\n    playStory: false\n  },\n  assessments: new Map<number, Assessment>(),\n  assessmentOverviews: undefined,\n  agreedToResearch: undefined,\n  sessionId: Date.now(),\n  githubOctokitObject: { octokit: undefined },\n  gradingOverviews: undefined,\n  gradings: new Map<number, Grading>(),\n  notifications: []\n};\n\nexport const defaultState: OverallState = {\n  academy: defaultAcademy,\n  achievement: defaultAchievement,\n  application: defaultApplication,\n  dashboard: defaultDashboard,\n  playground: defaultPlayground,\n  session: defaultSession,\n  workspaces: defaultWorkspaceManager\n};\n","import Constants from '../utils/Constants';\n\nconst protocolMap = {\n  'http:': 'ws:',\n  'https:': 'wss:'\n};\n\nexport function getSessionUrl(sessionId: string, ws?: boolean): string {\n  const url = new URL(sessionId, Constants.sharedbBackendUrl);\n  if (ws) {\n    url.protocol = protocolMap[url.protocol];\n  }\n  return url.toString();\n}\n\nexport async function checkSessionIdExists(sessionId: string): Promise<boolean> {\n  const resp = await fetch(getSessionUrl(sessionId));\n\n  return resp && resp.ok;\n}\n\nexport async function createNewSession(initial: string): Promise<string> {\n  const resp = await fetch(Constants.sharedbBackendUrl, {\n    method: 'POST',\n    body: initial,\n    headers: { 'Content-Type': 'text/plain' }\n  });\n\n  if (!resp || !resp.ok) {\n    throw new Error(\n      resp ? `Could not create new session: ${await resp.text()}` : 'Unknown error creating session'\n    );\n  }\n\n  return resp.text();\n}\n","export const SET_EDITOR_SESSION_ID = 'SET_EDITOR_SESSION_ID';\nexport const SET_SHAREDB_CONNECTED = 'SET_SHAREDB_CONNECTED';\n","/* eslint-disable */\nimport * as ace from 'ace-builds/src-noconflict/ace';\nimport { Variant } from 'Clang-slang/dist/types';\n\nexport function HighlightRulesSelector_native(\n  id,\n  variant = Variant.DEFAULT,\n  external = 'NONE',\n  externalLibraries = []\n) {\n  // @ts-ignore\n  function _SourceHighlightRules(acequire, exports, module) {\n    const oop = acequire('../lib/oop');\n    const DocCommentHighlightRules = acequire(\n      './doc_comment_highlight_rules'\n    ).DocCommentHighlightRules;\n    const TextHighlightRules = acequire('./text_highlight_rules').TextHighlightRules;\n    const identifierRegex = '[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*';\n    const chapter = variant === Variant.DEFAULT ? id.toString() : id.toString() + '_' + variant;\n\n    // Currently there are no builtin libraries for NativeJS\n    // const builtin_lib = SourceDocumentation.builtins[chapter];\n    const builtin_lib = null;\n\n    function addFromBuiltinLibrary(meta) {\n      if (builtin_lib === null) {\n        return '';\n      }\n      let func = '';\n      for (const name in builtin_lib) {\n        if (builtin_lib[name]['meta'] === meta) {\n          func += '|' + name;\n        }\n      }\n      return func;\n    }\n    function addFromExternalLibrary(meta) {\n      if (externalLibraries === null) {\n        return '';\n      }\n      let func = '';\n      externalLibraries.forEach(node => {\n        if (node.meta === meta) {\n          func += '|' + node.caption;\n        }\n      });\n      return func;\n    }\n    function getAllNames(meta) {\n      const concat = addFromBuiltinLibrary(meta) + addFromExternalLibrary(meta);\n      return concat.substr(1);\n    }\n    const ChapterKeywordSelector = () => {\n      let output = '';\n      return output;\n    };\n    const ChapterForbbidenWordSelector = () => {\n      return 'window|document';\n    };\n    // @ts-ignore\n    const SourceHighlightRules = function (options) {\n      // @ts-ignore\n\n      // Copied from https://github.com/ajaxorg/ace-builds/blob/master/src/mode-javascript.js\n      const keywordMapper = this.createKeywordMapper(\n        {\n          'variable.language':\n            // Purple: for disallowed words\n            'implements|interface|package|private|protected|public|static|' +\n            ChapterForbbidenWordSelector(), // Pseudo\n          keyword:\n            // Orange: for normal keywords\n            'Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|' + // Constructors\n            'Namespace|QName|XML|XMLList|' + // E4X\n            'ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|' +\n            'Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|' +\n            'Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|' + // Errors\n            'SyntaxError|TypeError|URIError|' +\n            'decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|isFinite|' + // Non-constructor functions\n            'isNaN|parseFloat|parseInt|' +\n            'Math|' +\n            'this|arguments|prototype' +\n            'yield|get|set|async|await|' +\n            'enum|eval|' +\n            'true|false|' +\n            'null|Infinity|NaN|undefined|' +\n            'break|case|continue|default|delete|do|else|finally|for|' +\n            'if|in|of|instanceof|new|return|switch|throw|try|typeof|while|with|debugger|' +\n            'escape|with|' +\n            'extends|super|export',\n          'storage.type':\n            // Yellow: for declarations\n            'const|let|var|function|import|class|catch',\n          'support.function': 'alert'\n          // \"constant.language.boolean\": \"true|false\"\n        },\n        'identifier'\n      );\n      const keywordBeforeRegex =\n        'case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void';\n      const escapedRegex =\n        '\\\\\\\\(?:x[0-9a-fA-F]{2}|' + // hex\n        'u[0-9a-fA-F]{4}|' + // unicode\n        'u{[0-9a-fA-F]{1,6}}|' + // es6 unicode\n        '[0-2][0-7]{0,2}|' + // oct\n        '3[0-7][0-7]?|' + // oct\n        '[4-7][0-7]?|' + //oct\n        '.)';\n      // @ts-ignore\n      this.$rules = {\n        no_regex: [\n          DocCommentHighlightRules.getStartRule('doc-start'),\n          comments('no_regex'),\n          {\n            token: 'string',\n            regex: \"'(?=.)\",\n            next: 'qstring'\n          },\n          {\n            token: 'string',\n            regex: '\"(?=.)',\n            next: 'qqstring'\n          },\n          {\n            token: 'constant.numeric',\n            regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n          },\n          {\n            token: 'constant.numeric',\n            regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n          },\n          {\n            token: [\n              'storage.type',\n              'punctuation.operator',\n              'support.function',\n              'punctuation.operator',\n              'entity.name.function',\n              'text',\n              'keyword.operator'\n            ],\n            regex:\n              '(' + identifierRegex + ')(\\\\.)(prototype)(\\\\.)(' + identifierRegex + ')(\\\\s*)(=)',\n            next: 'function_arguments'\n          },\n          {\n            token: [\n              'storage.type',\n              'punctuation.operator',\n              'entity.name.function',\n              'text',\n              'keyword.operator',\n              'text',\n              'storage.type',\n              'text',\n              'paren.lparen'\n            ],\n            regex:\n              '(' +\n              identifierRegex +\n              ')(\\\\.)(' +\n              identifierRegex +\n              ')(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()',\n            next: 'function_arguments'\n          },\n          {\n            token: [\n              'entity.name.function',\n              'text',\n              'keyword.operator',\n              'text',\n              'storage.type',\n              'text',\n              'paren.lparen'\n            ],\n            regex: '(' + identifierRegex + ')(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()',\n            next: 'function_arguments'\n          },\n          {\n            token: [\n              'storage.type',\n              'punctuation.operator',\n              'entity.name.function',\n              'text',\n              'keyword.operator',\n              'text',\n              'storage.type',\n              'text',\n              'entity.name.function',\n              'text',\n              'paren.lparen'\n            ],\n            regex:\n              '(' +\n              identifierRegex +\n              ')(\\\\.)(' +\n              identifierRegex +\n              ')(\\\\s*)(=)(\\\\s*)(function)(\\\\s+)(\\\\w+)(\\\\s*)(\\\\()',\n            next: 'function_arguments'\n          },\n          {\n            token: ['storage.type', 'text', 'entity.name.function', 'text', 'paren.lparen'],\n            regex: '(function)(\\\\s+)(' + identifierRegex + ')(\\\\s*)(\\\\()',\n            next: 'function_arguments'\n          },\n          {\n            token: [\n              'entity.name.function',\n              'text',\n              'punctuation.operator',\n              'text',\n              'storage.type',\n              'text',\n              'paren.lparen'\n            ],\n            regex: '(' + identifierRegex + ')(\\\\s*)(:)(\\\\s*)(function)(\\\\s*)(\\\\()',\n            next: 'function_arguments'\n          },\n          {\n            token: ['text', 'text', 'storage.type', 'text', 'paren.lparen'],\n            regex: '(:)(\\\\s*)(function)(\\\\s*)(\\\\()',\n            next: 'function_arguments'\n          },\n          {\n            token: 'keyword',\n            regex: 'from(?=\\\\s*(\\'|\"))'\n          },\n          {\n            token: 'keyword',\n            regex: '(?:' + keywordBeforeRegex + ')\\\\b',\n            next: 'start'\n          },\n          {\n            token: ['support.constant'],\n            regex: /that\\b/\n          },\n          {\n            token: keywordMapper,\n            regex: identifierRegex\n          },\n          {\n            token: 'variable.language',\n            regex: /[.](?![.])/,\n            next: 'property'\n          },\n          {\n            token: 'storage.type',\n            regex: /=>/\n          },\n          {\n            token: 'keyword.operator',\n            regex: /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n            next: 'start'\n          },\n          {\n            token: 'punctuation.operator',\n            regex: /[?:,;.]/,\n            next: 'start'\n          },\n          {\n            token: 'paren.lparen',\n            regex: /[\\[({]/,\n            next: 'start'\n          },\n          {\n            token: 'paren.rparen',\n            regex: /[\\])}]/\n          },\n          {\n            token: 'comment',\n            regex: /^#!.*$/\n          }\n        ],\n        property: [\n          {\n            token: 'text',\n            regex: '\\\\s+'\n          },\n          {\n            token: [\n              'storage.type',\n              'punctuation.operator',\n              'entity.name.function',\n              'text',\n              'keyword.operator',\n              'text',\n              'storage.type',\n              'text',\n              'entity.name.function',\n              'text',\n              'paren.lparen'\n            ],\n            regex:\n              '(' +\n              identifierRegex +\n              ')(\\\\.)(' +\n              identifierRegex +\n              ')(\\\\s*)(=)(\\\\s*)(function)(?:(\\\\s+)(\\\\w+))?(\\\\s*)(\\\\()',\n            next: 'function_arguments'\n          },\n          {\n            token: 'punctuation.operator',\n            regex: /[.](?![.])/\n          },\n          {\n            token: 'variable.language',\n            regex:\n              /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n          },\n          {\n            token: 'variable.language.dom',\n            regex:\n              /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n          },\n          {\n            token: 'support.constant',\n            regex:\n              /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n          },\n          {\n            token: 'identifier',\n            regex: identifierRegex\n          },\n          {\n            regex: '',\n            token: 'empty',\n            next: 'no_regex'\n          }\n        ],\n        start: [\n          DocCommentHighlightRules.getStartRule('doc-start'),\n          comments('start'),\n          {\n            token: 'string.regexp',\n            regex: '\\\\/',\n            next: 'regex'\n          },\n          {\n            token: 'text',\n            regex: '\\\\s+|^$',\n            next: 'start'\n          },\n          {\n            token: 'empty',\n            regex: '',\n            next: 'no_regex'\n          }\n        ],\n        regex: [\n          {\n            token: 'regexp.keyword.operator',\n            regex: '\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)'\n          },\n          {\n            token: 'string.regexp',\n            regex: '/[sxngimy]*',\n            next: 'no_regex'\n          },\n          {\n            token: 'invalid',\n            regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n          },\n          {\n            token: 'constant.language.escape',\n            regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n          },\n          {\n            token: 'constant.language.delimiter',\n            regex: /\\|/\n          },\n          {\n            token: 'constant.language.escape',\n            regex: /\\[\\^?/,\n            next: 'regex_character_class'\n          },\n          {\n            token: 'empty',\n            regex: '$',\n            next: 'no_regex'\n          },\n          {\n            defaultToken: 'string.regexp'\n          }\n        ],\n        regex_character_class: [\n          {\n            token: 'regexp.charclass.keyword.operator',\n            regex: '\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)'\n          },\n          {\n            token: 'constant.language.escape',\n            regex: ']',\n            next: 'regex'\n          },\n          {\n            token: 'constant.language.escape',\n            regex: '-'\n          },\n          {\n            token: 'empty',\n            regex: '$',\n            next: 'no_regex'\n          },\n          {\n            defaultToken: 'string.regexp.charachterclass'\n          }\n        ],\n        function_arguments: [\n          {\n            token: 'variable.parameter',\n            regex: identifierRegex\n          },\n          {\n            token: 'punctuation.operator',\n            regex: '[, ]+'\n          },\n          {\n            token: 'punctuation.operator',\n            regex: '$'\n          },\n          {\n            token: 'empty',\n            regex: '',\n            next: 'no_regex'\n          }\n        ],\n        qqstring: [\n          {\n            token: 'constant.language.escape',\n            regex: escapedRegex\n          },\n          {\n            token: 'string',\n            regex: '\\\\\\\\$',\n            consumeLineEnd: true\n          },\n          {\n            token: 'string',\n            regex: '\"|$',\n            next: 'no_regex'\n          },\n          {\n            defaultToken: 'string'\n          }\n        ],\n        qstring: [\n          {\n            token: 'constant.language.escape',\n            regex: escapedRegex\n          },\n          {\n            token: 'string',\n            regex: '\\\\\\\\$',\n            consumeLineEnd: true\n          },\n          {\n            token: 'string',\n            regex: \"'|$\",\n            next: 'no_regex'\n          },\n          {\n            defaultToken: 'string'\n          }\n        ]\n      };\n      if (!options || !options.noES6) {\n        // @ts-ignore\n        this.$rules.no_regex.unshift(\n          {\n            regex: '[{}]',\n            // @ts-ignore\n            onMatch: function (val, state, stack) {\n              this.next = val == '{' ? this.nextState : '';\n              if (val == '{' && stack.length) {\n                stack.unshift('start', state);\n              } else if (val == '}' && stack.length) {\n                stack.shift();\n                this.next = stack.shift();\n                if (this.next.indexOf('string') != -1 || this.next.indexOf('jsx') != -1)\n                  return 'paren.quasi.end';\n              }\n              return val == '{' ? 'paren.lparen' : 'paren.rparen';\n            },\n            nextState: 'start'\n          },\n          {\n            token: 'string.quasi.start',\n            regex: /`/,\n            push: [\n              {\n                token: 'constant.language.escape',\n                regex: escapedRegex\n              },\n              {\n                token: 'paren.quasi.start',\n                regex: /\\${/,\n                push: 'start'\n              },\n              {\n                token: 'string.quasi.end',\n                regex: /`/,\n                next: 'pop'\n              },\n              {\n                defaultToken: 'string.quasi'\n              }\n            ]\n          }\n        );\n        if (!options || options.jsx != false)\n          // @ts-ignore\n          JSX.call(this);\n      }\n      // @ts-ignore\n      this.embedRules(DocCommentHighlightRules, 'doc-', [\n        DocCommentHighlightRules.getEndRule('no_regex')\n      ]);\n      // @ts-ignore\n      this.normalizeRules();\n    };\n    oop.inherits(SourceHighlightRules, TextHighlightRules);\n    function JSX() {\n      const tagRegex = identifierRegex.replace('\\\\d', '\\\\d\\\\-');\n      const jsxTag = {\n        // @ts-ignore\n        onMatch: function (val, state, stack) {\n          const offset = val.charAt(1) == '/' ? 2 : 1;\n          if (offset == 1) {\n            if (state != this.nextState) stack.unshift(this.next, this.nextState, 0);\n            else stack.unshift(this.next);\n            stack[2]++;\n          } else if (offset == 2) {\n            if (state == this.nextState) {\n              stack[1]--;\n              if (!stack[1] || stack[1] < 0) {\n                stack.shift();\n                stack.shift();\n              }\n            }\n          }\n          return [\n            {\n              type: 'meta.tag.punctuation.' + (offset == 1 ? '' : 'end-') + 'tag-open.xml',\n              value: val.slice(0, offset)\n            },\n            {\n              type: 'meta.tag.tag-name.xml',\n              value: val.substr(offset)\n            }\n          ];\n        },\n        regex: '</?' + tagRegex + '',\n        next: 'jsxAttributes',\n        nextState: 'jsx'\n      };\n      // @ts-ignore\n      this.$rules.start.unshift(jsxTag);\n      const jsxJsRule = {\n        regex: '{',\n        token: 'paren.quasi.start',\n        push: 'start'\n      };\n      // @ts-ignore\n      this.$rules.jsx = [jsxJsRule, jsxTag, { include: 'reference' }, { defaultToken: 'string' }];\n      // @ts-ignore\n      this.$rules.jsxAttributes = [\n        {\n          token: 'meta.tag.punctuation.tag-close.xml',\n          regex: '/?>',\n          // @ts-ignore\n          onMatch: function (value, currentState, stack) {\n            if (currentState == stack[0]) stack.shift();\n            if (value.length == 2) {\n              if (stack[0] == this.nextState) stack[1]--;\n              if (!stack[1] || stack[1] < 0) {\n                stack.splice(0, 2);\n              }\n            }\n            // @ts-ignore\n            this.next = stack[0] || 'start';\n            return [{ type: this.token, value: value }];\n          },\n          nextState: 'jsx'\n        },\n        jsxJsRule,\n        comments('jsxAttributes'),\n        {\n          token: 'entity.other.attribute-name.xml',\n          regex: tagRegex\n        },\n        {\n          token: 'keyword.operator.attribute-equals.xml',\n          regex: '='\n        },\n        {\n          token: 'text.tag-whitespace.xml',\n          regex: '\\\\s+'\n        },\n        {\n          token: 'string.attribute-value.xml',\n          regex: \"'\",\n          stateName: 'jsx_attr_q',\n          push: [\n            { token: 'string.attribute-value.xml', regex: \"'\", next: 'pop' },\n            { include: 'reference' },\n            { defaultToken: 'string.attribute-value.xml' }\n          ]\n        },\n        {\n          token: 'string.attribute-value.xml',\n          regex: '\"',\n          stateName: 'jsx_attr_qq',\n          push: [\n            { token: 'string.attribute-value.xml', regex: '\"', next: 'pop' },\n            { include: 'reference' },\n            { defaultToken: 'string.attribute-value.xml' }\n          ]\n        },\n        jsxTag\n      ];\n      // @ts-ignore\n      this.$rules.reference = [\n        {\n          token: 'constant.language.escape.reference.xml',\n          regex: '(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)'\n        }\n      ];\n    }\n    // @ts-ignore\n    function comments(next) {\n      return [\n        {\n          token: 'comment',\n          regex: /\\/\\*/,\n          next: [\n            DocCommentHighlightRules.getTagRule(),\n            { token: 'comment', regex: '\\\\*\\\\/', next: next || 'pop' },\n            { defaultToken: 'comment', caseInsensitive: true }\n          ]\n        },\n        {\n          token: 'comment',\n          regex: '\\\\/\\\\/',\n          next: [\n            DocCommentHighlightRules.getTagRule(),\n            { token: 'comment', regex: '$|^', next: next || 'pop' },\n            { defaultToken: 'comment', caseInsensitive: true }\n          ]\n        }\n      ];\n    }\n    exports.SourceHighlightRules = SourceHighlightRules;\n  }\n  const name = id.toString() + variant + external;\n  // @ts-ignore\n  ace.define(\n    'ace/mode/source_highlight_rules' + name,\n    [\n      'require',\n      'exports',\n      'module',\n      'ace/lib/oop',\n      'ace/mode/doc_comment_highlight_rules',\n      'ace/mode/text_highlight_rules'\n    ],\n    _SourceHighlightRules\n  );\n}\n","import { SourceDocumentation } from 'CLang-slang';\nimport { deviceTypes } from 'src/features/remoteExecution/RemoteExecutionTypes';\n\nimport { externalLibraries } from '../application/types/ExternalTypes';\n\nconst externalLibrariesDocumentation = {};\n\nconst MAX_CAPTION_LENGTH = 27;\n\nfunction shortenCaption(name: string): string {\n  if (name.length <= MAX_CAPTION_LENGTH) {\n    return name;\n  }\n\n  return (name = name.substring(0, MAX_CAPTION_LENGTH - 3) + '...');\n}\n\nfunction mapExternalLibraryName(name: string) {\n  if (name in SourceDocumentation.ext_lib) {\n    return {\n      caption: shortenCaption(name),\n      value: name,\n      meta: SourceDocumentation.ext_lib[name].meta,\n      docHTML: SourceDocumentation.ext_lib[name].description\n    };\n  } else {\n    return {\n      caption: shortenCaption(name),\n      value: name,\n      meta: 'const'\n    };\n  }\n}\n\nfor (const [lib, names] of externalLibraries) {\n  externalLibrariesDocumentation[lib] = names.map(mapExternalLibraryName);\n}\n\n// Add remote device libraries\nfor (const deviceType of deviceTypes) {\n  externalLibrariesDocumentation[deviceType.deviceLibraryName] =\n    deviceType.internalFunctions.map(mapExternalLibraryName);\n}\n\nconst builtinDocumentation = {};\n\nObject.entries(SourceDocumentation.builtins).forEach((chapterDoc: any) => {\n  const [chapter, docs] = chapterDoc;\n  builtinDocumentation[chapter] = Object.entries(docs).map((entry: any) => {\n    const [name, info] = entry;\n    return {\n      caption: shortenCaption(name),\n      value: name,\n      meta: info.meta,\n      docHTML: info.description\n    };\n  });\n});\n\nexport const Documentation = {\n  builtins: builtinDocumentation,\n  externalLibraries: externalLibrariesDocumentation\n};\n","import { ModeSelector } from 'Clang-slang/dist/editors/ace/modes/source';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\n\nimport { HighlightRulesSelector_native } from '../../features/fullJS/fullJSHighlight';\nimport { Documentation } from '../documentation/Documentation';\n/**\n * This _modifies global state_ and defines a new Ace mode globally, if it does not already exist.\n *\n * You can call this directly in render functions.\n */\nexport const selectMode = (chapter: Chapter, variant: Variant, library: string) => {\n  if (\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    typeof ace.define.modules[`ace/mode/${getModeString(chapter, variant, library)}`]?.Mode ===\n    'function'\n  ) {\n    return;\n  }\n\n  HighlightRulesSelector_native(\n    chapter,\n    variant,\n    library,\n    Documentation.externalLibraries[library]\n  );\n  ModeSelector(chapter, variant, library);\n};\n\nexport const getModeString = (chapter: Chapter, variant: Variant, library: string) => {\n  return `source${chapter}${variant}${library}`;\n};\n","import { IconName } from '@blueprintjs/core';\n\nimport { DebuggerContext } from '../workspace/WorkspaceTypes';\n\nexport const NOTIFY_PROGRAM_EVALUATED = 'NOTIFY_PROGRAM_EVALUATED';\n\nexport enum SideContentType {\n  autograder = 'autograder',\n  briefing = 'briefing',\n  contestVoting = 'contest_voting',\n  contestLeaderboard = 'contest_leaderboard',\n  dataVisualizer = 'data_visualizer',\n  editorGrading = 'editor_grading',\n  editorAutograder = 'editor_autograder',\n  editorBriefing = 'editor_briefing',\n  editorGlobalDeployment = 'editor_global_deployment',\n  editorGlobalGraderDeployment = 'editor_global_grader_deployment',\n  editorLocalDeployment = 'editor_local_deployment',\n  editorLocalGraderDeployment = 'editor_local_grader_deployment',\n  editorManageQuestion = 'editor_manage_question',\n  editorQuestionOverview = 'editor_question_overview',\n  editorQuestionTemplate = 'editor_question_template',\n  envVisualizer = 'env_visualizer',\n  files = 'files',\n  grading = 'grading',\n  introduction = 'introduction',\n  module = 'module',\n  questionOverview = 'question_overview',\n  remoteExecution = 'remote_execution',\n  missionMetadata = 'mission_metadata',\n  mobileEditor = 'mobile_editor',\n  mobileEditorRun = 'mobile_editor_run',\n  sourcereel = 'sourcereel',\n  substVisualizer = 'subst_visualiser',\n  testcases = 'testcases',\n  toneMatrix = 'tone_matrix',\n  htmlDisplay = 'html_display'\n}\n\n/**\n * @property label A string that will appear as the tooltip.\n *\n * @property iconName BlueprintJS IconName element, used to render the\n *   icon which will be displayed over the SideContent panel.\n *\n * @property body The element to be rendered in the SideContent panel\n *  when the tab is selected. If null, the panel will not be rendered.\n *\n * @property id A string/number that will be used as the tab ID and key.\n *  If id is undefined, id will be set to label by the renderTab function.\n *\n * @property disabled Set this property to true to disable a tab. The\n * corresponding tab label will still be rendered on hover, but the\n * tab will be greyed out and cannot be selected. Default value: false.\n */\nexport type SideContentTab = {\n  label: string;\n  iconName: IconName;\n  body: JSX.Element | null;\n  id?: SideContentType;\n  disabled?: boolean;\n};\n\n/**\n * Used for modules that dynamically spawn when imported\n *\n * @property label A string that will appear as the tooltip.\n *\n * @property iconName BlueprintJS IconName element, used to render the\n *   icon which will be displayed over the SideContent panel.\n *\n * @property body The element to be rendered in the SideContent panel\n *  when the tab is selected.\n *\n * @property toSpawn function that returns boolean to determine if\n * side content tab should appear\n */\nexport type ModuleSideContent = {\n  label: string;\n  iconName: IconName;\n  body: (props: any) => JSX.Element;\n  toSpawn: (context: DebuggerContext) => boolean;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = exports.TrailingCommaError = exports.MissingSemicolonError = exports.FatalSyntaxError = exports.DisallowedConstructError = void 0;\n/* tslint:disable:max-classes-per-file */\nconst antlr4ts_1 = require(\"antlr4ts\");\nconst ClangLexer_1 = require(\"../lang/ClangLexer\");\nconst ClangParser_1 = require(\"../lang/ClangParser\");\nconst types_1 = require(\"../types\");\nconst formatters_1 = require(\"../utils/formatters\");\nclass DisallowedConstructError {\n    constructor(node) {\n        this.node = node;\n        this.type = types_1.ErrorType.SYNTAX;\n        this.severity = types_1.ErrorSeverity.ERROR;\n        this.nodeType = this.formatNodeType(this.node.type);\n    }\n    get location() {\n        return this.node.loc;\n    }\n    explain() {\n        return `${this.nodeType} are not allowed`;\n    }\n    elaborate() {\n        return (0, formatters_1.stripIndent) `\n      You are trying to use ${this.nodeType}, which is not allowed (yet).\n    `;\n    }\n    /**\n     * Converts estree node.type into english\n     * e.g. ThisExpression -> 'this' expressions\n     *      Property -> Properties\n     *      EmptyStatement -> Empty Statements\n     */\n    formatNodeType(nodeType) {\n        switch (nodeType) {\n            case 'ThisExpression':\n                return \"'this' expressions\";\n            case 'Property':\n                return 'Properties';\n            default: {\n                const words = nodeType.split(/(?=[A-Z])/);\n                return words.map((word, i) => (i === 0 ? word : word.toLowerCase())).join(' ') + 's';\n            }\n        }\n    }\n}\nexports.DisallowedConstructError = DisallowedConstructError;\nclass FatalSyntaxError {\n    constructor(location, message) {\n        this.location = location;\n        this.message = message;\n        this.type = types_1.ErrorType.SYNTAX;\n        this.severity = types_1.ErrorSeverity.ERROR;\n    }\n    explain() {\n        return this.message;\n    }\n    elaborate() {\n        return 'There is a syntax error in your program';\n    }\n}\nexports.FatalSyntaxError = FatalSyntaxError;\nclass MissingSemicolonError {\n    constructor(location) {\n        this.location = location;\n        this.type = types_1.ErrorType.SYNTAX;\n        this.severity = types_1.ErrorSeverity.ERROR;\n    }\n    explain() {\n        return 'Missing semicolon at the end of statement';\n    }\n    elaborate() {\n        return 'Every statement must be terminated by a semicolon.';\n    }\n}\nexports.MissingSemicolonError = MissingSemicolonError;\nclass TrailingCommaError {\n    constructor(location) {\n        this.location = location;\n    }\n    explain() {\n        return 'Trailing comma';\n    }\n    elaborate() {\n        return 'Please remove the trailing comma';\n    }\n}\nexports.TrailingCommaError = TrailingCommaError;\nclass ExpressionGenerator {\n    visit(tree) {\n        return tree.accept(this);\n    }\n    visitChildren(node) {\n        const expressions = [];\n        for (let i = 0; i < node.childCount; i++) {\n            expressions.push(node.getChild(i).accept(this));\n        }\n        return {\n            type: 'SequenceExpression',\n            expressions\n        };\n    }\n    visitTerminal(node) {\n        return node.accept(this);\n    }\n    visitErrorNode(node) {\n        throw new FatalSyntaxError({\n            start: {\n                line: node.symbol.line,\n                column: node.symbol.charPositionInLine\n            },\n            end: {\n                line: node.symbol.line,\n                column: node.symbol.charPositionInLine + 1\n            }\n        }, `invalid syntax ${node.text}`);\n    }\n}\nfunction convertExpression(expression) {\n    const generator = new ExpressionGenerator();\n    return expression.accept(generator);\n}\nfunction convertSource(expression) {\n    return {\n        type: 'Program',\n        sourceType: 'script',\n        body: [\n            {\n                type: 'ExpressionStatement',\n                expression: convertExpression(expression)\n            }\n        ]\n    };\n}\nfunction parse(source, context) {\n    let program;\n    if (context.variant === 'Clang') {\n        const inputStream = antlr4ts_1.CharStreams.fromString(source);\n        const lexer = new ClangLexer_1.ClangLexer(inputStream);\n        const tokenStream = new antlr4ts_1.CommonTokenStream(lexer);\n        const parser = new ClangParser_1.ClangParser(tokenStream);\n        parser.buildParseTree = true;\n        try {\n            const tree = parser.expression();\n            program = convertSource(tree);\n        }\n        catch (error) {\n            if (error instanceof FatalSyntaxError) {\n                context.errors.push(error);\n            }\n            else {\n                throw error;\n            }\n        }\n        const hasErrors = context.errors.find(m => m.severity === types_1.ErrorSeverity.ERROR);\n        if (program && !hasErrors) {\n            return program;\n        }\n        else {\n            return undefined;\n        }\n    }\n    else {\n        return undefined;\n    }\n}\nexports.parse = parse;\n//# sourceMappingURL=parser.js.map","import { action } from 'typesafe-actions'; // EDITING\n\nimport { WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport { SET_EDITOR_SESSION_ID, SET_SHAREDB_CONNECTED } from './CollabEditingTypes';\n\nexport const setEditorSessionId = (workspaceLocation: WorkspaceLocation, editorSessionId: string) =>\n  action(SET_EDITOR_SESSION_ID, {\n    workspaceLocation,\n    editorSessionId\n  });\n\n/**\n * Sets ShareDB connection status.\n *\n * @param workspaceLocation the workspace to be reset\n * @param connected whether we are connected to ShareDB\n */\nexport const setSharedbConnected = (workspaceLocation: WorkspaceLocation, connected: boolean) =>\n  action(SET_SHAREDB_CONNECTED, { workspaceLocation, connected });\n","\"use strict\";\n/*\nacorn.Node differs from estree.Node, so we have this file to handle the `as any` type coercions.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base = exports.findNodeAfter = exports.findNodeAround = exports.findNodeAt = exports.make = exports.fullAncestor = exports.full = exports.recursive = exports.ancestor = exports.simple = void 0;\nconst walkers = require(\"acorn-walk\");\nexports.simple = walkers.simple;\nexports.ancestor = walkers.ancestor;\nexports.recursive = walkers.recursive;\nexports.full = walkers.full;\nexports.fullAncestor = walkers.fullAncestor;\nexports.make = walkers.make;\nexports.findNodeAt = walkers.findNodeAt;\nexports.findNodeAround = walkers.findNodeAround;\nexports.findNodeAfter = walkers.findNodeAfter;\nexports.base = walkers.base;\n//# sourceMappingURL=walkers.js.map","import { AssessmentOverview } from 'src/commons/assessment/AssessmentTypes';\n\nimport { BooleanExpression } from './ExpressionTypes';\n\nexport const ADD_EVENT = 'ADD_EVENT';\nexport const BULK_UPDATE_ACHIEVEMENTS = 'BULK_UPDATE_ACHIEVEMENTS';\nexport const BULK_UPDATE_GOALS = 'BULK_UPDATE_GOALS';\nexport const EDIT_ACHIEVEMENT = 'EDIT_ACHIEVEMENT';\nexport const EDIT_GOAL = 'EDIT_GOAL';\nexport const HANDLE_EVENT = 'HANDLE_EVENT';\nexport const GET_ACHIEVEMENTS = 'GET_ACHIEVEMENTS';\nexport const GET_GOALS = 'GET_GOALS';\nexport const GET_OWN_GOALS = 'GET_OWN_GOALS';\nexport const GET_USER_ASSESSMENT_OVERVIEWS = 'GET_USER_ASSESSMENT_OVERVIEWS';\nexport const GET_USERS = 'GET_USERS';\nexport const REMOVE_ACHIEVEMENT = 'REMOVE_ACHIEVEMENT';\nexport const REMOVE_GOAL = 'REMOVE_GOAL';\nexport const SAVE_ACHIEVEMENTS = 'SAVE_ACHIEVEMENTS';\nexport const SAVE_GOALS = 'SAVE_GOALS';\nexport const SAVE_USER_ASSESSMENT_OVERVIEWS = 'SAVE_USER_ASSESSMENT_OVERVIEWS';\nexport const SAVE_USERS = 'SAVE_USERS';\nexport const UPDATE_GOAL_PROGRESS = 'UPDATE_GOAL_PROGRESS';\nexport const UPDATE_OWN_GOAL_PROGRESS = 'UPDATE_OWN_GOAL_PROGRESS';\n\nexport enum AchievementStatus {\n  ACTIVE = 'ACTIVE', // deadline not over and not completed\n  COMPLETED = 'COMPLETED', // completed, regardless of deadline\n  EXPIRED = 'EXPIRED', // deadline over and not completed\n  UNRELEASED = 'UNRELEASED' // release date not reached yet\n}\n\nexport enum FilterStatus {\n  ALL = 'ALL', // show all achievements\n  ACTIVE = 'ACTIVE', // show active achievements only\n  COMPLETED = 'COMPLETED' // show completed achievements only\n}\n\n/**\n * Information of an achievement item\n *\n * @param {string} uuid unique uuid of the achievement item\n * @param {string} title title of the achievement\n * @param {number} xp the xp gained when completing the achievement\n * @param {boolean} isVariableXp the xp gained from the achievement is the sum of its goal counts\n * @param {Date} deadline Optional, the deadline of the achievement\n * @param {Date} release Optional, the release date of the achievement\n * @param {boolean} isTask if true, the achievement is rendered as an achievement task\n * @param {number} position ordering of the achievement task, 0 for non-task\n * @param {string[]} prerequisiteUuids an array of prerequisite uuids\n * @param {string[]} goalUuids an array of goal uuids\n * @param {string} cardBackground background image URL of the achievement card\n * @param {AchievementView} view the achievement view\n */\nexport type AchievementItem = {\n  uuid: string;\n  title: string;\n  xp: number;\n  isVariableXp: boolean;\n  deadline?: Date;\n  release?: Date;\n  isTask: boolean;\n  position: number;\n  prerequisiteUuids: string[];\n  goalUuids: string[];\n  cardBackground: string;\n  view: AchievementView;\n};\n\nexport type AchievementGoal = GoalDefinition & GoalProgress;\n\n/**\n * Information of an achievement goal definition\n *\n * @param {string} uuid unique uuid of the goal\n * @param {string} text goal description\n * @param {string[]} achievementUuids an array of achievement uuids that use this goal\n * @param {GoalMeta} meta contains meta data relevant to the goal type\n */\nexport type GoalDefinition = {\n  uuid: string;\n  text: string;\n  achievementUuids: string[];\n  meta: GoalMeta;\n};\n\n/**\n * Information of an achievement goal progress\n *\n * @param {string} uuid unique uuid of the goal\n * @param {number} xp student's current XP of the goal\n * @param {number} maxXp maximum attainable XP of the goal (computed by server)\n * @param {boolean} completed student's completion status of the goal\n */\nexport type GoalProgress = {\n  uuid: string;\n  count: number;\n  targetCount: number;\n  completed: boolean;\n};\n\nexport const defaultGoalProgress = {\n  count: 0,\n  targetCount: 1,\n  completed: false\n};\n\nexport enum GoalType {\n  MANUAL = 'Manual',\n  EVENT = 'Event',\n  ASSESSMENT = 'Assessment (unsupported)',\n  BINARY = 'Binary (unsupported)'\n}\n\nexport enum EventType {\n  NONE = 'None', // This is just for the purposes of a default value\n  RUN_CODE = 'Run Code',\n  ERROR = 'Error',\n  RUN_TESTCASE = 'Run Testcase'\n}\n\nexport type GoalMeta = AssessmentMeta | BinaryMeta | ManualMeta | EventMeta;\n\nexport type AssessmentMeta = {\n  type: GoalType.ASSESSMENT;\n  assessmentNumber: number;\n  requiredCompletionFrac: number; // between [0..1]\n};\n\nexport type BinaryMeta = {\n  type: GoalType.BINARY;\n  condition: BooleanExpression;\n  targetCount: number;\n};\n\nexport type ManualMeta = {\n  type: GoalType.MANUAL;\n  targetCount: number;\n};\n\nexport type EventMeta = {\n  type: GoalType.EVENT;\n  eventNames: EventType[];\n  targetCount: number;\n  release?: Date;\n  deadline?: Date;\n  observeFrom?: Date;\n  observeTo?: Date;\n};\n\n/**\n * Information of an achievement view\n *\n * @param {string} coverImage cover image URL\n * @param {string} description fixed text that displays under title\n * @param {string} completionText text that displays after student completes the achievement\n */\nexport type AchievementView = {\n  coverImage: string;\n  description: string;\n  completionText: string;\n};\n\nexport type AchievementUser = {\n  name?: string;\n  username: string;\n  courseRegId: number;\n  group: string;\n};\n\nexport type AchievementState = {\n  achievements: AchievementItem[];\n  goals: AchievementGoal[];\n  users: AchievementUser[];\n  assessmentOverviews: AssessmentOverview[];\n};\n","\"use strict\";\n// Variable determining chapter of Source is contained in this file.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensureGlobalEnvironmentExist = exports.createEmptyContext = exports.createGlobalEnvironment = exports.EnvTreeNode = exports.EnvTree = exports.LazyBuiltIn = void 0;\nconst types_1 = require(\"./types\");\nclass LazyBuiltIn {\n    constructor(func, evaluateArgs) {\n        this.func = func;\n        this.evaluateArgs = evaluateArgs;\n    }\n}\nexports.LazyBuiltIn = LazyBuiltIn;\nclass EnvTree {\n    constructor() {\n        this._root = null;\n        this.map = new Map();\n    }\n    get root() {\n        return this._root;\n    }\n    insert(environment) {\n        const tailEnvironment = environment.tail;\n        if (tailEnvironment === null) {\n            if (this._root === null) {\n                this._root = new EnvTreeNode(environment, null);\n                this.map.set(environment, this._root);\n            }\n        }\n        else {\n            const parentNode = this.map.get(tailEnvironment);\n            if (parentNode) {\n                const childNode = new EnvTreeNode(environment, parentNode);\n                parentNode.addChild(childNode);\n                this.map.set(environment, childNode);\n            }\n        }\n    }\n    getTreeNode(environment) {\n        return this.map.get(environment);\n    }\n}\nexports.EnvTree = EnvTree;\nclass EnvTreeNode {\n    constructor(environment, parent) {\n        this.environment = environment;\n        this.parent = parent;\n        this._children = [];\n    }\n    get children() {\n        return this._children;\n    }\n    resetChildren(newChildren) {\n        this.clearChildren();\n        this.addChildren(newChildren);\n        newChildren.forEach(c => (c.parent = this));\n    }\n    clearChildren() {\n        this._children = [];\n    }\n    addChildren(newChildren) {\n        this._children.push(...newChildren);\n    }\n    addChild(newChild) {\n        this._children.push(newChild);\n        return newChild;\n    }\n}\nexports.EnvTreeNode = EnvTreeNode;\nconst createEmptyRuntime = () => ({\n    break: false,\n    debuggerOn: true,\n    isRunning: false,\n    environmentTree: new EnvTree(),\n    environments: [],\n    value: undefined,\n    nodes: []\n});\nconst createGlobalEnvironment = () => ({\n    tail: null,\n    name: 'global',\n    head: {},\n    id: '-1'\n});\nexports.createGlobalEnvironment = createGlobalEnvironment;\nconst createEmptyContext = (variant, externalSymbols, externalContext) => {\n    return {\n        externalSymbols,\n        errors: [],\n        externalContext,\n        runtime: createEmptyRuntime(),\n        numberOfOuterEnvironments: 1,\n        prelude: null,\n        executionMethod: 'auto',\n        variant,\n        moduleContexts: {},\n        unTypecheckedCode: [],\n        previousCode: []\n    };\n};\nexports.createEmptyContext = createEmptyContext;\nconst ensureGlobalEnvironmentExist = (context) => {\n    if (!context.runtime) {\n        context.runtime = createEmptyRuntime();\n    }\n    if (!context.runtime.environments) {\n        context.runtime.environments = [];\n    }\n    if (!context.runtime.environmentTree) {\n        context.runtime.environmentTree = new EnvTree();\n    }\n    if (context.runtime.environments.length === 0) {\n        const globalEnvironment = (0, exports.createGlobalEnvironment)();\n        context.runtime.environments.push(globalEnvironment);\n        context.runtime.environmentTree.insert(globalEnvironment);\n    }\n};\nexports.ensureGlobalEnvironmentExist = ensureGlobalEnvironmentExist;\nconst createContext = (variant = types_1.Variant.DEFAULT, externalSymbols = [], externalContext) => {\n    const context = (0, exports.createEmptyContext)(variant, externalSymbols, externalContext);\n    return context;\n};\nexports.default = createContext;\n//# sourceMappingURL=createContext.js.map","\"use strict\";\n/*\n    This file contains definitions of some interfaces and classes that are used in Source (such as\n    error-related classes).\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.disallowedTypes = exports.Variant = exports.Chapter = exports.ErrorSeverity = exports.ErrorType = void 0;\nvar ErrorType;\n(function (ErrorType) {\n    ErrorType[\"SYNTAX\"] = \"Syntax\";\n    ErrorType[\"TYPE\"] = \"Type\";\n    ErrorType[\"RUNTIME\"] = \"Runtime\";\n})(ErrorType = exports.ErrorType || (exports.ErrorType = {}));\nvar ErrorSeverity;\n(function (ErrorSeverity) {\n    ErrorSeverity[\"WARNING\"] = \"Warning\";\n    ErrorSeverity[\"ERROR\"] = \"Error\";\n})(ErrorSeverity = exports.ErrorSeverity || (exports.ErrorSeverity = {}));\nvar Chapter;\n(function (Chapter) {\n    Chapter[Chapter[\"CLANG\"] = 1] = \"CLANG\";\n})(Chapter = exports.Chapter || (exports.Chapter = {}));\nvar Variant;\n(function (Variant) {\n    Variant[\"DEFAULT\"] = \"Clang\";\n})(Variant = exports.Variant || (exports.Variant = {}));\nexports.disallowedTypes = ['bigint', 'never', 'object', 'symbol', 'unknown'];\n//# sourceMappingURL=types.js.map","import { action } from 'typesafe-actions'; // EDITED\n\nimport { LOG_OUT } from '../types/CommonsTypes';\n\nexport const logOut = () => action(LOG_OUT);\n","import { Octokit } from '@octokit/rest';\n\n/**\n * Returns an instance to Octokit created using the authentication token\n */\nexport function generateOctokitInstance(authToken: string) {\n  const octokit = new Octokit({\n    auth: authToken,\n    userAgent: 'Source Academy Playground',\n    baseUrl: 'https://api.github.com',\n    log: {\n      debug: () => {},\n      info: () => {},\n      warn: console.warn,\n      error: console.error\n    },\n    request: {\n      agent: undefined,\n      fetch: undefined,\n      timeout: 0\n    }\n  });\n\n  return octokit;\n}\n","import { Classes } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport React from 'react';\n\nexport type ControlBarProps = {\n  editorButtons: Array<JSX.Element | null>;\n  flowButtons?: Array<JSX.Element | null>;\n  editingWorkspaceButtons?: Array<JSX.Element | null>;\n};\n\nconst ControlBar: React.FC<ControlBarProps> = props => {\n  const editorControl = (\n    <div className={classNames('ControlBar_editor', Classes.BUTTON_GROUP)}>\n      {props.editorButtons}\n    </div>\n  );\n\n  const flowControl = props.flowButtons && (\n    <div className={classNames('ControlBar_flow', Classes.BUTTON_GROUP)}>{props.flowButtons}</div>\n  );\n\n  const editingWorkspaceControl = (\n    <div className={classNames('ControlBar_editingWorkspace', Classes.BUTTON_GROUP)}>\n      {props.editingWorkspaceButtons}\n    </div>\n  );\n\n  return (\n    <div className=\"ControlBar\">\n      {editorControl}\n      {flowControl}\n      {editingWorkspaceControl}\n    </div>\n  );\n};\n\nexport default ControlBar;\n","import { Button, Card, Intent } from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport { IMCQQuestion } from '../assessment/AssessmentTypes';\nimport Markdown from '../Markdown';\nimport { showSuccessMessage, showWarningMessage } from '../utils/NotificationsHelper';\n\nexport type McqChooserProps = {\n  mcq: IMCQQuestion;\n  handleMCQSubmit: (choiceId: number) => void;\n};\n\nclass McqChooser extends React.PureComponent<McqChooserProps, {}> {\n  public render() {\n    const options = this.props.mcq.choices.map((choice, i) => (\n      <Button\n        key={i}\n        className=\"mcq-option col-xs-12\"\n        active={i === this.props.mcq.answer}\n        intent={this.getButtonIntent(i, this.props.mcq.answer, this.props.mcq.solution)}\n        onClick={this.onButtonClickFactory(i)}\n        minimal={true}\n      >\n        <Markdown content={choice.content} />\n      </Button>\n    ));\n    return (\n      <div className=\"MCQChooser row\">\n        <Card className=\"mcq-content-parent col-xs-12 middle-xs\">\n          <div className=\"row mcq-options-parent between-xs\">{options}</div>\n        </Card>\n      </div>\n    );\n  }\n\n  /**\n   * A function to generate an onClick function that causes\n   * and mcq submission with a given answer id.\n   *\n   * Post-condition: the local state will be updated to store the\n   * mcq option selected, and a notification will be displayed with\n   * a hint, if the question is ungraded.\n   *\n   * @param i the id of the answer\n   */\n  private onButtonClickFactory = (i: number) => (e: any) => {\n    if (i !== this.props.mcq.answer) {\n      this.props.handleMCQSubmit(i);\n    }\n    const shouldDisplayMessage = this.props.mcq.solution !== null && this.props.mcq.choices[i].hint;\n    if (shouldDisplayMessage) {\n      const hintElement = (\n        <Markdown className=\"markdown-notification\" content={this.props.mcq.choices[i].hint!} />\n      );\n      if (i === this.props.mcq.solution) {\n        showSuccessMessage(hintElement, 4000);\n      } else {\n        showWarningMessage(hintElement, 4000);\n      }\n    }\n  };\n\n  /**\n   * Handles the logic for what intent an MCQ option should show up as.\n   * This is dependent on the presence of an actual solution (for ungraded assessments),\n   * the current selection, and whether the selected option is active.\n   *\n   * @param currentOption the current button key, corresponding to a choice ID\n   * @param chosenOption the mcq option that is chosen in the state, i.e what should show up as \"selected\"\n   * @param solution the solution to the mcq, if any\n   */\n  private getButtonIntent = (\n    currentOption: number,\n    chosenOption: number | null,\n    solution?: number\n  ): Intent => {\n    const active = currentOption === chosenOption;\n    const correctOptionSelected = active && solution !== undefined && currentOption === solution;\n    if (solution === undefined) {\n      return Intent.NONE;\n    } else if (active && correctOptionSelected) {\n      return Intent.SUCCESS;\n    } else if (active && !correctOptionSelected) {\n      return Intent.DANGER;\n    } else {\n      return Intent.NONE;\n    }\n  };\n}\n\nexport default McqChooser;\n","import * as _ from 'lodash';\n\n/**\n * Performs a deep comparison between the previous & next props state\n * to determine if they are equivalent. For use with the `React.memo`\n * higher order component.\n *\n * @param prevProps The previous state of the props passed into a component.\n * @param nextProps The next state of the props passed into a component\n */\nexport const propsAreEqual = <T>(prevProps: T, nextProps: T): boolean =>\n  _.isEqual(prevProps, nextProps);\n","import { Card, Classes, Elevation, Pre } from '@blueprintjs/core';\nimport { parseError } from 'Clang-slang';\nimport { stringify } from 'Clang-slang/dist/utils/stringify';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nimport { Testcase, TestcaseTypes } from '../assessment/AssessmentTypes';\nimport { WorkspaceLocation } from '../workspace/WorkspaceTypes';\n\ntype SideContentTestcaseCardProps = DispatchProps & StateProps & OwnProps;\n\ntype DispatchProps = {\n  handleTestcaseEval: (testcaseId: number) => void;\n};\n\ntype StateProps = {\n  index: number;\n  testcase: Testcase;\n};\n\ntype OwnProps = {\n  workspaceLocation: WorkspaceLocation;\n};\n\nconst SideContentTestcaseCard: React.FunctionComponent<SideContentTestcaseCardProps> = props => {\n  const { index, testcase, handleTestcaseEval } = props;\n\n  const extraClasses = React.useMemo(() => {\n    const isEvaluated = testcase.result !== undefined || testcase.errors;\n    const isEqual = stringify(testcase.result) === testcase.answer;\n\n    return {\n      correct: isEvaluated && isEqual,\n      wrong: isEvaluated && !isEqual,\n      // opaque and secret testcases will be greyed in the GradingWorkspace\n      secret: testcase.type === TestcaseTypes.secret || testcase.type === TestcaseTypes.opaque\n    };\n  }, [testcase]);\n\n  const handleRunTestcase = React.useCallback(() => {\n    handleTestcaseEval(index);\n  }, [index, handleTestcaseEval]);\n\n  /**\n   * Note: There are 3 testcase types in the backend: public, opaque, secret\n   *\n   * Public testcases are always sent from the backend, and displayed for both\n   * students and staff/ admin in the AssessmentWorkspace and/ or GradingWorkspace.\n   *\n   * Opaque testcases are always sent from the backend, and are 'hidden' with a\n   * placeholder cell in the AssessmentWorkspace, but displayed in the\n   * GradingWorkspace albeit with grey CSS styling.\n   *\n   * Secret testcases are only sent from the backend when the grading endpoint is\n   * accessed (i.e. NOT sent in the AssessmentWorkspace). Thus they are only seen\n   * in the GradingWorkspace albeit with grey CSS styling, which is only accessible\n   * by staff/ admin.\n   *\n   * Extra info: The GitHubAssessmentWorkspace uses this testcase card component even\n   * though they only have public testcases (as of July 2021). Thus all testcases will\n   * be rendered in the GitHubAssessmentWorkspace for students.\n   */\n  return (\n    <div className={classNames('AutograderCard', extraClasses)}>\n      <Card className={Classes.INTERACTIVE} elevation={Elevation.ONE} onClick={handleRunTestcase}>\n        {testcase.type === TestcaseTypes.opaque && props.workspaceLocation === 'assessment' ? (\n          // Render a placeholder cell in place of the actual testcase data for opaque testcases\n          <Pre className=\"testcase-placeholder\">Hidden testcase</Pre>\n        ) : (\n          <>\n            <Pre className=\"testcase-program\">{testcase.program}</Pre>\n            <Pre className=\"testcase-expected\">{testcase.answer}</Pre>\n            <Pre className=\"testcase-actual\">\n              {testcase.errors\n                ? parseError(testcase.errors)\n                : testcase.result !== undefined\n                ? stringify(testcase.result)\n                : 'No Answer'}\n            </Pre>\n          </>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default SideContentTestcaseCard;\n","import { Button, Checkbox, MenuItem, NumericInput } from '@blueprintjs/core';\nimport { ItemPredicate, ItemRenderer, Select } from '@blueprintjs/select';\nimport { useContext, useEffect, useState } from 'react';\nimport { AchievementContext } from 'src/features/achievement/AchievementConstants';\nimport {\n  AchievementGoal,\n  AchievementUser,\n  GoalProgress\n} from 'src/features/achievement/AchievementTypes';\n\nimport { showSuccessMessage, showWarningMessage } from '../utils/NotificationsHelper';\n\ntype AchievementManualEditorProps = {\n  hiddenState: [boolean, any];\n  userState: [AchievementUser | undefined, any];\n  studio: string;\n  users: AchievementUser[];\n  getUsers: () => void;\n  updateGoalProgress: (studentCourseRegId: number, progress: GoalProgress) => void;\n};\n\nconst GoalSelect = Select.ofType<AchievementGoal>();\nconst goalRenderer: ItemRenderer<AchievementGoal> = (goal, { handleClick }) => (\n  <MenuItem key={goal.uuid} onClick={handleClick} text={goal.text} />\n);\nconst goalPredicate: ItemPredicate<AchievementGoal> = (query, item) =>\n  item.text.toLowerCase().includes(query.toLowerCase());\n\nconst UserSelect = Select.ofType<AchievementUser>();\nconst userRenderer: ItemRenderer<AchievementUser> = (user, { handleClick }) => (\n  <MenuItem key={user.courseRegId} onClick={handleClick} text={user.name || user.username} />\n);\nconst userPredicate: ItemPredicate<AchievementUser> = (query, item) =>\n  [item.name, item.username, item.group].reduce(\n    (acc: boolean, x) => (x ? acc || x.toLowerCase().includes(query.toLowerCase()) : acc),\n    false\n  );\n\nexport function updateGoalProcessed() {\n  showSuccessMessage('Goal updated');\n}\n\nfunction AchievementManualEditor(props: AchievementManualEditorProps) {\n  const { userState, hiddenState, studio, getUsers, updateGoalProgress } = props;\n  const users =\n    studio === 'Staff'\n      ? // The name can be null for users who have yet to log in. We push these to the back of the array.\n        [...props.users].sort(\n          (user1, user2) =>\n            user1.name != null && user2.name != null\n              ? user1.name.localeCompare(user2.name)\n              : user1.name == null\n              ? 1 // user1.name is null, user1 > user2\n              : -1 // user2.name is null, user1 < user2\n        )\n      : props.users\n          .filter(user => user.group === studio)\n          .sort(\n            (user1, user2) =>\n              user1.name != null && user2.name != null\n                ? user1.name.localeCompare(user2.name)\n                : user1.name == null\n                ? 1 // user1.name is null, user1 > user2\n                : -1 // user2.name is null, user1 < user2\n          );\n\n  useEffect(getUsers, [getUsers]);\n\n  const inferencer = useContext(AchievementContext);\n  const manualAchievements: AchievementGoal[] = inferencer\n    .getAllGoals()\n    .filter(goals => goals.meta.type === 'Manual');\n\n  const [goal, changeGoal] = useState<AchievementGoal | undefined>(undefined);\n  const [selectedUser, changeSelectedUser] = userState;\n  const [count, changeCount] = useState<number>(0);\n  const [viewHidden, changeViewHidden] = hiddenState;\n\n  const updateGoal = () => {\n    if (goal && selectedUser) {\n      const progress: GoalProgress = {\n        uuid: goal.uuid,\n        count: count < 0 ? 0 : Math.floor(count),\n        targetCount: goal.targetCount,\n        completed: count >= goal.targetCount\n      };\n      updateGoalProgress(selectedUser.courseRegId, progress);\n    } else {\n      !goal && showWarningMessage('Goal not selected');\n      !selectedUser && showWarningMessage('User not selected');\n    }\n  };\n\n  return (\n    <div className=\"achievement-manual-editor\">\n      <h3>User: </h3>\n      <UserSelect\n        filterable={true}\n        items={users}\n        itemRenderer={userRenderer}\n        itemPredicate={userPredicate}\n        onItemSelect={changeSelectedUser}\n        noResults={<MenuItem disabled={true} text=\"No matching user\" />}\n      >\n        <Button\n          outlined={true}\n          text={selectedUser ? selectedUser.name || selectedUser.username : 'No User Selected'}\n          color=\"White\"\n        />\n      </UserSelect>\n\n      <h3>Goal: </h3>\n      <GoalSelect\n        filterable={true}\n        items={manualAchievements}\n        itemRenderer={goalRenderer}\n        itemPredicate={goalPredicate}\n        onItemSelect={changeGoal}\n        noResults={<MenuItem disabled={true} text=\"No matching goal\" />}\n      >\n        <Button outlined={true} text={goal ? goal.text : 'No Goal Selected'} color=\"White\" />\n      </GoalSelect>\n\n      <h3>Count: </h3>\n      <NumericInput\n        value={count}\n        min={0}\n        allowNumericCharactersOnly={true}\n        minorStepSize={null}\n        placeholder=\"Count\"\n        onValueChange={changeCount}\n      />\n\n      <h3> </h3>\n      <Button outlined={true} text=\"Update Goal\" onClick={updateGoal} intent=\"primary\" />\n\n      <h3> </h3>\n      <Checkbox\n        checked={viewHidden}\n        label=\"View Hidden Achievements\"\n        onChange={() => changeViewHidden(!viewHidden)}\n      />\n    </div>\n  );\n}\n\nexport default AchievementManualEditor;\n","import { action } from 'typesafe-actions';\n\nimport {\n  FETCH_GROUP_GRADING_SUMMARY,\n  GradingSummary,\n  UPDATE_GROUP_GRADING_SUMMARY\n} from './DashboardTypes';\n\nexport const fetchGroupGradingSummary = () => action(FETCH_GROUP_GRADING_SUMMARY);\n\nexport const updateGroupGradingSummary = (gradingSummary: GradingSummary) =>\n  action(UPDATE_GROUP_GRADING_SUMMARY, gradingSummary);\n","import {\n  AchievementGoal,\n  AchievementItem,\n  GoalDefinition,\n  GoalMeta,\n  GoalType\n} from '../../../features/achievement/AchievementTypes';\n\nexport const backendifyGoalDefinition = (goal: GoalDefinition) => ({\n  targetCount: goal.meta.type === GoalType.ASSESSMENT ? 1 : goal.meta.targetCount,\n  meta: goal.meta,\n  text: goal.text,\n  type: goal.meta.type,\n  uuid: goal.uuid\n});\n\nexport const frontendifyAchievementGoal = (goal: any) =>\n  ({\n    uuid: goal.uuid || '',\n    text: goal.text || '',\n    achievementUuids: goal.achievementUuids,\n    meta: (goal.meta.type === 'Event'\n      ? {\n          ...goal.meta,\n          release: goal.meta.release ? new Date(goal.meta.release) : undefined,\n          deadline: goal.meta.deadline ? new Date(goal.meta.deadline) : undefined,\n          observeFrom: goal.meta.observeFrom ? new Date(goal.meta.observeFrom) : undefined,\n          observeTo: goal.meta.observeTo ? new Date(goal.meta.observeTo) : undefined\n        }\n      : goal.meta) as GoalMeta,\n    count: goal.count,\n    targetCount: goal.targetCount,\n    completed: goal.count >= goal.targetCount\n  } as AchievementGoal);\n\nexport const frontendifyAchievementItem = (achievement: any) =>\n  ({\n    uuid: achievement.uuid || '',\n    title: achievement.title || '',\n    xp: achievement.xp,\n    isVariableXp: achievement.isVariableXp,\n    deadline: achievement.deadline === null ? undefined : new Date(achievement.deadline),\n    release: achievement.release === null ? undefined : new Date(achievement.release),\n    isTask: achievement.isTask,\n    position: achievement.position,\n    prerequisiteUuids: achievement.prerequisiteUuids,\n    goalUuids: achievement.goalUuids,\n    cardBackground: achievement.cardBackground || '',\n    view: {\n      coverImage: achievement.view.coverImage || '',\n      completionText: achievement.view.completionText || '',\n      description: achievement.view.description || ''\n    }\n  } as AchievementItem);\n\nexport const backendifyAchievementItem = (achievement: AchievementItem) => ({\n  ...achievement,\n  deadline: achievement.deadline ? achievement.deadline : null,\n  release: achievement.release ? achievement.release : null\n});\n","import { call } from 'redux-saga/effects';\n\nimport {\n  AchievementGoal,\n  AchievementItem,\n  AchievementUser,\n  GoalDefinition,\n  GoalProgress\n} from '../../features/achievement/AchievementTypes';\nimport { GradingSummary } from '../../features/dashboard/DashboardTypes';\nimport { Grading, GradingOverview, GradingQuestion } from '../../features/grading/GradingTypes';\nimport {\n  Device,\n  WebSocketEndpointInformation\n} from '../../features/remoteExecution/RemoteExecutionTypes';\nimport { PlaybackData, SourcecastData } from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { UsernameRoleGroup } from '../../pages/academy/adminPanel/subcomponents/AddUserPanel';\nimport { store } from '../../pages/createStore';\nimport {\n  backendifyAchievementItem,\n  backendifyGoalDefinition,\n  frontendifyAchievementGoal,\n  frontendifyAchievementItem\n} from '../achievement/utils/AchievementBackender';\nimport { Role } from '../application/ApplicationTypes';\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport {\n  AdminPanelCourseRegistration,\n  CourseConfiguration,\n  CourseRegistration,\n  Tokens,\n  UpdateCourseConfiguration,\n  User\n} from '../application/types/SessionTypes';\nimport {\n  Assessment,\n  AssessmentConfiguration,\n  AssessmentOverview,\n  ContestEntry,\n  GradingStatus,\n  IContestVotingQuestion,\n  IProgrammingQuestion,\n  QuestionType,\n  QuestionTypes\n} from '../assessment/AssessmentTypes';\nimport { Notification } from '../notificationBadge/NotificationBadgeTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport { castLibrary } from '../utils/CastBackend';\nimport Constants from '../utils/Constants';\nimport { showWarningMessage } from '../utils/NotificationsHelper';\n\n/**\n * @property accessToken - backend access token\n * @property errorMessage - message to showWarningMessage on failure\n * @property body - request body, for HTTP POST\n * @property noContentType - set to true when sending multipart data\n * @property noHeaderAccept - if Accept: application/json should be omitted\n * @property refreshToken - backend refresh token\n * @property shouldRefresh - if should attempt to refresh access token\n *\n * If shouldRefresh, accessToken and refreshToken are required.\n */\ntype RequestOptions = {\n  accessToken?: string;\n  errorMessage?: string;\n  body?: object;\n  noContentType?: boolean;\n  noHeaderAccept?: boolean;\n  refreshToken?: string;\n  shouldAutoLogout?: boolean;\n  shouldRefresh?: boolean;\n};\n\n/**\n * POST /auth/login\n */\nexport const postAuth = async (\n  code: string,\n  providerId: string,\n  clientId?: string,\n  redirectUri?: string\n): Promise<Tokens | null> => {\n  const resp = await request('auth/login', 'POST', {\n    body: {\n      code,\n      provider: providerId,\n      ...(clientId ? { client_id: clientId } : {}),\n      ...(redirectUri ? { redirect_uri: redirectUri } : {})\n    },\n    errorMessage: 'Could not login. Please contact the module administrator.'\n  });\n  if (!resp) {\n    return null;\n  }\n  const tokens = await resp.json();\n  return {\n    accessToken: tokens.access_token,\n    refreshToken: tokens.refresh_token\n  };\n};\n\n/**\n * POST /auth/refresh\n */\nconst postRefresh = async (refreshToken: string): Promise<Tokens | null> => {\n  const resp = await request('auth/refresh', 'POST', {\n    body: { refresh_token: refreshToken }\n  });\n  if (!resp) {\n    return null;\n  }\n\n  const tokens = await resp.json();\n\n  return {\n    accessToken: tokens.access_token,\n    refreshToken: tokens.refresh_token\n  };\n};\n\n/**\n * GET /user\n */\nexport const getUser = async (\n  tokens: Tokens\n): Promise<{\n  user: User | null;\n  courseRegistration: CourseRegistration | null;\n  courseConfiguration: CourseConfiguration | null;\n  assessmentConfigurations: AssessmentConfiguration[] | null;\n}> => {\n  const resp = await request('user', 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return {\n      user: null,\n      courseRegistration: null,\n      courseConfiguration: null,\n      assessmentConfigurations: null\n    };\n  }\n\n  return await resp.json();\n};\n\n/**\n * GET /user/latest_viewed_course\n */\nexport const getLatestCourseRegistrationAndConfiguration = async (\n  tokens: Tokens\n): Promise<{\n  courseRegistration: CourseRegistration | null;\n  courseConfiguration: CourseConfiguration | null;\n  assessmentConfigurations: AssessmentConfiguration[] | null;\n}> => {\n  const resp = await request('user/latest_viewed_course', 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return {\n      courseRegistration: null,\n      courseConfiguration: null,\n      assessmentConfigurations: null\n    };\n  }\n\n  return await resp.json();\n};\n\n/**\n * PUT /user/latest_viewed_course\n */\nexport const putLatestViewedCourse = async (\n  tokens: Tokens,\n  courseId: number\n): Promise<Response | null> => {\n  const resp = await request(`user/latest_viewed_course`, 'PUT', {\n    ...tokens,\n    body: { courseId: courseId },\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * PUT /courses/{courseId}/user/research_agreement\n */\nexport const putCourseResearchAgreement = async (\n  tokens: Tokens,\n  agreedToResearch: boolean\n): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/user/research_agreement`, 'PUT', {\n    ...tokens,\n    body: { agreedToResearch },\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * POST /config/create\n */\nexport const postCreateCourse = async (\n  tokens: Tokens,\n  courseConfig: UpdateCourseConfiguration\n): Promise<Response | null> => {\n  const resp = await request(`config/create`, 'POST', {\n    ...tokens,\n    body: { ...courseConfig },\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * GET /courses/{courseId}/config\n */\nexport const getCourseConfig = async (tokens: Tokens): Promise<CourseConfiguration | null> => {\n  const resp = await request(`${courseId()}/config`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n\n  if (!resp || !resp.ok) {\n    return null;\n  }\n\n  return resp.json();\n};\n\n/**\n * GET /courses/{courseId}/achievements\n *\n * Will be updated after a separate db for student progress is ready\n */\nexport const getAchievements = async (tokens: Tokens): Promise<AchievementItem[] | null> => {\n  const resp = await request(`${courseId()}/achievements`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n\n  if (!resp || !resp.ok) {\n    return null; // invalid accessToken _and_ refreshToken\n  }\n\n  const achievements = await resp.json();\n\n  return achievements.map((achievement: any) => frontendifyAchievementItem(achievement));\n};\n\n/**\n * GET /courses/{courseId}/admin/users/{studentCourseRegId}/goals\n */\nexport const getGoals = async (\n  tokens: Tokens,\n  studentCourseRegId: number\n): Promise<AchievementGoal[] | null> => {\n  const resp = await request(`${courseId()}/admin/users/${studentCourseRegId}/goals`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n\n  if (!resp || !resp.ok) {\n    return null;\n  }\n\n  const achievementGoals = await resp.json();\n\n  return achievementGoals.map((goal: any) => frontendifyAchievementGoal(goal));\n};\n\n/**\n * GET /courses/{courseId}/self/goals\n */\nexport const getOwnGoals = async (tokens: Tokens): Promise<AchievementGoal[] | null> => {\n  const resp = await request(`${courseId()}/self/goals`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n\n  if (!resp || !resp.ok) {\n    return null; // invalid accessToken _and_ refreshToken\n  }\n\n  const achievementGoals = await resp.json();\n\n  return achievementGoals.map((goal: any) => frontendifyAchievementGoal(goal));\n};\n\n/**\n * GET /courses/{courseId}/admin/users\n */\nexport const getAllUsers = async (tokens: Tokens): Promise<AchievementUser[] | null> => {\n  const resp = await request(`${courseId()}/admin/users`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n\n  if (!resp || !resp.ok) {\n    return null; // invalid accessToken _and_ refreshToken\n  }\n\n  const users = await resp.json();\n\n  return users.map(\n    (user: any): AchievementUser => ({\n      name: user.name,\n      courseRegId: user.courseRegId,\n      group: user.group,\n      username: user.username\n    })\n  );\n};\n\n/**\n * PUT /courses/{courseId}/admin/achievements\n */\nexport async function bulkUpdateAchievements(\n  achievements: AchievementItem[],\n  tokens: Tokens\n): Promise<Response | null> {\n  const resp = await request(`${courseId()}/admin/achievements`, 'PUT', {\n    accessToken: tokens.accessToken,\n    body: { achievements: achievements.map(achievement => backendifyAchievementItem(achievement)) },\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n  // TODO: confirmation notification\n}\n\n/**\n * PUT /courses/{courseId}/admin/goals\n */\nexport async function bulkUpdateGoals(\n  goals: GoalDefinition[],\n  tokens: Tokens\n): Promise<Response | null> {\n  const resp = await request(`${courseId()}/admin/goals`, 'PUT', {\n    accessToken: tokens.accessToken,\n    body: {\n      goals: goals.map(goal => backendifyGoalDefinition(goal))\n    },\n    noHeaderAccept: true,\n    refreshToken: tokens.refreshToken,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n  // TODO: confirmation notification\n}\n\n/**\n * POST /courses/{courseId}/self/goals/{goalUuid}/progress\n */\nexport const updateOwnGoalProgress = async (\n  progress: GoalProgress,\n  tokens: Tokens\n): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/self/goals/${progress.uuid}/progress`, 'POST', {\n    ...tokens,\n    body: { progress: progress },\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * POST /courses/{courseId}/admin/users/{studentCourseRegId}/goals/{goalUuid}/progress\n */\nexport const updateGoalProgress = async (\n  studentCourseRegId: number,\n  progress: GoalProgress,\n  tokens: Tokens\n): Promise<Response | null> => {\n  const resp = await request(\n    `${courseId()}/admin/users/${studentCourseRegId}/goals/${progress.uuid}/progress`,\n    'POST',\n    {\n      ...tokens,\n      body: { progress: progress },\n      noHeaderAccept: true,\n      shouldAutoLogout: false,\n      shouldRefresh: true\n    }\n  );\n\n  return resp;\n};\n\n/**\n * DELETE /courses/{courseId}/admin/achievements/{achievementUuid}\n */\nexport const removeAchievement = async (uuid: string, tokens: Tokens): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/admin/achievements/${uuid}`, 'DELETE', {\n    ...tokens,\n    body: { uuid: uuid },\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * DELETE /courses/{courseId}/admin/goals/{goalUuid}\n */\nexport const removeGoal = async (uuid: string, tokens: Tokens): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/admin/goals/${uuid}`, 'DELETE', {\n    ...tokens,\n    body: { uuid: uuid },\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * GET /courses/{courseId}/assessments\n */\nexport const getAssessmentOverviews = async (\n  tokens: Tokens\n): Promise<AssessmentOverview[] | null> => {\n  const resp = await request(`${courseId()}/assessments`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return null; // invalid accessToken _and_ refreshToken\n  }\n  const assessmentOverviews = await resp.json();\n  return assessmentOverviews.map((overview: any) => {\n    overview.gradingStatus = computeGradingStatus(\n      overview.isManuallyGraded,\n      overview.status,\n      overview.gradedCount,\n      overview.questionCount\n    );\n    delete overview.gradedCount;\n    delete overview.questionCount;\n\n    return overview as AssessmentOverview;\n  });\n};\n\n/**\n * GET /courses/{courseId}/user/total_xp\n */\nexport const getTotalXp = async (tokens: Tokens, courseRegId?: number): Promise<number | null> => {\n  let resp;\n  if (courseRegId !== undefined) {\n    // If courseRegId is provided, get the total XP of a specific student\n    resp = await request(`${courseId()}/admin/users/${courseRegId}/total_xp`, 'GET', {\n      ...tokens,\n      shouldRefresh: true\n    });\n  } else {\n    // Otherwise, get the total XP of the current user\n    resp = await request(`${courseId()}/user/total_xp`, 'GET', {\n      ...tokens,\n      shouldRefresh: true\n    });\n  }\n\n  if (!resp || !resp.ok) {\n    return null; // invalid accessToken _and_ refreshToken\n  }\n  const totalXp = await resp.json();\n  return totalXp;\n};\n\n/**\n * GET /courses/{courseId}/admin/users/total_xp\n */\nexport const getAllUserXp = async (tokens: Tokens): Promise<number | null> => {\n  const resp = await request(`${courseId()}/admin/users/total_xp`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return null; // invalid accessToken _and_ refreshToken\n  }\n  const totalXp = await resp.json();\n  return totalXp;\n};\n\n/**\n * GET /courses/{courseId}/admin/users/{course_reg_id}/assessments\n */\nexport const getUserAssessmentOverviews = async (\n  courseRegId: number,\n  tokens: Tokens\n): Promise<AssessmentOverview[] | null> => {\n  const resp = await request(`${courseId()}/admin/users/${courseRegId}/assessments`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return null; // invalid accessToken _and_ refreshToken\n  }\n  const assessmentOverviews = await resp.json();\n  return assessmentOverviews.map((overview: any) => {\n    overview.gradingStatus = computeGradingStatus(\n      overview.isManuallyGraded,\n      overview.status,\n      overview.gradedCount,\n      overview.questionCount\n    );\n    delete overview.gradedCount;\n    delete overview.questionCount;\n\n    return overview as AssessmentOverview;\n  });\n};\n\n/**\n * GET /courses/{courseId}/assessments/{assessmentId}\n * Note: if assessment is password-protected, a corresponding unlock request will be sent to\n * POST /courses/{courseId}/assessments/{assessmentId}/unlock\n */\nexport const getAssessment = async (\n  assessmentId: number,\n  tokens: Tokens,\n  courseRegId?: number\n): Promise<Assessment | null> => {\n  let resp;\n  if (courseRegId !== undefined) {\n    // If courseRegId is provided, we are getting the assessment for another user as an admin\n    resp = await request(\n      `${courseId()}/admin/users/${courseRegId}/assessments/${assessmentId}`,\n      'GET',\n      {\n        ...tokens,\n        shouldRefresh: true\n      }\n    );\n  } else {\n    // Otherwise, we are getting the assessment for the current user\n    resp = await request(`${courseId()}/assessments/${assessmentId}`, 'GET', {\n      ...tokens,\n      shouldAutoLogout: false,\n      shouldRefresh: true\n    });\n  }\n\n  // Attempt to load password-protected assessment\n  while (resp && resp.status === 403) {\n    const input = window.prompt('Please enter password.', '');\n    if (!input) {\n      resp = null;\n      window.history.back();\n      return null;\n    }\n\n    resp = await request(`${courseId()}/assessments/${assessmentId}/unlock`, 'POST', {\n      ...tokens,\n      body: {\n        password: input\n      },\n      shouldAutoLogout: false,\n      shouldRefresh: true\n    });\n  }\n\n  if (!resp || !resp.ok) {\n    return null;\n  }\n\n  const assessment = (await resp.json()) as Assessment;\n\n  assessment.questions = assessment.questions.map(q => {\n    if (q.type === QuestionTypes.programming) {\n      const question = q as IProgrammingQuestion;\n      question.autogradingResults = question.autogradingResults || [];\n      question.prepend = question.prepend || '';\n      question.postpend = question.postpend || '';\n      question.testcases = question.testcases || [];\n      q = question;\n    }\n\n    if (q.type === QuestionTypes.voting) {\n      const question = q as IContestVotingQuestion;\n      question.prepend = question.prepend || '';\n      question.postpend = question.postpend || '';\n    }\n\n    // If the backend returns :nil (null) for grader, then the question is not graded\n    // Delete the grader and gradedAt attributes\n    if (q.grader === null) {\n      delete q.grader;\n      delete q.gradedAt;\n    }\n\n    // Make library.external.name uppercase\n    q.library.external.name = q.library.external.name.toUpperCase() as ExternalLibraryName;\n    // Make globals into an Array of (string, value)\n    q.library.globals = Object.entries(q.library.globals as object).map(entry => {\n      try {\n        entry[1] = (window as any).eval(entry[1]);\n      } catch (e) {}\n      return entry;\n    });\n\n    return q;\n  });\n  return assessment;\n};\n\n/**\n * POST /courses/{courseId}/assessments/question/{questionId}/answer\n */\nexport const postAnswer = async (\n  id: number,\n  answer: string | number | ContestEntry[],\n  tokens: Tokens\n): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/assessments/question/${id}/answer`, 'POST', {\n    ...tokens,\n    body: typeof answer == 'object' ? { answer: answer } : { answer: `${answer}` },\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  return resp;\n};\n\n/**\n * POST /courses/{courseId}/assessments/{assessmentId}/submit\n */\nexport const postAssessment = async (id: number, tokens: Tokens): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/assessments/${id}/submit`, 'POST', {\n    ...tokens,\n    noHeaderAccept: true,\n    shouldAutoLogout: false, // 400 if some questions unattempted\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/*\n * GET /courses/{courseId}/admin/grading\n */\nexport const getGradingOverviews = async (\n  tokens: Tokens,\n  group: boolean\n): Promise<GradingOverview[] | null> => {\n  const resp = await request(`${courseId()}/admin/grading?group=${group}`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n  if (!resp) {\n    return null; // invalid accessToken _and_ refreshToken\n  }\n  const gradingOverviews = await resp.json();\n  return gradingOverviews\n    .map((overview: any) => {\n      const gradingOverview: GradingOverview = {\n        assessmentId: overview.assessment.id,\n        assessmentName: overview.assessment.title,\n        assessmentType: overview.assessment.type,\n        studentId: overview.student.id,\n        studentName: overview.student.name,\n        submissionId: overview.id,\n        submissionStatus: overview.status,\n        groupName: overview.student.groupName,\n        groupLeaderId: overview.student.groupLeaderId,\n        // Grading Status\n        gradingStatus: 'none',\n        questionCount: overview.assessment.questionCount,\n        gradedCount: overview.gradedCount,\n        // XP\n        initialXp: overview.xp,\n        xpAdjustment: overview.xpAdjustment,\n        currentXp: overview.xp + overview.xpAdjustment,\n        maxXp: overview.assessment.maxXp,\n        xpBonus: overview.xpBonus\n      };\n      gradingOverview.gradingStatus = computeGradingStatus(\n        overview.assessment.isManuallyGraded,\n        gradingOverview.submissionStatus,\n        gradingOverview.gradedCount,\n        gradingOverview.questionCount\n      );\n      return gradingOverview;\n    })\n    .sort((subX: GradingOverview, subY: GradingOverview) =>\n      subX.assessmentId !== subY.assessmentId\n        ? subY.assessmentId - subX.assessmentId\n        : subY.submissionId - subX.submissionId\n    );\n};\n\n/**\n * GET /courses/{courseId}/admin/grading/{submissionId}\n */\nexport const getGrading = async (submissionId: number, tokens: Tokens): Promise<Grading | null> => {\n  const resp = await request(`${courseId()}/admin/grading/${submissionId}`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n\n  if (!resp) {\n    return null;\n  }\n\n  const gradingResult = await resp.json();\n  const grading: Grading = gradingResult.map((gradingQuestion: any) => {\n    const { student, question, grade } = gradingQuestion;\n    const result = {\n      question: {\n        answer: question.answer,\n        autogradingResults: question.autogradingResults || [],\n        choices: question.choices,\n        content: question.content,\n        id: question.id,\n        library: castLibrary(question.library),\n        solution: gradingQuestion.solution || question.solution || null,\n        solutionTemplate: question.solutionTemplate,\n        prepend: question.prepend || '',\n        postpend: question.postpend || '',\n        testcases: question.testcases || [],\n        type: question.type as QuestionType,\n        maxXp: question.maxXp\n      },\n      student,\n      grade: {\n        xp: grade.xp,\n        xpAdjustment: grade.xpAdjustment,\n        comments: grade.comments\n      }\n    } as GradingQuestion;\n\n    if (gradingQuestion.grade.grader !== null) {\n      result.grade.grader = gradingQuestion.grade.grader;\n      result.grade.gradedAt = gradingQuestion.grade.gradedAt;\n    }\n\n    return result;\n  });\n\n  return grading;\n};\n\n/**\n * POST /courses/{courseId}/admin/grading/{submissionId}/{questionId}\n */\nexport const postGrading = async (\n  submissionId: number,\n  questionId: number,\n  xpAdjustment: number,\n  tokens: Tokens,\n  comments?: string\n): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/admin/grading/${submissionId}/${questionId}`, 'POST', {\n    ...tokens,\n    body: {\n      grading: {\n        xpAdjustment,\n        comments\n      }\n    },\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * POST /courses/{courseId}/admin/grading/{submissionId}/autograde\n */\nexport const postReautogradeSubmission = async (\n  submissionId: number,\n  tokens: Tokens\n): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/admin/grading/${submissionId}/autograde`, 'POST', {\n    ...tokens,\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * POST /courses/{courseId}/admin/grading/{submissionId}/{questionId}/autograde\n */\nexport const postReautogradeAnswer = async (\n  submissionId: number,\n  questionId: number,\n  tokens: Tokens\n): Promise<Response | null> => {\n  const resp = await request(\n    `${courseId()}/admin/grading/${submissionId}/${questionId}/autograde`,\n    'POST',\n    {\n      ...tokens,\n      noHeaderAccept: true,\n      shouldAutoLogout: false,\n      shouldRefresh: true\n    }\n  );\n\n  return resp;\n};\n\n/**\n * POST /courses/{courseId}/admin/grading/{submissionId}/unsubmit\n */\nexport const postUnsubmit = async (\n  submissionId: number,\n  tokens: Tokens\n): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/admin/grading/${submissionId}/unsubmit`, 'POST', {\n    ...tokens,\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * GET /courses/{courseId}/notifications\n */\nexport const getNotifications = async (tokens: Tokens): Promise<Notification[]> => {\n  const resp: Response | null = await request(`${courseId()}/notifications`, 'GET', {\n    ...tokens,\n    shouldAutoLogout: false\n  });\n\n  let notifications: Notification[] = [];\n\n  if (!resp || !resp.ok) {\n    return notifications;\n  }\n\n  const result = await resp.json();\n\n  notifications = result.map((notification: any) => {\n    return {\n      id: notification.id,\n      type: notification.type,\n      assessment_id: notification.assessment_id || undefined,\n      assessment_type: notification.assessment ? notification.assessment.type : undefined,\n      assessment_title: notification.assessment ? notification.assessment.title : undefined,\n      submission_id: notification.submission_id || undefined\n    } as Notification;\n  });\n\n  return notifications;\n};\n\n/**\n * POST /courses/{courseId}/notifications/acknowledge\n */\nexport const postAcknowledgeNotifications = async (\n  tokens: Tokens,\n  ids: number[]\n): Promise<Response | null> => {\n  const resp: Response | null = await request(`${courseId()}/notifications/acknowledge`, 'POST', {\n    ...tokens,\n    body: { notificationIds: ids },\n    shouldAutoLogout: false\n  });\n\n  return resp;\n};\n\n/**\n * GET /courses/{courseId}/sourcecast\n */\nexport const getSourcecastIndex = async (tokens: Tokens): Promise<SourcecastData[] | null> => {\n  const resp = await request(`${courseId()}/sourcecast`, 'GET', {\n    ...tokens,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return null;\n  }\n\n  return await resp.json();\n};\n\n/**\n * POST /courses/{courseId}/admin/sourcecast\n */\nexport const postSourcecast = async (\n  title: string,\n  description: string,\n  uid: string,\n  audio: Blob,\n  playbackData: PlaybackData,\n  tokens: Tokens\n): Promise<Response | null> => {\n  const formData = new FormData();\n  const filename = Date.now().toString() + '.wav';\n  formData.append('sourcecast[title]', title);\n  formData.append('sourcecast[description]', description);\n  formData.append('sourcecast[uid]', uid);\n  formData.append('sourcecast[audio]', audio, filename);\n  formData.append('sourcecast[playbackData]', JSON.stringify(playbackData));\n  const resp = await request(`${courseId()}/admin/sourcecast`, 'POST', {\n    ...tokens,\n    body: formData,\n    noContentType: true,\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * DELETE /courses/{courseId}/admin/sourcecast/{sourcecastId}\n */\nexport const deleteSourcecastEntry = async (\n  id: number,\n  tokens: Tokens\n): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/admin/sourcecast/${id}`, 'DELETE', {\n    ...tokens,\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * POST /courses/{courseId}/admin/assessments/{assessmentId}\n */\nexport const updateAssessment = async (\n  id: number,\n  body: { openAt?: string; closeAt?: string; isPublished?: boolean },\n  tokens: Tokens\n): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/admin/assessments/${id}`, 'POST', {\n    ...tokens,\n    body: body,\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * DELETE /courses/{courseId}/admin/assessments/{assessmentId}\n */\nexport const deleteAssessment = async (id: number, tokens: Tokens): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/admin/assessments/${id}`, 'DELETE', {\n    ...tokens,\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * POST /courses/{courseId}/admin/assessments\n */\nexport const uploadAssessment = async (\n  file: File,\n  tokens: Tokens,\n  forceUpdate: boolean,\n  assessmentConfigId: number\n): Promise<Response | null> => {\n  const formData = new FormData();\n  formData.append('assessment[file]', file);\n  formData.append('forceUpdate', String(forceUpdate));\n  formData.append('assessmentConfigId', String(assessmentConfigId));\n  const resp = await request(`${courseId()}/admin/assessments`, 'POST', {\n    ...tokens,\n    body: formData,\n    noContentType: true,\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * GET /courses/{courseId}/admin/grading/summary\n */\nexport const getGradingSummary = async (tokens: Tokens): Promise<GradingSummary | null> => {\n  const resp = await request(`${courseId()}/admin/grading/summary`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return null;\n  }\n\n  return await resp.json();\n};\n\n/**\n * PUT /courses/{courseId}/admin/config\n */\nexport const putCourseConfig = async (\n  tokens: Tokens,\n  courseConfig: UpdateCourseConfiguration\n): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/admin/config`, 'PUT', {\n    ...tokens,\n    body: courseConfig,\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * GET /courses/{courseId}/admin/config/assessment_configs\n */\nexport const getAssessmentConfigs = async (\n  tokens: Tokens\n): Promise<AssessmentConfiguration[] | null> => {\n  const resp = await request(`${courseId()}/admin/config/assessment_configs`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return null;\n  }\n\n  return await resp.json();\n};\n\n/**\n * PUT /courses/{courseId}/admin/config/assessment_configs\n */\nexport const putAssessmentConfigs = async (\n  tokens: Tokens,\n  assessmentConfigs: AssessmentConfiguration[],\n  overrideCourseId?: number\n): Promise<Response | null> => {\n  const resp = await request(\n    `${\n      overrideCourseId != null ? `courses/${overrideCourseId}` : courseId()\n    }/admin/config/assessment_configs`,\n    'PUT',\n    {\n      ...tokens,\n      body: { assessmentConfigs },\n      noHeaderAccept: true,\n      shouldAutoLogout: false,\n      shouldRefresh: true\n    }\n  );\n\n  return resp;\n};\n\n/**\n * DELETE /courses/{courseId}/admin/config/assessment_config/{assessmentConfigId}\n */\nexport const removeAssessmentConfig = async (\n  tokens: Tokens,\n  assessmentConfig: AssessmentConfiguration\n): Promise<Response | null> => {\n  const resp = await request(\n    `${courseId()}/admin/config/assessment_config/${assessmentConfig.assessmentConfigId}`,\n    'DELETE',\n    {\n      ...tokens,\n      noHeaderAccept: true,\n      shouldAutoLogout: false,\n      shouldRefresh: true\n    }\n  );\n\n  return resp;\n};\n\n/**\n * GET /courses/{courseId}/admin/users\n */\nexport const getUserCourseRegistrations = async (\n  tokens: Tokens\n): Promise<AdminPanelCourseRegistration[] | null> => {\n  const resp = await request(`${courseId()}/admin/users`, 'GET', {\n    ...tokens,\n    shouldRefresh: true\n  });\n  if (!resp || !resp.ok) {\n    return null;\n  }\n\n  return await resp.json();\n};\n\n/**\n * PUT /courses/{courseId}/admin/users\n */\nexport const putNewUsers = async (\n  tokens: Tokens,\n  users: UsernameRoleGroup[],\n  provider: string\n): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/admin/users`, 'PUT', {\n    ...tokens,\n    body: { users, provider },\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * PUT /courses/{courseId}/admin/users/{courseRegId}/role\n */\nexport const putUserRole = async (\n  tokens: Tokens,\n  courseRegId: number,\n  role: Role\n): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/admin/users/${courseRegId}/role`, 'PUT', {\n    ...tokens,\n    body: { role },\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * DELETE /courses/{courseId}/admin/users/{courseRegId}\n */\nexport const removeUserCourseRegistration = async (\n  tokens: Tokens,\n  courseRegId: number\n): Promise<Response | null> => {\n  const resp = await request(`${courseId()}/admin/users/${courseRegId}`, 'DELETE', {\n    ...tokens,\n    noHeaderAccept: true,\n    shouldAutoLogout: false,\n    shouldRefresh: true\n  });\n\n  return resp;\n};\n\n/**\n * GET /devices\n */\nexport async function fetchDevices(tokens: Tokens): Promise<Device | null> {\n  const resp = await request(`devices`, 'GET', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldRefresh: true\n  });\n\n  return resp && resp.ok ? resp.json() : null;\n}\n\n/**\n * GET /devices/:id/ws_endpoint\n */\nexport async function getDeviceWSEndpoint(\n  device: Device,\n  tokens: Tokens\n): Promise<WebSocketEndpointInformation | null> {\n  const resp = await request(`devices/${device.id}/ws_endpoint`, 'GET', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldRefresh: true,\n    shouldAutoLogout: false\n  });\n\n  return resp && resp.ok ? resp.json() : null;\n}\n\n/**\n * POST /devices\n */\nexport async function registerDevice(device: Omit<Device, 'id'>, tokens?: Tokens): Promise<Device> {\n  tokens = fillTokens(tokens);\n  const resp = await request(`devices`, 'POST', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldRefresh: true,\n    shouldAutoLogout: false,\n    body: device\n  });\n\n  if (!resp) {\n    throw new Error('Unknown error occurred.');\n  }\n\n  if (!resp.ok) {\n    const message = await resp.text();\n    throw new Error(`Failed to register: ${message}`);\n  }\n\n  return resp.json();\n}\n\n/**\n * POST /devices/:id\n */\nexport async function editDevice(\n  device: Pick<Device, 'id' | 'title'>,\n  tokens?: Tokens\n): Promise<boolean> {\n  tokens = fillTokens(tokens);\n  const resp = await request(`devices/${device.id}`, 'POST', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldRefresh: true,\n    shouldAutoLogout: false,\n    body: { title: device.title }\n  });\n\n  if (!resp) {\n    throw new Error('Unknown error occurred.');\n  }\n\n  if (!resp.ok) {\n    const message = await resp.text();\n    throw new Error(`Failed to edit: ${message}`);\n  }\n\n  return true;\n}\n\n/**\n * DELETE /devices/:id\n */\nexport async function deleteDevice(device: Pick<Device, 'id'>, tokens?: Tokens): Promise<boolean> {\n  tokens = fillTokens(tokens);\n  const resp = await request(`devices/${device.id}`, 'DELETE', {\n    accessToken: tokens.accessToken,\n    refreshToken: tokens.refreshToken,\n    shouldRefresh: true\n  });\n\n  if (!resp) {\n    throw new Error('Unknown error occurred.');\n  }\n\n  if (!resp.ok) {\n    const message = await resp.text();\n    throw new Error(`Failed to delete: ${message}`);\n  }\n\n  return true;\n}\n\nfunction fillTokens(tokens?: Tokens): Tokens {\n  tokens = tokens || getTokensFromStore();\n  if (!tokens) {\n    throw new Error('Not logged in.');\n  }\n  return tokens;\n}\n\nfunction getTokensFromStore(): Tokens | undefined {\n  const { accessToken, refreshToken } = store.getState().session;\n  return accessToken && refreshToken ? { accessToken, refreshToken } : undefined;\n}\n\n/**\n * @returns {(Response|null)} Response if successful, otherwise null.\n *\n * @see @type{RequestOptions} for options to this function.\n *\n * If opts.shouldRefresh, an initial response status of < 200 or > 299 will\n * cause this function to call postRefresh to attempt to setToken with fresh\n * tokens.\n *\n * If fetch throws an error, or final response has status code < 200 or > 299,\n * this function will cause the user to logout.\n */\nexport const request = async (\n  path: string,\n  method: string,\n  opts: RequestOptions\n): Promise<Response | null> => {\n  const headers = new Headers();\n  if (!opts.noHeaderAccept) {\n    headers.append('Accept', 'application/json');\n  }\n  if (opts.accessToken) {\n    headers.append('Authorization', `Bearer ${opts.accessToken}`);\n  }\n\n  const fetchOpts: any = { method, headers };\n  if (opts.body) {\n    if (opts.noContentType) {\n      // Content Type is not needed for sending multipart data\n      fetchOpts.body = opts.body;\n    } else {\n      headers.append('Content-Type', 'application/json');\n      fetchOpts.body = JSON.stringify(opts.body);\n    }\n  }\n\n  try {\n    const resp = await fetch(`${Constants.backendUrl}/v2/${path}`, fetchOpts);\n\n    // response.ok is (200 <= response.status <= 299)\n    // response.status of > 299 does not raise error; so deal with in in the try clause\n    if (opts.shouldRefresh && resp && resp.status === 401) {\n      const newTokens = await postRefresh(opts.refreshToken!);\n      store.dispatch(actions.setTokens(newTokens!));\n      const newOpts = {\n        ...opts,\n        accessToken: newTokens!.accessToken,\n        shouldRefresh: false\n      };\n      return request(path, method, newOpts);\n    }\n\n    if (resp && !resp.ok && opts.shouldAutoLogout === false) {\n      // this clause is mostly for SUBMIT_ANSWER; show an error message instead\n      // and ask student to manually logout, so that they have a chance to save\n      // their answers\n      return resp;\n    }\n\n    if (!resp.ok) {\n      showWarningMessage(\n        opts.errorMessage\n          ? opts.errorMessage\n          : `Error while communicating with backend: ${resp.status} ${resp.statusText}${\n              resp.status === 401 || resp.status === 403\n                ? '; try logging in again, after manually saving any work.'\n                : ''\n            }`\n      );\n      return null;\n    }\n\n    return resp;\n  } catch (e) {\n    showWarningMessage(\n      opts.errorMessage\n        ? opts.errorMessage\n        : 'Error while communicating with backend; check your network?'\n    );\n\n    return null;\n  }\n};\n\n/**\n * Handles display of warning notifications for failed HTTP requests, i.e. those with no response\n * or a HTTP error status code (not 2xx).\n *\n * @param {(Response|null)} resp Result of the failed HTTP request\n */\nexport function* handleResponseError(resp: Response | null): any {\n  // Default: check if the response is null\n  if (!resp) {\n    yield call(showWarningMessage, \"Couldn't reach our servers. Are you online?\");\n    return;\n  }\n\n  let respText = yield resp.text();\n\n  if (respText.length > 100 && resp.status) {\n    // This happens when error is not properly handled in backend\n    // Hence returning status code instead for bug reporting\n    respText = `Something went wrong (got ${resp.status} response)`;\n  }\n\n  yield call(showWarningMessage, respText);\n}\n\nconst computeGradingStatus = (\n  isManuallyGraded: boolean,\n  submissionStatus: any,\n  numGraded: number,\n  numQuestions: number\n): GradingStatus =>\n  // isGraded refers to whether the assessment type is graded or not, as specified in\n  // the respective assessment configuration\n  isManuallyGraded && submissionStatus === 'submitted'\n    ? numGraded === 0\n      ? 'none'\n      : numGraded === numQuestions\n      ? 'graded'\n      : 'grading'\n    : 'excluded';\n\nconst courseId: () => string = () => {\n  const id = store.getState().session.courseId;\n  if (id) {\n    return `courses/${id}`;\n  } else {\n    // TODO: Rewrite this logic\n    showWarningMessage(`No course selected!`, 1000);\n    throw new Error(`No course selected`);\n  }\n};\n","import { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { Library } from '../assessment/AssessmentTypes';\n\n/**\n * Casts a library returned by an API call to a\n * Library used in the frontend.\n */\nexport const castLibrary = (lib: any): Library => ({\n  external: {\n    /** external names are lowercase for API results */\n    name: lib.external.name.toUpperCase() as ExternalLibraryName,\n    symbols: lib.external.symbols\n  },\n  // backend provides `null` if these fields are not set, but frontend wants undefined (for defaulting)\n  execTimeMs: lib.execTimeMs == null ? undefined : lib.execTimeMs,\n  variant: lib.variant == null ? undefined : lib.variant,\n  /** globals are passed as an object, mapping symbol name -> value */\n  globals: Object.entries(lib.globals as object).map(entry => {\n    /** The value that is passed is evaluated into an actual JS value */\n    try {\n      entry[1] = (window as any).eval(entry[1]);\n    } catch (e) {}\n    return entry;\n  })\n});\n","import { stringify } from 'Clang-slang/dist/utils/stringify';\n\ntype DisplayBufferCallback = (log: string) => void;\n\ntype ConsoleOverloadMethod<T> = (bufferCallback: DisplayBufferCallback) => (args: T) => void;\n\n// TODO add other overloads\n// - e.g. \"warn\"/\"debug\"/\"time\"/\"timeEnd\"\ninterface ConsoleOverload {\n  log: ConsoleOverloadMethod<any[]>;\n}\n\nexport const consoleOverloads: ConsoleOverload = {\n  log:\n    (bufferCallback: DisplayBufferCallback) =>\n    (...args: any[]) => {\n      bufferCallback(args.map(log => (typeof log === 'string' ? log : stringify(log))).join(' '));\n    }\n};\n","import { WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport { consoleOverloads } from './ConsoleOverload';\n\nclass BufferService {\n  private buffer: string[];\n  private workspaceLocation: WorkspaceLocation | undefined;\n\n  constructor() {\n    this.buffer = [];\n  }\n\n  public dump(): string[] {\n    const bufferCopy = [...this.buffer];\n    this.resetBuffer();\n    return bufferCopy;\n  }\n\n  public push(log: string, workspaceLocation: WorkspaceLocation): void {\n    this.handleWorkspaceChange(workspaceLocation);\n    this.buffer.push(log);\n  }\n\n  public attachConsole(workspaceLocation: WorkspaceLocation): () => void {\n    const bufferCallback = (log: string) => this.push(log, workspaceLocation);\n    const defaultConsole = {};\n    Object.entries(consoleOverloads).forEach(([method, overload]) => {\n      defaultConsole[method] = console[method];\n      console[method] = overload(bufferCallback);\n    });\n\n    return () => {\n      Object.entries(consoleOverloads).forEach(([method]) => {\n        console[method] = defaultConsole[method];\n      });\n    };\n  }\n\n  private handleWorkspaceChange(newWorkspace: WorkspaceLocation): void {\n    if (!this.hasWorkspace() || newWorkspace !== this.workspaceLocation) {\n      this.workspaceLocation = newWorkspace;\n      this.resetBuffer();\n    }\n  }\n\n  private hasWorkspace(): boolean {\n    return Boolean(this.workspaceLocation);\n  }\n\n  private resetBuffer(): void {\n    this.buffer = [];\n  }\n}\n\n// Singleton\nconst DisplayBufferService: BufferService = new BufferService();\nexport default DisplayBufferService;\n","import { Classes } from '@blueprintjs/core';\nimport { Ace } from 'ace-builds';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport AceEditor from 'react-ace';\nimport ReactAce from 'react-ace/lib/ace';\nimport MediaQuery from 'react-responsive';\n\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { getModeString, selectMode } from '../utils/AceHelper';\n// source mode and chapter imported in Editor.tsx\n\nexport type ReplInputProps = DispatchProps & StateProps & OwnProps;\n\ntype DispatchProps = {\n  handleBrowseHistoryDown: () => void;\n  handleBrowseHistoryUp: () => void;\n  handleReplValueChange: (newCode: string) => void;\n  handleReplEval: () => void;\n  onFocus?: (editor: Ace.Editor) => void;\n  onBlur?: () => void;\n};\n\ntype StateProps = {\n  replValue: string;\n  sourceChapter: Chapter;\n  sourceVariant: Variant;\n  externalLibrary: ExternalLibraryName;\n  disableScrolling?: boolean;\n};\n\ntype OwnProps = {\n  replButtons: Array<JSX.Element | null>;\n};\n\nexport const ReplInput: React.FC<ReplInputProps> = (props: ReplInputProps) => {\n  const { onFocus, onBlur } = props;\n\n  const replInput = React.useRef<ReactAce>(null);\n  const replInputBottom = React.useRef<HTMLDivElement>(null);\n\n  const execBrowseHistoryDown: () => void = props.handleBrowseHistoryDown;\n  const execBrowseHistoryUp: () => void = props.handleBrowseHistoryUp;\n  const execEvaluate = () => {\n    props.handleReplEval();\n    if (replInputBottom.current && !props.disableScrolling) {\n      /**\n       * Ensures the REPL AceEditor input is always in view even after multiple REPL eval calls.\n       * This feature is disabled in the mobile workspace as it interferes with the UX of the DraggableRepl.\n       */\n      replInputBottom.current.scrollIntoView();\n    }\n  };\n\n  React.useEffect(() => {\n    if (!replInput.current) {\n      return;\n    }\n    const editor = replInput.current.editor;\n    if (onFocus) {\n      editor.on('focus', () => onFocus(editor));\n    }\n    if (onBlur) {\n      editor.on('blur', onBlur);\n    }\n  });\n\n  React.useEffect(() => {\n    if (!replInputBottom.current || props.disableScrolling) {\n      return;\n    }\n    if (replInputBottom.current.clientWidth >= window.innerWidth - 50) {\n      /* There is a bug where\n       *   if the workspace has been resized via re-resizable such that the\n       *   has disappeared off the screen, width 63\n       * then\n       *   calling scrollIntoView would cause the Repl to suddenly take up 100%\n       *   of the screen width. This pushes the editor off-screen so that the\n       *   user can no longer resize the workspace at all\n       * Fix: the if condition is true when the Repl has dissapeared off-screen.\n       *   (-15 to account for the scrollbar */\n    } else {\n      replInputBottom.current.scrollIntoView();\n    }\n  });\n\n  // see the comment above this same call in Editor.tsx\n  selectMode(props.sourceChapter, props.sourceVariant, props.externalLibrary);\n\n  const replButtons = () => props.replButtons;\n\n  return (\n    <>\n      <AceEditor\n        className=\"repl-react-ace react-ace\"\n        mode={getModeString(props.sourceChapter, props.sourceVariant, props.externalLibrary)}\n        theme=\"source\"\n        height=\"1px\"\n        width=\"100%\"\n        value={props.replValue}\n        onChange={props.handleReplValueChange}\n        commands={[\n          {\n            name: 'browseHistoryDown',\n            bindKey: {\n              win: 'Down',\n              mac: 'Down'\n            },\n            exec: execBrowseHistoryDown\n          },\n          {\n            name: 'browseHistoryUp',\n            bindKey: {\n              win: 'Up',\n              mac: 'Up'\n            },\n            exec: execBrowseHistoryUp\n          },\n          {\n            name: 'evaluate',\n            bindKey: {\n              win: 'Shift-Enter',\n              mac: 'Shift-Enter'\n            },\n            exec: execEvaluate\n          }\n        ]}\n        minLines={1}\n        maxLines={20}\n        fontSize={17}\n        highlightActiveLine={false}\n        showGutter={false}\n        showPrintMargin={false}\n        setOptions={{\n          fontFamily: \"'Inconsolata', 'Consolas', monospace\"\n        }}\n        ref={replInput}\n      />\n      <div className={classNames(Classes.BUTTON_GROUP, Classes.DARK)}>{replButtons()}</div>\n      <MediaQuery minWidth={769}>\n        <div ref={replInputBottom} />\n      </MediaQuery>\n    </>\n  );\n};\n","import { Card, Classes, Pre } from '@blueprintjs/core';\nimport { Ace } from 'ace-builds';\nimport { parseError } from 'Clang-slang';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { HotKeys } from 'react-hotkeys';\n\nimport { InterpreterOutput } from '../application/ApplicationTypes';\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { ReplInput } from './ReplInput';\nimport { OutputProps } from './ReplTypes';\n\nexport type ReplProps = DispatchProps & StateProps & OwnProps;\n\ntype StateProps = {\n  output: InterpreterOutput[];\n  replValue: string;\n  hidden?: boolean;\n  inputHidden?: boolean;\n  usingSubst?: boolean;\n  sourceChapter: Chapter;\n  sourceVariant: Variant;\n  externalLibrary: ExternalLibraryName;\n  disableScrolling?: boolean;\n};\n\ntype DispatchProps = {\n  handleBrowseHistoryDown: () => void;\n  handleBrowseHistoryUp: () => void;\n  handleReplEval: () => void;\n  handleReplValueChange: (newCode: string) => void;\n  onFocus?: (editor: Ace.Editor) => void;\n  onBlur?: () => void;\n};\n\ntype OwnProps = {\n  replButtons: Array<JSX.Element | null>;\n};\n\nconst Repl: React.FC<ReplProps> = (props: ReplProps) => {\n  const cards = props.output.map((slice, index) => (\n    <Output output={slice} key={index} usingSubst={props.usingSubst ?? false} />\n  ));\n  return (\n    <div className=\"Repl\" style={{ display: props.hidden ? 'none' : undefined }}>\n      <div className=\"repl-output-parent\">\n        {cards}\n        {!props.inputHidden && (\n          <HotKeys\n            className={classNames('repl-input-parent', 'row', Classes.CARD, Classes.ELEVATION_0)}\n            handlers={handlers}\n          >\n            <ReplInput {...props} />\n          </HotKeys>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const Output: React.FC<OutputProps> = (props: OutputProps) => {\n  switch (props.output.type) {\n    case 'code':\n      return (\n        <Card>\n          <Pre className=\"code-output\">{props.output.value}</Pre>\n        </Card>\n      );\n    case 'running':\n      return (\n        <Card>\n          <Pre className=\"log-output\">{props.output.consoleLogs.join('\\n')}</Pre>\n        </Card>\n      );\n    case 'result':\n      // We check if we are using Stepper, so we can process the REPL results properly\n      if (props.usingSubst && props.output.value instanceof Array) {\n        return (\n          <Card>\n            <Pre className=\"log-output\">Check out the Stepper tab!</Pre>\n          </Card>\n        );\n      } else if (props.output.consoleLogs.length === 0) {\n        return (\n          <Card>\n            <Pre className=\"result-output\">{props.output.value}</Pre>\n          </Card>\n        );\n      } else {\n        return (\n          <Card>\n            <Pre className=\"log-output\">{props.output.consoleLogs.join('\\n')}</Pre>\n            <Pre className=\"result-output\">{props.output.value}</Pre>\n          </Card>\n        );\n      }\n    case 'errors':\n      if (props.output.consoleLogs.length === 0) {\n        return (\n          <Card>\n            <Pre className=\"error-output\">{parseError(props.output.errors)}</Pre>\n          </Card>\n        );\n      } else {\n        return (\n          <Card>\n            <Pre className=\"log-output\">{props.output.consoleLogs.join('\\n')}</Pre>\n            <br />\n            <Pre className=\"error-output\">{parseError(props.output.errors)}</Pre>\n          </Card>\n        );\n      }\n    default:\n      return <Card>''</Card>;\n  }\n};\n\n/* Override handler, so does not trigger when focus is in editor */\nconst handlers = {\n  goGreen: () => {}\n};\n\nexport default Repl;\n","import { Context } from 'Clang-slang';\n\nimport { GitHubAssessmentWorkspaceState } from '../../features/githubAssessment/GitHubAssessmentTypes';\nimport { SourcecastWorkspaceState } from '../../features/sourceRecorder/sourcecast/SourcecastTypes';\nimport { SourcereelWorkspaceState } from '../../features/sourceRecorder/sourcereel/SourcereelTypes';\nimport { InterpreterOutput } from '../application/ApplicationTypes';\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { AutogradingResult, Testcase } from '../assessment/AssessmentTypes';\nimport { HighlightedLines, Position } from '../editor/EditorTypes';\n\nexport const ADD_HTML_CONSOLE_ERROR = 'ADD_HTML_CONSOLE_ERROR';\nexport const BEGIN_CLEAR_CONTEXT = 'BEGIN_CLEAR_CONTEXT';\nexport const BROWSE_REPL_HISTORY_DOWN = 'BROWSE_REPL_HISTORY_DOWN';\nexport const BROWSE_REPL_HISTORY_UP = 'BROWSE_REPL_HISTORY_UP';\nexport const CHANGE_EXEC_TIME = 'CHANGE_EXEC_TIME';\nexport const CHANGE_EXTERNAL_LIBRARY = 'CHANGE_EXTERNAL_LIBRARY';\nexport const CHANGE_SIDE_CONTENT_HEIGHT = 'CHANGE_SIDE_CONTENT_HEIGHT';\nexport const CHANGE_STEP_LIMIT = 'CHANGE_STEP_LIMIT';\nexport const CHAPTER_SELECT = 'CHAPTER_SELECT';\nexport const CLEAR_REPL_INPUT = 'CLEAR_REPL_INPUT';\nexport const CLEAR_REPL_OUTPUT = 'CLEAR_REPL_OUTPUT';\nexport const CLEAR_REPL_OUTPUT_LAST = 'CLEAR_REPL_OUTPUT_LAST';\nexport const END_CLEAR_CONTEXT = 'END_CLEAR_CONTEXT';\nexport const EVAL_EDITOR = 'EVAL_EDITOR';\nexport const EVAL_REPL = 'EVAL_REPL';\nexport const PROMPT_AUTOCOMPLETE = 'PROMPT_AUTOCOMPLETE';\nexport const EVAL_SILENT = 'EVAL_SILENT';\nexport const EVAL_TESTCASE = 'EVAL_TESTCASE';\nexport const EVAL_EDITOR_AND_TESTCASES = 'EVAL_EDITOR_AND_TESTCASES';\nexport const MOVE_CURSOR = 'MOVE_CURSOR';\nexport const NAV_DECLARATION = 'NAV_DECLARATION';\nexport const PLAYGROUND_EXTERNAL_SELECT = 'PLAYGROUND_EXTERNAL_SELECT ';\nexport const RESET_TESTCASE = 'RESET_TESTCASE';\nexport const RESET_WORKSPACE = 'RESET_WORKSPACE';\nexport const SEND_REPL_INPUT_TO_OUTPUT = 'SEND_REPL_INPUT_TO_OUTPUT';\nexport const TOGGLE_EDITOR_AUTORUN = 'TOGGLE_EDITOR_AUTORUN';\nexport const TOGGLE_USING_SUBST = 'TOGGLE_USING_SUBST';\nexport const UPDATE_CURRENT_ASSESSMENT_ID = 'UPDATE_CURRENT_ASSESSMENT_ID';\nexport const UPDATE_CURRENT_SUBMISSION_ID = 'UPDATE_CURRENT_SUBMISSION_ID';\nexport const UPDATE_ACTIVE_EDITOR_TAB = 'UPDATE_ACTIVE_EDITOR_TAB';\nexport const UPDATE_EDITOR_VALUE = 'UPDATE_EDITOR_VALUE';\nexport const UPDATE_EDITOR_BREAKPOINTS = 'UPDATE_EDITOR_BREAKPOINTS';\nexport const UPDATE_HAS_UNSAVED_CHANGES = 'UPDATE_HAS_UNSAVED_CHANGES';\nexport const UPDATE_REPL_VALUE = 'UPDATE_REPL_VALUE';\nexport const UPDATE_WORKSPACE = 'UPDATE_WORKSPACE';\nexport const UPDATE_SUBLANGUAGE = 'UPDATE_SUBLANGUAGE';\nexport const CHANGE_SUBLANGUAGE = 'CHANGE_SUBLANGUAGE';\n\nexport type WorkspaceLocation = keyof WorkspaceManagerState;\n\ntype AssessmentWorkspaceAttr = {\n  readonly currentAssessment?: number;\n  readonly currentQuestion?: number;\n  readonly hasUnsavedChanges: boolean;\n};\ntype AssessmentWorkspaceState = AssessmentWorkspaceAttr & WorkspaceState;\n\ntype GradingWorkspaceAttr = {\n  readonly currentSubmission?: number;\n  readonly currentQuestion?: number;\n  readonly hasUnsavedChanges: boolean;\n};\ntype GradingWorkspaceState = GradingWorkspaceAttr & WorkspaceState;\n\ntype PlaygroundWorkspaceAttr = {\n  readonly usingSubst: boolean;\n};\nexport type PlaygroundWorkspaceState = PlaygroundWorkspaceAttr & WorkspaceState;\n\nexport type SicpWorkspaceState = PlaygroundWorkspaceState;\n\nexport type WorkspaceManagerState = {\n  readonly assessment: AssessmentWorkspaceState;\n  readonly grading: GradingWorkspaceState;\n  readonly playground: PlaygroundWorkspaceState;\n  readonly sourcecast: SourcecastWorkspaceState;\n  readonly sourcereel: SourcereelWorkspaceState;\n  readonly sicp: SicpWorkspaceState;\n  readonly githubAssessment: GitHubAssessmentWorkspaceState;\n};\n\nexport type EditorTabState = {\n  readonly value: string;\n  readonly prependValue: string;\n  readonly postpendValue: string;\n  readonly highlightedLines: HighlightedLines[];\n  readonly breakpoints: string[];\n  readonly newCursorPosition?: Position;\n};\n\nexport type WorkspaceState = {\n  readonly autogradingResults: AutogradingResult[];\n  readonly context: Context;\n  readonly activeEditorTabIndex: number | null;\n  readonly editorTabs: EditorTabState[];\n  readonly editorSessionId: string;\n  readonly editorTestcases: Testcase[];\n  readonly execTime: number;\n  readonly isRunning: boolean;\n  readonly isDebugging: boolean;\n  readonly enableDebugging: boolean;\n  readonly isEditorAutorun: boolean;\n  readonly isEditorReadonly: boolean;\n  readonly output: InterpreterOutput[];\n  readonly externalLibrary: ExternalLibraryName;\n  readonly replHistory: ReplHistory;\n  readonly replValue: string;\n  readonly sharedbConnected: boolean;\n  readonly sideContentHeight?: number;\n  readonly stepLimit: number;\n  readonly globals: Array<[string, any]>;\n  readonly debuggerContext: DebuggerContext;\n};\n\ntype ReplHistory = {\n  browseIndex: null | number; // [0, 49] if browsing, else null\n  records: string[];\n  originalValue: string;\n};\n\nexport type DebuggerContext = {\n  result: any;\n  lastDebuggerResult: any;\n  code: string;\n  context: Context;\n  workspaceLocation?: WorkspaceLocation;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ACORN_PARSE_OPTIONS = exports.sourceLanguages = exports.JSSLANG_PROPERTIES = exports.UNKNOWN_LOCATION = exports.MAX_LIST_DISPLAY_LENGTH = exports.MODULE_CONTEXTS_ID = exports.MODULE_PARAMS_ID = exports.NATIVE_STORAGE_ID = exports.GLOBAL = exports.TRY_AGAIN = exports.CUT = void 0;\nconst types_1 = require(\"./types\");\nexports.CUT = 'cut'; // cut operator for Source 4.3\nexports.TRY_AGAIN = 'retry'; // command for Source 4.3\nexports.GLOBAL = typeof window === 'undefined' ? global : window;\nexports.NATIVE_STORAGE_ID = 'nativeStorage';\nexports.MODULE_PARAMS_ID = 'moduleParams';\nexports.MODULE_CONTEXTS_ID = 'moduleContexts';\nexports.MAX_LIST_DISPLAY_LENGTH = 100;\nexports.UNKNOWN_LOCATION = {\n    start: {\n        line: -1,\n        column: -1\n    },\n    end: {\n        line: -1,\n        column: -1\n    }\n};\nexports.JSSLANG_PROPERTIES = {\n    maxExecTime: 1000,\n    factorToIncreaseBy: 10\n};\nexports.sourceLanguages = [{ chapter: types_1.Chapter.CLANG, variant: types_1.Variant.DEFAULT }];\nexports.ACORN_PARSE_OPTIONS = { ecmaVersion: 2015 };\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeSourceError = void 0;\nconst constants_1 = require(\"../constants\");\nconst types_1 = require(\"../types\");\nclass RuntimeSourceError {\n    constructor(node) {\n        this.type = types_1.ErrorType.RUNTIME;\n        this.severity = types_1.ErrorSeverity.ERROR;\n        this.location = node ? node.loc : constants_1.UNKNOWN_LOCATION;\n    }\n    explain() {\n        return '';\n    }\n    elaborate() {\n        return this.explain();\n    }\n}\nexports.RuntimeSourceError = RuntimeSourceError;\n//# sourceMappingURL=runtimeSourceError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.whileStatement = exports.ifStatement = exports.variableDeclarator = exports.variableDeclaration = exports.arrowFunctionExpression = exports.blockExpression = exports.functionDeclaration = exports.functionDeclarationExpression = exports.primitive = exports.unaryExpression = exports.binaryExpression = exports.assignmentExpression = exports.arrayExpression = exports.conditionalExpression = exports.mutateToConditionalExpression = exports.logicalExpression = exports.mutateToMemberExpression = exports.mutateToReturnStatement = exports.mutateToExpressionStatement = exports.mutateToAssignmentExpression = exports.mutateToCallExpression = exports.objectExpression = exports.property = exports.returnStatement = exports.program = exports.blockStatement = exports.functionExpression = exports.blockArrowFunction = exports.expressionStatement = exports.callExpression = exports.constantDeclaration = exports.declaration = exports.memberExpression = exports.literal = exports.identifier = exports.locationDummyNode = exports.getVariableDecarationName = void 0;\nconst getVariableDecarationName = (decl) => decl.declarations[0].id.name;\nexports.getVariableDecarationName = getVariableDecarationName;\nconst locationDummyNode = (line, column) => (0, exports.literal)('Dummy', { start: { line, column }, end: { line, column } });\nexports.locationDummyNode = locationDummyNode;\nconst identifier = (name, loc) => ({\n    type: 'Identifier',\n    name,\n    loc\n});\nexports.identifier = identifier;\nconst literal = (value, loc) => ({\n    type: 'Literal',\n    value,\n    loc\n});\nexports.literal = literal;\nconst memberExpression = (object, property) => ({\n    type: 'MemberExpression',\n    object,\n    computed: typeof property === 'number',\n    optional: false,\n    property: typeof property === 'number' ? (0, exports.literal)(property) : (0, exports.identifier)(property)\n});\nexports.memberExpression = memberExpression;\nconst declaration = (name, kind, init, loc) => ({\n    type: 'VariableDeclaration',\n    declarations: [\n        {\n            type: 'VariableDeclarator',\n            id: (0, exports.identifier)(name),\n            init\n        }\n    ],\n    kind,\n    loc\n});\nexports.declaration = declaration;\nconst constantDeclaration = (name, init, loc) => (0, exports.declaration)(name, 'const', init, loc);\nexports.constantDeclaration = constantDeclaration;\nconst callExpression = (callee, args, loc) => ({\n    type: 'CallExpression',\n    callee,\n    arguments: args,\n    optional: false,\n    loc\n});\nexports.callExpression = callExpression;\nconst expressionStatement = (expression) => ({\n    type: 'ExpressionStatement',\n    expression\n});\nexports.expressionStatement = expressionStatement;\nconst blockArrowFunction = (params, body, loc) => ({\n    type: 'ArrowFunctionExpression',\n    expression: false,\n    generator: false,\n    params,\n    body: Array.isArray(body) ? (0, exports.blockStatement)(body) : body,\n    loc\n});\nexports.blockArrowFunction = blockArrowFunction;\nconst functionExpression = (params, body, loc) => ({\n    type: 'FunctionExpression',\n    id: null,\n    async: false,\n    generator: false,\n    params,\n    body: Array.isArray(body) ? (0, exports.blockStatement)(body) : body,\n    loc\n});\nexports.functionExpression = functionExpression;\nconst blockStatement = (body) => ({\n    type: 'BlockStatement',\n    body\n});\nexports.blockStatement = blockStatement;\nconst program = (body) => ({\n    type: 'Program',\n    sourceType: 'module',\n    body\n});\nexports.program = program;\nconst returnStatement = (argument, loc) => ({\n    type: 'ReturnStatement',\n    argument,\n    loc\n});\nexports.returnStatement = returnStatement;\nconst property = (key, value) => ({\n    type: 'Property',\n    method: false,\n    shorthand: false,\n    computed: false,\n    key: (0, exports.identifier)(key),\n    value,\n    kind: 'init'\n});\nexports.property = property;\nconst objectExpression = (properties) => ({\n    type: 'ObjectExpression',\n    properties\n});\nexports.objectExpression = objectExpression;\nconst mutateToCallExpression = (node, callee, args) => {\n    node.type = 'CallExpression';\n    node = node;\n    node.callee = callee;\n    node.arguments = args;\n};\nexports.mutateToCallExpression = mutateToCallExpression;\nconst mutateToAssignmentExpression = (node, left, right) => {\n    node.type = 'AssignmentExpression';\n    node = node;\n    node.operator = '=';\n    node.left = left;\n    node.right = right;\n};\nexports.mutateToAssignmentExpression = mutateToAssignmentExpression;\nconst mutateToExpressionStatement = (node, expr) => {\n    node.type = 'ExpressionStatement';\n    node = node;\n    node.expression = expr;\n};\nexports.mutateToExpressionStatement = mutateToExpressionStatement;\nconst mutateToReturnStatement = (node, expr) => {\n    node.type = 'ReturnStatement';\n    node = node;\n    node.argument = expr;\n};\nexports.mutateToReturnStatement = mutateToReturnStatement;\nconst mutateToMemberExpression = (node, obj, prop) => {\n    node.type = 'MemberExpression';\n    node = node;\n    node.object = obj;\n    node.property = prop;\n    node.computed = false;\n};\nexports.mutateToMemberExpression = mutateToMemberExpression;\nconst logicalExpression = (operator, left, right, loc) => ({\n    type: 'LogicalExpression',\n    operator,\n    left,\n    right,\n    loc\n});\nexports.logicalExpression = logicalExpression;\nconst mutateToConditionalExpression = (node, test, consequent, alternate) => {\n    node.type = 'ConditionalExpression';\n    node = node;\n    node.test = test;\n    node.consequent = consequent;\n    node.alternate = alternate;\n};\nexports.mutateToConditionalExpression = mutateToConditionalExpression;\nconst conditionalExpression = (test, consequent, alternate, loc) => ({\n    type: 'ConditionalExpression',\n    test,\n    consequent,\n    alternate,\n    loc\n});\nexports.conditionalExpression = conditionalExpression;\nconst arrayExpression = (elements) => ({\n    type: 'ArrayExpression',\n    elements\n});\nexports.arrayExpression = arrayExpression;\nconst assignmentExpression = (left, right) => ({\n    type: 'AssignmentExpression',\n    operator: '=',\n    left,\n    right\n});\nexports.assignmentExpression = assignmentExpression;\nconst binaryExpression = (operator, left, right, loc) => ({\n    type: 'BinaryExpression',\n    operator,\n    left,\n    right,\n    loc\n});\nexports.binaryExpression = binaryExpression;\nconst unaryExpression = (operator, argument, loc) => ({\n    type: 'UnaryExpression',\n    operator,\n    prefix: true,\n    argument,\n    loc\n});\nexports.unaryExpression = unaryExpression;\n// primitive: undefined is a possible value\nconst primitive = (value) => {\n    return value === undefined ? (0, exports.identifier)('undefined') : (0, exports.literal)(value);\n};\nexports.primitive = primitive;\nconst functionDeclarationExpression = (id, params, body, loc) => ({\n    type: 'FunctionExpression',\n    id,\n    params,\n    body,\n    loc\n});\nexports.functionDeclarationExpression = functionDeclarationExpression;\nconst functionDeclaration = (id, params, body, loc) => ({\n    type: 'FunctionDeclaration',\n    id,\n    params,\n    body,\n    loc\n});\nexports.functionDeclaration = functionDeclaration;\nconst blockExpression = (body, loc) => ({\n    type: 'BlockExpression',\n    body,\n    loc\n});\nexports.blockExpression = blockExpression;\nconst arrowFunctionExpression = (params, body, loc) => ({\n    type: 'ArrowFunctionExpression',\n    expression: body.type !== 'BlockStatement',\n    generator: false,\n    params,\n    body,\n    loc\n});\nexports.arrowFunctionExpression = arrowFunctionExpression;\nconst variableDeclaration = (declarations, loc) => ({\n    type: 'VariableDeclaration',\n    kind: 'const',\n    declarations,\n    loc\n});\nexports.variableDeclaration = variableDeclaration;\nconst variableDeclarator = (id, init, loc) => ({\n    type: 'VariableDeclarator',\n    id,\n    init,\n    loc\n});\nexports.variableDeclarator = variableDeclarator;\nconst ifStatement = (test, consequent, alternate, loc) => ({\n    type: 'IfStatement',\n    test,\n    consequent,\n    alternate,\n    loc\n});\nexports.ifStatement = ifStatement;\nconst whileStatement = (body, test, loc) => ({\n    type: 'WhileStatement',\n    test,\n    body,\n    loc\n});\nexports.whileStatement = whileStatement;\n//# sourceMappingURL=astCreator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CircularImportError = exports.CannotFindModuleError = exports.ConsecutiveSlashesInFilePathError = exports.IllegalCharInFilePathError = exports.InvalidFilePathError = void 0;\nconst constants_1 = require(\"../constants\");\nconst filePaths_1 = require(\"../localImports/filePaths\");\nconst types_1 = require(\"../types\");\nclass InvalidFilePathError {\n    constructor(filePath) {\n        this.filePath = filePath;\n        this.type = types_1.ErrorType.TYPE;\n        this.severity = types_1.ErrorSeverity.ERROR;\n        this.location = constants_1.UNKNOWN_LOCATION;\n    }\n}\nexports.InvalidFilePathError = InvalidFilePathError;\nclass IllegalCharInFilePathError extends InvalidFilePathError {\n    explain() {\n        const validNonAlphanumericChars = Object.keys(filePaths_1.nonAlphanumericCharEncoding)\n            .map(char => `'${char}'`)\n            .join(', ');\n        return `File path '${this.filePath}' must only contain alphanumeric chars and/or ${validNonAlphanumericChars}.`;\n    }\n    elaborate() {\n        return 'Rename the offending file path to only use valid chars.';\n    }\n}\nexports.IllegalCharInFilePathError = IllegalCharInFilePathError;\nclass ConsecutiveSlashesInFilePathError extends InvalidFilePathError {\n    explain() {\n        return `File path '${this.filePath}' cannot contain consecutive slashes '//'.`;\n    }\n    elaborate() {\n        return 'Remove consecutive slashes from the offending file path.';\n    }\n}\nexports.ConsecutiveSlashesInFilePathError = ConsecutiveSlashesInFilePathError;\nclass CannotFindModuleError {\n    constructor(moduleFilePath) {\n        this.moduleFilePath = moduleFilePath;\n        this.type = types_1.ErrorType.TYPE;\n        this.severity = types_1.ErrorSeverity.ERROR;\n        this.location = constants_1.UNKNOWN_LOCATION;\n    }\n    explain() {\n        return `Cannot find module '${this.moduleFilePath}'.`;\n    }\n    elaborate() {\n        return 'Check that the module file path resolves to an existing file.';\n    }\n}\nexports.CannotFindModuleError = CannotFindModuleError;\nclass CircularImportError {\n    constructor(filePathsInCycle) {\n        this.filePathsInCycle = filePathsInCycle;\n        this.type = types_1.ErrorType.TYPE;\n        this.severity = types_1.ErrorSeverity.ERROR;\n        this.location = constants_1.UNKNOWN_LOCATION;\n    }\n    explain() {\n        // We need to reverse the file paths in the cycle so that the\n        // semantics of \"'/a.js' -> '/b.js'\" is \"'/a.js' imports '/b.js'\".\n        const formattedCycle = this.filePathsInCycle\n            .map(filePath => `'${filePath}'`)\n            .reverse()\n            .join(' -> ');\n        return `Circular import detected: ${formattedCycle}.`;\n    }\n    elaborate() {\n        return 'Break the circular import cycle by removing imports from any of the offending files.';\n    }\n}\nexports.CircularImportError = CircularImportError;\n//# sourceMappingURL=localImportErrors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFilePath = exports.validateFilePath = exports.transformFunctionNameToInvokedFunctionResultVariableName = exports.transformFilePathToValidFunctionName = exports.nonAlphanumericCharEncoding = void 0;\nconst localImportErrors_1 = require(\"../errors/localImportErrors\");\n/**\n * Maps non-alphanumeric characters that are legal in file paths\n * to strings which are legal in function names.\n */\nexports.nonAlphanumericCharEncoding = {\n    // While the underscore character is legal in both file paths\n    // and function names, it is the only character to be legal\n    // in both that is not an alphanumeric character. For simplicity,\n    // we handle it the same way as the other non-alphanumeric\n    // characters.\n    _: '_',\n    '/': '$',\n    // The following encodings work because we disallow file paths\n    // with consecutive slash characters (//). Note that when using\n    // the 'replace' or 'replaceAll' functions, the dollar sign ($)\n    // takes on a special meaning. As such, to insert a dollar sign,\n    // we need to write '$$'. See\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_the_replacement\n    // for more information.\n    '.': '$$$$dot$$$$',\n    '-': '$$$$dash$$$$' // '$$dash$$'\n};\n/**\n * Transforms the given file path to a valid function name. The\n * characters in a valid function name must be either an\n * alphanumeric character, the underscore (_), or the dollar ($).\n *\n * In addition, the returned function name has underscores appended\n * on both ends to make it even less likely that the function name\n * will collide with a user-inputted name.\n *\n * @param filePath The file path to transform.\n */\nconst transformFilePathToValidFunctionName = (filePath) => {\n    const encodeChars = Object.entries(exports.nonAlphanumericCharEncoding).reduce((accumulatedFunction, [charToReplace, replacementString]) => {\n        return (filePath) => accumulatedFunction(filePath).replaceAll(charToReplace, replacementString);\n    }, (filePath) => filePath);\n    return `__${encodeChars(filePath)}__`;\n};\nexports.transformFilePathToValidFunctionName = transformFilePathToValidFunctionName;\n/**\n * Transforms the given function name to the expected name that\n * the variable holding the result of invoking the function should\n * have. The main consideration of this transformation is that\n * the resulting name should not conflict with any of the names\n * that can be generated by `transformFilePathToValidFunctionName`.\n *\n * @param functionName The function name to transform.\n */\nconst transformFunctionNameToInvokedFunctionResultVariableName = (functionName) => {\n    return `_${functionName}_`;\n};\nexports.transformFunctionNameToInvokedFunctionResultVariableName = transformFunctionNameToInvokedFunctionResultVariableName;\nconst isAlphanumeric = (char) => {\n    return /[a-zA-Z0-9]/i.exec(char) !== null;\n};\n/**\n * Validates the given file path, returning an `InvalidFilePathError`\n * if the file path is invalid & `null` otherwise. A file path is\n * valid if it only contains alphanumeric characters and the characters\n * defined in `charEncoding`, and does not contain consecutive slash\n * characters (//).\n *\n * @param filePath The file path to check.\n */\nconst validateFilePath = (filePath) => {\n    if (filePath.includes('//')) {\n        return new localImportErrors_1.ConsecutiveSlashesInFilePathError(filePath);\n    }\n    for (const char of filePath) {\n        if (isAlphanumeric(char)) {\n            continue;\n        }\n        if (char in exports.nonAlphanumericCharEncoding) {\n            continue;\n        }\n        return new localImportErrors_1.IllegalCharInFilePathError(filePath);\n    }\n    return null;\n};\nexports.validateFilePath = validateFilePath;\n/**\n * Returns whether a string is a file path. We define a file\n * path to be any string containing the '/' character.\n *\n * @param value The value of the string.\n */\nconst isFilePath = (value) => {\n    return value.includes('/');\n};\nexports.isFilePath = isFilePath;\n//# sourceMappingURL=filePaths.js.map","import React, { RefObject } from 'react';\nimport { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { OverallState } from '../application/ApplicationTypes';\nimport Constants from './Constants';\nimport { readLocalStorage, setLocalStorage } from './LocalStorageHelper';\n\n/**\n * This hook sends a request to the backend to fetch the initial state of the field\n *\n * @param requestFn The function that creates a request\n * @param defaultValue T\n */\nexport function useRequest<T>(requestFn: () => Promise<T>, defaultValue: T) {\n  const [value, setValue] = React.useState<T>(defaultValue);\n\n  React.useEffect(() => {\n    (async () => {\n      const fetchedValue = await requestFn();\n      setValue(fetchedValue);\n    })();\n  }, [requestFn]);\n\n  return { value, setValue };\n}\n\n/**\n * This hook creates an input prop that can\n * be attached as props for text fields.\n * When attached as prop, any change in the text field\n * will cause the value of the hook to change\n *\n * @param defaultValue default value of input field\n */\nexport function useInput<T>(defaultValue: T) {\n  const [value, setValue] = React.useState<T>(defaultValue);\n\n  return {\n    value,\n    setValue,\n    inputProps: {\n      value,\n      onChange: (event: any) => {\n        setValue(event.target.value);\n      }\n    }\n  };\n}\n\n/**\n * This hook usage is similar to React.useState, the only difference\n * being that the state is also written to local storage at the specified key on state updates.\n *\n * When calling this hook, the value will take on the stored value in local storage (if any).\n * If this key-value does not exist in local storage yet, the default value will be used.\n */\nexport function useLocalStorageState<T>(\n  key: string,\n  defaultValue: T\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState<T>(readLocalStorage(key, defaultValue));\n\n  React.useEffect(() => {\n    setLocalStorage(key, value);\n  }, [key, value]);\n\n  return [value, setValue];\n}\n\n/** Typed version of useSelector. Use this instead of the useSelector hook. */\nexport const useTypedSelector: TypedUseSelectorHook<OverallState> = useSelector;\n/**\n * Dynamically returns the dimensions (width & height) of an HTML element, updating whenever the\n * element is loaded or resized.\n *\n * @param ref A reference to the underlying HTML element.\n */\n\nexport const useDimensions = (ref: RefObject<HTMLElement>): [width: number, height: number] => {\n  const [width, setWidth] = React.useState<number>(0);\n  const [height, setHeight] = React.useState<number>(0);\n\n  const resizeObserver = React.useMemo(\n    () =>\n      new ResizeObserver((entries: ResizeObserverEntry[], observer: ResizeObserver) => {\n        if (entries.length !== 1) {\n          throw new Error(\n            'Expected only a single HTML element to be observed by the ResizeObserver.'\n          );\n        }\n        const contentRect = entries[0].contentRect;\n        setWidth(contentRect.width);\n        setHeight(contentRect.height);\n      }),\n    []\n  );\n\n  React.useEffect(() => {\n    const htmlElement = ref.current;\n    if (htmlElement === null) {\n      return;\n    }\n    resizeObserver.observe(htmlElement);\n    return () => resizeObserver.disconnect();\n  }, [ref, resizeObserver]);\n\n  return [width, height];\n};\n\n/**\n * Returns whether the current view falls under mobile\n * or desktop as defined by the constants file.\n */\nexport const useResponsive = () => {\n  const isMobileBreakpoint = useMediaQuery({ maxWidth: Constants.mobileBreakpoint });\n  return { isMobileBreakpoint };\n};\n","export const readLocalStorage = (key: string, defaultValue?: any) => {\n  const localStorageValue = window.localStorage.getItem(key);\n  return localStorageValue ? JSON.parse(localStorageValue) : defaultValue;\n};\n\nexport const setLocalStorage = (key: string, value: any) => {\n  window.localStorage.setItem(key, JSON.stringify(value));\n};\n","import { Ace } from 'ace-builds/ace';\nimport { Chapter } from 'Clang-slang/dist/types';\n\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport { Position } from '../../commons/editor/EditorTypes';\nimport { SideContentType } from '../../commons/sideContent/SideContentTypes';\n\nexport const SAVE_SOURCECAST_DATA = 'SAVE_SOURCECAST_DATA';\nexport const SET_CURRENT_PLAYER_TIME = 'SET_CURRENT_PLAYER_TIME';\nexport const SET_CODE_DELTAS_TO_APPLY = 'SET_CODE_DELTAS_TO_APPLY';\nexport const SET_INPUT_TO_APPLY = 'SET_INPUT_TO_APPLY';\nexport const SET_SOURCECAST_DATA = 'SET_SOURCECAST_DATA';\nexport const SET_SOURCECAST_PLAYBACK_DURATION = 'SET_SOURCECAST_PLAYBACK_DURATION';\nexport const SET_SOURCECAST_PLAYBACK_STATUS = 'SET_SOURCECAST_PLAYBACK_STATUS';\n\nexport type InputTypeShape = {\n  activeTabChange: SideContentType;\n  chapterSelect: number;\n  cursorPositionChange: Position;\n  codeDelta: CodeDelta;\n  externalLibrarySelect: ExternalLibraryName;\n  forcePause: null;\n  keyboardCommand: KeyboardCommand;\n  selectionRangeData: SelectionData;\n};\n\nexport enum KeyboardCommand {\n  run = 'run'\n}\n\nexport enum PlaybackStatus {\n  forcedPaused = 'forcedPaused',\n  playing = 'playing',\n  paused = 'paused'\n}\n\nexport type CodeDelta = Ace.Delta;\n\nexport type SelectionRange = Ace.Range;\n\nexport type SelectionData = {\n  range: SelectionRange;\n  isBackwards: boolean;\n};\n\n// Refer: https://stackoverflow.com/questions/55758713/match-pair-for-keyof-and-valueof-an-interface\nexport type Input = keyof InputTypeShape extends infer K\n  ? K extends keyof InputTypeShape\n    ? { time: number; type: K; data: InputTypeShape[K] }\n    : never\n  : never;\n\nexport type PlaybackData = {\n  init: {\n    chapter: Chapter;\n    externalLibrary: ExternalLibraryName;\n    editorValue: string;\n  };\n  inputs: Input[];\n};\n\nexport type SourcecastData = {\n  title: string;\n  description: string;\n  uid: string;\n  inserted_at: string;\n  updated_at: string;\n  playbackData: string;\n  id: number;\n  uploader: {\n    id: number;\n    name: string;\n  };\n  url: string;\n};\n\nexport enum RecordingStatus {\n  notStarted = 'notStarted',\n  recording = 'recording',\n  paused = 'paused',\n  finished = 'finished'\n}\n","import { action } from 'typesafe-actions'; // EDITED\n\nimport { Grading, GradingOverview } from '../../../features/grading/GradingTypes';\nimport {\n  Assessment,\n  AssessmentConfiguration,\n  AssessmentOverview,\n  ContestEntry\n} from '../../assessment/AssessmentTypes';\nimport { MissionRepoData } from '../../githubAssessments/GitHubMissionTypes';\nimport {\n  Notification,\n  NotificationFilterFunction\n} from '../../notificationBadge/NotificationBadgeTypes';\nimport { generateOctokitInstance } from '../../utils/GitHubPersistenceHelper';\nimport { Role } from '../ApplicationTypes';\nimport {\n  ACKNOWLEDGE_NOTIFICATIONS,\n  AdminPanelCourseRegistration,\n  CourseRegistration,\n  DELETE_ASSESSMENT_CONFIG,\n  DELETE_USER_COURSE_REGISTRATION,\n  FETCH_ADMIN_PANEL_COURSE_REGISTRATIONS,\n  FETCH_ALL_USER_XP,\n  FETCH_ASSESSMENT,\n  FETCH_ASSESSMENT_ADMIN,\n  FETCH_ASSESSMENT_CONFIGS,\n  FETCH_ASSESSMENT_OVERVIEWS,\n  FETCH_AUTH,\n  FETCH_COURSE_CONFIG,\n  FETCH_GRADING,\n  FETCH_GRADING_OVERVIEWS,\n  FETCH_NOTIFICATIONS,\n  FETCH_TOTAL_XP,\n  FETCH_TOTAL_XP_ADMIN,\n  FETCH_USER_AND_COURSE,\n  LOGIN,\n  LOGIN_GITHUB,\n  LOGOUT_GITHUB,\n  LOGOUT_GOOGLE,\n  REAUTOGRADE_ANSWER,\n  REAUTOGRADE_SUBMISSION,\n  REMOVE_GITHUB_OCTOKIT_OBJECT_AND_ACCESS_TOKEN,\n  SET_ADMIN_PANEL_COURSE_REGISTRATIONS,\n  SET_ASSESSMENT_CONFIGURATIONS,\n  SET_COURSE_CONFIGURATION,\n  SET_COURSE_REGISTRATION,\n  SET_GITHUB_ACCESS_TOKEN,\n  SET_GITHUB_ASSESSMENT,\n  SET_GITHUB_OCTOKIT_OBJECT,\n  SET_GOOGLE_USER,\n  SET_TOKENS,\n  SET_USER,\n  SUBMIT_ANSWER,\n  SUBMIT_ASSESSMENT,\n  SUBMIT_GRADING,\n  SUBMIT_GRADING_AND_CONTINUE,\n  Tokens,\n  UNSUBMIT_SUBMISSION,\n  UPDATE_ALL_USER_XP,\n  UPDATE_ASSESSMENT,\n  UPDATE_ASSESSMENT_CONFIGS,\n  UPDATE_ASSESSMENT_OVERVIEWS,\n  UPDATE_COURSE_CONFIG,\n  UPDATE_COURSE_RESEARCH_AGREEMENT,\n  UPDATE_GRADING,\n  UPDATE_GRADING_OVERVIEWS,\n  UPDATE_LATEST_VIEWED_COURSE,\n  UPDATE_NOTIFICATIONS,\n  UPDATE_TOTAL_XP,\n  UPDATE_USER_ROLE,\n  UpdateCourseConfiguration,\n  User\n} from '../types/SessionTypes';\n\nexport const fetchAuth = (code: string, providerId?: string) =>\n  action(FETCH_AUTH, { code, providerId });\n\nexport const fetchUserAndCourse = () => action(FETCH_USER_AND_COURSE);\n\nexport const fetchCourseConfig = () => action(FETCH_COURSE_CONFIG);\n\nexport const fetchAssessment = (assessmentId: number) => action(FETCH_ASSESSMENT, assessmentId);\n\nexport const fetchAssessmentAdmin = (assessmentId: number, courseRegId: number) =>\n  action(FETCH_ASSESSMENT_ADMIN, { assessmentId, courseRegId });\n\nexport const fetchAssessmentOverviews = () => action(FETCH_ASSESSMENT_OVERVIEWS);\n\nexport const fetchTotalXp = () => action(FETCH_TOTAL_XP);\n\nexport const fetchTotalXpAdmin = (courseRegId: number) => action(FETCH_TOTAL_XP_ADMIN, courseRegId);\n\nexport const fetchAllUserXp = () => action(FETCH_ALL_USER_XP);\n\nexport const fetchGrading = (submissionId: number) => action(FETCH_GRADING, submissionId);\n\n/**\n * @param filterToGroup - param when set to true, only shows submissions under the group\n * of the grader\n */\nexport const fetchGradingOverviews = (filterToGroup = true) =>\n  action(FETCH_GRADING_OVERVIEWS, filterToGroup);\n\nexport const login = (providerId: string) => action(LOGIN, providerId);\n\nexport const logoutGoogle = () => action(LOGOUT_GOOGLE);\n\nexport const loginGitHub = () => action(LOGIN_GITHUB);\n\nexport const logoutGitHub = () => action(LOGOUT_GITHUB);\n\nexport const setTokens = ({ accessToken, refreshToken }: Tokens) =>\n  action(SET_TOKENS, {\n    accessToken,\n    refreshToken\n  });\n\nexport const setUser = (user: User) => action(SET_USER, user);\n\nexport const setCourseConfiguration = (courseConfiguration: UpdateCourseConfiguration) =>\n  action(SET_COURSE_CONFIGURATION, courseConfiguration);\n\nexport const setCourseRegistration = (courseRegistration: Partial<CourseRegistration>) =>\n  action(SET_COURSE_REGISTRATION, courseRegistration);\n\nexport const setAssessmentConfigurations = (assessmentConfigurations: AssessmentConfiguration[]) =>\n  action(SET_ASSESSMENT_CONFIGURATIONS, assessmentConfigurations);\n\nexport const setAdminPanelCourseRegistrations = (\n  courseRegistrations: AdminPanelCourseRegistration[]\n) => action(SET_ADMIN_PANEL_COURSE_REGISTRATIONS, courseRegistrations);\n\nexport const setGoogleUser = (user?: string) => action(SET_GOOGLE_USER, user);\n\nexport const setGitHubAssessment = (missionRepoData: MissionRepoData) =>\n  action(SET_GITHUB_ASSESSMENT, missionRepoData);\n\nexport const setGitHubOctokitObject = (authToken?: string) =>\n  action(SET_GITHUB_OCTOKIT_OBJECT, generateOctokitInstance(authToken || ''));\n\nexport const setGitHubAccessToken = (authToken?: string) =>\n  action(SET_GITHUB_ACCESS_TOKEN, authToken);\n\nexport const removeGitHubOctokitObjectAndAccessToken = () =>\n  action(REMOVE_GITHUB_OCTOKIT_OBJECT_AND_ACCESS_TOKEN);\n\nexport const submitAnswer = (id: number, answer: string | number | ContestEntry[]) =>\n  action(SUBMIT_ANSWER, {\n    id,\n    answer\n  });\n\nexport const submitAssessment = (id: number) => action(SUBMIT_ASSESSMENT, id);\n\nexport const submitGrading = (\n  submissionId: number,\n  questionId: number,\n  xpAdjustment: number = 0,\n  comments?: string\n) =>\n  action(SUBMIT_GRADING, {\n    submissionId,\n    questionId,\n    xpAdjustment,\n    comments\n  });\n\nexport const submitGradingAndContinue = (\n  submissionId: number,\n  questionId: number,\n  xpAdjustment: number = 0,\n  comments?: string\n) =>\n  action(SUBMIT_GRADING_AND_CONTINUE, {\n    submissionId,\n    questionId,\n    xpAdjustment,\n    comments\n  });\n\nexport const reautogradeSubmission = (submissionId: number) =>\n  action(REAUTOGRADE_SUBMISSION, submissionId);\n\nexport const reautogradeAnswer = (submissionId: number, questionId: number) =>\n  action(REAUTOGRADE_ANSWER, { submissionId, questionId });\n\nexport const updateAssessmentOverviews = (overviews: AssessmentOverview[]) =>\n  action(UPDATE_ASSESSMENT_OVERVIEWS, overviews);\n\nexport const updateTotalXp = (totalXp: number) => action(UPDATE_TOTAL_XP, totalXp);\n\nexport const updateAllUserXp = (allUserXp: string[][]) => action(UPDATE_ALL_USER_XP, allUserXp);\n\nexport const updateAssessment = (assessment: Assessment) => action(UPDATE_ASSESSMENT, assessment);\n\nexport const updateGradingOverviews = (overviews: GradingOverview[]) =>\n  action(UPDATE_GRADING_OVERVIEWS, overviews);\n\n/**\n * An extra id parameter is included here because of\n * no id for Grading.\n */\nexport const updateGrading = (submissionId: number, grading: Grading) =>\n  action(UPDATE_GRADING, {\n    submissionId,\n    grading\n  });\n\nexport const unsubmitSubmission = (submissionId: number) =>\n  action(UNSUBMIT_SUBMISSION, {\n    submissionId\n  });\n\n/**\n * Notification actions\n */\n\nexport const fetchNotifications = () => action(FETCH_NOTIFICATIONS);\n\nexport const acknowledgeNotifications = (withFilter?: NotificationFilterFunction) =>\n  action(ACKNOWLEDGE_NOTIFICATIONS, {\n    withFilter\n  });\n\nexport const updateNotifications = (notifications: Notification[]) =>\n  action(UPDATE_NOTIFICATIONS, notifications);\n\nexport const updateLatestViewedCourse = (courseId: number) =>\n  action(UPDATE_LATEST_VIEWED_COURSE, { courseId });\n\nexport const updateCourseConfig = (courseConfiguration: UpdateCourseConfiguration) =>\n  action(UPDATE_COURSE_CONFIG, courseConfiguration);\n\nexport const fetchAssessmentConfigs = () => action(FETCH_ASSESSMENT_CONFIGS);\n\nexport const updateAssessmentConfigs = (assessmentConfigs: AssessmentConfiguration[]) =>\n  action(UPDATE_ASSESSMENT_CONFIGS, assessmentConfigs);\n\nexport const deleteAssessmentConfig = (assessmentConfig: AssessmentConfiguration) =>\n  action(DELETE_ASSESSMENT_CONFIG, assessmentConfig);\n\nexport const fetchAdminPanelCourseRegistrations = () =>\n  action(FETCH_ADMIN_PANEL_COURSE_REGISTRATIONS);\n\nexport const updateUserRole = (courseRegId: number, role: Role) =>\n  action(UPDATE_USER_ROLE, { courseRegId, role });\n\nexport const deleteUserCourseRegistration = (courseRegId: number) =>\n  action(DELETE_USER_COURSE_REGISTRATION, { courseRegId });\n\nexport const updateCourseResearchAgreement = (agreedToResearch: boolean) =>\n  action(UPDATE_COURSE_RESEARCH_AGREEMENT, { agreedToResearch });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProp = exports.setProp = exports.evaluateBinaryExpression = exports.binaryOp = exports.evaluateUnaryExpression = exports.unaryOp = exports.boolOrErr = exports.callIfFuncAndRightArgs = exports.makeLazyFunction = exports.wrapLazyCallee = exports.forceIt = void 0;\nconst createContext_1 = require(\"../createContext\");\nconst errors_1 = require(\"../errors/errors\");\nconst runtimeSourceError_1 = require(\"../errors/runtimeSourceError\");\nconst astCreator_1 = require(\"./astCreator\");\nconst create = require(\"./astCreator\");\nconst makeWrapper_1 = require(\"./makeWrapper\");\nconst rttc = require(\"./rttc\");\nfunction forceIt(val) {\n    if (val !== undefined && val !== null && val.isMemoized !== undefined) {\n        if (val.isMemoized) {\n            return val.memoizedValue;\n        }\n        const evaluatedValue = forceIt(val.f());\n        val.isMemoized = true;\n        val.memoizedValue = evaluatedValue;\n        return evaluatedValue;\n    }\n    else {\n        return val;\n    }\n}\nexports.forceIt = forceIt;\nfunction wrapLazyCallee(candidate) {\n    candidate = forceIt(candidate);\n    if (typeof candidate === 'function') {\n        const wrapped = (...args) => candidate(...args.map(forceIt));\n        (0, makeWrapper_1.makeWrapper)(candidate, wrapped);\n        wrapped[Symbol.toStringTag] = () => candidate.toString();\n        wrapped.toString = () => candidate.toString();\n        return wrapped;\n    }\n    else if (candidate instanceof createContext_1.LazyBuiltIn) {\n        if (candidate.evaluateArgs) {\n            const wrapped = (...args) => candidate.func(...args.map(forceIt));\n            (0, makeWrapper_1.makeWrapper)(candidate.func, wrapped);\n            wrapped[Symbol.toStringTag] = () => candidate.toString();\n            wrapped.toString = () => candidate.toString();\n            return wrapped;\n        }\n        else {\n            return candidate;\n        }\n    }\n    // doesn't look like a function, not our business to error now\n    return candidate;\n}\nexports.wrapLazyCallee = wrapLazyCallee;\nfunction makeLazyFunction(candidate) {\n    return new createContext_1.LazyBuiltIn(candidate, false);\n}\nexports.makeLazyFunction = makeLazyFunction;\nfunction callIfFuncAndRightArgs(candidate, line, column, ...args) {\n    const dummy = create.callExpression(create.locationDummyNode(line, column), args, {\n        start: { line, column },\n        end: { line, column }\n    });\n    if (typeof candidate === 'function') {\n        const originalCandidate = candidate;\n        if (candidate.transformedFunction !== undefined) {\n            candidate = candidate.transformedFunction;\n        }\n        const expectedLength = candidate.length;\n        const receivedLength = args.length;\n        const hasVarArgs = candidate.minArgsNeeded !== undefined;\n        if (hasVarArgs ? candidate.minArgsNeeded > receivedLength : expectedLength !== receivedLength) {\n            throw new errors_1.InvalidNumberOfArguments(dummy, hasVarArgs ? candidate.minArgsNeeded : expectedLength, receivedLength, hasVarArgs);\n        }\n        try {\n            const forcedArgs = args.map(forceIt);\n            return originalCandidate(...forcedArgs);\n        }\n        catch (error) {\n            // if we already handled the error, simply pass it on\n            if (!(error instanceof runtimeSourceError_1.RuntimeSourceError || error instanceof errors_1.ExceptionError)) {\n                throw new errors_1.ExceptionError(error, dummy.loc);\n            }\n            else {\n                throw error;\n            }\n        }\n    }\n    else if (candidate instanceof createContext_1.LazyBuiltIn) {\n        try {\n            if (candidate.evaluateArgs) {\n                args = args.map(forceIt);\n            }\n            return candidate.func(...args);\n        }\n        catch (error) {\n            // if we already handled the error, simply pass it on\n            if (!(error instanceof runtimeSourceError_1.RuntimeSourceError || error instanceof errors_1.ExceptionError)) {\n                throw new errors_1.ExceptionError(error, dummy.loc);\n            }\n            else {\n                throw error;\n            }\n        }\n    }\n    else {\n        throw new errors_1.CallingNonFunctionValue(candidate, dummy);\n    }\n}\nexports.callIfFuncAndRightArgs = callIfFuncAndRightArgs;\nfunction boolOrErr(candidate, line, column) {\n    candidate = forceIt(candidate);\n    const error = rttc.checkIfStatement(create.locationDummyNode(line, column), candidate);\n    if (error === undefined) {\n        return candidate;\n    }\n    else {\n        throw error;\n    }\n}\nexports.boolOrErr = boolOrErr;\nfunction unaryOp(operator, argument, line, column) {\n    argument = forceIt(argument);\n    const error = rttc.checkUnaryExpression(create.locationDummyNode(line, column), operator, argument);\n    if (error === undefined) {\n        return evaluateUnaryExpression(operator, argument);\n    }\n    else {\n        throw error;\n    }\n}\nexports.unaryOp = unaryOp;\nfunction evaluateUnaryExpression(operator, value) {\n    if (operator === '!') {\n        return !value;\n    }\n    else if (operator === '-') {\n        return -value;\n    }\n    else if (operator === 'typeof') {\n        return typeof value;\n    }\n    else {\n        return +value;\n    }\n}\nexports.evaluateUnaryExpression = evaluateUnaryExpression;\nfunction binaryOp(operator, left, right, line, column) {\n    left = forceIt(left);\n    right = forceIt(right);\n    const error = rttc.checkBinaryExpression(create.locationDummyNode(line, column), operator, left, right);\n    if (error === undefined) {\n        return evaluateBinaryExpression(operator, left, right);\n    }\n    else {\n        throw error;\n    }\n}\nexports.binaryOp = binaryOp;\nfunction evaluateBinaryExpression(operator, left, right) {\n    switch (operator) {\n        case '+':\n            return left + right;\n        case '-':\n            return left - right;\n        case '*':\n            return left * right;\n        case '/':\n            return left / right;\n        case '%':\n            return left % right;\n        case '===':\n            return left === right;\n        case '!==':\n            return left !== right;\n        case '<=':\n            return left <= right;\n        case '<':\n            return left < right;\n        case '>':\n            return left > right;\n        case '>=':\n            return left >= right;\n        default:\n            return undefined;\n    }\n}\nexports.evaluateBinaryExpression = evaluateBinaryExpression;\nconst setProp = (obj, prop, value, line, column) => {\n    const dummy = (0, astCreator_1.locationDummyNode)(line, column);\n    const error = rttc.checkMemberAccess(dummy, obj, prop);\n    if (error === undefined) {\n        return (obj[prop] = value);\n    }\n    else {\n        throw error;\n    }\n};\nexports.setProp = setProp;\nconst getProp = (obj, prop, line, column) => {\n    const dummy = (0, astCreator_1.locationDummyNode)(line, column);\n    const error = rttc.checkMemberAccess(dummy, obj, prop);\n    if (error === undefined) {\n        if (obj[prop] !== undefined && !obj.hasOwnProperty(prop)) {\n            throw new errors_1.GetInheritedPropertyError(dummy, obj, prop);\n        }\n        else {\n            return obj[prop];\n        }\n    }\n    else {\n        throw error;\n    }\n};\nexports.getProp = getProp;\n//# sourceMappingURL=operators.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isIdentifier = exports.checkMemberAccess = exports.checkIfStatement = exports.checkBinaryExpression = exports.checkUnaryExpression = exports.TypeError = void 0;\nconst runtimeSourceError_1 = require(\"../errors/runtimeSourceError\");\nconst types_1 = require(\"../types\");\nconst LHS = ' on left hand side of operation';\nconst RHS = ' on right hand side of operation';\nclass TypeError extends runtimeSourceError_1.RuntimeSourceError {\n    constructor(node, side, expected, got) {\n        super(node);\n        this.side = side;\n        this.expected = expected;\n        this.got = got;\n        this.type = types_1.ErrorType.RUNTIME;\n        this.severity = types_1.ErrorSeverity.ERROR;\n    }\n    explain() {\n        return `Expected ${this.expected}${this.side}, got ${this.got}.`;\n    }\n    elaborate() {\n        return this.explain();\n    }\n}\nexports.TypeError = TypeError;\n// We need to define our own typeof in order for null/array to display properly in error messages\nconst typeOf = (v) => {\n    if (v === null) {\n        return 'null';\n    }\n    else if (Array.isArray(v)) {\n        return 'array';\n    }\n    else {\n        return typeof v;\n    }\n};\nconst isNumber = (v) => typeOf(v) === 'number';\n// See section 4 of https://2ality.com/2012/12/arrays.html\n// v >>> 0 === v checks that v is a valid unsigned 32-bit int\n// tslint:disable-next-line:no-bitwise\nconst isArrayIndex = (v) => isNumber(v) && v >>> 0 === v && v < 2 ** 32 - 1;\nconst isString = (v) => typeOf(v) === 'string';\nconst isBool = (v) => typeOf(v) === 'boolean';\nconst isObject = (v) => typeOf(v) === 'object';\nconst isArray = (v) => typeOf(v) === 'array';\nconst checkUnaryExpression = (node, operator, value) => {\n    if ((operator === '+' || operator === '-') && !isNumber(value)) {\n        return new TypeError(node, '', 'number', typeOf(value));\n    }\n    else if (operator === '!' && !isBool(value)) {\n        return new TypeError(node, '', 'boolean', typeOf(value));\n    }\n    else {\n        return undefined;\n    }\n};\nexports.checkUnaryExpression = checkUnaryExpression;\nconst checkBinaryExpression = (node, operator, left, right) => {\n    switch (operator) {\n        case '-':\n        case '*':\n        case '/':\n        case '%':\n            if (!isNumber(left)) {\n                return new TypeError(node, LHS, 'number', typeOf(left));\n            }\n            else if (!isNumber(right)) {\n                return new TypeError(node, RHS, 'number', typeOf(right));\n            }\n            else {\n                return;\n            }\n        case '+':\n        case '<':\n        case '<=':\n        case '>':\n        case '>=':\n        case '!==':\n        case '===':\n            if (isNumber(left)) {\n                return isNumber(right) ? undefined : new TypeError(node, RHS, 'number', typeOf(right));\n            }\n            else if (isString(left)) {\n                return isString(right) ? undefined : new TypeError(node, RHS, 'string', typeOf(right));\n            }\n            else {\n                return new TypeError(node, LHS, 'string or number', typeOf(left));\n            }\n        default:\n            return;\n    }\n};\nexports.checkBinaryExpression = checkBinaryExpression;\nconst checkIfStatement = (node, test) => {\n    return isBool(test) ? undefined : new TypeError(node, ' as condition', 'boolean', typeOf(test));\n};\nexports.checkIfStatement = checkIfStatement;\nconst checkMemberAccess = (node, obj, prop) => {\n    if (isObject(obj)) {\n        return isString(prop) ? undefined : new TypeError(node, ' as prop', 'string', typeOf(prop));\n    }\n    else if (isArray(obj)) {\n        return isArrayIndex(prop)\n            ? undefined\n            : isNumber(prop)\n                ? new TypeError(node, ' as prop', 'array index', 'other number')\n                : new TypeError(node, ' as prop', 'array index', typeOf(prop));\n    }\n    else {\n        return new TypeError(node, '', 'object or array', typeOf(obj));\n    }\n};\nexports.checkMemberAccess = checkMemberAccess;\nconst isIdentifier = (node) => {\n    return node.name !== undefined;\n};\nexports.isIdentifier = isIdentifier;\n//# sourceMappingURL=rttc.js.map","import React from 'react';\n\nimport AchievementInferencer from '../../commons/achievement/utils/AchievementInferencer';\nimport { Links } from '../../commons/utils/Constants';\nimport { FilterStatus } from './AchievementTypes';\n\nexport const AchievementContext = React.createContext(new AchievementInferencer([], []));\n\nexport enum DeadlineColors {\n  RED = '#f00',\n  BLACK = '#000'\n}\n\nexport enum FilterColors {\n  BLUE = '#4df',\n  WHITE = '#fff'\n}\n\nexport const achievementAssets = `${Links.sourceAcademyAssets}achievement`;\nexport const backgroundUrl = `${achievementAssets}/view-background`;\nexport const cardBackgroundUrl = `${achievementAssets}/card-background`;\nexport const coverImageUrl = `${achievementAssets}/cover-image`;\n\n// Keeping these urls in as comments in case future changes want to use them\n\nexport const getAbilityBackground = () => {\n  return {\n    background: `url(${backgroundUrl}/exploration.png) no-repeat center/cover`\n  };\n  /*\n  switch (ability) {\n    case AchievementAbility.CORE:\n      return {\n        background: `url(${backgroundUrl}/core.png) no-repeat center/cover`\n      };\n    case AchievementAbility.EFFORT:\n      return {\n        background: `url(${backgroundUrl}/effort.png) no-repeat center/cover`\n      };\n    case AchievementAbility.EXPLORATION:\n      return {\n        background: `url(${backgroundUrl}/exploration.png) no-repeat center/cover`\n      };\n    case AchievementAbility.COMMUNITY:\n      return {\n        background: `url(${backgroundUrl}/community.png) no-repeat center/cover`\n      };\n    case AchievementAbility.FLEX:\n      return {\n        background: `url(${backgroundUrl}/flex.png) no-repeat center/cover`\n      };\n    default:\n      return {\n        background: ``\n      };\n  }\n  */\n};\n\nexport const getAbilityColor = () => {\n  return '#9ce'; // blue\n  /*\n  switch (ability) {\n    case AchievementAbility.CORE:\n      return '#fb0'; // gold\n    case AchievementAbility.EFFORT:\n      return '#bf6'; // green\n    case AchievementAbility.EXPLORATION:\n      return '#9ce'; // blue\n    case AchievementAbility.COMMUNITY:\n      return '#f68'; // pink\n    case AchievementAbility.FLEX:\n      return '#fff'; // white\n    default:\n      return '';\n  }\n  */\n};\n\nexport const getAbilityGlow = () => ({\n  border: `1px solid ${getAbilityColor()}`,\n  boxShadow: `0 0 10px ${getAbilityColor()}`\n});\n/*\n  ability === AchievementAbility.FLEX\n    ? {\n        border: `1px solid ${getAbilityColor(ability)}`,\n        boxShadow: `\n          0 0 10px #ff0,   \n          -1px 0 9px #f0f, \n          1px 0 9px #0ff`\n      }\n    : {\n        border: `1px solid ${getAbilityColor(ability)}`,\n        boxShadow: `0 0 10px ${getAbilityColor(ability)}`\n      };\n  */\n\nexport const getFilterColor = (globalStatus: FilterStatus, ownStatus: FilterStatus) =>\n  globalStatus === ownStatus ? FilterColors.BLUE : FilterColors.WHITE;\n\n// Make selected achievement + view glow\nexport const handleGlow = (uuid: string, focusUuid: string) =>\n  uuid === focusUuid ? getAbilityGlow() : undefined;\n\nexport const xpPerLevel = 1000;\n","/**\n * Source Theme for Ace Editor\n * (Modified from cobalt theme in default brace package)\n *\n * Changes includes:\n * 1)\n * Use background highlighting for bracket matching to make it more prominent.\n * Reference: https://github.com/source-academy/cadet-frontend/pull/767\n */\n// @ts-ignore\nfunction theme(acequire, exports, _module) {\n    exports.isDark = true;\n    exports.cssClass = 'ace-source';\n    exports.cssText =\n        '.ace-source .ace_gutter {\\\n                        background: #011e3a;\\\n                        color: rgb(128,145,160)\\\n                        }\\\n                        .ace-source .ace_print-margin {\\\n                        width: 1px;\\\n                        background: #555555\\\n                        }\\\n                        .ace-source {\\\n                        background-color: #002240;\\\n                        color: #FFFFFF\\\n                        }\\\n                        .ace-source .ace_cursor {\\\n                        color: #FFFFFF\\\n                        }\\\n                        .ace-source .ace_marker-layer .ace_selection {\\\n                        background: rgba(179, 101, 57, 0.75)\\\n                        }\\\n                        .ace-source.ace_multiselect .ace_selection.ace_start {\\\n                        box-shadow: 0 0 3px 0px #002240;\\\n                        }\\\n                        .ace-source .ace_marker-layer .ace_step {\\\n                        background: rgb(127, 111, 19)\\\n                        }\\\n                        .ace-source .ace_marker-layer .ace_bracket {\\\n                        background: #090;\\\n                        }\\\n                        .ace-terminal-theme .ace_marker-layer .ace_bracket-start {\\\n                        background: #090;\\\n                        }\\\n                        .ace-terminal-theme .ace_marker-layer .ace_bracket-unmatched {\\\n                        margin: -1px 0 0 -1px;\\\n                        border: 1px solid #900\\\n                        }\\\n                        .ace-source .ace_marker-layer .ace_active-line {\\\n                        background: rgba(0, 0, 0, 0.35)\\\n                        }\\\n                        .ace-source .ace_gutter-active-line {\\\n                        background-color: rgba(0, 0, 0, 0.35)\\\n                        }\\\n                        .ace-source .ace_marker-layer .ace_selected-word {\\\n                        border: 1px solid rgba(179, 101, 57, 0.75)\\\n                        }\\\n                        .ace-source .ace_invisible {\\\n                        color: rgba(255, 255, 255, 0.15)\\\n                        }\\\n                        .ace-source .ace_keyword,\\\n                        .ace-source .ace_meta {\\\n                        color: #FF9D00\\\n                        }\\\n                        .ace-source .ace_constant,\\\n                        .ace-source .ace_constant.ace_character,\\\n                        .ace-source .ace_constant.ace_other,\\\n                        .ace-source .ace_string,\\\n                        .ace-source .ace_string.ace_regexp {\\\n                        color: #FF628C\\\n                        }\\\n                        .ace-source .ace_constant.ace_character.ace_escape {\\\n                        color: #FFFFFF\\\n                        }\\\n                        .ace-source .ace_invalid {\\\n                        color: #F8F8F8;\\\n                        background-color: #800F00\\\n                        }\\\n                        .ace-source .ace_support {\\\n                        color: #80FFBB\\\n                        }\\\n                        .ace-source .ace_support.ace_constant {\\\n                        color: #EB939A\\\n                        }\\\n                        .ace-source .ace_fold {\\\n                        background-color: #FF9D00;\\\n                        border-color: #FFFFFF\\\n                        }\\\n                        .ace-source .ace_support.ace_function {\\\n                        color: #FFFFFF\\\n                        }\\\n                        .ace-source .ace_builtinconsts {\\\n                        color: #FFFFFF\\\n                        }\\\n                        .ace-source .ace_storage {\\\n                        color: #FFEE80\\\n                        }\\\n                        .ace-source .ace_entity {\\\n                        color: #FFDD00\\\n                        }\\\n                        .ace-source .ace_comment {\\\n                        font-style: italic;\\\n                        color: #0088FF\\\n                        }\\\n                        .ace-source .ace_heading,\\\n                        .ace-source .ace_markup.ace_heading {\\\n                        color: #C8E4FD;\\\n                        background-color: #001221\\\n                        }\\\n                        .ace-source .ace_list,\\\n                        .ace-source .ace_markup.ace_list {\\\n                        background-color: #130D26\\\n                        }\\\n                        .ace-source .ace_variable {\\\n                        color: #CCCCCC\\\n                        }\\\n                        .ace-source .ace_variable.ace_language {\\\n                        color: #FF80E1\\\n                        }\\\n                        .ace-source .ace_meta.ace_tag {\\\n                        color: #9EFFFF\\\n                        }\\\n                        .ace-source .ace_indent-guide {\\\n                        background: url(data:image/png;base64,\\\n                        iVBORw0KGgoAAAANSUhEUgAAAAEAAAACCAYAAACZgbY\\\n                        nAAAAEklEQVQImWNgYGBgYHCLSvkPAAP3AgSDTRd4AAAAAElFTkSuQmCC) right repeat-y\\\n                        }\\\n                        .ace_dark.ace-source.ace_editor.ace_autocomplete {\\\n                        background-color: #2c3e50;\\\n                        border-color: #555555;\\\n                        color: white;\\\n                        }\\\n                        .ace_dark.ace-source.ace_editor.ace_autocomplete .ace_completion-highlight {\\\n                        color: #FF9D00;\\\n                        }\\\n                        .ace_dark.ace-source.ace_editor.ace_autocomplete .ace_content .ace_marker-layer .ace_active-line {\\\n                        border-color: #555555;\\\n                        background-color: #495a6b;\\\n                        }\\\n                        .ace_dark.ace-source.ace_editor.ace_autocomplete .ace_content .ace_marker-layer .ace_line-hover {\\\n                        border-color: #555555;\\\n                        background-color: #6b839a;\\\n                        }\\\n                        .ace_dark.ace-source.ace_editor.ace_autocomplete .ace_content.ace_text-layer .ace_rightAlignedText {\\\n                        color: #ced9e0;\\\n                        }\\\n                        .ace_tooltip.ace_doc-tooltip {\\\n                        width: 400px;\\\n                        max-height: 40vh;\\\n                        white-space: normal;\\\n                        overflow: auto;\\\n                        background-color: #495a6b;\\\n                        color: white;\\\n                        border-color:#555555;\\\n                        }\\\n                        .ace_tooltip.ace_doc-tooltip h4 {\\\n                        color: white;\\\n                        margin: 0 0 1em;\\\n                        }\\\n                        .ace_tooltip.ace_doc-tooltip a {\\\n                        color: #48aff0;\\\n                        }\\\n                        ';\n    const dom = acequire('../lib/dom');\n    dom.importCssString(exports.cssText, exports.cssClass);\n}\n// @ts-ignore\nace.define('ace/theme/source', ['require', 'exports', 'module', 'ace/lib/dom'], theme);\n//# sourceMappingURL=source.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SourceDocumentation = void 0;\nconst ext_lib = require(\"./External libraries.json\");\nexports.SourceDocumentation = {\n    builtins: {},\n    ext_lib\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createImportNamespaceSpecifier = exports.createImportDefaultSpecifier = exports.createImportSpecifier = exports.createImportDeclaration = exports.createFunctionDeclaration = exports.createReturnStatement = exports.createVariableDeclaration = exports.createVariableDeclarator = exports.createCallExpression = exports.createIdentifier = exports.createLiteral = void 0;\n// Note that typecasting is done on some of the constructed AST nodes because\n// the ESTree AST node types are not fully aligned with the actual AST that\n// is generated by the Acorn parser. However, the extra/missing properties\n// are unused in the Source interpreter/transpiler. As such, we can safely\n// ignore their existence to make the typing cleaner. The alternative would\n// be to define our own AST node types based off the ESTree AST node types\n// and use our custom AST node types everywhere.\nconst createLiteral = (value, raw) => {\n    return {\n        type: 'Literal',\n        value,\n        raw: (raw !== null && raw !== void 0 ? raw : typeof value === 'string') ? `\"${value}\"` : String(value)\n    };\n};\nexports.createLiteral = createLiteral;\nconst createIdentifier = (name) => {\n    return {\n        type: 'Identifier',\n        name\n    };\n};\nexports.createIdentifier = createIdentifier;\nconst createCallExpression = (functionName, functionArguments) => {\n    return {\n        type: 'CallExpression',\n        callee: (0, exports.createIdentifier)(functionName),\n        arguments: functionArguments\n        // The 'optional' property is typed in ESTree, but does not exist\n        // on SimpleCallExpression nodes in the AST generated by acorn parser.\n    };\n};\nexports.createCallExpression = createCallExpression;\nconst createVariableDeclarator = (id, initialValue = null) => {\n    return {\n        type: 'VariableDeclarator',\n        id,\n        init: initialValue\n    };\n};\nexports.createVariableDeclarator = createVariableDeclarator;\nconst createVariableDeclaration = (declarations, kind) => {\n    return {\n        type: 'VariableDeclaration',\n        declarations,\n        kind\n    };\n};\nexports.createVariableDeclaration = createVariableDeclaration;\nconst createReturnStatement = (argument) => {\n    return {\n        type: 'ReturnStatement',\n        argument\n    };\n};\nexports.createReturnStatement = createReturnStatement;\nconst createFunctionDeclaration = (name, params, body) => {\n    return {\n        type: 'FunctionDeclaration',\n        expression: false,\n        generator: false,\n        id: {\n            type: 'Identifier',\n            name\n        },\n        params,\n        body: {\n            type: 'BlockStatement',\n            body\n        }\n        // The 'expression' property is not typed in ESTree, but it exists\n        // on FunctionDeclaration nodes in the AST generated by acorn parser.\n    };\n};\nexports.createFunctionDeclaration = createFunctionDeclaration;\nconst createImportDeclaration = (specifiers, source) => {\n    return {\n        type: 'ImportDeclaration',\n        specifiers,\n        source\n    };\n};\nexports.createImportDeclaration = createImportDeclaration;\nconst createImportSpecifier = (local, imported) => {\n    return {\n        type: 'ImportSpecifier',\n        local,\n        imported\n    };\n};\nexports.createImportSpecifier = createImportSpecifier;\nconst createImportDefaultSpecifier = (local) => {\n    return {\n        type: 'ImportDefaultSpecifier',\n        local\n    };\n};\nexports.createImportDefaultSpecifier = createImportDefaultSpecifier;\nconst createImportNamespaceSpecifier = (local) => {\n    return {\n        type: 'ImportNamespaceSpecifier',\n        local\n    };\n};\nexports.createImportNamespaceSpecifier = createImportNamespaceSpecifier;\n//# sourceMappingURL=baseConstructors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isImportDeclaration = exports.isDeclaration = exports.isStatement = exports.isModuleDeclaration = exports.isDirective = void 0;\n// It is necessary to write this type guard like this as the 'type' of both\n// 'Directive' & 'ExpressionStatement' is 'ExpressionStatement'.\n//\n// export interface Directive extends BaseNode {\n//   type: \"ExpressionStatement\";\n//   expression: Literal;\n//   directive: string;\n// }\n//\n// export interface ExpressionStatement extends BaseStatement {\n//   type: \"ExpressionStatement\";\n//   expression: Expression;\n// }\n//\n// As such, we check whether the 'directive' property exists on the object\n// instead in order to differentiate between the two.\nconst isDirective = (node) => {\n    return 'directive' in node;\n};\nexports.isDirective = isDirective;\nconst isModuleDeclaration = (node) => {\n    return [\n        'ImportDeclaration',\n        'ExportNamedDeclaration',\n        'ExportDefaultDeclaration',\n        'ExportAllDeclaration'\n    ].includes(node.type);\n};\nexports.isModuleDeclaration = isModuleDeclaration;\nconst isStatement = (node) => {\n    return !(0, exports.isDirective)(node) && !(0, exports.isModuleDeclaration)(node);\n};\nexports.isStatement = isStatement;\nfunction isDeclaration(node) {\n    // export type Declaration =\n    //       FunctionDeclaration | VariableDeclaration | ClassDeclaration;\n    return (node.type === 'VariableDeclaration' ||\n        node.type === 'FunctionDeclaration' ||\n        node.type === 'ClassDeclaration');\n}\nexports.isDeclaration = isDeclaration;\nfunction isImportDeclaration(node) {\n    return node.type === 'ImportDeclaration';\n}\nexports.isImportDeclaration = isImportDeclaration;\n//# sourceMappingURL=typeGuards.js.map","\"use strict\";\n/* eslint-disable @typescript-eslint/no-unused-vars */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolvedErrorPromise = exports.determineVariant = void 0;\n// Context Utils\n/**\n * Small function to determine the variant to be used\n * by a program, as both context and options can have\n * a variant. The variant provided in options will\n * have precedence over the variant provided in context.\n *\n * @param context The context of the program.\n * @param options Options to be used when\n *                running the program.\n *\n * @returns The variant that the program is to be run in\n */\nfunction determineVariant(context, options) {\n    if (options.variant) {\n        return options.variant;\n    }\n    else {\n        return context.variant;\n    }\n}\nexports.determineVariant = determineVariant;\nexports.resolvedErrorPromise = Promise.resolve({ status: 'error' });\n//# sourceMappingURL=utils.js.map","import { Classes } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { Converter } from 'showdown';\n\ntype MarkdownProps = {\n  className?: string;\n  content: string;\n  openLinksInNewWindow?: boolean;\n  simplifiedAutoLink?: boolean;\n  strikethrough?: boolean;\n  tasklists?: boolean;\n};\n\nconst Markdown: React.FC<MarkdownProps> = props => {\n  const converter = new Converter({\n    tables: true,\n    simplifiedAutoLink: props.simplifiedAutoLink,\n    strikethrough: props.strikethrough,\n    tasklists: props.tasklists,\n    openLinksInNewWindow: props.openLinksInNewWindow\n  });\n\n  return (\n    <div\n      className={classNames(props.className ? props.className : 'md', Classes.RUNNING_TEXT)}\n      dangerouslySetInnerHTML={{ __html: converter.makeHtml(props.content) }}\n    />\n  );\n};\n\nexport default React.memo(Markdown);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ModeSelector = exports.HighlightRulesSelector = void 0;\nconst types_1 = require(\"../../../types\");\nconst docTooltip_1 = require(\"../docTooltip\");\n/* tslint:disable */\n/**\n * Source Mode for Ace Editor\n * (Modified from javascript mode in default brace package)\n * The link to the original JavaScript mode can be found here:\n * https://github.com/ajaxorg/ace-builds/blob/master/src/mode-javascript.js\n *\n * Changes includes:\n * 1) change code styles so that it passes tslint test\n * 2) refactor some code to ES2015 class syntax\n * 3) Encapsulate the orginal mode and higlightrules in two selectors so as to change according to source chapter\n * 4) changed regex to mark certain operators in pink\n * 5) use SourceDocumentation to include all library functions and constants from source\n * 6) include all external libraries\n */\nfunction HighlightRulesSelector(id, variant, external = 'NONE', externalLibraries = []) {\n    // @ts-ignore\n    function _SourceHighlightRules(acequire, exports, _module) {\n        'use strict';\n        const oop = acequire('../lib/oop');\n        const DocCommentHighlightRules = acequire('./doc_comment_highlight_rules').DocCommentHighlightRules;\n        const TextHighlightRules = acequire('./text_highlight_rules').TextHighlightRules;\n        const identifierRegex = '[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*';\n        const chapter = id.toString() + '_' + variant;\n        const builtin_lib = docTooltip_1.SourceDocumentation.builtins[chapter];\n        function addFromBuiltinLibrary(meta) {\n            if (builtin_lib === null) {\n                return '';\n            }\n            let func = '';\n            for (const name in builtin_lib) {\n                if (builtin_lib[name]['meta'] === meta) {\n                    func += '|' + name;\n                }\n            }\n            return func;\n        }\n        function addFromExternalLibrary(meta) {\n            if (externalLibraries === null) {\n                return '';\n            }\n            let func = '';\n            externalLibraries.forEach(node => {\n                if (node.meta === meta) {\n                    func += '|' + node.caption;\n                }\n            });\n            return func;\n        }\n        function getAllNames(meta) {\n            const concat = addFromBuiltinLibrary(meta) + addFromExternalLibrary(meta);\n            return concat.substr(1);\n        }\n        const ChapterKeywordSelector = () => {\n            const output = [];\n            if (id >= 1) {\n                output.push('import', 'const', 'else', 'if', 'return', 'function', 'debugger');\n            }\n            if (id >= 3) {\n                output.push('while', 'for', 'break', 'continue', 'let');\n            }\n            return output.join('|');\n        };\n        // @ts-ignore\n        const SourceHighlightRules = function (options) {\n            // @ts-ignore\n            const keywordMapper = this.createKeywordMapper({\n                builtinconsts: getAllNames('const'),\n                'constant.language.boolean': 'true|false',\n                'constant.language.null': 'null',\n                keyword: ChapterKeywordSelector(),\n                'storage.type': 'const|let|function',\n                'support.function': getAllNames('func'),\n                'variable.language': 'this|arguments|' + // Pseudo\n                    'var|yield|async|await|with|switch|throw|try|eval|' + // forbidden words\n                    'class|enum|extends|super|export|implements|private|public|' +\n                    'interface|package|protected|static|in|of|instanceof|new|' +\n                    'case|catch|default|delete|do|finally|'\n            }, 'identifier');\n            // original keywordBeforeRegex = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n            const keywordBeforeRegex = 'else|return';\n            const escapedRegex = '\\\\\\\\(?:x[0-9a-fA-F]{2}|' + // hex\n                'u[0-9a-fA-F]{4}|' + // unicode\n                'u{[0-9a-fA-F]{1,6}}|' + // es6 unicode\n                '[0-2][0-7]{0,2}|' + // oct\n                '3[0-7][0-7]?|' + // oct\n                '[4-7][0-7]?|' + //oct\n                '.)';\n            // @ts-ignore\n            this.$rules = {\n                no_regex: [\n                    DocCommentHighlightRules.getStartRule('doc-start'),\n                    comments('no_regex'),\n                    {\n                        token: 'string',\n                        regex: \"'(?=.)\",\n                        next: 'qstring'\n                    },\n                    {\n                        token: 'string',\n                        regex: '\"(?=.)',\n                        next: 'qqstring'\n                    },\n                    {\n                        token: 'constant.numeric',\n                        regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n                    },\n                    {\n                        token: 'constant.numeric',\n                        regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n                    },\n                    {\n                        token: [\n                            'storage.type',\n                            'punctuation.operator',\n                            'support.function',\n                            'punctuation.operator',\n                            'entity.name.function',\n                            'text',\n                            'keyword.operator'\n                        ],\n                        regex: '(' + identifierRegex + ')(\\\\.)(prototype)(\\\\.)(' + identifierRegex + ')(\\\\s*)(=)',\n                        next: 'function_arguments'\n                    },\n                    {\n                        token: [\n                            'storage.type',\n                            'punctuation.operator',\n                            'entity.name.function',\n                            'text',\n                            'keyword.operator',\n                            'text',\n                            'storage.type',\n                            'text',\n                            'paren.lparen'\n                        ],\n                        regex: '(' +\n                            identifierRegex +\n                            ')(\\\\.)(' +\n                            identifierRegex +\n                            ')(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()',\n                        next: 'function_arguments'\n                    },\n                    {\n                        token: [\n                            'entity.name.function',\n                            'text',\n                            'keyword.operator',\n                            'text',\n                            'storage.type',\n                            'text',\n                            'paren.lparen'\n                        ],\n                        regex: '(' + identifierRegex + ')(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()',\n                        next: 'function_arguments'\n                    },\n                    {\n                        token: [\n                            'storage.type',\n                            'punctuation.operator',\n                            'entity.name.function',\n                            'text',\n                            'keyword.operator',\n                            'text',\n                            'storage.type',\n                            'text',\n                            'entity.name.function',\n                            'text',\n                            'paren.lparen'\n                        ],\n                        regex: '(' +\n                            identifierRegex +\n                            ')(\\\\.)(' +\n                            identifierRegex +\n                            ')(\\\\s*)(=)(\\\\s*)(function)(\\\\s+)(\\\\w+)(\\\\s*)(\\\\()',\n                        next: 'function_arguments'\n                    },\n                    {\n                        token: ['storage.type', 'text', 'entity.name.function', 'text', 'paren.lparen'],\n                        regex: '(function)(\\\\s+)(' + identifierRegex + ')(\\\\s*)(\\\\()',\n                        next: 'function_arguments'\n                    },\n                    {\n                        token: [\n                            'entity.name.function',\n                            'text',\n                            'punctuation.operator',\n                            'text',\n                            'storage.type',\n                            'text',\n                            'paren.lparen'\n                        ],\n                        regex: '(' + identifierRegex + ')(\\\\s*)(:)(\\\\s*)(function)(\\\\s*)(\\\\()',\n                        next: 'function_arguments'\n                    },\n                    {\n                        token: ['text', 'text', 'storage.type', 'text', 'paren.lparen'],\n                        regex: '(:)(\\\\s*)(function)(\\\\s*)(\\\\()',\n                        next: 'function_arguments'\n                    },\n                    {\n                        token: 'keyword',\n                        regex: 'from(?=\\\\s*(\\'|\"))'\n                    },\n                    {\n                        token: 'keyword',\n                        regex: '(?:' + keywordBeforeRegex + ')\\\\b',\n                        next: 'start'\n                    },\n                    {\n                        token: ['support.constant'],\n                        regex: /that\\b/\n                    },\n                    {\n                        token: ['variable.language'],\n                        regex: /\\.{3}|--+|\\+\\++|\\^|(==|!=)[^=]|[$%&*+\\-~\\/^]=+|[^&]*&[^&]|[^\\|]*\\|[^\\|]/\n                    },\n                    {\n                        token: keywordMapper,\n                        regex: identifierRegex\n                    },\n                    {\n                        token: 'variable.language',\n                        regex: /[.](?![.])/,\n                        next: 'property'\n                    },\n                    {\n                        token: 'storage.type',\n                        regex: /=>/\n                    },\n                    {\n                        token: 'keyword.operator',\n                        regex: /===|=|!==|<+=?|>+=?|!|&&|\\|\\||[%*+-\\/]/,\n                        next: 'start'\n                    },\n                    {\n                        token: 'punctuation.operator',\n                        regex: /[?:,;.]/,\n                        next: 'start'\n                    },\n                    {\n                        token: 'paren.lparen',\n                        regex: /[\\[({]/,\n                        next: 'start'\n                    },\n                    {\n                        token: 'paren.rparen',\n                        regex: /[\\])}]/\n                    },\n                    {\n                        token: 'comment',\n                        regex: /^#!.*$/\n                    }\n                ],\n                property: [\n                    {\n                        token: 'text',\n                        regex: '\\\\s+'\n                    },\n                    {\n                        token: [\n                            'storage.type',\n                            'punctuation.operator',\n                            'entity.name.function',\n                            'text',\n                            'keyword.operator',\n                            'text',\n                            'storage.type',\n                            'text',\n                            'entity.name.function',\n                            'text',\n                            'paren.lparen'\n                        ],\n                        regex: '(' +\n                            identifierRegex +\n                            ')(\\\\.)(' +\n                            identifierRegex +\n                            ')(\\\\s*)(=)(\\\\s*)(function)(?:(\\\\s+)(\\\\w+))?(\\\\s*)(\\\\()',\n                        next: 'function_arguments'\n                    },\n                    {\n                        token: 'punctuation.operator',\n                        regex: /[.](?![.])/\n                    },\n                    {\n                        token: 'variable.language',\n                        regex: /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n                    },\n                    {\n                        token: 'variable.language.dom',\n                        regex: /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n                    },\n                    {\n                        token: 'support.constant',\n                        regex: /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n                    },\n                    {\n                        token: 'identifier',\n                        regex: identifierRegex\n                    },\n                    {\n                        regex: '',\n                        token: 'empty',\n                        next: 'no_regex'\n                    }\n                ],\n                start: [\n                    DocCommentHighlightRules.getStartRule('doc-start'),\n                    comments('start'),\n                    {\n                        token: 'string.regexp',\n                        regex: '\\\\/',\n                        next: 'regex'\n                    },\n                    {\n                        token: 'text',\n                        regex: '\\\\s+|^$',\n                        next: 'start'\n                    },\n                    {\n                        token: 'empty',\n                        regex: '',\n                        next: 'no_regex'\n                    }\n                ],\n                regex: [\n                    {\n                        token: 'regexp.keyword.operator',\n                        regex: '\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)'\n                    },\n                    {\n                        token: 'string.regexp',\n                        regex: '/[sxngimy]*',\n                        next: 'no_regex'\n                    },\n                    {\n                        token: 'invalid',\n                        regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n                    },\n                    {\n                        token: 'constant.language.escape',\n                        regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n                    },\n                    {\n                        token: 'constant.language.delimiter',\n                        regex: /\\|/\n                    },\n                    {\n                        token: 'constant.language.escape',\n                        regex: /\\[\\^?/,\n                        next: 'regex_character_class'\n                    },\n                    {\n                        token: 'empty',\n                        regex: '$',\n                        next: 'no_regex'\n                    },\n                    {\n                        defaultToken: 'string.regexp'\n                    }\n                ],\n                regex_character_class: [\n                    {\n                        token: 'regexp.charclass.keyword.operator',\n                        regex: '\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)'\n                    },\n                    {\n                        token: 'constant.language.escape',\n                        regex: ']',\n                        next: 'regex'\n                    },\n                    {\n                        token: 'constant.language.escape',\n                        regex: '-'\n                    },\n                    {\n                        token: 'empty',\n                        regex: '$',\n                        next: 'no_regex'\n                    },\n                    {\n                        defaultToken: 'string.regexp.charachterclass'\n                    }\n                ],\n                function_arguments: [\n                    {\n                        token: 'variable.parameter',\n                        regex: identifierRegex\n                    },\n                    {\n                        token: 'punctuation.operator',\n                        regex: '[, ]+'\n                    },\n                    {\n                        token: 'punctuation.operator',\n                        regex: '$'\n                    },\n                    {\n                        token: 'empty',\n                        regex: '',\n                        next: 'no_regex'\n                    }\n                ],\n                qqstring: [\n                    {\n                        token: 'constant.language.escape',\n                        regex: escapedRegex\n                    },\n                    {\n                        token: 'string',\n                        regex: '\\\\\\\\$',\n                        consumeLineEnd: true\n                    },\n                    {\n                        token: 'string',\n                        regex: '\"|$',\n                        next: 'no_regex'\n                    },\n                    {\n                        defaultToken: 'string'\n                    }\n                ],\n                qstring: [\n                    {\n                        token: 'constant.language.escape',\n                        regex: escapedRegex\n                    },\n                    {\n                        token: 'string',\n                        regex: '\\\\\\\\$',\n                        consumeLineEnd: true\n                    },\n                    {\n                        token: 'string',\n                        regex: \"'|$\",\n                        next: 'no_regex'\n                    },\n                    {\n                        defaultToken: 'string'\n                    }\n                ]\n            };\n            if (!options || !options.noES6) {\n                // @ts-ignore\n                this.$rules.no_regex.unshift({\n                    regex: '[{}]',\n                    // @ts-ignore\n                    onMatch: function (val, state, stack) {\n                        this.next = val == '{' ? this.nextState : '';\n                        if (val == '{' && stack.length) {\n                            stack.unshift('start', state);\n                        }\n                        else if (val == '}' && stack.length) {\n                            stack.shift();\n                            this.next = stack.shift();\n                            if (this.next.indexOf('string') != -1 || this.next.indexOf('jsx') != -1)\n                                return 'paren.quasi.end';\n                        }\n                        return val == '{' ? 'paren.lparen' : 'paren.rparen';\n                    },\n                    nextState: 'start'\n                }, {\n                    token: 'string.quasi.start',\n                    regex: /`/,\n                    push: [\n                        {\n                            token: 'constant.language.escape',\n                            regex: escapedRegex\n                        },\n                        {\n                            token: 'paren.quasi.start',\n                            regex: /\\${/,\n                            push: 'start'\n                        },\n                        {\n                            token: 'string.quasi.end',\n                            regex: /`/,\n                            next: 'pop'\n                        },\n                        {\n                            defaultToken: 'string.quasi'\n                        }\n                    ]\n                });\n                if (!options || options.jsx != false)\n                    // @ts-ignore\n                    JSX.call(this);\n            }\n            // @ts-ignore\n            this.embedRules(DocCommentHighlightRules, 'doc-', [\n                DocCommentHighlightRules.getEndRule('no_regex')\n            ]);\n            // @ts-ignore\n            this.normalizeRules();\n        };\n        oop.inherits(SourceHighlightRules, TextHighlightRules);\n        function JSX() {\n            const tagRegex = identifierRegex.replace('\\\\d', '\\\\d\\\\-');\n            const jsxTag = {\n                // @ts-ignore\n                onMatch: function (val, state, stack) {\n                    const offset = val.charAt(1) == '/' ? 2 : 1;\n                    if (offset == 1) {\n                        if (state != this.nextState)\n                            stack.unshift(this.next, this.nextState, 0);\n                        else\n                            stack.unshift(this.next);\n                        stack[2]++;\n                    }\n                    else if (offset == 2) {\n                        if (state == this.nextState) {\n                            stack[1]--;\n                            if (!stack[1] || stack[1] < 0) {\n                                stack.shift();\n                                stack.shift();\n                            }\n                        }\n                    }\n                    return [\n                        {\n                            type: 'meta.tag.punctuation.' + (offset == 1 ? '' : 'end-') + 'tag-open.xml',\n                            value: val.slice(0, offset)\n                        },\n                        {\n                            type: 'meta.tag.tag-name.xml',\n                            value: val.substr(offset)\n                        }\n                    ];\n                },\n                regex: '</?' + tagRegex + '',\n                next: 'jsxAttributes',\n                nextState: 'jsx'\n            };\n            // @ts-ignore\n            this.$rules.start.unshift(jsxTag);\n            const jsxJsRule = {\n                regex: '{',\n                token: 'paren.quasi.start',\n                push: 'start'\n            };\n            // @ts-ignore\n            this.$rules.jsx = [jsxJsRule, jsxTag, { include: 'reference' }, { defaultToken: 'string' }];\n            // @ts-ignore\n            this.$rules.jsxAttributes = [\n                {\n                    token: 'meta.tag.punctuation.tag-close.xml',\n                    regex: '/?>',\n                    // @ts-ignore\n                    onMatch: function (value, currentState, stack) {\n                        if (currentState == stack[0])\n                            stack.shift();\n                        if (value.length == 2) {\n                            if (stack[0] == this.nextState)\n                                stack[1]--;\n                            if (!stack[1] || stack[1] < 0) {\n                                stack.splice(0, 2);\n                            }\n                        }\n                        // @ts-ignore\n                        this.next = stack[0] || 'start';\n                        return [{ type: this.token, value: value }];\n                    },\n                    nextState: 'jsx'\n                },\n                jsxJsRule,\n                comments('jsxAttributes'),\n                {\n                    token: 'entity.other.attribute-name.xml',\n                    regex: tagRegex\n                },\n                {\n                    token: 'keyword.operator.attribute-equals.xml',\n                    regex: '='\n                },\n                {\n                    token: 'text.tag-whitespace.xml',\n                    regex: '\\\\s+'\n                },\n                {\n                    token: 'string.attribute-value.xml',\n                    regex: \"'\",\n                    stateName: 'jsx_attr_q',\n                    push: [\n                        { token: 'string.attribute-value.xml', regex: \"'\", next: 'pop' },\n                        { include: 'reference' },\n                        { defaultToken: 'string.attribute-value.xml' }\n                    ]\n                },\n                {\n                    token: 'string.attribute-value.xml',\n                    regex: '\"',\n                    stateName: 'jsx_attr_qq',\n                    push: [\n                        { token: 'string.attribute-value.xml', regex: '\"', next: 'pop' },\n                        { include: 'reference' },\n                        { defaultToken: 'string.attribute-value.xml' }\n                    ]\n                },\n                jsxTag\n            ];\n            // @ts-ignore\n            this.$rules.reference = [\n                {\n                    token: 'constant.language.escape.reference.xml',\n                    regex: '(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)'\n                }\n            ];\n        }\n        // @ts-ignore\n        function comments(next) {\n            return [\n                {\n                    token: 'comment',\n                    regex: /\\/\\*/,\n                    next: [\n                        DocCommentHighlightRules.getTagRule(),\n                        { token: 'comment', regex: '\\\\*\\\\/', next: next || 'pop' },\n                        { defaultToken: 'comment', caseInsensitive: true }\n                    ]\n                },\n                {\n                    token: 'comment',\n                    regex: '\\\\/\\\\/',\n                    next: [\n                        DocCommentHighlightRules.getTagRule(),\n                        { token: 'comment', regex: '$|^', next: next || 'pop' },\n                        { defaultToken: 'comment', caseInsensitive: true }\n                    ]\n                }\n            ];\n        }\n        exports.SourceHighlightRules = SourceHighlightRules;\n    }\n    const name = id.toString() + variant + external;\n    // @ts-ignore\n    ace.define('ace/mode/source_highlight_rules' + name, [\n        'require',\n        'exports',\n        'module',\n        'ace/lib/oop',\n        'ace/mode/doc_comment_highlight_rules',\n        'ace/mode/text_highlight_rules'\n    ], _SourceHighlightRules);\n}\nexports.HighlightRulesSelector = HighlightRulesSelector;\n//source mode\nfunction ModeSelector(id, variant = types_1.Variant.DEFAULT, external = 'NONE') {\n    const name = id.toString() + variant + external;\n    // @ts-ignore\n    function _Mode(acequire, exports, _module) {\n        'use strict';\n        const oop = acequire('../lib/oop');\n        const TextMode = acequire('./text').Mode;\n        const SourceHighlightRules = acequire('./source_highlight_rules' + name).SourceHighlightRules;\n        const MatchingBraceOutdent = acequire('./matching_brace_outdent').MatchingBraceOutdent;\n        // For JSHint background worker\n        // const WorkerClient = acequire('../worker/worker_client').WorkerClient\n        const CstyleBehaviour = acequire('./behaviour/cstyle').CstyleBehaviour;\n        const CStyleFoldMode = acequire('./folding/cstyle').FoldMode;\n        const Mode = function () {\n            // @ts-ignore\n            this.HighlightRules = SourceHighlightRules;\n            // @ts-ignore\n            this.$outdent = new MatchingBraceOutdent();\n            // @ts-ignore\n            this.$behaviour = new CstyleBehaviour();\n            // @ts-ignore\n            this.foldingRules = new CStyleFoldMode();\n        };\n        oop.inherits(Mode, TextMode);\n        (function () {\n            // @ts-ignore\n            this.lineCommentStart = '//';\n            // @ts-ignore\n            this.blockComment = { start: '/*', end: '*/' };\n            // @ts-ignore\n            this.$quotes = { '\"': '\"', \"'\": \"'\", '`': '`' };\n            // @ts-ignore\n            this.getNextLineIndent = function (state, line, tab) {\n                let indent = this.$getIndent(line);\n                const tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n                const tokens = tokenizedLine.tokens;\n                const endState = tokenizedLine.state;\n                if (tokens.length && tokens[tokens.length - 1].type == 'comment') {\n                    return indent;\n                }\n                if (state == 'start' || state == 'no_regex') {\n                    const match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n                    if (match) {\n                        indent += tab;\n                    }\n                }\n                else if (state == 'doc-start') {\n                    if (endState == 'start' || endState == 'no_regex') {\n                        return '';\n                    }\n                    const match = line.match(/^\\s*(\\/?)\\*/);\n                    if (match) {\n                        if (match[1]) {\n                            indent += ' ';\n                        }\n                        indent += '* ';\n                    }\n                }\n                return indent;\n            };\n            // @ts-ignore\n            this.checkOutdent = function (state, line, input) {\n                return this.$outdent.checkOutdent(line, input);\n            };\n            // @ts-ignore\n            this.autoOutdent = function (state, doc, row) {\n                this.$outdent.autoOutdent(doc, row);\n            };\n            // This is the JSHint background worker. Disabled because it is of little\n            // utility to Source, and produced many false positives.\n            // If this is ever enabled again: the *frontend* needs to provide the URL of\n            // the worker to Ace:\n            //\n            // import jsWorkerUrl from \"file-loader!ace-builds/src-noconflict/javascript_worker\";\n            // ace.config.setModuleUrl(\"ace/mode/javascript_worker\", jsWorkerUrl)\n            //\n            // Note: some lint disabling may be needed for the above\n            // // @ts-ignore\n            // this.createWorker = function (session) {\n            //   const worker = new WorkerClient([\"ace\"], \"ace/mode/javascript_worker\", \"JavaScriptWorker\");\n            //   worker.attachToDocument(session.getDocument())\n            //\n            //   // @ts-ignore\n            //   worker.on('annotate', function (results) {\n            //     session.setAnnotations(results.data)\n            //   })\n            //\n            //   worker.on('terminate', function () {\n            //     session.clearAnnotations()\n            //   })\n            //\n            //   return worker\n            // }\n            // @ts-ignore\n            this.$id = 'ace/mode/source' + name;\n        }.call(Mode.prototype));\n        exports.Mode = Mode;\n    }\n    // @ts-ignore\n    ace.define('ace/mode/source' + name, [\n        'require',\n        'exports',\n        'module',\n        'ace/lib/oop',\n        'ace/mode/text',\n        'ace/mode/source_highlight_rules1',\n        'ace/mode/matching_brace_outdent',\n        'ace/worker/worker_client',\n        'ace/mode/behaviour/cstyle',\n        'ace/mode/folding/cstyle'\n    ], _Mode);\n}\nexports.ModeSelector = ModeSelector;\n//# sourceMappingURL=source.js.map","/** history is created and exported here instead of in src/index.tsx as jest\n * would otherwise throw an error. See: https://stackoverflow.com/a/42611909/6910451\n */\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import { NonIdealState, Spinner } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Octokit } from '@octokit/rest';\nimport { GetResponseDataTypeFromEndpointMethod } from '@octokit/types';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { useTypedSelector } from 'src/commons/utils/Hooks';\n\nimport ContentDisplay from '../../commons/ContentDisplay';\nimport { MissionRepoData } from '../../commons/githubAssessments/GitHubMissionTypes';\nimport GitHubAssessmentsNavigationBar from '../../commons/navigationBar/subcomponents/GitHubAssessmentsNavigationBar';\nimport { showWarningMessage } from '../../commons/utils/NotificationsHelper';\nimport { assessmentTypeLink } from '../../commons/utils/ParamParseHelper';\nimport GitHubAssessmentListing from './GitHubAssessmentListing';\nimport GitHubAssessmentWorkspaceContainer from './GitHubAssessmentWorkspaceContainer';\nimport GitHubClassroomWelcome from './GitHubClassroomWelcome';\n\ntype DispatchProps = {\n  handleGitHubLogIn: () => void;\n  handleGitHubLogOut: () => void;\n};\n\n/**\n * A page that lists the missions available to the authenticated user.\n * This page should only be reachable if using a GitHub-hosted deployment.\n */\nconst GitHubClassroom: React.FC<DispatchProps> = props => {\n  const location = useLocation<{\n    courses: string[] | undefined;\n    assessmentTypeOverviews: GHAssessmentTypeOverview[] | undefined;\n    selectedCourse: string | undefined;\n  }>();\n  const octokit: Octokit | undefined = useTypedSelector(\n    store => store.session.githubOctokitObject\n  ).octokit;\n  const [courses, setCourses] = useState<string[] | undefined>(location.state?.courses);\n  const [selectedCourse, setSelectedCourse] = useState<string>(\n    location.state?.selectedCourse || ''\n  );\n  const [assessmentTypeOverviews, setAssessmentTypeOverviews] = useState<\n    GHAssessmentTypeOverview[] | undefined\n  >(location.state?.assessmentTypeOverviews);\n  const types = assessmentTypeOverviews?.map(overview => overview.typeName);\n\n  useEffect(() => {\n    if (octokit === undefined) {\n      return;\n    }\n\n    if (!courses) {\n      fetchCourses(octokit, setCourses, setSelectedCourse, setAssessmentTypeOverviews);\n    }\n  }, [courses, octokit]);\n\n  const changeCourseHandler = React.useCallback(\n    (e: any) => {\n      if (octokit === undefined) {\n        return;\n      }\n\n      fetchAssessmentOverviews(octokit, e.target.innerText, setAssessmentTypeOverviews);\n      setSelectedCourse(e.target.innerText);\n    },\n    [octokit, setSelectedCourse, setAssessmentTypeOverviews]\n  );\n\n  const refreshAssessmentOverviews = () => {\n    if (octokit === undefined) {\n      return;\n    }\n\n    fetchAssessmentOverviews(octokit, selectedCourse, setAssessmentTypeOverviews);\n  };\n\n  const redirectToLogin = () => <Redirect to=\"/githubassessments/login\" />;\n  const redirectToAssessments = () => (\n    <Redirect\n      to={{\n        // Types should exist whenever we redirect to assessments as this redirect is only called\n        // when a course exists. Unless the course.json is configured wrongly.\n        pathname: `/githubassessments/${assessmentTypeLink(types ? types[0] : 'welcome')}`,\n        state: {\n          courses: courses,\n          assessmentTypeOverviews: assessmentTypeOverviews,\n          selectedCourse: selectedCourse\n        }\n      }}\n    />\n  );\n\n  return (\n    <div className=\"Academy\" style={{ overflow: 'hidden' }}>\n      <GitHubAssessmentsNavigationBar\n        changeCourseHandler={changeCourseHandler}\n        handleGitHubLogIn={props.handleGitHubLogIn}\n        handleGitHubLogOut={() => {\n          props.handleGitHubLogOut();\n          setCourses(undefined);\n          setAssessmentTypeOverviews(undefined);\n          setSelectedCourse('');\n        }}\n        octokit={octokit}\n        courses={courses}\n        selectedCourse={selectedCourse}\n        types={types}\n        assessmentTypeOverviews={assessmentTypeOverviews}\n      />\n      <Switch>\n        <Route\n          path=\"/githubassessments/login\"\n          render={() => {\n            return octokit && (!courses || (courses.length > 0 && !assessmentTypeOverviews)) ? (\n              <ContentDisplay\n                display={<NonIdealState description=\"Loading...\" icon={<Spinner />} />}\n                loadContentDispatch={() => {}}\n              />\n            ) : octokit && courses && courses.length === 0 ? (\n              <Redirect to=\"/githubassessments/welcome\" />\n            ) : octokit ? (\n              redirectToAssessments()\n            ) : (\n              <ContentDisplay\n                display={\n                  <NonIdealState\n                    description=\"Please sign in to GitHub.\"\n                    icon={IconNames.WARNING_SIGN}\n                  />\n                }\n                loadContentDispatch={() => {}}\n              />\n            );\n          }}\n        />\n        <Route\n          path=\"/githubassessments/welcome\"\n          component={() => (octokit ? <GitHubClassroomWelcome /> : redirectToLogin())}\n        />\n        <Route path=\"/githubassessments/editor\" component={GitHubAssessmentWorkspaceContainer} />\n        {octokit\n          ? types?.map((type, idx) => {\n              const filteredAssessments = assessmentTypeOverviews\n                ? assessmentTypeOverviews[idx].assessments\n                : undefined;\n              return (\n                <Route\n                  path={`/githubassessments/${assessmentTypeLink(type)}`}\n                  render={() => (\n                    <GitHubAssessmentListing\n                      assessmentOverviews={filteredAssessments}\n                      refreshAssessmentOverviews={refreshAssessmentOverviews}\n                    />\n                  )}\n                  key={idx}\n                />\n              );\n            })\n          : null}\n        <Route\n          render={\n            octokit && courses && courses.length > 0 ? redirectToAssessments : redirectToLogin\n          }\n        />\n      </Switch>\n    </div>\n  );\n};\n\n/**\n * Retrieves list of organizations for the authenticated user.\n *\n * @param octokit The Octokit instance for the authenticated user\n * @param setCourses The React setter function for an array of courses string names\n * @param setSelectedCourse The React setter function for string name of selected course\n */\nasync function fetchCourses(\n  octokit: Octokit,\n  setCourses: (courses: string[]) => void,\n  setSelectedCourse: (course: string) => void,\n  setAssessmentTypeOverviews: (assessmentTypeOverviews: GHAssessmentTypeOverview[]) => void\n) {\n  const courses: string[] = [];\n  const results = (await octokit.orgs.listForAuthenticatedUser({ per_page: 100 })).data;\n  const orgs = results.filter(org => org.login.includes('source-academy-course')); // filter only organisations with 'source-academy-course' in name\n  orgs.forEach(org => {\n    courses.push(org.login.replace('source-academy-course-', ''));\n  });\n  setCourses(courses);\n  if (courses.length > 0) {\n    setSelectedCourse(courses[0]);\n    fetchAssessmentOverviews(octokit, courses[0], setAssessmentTypeOverviews);\n  }\n}\n\nexport type GHAssessmentTypeOverview = {\n  typeName: string;\n  assessments: GHAssessmentOverview[];\n};\n\nexport type GHAssessmentOverview = {\n  title: string;\n  coverImage: string;\n  webSummary: string;\n  missionRepoData: MissionRepoData;\n  dueDate: Date;\n  link?: string;\n};\n\ntype GitHubAssessment = {\n  id: string;\n  title: string;\n  openAt: string;\n  closeAt: string;\n  published: string;\n  coverImage: string;\n  shortSummary: string;\n  acceptLink: string;\n  repoPrefix: string;\n};\n\nasync function fetchAssessmentOverviews(\n  octokit: Octokit,\n  selectedCourse: string,\n  setAssessmentTypeOverviews: (assessmentTypeOverviews: GHAssessmentTypeOverview[]) => void\n) {\n  const userLogin = (await octokit.users.getAuthenticated()).data.login;\n  const orgLogin = 'source-academy-course-'.concat(selectedCourse);\n  type ListForAuthenticatedUserData = GetResponseDataTypeFromEndpointMethod<\n    typeof octokit.repos.listForAuthenticatedUser\n  >;\n  const userRepos: ListForAuthenticatedUserData = (\n    await octokit.repos.listForAuthenticatedUser({ per_page: 100 })\n  ).data;\n  const courseRepos = userRepos.filter(repo => repo.owner!.login === orgLogin);\n  const courseInfoRepo = courseRepos.find(repo => repo.name.includes('course-info'));\n\n  if (courseInfoRepo === undefined) {\n    showWarningMessage('The course-info repository cannot be located.', 2000);\n    return;\n  }\n\n  const files = (\n    await octokit.repos.getContent({\n      owner: courseInfoRepo.owner!.login,\n      repo: courseInfoRepo.name,\n      path: ''\n    })\n  ).data;\n\n  if (Array.isArray(files)) {\n    if (files.find(file => file.name === 'course-info.json')) {\n      const result = await octokit.repos.getContent({\n        owner: courseInfoRepo.owner!.login,\n        repo: courseInfoRepo.name,\n        path: 'course-info.json'\n      });\n\n      const courseInfo = JSON.parse(Buffer.from((result.data as any).content, 'base64').toString());\n\n      courseInfo.types.forEach((type: { typeName: string; assessments: [GitHubAssessment] }) => {\n        const assessmentOverviews: GHAssessmentOverview[] = [];\n        type.assessments.forEach((assessment: GitHubAssessment) => {\n          if (!assessment.published) {\n            return;\n          }\n\n          const prefixLogin = assessment.repoPrefix + '-' + userLogin;\n          const missionRepo = userRepos.find(repo => repo.name === prefixLogin);\n\n          let createdAt = new Date();\n          let acceptLink = undefined;\n          if (missionRepo === undefined) {\n            acceptLink = assessment.acceptLink;\n          } else {\n            if (missionRepo.created_at !== null) {\n              createdAt = new Date(missionRepo.created_at);\n            }\n          }\n\n          assessmentOverviews.push({\n            title: assessment.title,\n            coverImage: assessment.coverImage,\n            webSummary: assessment.shortSummary,\n            missionRepoData: {\n              repoOwner: courseInfoRepo.owner!.login,\n              repoName: prefixLogin,\n              dateOfCreation: createdAt\n            },\n            dueDate: new Date(assessment.closeAt),\n            link: acceptLink\n          });\n\n          assessmentOverviews.sort((a, b) => (a.dueDate <= b.dueDate ? -1 : 1));\n        });\n        (type as any).assessments = assessmentOverviews;\n      });\n      setAssessmentTypeOverviews(courseInfo.types);\n    } else {\n      showWarningMessage('The course-info.json file cannot be located.', 2000);\n      return;\n    }\n  }\n}\n\nexport default GitHubClassroom;\n","import {\n  Button,\n  Card,\n  Elevation,\n  H4,\n  H6,\n  Icon,\n  NonIdealState,\n  Spinner,\n  Text\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { useMemo } from 'react';\nimport { useResponsive } from 'src/commons/utils/Hooks';\n\nimport defaultCoverImage from '../../assets/default_cover_image.jpg';\nimport ContentDisplay from '../../commons/ContentDisplay';\nimport Markdown from '../../commons/Markdown';\nimport { history } from '../../commons/utils/HistoryHelper';\nimport { GHAssessmentOverview } from './GitHubClassroom';\n\ntype GitHubAssessmentListingProps = {\n  assessmentOverviews?: GHAssessmentOverview[];\n  refreshAssessmentOverviews: () => void;\n};\n\n/**\n * A page that lists the missions available to the authenticated user.\n * This page should only be reachable if using a GitHub-hosted deployment.\n */\nconst GitHubAssessmentListing: React.FC<GitHubAssessmentListingProps> = props => {\n  const { isMobileBreakpoint } = useResponsive();\n\n  let display: JSX.Element;\n\n  const createAssessmentButton = useMemo(\n    () => (\n      <Button icon={IconNames.ADD} onClick={() => history.push(`/githubassessments/editor`)}>\n        Create a New Assessment!\n      </Button>\n    ),\n    []\n  );\n\n  const refreshButton = useMemo(\n    () => (\n      <Button icon={IconNames.REFRESH} onClick={props.refreshAssessmentOverviews}>\n        Refresh Assessments\n      </Button>\n    ),\n    [props.refreshAssessmentOverviews]\n  );\n\n  if (!props.assessmentOverviews) {\n    display = (\n      <>\n        {createAssessmentButton}\n        <NonIdealState description=\"Fetching assessment...\" icon={<Spinner />} />\n      </>\n    );\n  } else if (props.assessmentOverviews.length === 0) {\n    display = (\n      <>\n        {createAssessmentButton}\n        {refreshButton}\n        <NonIdealState title=\"There are no assessments.\" icon={IconNames.FLAME} />\n      </>\n    );\n  } else {\n    // Create cards\n    const cards = props.assessmentOverviews.map(element =>\n      convertAssessmentOverviewToCard(element, isMobileBreakpoint)\n    );\n    display = (\n      <>\n        {createAssessmentButton}\n        {refreshButton}\n        {cards}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"Assessment\" style={{ overflow: 'auto' }}>\n      <ContentDisplay display={display} loadContentDispatch={() => {}} />\n    </div>\n  );\n};\n\n/**\n * Maps from a BrowsableMission object to a JSX card that can be displayed on the Mission Listing.\n *\n * @param missionRepo The BrowsableMission representation of a single mission repository\n * @param isMobileBreakpoint Whether we are using mobile breakpoint\n */\nfunction convertAssessmentOverviewToCard(\n  assessmentOverview: GHAssessmentOverview,\n  isMobileBreakpoint: boolean\n) {\n  const ratio = isMobileBreakpoint ? 5 : 3;\n  const ownerSlashName =\n    assessmentOverview.missionRepoData.repoOwner +\n    '/' +\n    assessmentOverview.missionRepoData.repoName;\n  const dueDate = assessmentOverview.dueDate.toDateString();\n\n  const hasDueDate = new Date(8640000000000000) > assessmentOverview.dueDate;\n  const isOverdue = new Date() > assessmentOverview.dueDate;\n\n  const assessmentNotAccepted = assessmentOverview.link !== undefined;\n  let buttonText = 'Open';\n  let handleClick = () => history.push(`/githubassessments/editor`, assessmentOverview);\n\n  if (assessmentNotAccepted) {\n    buttonText = 'Accept';\n    handleClick = () => window.open(assessmentOverview.link);\n  } else if (isOverdue) {\n    buttonText = 'Review Answers';\n  }\n\n  return (\n    <div key={ownerSlashName}>\n      <Card className=\"row listing\" elevation={Elevation.ONE}>\n        <div className={`col-xs-${String(ratio)} listing-picture`}>\n          <img\n            alt=\"Assessment\"\n            className={`cover-image-${assessmentOverview.title}`}\n            src={assessmentOverview.coverImage ? assessmentOverview.coverImage : defaultCoverImage}\n          />\n        </div>\n\n        <div className={`col-xs-${String(12 - ratio)} listing-text`}>\n          <div className=\"listing-header\">\n            <Text ellipsize={true}>\n              <H4 className=\"listing-title\">{assessmentOverview.title}</H4>\n              <H6>{ownerSlashName}</H6>\n            </Text>\n          </div>\n\n          <div className=\"listing-description\">\n            <Markdown content={assessmentOverview.webSummary} />\n          </div>\n\n          <div className=\"listing-footer\">\n            <Text className=\"listing-due-date\">\n              <Icon className=\"listing-due-icon\" iconSize={12} icon={IconNames.TIME} />\n              {hasDueDate ? 'Due: ' + dueDate : 'No due date'}\n            </Text>\n            <div className=\"listing-button\">\n              <Button icon={IconNames.PLAY} minimal={true} onClick={handleClick}>\n                <span className=\"custom-hidden-xxxs\">{buttonText}</span>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default GitHubAssessmentListing;\n","import { Card, H2, H4, UL } from '@blueprintjs/core';\n\nconst GitHubClassroomWelcome: React.FC = () => {\n  return (\n    <div className=\"github-welcome\">\n      <Card className=\"github-welcome-content\">\n        <div style={{ marginTop: '20px', display: 'flex', justifyContent: 'center' }}>\n          <div>\n            <H2>Welcome to Source Academy with GitHub Classroom!</H2>\n            <br />\n            <H4>Source Academy does not find any course information for this account.</H4>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <UL style={{ textAlign: 'justify' }}>\n                <li>\n                  If you are enrolled in a Source Academy course that uses GitHub Classroom, check\n                  with the course staff to make sure your account is added to the course.\n                </li>\n                <li>\n                  If you are looking for a course to join, check{' '}\n                  <a href=\"https://about.sourceacademy.org/learner/README.html\">here</a> to find a\n                  course that suits your needs.\n                </li>\n              </UL>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default GitHubClassroomWelcome;\n","import { IconNames } from '@blueprintjs/icons';\n\nimport ControlButton from '../../ControlButton';\n\ntype ControlBarDisplayMCQButtonProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  displayMCQInEditor: () => void;\n  displayTextInEditor: () => void;\n};\n\ntype StateProps = {\n  mcqDisplayed: boolean;\n  key: string;\n};\n\nexport const ControlBarDisplayMCQButton: React.FC<ControlBarDisplayMCQButtonProps> = props => {\n  const label = props.mcqDisplayed ? 'Show MCQ Text' : 'Hide MCQ Text';\n  const behaviour = props.mcqDisplayed ? props.displayTextInEditor : props.displayMCQInEditor;\n\n  return <ControlButton label={label} icon={IconNames.REFRESH} onClick={behaviour} />;\n};\n","import { IconNames } from '@blueprintjs/icons';\n\nimport ControlButton from '../../ControlButton';\nimport { maximumTasksPerMission } from '../../githubAssessments/GitHubMissionDataUtils';\nimport { showWarningMessage } from '../../utils/NotificationsHelper';\n\nexport type ControlBarTaskAddButtonProps = {\n  addNewQuestion: () => void;\n  numberOfTasks: number;\n  key: string;\n};\n\nexport const ControlBarTaskAddButton: React.FC<ControlBarTaskAddButtonProps> = props => {\n  function onClickAdd() {\n    if (props.numberOfTasks === maximumTasksPerMission) {\n      showWarningMessage(\n        'Cannot have more than ' + maximumTasksPerMission + ' Tasks in a Mission!'\n      );\n      return;\n    }\n\n    props.addNewQuestion();\n  }\n\n  return <ControlButton label=\"Add Task\" icon={IconNames.ADD} onClick={onClickAdd} />;\n};\n","import { IconNames } from '@blueprintjs/icons';\n\nimport ControlButton from '../../ControlButton';\nimport { showSimpleConfirmDialog } from '../../utils/DialogHelper';\nimport { showWarningMessage } from '../../utils/NotificationsHelper';\n\nexport type ControlBarTaskDeleteButtonProps = {\n  deleteCurrentQuestion: () => void;\n  numberOfTasks: number;\n  key: string;\n};\n\nexport const ControlBarTaskDeleteButton: React.FC<ControlBarTaskDeleteButtonProps> = props => {\n  async function onClickDelete() {\n    if (props.numberOfTasks <= 1) {\n      showWarningMessage('Cannot delete the only remaining task!');\n      return;\n    }\n\n    const confirmDelete = await showSimpleConfirmDialog({\n      contents: (\n        <div>\n          <p>Warning: you are about to delete a task.</p>\n          <p>This action cannot be undone.</p>\n          <p>Please click 'Confirm' to continue, or 'Cancel' to go back.</p>\n        </div>\n      ),\n      negativeLabel: 'Cancel',\n      positiveIntent: 'primary',\n      positiveLabel: 'Confirm'\n    });\n\n    if (confirmDelete) {\n      props.deleteCurrentQuestion();\n    }\n  }\n\n  return (\n    <ControlButton label=\"Delete Current Task\" icon={IconNames.DELETE} onClick={onClickDelete} />\n  );\n};\n","import { AnchorButton, Button, Classes, Dialog, InputGroup, Intent } from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\n\nimport { showWarningMessage } from '../utils/NotificationsHelper';\n\nexport type GitHubMissionCreateDialogResolution = {\n  confirmSave: boolean;\n  repoName: string;\n};\n\nexport type GitHubMissionCreateDialogProps = {\n  filesToCreate: string[];\n  userLogin: string;\n  resolveDialog: (arg: GitHubMissionCreateDialogResolution) => void;\n};\n\nexport const GitHubMissionCreateDialog: React.FC<GitHubMissionCreateDialogProps> = props => {\n  const [repositoryName, setrepositoryName] = useState('sa-new-mission-repository');\n\n  return (\n    <Dialog className=\"missionBrowser\" isOpen={true}>\n      <div className={classNames('githubDialogHeader', Classes.DIALOG_HEADER)}>\n        <h3>Please confirm your save</h3>\n      </div>\n      <div className={classNames('githubDialogBody', Classes.DIALOG_BODY)}>\n        <div>\n          <h4>This will create a repository owned by {props.userLogin} with the title:</h4>\n          <InputGroup\n            onChange={handleTitleChange}\n            placeholder={'Enter Repository Title'}\n            value={repositoryName}\n          />\n        </div>\n        <div>\n          <h4>This repository will be created with following files:</h4>\n          {props.filesToCreate.map(filepath => (\n            <li key={filepath}>{filepath}</li>\n          ))}\n        </div>\n      </div>\n\n      <div className={classNames(Classes.DIALOG_FOOTER)}>\n        <div className={classNames(Classes.DIALOG_FOOTER_ACTIONS)}>\n          <Button onClick={handleClose}>Close</Button>\n          <AnchorButton onClick={handleConfirm} intent={Intent.PRIMARY}>\n            Confirm\n          </AnchorButton>\n        </div>\n      </div>\n    </Dialog>\n  );\n\n  function handleTitleChange(event: any) {\n    setrepositoryName(event.target.value);\n  }\n\n  function handleClose() {\n    props.resolveDialog({\n      confirmSave: false,\n      repoName: ''\n    });\n  }\n\n  function handleConfirm() {\n    if (repositoryName === '') {\n      showWarningMessage('Cannot create repository without title!', 2000);\n      return;\n    }\n\n    props.resolveDialog({\n      confirmSave: true,\n      repoName: repositoryName\n    });\n  }\n};\n","import { TextArea } from '@blueprintjs/core';\nimport React, { useEffect } from 'react';\n\nimport Markdown from '../../Markdown';\n\nexport type SideContentMarkdownEditorProps = {\n  allowEdits: boolean;\n  content: string;\n  setContent: (content: string) => void;\n};\n\nconst SideContentMarkdownEditor: React.FC<SideContentMarkdownEditorProps> = props => {\n  const [editorModeOn, setEditorModeOn] = React.useState(false);\n  const allowEdits = props.allowEdits;\n\n  const node = React.useRef() as any;\n\n  useEffect(() => {\n    function handleClick(event: any) {\n      if (!allowEdits) {\n        return;\n      }\n\n      if (node.current && !node.current.contains(event.target)) {\n        setEditorModeOn(false);\n      }\n\n      if (node.current && node.current.contains(event.target)) {\n        setEditorModeOn(true);\n      }\n    }\n\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, [allowEdits]);\n\n  return (\n    <div ref={node}>\n      {editorModeOn ? (\n        <TextArea\n          onChange={onEditorChange}\n          fill={true}\n          growVertically={true}\n          defaultValue={props.content}\n        />\n      ) : (\n        <Markdown content={props.content} openLinksInNewWindow={true} />\n      )}\n    </div>\n  );\n\n  function onEditorChange(event: any) {\n    props.setContent(event.target.value);\n  }\n};\n\nexport default SideContentMarkdownEditor;\n","import { Label } from '@blueprintjs/core';\nimport { Chapter } from 'Clang-slang/dist/types';\nimport React from 'react';\n\nimport { SALanguage } from '../../application/ApplicationTypes';\nimport { ControlBarChapterSelect } from '../../controlBar/ControlBarChapterSelect';\nimport { MissionMetadata } from '../../githubAssessments/GitHubMissionTypes';\nimport Constants from '../../utils/Constants';\n\nexport type SideContentMissionEditorProps = {\n  missionMetadata: MissionMetadata;\n  setMissionMetadata: (missionMetadata: MissionMetadata) => void;\n};\n\nconst SideContentMissionEditor: React.FC<SideContentMissionEditorProps> = props => {\n  return (\n    <div className=\"SideContentMissionEditor\">\n      <div className=\"SideContentMissionEditorRow\">\n        <div className=\"SideContentMissionEditorLabelColumn\">\n          <Label>Source Version</Label>\n        </div>\n        <div className=\"SideContentMissionEditorOptionColumn\">\n          <ControlBarChapterSelect\n            sourceChapter={props.missionMetadata.sourceVersion}\n            sourceVariant={Constants.defaultSourceVariant}\n            key=\"chapter\"\n            disabled={false}\n            handleChapterSelect={handleChapterSelect}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  function setMissionMetadataWrapper<T>(changedProperty: string, newValue: T) {\n    const newMetadata = Object.assign({}, props.missionMetadata);\n    newMetadata[changedProperty] = newValue;\n    props.setMissionMetadata(newMetadata);\n  }\n\n  function handleChapterSelect(i: SALanguage, e?: React.SyntheticEvent<HTMLElement>) {\n    setMissionMetadataWrapper<Chapter>('sourceVersion', i.chapter);\n  }\n};\n\nexport default SideContentMissionEditor;\n","import React from 'react';\n\nimport SideContentMarkdownEditor from './SideContentMarkdownEditor';\n\nexport type SideContentTaskEditorProps = {\n  allowEdits: boolean;\n  currentTaskNumber: number;\n  taskDescriptions: any[];\n  setTaskDescriptions: (newList: any[]) => void;\n};\n\nconst SideContentTaskEditor: React.FC<SideContentTaskEditorProps> = props => {\n  const taskIndex = props.currentTaskNumber - 1;\n  const taskDescriptions = props.taskDescriptions;\n  const setTaskDescriptions = props.setTaskDescriptions;\n\n  const indexOutOfRange =\n    taskIndex < 0 || taskIndex >= taskDescriptions.length || taskDescriptions.length === 0;\n\n  const taskBriefing = indexOutOfRange\n    ? 'Welcome to Mission Mode! This is where the Task Briefing for each question will appear!'\n    : taskDescriptions[taskIndex];\n\n  const taskBriefingSetter = React.useCallback(\n    (newDescription: string) => {\n      if (indexOutOfRange) {\n        return;\n      }\n\n      const newTaskDescriptions = taskDescriptions.map(desc => desc);\n      newTaskDescriptions[taskIndex] = newDescription;\n      setTaskDescriptions(newTaskDescriptions);\n    },\n    [setTaskDescriptions, taskDescriptions, taskIndex, indexOutOfRange]\n  );\n\n  return (\n    <div>\n      <SideContentMarkdownEditor\n        allowEdits={props.allowEdits}\n        content={taskBriefing}\n        setContent={taskBriefingSetter}\n      />\n    </div>\n  );\n};\n\nexport default SideContentTaskEditor;\n","import { Button, Card, Classes, Elevation, InputGroup } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { parseError } from 'Clang-slang';\nimport { stringify } from 'Clang-slang/dist/utils/stringify';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nimport { Testcase, TestcaseTypes } from '../../assessment/AssessmentTypes';\n\ntype SideContentEditableTestcaseCardProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  setTestcaseProgram: (newProgram: string) => void;\n  setTestcaseExpectedResult: (newExpectedResult: string) => void;\n  handleTestcaseEval: (testcaseId: number) => void;\n  deleteTestcase: (testcaseId: number) => void;\n};\n\ntype StateProps = {\n  index: number;\n  testcase: Testcase;\n};\n\nconst SideContentEditableTestcaseCard: React.FunctionComponent<\n  SideContentEditableTestcaseCardProps\n> = props => {\n  const {\n    index,\n    testcase,\n    setTestcaseProgram,\n    setTestcaseExpectedResult,\n    handleTestcaseEval,\n    deleteTestcase\n  } = props;\n\n  // TODO (Refactor): testcase type seems unused in GitHub Assessments\n  const extraClasses = React.useMemo(() => {\n    const isEvaluated = testcase.result !== undefined || testcase.errors;\n    const isEqual = stringify(testcase.result) === testcase.answer;\n\n    return {\n      correct: isEvaluated && isEqual,\n      wrong: isEvaluated && !isEqual,\n      secret: testcase.type === TestcaseTypes.secret || testcase.type === TestcaseTypes.opaque\n    };\n  }, [testcase]);\n\n  const handleRunTestcase = React.useCallback(() => {\n    handleTestcaseEval(index);\n  }, [index, handleTestcaseEval]);\n\n  const testProgram = testcase.program;\n  const expectedAnswer = testcase.answer;\n\n  const playButton = (\n    <Button className=\"testcase-button\" icon={IconNames.PLAY} onClick={handleRunTestcase} />\n  );\n  const deleteButton = (\n    <Button\n      className=\"testcase-button\"\n      icon={IconNames.DELETE}\n      onClick={() => deleteTestcase(index)}\n    />\n  );\n\n  const answer = React.useMemo(() => {\n    let answer = 'No Answer';\n    if (testcase.errors) {\n      answer = parseError(testcase.errors);\n    } else {\n      if (testcase.result !== undefined) {\n        answer = stringify(testcase.result) as string;\n      }\n    }\n    return answer;\n  }, [testcase]);\n\n  return (\n    <div className={classNames('EditableAutograderCard', extraClasses)}>\n      <Card className={Classes.INTERACTIVE} elevation={Elevation.ONE}>\n        {\n          <>\n            <InputGroup\n              className=\"testcase-program\"\n              value={testProgram}\n              onChange={(event: any) => setTestcaseProgram(event.target.value)}\n            />\n            <InputGroup\n              className=\"testcase-expected\"\n              value={expectedAnswer}\n              onChange={(event: any) => setTestcaseExpectedResult(event.target.value)}\n            />\n            <InputGroup className=\"testcase-actual\" value={answer} readOnly={true} />\n          </>\n        }\n        {playButton}\n        {deleteButton}\n      </Card>\n    </div>\n  );\n};\n\nexport default SideContentEditableTestcaseCard;\n","import { Button, Collapse, Icon, PopoverPosition } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { Tooltip2 } from '@blueprintjs/popover2';\nimport * as React from 'react';\nimport AceEditor from 'react-ace';\n\nimport { Testcase } from '../../assessment/AssessmentTypes';\nimport ControlButton from '../../ControlButton';\nimport { showSimpleConfirmDialog } from '../../utils/DialogHelper';\nimport SideContentTestcaseCard from '../SideContentTestcaseCard';\nimport SideContentEditableTestcaseCard from './SideContentEditableTestcaseCard';\n\nexport type SideContentTestcaseEditorProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  handleTestcaseEval: (testcaseId: number) => void;\n  setTaskTestcases: (newTestcases: Testcase[]) => void;\n  setTestPrepend: (newTestPrepend: string) => void;\n  setTestPostpend: (newTestPostpend: string) => void;\n};\n\ntype StateProps = {\n  allowEdits: boolean;\n  testcases: Testcase[];\n  testPrepend: string;\n  testPostpend: string;\n};\n\nconst SideContentTestcaseEditor: React.FunctionComponent<\n  SideContentTestcaseEditorProps\n> = props => {\n  const [showsTestPrepend, setTestPrependShown] = React.useState<boolean>(true);\n  const [showsTestPostpend, setTestPostpendShown] = React.useState<boolean>(true);\n  const [showsTestcases, setTestcasesShown] = React.useState<boolean>(true);\n\n  const {\n    testcases,\n    testPrepend,\n    testPostpend,\n    allowEdits,\n    handleTestcaseEval,\n    setTaskTestcases,\n    setTestPrepend,\n    setTestPostpend\n  } = props;\n\n  const setTestcaseProgramSetterCreator = React.useCallback(\n    (testcaseId: number) => {\n      return (newProgram: string) => {\n        const newTestcases = testcases.map((testcase: Testcase) => Object.assign({}, testcase));\n        newTestcases[testcaseId].program = newProgram;\n        delete newTestcases[testcaseId].result;\n        setTaskTestcases(newTestcases);\n      };\n    },\n    [setTaskTestcases, testcases]\n  );\n\n  const setTestcaseExpectedResultSetterCreator = React.useCallback(\n    (testcaseId: number) => {\n      return (newExpectedResult: string) => {\n        const newTestcases = testcases.map((testcase: Testcase) => Object.assign({}, testcase));\n        newTestcases[testcaseId].answer = newExpectedResult;\n        delete newTestcases[testcaseId].result;\n        setTaskTestcases(newTestcases);\n      };\n    },\n    [setTaskTestcases, testcases]\n  );\n\n  const addTestcase = React.useCallback(() => {\n    const newTestcases = [...testcases];\n    newTestcases.push({\n      answer: '',\n      program: '',\n      score: 0,\n      type: 'public'\n    });\n    setTaskTestcases(newTestcases);\n  }, [testcases, setTaskTestcases]);\n\n  const deleteTestcase = React.useCallback(\n    async (testcaseId: number) => {\n      const confirmDelete = await showSimpleConfirmDialog({\n        title: 'confirm testcase deletion',\n        contents: 'Are you sure you want to delete this testcase? This cannot be undone.',\n        positiveLabel: 'Confirm',\n        negativeLabel: 'Cancel'\n      });\n\n      if (!confirmDelete) {\n        return;\n      }\n\n      const newTestcases = testcases.slice(0, testcaseId).concat(testcases.slice(testcaseId + 1));\n      setTaskTestcases(newTestcases);\n    },\n    [testcases, setTaskTestcases]\n  );\n\n  const convertToTestcaseCard = React.useCallback(\n    (testcase, index) => {\n      if (allowEdits) {\n        return (\n          <SideContentEditableTestcaseCard\n            key={index}\n            index={index}\n            testcase={testcase}\n            setTestcaseProgram={setTestcaseProgramSetterCreator(index)}\n            setTestcaseExpectedResult={setTestcaseExpectedResultSetterCreator(index)}\n            deleteTestcase={deleteTestcase}\n            handleTestcaseEval={handleTestcaseEval}\n          />\n        );\n      } else {\n        return (\n          <SideContentTestcaseCard\n            key={index}\n            index={index}\n            testcase={testcase}\n            handleTestcaseEval={handleTestcaseEval}\n            workspaceLocation=\"githubAssessment\"\n          />\n        );\n      }\n    },\n    [\n      allowEdits,\n      deleteTestcase,\n      handleTestcaseEval,\n      setTestcaseProgramSetterCreator,\n      setTestcaseExpectedResultSetterCreator\n    ]\n  );\n\n  const testcaseCards = React.useMemo(\n    () =>\n      testcases.length > 0 ? (\n        <div className=\"testcaseCards\">\n          {testcasesHeader}\n          {testcases.map((testcase, index) => convertToTestcaseCard(testcase, index))}\n        </div>\n      ) : (\n        <div className=\"noResults\">There are no testcases provided for this question.</div>\n      ),\n    [testcases, convertToTestcaseCard]\n  );\n\n  const createTestCaseButton = React.useMemo(\n    () => (\n      <Button\n        className=\"collapse-button\"\n        icon={IconNames.ADD}\n        minimal={true}\n        text={'Add a new testcase'}\n        onClick={addTestcase}\n      />\n    ),\n    [addTestcase]\n  );\n\n  const toggleTestPrepend = React.useCallback(() => {\n    setTestPrependShown(!showsTestPrepend);\n  }, [showsTestPrepend]);\n\n  const toggleTestPostpend = React.useCallback(() => {\n    setTestPostpendShown(!showsTestPostpend);\n  }, [showsTestPostpend]);\n\n  const toggleTestcases = React.useCallback(() => {\n    setTestcasesShown(!showsTestcases);\n  }, [showsTestcases]);\n\n  return (\n    <div className=\"Autograder\">\n      <Button\n        className=\"collapse-button\"\n        icon={showsTestcases ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT}\n        minimal={true}\n        onClick={toggleTestcases}\n      >\n        <span>Testcases</span>\n        <Tooltip2 content={autograderTooltip} placement={PopoverPosition.LEFT}>\n          <Icon icon={IconNames.HELP} />\n        </Tooltip2>\n      </Button>\n      <Collapse isOpen={showsTestcases} keepChildrenMounted={true}>\n        <div className=\"testcaseeditor-subcomponent\">\n          {testcaseCards}\n          {allowEdits && createTestCaseButton}\n        </div>\n      </Collapse>\n\n      {allowEdits && collapseButton('Testcase Prepend', showsTestPrepend, toggleTestPrepend)}\n      {allowEdits && (\n        <Collapse isOpen={showsTestPrepend} keepChildrenMounted={true}>\n          <div className=\"testcaseeditor-subcomponent\">\n            {createEditor(testPrepend, (newValue: string) => setTestPrepend(newValue))}\n          </div>\n        </Collapse>\n      )}\n\n      {allowEdits && collapseButton('Testcase Postpend', showsTestPostpend, toggleTestPostpend)}\n      {allowEdits && (\n        <Collapse isOpen={showsTestPostpend} keepChildrenMounted={true}>\n          <div className=\"testcaseeditor-subcomponent\">\n            {createEditor(testPostpend, (newValue: string) => setTestPostpend(newValue))}\n          </div>\n        </Collapse>\n      )}\n    </div>\n  );\n};\n\nfunction createEditor(value: string, onChange: (newValue: string) => void) {\n  return (\n    <AceEditor\n      className=\"react-ace\"\n      fontSize={14}\n      highlightActiveLine={false}\n      mode=\"javascript\"\n      onChange={onChange}\n      theme=\"source\"\n      value={value}\n      width=\"100%\"\n      height=\"16rem\"\n    />\n  );\n}\n\nconst autograderTooltip = (\n  <div className=\"autograder-help-tooltip\">\n    <p>Click on each testcase below to execute it with the program in the editor.</p>\n    <p>\n      To execute all testcases at once, evaluate the program in the editor with this tab active.\n    </p>\n    <p>A green or red background indicates a passed or failed testcase respectively.</p>\n    <p>Private testcases (only visible to staff when grading) have a grey background.</p>\n  </div>\n);\n\nconst columnHeader = (colClass: string, colTitle: string) => (\n  <div className={colClass}>\n    {colTitle}\n    <Icon icon={IconNames.CARET_DOWN} />\n  </div>\n);\n\nconst testcasesHeader = (\n  <div className=\"testcases-header\">\n    {columnHeader('header-fn', 'Testcase')}\n    {columnHeader('header-expected', 'Expected result')}\n    {columnHeader('header-actual', 'Actual result')}\n  </div>\n);\n\nconst collapseButton = (label: string, isOpen: boolean, toggleFunc: () => void) => (\n  <ControlButton\n    label={label}\n    icon={isOpen ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT}\n    onClick={toggleFunc}\n    options={{ className: 'collapse-button', minimal: true }}\n  />\n);\n\nexport default SideContentTestcaseEditor;\n","import { Chapter } from 'Clang-slang/dist/types';\n\nimport { IMCQQuestion } from '../../commons/assessment/AssessmentTypes';\nimport { MissionMetadata, TaskData } from '../../commons/githubAssessments/GitHubMissionTypes';\n\nexport const defaultMissionBriefing = `### Assignment Briefing (Click to Edit!)\nWelcome to Assignment Creator! This is where the Briefing for each assignment will appear.\n\nIf you are on the SourceAcademy website, you may edit **this section** by clicking on it. You can also add or delete questions through the control bar.\n\nThe text written here will show up as the \\`README.md\\` file on the GitHub repository.\n\nPlease also refer to our instructor's guide [here](https://github.com/source-academy/general/tree/master/instructor/github) to learn more about how to use this website.\n\n### Brief Markdown Cheatsheet\nEverything here is written in Markdown.\n\nThis means that you can **bolden** or *italicize* text by adding asterisks.\n\nPrograms can be formatted through the use of triple backticks:\n\\`\\`\\`\n// This is a program example\n\\`\\`\\`\nIf you want to in-line program snippets, rather than display it as a block, you can also use single backticks like \\`this\\`.\n\nLists can be created by adding dashes to the start of a line:\n- First element\n- Second element\n- Third element\n\n\nIt is also possible to embed images, like this:\n\n![an embedded image](https://avatars.githubusercontent.com/u/35620705?s=400&u=32f72fd1d65a0d6877ad1d5870ffa327dda754f1&v=4)\n\nIf you need a more detailed cheatsheet, please click [here](https://www.markdownguide.org/cheat-sheet/)!\n`;\n\nexport const defaultTaskDescription = `### Problem Description (Click to Edit!)\nWelcome to the Assignment Creator! This is where the problem description specific to each problem should be written.\n\nIf you are on the SourceAcademy website, you may edit **this section** by clicking on it. You can also add or delete questions through the control bar.\n\nIf you would like to add new questions outside of the website, simply duplicate this folder, and edit the \\`Problem.md\\` and \\`StarterCode.js\\` files accordingly. Make sure that the folders are named 'Q1', 'Q2', 'Q3' and so on.\n\nPlease also refer to our instructor's guide [here](https://github.com/source-academy/general/tree/master/instructor/github).\n\n### Brief Markdown Cheatsheet\nEverything here is written in Markdown.\n\nThis means that you can **bolden** or *italicize* text by adding asterisks.\n\nPrograms can be formatted through the use of triple backticks:\n\\`\\`\\`\n// This is a program example\n\\`\\`\\`\nIf you want to in-line program snippets, rather than display it as a block, you can also use single backticks like \\`this\\`.\n\nLists can be created by adding dashes to the start of a line:\n- First element\n- Second element\n- Third element\n\n\nIt is also possible to embed images, like this:\n\n![an embedded image](https://avatars.githubusercontent.com/u/35620705?s=400&u=32f72fd1d65a0d6877ad1d5870ffa327dda754f1&v=4)\n\nIf you need a more detailed cheatsheet, please click [here](https://www.markdownguide.org/cheat-sheet/)!\n`;\n\nexport const defaultStarterCode = '// Your program here!\\n';\n\nexport const defaultMissionMetadata = {\n  sourceVersion: Chapter.CLANG\n} as MissionMetadata;\n\nexport const defaultTask = {\n  questionNumber: 0,\n  taskDescription: defaultTaskDescription,\n  starterCode: defaultStarterCode,\n  savedCode: defaultStarterCode,\n  testPrepend: '',\n  testPostpend: '',\n  testCases: []\n} as TaskData;\n\nexport const defaultMCQQuestion = {\n  answer: -1,\n  choices: [],\n  solution: -1,\n  type: 'mcq',\n  content: '',\n  grade: 0,\n  id: 0,\n  library: { chapter: Chapter.CLANG, external: { name: 'NONE', symbols: [] }, globals: [] },\n  maxGrade: 0,\n  xp: 0,\n  maxXp: 0\n} as IMCQQuestion;\n","import {\n  Button,\n  Card,\n  Classes,\n  Dialog,\n  NonIdealState,\n  Spinner,\n  SpinnerSize\n} from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport { GetResponseTypeFromEndpointMethod } from '@octokit/types';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport classNames from 'classnames';\nimport { isEqual } from 'lodash';\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { useResponsive } from 'src/commons/utils/Hooks';\nimport {\n  browseReplHistoryDown,\n  browseReplHistoryUp,\n  changeSideContentHeight,\n  evalTestcase,\n  navigateToDeclaration,\n  promptAutocomplete,\n  runAllTestcases,\n  setEditorBreakpoint,\n  updateReplValue\n} from 'src/commons/workspace/WorkspaceActions';\n\nimport { InterpreterOutput } from '../../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../../commons/application/types/ExternalTypes';\nimport { Testcase } from '../../commons/assessment/AssessmentTypes';\nimport { ControlBarProps } from '../../commons/controlBar/ControlBar';\nimport { ControlBarChapterSelect } from '../../commons/controlBar/ControlBarChapterSelect';\nimport { ControlBarClearButton } from '../../commons/controlBar/ControlBarClearButton';\nimport { ControlBarEvalButton } from '../../commons/controlBar/ControlBarEvalButton';\nimport { ControlBarNextButton } from '../../commons/controlBar/ControlBarNextButton';\nimport { ControlBarPreviousButton } from '../../commons/controlBar/ControlBarPreviousButton';\nimport { ControlBarQuestionViewButton } from '../../commons/controlBar/ControlBarQuestionViewButton';\nimport { ControlBarResetButton } from '../../commons/controlBar/ControlBarResetButton';\nimport { ControlBarRunButton } from '../../commons/controlBar/ControlBarRunButton';\nimport { ControlButtonSaveButton } from '../../commons/controlBar/ControlBarSaveButton';\nimport { ControlBarDisplayMCQButton } from '../../commons/controlBar/github/ControlBarDisplayMCQButton';\nimport { ControlBarTaskAddButton } from '../../commons/controlBar/github/ControlBarTaskAddButton';\nimport { ControlBarTaskDeleteButton } from '../../commons/controlBar/github/ControlBarTaskDeleteButton';\nimport {\n  convertEditorTabStateToProps,\n  NormalEditorContainerProps\n} from '../../commons/editor/EditorContainer';\nimport { Position } from '../../commons/editor/EditorTypes';\nimport {\n  GitHubMissionCreateDialog,\n  GitHubMissionCreateDialogProps,\n  GitHubMissionCreateDialogResolution\n} from '../../commons/githubAssessments/GitHubMissionCreateDialog';\nimport {\n  convertIMCQQuestionToMCQText,\n  convertToMCQQuestionIfMCQText,\n  discoverFilesToBeChangedWithMissionRepoData,\n  discoverFilesToBeCreatedWithoutMissionRepoData,\n  getMissionData\n} from '../../commons/githubAssessments/GitHubMissionDataUtils';\nimport {\n  MissionData,\n  MissionMetadata,\n  MissionRepoData,\n  TaskData\n} from '../../commons/githubAssessments/GitHubMissionTypes';\nimport Markdown from '../../commons/Markdown';\nimport { MobileSideContentProps } from '../../commons/mobileWorkspace/mobileSideContent/MobileSideContent';\nimport MobileWorkspace, {\n  MobileWorkspaceProps\n} from '../../commons/mobileWorkspace/MobileWorkspace';\nimport SideContentMarkdownEditor from '../../commons/sideContent/githubAssessments/SideContentMarkdownEditor';\nimport SideContentMissionEditor from '../../commons/sideContent/githubAssessments/SideContentMissionEditor';\nimport SideContentTaskEditor from '../../commons/sideContent/githubAssessments/SideContentTaskEditor';\nimport SideContentTestcaseEditor from '../../commons/sideContent/githubAssessments/SideContentTestcaseEditor';\nimport { SideContentProps } from '../../commons/sideContent/SideContent';\nimport { SideContentTab, SideContentType } from '../../commons/sideContent/SideContentTypes';\nimport Constants from '../../commons/utils/Constants';\nimport { promisifyDialog, showSimpleConfirmDialog } from '../../commons/utils/DialogHelper';\nimport { history } from '../../commons/utils/HistoryHelper';\nimport { showWarningMessage } from '../../commons/utils/NotificationsHelper';\nimport Workspace, { WorkspaceProps } from '../../commons/workspace/Workspace';\nimport { EditorTabState, WorkspaceState } from '../../commons/workspace/WorkspaceTypes';\nimport { WorkspaceLocation } from '../../commons/workspace/WorkspaceTypes';\nimport {\n  checkIfFileCanBeSavedAndGetSaveType,\n  getGitHubOctokitInstance,\n  performCreatingSave,\n  performFolderDeletion,\n  performOverwritingSave\n} from '../../features/github/GitHubUtils';\nimport {\n  defaultMCQQuestion,\n  defaultMissionBriefing,\n  defaultMissionMetadata,\n  defaultTask\n} from './GitHubAssessmentDefaultValues';\nimport { GHAssessmentOverview } from './GitHubClassroom';\n\nexport type GitHubAssessmentWorkspaceProps = DispatchProps & StateProps & RouteComponentProps;\n\nexport type DispatchProps = {\n  handleChapterSelect: (chapter: Chapter, variant: Variant) => void;\n  handleEditorEval: () => void;\n  handleEditorValueChange: (val: string) => void;\n  handleReplEval: () => void;\n  handleReplOutputClear: () => void;\n  handleUpdateWorkspace: (options: Partial<WorkspaceState>) => void;\n  handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) => void;\n};\n\nexport type StateProps = {\n  activeEditorTabIndex: number | null;\n  editorTabs: EditorTabState[];\n  editorTestcases: Testcase[];\n  hasUnsavedChanges: boolean;\n  isRunning: boolean;\n  isDebugging: boolean;\n  enableDebugging: boolean;\n  output: InterpreterOutput[];\n  replValue: string;\n  sideContentHeight?: number;\n  sourceChapter: Chapter;\n};\n\nconst workspaceLocation: WorkspaceLocation = 'githubAssessment';\n\nconst GitHubAssessmentWorkspace: React.FC<GitHubAssessmentWorkspaceProps> = props => {\n  const dispatch = useDispatch();\n  const octokit = getGitHubOctokitInstance();\n\n  if (octokit === undefined) {\n    history.push('/githubassessments/login');\n  }\n\n  /**\n   * State variables relating to information we are concerned with saving\n   */\n  const [missionMetadata, setMissionMetadata] = React.useState(defaultMissionMetadata);\n  const [cachedMissionMetadata, setCachedMissionMetadata] = React.useState(defaultMissionMetadata);\n  const [hasUnsavedChangesToMetadata, setHasUnsavedChangesToMetadata] = React.useState(false);\n\n  const [briefingContent, setBriefingContent] = React.useState(defaultMissionBriefing);\n  const [cachedBriefingContent, setCachedBriefingContent] = React.useState(defaultMissionBriefing);\n  const [hasUnsavedChangesToBriefing, setHasUnsavedChangesToBriefing] = React.useState(false);\n\n  const [cachedTaskList, setCachedTaskList] = React.useState<TaskData[]>([]);\n  const [taskList, setTaskList] = React.useState<TaskData[]>([]);\n  const [hasUnsavedChangesToTasks, setHasUnsavedChangesToTasks] = React.useState(false);\n\n  /**\n   * State variables relating to the rendering and function of the workspace\n   */\n  const [summary, setSummary] = React.useState('');\n  const [currentTaskNumber, setCurrentTaskNumber] = React.useState(0);\n  const [isTeacherMode, setIsTeacherMode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [currentTaskIsMCQ, setCurrentTaskIsMCQ] = React.useState(false);\n  const [displayMCQInEditor, setDisplayMCQInEditor] = React.useState(true);\n  const [mcqQuestion, setMCQQuestion] = React.useState(defaultMCQQuestion);\n  const [missionRepoData, setMissionRepoData] = React.useState<MissionRepoData | undefined>(\n    undefined\n  );\n  const assessmentOverview = props.location.state as GHAssessmentOverview;\n\n  const [showBriefingOverlay, setShowBriefingOverlay] = React.useState(false);\n  const [selectedTab, setSelectedTab] = React.useState(SideContentType.questionOverview);\n  const { isMobileBreakpoint } = useResponsive();\n\n  /**\n   * Unpacked properties\n   */\n  const hasUnsavedChanges = props.hasUnsavedChanges;\n  const editorTestcases = props.editorTestcases;\n  const handleEditorValueChange = props.handleEditorValueChange;\n  const handleUpdateWorkspace = props.handleUpdateWorkspace;\n  const handleUpdateHasUnsavedChanges = props.handleUpdateHasUnsavedChanges;\n  const handleReplOutputClear = props.handleReplOutputClear;\n\n  /**\n   * Should be called to change the task number, rather than using setCurrentTaskNumber\n   */\n  const changeStateDueToChangedTaskNumber = useCallback(\n    (newTaskNumber: number, currentTaskList: TaskData[]) => {\n      setCurrentTaskNumber(newTaskNumber);\n      const actualTaskIndex = newTaskNumber - 1;\n\n      handleUpdateWorkspace({\n        // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n        editorTabs: [\n          {\n            value: currentTaskList[actualTaskIndex].savedCode,\n            prependValue: currentTaskList[actualTaskIndex].testPrepend,\n            postpendValue: currentTaskList[actualTaskIndex].testPostpend,\n            highlightedLines: [],\n            breakpoints: []\n          }\n        ],\n        editorTestcases: currentTaskList[actualTaskIndex].testCases\n      });\n      handleReplOutputClear();\n\n      const [isMCQText, mcqQuestion] = convertToMCQQuestionIfMCQText(\n        currentTaskList[actualTaskIndex].savedCode\n      );\n\n      setCurrentTaskIsMCQ(isMCQText);\n      setMCQQuestion(mcqQuestion);\n    },\n    [handleUpdateWorkspace, handleReplOutputClear]\n  );\n\n  const setBriefingContentWrapper = useCallback(\n    (newBriefingContent: string) => {\n      setBriefingContent(newBriefingContent);\n      setHasUnsavedChangesToBriefing(newBriefingContent !== cachedBriefingContent);\n    },\n    [cachedBriefingContent]\n  );\n\n  const setMissionMetadataWrapper = useCallback(\n    (newMissionMetadata: MissionMetadata) => {\n      setMissionMetadata(newMissionMetadata);\n      setHasUnsavedChangesToMetadata(!isEqual(newMissionMetadata, cachedMissionMetadata));\n    },\n    [cachedMissionMetadata]\n  );\n\n  const setTaskListWrapper = useCallback(\n    (newTaskList: TaskData[]) => {\n      setTaskList(newTaskList);\n      setHasUnsavedChangesToTasks(!isEqual(newTaskList, cachedTaskList));\n    },\n    [cachedTaskList]\n  );\n\n  const setDisplayMCQInEditorWrapper = useCallback(\n    (shouldDisplayMCQ: boolean) => {\n      if (shouldDisplayMCQ) {\n        const [isMCQText, mcqQuestion] = convertToMCQQuestionIfMCQText(\n          taskList[currentTaskNumber - 1].savedCode\n        );\n        setCurrentTaskIsMCQ(isMCQText);\n        setMCQQuestion(mcqQuestion);\n      }\n\n      setDisplayMCQInEditor(shouldDisplayMCQ);\n    },\n    [taskList, currentTaskNumber]\n  );\n\n  // Forces a re-render when saveable information changes, keeps environment state in-sync with component state\n  const computedHasUnsavedChanges = useMemo(() => {\n    return hasUnsavedChangesToMetadata || hasUnsavedChangesToBriefing || hasUnsavedChangesToTasks;\n  }, [hasUnsavedChangesToMetadata, hasUnsavedChangesToBriefing, hasUnsavedChangesToTasks]);\n\n  useEffect(() => {\n    if (computedHasUnsavedChanges !== hasUnsavedChanges) {\n      handleUpdateHasUnsavedChanges(computedHasUnsavedChanges);\n    }\n  }, [computedHasUnsavedChanges, hasUnsavedChanges, handleUpdateHasUnsavedChanges]);\n\n  /**\n   * Sets up the workspace for when the user is retrieving Mission information from a GitHub repository\n   */\n  const setUpWithAssessmentOverview = useCallback(async () => {\n    if (octokit === undefined) return;\n\n    const missionRepoData = assessmentOverview.missionRepoData;\n\n    const missionDataPromise = getMissionData(missionRepoData, octokit);\n    const isTeacherModePromise = octokit.users.getAuthenticated().then((authenticatedUser: any) => {\n      const userLogin = authenticatedUser.data.login;\n      return userLogin === missionRepoData.repoOwner;\n    });\n\n    const promises = [missionDataPromise, isTeacherModePromise];\n\n    Promise.all(promises).then((promises: any[]) => {\n      setMissionRepoData(missionRepoData);\n\n      setHasUnsavedChangesToTasks(false);\n      setHasUnsavedChangesToBriefing(false);\n      setHasUnsavedChangesToMetadata(false);\n      handleUpdateHasUnsavedChanges(false);\n\n      const missionData: MissionData = promises[0];\n      setSummary(missionData.missionBriefing);\n\n      setMissionMetadata(missionData.missionMetadata);\n      setCachedMissionMetadata(missionData.missionMetadata);\n\n      setBriefingContent(missionData.missionBriefing);\n      setCachedBriefingContent(missionData.missionBriefing);\n\n      setTaskList(missionData.tasksData);\n      setCachedTaskList(\n        missionData.tasksData.map((taskData: TaskData) => Object.assign({}, taskData))\n      );\n\n      changeStateDueToChangedTaskNumber(1, missionData.tasksData);\n\n      const isTeacherMode: boolean = promises[1];\n      setIsTeacherMode(isTeacherMode);\n\n      setIsLoading(false);\n    });\n  }, [\n    assessmentOverview,\n    octokit,\n    changeStateDueToChangedTaskNumber,\n    handleUpdateHasUnsavedChanges\n  ]);\n\n  /**\n   * Sets up the workspace for when the user is creating a new Mission\n   */\n  const setUpWithoutAssessmentOverview = useCallback(() => {\n    setSummary(defaultMissionBriefing);\n\n    setMissionMetadata(defaultMissionMetadata);\n    setCachedMissionMetadata(defaultMissionMetadata);\n\n    setBriefingContent(defaultMissionBriefing);\n    setCachedBriefingContent(defaultMissionBriefing);\n\n    setTaskList([defaultTask]);\n    setCachedTaskList([defaultTask]);\n\n    setDisplayMCQInEditor(false);\n    changeStateDueToChangedTaskNumber(1, [defaultTask]);\n\n    setHasUnsavedChangesToTasks(false);\n    setHasUnsavedChangesToBriefing(false);\n    setHasUnsavedChangesToMetadata(false);\n    handleUpdateHasUnsavedChanges(false);\n\n    setIsTeacherMode(true);\n    setIsLoading(false);\n  }, [changeStateDueToChangedTaskNumber, handleUpdateHasUnsavedChanges]);\n\n  useEffect(() => {\n    if (assessmentOverview === undefined) {\n      setUpWithoutAssessmentOverview();\n    } else {\n      setUpWithAssessmentOverview();\n    }\n  }, [assessmentOverview, setUpWithAssessmentOverview, setUpWithoutAssessmentOverview]);\n\n  const briefingOverlay = (\n    <Dialog className=\"assessment-briefing\" isOpen={showBriefingOverlay}>\n      <Card>\n        <Markdown content={summary} />\n        <Button\n          className=\"assessment-briefing-button\"\n          onClick={() => setShowBriefingOverlay(false)}\n          text=\"Continue\"\n        />\n      </Card>\n    </Dialog>\n  );\n\n  /**\n   * Handles the changes to the taskList\n   */\n  const editCode = useCallback(\n    (taskNumber: number, newValue: string) => {\n      if (taskNumber > taskList.length) {\n        return;\n      }\n      const editedTaskList = taskList.map((taskData: TaskData) => Object.assign({}, taskData));\n      editedTaskList[taskNumber - 1] = {\n        ...editedTaskList[taskNumber - 1],\n        savedCode: newValue\n      };\n\n      setTaskListWrapper(editedTaskList);\n    },\n    [taskList, setTaskListWrapper]\n  );\n\n  const resetToTemplate = useCallback(() => {\n    const originalCode = taskList[currentTaskNumber - 1].starterCode;\n    handleEditorValueChange(originalCode);\n    editCode(currentTaskNumber, originalCode);\n  }, [currentTaskNumber, editCode, handleEditorValueChange, taskList]);\n\n  const conductSave = useCallback(\n    async (\n      changedFile: string,\n      newFileContent: string,\n      githubName: string | null,\n      githubEmail: string | null,\n      commitMessage: string\n    ) => {\n      const typedMissionRepoData = missionRepoData as MissionRepoData;\n\n      const { saveType } = await checkIfFileCanBeSavedAndGetSaveType(\n        octokit,\n        typedMissionRepoData.repoOwner,\n        typedMissionRepoData.repoName,\n        changedFile\n      );\n\n      if (saveType === 'Overwrite') {\n        await performOverwritingSave(\n          octokit,\n          typedMissionRepoData.repoOwner,\n          typedMissionRepoData.repoName,\n          changedFile,\n          githubName,\n          githubEmail,\n          commitMessage,\n          newFileContent\n        );\n      }\n\n      if (saveType === 'Create') {\n        await performCreatingSave(\n          octokit,\n          typedMissionRepoData.repoOwner,\n          typedMissionRepoData.repoName,\n          changedFile,\n          githubName,\n          githubEmail,\n          commitMessage,\n          newFileContent\n        );\n      }\n    },\n    [missionRepoData, octokit]\n  );\n\n  const conductDelete = useCallback(\n    async (\n      fileName: string,\n      githubName: string | null,\n      githubEmail: string | null,\n      commitMessage: string\n    ) => {\n      const typedMissionRepoData = missionRepoData as MissionRepoData;\n\n      await performFolderDeletion(\n        octokit,\n        typedMissionRepoData.repoOwner,\n        typedMissionRepoData.repoName,\n        fileName,\n        githubName,\n        githubEmail,\n        commitMessage\n      );\n    },\n    [missionRepoData, octokit]\n  );\n\n  /**\n   * To be used when the information to be saved corresponds to an existing GitHub repository\n   */\n  const saveWithMissionRepoData = useCallback(async () => {\n    if (octokit === undefined) {\n      showWarningMessage('Please sign in with GitHub!', 2000);\n      return;\n    }\n\n    const [filenameToContentMap, foldersToDelete] = discoverFilesToBeChangedWithMissionRepoData(\n      missionMetadata,\n      cachedMissionMetadata,\n      briefingContent,\n      cachedBriefingContent,\n      taskList,\n      cachedTaskList,\n      isTeacherMode\n    );\n    const changedFiles = Object.keys(filenameToContentMap);\n\n    type GetAuthenticatedResponse = GetResponseTypeFromEndpointMethod<\n      typeof octokit.users.getAuthenticated\n    >;\n    const authUser: GetAuthenticatedResponse = await octokit.users.getAuthenticated();\n    const githubName = authUser.data.name;\n    const githubEmail = authUser.data.email;\n    const commitMessage = '';\n\n    for (let i = 0; i < foldersToDelete.length; i++) {\n      await conductDelete(foldersToDelete[i], githubName, githubEmail, commitMessage);\n    }\n\n    for (let i = 0; i < changedFiles.length; i++) {\n      const filename = changedFiles[i];\n      const newFileContent = filenameToContentMap[filename];\n      await conductSave(filename, newFileContent, githubName, githubEmail, commitMessage);\n    }\n\n    setCachedTaskList(taskList);\n    setCachedBriefingContent(briefingContent);\n    setCachedMissionMetadata(missionMetadata);\n\n    setHasUnsavedChangesToTasks(false);\n    setHasUnsavedChangesToBriefing(false);\n    setHasUnsavedChangesToMetadata(false);\n  }, [\n    octokit,\n    isTeacherMode,\n    briefingContent,\n    missionMetadata,\n    taskList,\n    cachedTaskList,\n    cachedBriefingContent,\n    cachedMissionMetadata,\n    conductSave,\n    conductDelete\n  ]);\n\n  /**\n   * To be used when the information to be saved to a new GitHub repository\n   */\n  const saveWithoutMissionRepoData = useCallback(async () => {\n    if (octokit === undefined) {\n      showWarningMessage('Please sign in with GitHub!', 2000);\n      return;\n    }\n\n    const filenameToContentMap = discoverFilesToBeCreatedWithoutMissionRepoData(\n      missionMetadata,\n      briefingContent,\n      taskList\n    );\n\n    const changedFiles = Object.keys(filenameToContentMap).sort();\n    const authUser = await octokit.users.getAuthenticated();\n\n    const dialogResults = await promisifyDialog<\n      GitHubMissionCreateDialogProps,\n      GitHubMissionCreateDialogResolution\n    >(GitHubMissionCreateDialog, resolve => ({\n      filesToCreate: changedFiles,\n      userLogin: authUser.data.login,\n      resolveDialog: dialogResults => resolve(dialogResults)\n    }));\n\n    if (!dialogResults.confirmSave) {\n      return;\n    }\n\n    const githubName = authUser.data.name;\n    const githubEmail = authUser.data.email;\n    const repoName = dialogResults.repoName;\n    const repoOwner = authUser.data.login;\n\n    try {\n      await octokit.repos.createForAuthenticatedUser({\n        name: repoName\n      });\n\n      for (let i = 0; i < changedFiles.length; i++) {\n        const fileToCreate = changedFiles[i];\n        const fileContent = filenameToContentMap[fileToCreate];\n\n        await performCreatingSave(\n          octokit,\n          repoOwner,\n          repoName,\n          fileToCreate,\n          githubName,\n          githubEmail,\n          'Repository created from Source Academy',\n          fileContent\n        );\n      }\n\n      setCachedTaskList(taskList);\n      setCachedBriefingContent(briefingContent);\n      setCachedMissionMetadata(missionMetadata);\n\n      setHasUnsavedChangesToTasks(false);\n      setHasUnsavedChangesToBriefing(false);\n      setHasUnsavedChangesToMetadata(false);\n\n      setMissionRepoData({\n        repoOwner: repoOwner,\n        repoName: repoName,\n        dateOfCreation: new Date()\n      });\n    } catch (err) {\n      console.error(err);\n      showWarningMessage('Something went wrong while creating the repository!', 2000);\n    }\n  }, [briefingContent, missionMetadata, octokit, taskList]);\n\n  const onClickSave = useCallback(() => {\n    if (assessmentOverview !== undefined && new Date() > assessmentOverview.dueDate) {\n      showWarningMessage('It is past the due date for this assessment!');\n      return;\n    }\n\n    if (missionRepoData !== undefined) {\n      saveWithMissionRepoData();\n    } else {\n      saveWithoutMissionRepoData();\n    }\n  }, [assessmentOverview, missionRepoData, saveWithMissionRepoData, saveWithoutMissionRepoData]);\n\n  const onClickReset = useCallback(async () => {\n    const confirmReset = await showSimpleConfirmDialog({\n      contents: (\n        <div className={Classes.DIALOG_BODY}>\n          <Markdown content=\"Are you sure you want to reset the template?\" />\n          <Markdown content=\"*Note this will not affect the saved copy of your program, unless you save over it.*\" />\n        </div>\n      ),\n      negativeLabel: 'Cancel',\n      positiveIntent: 'primary',\n      positiveLabel: 'Confirm'\n    });\n\n    if (confirmReset) {\n      resetToTemplate();\n    }\n  }, [resetToTemplate]);\n\n  /**\n   * Checks to ensure that the user wants to discard their current changes\n   */\n  const shouldProceedToChangeTask = useCallback(\n    (\n      currentTaskNumber: number,\n      taskList: TaskData[],\n      cachedTaskList: TaskData[],\n      missionRepoData: MissionRepoData\n    ) => {\n      if (missionRepoData === undefined) {\n        return true;\n      }\n\n      const taskIndex = currentTaskNumber - 1;\n      if (!isEqual(taskList[taskIndex], cachedTaskList[taskIndex])) {\n        return window.confirm(\n          'You have unsaved changes to the current question. Are you sure you want to continue?'\n        );\n      }\n\n      return true;\n    },\n    []\n  );\n\n  const onClickPrevious = useCallback(() => {\n    if (\n      shouldProceedToChangeTask(\n        currentTaskNumber,\n        taskList,\n        cachedTaskList,\n        missionRepoData as MissionRepoData\n      )\n    ) {\n      let activeTaskList = taskList;\n      if (missionRepoData !== undefined) {\n        activeTaskList = cachedTaskList.map((taskData: TaskData) => Object.assign({}, taskData));\n        setTaskListWrapper(activeTaskList);\n      }\n      const newTaskNumber = currentTaskNumber - 1;\n      changeStateDueToChangedTaskNumber(newTaskNumber, activeTaskList);\n    }\n  }, [\n    currentTaskNumber,\n    taskList,\n    cachedTaskList,\n    missionRepoData,\n    setTaskListWrapper,\n    shouldProceedToChangeTask,\n    changeStateDueToChangedTaskNumber\n  ]);\n\n  const onClickNext = useCallback(() => {\n    if (\n      shouldProceedToChangeTask(\n        currentTaskNumber,\n        taskList,\n        cachedTaskList,\n        missionRepoData as MissionRepoData\n      )\n    ) {\n      let activeTaskList = taskList;\n      if (missionRepoData !== undefined) {\n        activeTaskList = cachedTaskList.map((taskData: TaskData) => Object.assign({}, taskData));\n        setTaskListWrapper(activeTaskList);\n      }\n      const newTaskNumber = currentTaskNumber + 1;\n      changeStateDueToChangedTaskNumber(newTaskNumber, activeTaskList);\n    }\n  }, [\n    currentTaskNumber,\n    taskList,\n    cachedTaskList,\n    missionRepoData,\n    setTaskListWrapper,\n    shouldProceedToChangeTask,\n    changeStateDueToChangedTaskNumber\n  ]);\n\n  const onClickReturn = useCallback(() => {\n    history.push('/githubassessments/missions');\n  }, []);\n\n  /**\n   * Handles toggling of relevant SideContentTabs when mobile breakpoint it hit\n   */\n  React.useEffect(() => {\n    if (\n      !isMobileBreakpoint &&\n      (selectedTab === SideContentType.mobileEditor ||\n        selectedTab === SideContentType.mobileEditorRun)\n    ) {\n      setSelectedTab(SideContentType.questionOverview);\n    }\n  }, [isMobileBreakpoint, props, selectedTab]);\n\n  const onEditorValueChange = React.useCallback(\n    val => {\n      handleEditorValueChange(val);\n      editCode(currentTaskNumber, val);\n    },\n    [currentTaskNumber, editCode, handleEditorValueChange]\n  );\n\n  const onChangeTabs = (\n    newTabId: SideContentType,\n    prevTabId: SideContentType,\n    event: React.MouseEvent<HTMLElement>\n  ) => {\n    if (newTabId === prevTabId) {\n      return;\n    }\n    setSelectedTab(newTabId);\n  };\n\n  /**\n   * handleEval used in both the Run button, and during 'shift-enter' in AceEditor\n   *\n   * However, AceEditor only binds commands on mount (https://github.com/securingsincity/react-ace/issues/684)\n   * Thus, we use a mutable ref to overcome the stale closure problem\n   */\n  const activeTab = React.useRef(selectedTab);\n  activeTab.current = selectedTab;\n  const handleEval = () => {\n    props.handleEditorEval();\n\n    // Run testcases when the GitHub testcases tab is selected\n    if (activeTab.current === SideContentType.testcases) {\n      dispatch(runAllTestcases(workspaceLocation));\n    }\n  };\n\n  const setTaskDescriptions = useCallback(\n    (newTaskDescriptions: string[]) => {\n      const newTaskList: TaskData[] = [];\n\n      for (let i = 0; i < taskList.length; i++) {\n        const nextElement = Object.assign({}, taskList[i]) as TaskData;\n        nextElement.taskDescription = newTaskDescriptions[i];\n        newTaskList.push(nextElement);\n      }\n\n      setTaskListWrapper(newTaskList);\n    },\n    [taskList, setTaskListWrapper]\n  );\n\n  const setTaskTestcases = useCallback(\n    (newTestcases: Testcase[]) => {\n      const editedTaskList = taskList.map((taskData: TaskData) => Object.assign({}, taskData));\n      editedTaskList[currentTaskNumber - 1] = {\n        ...editedTaskList[currentTaskNumber - 1],\n        testCases: newTestcases\n      };\n\n      handleUpdateWorkspace({\n        editorTestcases: editedTaskList[currentTaskNumber - 1].testCases\n      });\n\n      setTaskListWrapper(editedTaskList);\n    },\n    [currentTaskNumber, taskList, handleUpdateWorkspace, setTaskListWrapper]\n  );\n\n  const setTestPrepend = useCallback(\n    (newTestPrepend: string) => {\n      const editedTaskList = taskList.map((taskData: TaskData) => Object.assign({}, taskData));\n      editedTaskList[currentTaskNumber - 1] = {\n        ...editedTaskList[currentTaskNumber - 1],\n        testPrepend: newTestPrepend\n      };\n      setTaskListWrapper(editedTaskList);\n    },\n    [currentTaskNumber, taskList, setTaskListWrapper]\n  );\n\n  const setTestPostpend = useCallback(\n    (newTestPostpend: string) => {\n      const editedTaskList = taskList.map((taskData: TaskData) => Object.assign({}, taskData));\n      editedTaskList[currentTaskNumber - 1] = {\n        ...editedTaskList[currentTaskNumber - 1],\n        testPostpend: newTestPostpend\n      };\n      setTaskListWrapper(editedTaskList);\n    },\n    [currentTaskNumber, taskList, setTaskListWrapper]\n  );\n\n  const sideContentProps: (p: GitHubAssessmentWorkspaceProps) => SideContentProps = (\n    props: GitHubAssessmentWorkspaceProps\n  ) => {\n    const tabs: SideContentTab[] = [\n      {\n        label: 'Task',\n        iconName: IconNames.NINJA,\n        body: (\n          <SideContentTaskEditor\n            allowEdits={isTeacherMode}\n            currentTaskNumber={currentTaskNumber}\n            taskDescriptions={taskList.map(taskData => taskData.taskDescription)}\n            setTaskDescriptions={setTaskDescriptions}\n          />\n        ),\n        id: SideContentType.questionOverview\n      },\n      {\n        label: 'Briefing',\n        iconName: IconNames.BRIEFCASE,\n        body: (\n          <SideContentMarkdownEditor\n            allowEdits={isTeacherMode}\n            content={briefingContent}\n            setContent={setBriefingContentWrapper}\n          />\n        ),\n        id: SideContentType.briefing\n      }\n    ];\n\n    const taskIndex = currentTaskNumber - 1;\n    const testPrepend = taskList[taskIndex] ? taskList[taskIndex].testPrepend : '';\n    const testPostpend = taskList[taskIndex] ? taskList[taskIndex].testPostpend : '';\n    tabs.push({\n      label: 'Testcases',\n      iconName: IconNames.AIRPLANE,\n      body: (\n        <SideContentTestcaseEditor\n          allowEdits={isTeacherMode}\n          testcases={editorTestcases}\n          testPrepend={testPrepend}\n          testPostpend={testPostpend}\n          setTaskTestcases={setTaskTestcases}\n          setTestPrepend={setTestPrepend}\n          setTestPostpend={setTestPostpend}\n          handleTestcaseEval={testcaseId => dispatch(evalTestcase(workspaceLocation, testcaseId))}\n        />\n      ),\n      id: SideContentType.testcases\n    });\n\n    if (isTeacherMode) {\n      // Teachers have ability to edit mission metadata\n      tabs.push({\n        label: 'Mission Metadata',\n        iconName: IconNames.BUILD,\n        body: (\n          <SideContentMissionEditor\n            missionMetadata={missionMetadata}\n            setMissionMetadata={setMissionMetadataWrapper}\n          />\n        ),\n        id: SideContentType.missionMetadata\n      });\n    }\n\n    return {\n      selectedTabId: selectedTab,\n      tabs: {\n        beforeDynamicTabs: tabs,\n        afterDynamicTabs: []\n      },\n      onChange: onChangeTabs,\n      workspaceLocation: 'githubAssessment'\n    };\n  };\n\n  const addNewQuestion = () => {\n    const newTaskList = taskList\n      .slice(0, currentTaskNumber)\n      .concat([defaultTask])\n      .concat(taskList.slice(currentTaskNumber, taskList.length));\n    setTaskListWrapper(newTaskList);\n\n    const newTaskNumber = currentTaskNumber + 1;\n    changeStateDueToChangedTaskNumber(newTaskNumber, newTaskList);\n  };\n\n  const deleteCurrentQuestion = () => {\n    const deleteAtIndex = currentTaskNumber - 1;\n\n    const newTaskList = taskList\n      .slice(0, deleteAtIndex)\n      .concat(taskList.slice(currentTaskNumber, taskList.length));\n    setTaskListWrapper(newTaskList);\n\n    const newTaskNumber = currentTaskNumber === 1 ? currentTaskNumber : currentTaskNumber - 1;\n    changeStateDueToChangedTaskNumber(newTaskNumber, newTaskList);\n  };\n\n  const controlBarProps: () => ControlBarProps = () => {\n    const runButton = <ControlBarRunButton handleEditorEval={handleEval} key=\"run\" />;\n\n    const saveButton = (\n      <ControlButtonSaveButton\n        hasUnsavedChanges={hasUnsavedChanges}\n        key=\"save\"\n        onClickSave={onClickSave}\n      />\n    );\n\n    const resetButton = <ControlBarResetButton key=\"reset\" onClick={onClickReset} />;\n\n    const chapterSelect = (\n      <ControlBarChapterSelect\n        handleChapterSelect={() => {}}\n        sourceChapter={missionMetadata.sourceVersion}\n        sourceVariant={Constants.defaultSourceVariant}\n        disabled={true}\n        key=\"chapter\"\n      />\n    );\n\n    const nextButton = (\n      <ControlBarNextButton\n        onClickNext={onClickNext}\n        onClickReturn={onClickReturn}\n        questionProgress={[currentTaskNumber, taskList.length]}\n        key=\"next_question\"\n      />\n    );\n\n    const previousButton = (\n      <ControlBarPreviousButton\n        onClick={onClickPrevious}\n        questionProgress={[currentTaskNumber, taskList.length]}\n        key=\"previous_question\"\n      />\n    );\n\n    const questionView = (\n      <ControlBarQuestionViewButton\n        key=\"task_view\"\n        questionProgress={[currentTaskNumber, taskList.length]}\n      />\n    );\n\n    const editorButtons = !isMobileBreakpoint\n      ? [runButton, saveButton, resetButton, chapterSelect]\n      : [saveButton, resetButton];\n\n    if (isTeacherMode) {\n      const addTaskButton = (\n        <ControlBarTaskAddButton\n          addNewQuestion={addNewQuestion}\n          numberOfTasks={taskList.length}\n          key=\"add_task\"\n        />\n      );\n      const deleteTaskButton = (\n        <ControlBarTaskDeleteButton\n          deleteCurrentQuestion={deleteCurrentQuestion}\n          numberOfTasks={taskList.length}\n          key=\"delete_task\"\n        />\n      );\n      const showMCQButton = (\n        <ControlBarDisplayMCQButton\n          displayMCQInEditor={() => setDisplayMCQInEditorWrapper(true)}\n          displayTextInEditor={() => setDisplayMCQInEditorWrapper(false)}\n          mcqDisplayed={displayMCQInEditor}\n          key=\"display MCQ\"\n        />\n      );\n\n      editorButtons.push(addTaskButton, deleteTaskButton, showMCQButton);\n    }\n\n    const flowButtons = [previousButton, questionView, nextButton];\n\n    return {\n      editorButtons: editorButtons,\n      flowButtons: flowButtons\n    };\n  };\n\n  const mobileSideContentProps: () => MobileSideContentProps = () => {\n    const onChangeTabs = (\n      newTabId: SideContentType,\n      prevTabId: SideContentType,\n      event: React.MouseEvent<HTMLElement>\n    ) => {\n      if (newTabId === prevTabId) {\n        return;\n      }\n\n      // Do nothing when clicking the mobile 'Run' tab while on the testcases tab.\n      if (\n        !(prevTabId === SideContentType.testcases && newTabId === SideContentType.mobileEditorRun)\n      ) {\n        setSelectedTab(newTabId);\n      }\n    };\n\n    const sideContent = sideContentProps(props);\n\n    return {\n      mobileControlBarProps: {\n        ...controlBarProps()\n      },\n      ...sideContent,\n      onChange: onChangeTabs,\n      selectedTabId: selectedTab,\n      handleEditorEval: handleEval\n    };\n  };\n\n  const replButtons = () => {\n    const clearButton = (\n      <ControlBarClearButton handleReplOutputClear={handleReplOutputClear} key=\"clear_repl\" />\n    );\n\n    const evalButton = (\n      <ControlBarEvalButton\n        handleReplEval={props.handleReplEval}\n        isRunning={props.isRunning}\n        key=\"eval_repl\"\n      />\n    );\n\n    return [evalButton, clearButton];\n  };\n\n  const handleMCQSubmit = useCallback(\n    (choiceId: number) => {\n      if (!currentTaskIsMCQ) {\n        return;\n      }\n\n      const newMCQQuestion = Object.assign({}, mcqQuestion);\n      newMCQQuestion.answer = choiceId;\n\n      setMCQQuestion(newMCQQuestion);\n      editCode(currentTaskNumber, convertIMCQQuestionToMCQText(newMCQQuestion));\n    },\n    [currentTaskIsMCQ, currentTaskNumber, editCode, mcqQuestion]\n  );\n\n  const mcqProps = useMemo(() => {\n    return currentTaskIsMCQ && displayMCQInEditor\n      ? {\n          mcq: mcqQuestion,\n          handleMCQSubmit: handleMCQSubmit\n        }\n      : undefined;\n  }, [currentTaskIsMCQ, displayMCQInEditor, mcqQuestion, handleMCQSubmit]);\n\n  const editorContainerProps: NormalEditorContainerProps = {\n    editorVariant: 'normal',\n    editorTabs: props.editorTabs.map(convertEditorTabStateToProps),\n    editorSessionId: '',\n    handleDeclarationNavigate: (cursorPosition: Position) =>\n      dispatch(navigateToDeclaration(workspaceLocation, cursorPosition)),\n    handleEditorEval: handleEval,\n    handleEditorValueChange: onEditorValueChange,\n    handleUpdateHasUnsavedChanges: handleUpdateHasUnsavedChanges,\n    handleEditorUpdateBreakpoints: (breakpoints: string[]) =>\n      dispatch(setEditorBreakpoint(breakpoints, workspaceLocation)),\n    handlePromptAutocomplete: (row: number, col: number, callback: any) =>\n      dispatch(promptAutocomplete(workspaceLocation, row, col, callback)),\n    isEditorAutorun: false\n  };\n  const replProps = {\n    handleBrowseHistoryDown: () => dispatch(browseReplHistoryDown(workspaceLocation)),\n    handleBrowseHistoryUp: () => dispatch(browseReplHistoryUp(workspaceLocation)),\n    handleReplEval: props.handleReplEval,\n    handleReplValueChange: (newValue: string) =>\n      dispatch(updateReplValue(newValue, workspaceLocation)),\n    output: props.output,\n    replValue: props.replValue,\n    sourceChapter: missionMetadata.sourceVersion || Chapter.CLANG,\n    sourceVariant: Variant.DEFAULT,\n    externalLibrary: ExternalLibraryName.NONE,\n    replButtons: replButtons()\n  };\n  const sideBarProps = {\n    tabs: []\n  };\n  const workspaceProps: WorkspaceProps = {\n    controlBarProps: controlBarProps(),\n    editorContainerProps: currentTaskIsMCQ && displayMCQInEditor ? undefined : editorContainerProps,\n    handleSideContentHeightChange: heightChange =>\n      dispatch(changeSideContentHeight(heightChange, workspaceLocation)),\n    hasUnsavedChanges: hasUnsavedChanges,\n    mcqProps: mcqProps,\n    sideBarProps: sideBarProps,\n    sideContentHeight: props.sideContentHeight,\n    sideContentProps: sideContentProps(props),\n    replProps: replProps\n  };\n  const mobileWorkspaceProps: MobileWorkspaceProps = {\n    editorContainerProps: currentTaskIsMCQ && displayMCQInEditor ? undefined : editorContainerProps,\n    replProps: replProps,\n    sideBarProps: sideBarProps,\n    hasUnsavedChanges: hasUnsavedChanges,\n    mcqProps: mcqProps,\n    mobileSideContentProps: mobileSideContentProps()\n  };\n\n  if (isLoading) {\n    return (\n      <div className={classNames('missionLoading', Classes.DARK)}>\n        <NonIdealState description=\"Loading\" icon={<Spinner size={SpinnerSize.LARGE} />} />\n      </div>\n    );\n  } else {\n    return (\n      <div className={classNames('WorkspaceParent', Classes.DARK)}>\n        {briefingOverlay}\n        {isMobileBreakpoint ? (\n          <MobileWorkspace {...mobileWorkspaceProps} />\n        ) : (\n          <Workspace {...workspaceProps} />\n        )}\n      </div>\n    );\n  }\n};\n\nexport default GitHubAssessmentWorkspace;\n","import { Chapter, Variant } from 'Clang-slang/dist/types';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { OverallState } from '../../commons/application/ApplicationTypes';\nimport {\n  chapterSelect,\n  clearReplOutput,\n  evalEditor,\n  evalRepl,\n  updateEditorValue,\n  updateHasUnsavedChanges,\n  updateWorkspace\n} from '../../commons/workspace/WorkspaceActions';\nimport { WorkspaceLocation, WorkspaceState } from '../../commons/workspace/WorkspaceTypes';\nimport MissionEditor, { DispatchProps, StateProps } from './GitHubAssessmentWorkspace';\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, OverallState> = state => {\n  return {\n    activeEditorTabIndex: state.workspaces.githubAssessment.activeEditorTabIndex,\n    editorTabs: state.workspaces.githubAssessment.editorTabs,\n    editorTestcases: state.workspaces.githubAssessment.editorTestcases,\n    hasUnsavedChanges: state.workspaces.githubAssessment.hasUnsavedChanges,\n    isRunning: state.workspaces.githubAssessment.isRunning,\n    isDebugging: state.workspaces.githubAssessment.isDebugging,\n    enableDebugging: state.workspaces.githubAssessment.enableDebugging,\n    output: state.workspaces.githubAssessment.output,\n    replValue: state.workspaces.githubAssessment.replValue,\n    sideContentHeight: state.workspaces.githubAssessment.sideContentHeight,\n    sourceChapter: Chapter.CLANG\n  };\n};\n\nconst workspaceLocation: WorkspaceLocation = 'githubAssessment';\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      handleChapterSelect: (chapter: Chapter) =>\n        chapterSelect(chapter, Variant.DEFAULT, workspaceLocation),\n      handleEditorEval: () => evalEditor(workspaceLocation),\n      handleEditorValueChange: (val: string) => updateEditorValue(val, workspaceLocation),\n      handleReplEval: () => evalRepl(workspaceLocation),\n      handleReplOutputClear: () => clearReplOutput(workspaceLocation),\n      handleUpdateHasUnsavedChanges: (hasUnsavedChanges: boolean) =>\n        updateHasUnsavedChanges(workspaceLocation, hasUnsavedChanges),\n      handleUpdateWorkspace: (options: Partial<WorkspaceState>) =>\n        updateWorkspace(workspaceLocation, options)\n    },\n    dispatch\n  );\n\nconst GitHubAssessmentWorkspaceContainer = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(MissionEditor)\n);\n\nexport default GitHubAssessmentWorkspaceContainer;\n","import { ButtonGroup } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\nimport * as React from 'react';\nimport { useResponsive, useTypedSelector } from 'src/commons/utils/Hooks';\n\nimport ControlButton from '../../ControlButton';\n\nexport type ControlBarGitHubLoginButtonProps = {\n  onClickLogIn: () => void;\n  onClickLogOut: () => void;\n};\n\n/**\n * GitHub buttons to be used for the GitHub-hosted mission interface.\n *\n * @param props Component properties\n */\nexport const ControlBarGitHubLoginButton: React.FC<ControlBarGitHubLoginButtonProps> = props => {\n  const { isMobileBreakpoint } = useResponsive();\n  const isLoggedIn =\n    useTypedSelector(store => store.session.githubOctokitObject).octokit !== undefined;\n\n  const loginButton = isLoggedIn ? (\n    <ControlButton label=\"Log Out\" icon={IconNames.GIT_BRANCH} onClick={props.onClickLogOut} />\n  ) : (\n    <ControlButton label=\"Log In\" icon={IconNames.GIT_BRANCH} onClick={props.onClickLogIn} />\n  );\n\n  return <ButtonGroup large={!isMobileBreakpoint}>{loginButton}</ButtonGroup>;\n};\n","import {\n  Alignment,\n  Button,\n  Classes,\n  Icon,\n  InputGroup,\n  Menu,\n  MenuItem,\n  Navbar,\n  NavbarGroup\n} from '@blueprintjs/core';\nimport { IconName, IconNames } from '@blueprintjs/icons';\nimport { Popover2 } from '@blueprintjs/popover2';\nimport { Octokit } from '@octokit/rest';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { GHAssessmentTypeOverview } from '../../../pages/githubAssessments/GitHubClassroom';\nimport { ControlBarGitHubLoginButton } from '../../controlBar/github/ControlBarGitHubLoginButton';\nimport { assessmentTypeLink } from '../../utils/ParamParseHelper';\n\ntype GitHubAssessmentsNavigationBarProps = DispatchProps & StateProps;\n\ntype DispatchProps = {\n  changeCourseHandler: (e: any) => void;\n  handleGitHubLogIn: () => void;\n  handleGitHubLogOut: () => void;\n};\n\ntype StateProps = {\n  octokit?: Octokit;\n  courses?: string[];\n  selectedCourse: string;\n  types?: string[];\n  assessmentTypeOverviews?: GHAssessmentTypeOverview[];\n};\n\n/**\n * The white navbar for the website. Should only be displayed when using GitHub-hosted missions.\n */\nconst GitHubAssessmentsNavigationBar: React.FC<GitHubAssessmentsNavigationBarProps> = props => {\n  const handleClick = (e: any) => {\n    props.changeCourseHandler(e);\n  };\n\n  return (\n    <Navbar className=\"NavigationBar secondary-navbar\">\n      <NavbarGroup align={Alignment.LEFT}>\n        {props.types?.map((type, idx) => {\n          return (\n            <NavLink\n              key={type}\n              to={{\n                pathname: `/githubassessments/${assessmentTypeLink(type)}`,\n                state: {\n                  courses: props.courses,\n                  assessmentTypeOverviews: props.assessmentTypeOverviews,\n                  selectedCourse: props.selectedCourse\n                }\n              }}\n              activeClassName={Classes.ACTIVE}\n              className={classNames('NavigationBar__link', Classes.BUTTON, Classes.MINIMAL)}\n            >\n              <Icon icon={idx < 5 ? icons[idx] : icons[0]} />\n              <div className=\"navbar-button-text hidden-xs hidden-sm\">{type}</div>\n            </NavLink>\n          );\n        })}\n      </NavbarGroup>\n      <NavbarGroup align={Alignment.RIGHT}>\n        {props.octokit !== undefined && props.types && props.types.length > 0 && (\n          <InputGroup\n            key=\"courseselect\"\n            disabled={true}\n            leftElement={\n              <Popover2\n                content={\n                  <Menu>\n                    {props.courses?.map((course: string) => (\n                      <MenuItem key={course} onClick={handleClick} text={course} />\n                    ))}\n                  </Menu>\n                }\n                placement={'bottom-end'}\n              >\n                <Button minimal={true} rightIcon=\"caret-down\" aria-label=\"choose\" />\n              </Popover2>\n            }\n            placeholder={'Select Course'}\n            onChange={props.changeCourseHandler}\n            value={props.selectedCourse}\n          />\n        )}\n        <ControlBarGitHubLoginButton\n          key=\"loginlogout\"\n          onClickLogIn={props.handleGitHubLogIn}\n          onClickLogOut={props.handleGitHubLogOut}\n        />\n      </NavbarGroup>\n    </Navbar>\n  );\n};\n\nconst icons: IconName[] = [\n  IconNames.FLAME,\n  IconNames.LIGHTBULB,\n  IconNames.PREDICTIVE_ANALYSIS,\n  IconNames.COMPARISON,\n  IconNames.MANUAL\n];\n\nexport default GitHubAssessmentsNavigationBar;\n","import { AssessmentType } from '../assessment/AssessmentTypes';\n\n/**\n * Converts an AssessmentType into a string for use in URLs.\n */\nexport const assessmentTypeLink = (assessmentType: AssessmentType): string =>\n  assessmentType.toLowerCase().replace(/\\W+/g, '_');\n\n/** Converts an optional string\n *  parameter into an integer or null value.\n *\n *  @param {string} str - An optional string to be\n *    converted to an integer.\n */\nexport const stringParamToInt = (str?: string): number | null => {\n  if (str === undefined) {\n    return null;\n  }\n  const num = parseInt(str, 10);\n  return Number.isInteger(num) ? num : null;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeWrapper = void 0;\n// tslint:disable-next-line:ban-types\nfunction makeWrapper(originalFunc, wrappedFunc) {\n    for (const prop in originalFunc) {\n        if (originalFunc.hasOwnProperty(prop)) {\n            Object.defineProperty(wrappedFunc, prop, Object.getOwnPropertyDescriptor(originalFunc, prop));\n        }\n    }\n    for (const prop of ['length', 'name']) {\n        if (originalFunc.hasOwnProperty(prop)) {\n            Object.defineProperty(wrappedFunc, prop, Object.getOwnPropertyDescriptor(originalFunc, prop));\n        }\n    }\n}\nexports.makeWrapper = makeWrapper;\n//# sourceMappingURL=makeWrapper.js.map","export const BEGIN_INTERRUPT_EXECUTION = 'BEGIN_INTERRUPT_EXECUTION';\nexport const END_INTERRUPT_EXECUTION = 'END_INTERRUPT_EXECUTION';\nexport const EVAL_INTERPRETER_ERROR = 'EVAL_INTERPRETER_ERROR';\nexport const EVAL_INTERPRETER_SUCCESS = 'EVAL_INTERPRETER_SUCCESS';\nexport const EVAL_TESTCASE_FAILURE = 'EVAL_TESTCASE_FAILURE';\nexport const EVAL_TESTCASE_SUCCESS = 'EVAL_TESTCASE_SUCCESS';\nexport const HANDLE_CONSOLE_LOG = 'HANDLE_CONSOLE_LOG';\nexport const BEGIN_DEBUG_PAUSE = 'BEGIN_DEBUG_PAUSE';\nexport const END_DEBUG_PAUSE = 'END_DEBUG_PAUSE';\nexport const DEBUG_RESUME = 'DEBUG_RESUME';\nexport const DEBUG_RESET = 'DEBUG_RESET';\nexport const HIGHLIGHT_LINE = 'HIGHLIGHT_LINE';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findAncestors = exports.isInLoc = exports.findDeclarationNode = exports.findIdentifierNode = void 0;\nconst walkers_1 = require(\"./utils/walkers\");\n// Finds the innermost node that matches the given location\nfunction findIdentifierNode(root, context, loc) {\n    function findByLocationPredicate(type, node) {\n        const location = node.loc;\n        const nodeType = node.type;\n        if (nodeType && location) {\n            return (nodeType === 'Identifier' &&\n                location.start.line === loc.line &&\n                location.start.column <= loc.column &&\n                location.end.column >= loc.column);\n        }\n        return false;\n    }\n    const found = (0, walkers_1.findNodeAt)(root, undefined, undefined, findByLocationPredicate, customWalker);\n    return found === null || found === void 0 ? void 0 : found.node;\n}\nexports.findIdentifierNode = findIdentifierNode;\n// Recursively searches up the ancestors of the identifier from innermost to outermost scope\nfunction findDeclarationNode(program, identifier) {\n    const ancestors = findAncestors(program, identifier);\n    if (!ancestors)\n        return undefined;\n    const declarations = [];\n    for (const root of ancestors) {\n        (0, walkers_1.recursive)(root, undefined, {\n            BlockStatement(node, state, callback) {\n                if (containsNode(node, identifier)) {\n                    node.body.map(n => callback(n, state));\n                }\n            },\n            ForStatement(node, state, callback) {\n                if (containsNode(node, identifier)) {\n                    callback(node.init, state);\n                    callback(node.body, state);\n                }\n            },\n            FunctionDeclaration(node, state, callback) {\n                if (node.id && node.id.name === identifier.name) {\n                    declarations.push(node.id);\n                }\n                else if (containsNode(node, identifier)) {\n                    const param = node.params.find(n => n.name === identifier.name);\n                    if (param) {\n                        declarations.push(param);\n                    }\n                    else {\n                        callback(node.body, state);\n                    }\n                }\n            },\n            ArrowFunctionExpression(node, state, callback) {\n                if (containsNode(node, identifier)) {\n                    const param = node.params.find(n => n.name === identifier.name);\n                    if (param) {\n                        declarations.push(param);\n                    }\n                    else {\n                        callback(node.body, state);\n                    }\n                }\n            },\n            VariableDeclarator(node, _state, _callback) {\n                if (node.id.name === identifier.name) {\n                    declarations.push(node.id);\n                }\n            },\n            ImportSpecifier(node, _state, _callback) {\n                if (node.imported.name === identifier.name) {\n                    declarations.push(node.imported);\n                }\n            }\n        });\n        if (declarations.length > 0) {\n            return declarations.shift();\n        }\n    }\n    return undefined;\n}\nexports.findDeclarationNode = findDeclarationNode;\nfunction containsNode(nodeOuter, nodeInner) {\n    const outerLoc = nodeOuter.loc;\n    const innerLoc = nodeInner.loc;\n    return (outerLoc != null &&\n        innerLoc != null &&\n        isInLoc(innerLoc.start.line, innerLoc.start.column, outerLoc) &&\n        isInLoc(innerLoc.end.line, innerLoc.end.column, outerLoc));\n}\n// This checks if a given (line, col) value is part of another node.\nfunction isInLoc(line, col, location) {\n    if (location == null) {\n        return false;\n    }\n    if (location.start.line < line && location.end.line > line) {\n        return true;\n    }\n    else if (location.start.line === line && location.end.line > line) {\n        return location.start.column <= col;\n    }\n    else if (location.start.line < line && location.end.line === line) {\n        return location.end.column >= col;\n    }\n    else if (location.start.line === line && location.end.line === line) {\n        if (location.start.column <= col && location.end.column >= col) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexports.isInLoc = isInLoc;\nfunction findAncestors(root, identifier) {\n    let foundAncestors = [];\n    (0, walkers_1.ancestor)(root, {\n        Identifier: (node, ancestors) => {\n            if (identifier.name === node.name && identifier.loc === node.loc) {\n                foundAncestors = Object.assign([], ancestors).reverse();\n                foundAncestors.shift(); // Remove the identifier node\n            }\n        },\n        /* We need a separate visitor for VariablePattern because\n      acorn walk ignores Identifers on the left side of expressions.\n      Here is a github issue in acorn-walk related to this:\n      https://github.com/acornjs/acorn/issues/686\n      */\n        VariablePattern: (node, ancestors) => {\n            if (identifier.name === node.name && identifier.loc === node.loc) {\n                foundAncestors = Object.assign([], ancestors).reverse();\n            }\n        }\n    }, customWalker);\n    return foundAncestors;\n}\nexports.findAncestors = findAncestors;\nconst customWalker = Object.assign(Object.assign({}, walkers_1.base), { ImportSpecifier(node, st, c) {\n        c(node.imported, st, 'Expression');\n    } });\n//# sourceMappingURL=finder.js.map","import { SourceError, Value } from 'Clang-slang/dist/types';\nimport { action } from 'typesafe-actions';\n\nimport { WorkspaceLocation } from '../../workspace/WorkspaceTypes';\nimport {\n  BEGIN_DEBUG_PAUSE,\n  BEGIN_INTERRUPT_EXECUTION,\n  DEBUG_RESET,\n  DEBUG_RESUME,\n  END_DEBUG_PAUSE,\n  END_INTERRUPT_EXECUTION,\n  EVAL_INTERPRETER_ERROR,\n  EVAL_INTERPRETER_SUCCESS,\n  EVAL_TESTCASE_FAILURE,\n  EVAL_TESTCASE_SUCCESS,\n  HANDLE_CONSOLE_LOG\n} from '../types/InterpreterTypes';\n\nexport const handleConsoleLog = (workspaceLocation: WorkspaceLocation, ...logString: string[]) =>\n  action(HANDLE_CONSOLE_LOG, { logString, workspaceLocation });\n\nexport const evalInterpreterSuccess = (value: Value, workspaceLocation: WorkspaceLocation) =>\n  action(EVAL_INTERPRETER_SUCCESS, { type: 'result', value, workspaceLocation });\n\nexport const evalTestcaseSuccess = (\n  value: Value,\n  workspaceLocation: WorkspaceLocation,\n  index: number\n) => action(EVAL_TESTCASE_SUCCESS, { type: 'result', value, workspaceLocation, index });\n\nexport const evalTestcaseFailure = (\n  value: Value,\n  workspaceLocation: WorkspaceLocation,\n  index: number\n) => action(EVAL_TESTCASE_FAILURE, { type: 'errors', value, workspaceLocation, index });\n\nexport const evalInterpreterError = (errors: SourceError[], workspaceLocation: WorkspaceLocation) =>\n  action(EVAL_INTERPRETER_ERROR, { type: 'errors', errors, workspaceLocation });\n\nexport const beginInterruptExecution = (workspaceLocation: WorkspaceLocation) =>\n  action(BEGIN_INTERRUPT_EXECUTION, { workspaceLocation });\n\nexport const endInterruptExecution = (workspaceLocation: WorkspaceLocation) =>\n  action(END_INTERRUPT_EXECUTION, { workspaceLocation });\n\nexport const beginDebuggerPause = (workspaceLocation: WorkspaceLocation) =>\n  action(BEGIN_DEBUG_PAUSE, { workspaceLocation });\n\nexport const endDebuggerPause = (workspaceLocation: WorkspaceLocation) =>\n  action(END_DEBUG_PAUSE, { workspaceLocation });\n\nexport const debuggerResume = (workspaceLocation: WorkspaceLocation) =>\n  action(DEBUG_RESUME, { workspaceLocation });\n\nexport const debuggerReset = (workspaceLocation: WorkspaceLocation) =>\n  action(DEBUG_RESET, { workspaceLocation });\n","import {\n  Button,\n  Classes,\n  Dialog,\n  IButtonProps,\n  IconName,\n  IDialogProps,\n  Intent\n} from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nexport interface ConfirmDialogProps<T> {\n  icon?: IconName;\n  title?: string;\n  contents?: React.ReactNode;\n  choices: Array<{ key: T; label: string; intent?: Intent; props?: IButtonProps }>;\n  largeButtons?: boolean;\n  escapeResponse?: T;\n  onResponse: (response: T) => void;\n  isOpen?: boolean;\n  props?: Omit<IDialogProps, 'isOpen'>;\n}\n\nexport function ConfirmDialog<T>(\n  props: ConfirmDialogProps<T>\n): React.ReactElement<ConfirmDialogProps<T>> {\n  const buttons = props.choices.map((choice, i) => (\n    <Button\n      key={i}\n      onClick={() => props.onResponse && props.onResponse(choice.key)}\n      intent={choice.intent}\n      fill={props.largeButtons}\n      className={classNames(props.largeButtons && 'large-button')}\n      {...choice.props}\n    >\n      {choice.label}\n    </Button>\n  ));\n  const { escapeResponse } = props;\n  const escapeHandler =\n    typeof escapeResponse === 'undefined'\n      ? undefined\n      : () => props.onResponse && props.onResponse(escapeResponse);\n  return (\n    <Dialog\n      className={classNames(Classes.DARK, 'ConfirmDialog')}\n      title={props.title}\n      isCloseButtonShown={typeof props.title === 'undefined' ? undefined : false}\n      canEscapeKeyClose={!!escapeHandler}\n      onClose={escapeHandler}\n      isOpen={props.isOpen}\n      icon={props.icon}\n      {...props.props}\n    >\n      <div className={Classes.DIALOG_BODY}>{props.contents}</div>\n      <div className={Classes.DIALOG_FOOTER}>\n        {props.largeButtons && buttons}\n        {!props.largeButtons && <div className={Classes.DIALOG_FOOTER_ACTIONS}>{buttons}</div>}\n      </div>\n    </Dialog>\n  );\n}\n","import { InputGroup, Intent } from '@blueprintjs/core';\nimport * as React from 'react';\n\nimport { ConfirmDialog, ConfirmDialogProps } from './ConfirmDialog';\n\nexport interface PromptDialogProps<T>\n  extends Omit<ConfirmDialogProps<T>, 'onResponse' | 'choices'> {\n  defaultValue?: string;\n  enterResponse?: T;\n  onResponse: (buttonResponse: T, value: string) => void;\n  validationFunction?: (value: string) => boolean;\n  choices: Array<ConfirmDialogProps<T>['choices'][0] & { disableOnInvalid?: boolean }>;\n}\n\nexport function PromptDialog<T>(\n  props: PromptDialogProps<T>\n): React.ReactElement<PromptDialogProps<T>> {\n  const { enterResponse, validationFunction } = props;\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const [isValid, setIsValid] = React.useState(\n    !validationFunction || validationFunction(props.defaultValue || '')\n  );\n  React.useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    setIsValid(!validationFunction || validationFunction(inputRef.current.value));\n  }, [validationFunction]);\n\n  const returnResponse = (buttonResponse: T) => {\n    if (\n      buttonResponse === props.escapeResponse ||\n      !validationFunction ||\n      validationFunction(inputRef.current!.value)\n    ) {\n      props.onResponse(buttonResponse, inputRef.current?.value || '');\n    }\n  };\n\n  const choices: typeof props.choices = props.choices.map(choice => ({\n    ...choice,\n    props: {\n      ...choice.props,\n      disabled: choice.disableOnInvalid && !isValid\n    }\n  }));\n  const handleEnter = enterResponse\n    ? (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.keyCode === 13) {\n          returnResponse(enterResponse);\n        }\n      }\n    : undefined;\n  const handleValidate = validationFunction\n    ? (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (validationFunction(e.target.value) !== isValid) {\n          setIsValid(!isValid);\n        }\n      }\n    : undefined;\n  return (\n    <ConfirmDialog\n      {...props}\n      onResponse={returnResponse}\n      choices={choices}\n      contents={\n        <>\n          {props.contents}\n          <InputGroup\n            autoFocus\n            defaultValue={props.defaultValue}\n            inputRef={inputRef}\n            onKeyDown={handleEnter}\n            onChange={handleValidate}\n            intent={isValid ? Intent.NONE : Intent.DANGER}\n          />\n        </>\n      }\n    />\n  );\n}\n","import { IconName, Intent } from '@blueprintjs/core';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { ConfirmDialog, ConfirmDialogProps } from '../dialogs/ConfirmDialog';\nimport { PromptDialog, PromptDialogProps } from '../dialogs/PromptDialog';\n\n// The below is based off the Blueprint Toaster:\n// https://github.com/palantir/blueprint/blob/develop/packages/core/src/components/toast/toaster.tsx\n\ninterface DialogHelperState {\n  dialog: ReturnType<typeof React.createElement> | null;\n  dialogOnClose: (() => void) | null;\n}\n\nclass DialogHelper extends React.PureComponent<{}, DialogHelperState> {\n  public state: DialogHelperState = {\n    dialog: null,\n    dialogOnClose: null\n  };\n\n  public static create(): DialogHelper {\n    const containerElement = document.createElement('div');\n    document.body.appendChild(containerElement);\n    const dialogHelper = ReactDOM.render<{}>(<DialogHelper />, containerElement) as DialogHelper;\n    if (dialogHelper == null) {\n      throw new Error('Could not create DialogHelper - are you in a React lifecycle method?');\n    }\n    return dialogHelper;\n  }\n\n  public show(dialog: DialogHelperState['dialog'], onClose?: () => void) {\n    this.setState(() => ({ dialog, dialogOnClose: onClose || null }));\n  }\n\n  public close() {\n    if (this.state.dialogOnClose) {\n      this.state.dialogOnClose();\n    }\n    this.setState(() => ({ dialog: null, dialogOnClose: null }));\n  }\n\n  public render() {\n    return this.state.dialog;\n  }\n}\n\nconst singleton = DialogHelper.create();\n\nexport function showDialog(dialog: DialogHelperState['dialog'], dialogOnClose?: () => void) {\n  singleton.show(dialog, dialogOnClose);\n}\n\nexport function closeDialog() {\n  singleton.close();\n}\n\nexport function promisifyDialog<P, R>(\n  DialogComponent: React.ComponentType<P>,\n  propFn: (resolve: (response: R) => void) => P\n): Promise<R> {\n  return new Promise<R>((resolve, reject) => {\n    showDialog(<DialogComponent {...propFn(resolve)} />, reject);\n  }).finally(closeDialog);\n}\n\nexport function showConfirmDialog<T>(\n  props: Omit<ConfirmDialogProps<T>, 'onResponse'> &\n    Partial<Pick<ConfirmDialogProps<T>, 'onResponse'>>\n): Promise<T> {\n  return promisifyDialog<ConfirmDialogProps<T>, T>(ConfirmDialog, resolve => ({\n    ...props,\n    onResponse: resolve,\n    isOpen: true\n  }));\n}\n\nexport interface SimpleConfirmDialogProps {\n  icon?: IconName;\n  title?: string;\n  contents?: React.ReactNode;\n  positiveLabel?: string;\n  positiveIntent?: Intent;\n  negativeLabel?: string;\n  props?: Partial<ConfirmDialogProps<boolean>>;\n}\n\nexport function showSimpleConfirmDialog(props: SimpleConfirmDialogProps): Promise<boolean> {\n  return showConfirmDialog<boolean>({\n    title: props.title,\n    contents: props.contents,\n    choices: [\n      { key: false, label: props.negativeLabel || 'No' },\n      {\n        key: true,\n        label: props.positiveLabel || 'Yes',\n        intent: props.positiveIntent || Intent.SUCCESS,\n        props: { type: 'submit' }\n      }\n    ],\n    escapeResponse: false,\n    icon: props.icon,\n    ...props.props\n  });\n}\n\nexport interface SimpleErrorDialogProps {\n  title?: string;\n  contents?: React.ReactNode;\n  label?: string;\n  props?: Partial<ConfirmDialogProps<boolean>>;\n}\n\nexport function showSimpleErrorDialog(props: SimpleErrorDialogProps): Promise<boolean> {\n  return showConfirmDialog<boolean>({\n    title: props.title,\n    contents: props.contents,\n    choices: [\n      {\n        key: true,\n        label: props.label || 'OK',\n        intent: Intent.PRIMARY,\n        props: { type: 'submit' }\n      }\n    ],\n    escapeResponse: false,\n    icon: 'error',\n    ...props.props\n  });\n}\n\nexport function showSimplePromptDialog(props: {\n  title?: string;\n  contents?: React.ReactNode;\n  positiveLabel?: string;\n  negativeLabel?: string;\n  props?: Partial<PromptDialogProps<boolean>>;\n}) {\n  return promisifyDialog<PromptDialogProps<boolean>, { buttonResponse: boolean; value: string }>(\n    PromptDialog,\n    resolve => ({\n      title: props.title,\n      contents: props.contents,\n      choices: [\n        { key: false, label: props.negativeLabel || 'Cancel' },\n        {\n          key: true,\n          label: props.positiveLabel || 'Accept',\n          intent: Intent.SUCCESS,\n          disableOnInvalid: true\n        }\n      ],\n      escapeResponse: false,\n      enterResponse: true,\n      onResponse: (buttonResponse, value) => resolve({ buttonResponse, value }),\n      isOpen: true,\n      ...props.props\n    })\n  );\n}\n","/**\n * Defined for displaying an external library.\n * @see Library the definition of a Library at AssessmentTypes.ts in an assessment.\n */\nexport type External = {\n  key: number;\n  name: ExternalLibraryName;\n  symbols: string[];\n};\n\nexport enum ExternalLibraryName {\n  NONE = 'NONE',\n  SOUNDS = 'SOUNDS',\n  EV3 = 'EV3' // Remote execution device library\n}\n\nexport type ExternalLibrary = {\n  name: ExternalLibraryName;\n  symbols: string[];\n};\n\n/**\n * Defines which external libraries are available for usage, and what\n * external symbols (exposed functions) are under them.\n */\n\nconst libEntries: Array<[ExternalLibraryName, string[]]> = [\n  [ExternalLibraryName.NONE, []],\n  [ExternalLibraryName.SOUNDS, []]\n];\n\nexport const externalLibraries: Map<string, string[]> = new Map(libEntries);\n","\"use strict\";\n// Generated from ./src/lang/Clang.g4 by ANTLR 4.9.0-SNAPSHOT\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClangLexer = void 0;\nconst ATNDeserializer_1 = require(\"antlr4ts/atn/ATNDeserializer\");\nconst Lexer_1 = require(\"antlr4ts/Lexer\");\nconst LexerATNSimulator_1 = require(\"antlr4ts/atn/LexerATNSimulator\");\nconst VocabularyImpl_1 = require(\"antlr4ts/VocabularyImpl\");\nconst Utils = require(\"antlr4ts/misc/Utils\");\nclass ClangLexer extends Lexer_1.Lexer {\n    // tslint:enable:no-trailing-whitespace\n    constructor(input) {\n        super(input);\n        this._interp = new LexerATNSimulator_1.LexerATNSimulator(ClangLexer._ATN, this);\n    }\n    // @Override\n    // @NotNull\n    get vocabulary() {\n        return ClangLexer.VOCABULARY;\n    }\n    // @Override\n    get grammarFileName() { return \"Clang.g4\"; }\n    // @Override\n    get ruleNames() { return ClangLexer.ruleNames; }\n    // @Override\n    get serializedATN() { return ClangLexer._serializedATN; }\n    // @Override\n    get channelNames() { return ClangLexer.channelNames; }\n    // @Override\n    get modeNames() { return ClangLexer.modeNames; }\n    static get _ATN() {\n        if (!ClangLexer.__ATN) {\n            ClangLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(ClangLexer._serializedATN));\n        }\n        return ClangLexer.__ATN;\n    }\n}\nexports.ClangLexer = ClangLexer;\nClangLexer.T__0 = 1;\nClangLexer.T__1 = 2;\nClangLexer.Break = 3;\nClangLexer.Char = 4;\nClangLexer.Continue = 5;\nClangLexer.Const = 6;\nClangLexer.Do = 7;\nClangLexer.Else = 8;\nClangLexer.Float = 9;\nClangLexer.For = 10;\nClangLexer.If = 11;\nClangLexer.Int = 12;\nClangLexer.Long = 13;\nClangLexer.Return = 14;\nClangLexer.Signed = 15;\nClangLexer.Struct = 16;\nClangLexer.Unsigned = 17;\nClangLexer.Void = 18;\nClangLexer.While = 19;\nClangLexer.LeftParen = 20;\nClangLexer.RightParen = 21;\nClangLexer.LeftBracket = 22;\nClangLexer.RightBracket = 23;\nClangLexer.LeftBrace = 24;\nClangLexer.RightBrace = 25;\nClangLexer.Less = 26;\nClangLexer.LessEqual = 27;\nClangLexer.Greater = 28;\nClangLexer.GreaterEqual = 29;\nClangLexer.LeftShift = 30;\nClangLexer.RightShift = 31;\nClangLexer.Plus = 32;\nClangLexer.PlusPlus = 33;\nClangLexer.Minus = 34;\nClangLexer.MinusMinus = 35;\nClangLexer.Star = 36;\nClangLexer.Div = 37;\nClangLexer.Mod = 38;\nClangLexer.And = 39;\nClangLexer.Or = 40;\nClangLexer.AndAnd = 41;\nClangLexer.OrOr = 42;\nClangLexer.Caret = 43;\nClangLexer.Not = 44;\nClangLexer.Tilde = 45;\nClangLexer.Question = 46;\nClangLexer.Colon = 47;\nClangLexer.Semi = 48;\nClangLexer.Comma = 49;\nClangLexer.Assign = 50;\nClangLexer.StarAssign = 51;\nClangLexer.DivAssign = 52;\nClangLexer.ModAssign = 53;\nClangLexer.PlusAssign = 54;\nClangLexer.MinusAssign = 55;\nClangLexer.LeftShiftAssign = 56;\nClangLexer.RightShiftAssign = 57;\nClangLexer.AndAssign = 58;\nClangLexer.XorAssign = 59;\nClangLexer.OrAssign = 60;\nClangLexer.Equal = 61;\nClangLexer.NotEqual = 62;\nClangLexer.Arrow = 63;\nClangLexer.Dot = 64;\nClangLexer.Identifier = 65;\nClangLexer.Constant = 66;\nClangLexer.DigitSequence = 67;\nClangLexer.StringLiteral = 68;\nClangLexer.Whitespace = 69;\nClangLexer.Newline = 70;\nClangLexer.BlockComment = 71;\nClangLexer.LineComment = 72;\n// tslint:disable:no-trailing-whitespace\nClangLexer.channelNames = [\n    \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\",\n];\n// tslint:disable:no-trailing-whitespace\nClangLexer.modeNames = [\n    \"DEFAULT_MODE\",\n];\nClangLexer.ruleNames = [\n    \"T__0\", \"T__1\", \"Break\", \"Char\", \"Continue\", \"Const\", \"Do\", \"Else\", \"Float\",\n    \"For\", \"If\", \"Int\", \"Long\", \"Return\", \"Signed\", \"Struct\", \"Unsigned\",\n    \"Void\", \"While\", \"LeftParen\", \"RightParen\", \"LeftBracket\", \"RightBracket\",\n    \"LeftBrace\", \"RightBrace\", \"Less\", \"LessEqual\", \"Greater\", \"GreaterEqual\",\n    \"LeftShift\", \"RightShift\", \"Plus\", \"PlusPlus\", \"Minus\", \"MinusMinus\",\n    \"Star\", \"Div\", \"Mod\", \"And\", \"Or\", \"AndAnd\", \"OrOr\", \"Caret\", \"Not\", \"Tilde\",\n    \"Question\", \"Colon\", \"Semi\", \"Comma\", \"Assign\", \"StarAssign\", \"DivAssign\",\n    \"ModAssign\", \"PlusAssign\", \"MinusAssign\", \"LeftShiftAssign\", \"RightShiftAssign\",\n    \"AndAssign\", \"XorAssign\", \"OrAssign\", \"Equal\", \"NotEqual\", \"Arrow\", \"Dot\",\n    \"Identifier\", \"IdentifierCharacters\", \"Characters\", \"Digit\", \"Constant\",\n    \"IntegerConstant\", \"BinaryConstant\", \"DecimalConstant\", \"NonzeroDigit\",\n    \"UnsignedSuffix\", \"FloatingConstant\", \"DecimalFloatingConstant\", \"FractionalConstant\",\n    \"ExponentPart\", \"Sign\", \"DigitSequence\", \"BinaryExponentPart\", \"FloatingSuffix\",\n    \"CharacterConstant\", \"CCharSequence\", \"CChar\", \"EscapeSequence\", \"SimpleEscapeSequence\",\n    \"StringLiteral\", \"EncodingPrefix\", \"SCharSequence\", \"SChar\", \"Whitespace\",\n    \"Newline\", \"BlockComment\", \"LineComment\",\n];\nClangLexer._LITERAL_NAMES = [\n    undefined, \"'__extension__'\", \"'inline'\", \"'break'\", \"'char'\", \"'continue'\",\n    \"'const'\", \"'do'\", \"'else'\", \"'float'\", \"'for'\", \"'if'\", \"'int'\", \"'long'\",\n    \"'return'\", \"'signed'\", \"'struct'\", \"'unsigned'\", \"'void'\", \"'while'\",\n    \"'('\", \"')'\", \"'['\", \"']'\", \"'{'\", \"'}'\", \"'<'\", \"'<='\", \"'>'\", \"'>='\",\n    \"'<<'\", \"'>>'\", \"'+'\", \"'++'\", \"'-'\", \"'--'\", \"'*'\", \"'/'\", \"'%'\", \"'&'\",\n    \"'|'\", \"'&&'\", \"'||'\", \"'^'\", \"'!'\", \"'~'\", \"'?'\", \"':'\", \"';'\", \"','\",\n    \"'='\", \"'*='\", \"'/='\", \"'%='\", \"'+='\", \"'-='\", \"'<<='\", \"'>>='\", \"'&='\",\n    \"'^='\", \"'|='\", \"'=='\", \"'!='\", \"'->'\", \"'.'\",\n];\nClangLexer._SYMBOLIC_NAMES = [\n    undefined, undefined, undefined, \"Break\", \"Char\", \"Continue\", \"Const\",\n    \"Do\", \"Else\", \"Float\", \"For\", \"If\", \"Int\", \"Long\", \"Return\", \"Signed\",\n    \"Struct\", \"Unsigned\", \"Void\", \"While\", \"LeftParen\", \"RightParen\", \"LeftBracket\",\n    \"RightBracket\", \"LeftBrace\", \"RightBrace\", \"Less\", \"LessEqual\", \"Greater\",\n    \"GreaterEqual\", \"LeftShift\", \"RightShift\", \"Plus\", \"PlusPlus\", \"Minus\",\n    \"MinusMinus\", \"Star\", \"Div\", \"Mod\", \"And\", \"Or\", \"AndAnd\", \"OrOr\", \"Caret\",\n    \"Not\", \"Tilde\", \"Question\", \"Colon\", \"Semi\", \"Comma\", \"Assign\", \"StarAssign\",\n    \"DivAssign\", \"ModAssign\", \"PlusAssign\", \"MinusAssign\", \"LeftShiftAssign\",\n    \"RightShiftAssign\", \"AndAssign\", \"XorAssign\", \"OrAssign\", \"Equal\", \"NotEqual\",\n    \"Arrow\", \"Dot\", \"Identifier\", \"Constant\", \"DigitSequence\", \"StringLiteral\",\n    \"Whitespace\", \"Newline\", \"BlockComment\", \"LineComment\",\n];\nClangLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(ClangLexer._LITERAL_NAMES, ClangLexer._SYMBOLIC_NAMES, []);\nClangLexer._serializedATNSegments = 2;\nClangLexer._serializedATNSegment0 = \"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x02J\\u0269\\b\\x01\" +\n    \"\\x04\\x02\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\" +\n    \"\\x04\\x07\\t\\x07\\x04\\b\\t\\b\\x04\\t\\t\\t\\x04\\n\\t\\n\\x04\\v\\t\\v\\x04\\f\\t\\f\\x04\\r\" +\n    \"\\t\\r\\x04\\x0E\\t\\x0E\\x04\\x0F\\t\\x0F\\x04\\x10\\t\\x10\\x04\\x11\\t\\x11\\x04\\x12\\t\" +\n    \"\\x12\\x04\\x13\\t\\x13\\x04\\x14\\t\\x14\\x04\\x15\\t\\x15\\x04\\x16\\t\\x16\\x04\\x17\\t\" +\n    \"\\x17\\x04\\x18\\t\\x18\\x04\\x19\\t\\x19\\x04\\x1A\\t\\x1A\\x04\\x1B\\t\\x1B\\x04\\x1C\\t\" +\n    \"\\x1C\\x04\\x1D\\t\\x1D\\x04\\x1E\\t\\x1E\\x04\\x1F\\t\\x1F\\x04 \\t \\x04!\\t!\\x04\\\"\\t\" +\n    \"\\\"\\x04#\\t#\\x04$\\t$\\x04%\\t%\\x04&\\t&\\x04\\'\\t\\'\\x04(\\t(\\x04)\\t)\\x04*\\t*\\x04\" +\n    \"+\\t+\\x04,\\t,\\x04-\\t-\\x04.\\t.\\x04/\\t/\\x040\\t0\\x041\\t1\\x042\\t2\\x043\\t3\\x04\" +\n    \"4\\t4\\x045\\t5\\x046\\t6\\x047\\t7\\x048\\t8\\x049\\t9\\x04:\\t:\\x04;\\t;\\x04<\\t<\\x04\" +\n    \"=\\t=\\x04>\\t>\\x04?\\t?\\x04@\\t@\\x04A\\tA\\x04B\\tB\\x04C\\tC\\x04D\\tD\\x04E\\tE\\x04\" +\n    \"F\\tF\\x04G\\tG\\x04H\\tH\\x04I\\tI\\x04J\\tJ\\x04K\\tK\\x04L\\tL\\x04M\\tM\\x04N\\tN\\x04\" +\n    \"O\\tO\\x04P\\tP\\x04Q\\tQ\\x04R\\tR\\x04S\\tS\\x04T\\tT\\x04U\\tU\\x04V\\tV\\x04W\\tW\\x04\" +\n    \"X\\tX\\x04Y\\tY\\x04Z\\tZ\\x04[\\t[\\x04\\\\\\t\\\\\\x04]\\t]\\x04^\\t^\\x04_\\t_\\x04`\\t\" +\n    \"`\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x02\\x03\" +\n    \"\\x02\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x02\\x03\\x03\\x03\\x03\\x03\\x03\\x03\" +\n    \"\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\" +\n    \"\\x04\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x05\\x03\\x06\\x03\\x06\\x03\\x06\\x03\" +\n    \"\\x06\\x03\\x06\\x03\\x06\\x03\\x06\\x03\\x06\\x03\\x06\\x03\\x07\\x03\\x07\\x03\\x07\\x03\" +\n    \"\\x07\\x03\\x07\\x03\\x07\\x03\\b\\x03\\b\\x03\\b\\x03\\t\\x03\\t\\x03\\t\\x03\\t\\x03\\t\\x03\" +\n    \"\\n\\x03\\n\\x03\\n\\x03\\n\\x03\\n\\x03\\n\\x03\\v\\x03\\v\\x03\\v\\x03\\v\\x03\\f\\x03\\f\\x03\" +\n    \"\\f\\x03\\r\\x03\\r\\x03\\r\\x03\\r\\x03\\x0E\\x03\\x0E\\x03\\x0E\\x03\\x0E\\x03\\x0E\\x03\" +\n    \"\\x0F\\x03\\x0F\\x03\\x0F\\x03\\x0F\\x03\\x0F\\x03\\x0F\\x03\\x0F\\x03\\x10\\x03\\x10\\x03\" +\n    \"\\x10\\x03\\x10\\x03\\x10\\x03\\x10\\x03\\x10\\x03\\x11\\x03\\x11\\x03\\x11\\x03\\x11\\x03\" +\n    \"\\x11\\x03\\x11\\x03\\x11\\x03\\x12\\x03\\x12\\x03\\x12\\x03\\x12\\x03\\x12\\x03\\x12\\x03\" +\n    \"\\x12\\x03\\x12\\x03\\x12\\x03\\x13\\x03\\x13\\x03\\x13\\x03\\x13\\x03\\x13\\x03\\x14\\x03\" +\n    \"\\x14\\x03\\x14\\x03\\x14\\x03\\x14\\x03\\x14\\x03\\x15\\x03\\x15\\x03\\x16\\x03\\x16\\x03\" +\n    \"\\x17\\x03\\x17\\x03\\x18\\x03\\x18\\x03\\x19\\x03\\x19\\x03\\x1A\\x03\\x1A\\x03\\x1B\\x03\" +\n    \"\\x1B\\x03\\x1C\\x03\\x1C\\x03\\x1C\\x03\\x1D\\x03\\x1D\\x03\\x1E\\x03\\x1E\\x03\\x1E\\x03\" +\n    \"\\x1F\\x03\\x1F\\x03\\x1F\\x03 \\x03 \\x03 \\x03!\\x03!\\x03\\\"\\x03\\\"\\x03\\\"\\x03#\\x03\" +\n    \"#\\x03$\\x03$\\x03$\\x03%\\x03%\\x03&\\x03&\\x03\\'\\x03\\'\\x03(\\x03(\\x03)\\x03)\\x03\" +\n    \"*\\x03*\\x03*\\x03+\\x03+\\x03+\\x03,\\x03,\\x03-\\x03-\\x03.\\x03.\\x03/\\x03/\\x03\" +\n    \"0\\x030\\x031\\x031\\x032\\x032\\x033\\x033\\x034\\x034\\x034\\x035\\x035\\x035\\x03\" +\n    \"6\\x036\\x036\\x037\\x037\\x037\\x038\\x038\\x038\\x039\\x039\\x039\\x039\\x03:\\x03\" +\n    \":\\x03:\\x03:\\x03;\\x03;\\x03;\\x03<\\x03<\\x03<\\x03=\\x03=\\x03=\\x03>\\x03>\\x03\" +\n    \">\\x03?\\x03?\\x03?\\x03@\\x03@\\x03@\\x03A\\x03A\\x03B\\x03B\\x03B\\x07B\\u01AC\\n\" +\n    \"B\\fB\\x0EB\\u01AF\\vB\\x03C\\x03C\\x03D\\x03D\\x03E\\x03E\\x03F\\x03F\\x03F\\x05F\\u01BA\" +\n    \"\\nF\\x03G\\x03G\\x03H\\x03H\\x03H\\x06H\\u01C1\\nH\\rH\\x0EH\\u01C2\\x03I\\x03I\\x07\" +\n    \"I\\u01C7\\nI\\fI\\x0EI\\u01CA\\vI\\x03J\\x03J\\x03K\\x03K\\x03L\\x03L\\x03M\\x03M\\x05\" +\n    \"M\\u01D4\\nM\\x03M\\x05M\\u01D7\\nM\\x03M\\x03M\\x03M\\x05M\\u01DC\\nM\\x05M\\u01DE\" +\n    \"\\nM\\x03N\\x05N\\u01E1\\nN\\x03N\\x03N\\x03N\\x03N\\x03N\\x05N\\u01E8\\nN\\x03O\\x03\" +\n    \"O\\x05O\\u01EC\\nO\\x03O\\x03O\\x03P\\x03P\\x03Q\\x06Q\\u01F3\\nQ\\rQ\\x0EQ\\u01F4\\x03\" +\n    \"R\\x03R\\x05R\\u01F9\\nR\\x03R\\x03R\\x03S\\x03S\\x03T\\x03T\\x03T\\x03T\\x03T\\x03\" +\n    \"T\\x03T\\x03T\\x03T\\x03T\\x03T\\x03T\\x03T\\x03T\\x03T\\x03T\\x03T\\x03T\\x03T\\x03\" +\n    \"T\\x03T\\x03T\\x05T\\u0215\\nT\\x03U\\x06U\\u0218\\nU\\rU\\x0EU\\u0219\\x03V\\x03V\\x05\" +\n    \"V\\u021E\\nV\\x03W\\x03W\\x03X\\x03X\\x03X\\x03Y\\x05Y\\u0226\\nY\\x03Y\\x03Y\\x05Y\" +\n    \"\\u022A\\nY\\x03Y\\x03Y\\x03Z\\x03Z\\x03Z\\x05Z\\u0231\\nZ\\x03[\\x06[\\u0234\\n[\\r\" +\n    \"[\\x0E[\\u0235\\x03\\\\\\x03\\\\\\x03\\\\\\x03\\\\\\x03\\\\\\x03\\\\\\x03\\\\\\x05\\\\\\u023F\\n\\\\\" +\n    \"\\x03]\\x06]\\u0242\\n]\\r]\\x0E]\\u0243\\x03]\\x03]\\x03^\\x03^\\x05^\\u024A\\n^\\x03\" +\n    \"^\\x05^\\u024D\\n^\\x03^\\x03^\\x03_\\x03_\\x03_\\x03_\\x07_\\u0255\\n_\\f_\\x0E_\\u0258\" +\n    \"\\v_\\x03_\\x03_\\x03_\\x03_\\x03_\\x03`\\x03`\\x03`\\x03`\\x07`\\u0263\\n`\\f`\\x0E\" +\n    \"`\\u0266\\v`\\x03`\\x03`\\x03\\u0256\\x02\\x02a\\x03\\x02\\x03\\x05\\x02\\x04\\x07\\x02\" +\n    \"\\x05\\t\\x02\\x06\\v\\x02\\x07\\r\\x02\\b\\x0F\\x02\\t\\x11\\x02\\n\\x13\\x02\\v\\x15\\x02\" +\n    \"\\f\\x17\\x02\\r\\x19\\x02\\x0E\\x1B\\x02\\x0F\\x1D\\x02\\x10\\x1F\\x02\\x11!\\x02\\x12\" +\n    \"#\\x02\\x13%\\x02\\x14\\'\\x02\\x15)\\x02\\x16+\\x02\\x17-\\x02\\x18/\\x02\\x191\\x02\" +\n    \"\\x1A3\\x02\\x1B5\\x02\\x1C7\\x02\\x1D9\\x02\\x1E;\\x02\\x1F=\\x02 ?\\x02!A\\x02\\\"C\" +\n    \"\\x02#E\\x02$G\\x02%I\\x02&K\\x02\\'M\\x02(O\\x02)Q\\x02*S\\x02+U\\x02,W\\x02-Y\\x02\" +\n    \".[\\x02/]\\x020_\\x021a\\x022c\\x023e\\x024g\\x025i\\x026k\\x027m\\x028o\\x029q\\x02\" +\n    \":s\\x02;u\\x02<w\\x02=y\\x02>{\\x02?}\\x02@\\x7F\\x02A\\x81\\x02B\\x83\\x02C\\x85\\x02\" +\n    \"\\x02\\x87\\x02\\x02\\x89\\x02\\x02\\x8B\\x02D\\x8D\\x02\\x02\\x8F\\x02\\x02\\x91\\x02\" +\n    \"\\x02\\x93\\x02\\x02\\x95\\x02\\x02\\x97\\x02\\x02\\x99\\x02\\x02\\x9B\\x02\\x02\\x9D\\x02\" +\n    \"\\x02\\x9F\\x02\\x02\\xA1\\x02E\\xA3\\x02\\x02\\xA5\\x02\\x02\\xA7\\x02\\x02\\xA9\\x02\" +\n    \"\\x02\\xAB\\x02\\x02\\xAD\\x02\\x02\\xAF\\x02\\x02\\xB1\\x02F\\xB3\\x02\\x02\\xB5\\x02\" +\n    \"\\x02\\xB7\\x02\\x02\\xB9\\x02G\\xBB\\x02H\\xBD\\x02I\\xBF\\x02J\\x03\\x02\\x12\\x05\\x02\" +\n    \"C\\\\aac|\\x03\\x022;\\x04\\x02DDdd\\x03\\x0223\\x03\\x023;\\x04\\x02WWww\\x04\\x02\" +\n    \"GGgg\\x04\\x02--//\\x04\\x02RRrr\\x06\\x02HHNNhhnn\\x06\\x02\\f\\f\\x0F\\x0F))^^\\f\" +\n    \"\\x02$$))AA^^cdhhppttvvxx\\x05\\x02NNWWww\\x06\\x02\\f\\f\\x0F\\x0F$$^^\\x04\\x02\" +\n    \"\\v\\v\\\"\\\"\\x04\\x02\\f\\f\\x0F\\x0F\\x02\\u0271\\x02\\x03\\x03\\x02\\x02\\x02\\x02\\x05\" +\n    \"\\x03\\x02\\x02\\x02\\x02\\x07\\x03\\x02\\x02\\x02\\x02\\t\\x03\\x02\\x02\\x02\\x02\\v\\x03\" +\n    \"\\x02\\x02\\x02\\x02\\r\\x03\\x02\\x02\\x02\\x02\\x0F\\x03\\x02\\x02\\x02\\x02\\x11\\x03\" +\n    \"\\x02\\x02\\x02\\x02\\x13\\x03\\x02\\x02\\x02\\x02\\x15\\x03\\x02\\x02\\x02\\x02\\x17\\x03\" +\n    \"\\x02\\x02\\x02\\x02\\x19\\x03\\x02\\x02\\x02\\x02\\x1B\\x03\\x02\\x02\\x02\\x02\\x1D\\x03\" +\n    \"\\x02\\x02\\x02\\x02\\x1F\\x03\\x02\\x02\\x02\\x02!\\x03\\x02\\x02\\x02\\x02#\\x03\\x02\" +\n    \"\\x02\\x02\\x02%\\x03\\x02\\x02\\x02\\x02\\'\\x03\\x02\\x02\\x02\\x02)\\x03\\x02\\x02\\x02\" +\n    \"\\x02+\\x03\\x02\\x02\\x02\\x02-\\x03\\x02\\x02\\x02\\x02/\\x03\\x02\\x02\\x02\\x021\\x03\" +\n    \"\\x02\\x02\\x02\\x023\\x03\\x02\\x02\\x02\\x025\\x03\\x02\\x02\\x02\\x027\\x03\\x02\\x02\" +\n    \"\\x02\\x029\\x03\\x02\\x02\\x02\\x02;\\x03\\x02\\x02\\x02\\x02=\\x03\\x02\\x02\\x02\\x02\" +\n    \"?\\x03\\x02\\x02\\x02\\x02A\\x03\\x02\\x02\\x02\\x02C\\x03\\x02\\x02\\x02\\x02E\\x03\\x02\" +\n    \"\\x02\\x02\\x02G\\x03\\x02\\x02\\x02\\x02I\\x03\\x02\\x02\\x02\\x02K\\x03\\x02\\x02\\x02\" +\n    \"\\x02M\\x03\\x02\\x02\\x02\\x02O\\x03\\x02\\x02\\x02\\x02Q\\x03\\x02\\x02\\x02\\x02S\\x03\" +\n    \"\\x02\\x02\\x02\\x02U\\x03\\x02\\x02\\x02\\x02W\\x03\\x02\\x02\\x02\\x02Y\\x03\\x02\\x02\" +\n    \"\\x02\\x02[\\x03\\x02\\x02\\x02\\x02]\\x03\\x02\\x02\\x02\\x02_\\x03\\x02\\x02\\x02\\x02\" +\n    \"a\\x03\\x02\\x02\\x02\\x02c\\x03\\x02\\x02\\x02\\x02e\\x03\\x02\\x02\\x02\\x02g\\x03\\x02\" +\n    \"\\x02\\x02\\x02i\\x03\\x02\\x02\\x02\\x02k\\x03\\x02\\x02\\x02\\x02m\\x03\\x02\\x02\\x02\" +\n    \"\\x02o\\x03\\x02\\x02\\x02\\x02q\\x03\\x02\\x02\\x02\\x02s\\x03\\x02\\x02\\x02\\x02u\\x03\" +\n    \"\\x02\\x02\\x02\\x02w\\x03\\x02\\x02\\x02\\x02y\\x03\\x02\\x02\\x02\\x02{\\x03\\x02\\x02\" +\n    \"\\x02\\x02}\\x03\\x02\\x02\\x02\\x02\\x7F\\x03\\x02\\x02\\x02\\x02\\x81\\x03\\x02\\x02\" +\n    \"\\x02\\x02\\x83\\x03\\x02\\x02\\x02\\x02\\x8B\\x03\\x02\\x02\\x02\\x02\\xA1\\x03\\x02\\x02\" +\n    \"\\x02\\x02\\xB1\\x03\\x02\\x02\\x02\\x02\\xB9\\x03\\x02\\x02\\x02\\x02\\xBB\\x03\\x02\\x02\" +\n    \"\\x02\\x02\\xBD\\x03\\x02\\x02\\x02\\x02\\xBF\\x03\\x02\\x02\\x02\\x03\\xC1\\x03\\x02\\x02\" +\n    \"\\x02\\x05\\xCF\\x03\\x02\\x02\\x02\\x07\\xD6\\x03\\x02\\x02\\x02\\t\\xDC\\x03\\x02\\x02\" +\n    \"\\x02\\v\\xE1\\x03\\x02\\x02\\x02\\r\\xEA\\x03\\x02\\x02\\x02\\x0F\\xF0\\x03\\x02\\x02\\x02\" +\n    \"\\x11\\xF3\\x03\\x02\\x02\\x02\\x13\\xF8\\x03\\x02\\x02\\x02\\x15\\xFE\\x03\\x02\\x02\\x02\" +\n    \"\\x17\\u0102\\x03\\x02\\x02\\x02\\x19\\u0105\\x03\\x02\\x02\\x02\\x1B\\u0109\\x03\\x02\" +\n    \"\\x02\\x02\\x1D\\u010E\\x03\\x02\\x02\\x02\\x1F\\u0115\\x03\\x02\\x02\\x02!\\u011C\\x03\" +\n    \"\\x02\\x02\\x02#\\u0123\\x03\\x02\\x02\\x02%\\u012C\\x03\\x02\\x02\\x02\\'\\u0131\\x03\" +\n    \"\\x02\\x02\\x02)\\u0137\\x03\\x02\\x02\\x02+\\u0139\\x03\\x02\\x02\\x02-\\u013B\\x03\" +\n    \"\\x02\\x02\\x02/\\u013D\\x03\\x02\\x02\\x021\\u013F\\x03\\x02\\x02\\x023\\u0141\\x03\" +\n    \"\\x02\\x02\\x025\\u0143\\x03\\x02\\x02\\x027\\u0145\\x03\\x02\\x02\\x029\\u0148\\x03\" +\n    \"\\x02\\x02\\x02;\\u014A\\x03\\x02\\x02\\x02=\\u014D\\x03\\x02\\x02\\x02?\\u0150\\x03\" +\n    \"\\x02\\x02\\x02A\\u0153\\x03\\x02\\x02\\x02C\\u0155\\x03\\x02\\x02\\x02E\\u0158\\x03\" +\n    \"\\x02\\x02\\x02G\\u015A\\x03\\x02\\x02\\x02I\\u015D\\x03\\x02\\x02\\x02K\\u015F\\x03\" +\n    \"\\x02\\x02\\x02M\\u0161\\x03\\x02\\x02\\x02O\\u0163\\x03\\x02\\x02\\x02Q\\u0165\\x03\" +\n    \"\\x02\\x02\\x02S\\u0167\\x03\\x02\\x02\\x02U\\u016A\\x03\\x02\\x02\\x02W\\u016D\\x03\" +\n    \"\\x02\\x02\\x02Y\\u016F\\x03\\x02\\x02\\x02[\\u0171\\x03\\x02\\x02\\x02]\\u0173\\x03\" +\n    \"\\x02\\x02\\x02_\\u0175\\x03\\x02\\x02\\x02a\\u0177\\x03\\x02\\x02\\x02c\\u0179\\x03\" +\n    \"\\x02\\x02\\x02e\\u017B\\x03\\x02\\x02\\x02g\\u017D\\x03\\x02\\x02\\x02i\\u0180\\x03\" +\n    \"\\x02\\x02\\x02k\\u0183\\x03\\x02\\x02\\x02m\\u0186\\x03\\x02\\x02\\x02o\\u0189\\x03\" +\n    \"\\x02\\x02\\x02q\\u018C\\x03\\x02\\x02\\x02s\\u0190\\x03\\x02\\x02\\x02u\\u0194\\x03\" +\n    \"\\x02\\x02\\x02w\\u0197\\x03\\x02\\x02\\x02y\\u019A\\x03\\x02\\x02\\x02{\\u019D\\x03\" +\n    \"\\x02\\x02\\x02}\\u01A0\\x03\\x02\\x02\\x02\\x7F\\u01A3\\x03\\x02\\x02\\x02\\x81\\u01A6\" +\n    \"\\x03\\x02\\x02\\x02\\x83\\u01A8\\x03\\x02\\x02\\x02\\x85\\u01B0\\x03\\x02\\x02\\x02\\x87\" +\n    \"\\u01B2\\x03\\x02\\x02\\x02\\x89\\u01B4\\x03\\x02\\x02\\x02\\x8B\\u01B9\\x03\\x02\\x02\" +\n    \"\\x02\\x8D\\u01BB\\x03\\x02\\x02\\x02\\x8F\\u01BD\\x03\\x02\\x02\\x02\\x91\\u01C4\\x03\" +\n    \"\\x02\\x02\\x02\\x93\\u01CB\\x03\\x02\\x02\\x02\\x95\\u01CD\\x03\\x02\\x02\\x02\\x97\\u01CF\" +\n    \"\\x03\\x02\\x02\\x02\\x99\\u01DD\\x03\\x02\\x02\\x02\\x9B\\u01E7\\x03\\x02\\x02\\x02\\x9D\" +\n    \"\\u01E9\\x03\\x02\\x02\\x02\\x9F\\u01EF\\x03\\x02\\x02\\x02\\xA1\\u01F2\\x03\\x02\\x02\" +\n    \"\\x02\\xA3\\u01F6\\x03\\x02\\x02\\x02\\xA5\\u01FC\\x03\\x02\\x02\\x02\\xA7\\u0214\\x03\" +\n    \"\\x02\\x02\\x02\\xA9\\u0217\\x03\\x02\\x02\\x02\\xAB\\u021D\\x03\\x02\\x02\\x02\\xAD\\u021F\" +\n    \"\\x03\\x02\\x02\\x02\\xAF\\u0221\\x03\\x02\\x02\\x02\\xB1\\u0225\\x03\\x02\\x02\\x02\\xB3\" +\n    \"\\u0230\\x03\\x02\\x02\\x02\\xB5\\u0233\\x03\\x02\\x02\\x02\\xB7\\u023E\\x03\\x02\\x02\" +\n    \"\\x02\\xB9\\u0241\\x03\\x02\\x02\\x02\\xBB\\u024C\\x03\\x02\\x02\\x02\\xBD\\u0250\\x03\" +\n    \"\\x02\\x02\\x02\\xBF\\u025E\\x03\\x02\\x02\\x02\\xC1\\xC2\\x07a\\x02\\x02\\xC2\\xC3\\x07\" +\n    \"a\\x02\\x02\\xC3\\xC4\\x07g\\x02\\x02\\xC4\\xC5\\x07z\\x02\\x02\\xC5\\xC6\\x07v\\x02\\x02\" +\n    \"\\xC6\\xC7\\x07g\\x02\\x02\\xC7\\xC8\\x07p\\x02\\x02\\xC8\\xC9\\x07u\\x02\\x02\\xC9\\xCA\" +\n    \"\\x07k\\x02\\x02\\xCA\\xCB\\x07q\\x02\\x02\\xCB\\xCC\\x07p\\x02\\x02\\xCC\\xCD\\x07a\\x02\" +\n    \"\\x02\\xCD\\xCE\\x07a\\x02\\x02\\xCE\\x04\\x03\\x02\\x02\\x02\\xCF\\xD0\\x07k\\x02\\x02\" +\n    \"\\xD0\\xD1\\x07p\\x02\\x02\\xD1\\xD2\\x07n\\x02\\x02\\xD2\\xD3\\x07k\\x02\\x02\\xD3\\xD4\" +\n    \"\\x07p\\x02\\x02\\xD4\\xD5\\x07g\\x02\\x02\\xD5\\x06\\x03\\x02\\x02\\x02\\xD6\\xD7\\x07\" +\n    \"d\\x02\\x02\\xD7\\xD8\\x07t\\x02\\x02\\xD8\\xD9\\x07g\\x02\\x02\\xD9\\xDA\\x07c\\x02\\x02\" +\n    \"\\xDA\\xDB\\x07m\\x02\\x02\\xDB\\b\\x03\\x02\\x02\\x02\\xDC\\xDD\\x07e\\x02\\x02\\xDD\\xDE\" +\n    \"\\x07j\\x02\\x02\\xDE\\xDF\\x07c\\x02\\x02\\xDF\\xE0\\x07t\\x02\\x02\\xE0\\n\\x03\\x02\" +\n    \"\\x02\\x02\\xE1\\xE2\\x07e\\x02\\x02\\xE2\\xE3\\x07q\\x02\\x02\\xE3\\xE4\\x07p\\x02\\x02\" +\n    \"\\xE4\\xE5\\x07v\\x02\\x02\\xE5\\xE6\\x07k\\x02\\x02\\xE6\\xE7\\x07p\\x02\\x02\\xE7\\xE8\" +\n    \"\\x07w\\x02\\x02\\xE8\\xE9\\x07g\\x02\\x02\\xE9\\f\\x03\\x02\\x02\\x02\\xEA\\xEB\\x07e\" +\n    \"\\x02\\x02\\xEB\\xEC\\x07q\\x02\\x02\\xEC\\xED\\x07p\\x02\\x02\\xED\\xEE\\x07u\\x02\\x02\" +\n    \"\\xEE\\xEF\\x07v\\x02\\x02\\xEF\\x0E\\x03\\x02\\x02\\x02\\xF0\\xF1\\x07f\\x02\\x02\\xF1\" +\n    \"\\xF2\\x07q\\x02\\x02\\xF2\\x10\\x03\\x02\\x02\\x02\\xF3\\xF4\\x07g\\x02\\x02\\xF4\\xF5\" +\n    \"\\x07n\\x02\\x02\\xF5\\xF6\\x07u\\x02\\x02\\xF6\\xF7\\x07g\\x02\\x02\\xF7\\x12\\x03\\x02\" +\n    \"\\x02\\x02\\xF8\\xF9\\x07h\\x02\\x02\\xF9\\xFA\\x07n\\x02\\x02\\xFA\\xFB\\x07q\\x02\\x02\" +\n    \"\\xFB\\xFC\\x07c\\x02\\x02\\xFC\\xFD\\x07v\\x02\\x02\\xFD\\x14\\x03\\x02\\x02\\x02\\xFE\" +\n    \"\\xFF\\x07h\\x02\\x02\\xFF\\u0100\\x07q\\x02\\x02\\u0100\\u0101\\x07t\\x02\\x02\\u0101\" +\n    \"\\x16\\x03\\x02\\x02\\x02\\u0102\\u0103\\x07k\\x02\\x02\\u0103\\u0104\\x07h\\x02\\x02\" +\n    \"\\u0104\\x18\\x03\\x02\\x02\\x02\\u0105\\u0106\\x07k\\x02\\x02\\u0106\\u0107\\x07p\\x02\" +\n    \"\\x02\\u0107\\u0108\\x07v\\x02\\x02\\u0108\\x1A\\x03\\x02\\x02\\x02\\u0109\\u010A\\x07\" +\n    \"n\\x02\\x02\\u010A\\u010B\\x07q\\x02\\x02\\u010B\\u010C\\x07p\\x02\\x02\\u010C\\u010D\" +\n    \"\\x07i\\x02\\x02\\u010D\\x1C\\x03\\x02\\x02\\x02\\u010E\\u010F\\x07t\\x02\\x02\\u010F\" +\n    \"\\u0110\\x07g\\x02\\x02\\u0110\\u0111\\x07v\\x02\\x02\\u0111\\u0112\\x07w\\x02\\x02\" +\n    \"\\u0112\\u0113\\x07t\\x02\\x02\\u0113\\u0114\\x07p\\x02\\x02\\u0114\\x1E\\x03\\x02\\x02\" +\n    \"\\x02\\u0115\\u0116\\x07u\\x02\\x02\\u0116\\u0117\\x07k\\x02\\x02\\u0117\\u0118\\x07\" +\n    \"i\\x02\\x02\\u0118\\u0119\\x07p\\x02\\x02\\u0119\\u011A\\x07g\\x02\\x02\\u011A\\u011B\" +\n    \"\\x07f\\x02\\x02\\u011B \\x03\\x02\\x02\\x02\\u011C\\u011D\\x07u\\x02\\x02\\u011D\\u011E\" +\n    \"\\x07v\\x02\\x02\\u011E\\u011F\\x07t\\x02\\x02\\u011F\\u0120\\x07w\\x02\\x02\\u0120\" +\n    \"\\u0121\\x07e\\x02\\x02\\u0121\\u0122\\x07v\\x02\\x02\\u0122\\\"\\x03\\x02\\x02\\x02\\u0123\" +\n    \"\\u0124\\x07w\\x02\\x02\\u0124\\u0125\\x07p\\x02\\x02\\u0125\\u0126\\x07u\\x02\\x02\" +\n    \"\\u0126\\u0127\\x07k\\x02\\x02\\u0127\\u0128\\x07i\\x02\\x02\\u0128\\u0129\\x07p\\x02\" +\n    \"\\x02\\u0129\\u012A\\x07g\\x02\\x02\\u012A\\u012B\\x07f\\x02\\x02\\u012B$\\x03\\x02\" +\n    \"\\x02\\x02\\u012C\\u012D\\x07x\\x02\\x02\\u012D\\u012E\\x07q\\x02\\x02\\u012E\\u012F\" +\n    \"\\x07k\\x02\\x02\\u012F\\u0130\\x07f\\x02\\x02\\u0130&\\x03\\x02\\x02\\x02\\u0131\\u0132\" +\n    \"\\x07y\\x02\\x02\\u0132\\u0133\\x07j\\x02\\x02\\u0133\\u0134\\x07k\\x02\\x02\\u0134\" +\n    \"\\u0135\\x07n\\x02\\x02\\u0135\\u0136\\x07g\\x02\\x02\\u0136(\\x03\\x02\\x02\\x02\\u0137\" +\n    \"\\u0138\\x07*\\x02\\x02\\u0138*\\x03\\x02\\x02\\x02\\u0139\\u013A\\x07+\\x02\\x02\\u013A\" +\n    \",\\x03\\x02\\x02\\x02\\u013B\\u013C\\x07]\\x02\\x02\\u013C.\\x03\\x02\\x02\\x02\\u013D\" +\n    \"\\u013E\\x07_\\x02\\x02\\u013E0\\x03\\x02\\x02\\x02\\u013F\\u0140\\x07}\\x02\\x02\\u0140\" +\n    \"2\\x03\\x02\\x02\\x02\\u0141\\u0142\\x07\\x7F\\x02\\x02\\u01424\\x03\\x02\\x02\\x02\\u0143\" +\n    \"\\u0144\\x07>\\x02\\x02\\u01446\\x03\\x02\\x02\\x02\\u0145\\u0146\\x07>\\x02\\x02\\u0146\" +\n    \"\\u0147\\x07?\\x02\\x02\\u01478\\x03\\x02\\x02\\x02\\u0148\\u0149\\x07@\\x02\\x02\\u0149\" +\n    \":\\x03\\x02\\x02\\x02\\u014A\\u014B\\x07@\\x02\\x02\\u014B\\u014C\\x07?\\x02\\x02\\u014C\" +\n    \"<\\x03\\x02\\x02\\x02\\u014D\\u014E\\x07>\\x02\\x02\\u014E\\u014F\\x07>\\x02\\x02\\u014F\" +\n    \">\\x03\\x02\\x02\\x02\\u0150\\u0151\\x07@\\x02\\x02\\u0151\\u0152\\x07@\\x02\\x02\\u0152\" +\n    \"@\\x03\\x02\\x02\\x02\\u0153\\u0154\\x07-\\x02\\x02\\u0154B\\x03\\x02\\x02\\x02\\u0155\" +\n    \"\\u0156\\x07-\\x02\\x02\\u0156\\u0157\\x07-\\x02\\x02\\u0157D\\x03\\x02\\x02\\x02\\u0158\" +\n    \"\\u0159\\x07/\\x02\\x02\\u0159F\\x03\\x02\\x02\\x02\\u015A\\u015B\\x07/\\x02\\x02\\u015B\" +\n    \"\\u015C\\x07/\\x02\\x02\\u015CH\\x03\\x02\\x02\\x02\\u015D\\u015E\\x07,\\x02\\x02\\u015E\" +\n    \"J\\x03\\x02\\x02\\x02\\u015F\\u0160\\x071\\x02\\x02\\u0160L\\x03\\x02\\x02\\x02\\u0161\" +\n    \"\\u0162\\x07\\'\\x02\\x02\\u0162N\\x03\\x02\\x02\\x02\\u0163\\u0164\\x07(\\x02\\x02\\u0164\" +\n    \"P\\x03\\x02\\x02\\x02\\u0165\\u0166\\x07~\\x02\\x02\\u0166R\\x03\\x02\\x02\\x02\\u0167\" +\n    \"\\u0168\\x07(\\x02\\x02\\u0168\\u0169\\x07(\\x02\\x02\\u0169T\\x03\\x02\\x02\\x02\\u016A\" +\n    \"\\u016B\\x07~\\x02\\x02\\u016B\\u016C\\x07~\\x02\\x02\\u016CV\\x03\\x02\\x02\\x02\\u016D\" +\n    \"\\u016E\\x07`\\x02\\x02\\u016EX\\x03\\x02\\x02\\x02\\u016F\\u0170\\x07#\\x02\\x02\\u0170\" +\n    \"Z\\x03\\x02\\x02\\x02\\u0171\\u0172\\x07\\x80\\x02\\x02\\u0172\\\\\\x03\\x02\\x02\\x02\" +\n    \"\\u0173\\u0174\\x07A\\x02\\x02\\u0174^\\x03\\x02\\x02\\x02\\u0175\\u0176\\x07<\\x02\" +\n    \"\\x02\\u0176`\\x03\\x02\\x02\\x02\\u0177\\u0178\\x07=\\x02\\x02\\u0178b\\x03\\x02\\x02\" +\n    \"\\x02\\u0179\\u017A\\x07.\\x02\\x02\\u017Ad\\x03\\x02\\x02\\x02\\u017B\\u017C\\x07?\" +\n    \"\\x02\\x02\\u017Cf\\x03\\x02\\x02\\x02\\u017D\\u017E\\x07,\\x02\\x02\\u017E\\u017F\\x07\" +\n    \"?\\x02\\x02\\u017Fh\\x03\\x02\\x02\\x02\\u0180\\u0181\\x071\\x02\\x02\\u0181\\u0182\" +\n    \"\\x07?\\x02\\x02\\u0182j\\x03\\x02\\x02\\x02\\u0183\\u0184\\x07\\'\\x02\\x02\\u0184\\u0185\" +\n    \"\\x07?\\x02\\x02\\u0185l\\x03\\x02\\x02\\x02\\u0186\\u0187\\x07-\\x02\\x02\\u0187\\u0188\" +\n    \"\\x07?\\x02\\x02\\u0188n\\x03\\x02\\x02\\x02\\u0189\\u018A\\x07/\\x02\\x02\\u018A\\u018B\" +\n    \"\\x07?\\x02\\x02\\u018Bp\\x03\\x02\\x02\\x02\\u018C\\u018D\\x07>\\x02\\x02\\u018D\\u018E\" +\n    \"\\x07>\\x02\\x02\\u018E\\u018F\\x07?\\x02\\x02\\u018Fr\\x03\\x02\\x02\\x02\\u0190\\u0191\" +\n    \"\\x07@\\x02\\x02\\u0191\\u0192\\x07@\\x02\\x02\\u0192\\u0193\\x07?\\x02\\x02\\u0193\" +\n    \"t\\x03\\x02\\x02\\x02\\u0194\\u0195\\x07(\\x02\\x02\\u0195\\u0196\\x07?\\x02\\x02\\u0196\" +\n    \"v\\x03\\x02\\x02\\x02\\u0197\\u0198\\x07`\\x02\\x02\\u0198\\u0199\\x07?\\x02\\x02\\u0199\" +\n    \"x\\x03\\x02\\x02\\x02\\u019A\\u019B\\x07~\\x02\\x02\\u019B\\u019C\\x07?\\x02\\x02\\u019C\" +\n    \"z\\x03\\x02\\x02\\x02\\u019D\\u019E\\x07?\\x02\\x02\\u019E\\u019F\\x07?\\x02\\x02\\u019F\" +\n    \"|\\x03\\x02\\x02\\x02\\u01A0\\u01A1\\x07#\\x02\\x02\\u01A1\\u01A2\\x07?\\x02\\x02\\u01A2\" +\n    \"~\\x03\\x02\\x02\\x02\\u01A3\\u01A4\\x07/\\x02\\x02\\u01A4\\u01A5\\x07@\\x02\\x02\\u01A5\" +\n    \"\\x80\\x03\\x02\\x02\\x02\\u01A6\\u01A7\\x070\\x02\\x02\\u01A7\\x82\\x03\\x02\\x02\\x02\" +\n    \"\\u01A8\\u01AD\\x05\\x85C\\x02\\u01A9\\u01AC\\x05\\x85C\\x02\\u01AA\\u01AC\\x05\\x89\" +\n    \"E\\x02\\u01AB\\u01A9\\x03\\x02\\x02\\x02\\u01AB\\u01AA\\x03\\x02\\x02\\x02\\u01AC\\u01AF\" +\n    \"\\x03\\x02\\x02\\x02\\u01AD\\u01AB\\x03\\x02\\x02\\x02\\u01AD\\u01AE\\x03\\x02\\x02\\x02\" +\n    \"\\u01AE\\x84\\x03\\x02\\x02\\x02\\u01AF\\u01AD\\x03\\x02\\x02\\x02\\u01B0\\u01B1\\x05\" +\n    \"\\x87D\\x02\\u01B1\\x86\\x03\\x02\\x02\\x02\\u01B2\\u01B3\\t\\x02\\x02\\x02\\u01B3\\x88\" +\n    \"\\x03\\x02\\x02\\x02\\u01B4\\u01B5\\t\\x03\\x02\\x02\\u01B5\\x8A\\x03\\x02\\x02\\x02\\u01B6\" +\n    \"\\u01BA\\x05\\x8DG\\x02\\u01B7\\u01BA\\x05\\x97L\\x02\\u01B8\\u01BA\\x05\\xA7T\\x02\" +\n    \"\\u01B9\\u01B6\\x03\\x02\\x02\\x02\\u01B9\\u01B7\\x03\\x02\\x02\\x02\\u01B9\\u01B8\\x03\" +\n    \"\\x02\\x02\\x02\\u01BA\\x8C\\x03\\x02\\x02\\x02\\u01BB\\u01BC\\x05\\x8FH\\x02\\u01BC\" +\n    \"\\x8E\\x03\\x02\\x02\\x02\\u01BD\\u01BE\\x072\\x02\\x02\\u01BE\\u01C0\\t\\x04\\x02\\x02\" +\n    \"\\u01BF\\u01C1\\t\\x05\\x02\\x02\\u01C0\\u01BF\\x03\\x02\\x02\\x02\\u01C1\\u01C2\\x03\" +\n    \"\\x02\\x02\\x02\\u01C2\\u01C0\\x03\\x02\\x02\\x02\\u01C2\\u01C3\\x03\\x02\\x02\\x02\\u01C3\" +\n    \"\\x90\\x03\\x02\\x02\\x02\\u01C4\\u01C8\\x05\\x93J\\x02\\u01C5\\u01C7\\x05\\x89E\\x02\" +\n    \"\\u01C6\\u01C5\\x03\\x02\\x02\\x02\\u01C7\\u01CA\\x03\\x02\\x02\\x02\\u01C8\\u01C6\\x03\" +\n    \"\\x02\\x02\\x02\\u01C8\\u01C9\\x03\\x02\\x02\\x02\\u01C9\\x92\\x03\\x02\\x02\\x02\\u01CA\" +\n    \"\\u01C8\\x03\\x02\\x02\\x02\\u01CB\\u01CC\\t\\x06\\x02\\x02\\u01CC\\x94\\x03\\x02\\x02\" +\n    \"\\x02\\u01CD\\u01CE\\t\\x07\\x02\\x02\\u01CE\\x96\\x03\\x02\\x02\\x02\\u01CF\\u01D0\\x05\" +\n    \"\\x99M\\x02\\u01D0\\x98\\x03\\x02\\x02\\x02\\u01D1\\u01D3\\x05\\x9BN\\x02\\u01D2\\u01D4\" +\n    \"\\x05\\x9DO\\x02\\u01D3\\u01D2\\x03\\x02\\x02\\x02\\u01D3\\u01D4\\x03\\x02\\x02\\x02\" +\n    \"\\u01D4\\u01D6\\x03\\x02\\x02\\x02\\u01D5\\u01D7\\x05\\xA5S\\x02\\u01D6\\u01D5\\x03\" +\n    \"\\x02\\x02\\x02\\u01D6\\u01D7\\x03\\x02\\x02\\x02\\u01D7\\u01DE\\x03\\x02\\x02\\x02\\u01D8\" +\n    \"\\u01D9\\x05\\xA1Q\\x02\\u01D9\\u01DB\\x05\\x9DO\\x02\\u01DA\\u01DC\\x05\\xA5S\\x02\" +\n    \"\\u01DB\\u01DA\\x03\\x02\\x02\\x02\\u01DB\\u01DC\\x03\\x02\\x02\\x02\\u01DC\\u01DE\\x03\" +\n    \"\\x02\\x02\\x02\\u01DD\\u01D1\\x03\\x02\\x02\\x02\\u01DD\\u01D8\\x03\\x02\\x02\\x02\\u01DE\" +\n    \"\\x9A\\x03\\x02\\x02\\x02\\u01DF\\u01E1\\x05\\xA1Q\\x02\\u01E0\\u01DF\\x03\\x02\\x02\" +\n    \"\\x02\\u01E0\\u01E1\\x03\\x02\\x02\\x02\\u01E1\\u01E2\\x03\\x02\\x02\\x02\\u01E2\\u01E3\" +\n    \"\\x070\\x02\\x02\\u01E3\\u01E8\\x05\\xA1Q\\x02\\u01E4\\u01E5\\x05\\xA1Q\\x02\\u01E5\" +\n    \"\\u01E6\\x070\\x02\\x02\\u01E6\\u01E8\\x03\\x02\\x02\\x02\\u01E7\\u01E0\\x03\\x02\\x02\" +\n    \"\\x02\\u01E7\\u01E4\\x03\\x02\\x02\\x02\\u01E8\\x9C\\x03\\x02\\x02\\x02\\u01E9\\u01EB\" +\n    \"\\t\\b\\x02\\x02\\u01EA\\u01EC\\x05\\x9FP\\x02\\u01EB\\u01EA\\x03\\x02\\x02\\x02\\u01EB\" +\n    \"\\u01EC\\x03\\x02\\x02\\x02\\u01EC\\u01ED\\x03\\x02\\x02\\x02\\u01ED\\u01EE\\x05\\xA1\" +\n    \"Q\\x02\\u01EE\\x9E\\x03\\x02\\x02\\x02\\u01EF\\u01F0\\t\\t\\x02\\x02\\u01F0\\xA0\\x03\" +\n    \"\\x02\\x02\\x02\\u01F1\\u01F3\\x05\\x89E\\x02\\u01F2\\u01F1\\x03\\x02\\x02\\x02\\u01F3\" +\n    \"\\u01F4\\x03\\x02\\x02\\x02\\u01F4\\u01F2\\x03\\x02\\x02\\x02\\u01F4\\u01F5\\x03\\x02\" +\n    \"\\x02\\x02\\u01F5\\xA2\\x03\\x02\\x02\\x02\\u01F6\\u01F8\\t\\n\\x02\\x02\\u01F7\\u01F9\" +\n    \"\\x05\\x9FP\\x02\\u01F8\\u01F7\\x03\\x02\\x02\\x02\\u01F8\\u01F9\\x03\\x02\\x02\\x02\" +\n    \"\\u01F9\\u01FA\\x03\\x02\\x02\\x02\\u01FA\\u01FB\\x05\\xA1Q\\x02\\u01FB\\xA4\\x03\\x02\" +\n    \"\\x02\\x02\\u01FC\\u01FD\\t\\v\\x02\\x02\\u01FD\\xA6\\x03\\x02\\x02\\x02\\u01FE\\u01FF\" +\n    \"\\x07)\\x02\\x02\\u01FF\\u0200\\x05\\xA9U\\x02\\u0200\\u0201\\x07)\\x02\\x02\\u0201\" +\n    \"\\u0215\\x03\\x02\\x02\\x02\\u0202\\u0203\\x07N\\x02\\x02\\u0203\\u0204\\x07)\\x02\\x02\" +\n    \"\\u0204\\u0205\\x03\\x02\\x02\\x02\\u0205\\u0206\\x05\\xA9U\\x02\\u0206\\u0207\\x07\" +\n    \")\\x02\\x02\\u0207\\u0215\\x03\\x02\\x02\\x02\\u0208\\u0209\\x07w\\x02\\x02\\u0209\\u020A\" +\n    \"\\x07)\\x02\\x02\\u020A\\u020B\\x03\\x02\\x02\\x02\\u020B\\u020C\\x05\\xA9U\\x02\\u020C\" +\n    \"\\u020D\\x07)\\x02\\x02\\u020D\\u0215\\x03\\x02\\x02\\x02\\u020E\\u020F\\x07W\\x02\\x02\" +\n    \"\\u020F\\u0210\\x07)\\x02\\x02\\u0210\\u0211\\x03\\x02\\x02\\x02\\u0211\\u0212\\x05\" +\n    \"\\xA9U\\x02\\u0212\\u0213\\x07)\\x02\\x02\\u0213\\u0215\\x03\\x02\\x02\\x02\\u0214\\u01FE\" +\n    \"\\x03\\x02\\x02\\x02\\u0214\\u0202\\x03\\x02\\x02\\x02\\u0214\\u0208\\x03\\x02\\x02\\x02\" +\n    \"\\u0214\\u020E\\x03\\x02\\x02\\x02\\u0215\\xA8\\x03\\x02\\x02\\x02\\u0216\\u0218\\x05\" +\n    \"\\xABV\\x02\\u0217\\u0216\\x03\\x02\\x02\\x02\\u0218\\u0219\\x03\\x02\\x02\\x02\\u0219\" +\n    \"\\u0217\\x03\\x02\\x02\\x02\\u0219\\u021A\\x03\\x02\\x02\\x02\\u021A\\xAA\\x03\\x02\\x02\" +\n    \"\\x02\\u021B\\u021E\\n\\f\\x02\\x02\\u021C\\u021E\\x05\\xADW\\x02\\u021D\\u021B\\x03\" +\n    \"\\x02\\x02\\x02\\u021D\\u021C\\x03\\x02\\x02\\x02\\u021E\\xAC\\x03\\x02\\x02\\x02\\u021F\" +\n    \"\\u0220\\x05\\xAFX\\x02\\u0220\\xAE\\x03\\x02\\x02\\x02\\u0221\\u0222\\x07^\\x02\\x02\" +\n    \"\\u0222\\u0223\\t\\r\\x02\\x02\\u0223\\xB0\\x03\\x02\\x02\\x02\\u0224\\u0226\\x05\\xB3\" +\n    \"Z\\x02\\u0225\\u0224\\x03\\x02\\x02\\x02\\u0225\\u0226\\x03\\x02\\x02\\x02\\u0226\\u0227\" +\n    \"\\x03\\x02\\x02\\x02\\u0227\\u0229\\x07$\\x02\\x02\\u0228\\u022A\\x05\\xB5[\\x02\\u0229\" +\n    \"\\u0228\\x03\\x02\\x02\\x02\\u0229\\u022A\\x03\\x02\\x02\\x02\\u022A\\u022B\\x03\\x02\" +\n    \"\\x02\\x02\";\nClangLexer._serializedATNSegment1 = \"\\u022B\\u022C\\x07$\\x02\\x02\\u022C\\xB2\\x03\\x02\\x02\\x02\\u022D\\u022E\\x07w\\x02\" +\n    \"\\x02\\u022E\\u0231\\x07:\\x02\\x02\\u022F\\u0231\\t\\x0E\\x02\\x02\\u0230\\u022D\\x03\" +\n    \"\\x02\\x02\\x02\\u0230\\u022F\\x03\\x02\\x02\\x02\\u0231\\xB4\\x03\\x02\\x02\\x02\\u0232\" +\n    \"\\u0234\\x05\\xB7\\\\\\x02\\u0233\\u0232\\x03\\x02\\x02\\x02\\u0234\\u0235\\x03\\x02\\x02\" +\n    \"\\x02\\u0235\\u0233\\x03\\x02\\x02\\x02\\u0235\\u0236\\x03\\x02\\x02\\x02\\u0236\\xB6\" +\n    \"\\x03\\x02\\x02\\x02\\u0237\\u023F\\n\\x0F\\x02\\x02\\u0238\\u023F\\x05\\xADW\\x02\\u0239\" +\n    \"\\u023A\\x07^\\x02\\x02\\u023A\\u023F\\x07\\f\\x02\\x02\\u023B\\u023C\\x07^\\x02\\x02\" +\n    \"\\u023C\\u023D\\x07\\x0F\\x02\\x02\\u023D\\u023F\\x07\\f\\x02\\x02\\u023E\\u0237\\x03\" +\n    \"\\x02\\x02\\x02\\u023E\\u0238\\x03\\x02\\x02\\x02\\u023E\\u0239\\x03\\x02\\x02\\x02\\u023E\" +\n    \"\\u023B\\x03\\x02\\x02\\x02\\u023F\\xB8\\x03\\x02\\x02\\x02\\u0240\\u0242\\t\\x10\\x02\" +\n    \"\\x02\\u0241\\u0240\\x03\\x02\\x02\\x02\\u0242\\u0243\\x03\\x02\\x02\\x02\\u0243\\u0241\" +\n    \"\\x03\\x02\\x02\\x02\\u0243\\u0244\\x03\\x02\\x02\\x02\\u0244\\u0245\\x03\\x02\\x02\\x02\" +\n    \"\\u0245\\u0246\\b]\\x02\\x02\\u0246\\xBA\\x03\\x02\\x02\\x02\\u0247\\u0249\\x07\\x0F\" +\n    \"\\x02\\x02\\u0248\\u024A\\x07\\f\\x02\\x02\\u0249\\u0248\\x03\\x02\\x02\\x02\\u0249\\u024A\" +\n    \"\\x03\\x02\\x02\\x02\\u024A\\u024D\\x03\\x02\\x02\\x02\\u024B\\u024D\\x07\\f\\x02\\x02\" +\n    \"\\u024C\\u0247\\x03\\x02\\x02\\x02\\u024C\\u024B\\x03\\x02\\x02\\x02\\u024D\\u024E\\x03\" +\n    \"\\x02\\x02\\x02\\u024E\\u024F\\b^\\x02\\x02\\u024F\\xBC\\x03\\x02\\x02\\x02\\u0250\\u0251\" +\n    \"\\x071\\x02\\x02\\u0251\\u0252\\x07,\\x02\\x02\\u0252\\u0256\\x03\\x02\\x02\\x02\\u0253\" +\n    \"\\u0255\\v\\x02\\x02\\x02\\u0254\\u0253\\x03\\x02\\x02\\x02\\u0255\\u0258\\x03\\x02\\x02\" +\n    \"\\x02\\u0256\\u0257\\x03\\x02\\x02\\x02\\u0256\\u0254\\x03\\x02\\x02\\x02\\u0257\\u0259\" +\n    \"\\x03\\x02\\x02\\x02\\u0258\\u0256\\x03\\x02\\x02\\x02\\u0259\\u025A\\x07,\\x02\\x02\" +\n    \"\\u025A\\u025B\\x071\\x02\\x02\\u025B\\u025C\\x03\\x02\\x02\\x02\\u025C\\u025D\\b_\\x02\" +\n    \"\\x02\\u025D\\xBE\\x03\\x02\\x02\\x02\\u025E\\u025F\\x071\\x02\\x02\\u025F\\u0260\\x07\" +\n    \"1\\x02\\x02\\u0260\\u0264\\x03\\x02\\x02\\x02\\u0261\\u0263\\n\\x11\\x02\\x02\\u0262\" +\n    \"\\u0261\\x03\\x02\\x02\\x02\\u0263\\u0266\\x03\\x02\\x02\\x02\\u0264\\u0262\\x03\\x02\" +\n    \"\\x02\\x02\\u0264\\u0265\\x03\\x02\\x02\\x02\\u0265\\u0267\\x03\\x02\\x02\\x02\\u0266\" +\n    \"\\u0264\\x03\\x02\\x02\\x02\\u0267\\u0268\\b`\\x02\\x02\\u0268\\xC0\\x03\\x02\\x02\\x02\" +\n    \"\\x1E\\x02\\u01AB\\u01AD\\u01B9\\u01C2\\u01C8\\u01D3\\u01D6\\u01DB\\u01DD\\u01E0\\u01E7\" +\n    \"\\u01EB\\u01F4\\u01F8\\u0214\\u0219\\u021D\\u0225\\u0229\\u0230\\u0235\\u023E\\u0243\" +\n    \"\\u0249\\u024C\\u0256\\u0264\\x03\\b\\x02\\x02\";\nClangLexer._serializedATN = Utils.join([\n    ClangLexer._serializedATNSegment0,\n    ClangLexer._serializedATNSegment1,\n], \"\");\n//# sourceMappingURL=ClangLexer.js.map","\"use strict\";\n// Generated from ./src/lang/Clang.g4 by ANTLR 4.9.0-SNAPSHOT\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DirectAbstractDeclaratorContext = exports.AbstractDeclaratorContext = exports.TypeNameContext = exports.IdentifierListContext = exports.ParameterDeclarationContext = exports.ParameterListContext = exports.ParameterTypeListContext = exports.TypeQualifierListContext = exports.PointerContext = exports.NestedParenthesesBlockContext = exports.DirectDeclaratorContext = exports.DeclaratorContext = exports.FunctionSpecifierContext = exports.TypeQualifierContext = exports.StructDeclaratorContext = exports.StructDeclaratorListContext = exports.SpecifierQualifierListContext = exports.StructDeclarationContext = exports.StructDeclarationListContext = exports.StructSpecifierContext = exports.TypeSpecifierContext = exports.InitDeclaratorContext = exports.InitDeclaratorListContext = exports.DeclarationSpecifierContext = exports.DeclarationSpecifiers2Context = exports.DeclarationSpecifiersContext = exports.DeclarationContext = exports.ConstantExpressionContext = exports.ExpressionContext = exports.AssignmentOperatorContext = exports.AssignmentExpressionContext = exports.ConditionalExpressionContext = exports.LogicalOrExpressionContext = exports.LogicalAndExpressionContext = exports.InclusiveOrExpressionContext = exports.ExclusiveOrExpressionContext = exports.AndExpressionContext = exports.EqualityExpressionContext = exports.RelationalExpressionContext = exports.ShiftExpressionContext = exports.AdditiveExpressionContext = exports.MultiplicativeExpressionContext = exports.CastExpressionContext = exports.UnaryOperatorContext = exports.UnaryExpressionContext = exports.ArgumentExpressionListContext = exports.PostfixExpressionContext = exports.PrimaryExpressionContext = exports.StartContext = exports.ClangParser = void 0;\nexports.DeclarationListContext = exports.FunctionDefinitionContext = exports.ExternalDeclarationContext = exports.TranslationUnitContext = exports.CompilationUnitContext = exports.ForExpressionContext = exports.ForDeclarationContext = exports.ForConditionContext = exports.IterationStatementContext = exports.SelectionStatementContext = exports.ExpressionStatementContext = exports.BlockItemContext = exports.BlockItemListContext = exports.CompoundStatementContext = exports.StatementContext = exports.DesignatorContext = exports.DesignatorListContext = exports.DesignationContext = exports.InitializerListContext = exports.InitializerContext = exports.TypedefNameContext = void 0;\nconst ATN_1 = require(\"antlr4ts/atn/ATN\");\nconst ATNDeserializer_1 = require(\"antlr4ts/atn/ATNDeserializer\");\nconst FailedPredicateException_1 = require(\"antlr4ts/FailedPredicateException\");\nconst NoViableAltException_1 = require(\"antlr4ts/NoViableAltException\");\nconst Parser_1 = require(\"antlr4ts/Parser\");\nconst ParserRuleContext_1 = require(\"antlr4ts/ParserRuleContext\");\nconst ParserATNSimulator_1 = require(\"antlr4ts/atn/ParserATNSimulator\");\nconst RecognitionException_1 = require(\"antlr4ts/RecognitionException\");\nconst Token_1 = require(\"antlr4ts/Token\");\nconst VocabularyImpl_1 = require(\"antlr4ts/VocabularyImpl\");\nconst Utils = require(\"antlr4ts/misc/Utils\");\nclass ClangParser extends Parser_1.Parser {\n    constructor(input) {\n        super(input);\n        this._interp = new ParserATNSimulator_1.ParserATNSimulator(ClangParser._ATN, this);\n    }\n    // @Override\n    // @NotNull\n    get vocabulary() {\n        return ClangParser.VOCABULARY;\n    }\n    // tslint:enable:no-trailing-whitespace\n    // @Override\n    get grammarFileName() { return \"Clang.g4\"; }\n    // @Override\n    get ruleNames() { return ClangParser.ruleNames; }\n    // @Override\n    get serializedATN() { return ClangParser._serializedATN; }\n    createFailedPredicateException(predicate, message) {\n        return new FailedPredicateException_1.FailedPredicateException(this, predicate, message);\n    }\n    // @RuleVersion(0)\n    start() {\n        let _localctx = new StartContext(this._ctx, this.state);\n        this.enterRule(_localctx, 0, ClangParser.RULE_start);\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 140;\n                this.primaryExpression();\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    primaryExpression() {\n        let _localctx = new PrimaryExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 2, ClangParser.RULE_primaryExpression);\n        let _la;\n        try {\n            this.state = 153;\n            this._errHandler.sync(this);\n            switch (this._input.LA(1)) {\n                case ClangParser.Identifier:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 142;\n                        this.match(ClangParser.Identifier);\n                    }\n                    break;\n                case ClangParser.Constant:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 143;\n                        this.match(ClangParser.Constant);\n                    }\n                    break;\n                case ClangParser.StringLiteral:\n                    this.enterOuterAlt(_localctx, 3);\n                    {\n                        this.state = 145;\n                        this._errHandler.sync(this);\n                        _la = this._input.LA(1);\n                        do {\n                            {\n                                {\n                                    this.state = 144;\n                                    this.match(ClangParser.StringLiteral);\n                                }\n                            }\n                            this.state = 147;\n                            this._errHandler.sync(this);\n                            _la = this._input.LA(1);\n                        } while (_la === ClangParser.StringLiteral);\n                    }\n                    break;\n                case ClangParser.LeftParen:\n                    this.enterOuterAlt(_localctx, 4);\n                    {\n                        this.state = 149;\n                        this.match(ClangParser.LeftParen);\n                        this.state = 150;\n                        this.expression();\n                        this.state = 151;\n                        this.match(ClangParser.RightParen);\n                    }\n                    break;\n                default:\n                    throw new NoViableAltException_1.NoViableAltException(this);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    postfixExpression() {\n        let _localctx = new PostfixExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 4, ClangParser.RULE_postfixExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                {\n                    this.state = 155;\n                    this.primaryExpression();\n                }\n                this.state = 170;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.LeftParen || _la === ClangParser.LeftBracket || ((((_la - 33)) & ~0x1F) === 0 && ((1 << (_la - 33)) & ((1 << (ClangParser.PlusPlus - 33)) | (1 << (ClangParser.MinusMinus - 33)) | (1 << (ClangParser.Arrow - 33)) | (1 << (ClangParser.Dot - 33)))) !== 0)) {\n                    {\n                        this.state = 168;\n                        this._errHandler.sync(this);\n                        switch (this._input.LA(1)) {\n                            case ClangParser.LeftBracket:\n                                {\n                                    this.state = 156;\n                                    this.match(ClangParser.LeftBracket);\n                                    this.state = 157;\n                                    this.expression();\n                                    this.state = 158;\n                                    this.match(ClangParser.RightBracket);\n                                }\n                                break;\n                            case ClangParser.LeftParen:\n                                {\n                                    this.state = 160;\n                                    this.match(ClangParser.LeftParen);\n                                    this.state = 162;\n                                    this._errHandler.sync(this);\n                                    _la = this._input.LA(1);\n                                    if (_la === ClangParser.T__0 || _la === ClangParser.LeftParen || ((((_la - 32)) & ~0x1F) === 0 && ((1 << (_la - 32)) & ((1 << (ClangParser.Plus - 32)) | (1 << (ClangParser.PlusPlus - 32)) | (1 << (ClangParser.Minus - 32)) | (1 << (ClangParser.MinusMinus - 32)) | (1 << (ClangParser.Star - 32)) | (1 << (ClangParser.And - 32)) | (1 << (ClangParser.Not - 32)))) !== 0) || ((((_la - 65)) & ~0x1F) === 0 && ((1 << (_la - 65)) & ((1 << (ClangParser.Identifier - 65)) | (1 << (ClangParser.Constant - 65)) | (1 << (ClangParser.DigitSequence - 65)) | (1 << (ClangParser.StringLiteral - 65)))) !== 0)) {\n                                        {\n                                            this.state = 161;\n                                            this.argumentExpressionList();\n                                        }\n                                    }\n                                    this.state = 164;\n                                    this.match(ClangParser.RightParen);\n                                }\n                                break;\n                            case ClangParser.Arrow:\n                            case ClangParser.Dot:\n                                {\n                                    this.state = 165;\n                                    _la = this._input.LA(1);\n                                    if (!(_la === ClangParser.Arrow || _la === ClangParser.Dot)) {\n                                        this._errHandler.recoverInline(this);\n                                    }\n                                    else {\n                                        if (this._input.LA(1) === Token_1.Token.EOF) {\n                                            this.matchedEOF = true;\n                                        }\n                                        this._errHandler.reportMatch(this);\n                                        this.consume();\n                                    }\n                                    this.state = 166;\n                                    this.match(ClangParser.Identifier);\n                                }\n                                break;\n                            case ClangParser.PlusPlus:\n                            case ClangParser.MinusMinus:\n                                {\n                                    this.state = 167;\n                                    _la = this._input.LA(1);\n                                    if (!(_la === ClangParser.PlusPlus || _la === ClangParser.MinusMinus)) {\n                                        this._errHandler.recoverInline(this);\n                                    }\n                                    else {\n                                        if (this._input.LA(1) === Token_1.Token.EOF) {\n                                            this.matchedEOF = true;\n                                        }\n                                        this._errHandler.reportMatch(this);\n                                        this.consume();\n                                    }\n                                }\n                                break;\n                            default:\n                                throw new NoViableAltException_1.NoViableAltException(this);\n                        }\n                    }\n                    this.state = 172;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    argumentExpressionList() {\n        let _localctx = new ArgumentExpressionListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 6, ClangParser.RULE_argumentExpressionList);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 173;\n                this.assignmentExpression();\n                this.state = 178;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.Comma) {\n                    {\n                        {\n                            this.state = 174;\n                            this.match(ClangParser.Comma);\n                            this.state = 175;\n                            this.assignmentExpression();\n                        }\n                    }\n                    this.state = 180;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    unaryExpression() {\n        let _localctx = new UnaryExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 8, ClangParser.RULE_unaryExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 184;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.PlusPlus || _la === ClangParser.MinusMinus) {\n                    {\n                        {\n                            this.state = 181;\n                            _la = this._input.LA(1);\n                            if (!(_la === ClangParser.PlusPlus || _la === ClangParser.MinusMinus)) {\n                                this._errHandler.recoverInline(this);\n                            }\n                            else {\n                                if (this._input.LA(1) === Token_1.Token.EOF) {\n                                    this.matchedEOF = true;\n                                }\n                                this._errHandler.reportMatch(this);\n                                this.consume();\n                            }\n                        }\n                    }\n                    this.state = 186;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n                this.state = 191;\n                this._errHandler.sync(this);\n                switch (this._input.LA(1)) {\n                    case ClangParser.LeftParen:\n                    case ClangParser.Identifier:\n                    case ClangParser.Constant:\n                    case ClangParser.StringLiteral:\n                        {\n                            this.state = 187;\n                            this.postfixExpression();\n                        }\n                        break;\n                    case ClangParser.Plus:\n                    case ClangParser.Minus:\n                    case ClangParser.Star:\n                    case ClangParser.And:\n                    case ClangParser.Not:\n                        {\n                            this.state = 188;\n                            this.unaryOperator();\n                            this.state = 189;\n                            this.castExpression();\n                        }\n                        break;\n                    default:\n                        throw new NoViableAltException_1.NoViableAltException(this);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    unaryOperator() {\n        let _localctx = new UnaryOperatorContext(this._ctx, this.state);\n        this.enterRule(_localctx, 10, ClangParser.RULE_unaryOperator);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 193;\n                _la = this._input.LA(1);\n                if (!(((((_la - 32)) & ~0x1F) === 0 && ((1 << (_la - 32)) & ((1 << (ClangParser.Plus - 32)) | (1 << (ClangParser.Minus - 32)) | (1 << (ClangParser.Star - 32)) | (1 << (ClangParser.And - 32)) | (1 << (ClangParser.Not - 32)))) !== 0))) {\n                    this._errHandler.recoverInline(this);\n                }\n                else {\n                    if (this._input.LA(1) === Token_1.Token.EOF) {\n                        this.matchedEOF = true;\n                    }\n                    this._errHandler.reportMatch(this);\n                    this.consume();\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    castExpression() {\n        let _localctx = new CastExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 12, ClangParser.RULE_castExpression);\n        let _la;\n        try {\n            this.state = 205;\n            this._errHandler.sync(this);\n            switch (this.interpreter.adaptivePredict(this._input, 9, this._ctx)) {\n                case 1:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 196;\n                        this._errHandler.sync(this);\n                        _la = this._input.LA(1);\n                        if (_la === ClangParser.T__0) {\n                            {\n                                this.state = 195;\n                                this.match(ClangParser.T__0);\n                            }\n                        }\n                        this.state = 198;\n                        this.match(ClangParser.LeftParen);\n                        this.state = 199;\n                        this.typeName();\n                        this.state = 200;\n                        this.match(ClangParser.RightParen);\n                        this.state = 201;\n                        this.castExpression();\n                    }\n                    break;\n                case 2:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 203;\n                        this.unaryExpression();\n                    }\n                    break;\n                case 3:\n                    this.enterOuterAlt(_localctx, 3);\n                    {\n                        this.state = 204;\n                        this.match(ClangParser.DigitSequence);\n                    }\n                    break;\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    multiplicativeExpression() {\n        let _localctx = new MultiplicativeExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 14, ClangParser.RULE_multiplicativeExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 207;\n                this.castExpression();\n                this.state = 212;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (((((_la - 36)) & ~0x1F) === 0 && ((1 << (_la - 36)) & ((1 << (ClangParser.Star - 36)) | (1 << (ClangParser.Div - 36)) | (1 << (ClangParser.Mod - 36)))) !== 0)) {\n                    {\n                        {\n                            this.state = 208;\n                            _la = this._input.LA(1);\n                            if (!(((((_la - 36)) & ~0x1F) === 0 && ((1 << (_la - 36)) & ((1 << (ClangParser.Star - 36)) | (1 << (ClangParser.Div - 36)) | (1 << (ClangParser.Mod - 36)))) !== 0))) {\n                                this._errHandler.recoverInline(this);\n                            }\n                            else {\n                                if (this._input.LA(1) === Token_1.Token.EOF) {\n                                    this.matchedEOF = true;\n                                }\n                                this._errHandler.reportMatch(this);\n                                this.consume();\n                            }\n                            this.state = 209;\n                            this.castExpression();\n                        }\n                    }\n                    this.state = 214;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    additiveExpression() {\n        let _localctx = new AdditiveExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 16, ClangParser.RULE_additiveExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 215;\n                this.multiplicativeExpression();\n                this.state = 220;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.Plus || _la === ClangParser.Minus) {\n                    {\n                        {\n                            this.state = 216;\n                            _la = this._input.LA(1);\n                            if (!(_la === ClangParser.Plus || _la === ClangParser.Minus)) {\n                                this._errHandler.recoverInline(this);\n                            }\n                            else {\n                                if (this._input.LA(1) === Token_1.Token.EOF) {\n                                    this.matchedEOF = true;\n                                }\n                                this._errHandler.reportMatch(this);\n                                this.consume();\n                            }\n                            this.state = 217;\n                            this.multiplicativeExpression();\n                        }\n                    }\n                    this.state = 222;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    shiftExpression() {\n        let _localctx = new ShiftExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 18, ClangParser.RULE_shiftExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 223;\n                this.additiveExpression();\n                this.state = 228;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.LeftShift || _la === ClangParser.RightShift) {\n                    {\n                        {\n                            this.state = 224;\n                            _la = this._input.LA(1);\n                            if (!(_la === ClangParser.LeftShift || _la === ClangParser.RightShift)) {\n                                this._errHandler.recoverInline(this);\n                            }\n                            else {\n                                if (this._input.LA(1) === Token_1.Token.EOF) {\n                                    this.matchedEOF = true;\n                                }\n                                this._errHandler.reportMatch(this);\n                                this.consume();\n                            }\n                            this.state = 225;\n                            this.additiveExpression();\n                        }\n                    }\n                    this.state = 230;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    relationalExpression() {\n        let _localctx = new RelationalExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 20, ClangParser.RULE_relationalExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 231;\n                this.shiftExpression();\n                this.state = 236;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.Less) | (1 << ClangParser.LessEqual) | (1 << ClangParser.Greater) | (1 << ClangParser.GreaterEqual))) !== 0)) {\n                    {\n                        {\n                            this.state = 232;\n                            _la = this._input.LA(1);\n                            if (!((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.Less) | (1 << ClangParser.LessEqual) | (1 << ClangParser.Greater) | (1 << ClangParser.GreaterEqual))) !== 0))) {\n                                this._errHandler.recoverInline(this);\n                            }\n                            else {\n                                if (this._input.LA(1) === Token_1.Token.EOF) {\n                                    this.matchedEOF = true;\n                                }\n                                this._errHandler.reportMatch(this);\n                                this.consume();\n                            }\n                            this.state = 233;\n                            this.shiftExpression();\n                        }\n                    }\n                    this.state = 238;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    equalityExpression() {\n        let _localctx = new EqualityExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 22, ClangParser.RULE_equalityExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 239;\n                this.relationalExpression();\n                this.state = 244;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.Equal || _la === ClangParser.NotEqual) {\n                    {\n                        {\n                            this.state = 240;\n                            _la = this._input.LA(1);\n                            if (!(_la === ClangParser.Equal || _la === ClangParser.NotEqual)) {\n                                this._errHandler.recoverInline(this);\n                            }\n                            else {\n                                if (this._input.LA(1) === Token_1.Token.EOF) {\n                                    this.matchedEOF = true;\n                                }\n                                this._errHandler.reportMatch(this);\n                                this.consume();\n                            }\n                            this.state = 241;\n                            this.relationalExpression();\n                        }\n                    }\n                    this.state = 246;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    andExpression() {\n        let _localctx = new AndExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 24, ClangParser.RULE_andExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 247;\n                this.equalityExpression();\n                this.state = 252;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.And) {\n                    {\n                        {\n                            this.state = 248;\n                            this.match(ClangParser.And);\n                            this.state = 249;\n                            this.equalityExpression();\n                        }\n                    }\n                    this.state = 254;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    exclusiveOrExpression() {\n        let _localctx = new ExclusiveOrExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 26, ClangParser.RULE_exclusiveOrExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 255;\n                this.andExpression();\n                this.state = 260;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.Caret) {\n                    {\n                        {\n                            this.state = 256;\n                            this.match(ClangParser.Caret);\n                            this.state = 257;\n                            this.andExpression();\n                        }\n                    }\n                    this.state = 262;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    inclusiveOrExpression() {\n        let _localctx = new InclusiveOrExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 28, ClangParser.RULE_inclusiveOrExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 263;\n                this.exclusiveOrExpression();\n                this.state = 268;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.Or) {\n                    {\n                        {\n                            this.state = 264;\n                            this.match(ClangParser.Or);\n                            this.state = 265;\n                            this.exclusiveOrExpression();\n                        }\n                    }\n                    this.state = 270;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    logicalAndExpression() {\n        let _localctx = new LogicalAndExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 30, ClangParser.RULE_logicalAndExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 271;\n                this.inclusiveOrExpression();\n                this.state = 276;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.AndAnd) {\n                    {\n                        {\n                            this.state = 272;\n                            this.match(ClangParser.AndAnd);\n                            this.state = 273;\n                            this.inclusiveOrExpression();\n                        }\n                    }\n                    this.state = 278;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    logicalOrExpression() {\n        let _localctx = new LogicalOrExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 32, ClangParser.RULE_logicalOrExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 279;\n                this.logicalAndExpression();\n                this.state = 284;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.OrOr) {\n                    {\n                        {\n                            this.state = 280;\n                            this.match(ClangParser.OrOr);\n                            this.state = 281;\n                            this.logicalAndExpression();\n                        }\n                    }\n                    this.state = 286;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    conditionalExpression() {\n        let _localctx = new ConditionalExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 34, ClangParser.RULE_conditionalExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 287;\n                this.logicalOrExpression();\n                this.state = 293;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === ClangParser.Question) {\n                    {\n                        this.state = 288;\n                        this.match(ClangParser.Question);\n                        this.state = 289;\n                        this.expression();\n                        this.state = 290;\n                        this.match(ClangParser.Colon);\n                        this.state = 291;\n                        this.conditionalExpression();\n                    }\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    assignmentExpression() {\n        let _localctx = new AssignmentExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 36, ClangParser.RULE_assignmentExpression);\n        try {\n            this.state = 301;\n            this._errHandler.sync(this);\n            switch (this.interpreter.adaptivePredict(this._input, 21, this._ctx)) {\n                case 1:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 295;\n                        this.conditionalExpression();\n                    }\n                    break;\n                case 2:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 296;\n                        this.unaryExpression();\n                        this.state = 297;\n                        this.assignmentOperator();\n                        this.state = 298;\n                        this.assignmentExpression();\n                    }\n                    break;\n                case 3:\n                    this.enterOuterAlt(_localctx, 3);\n                    {\n                        this.state = 300;\n                        this.match(ClangParser.DigitSequence);\n                    }\n                    break;\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    assignmentOperator() {\n        let _localctx = new AssignmentOperatorContext(this._ctx, this.state);\n        this.enterRule(_localctx, 38, ClangParser.RULE_assignmentOperator);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 303;\n                _la = this._input.LA(1);\n                if (!(((((_la - 50)) & ~0x1F) === 0 && ((1 << (_la - 50)) & ((1 << (ClangParser.Assign - 50)) | (1 << (ClangParser.StarAssign - 50)) | (1 << (ClangParser.DivAssign - 50)) | (1 << (ClangParser.ModAssign - 50)) | (1 << (ClangParser.PlusAssign - 50)) | (1 << (ClangParser.MinusAssign - 50)) | (1 << (ClangParser.LeftShiftAssign - 50)) | (1 << (ClangParser.RightShiftAssign - 50)) | (1 << (ClangParser.AndAssign - 50)) | (1 << (ClangParser.XorAssign - 50)) | (1 << (ClangParser.OrAssign - 50)))) !== 0))) {\n                    this._errHandler.recoverInline(this);\n                }\n                else {\n                    if (this._input.LA(1) === Token_1.Token.EOF) {\n                        this.matchedEOF = true;\n                    }\n                    this._errHandler.reportMatch(this);\n                    this.consume();\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    expression() {\n        let _localctx = new ExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 40, ClangParser.RULE_expression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 305;\n                this.assignmentExpression();\n                this.state = 310;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.Comma) {\n                    {\n                        {\n                            this.state = 306;\n                            this.match(ClangParser.Comma);\n                            this.state = 307;\n                            this.assignmentExpression();\n                        }\n                    }\n                    this.state = 312;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    constantExpression() {\n        let _localctx = new ConstantExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 42, ClangParser.RULE_constantExpression);\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 313;\n                this.conditionalExpression();\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    declaration() {\n        let _localctx = new DeclarationContext(this._ctx, this.state);\n        this.enterRule(_localctx, 44, ClangParser.RULE_declaration);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 315;\n                this.declarationSpecifiers();\n                this.state = 317;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === ClangParser.LeftParen || ((((_la - 36)) & ~0x1F) === 0 && ((1 << (_la - 36)) & ((1 << (ClangParser.Star - 36)) | (1 << (ClangParser.Caret - 36)) | (1 << (ClangParser.Identifier - 36)))) !== 0)) {\n                    {\n                        this.state = 316;\n                        this.initDeclaratorList();\n                    }\n                }\n                this.state = 319;\n                this.match(ClangParser.Semi);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    declarationSpecifiers() {\n        let _localctx = new DeclarationSpecifiersContext(this._ctx, this.state);\n        this.enterRule(_localctx, 46, ClangParser.RULE_declarationSpecifiers);\n        try {\n            let _alt;\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 322;\n                this._errHandler.sync(this);\n                _alt = 1;\n                do {\n                    switch (_alt) {\n                        case 1:\n                            {\n                                {\n                                    this.state = 321;\n                                    this.declarationSpecifier();\n                                }\n                            }\n                            break;\n                        default:\n                            throw new NoViableAltException_1.NoViableAltException(this);\n                    }\n                    this.state = 324;\n                    this._errHandler.sync(this);\n                    _alt = this.interpreter.adaptivePredict(this._input, 24, this._ctx);\n                } while (_alt !== 2 && _alt !== ATN_1.ATN.INVALID_ALT_NUMBER);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    declarationSpecifiers2() {\n        let _localctx = new DeclarationSpecifiers2Context(this._ctx, this.state);\n        this.enterRule(_localctx, 48, ClangParser.RULE_declarationSpecifiers2);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 327;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                do {\n                    {\n                        {\n                            this.state = 326;\n                            this.declarationSpecifier();\n                        }\n                    }\n                    this.state = 329;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                } while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.T__1) | (1 << ClangParser.Char) | (1 << ClangParser.Const) | (1 << ClangParser.Float) | (1 << ClangParser.Int) | (1 << ClangParser.Signed) | (1 << ClangParser.Struct) | (1 << ClangParser.Unsigned) | (1 << ClangParser.Void))) !== 0) || _la === ClangParser.Identifier);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    declarationSpecifier() {\n        let _localctx = new DeclarationSpecifierContext(this._ctx, this.state);\n        this.enterRule(_localctx, 50, ClangParser.RULE_declarationSpecifier);\n        try {\n            this.state = 334;\n            this._errHandler.sync(this);\n            switch (this._input.LA(1)) {\n                case ClangParser.Char:\n                case ClangParser.Float:\n                case ClangParser.Int:\n                case ClangParser.Signed:\n                case ClangParser.Struct:\n                case ClangParser.Unsigned:\n                case ClangParser.Void:\n                case ClangParser.Identifier:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 331;\n                        this.typeSpecifier();\n                    }\n                    break;\n                case ClangParser.Const:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 332;\n                        this.typeQualifier();\n                    }\n                    break;\n                case ClangParser.T__1:\n                    this.enterOuterAlt(_localctx, 3);\n                    {\n                        this.state = 333;\n                        this.functionSpecifier();\n                    }\n                    break;\n                default:\n                    throw new NoViableAltException_1.NoViableAltException(this);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    initDeclaratorList() {\n        let _localctx = new InitDeclaratorListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 52, ClangParser.RULE_initDeclaratorList);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 336;\n                this.initDeclarator();\n                this.state = 341;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.Comma) {\n                    {\n                        {\n                            this.state = 337;\n                            this.match(ClangParser.Comma);\n                            this.state = 338;\n                            this.initDeclarator();\n                        }\n                    }\n                    this.state = 343;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    initDeclarator() {\n        let _localctx = new InitDeclaratorContext(this._ctx, this.state);\n        this.enterRule(_localctx, 54, ClangParser.RULE_initDeclarator);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 344;\n                this.declarator();\n                this.state = 347;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === ClangParser.Assign) {\n                    {\n                        this.state = 345;\n                        this.match(ClangParser.Assign);\n                        this.state = 346;\n                        this.initializer();\n                    }\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    typeSpecifier() {\n        let _localctx = new TypeSpecifierContext(this._ctx, this.state);\n        this.enterRule(_localctx, 56, ClangParser.RULE_typeSpecifier);\n        let _la;\n        try {\n            this.state = 352;\n            this._errHandler.sync(this);\n            switch (this._input.LA(1)) {\n                case ClangParser.Char:\n                case ClangParser.Float:\n                case ClangParser.Int:\n                case ClangParser.Signed:\n                case ClangParser.Unsigned:\n                case ClangParser.Void:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 349;\n                        _la = this._input.LA(1);\n                        if (!((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.Char) | (1 << ClangParser.Float) | (1 << ClangParser.Int) | (1 << ClangParser.Signed) | (1 << ClangParser.Unsigned) | (1 << ClangParser.Void))) !== 0))) {\n                            this._errHandler.recoverInline(this);\n                        }\n                        else {\n                            if (this._input.LA(1) === Token_1.Token.EOF) {\n                                this.matchedEOF = true;\n                            }\n                            this._errHandler.reportMatch(this);\n                            this.consume();\n                        }\n                    }\n                    break;\n                case ClangParser.Struct:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 350;\n                        this.structSpecifier();\n                    }\n                    break;\n                case ClangParser.Identifier:\n                    this.enterOuterAlt(_localctx, 3);\n                    {\n                        this.state = 351;\n                        this.typedefName();\n                    }\n                    break;\n                default:\n                    throw new NoViableAltException_1.NoViableAltException(this);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    structSpecifier() {\n        let _localctx = new StructSpecifierContext(this._ctx, this.state);\n        this.enterRule(_localctx, 58, ClangParser.RULE_structSpecifier);\n        let _la;\n        try {\n            this.state = 364;\n            this._errHandler.sync(this);\n            switch (this.interpreter.adaptivePredict(this._input, 31, this._ctx)) {\n                case 1:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 354;\n                        this.match(ClangParser.Struct);\n                        this.state = 356;\n                        this._errHandler.sync(this);\n                        _la = this._input.LA(1);\n                        if (_la === ClangParser.Identifier) {\n                            {\n                                this.state = 355;\n                                this.match(ClangParser.Identifier);\n                            }\n                        }\n                        this.state = 358;\n                        this.match(ClangParser.LeftBrace);\n                        this.state = 359;\n                        this.structDeclarationList();\n                        this.state = 360;\n                        this.match(ClangParser.RightBrace);\n                    }\n                    break;\n                case 2:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 362;\n                        this.match(ClangParser.Struct);\n                        this.state = 363;\n                        this.match(ClangParser.Identifier);\n                    }\n                    break;\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    structDeclarationList() {\n        let _localctx = new StructDeclarationListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 60, ClangParser.RULE_structDeclarationList);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 367;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                do {\n                    {\n                        {\n                            this.state = 366;\n                            this.structDeclaration();\n                        }\n                    }\n                    this.state = 369;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                } while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.Char) | (1 << ClangParser.Const) | (1 << ClangParser.Float) | (1 << ClangParser.Int) | (1 << ClangParser.Signed) | (1 << ClangParser.Struct) | (1 << ClangParser.Unsigned) | (1 << ClangParser.Void))) !== 0) || _la === ClangParser.Identifier);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    structDeclaration() {\n        let _localctx = new StructDeclarationContext(this._ctx, this.state);\n        this.enterRule(_localctx, 62, ClangParser.RULE_structDeclaration);\n        try {\n            this.state = 378;\n            this._errHandler.sync(this);\n            switch (this.interpreter.adaptivePredict(this._input, 33, this._ctx)) {\n                case 1:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 371;\n                        this.specifierQualifierList();\n                        this.state = 372;\n                        this.structDeclaratorList();\n                        this.state = 373;\n                        this.match(ClangParser.Semi);\n                    }\n                    break;\n                case 2:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 375;\n                        this.specifierQualifierList();\n                        this.state = 376;\n                        this.match(ClangParser.Semi);\n                    }\n                    break;\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    specifierQualifierList() {\n        let _localctx = new SpecifierQualifierListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 64, ClangParser.RULE_specifierQualifierList);\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 382;\n                this._errHandler.sync(this);\n                switch (this._input.LA(1)) {\n                    case ClangParser.Char:\n                    case ClangParser.Float:\n                    case ClangParser.Int:\n                    case ClangParser.Signed:\n                    case ClangParser.Struct:\n                    case ClangParser.Unsigned:\n                    case ClangParser.Void:\n                    case ClangParser.Identifier:\n                        {\n                            this.state = 380;\n                            this.typeSpecifier();\n                        }\n                        break;\n                    case ClangParser.Const:\n                        {\n                            this.state = 381;\n                            this.typeQualifier();\n                        }\n                        break;\n                    default:\n                        throw new NoViableAltException_1.NoViableAltException(this);\n                }\n                this.state = 385;\n                this._errHandler.sync(this);\n                switch (this.interpreter.adaptivePredict(this._input, 35, this._ctx)) {\n                    case 1:\n                        {\n                            this.state = 384;\n                            this.specifierQualifierList();\n                        }\n                        break;\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    structDeclaratorList() {\n        let _localctx = new StructDeclaratorListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 66, ClangParser.RULE_structDeclaratorList);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 387;\n                this.structDeclarator();\n                this.state = 392;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.Comma) {\n                    {\n                        {\n                            this.state = 388;\n                            this.match(ClangParser.Comma);\n                            this.state = 389;\n                            this.structDeclarator();\n                        }\n                    }\n                    this.state = 394;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    structDeclarator() {\n        let _localctx = new StructDeclaratorContext(this._ctx, this.state);\n        this.enterRule(_localctx, 68, ClangParser.RULE_structDeclarator);\n        let _la;\n        try {\n            this.state = 401;\n            this._errHandler.sync(this);\n            switch (this.interpreter.adaptivePredict(this._input, 38, this._ctx)) {\n                case 1:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 395;\n                        this.declarator();\n                    }\n                    break;\n                case 2:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 397;\n                        this._errHandler.sync(this);\n                        _la = this._input.LA(1);\n                        if (_la === ClangParser.LeftParen || ((((_la - 36)) & ~0x1F) === 0 && ((1 << (_la - 36)) & ((1 << (ClangParser.Star - 36)) | (1 << (ClangParser.Caret - 36)) | (1 << (ClangParser.Identifier - 36)))) !== 0)) {\n                            {\n                                this.state = 396;\n                                this.declarator();\n                            }\n                        }\n                        this.state = 399;\n                        this.match(ClangParser.Colon);\n                        this.state = 400;\n                        this.constantExpression();\n                    }\n                    break;\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    typeQualifier() {\n        let _localctx = new TypeQualifierContext(this._ctx, this.state);\n        this.enterRule(_localctx, 70, ClangParser.RULE_typeQualifier);\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 403;\n                this.match(ClangParser.Const);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    functionSpecifier() {\n        let _localctx = new FunctionSpecifierContext(this._ctx, this.state);\n        this.enterRule(_localctx, 72, ClangParser.RULE_functionSpecifier);\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                {\n                    this.state = 405;\n                    this.match(ClangParser.T__1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    declarator() {\n        let _localctx = new DeclaratorContext(this._ctx, this.state);\n        this.enterRule(_localctx, 74, ClangParser.RULE_declarator);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 408;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === ClangParser.Star || _la === ClangParser.Caret) {\n                    {\n                        this.state = 407;\n                        this.pointer();\n                    }\n                }\n                this.state = 410;\n                this.directDeclarator(0);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    directDeclarator(_p) {\n        if (_p === undefined) {\n            _p = 0;\n        }\n        let _parentctx = this._ctx;\n        let _parentState = this.state;\n        let _localctx = new DirectDeclaratorContext(this._ctx, _parentState);\n        let _prevctx = _localctx;\n        let _startState = 76;\n        this.enterRecursionRule(_localctx, 76, ClangParser.RULE_directDeclarator, _p);\n        let _la;\n        try {\n            let _alt;\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 421;\n                this._errHandler.sync(this);\n                switch (this.interpreter.adaptivePredict(this._input, 40, this._ctx)) {\n                    case 1:\n                        {\n                            this.state = 413;\n                            this.match(ClangParser.Identifier);\n                        }\n                        break;\n                    case 2:\n                        {\n                            this.state = 414;\n                            this.match(ClangParser.LeftParen);\n                            this.state = 415;\n                            this.declarator();\n                            this.state = 416;\n                            this.match(ClangParser.RightParen);\n                        }\n                        break;\n                    case 3:\n                        {\n                            this.state = 418;\n                            this.match(ClangParser.Identifier);\n                            this.state = 419;\n                            this.match(ClangParser.Colon);\n                            this.state = 420;\n                            this.match(ClangParser.DigitSequence);\n                        }\n                        break;\n                }\n                this._ctx._stop = this._input.tryLT(-1);\n                this.state = 452;\n                this._errHandler.sync(this);\n                _alt = this.interpreter.adaptivePredict(this._input, 46, this._ctx);\n                while (_alt !== 2 && _alt !== ATN_1.ATN.INVALID_ALT_NUMBER) {\n                    if (_alt === 1) {\n                        if (this._parseListeners != null) {\n                            this.triggerExitRuleEvent();\n                        }\n                        _prevctx = _localctx;\n                        {\n                            this.state = 450;\n                            this._errHandler.sync(this);\n                            switch (this.interpreter.adaptivePredict(this._input, 45, this._ctx)) {\n                                case 1:\n                                    {\n                                        _localctx = new DirectDeclaratorContext(_parentctx, _parentState);\n                                        this.pushNewRecursionContext(_localctx, _startState, ClangParser.RULE_directDeclarator);\n                                        this.state = 423;\n                                        if (!(this.precpred(this._ctx, 5))) {\n                                            throw this.createFailedPredicateException(\"this.precpred(this._ctx, 5)\");\n                                        }\n                                        this.state = 424;\n                                        this.match(ClangParser.LeftBracket);\n                                        this.state = 426;\n                                        this._errHandler.sync(this);\n                                        _la = this._input.LA(1);\n                                        if (_la === ClangParser.Const) {\n                                            {\n                                                this.state = 425;\n                                                this.typeQualifierList();\n                                            }\n                                        }\n                                        this.state = 429;\n                                        this._errHandler.sync(this);\n                                        _la = this._input.LA(1);\n                                        if (_la === ClangParser.T__0 || _la === ClangParser.LeftParen || ((((_la - 32)) & ~0x1F) === 0 && ((1 << (_la - 32)) & ((1 << (ClangParser.Plus - 32)) | (1 << (ClangParser.PlusPlus - 32)) | (1 << (ClangParser.Minus - 32)) | (1 << (ClangParser.MinusMinus - 32)) | (1 << (ClangParser.Star - 32)) | (1 << (ClangParser.And - 32)) | (1 << (ClangParser.Not - 32)))) !== 0) || ((((_la - 65)) & ~0x1F) === 0 && ((1 << (_la - 65)) & ((1 << (ClangParser.Identifier - 65)) | (1 << (ClangParser.Constant - 65)) | (1 << (ClangParser.DigitSequence - 65)) | (1 << (ClangParser.StringLiteral - 65)))) !== 0)) {\n                                            {\n                                                this.state = 428;\n                                                this.assignmentExpression();\n                                            }\n                                        }\n                                        this.state = 431;\n                                        this.match(ClangParser.RightBracket);\n                                    }\n                                    break;\n                                case 2:\n                                    {\n                                        _localctx = new DirectDeclaratorContext(_parentctx, _parentState);\n                                        this.pushNewRecursionContext(_localctx, _startState, ClangParser.RULE_directDeclarator);\n                                        this.state = 432;\n                                        if (!(this.precpred(this._ctx, 4))) {\n                                            throw this.createFailedPredicateException(\"this.precpred(this._ctx, 4)\");\n                                        }\n                                        this.state = 433;\n                                        this.match(ClangParser.LeftBracket);\n                                        this.state = 435;\n                                        this._errHandler.sync(this);\n                                        _la = this._input.LA(1);\n                                        if (_la === ClangParser.Const) {\n                                            {\n                                                this.state = 434;\n                                                this.typeQualifierList();\n                                            }\n                                        }\n                                        this.state = 437;\n                                        this.match(ClangParser.Star);\n                                        this.state = 438;\n                                        this.match(ClangParser.RightBracket);\n                                    }\n                                    break;\n                                case 3:\n                                    {\n                                        _localctx = new DirectDeclaratorContext(_parentctx, _parentState);\n                                        this.pushNewRecursionContext(_localctx, _startState, ClangParser.RULE_directDeclarator);\n                                        this.state = 439;\n                                        if (!(this.precpred(this._ctx, 3))) {\n                                            throw this.createFailedPredicateException(\"this.precpred(this._ctx, 3)\");\n                                        }\n                                        this.state = 440;\n                                        this.match(ClangParser.LeftParen);\n                                        this.state = 441;\n                                        this.parameterTypeList();\n                                        this.state = 442;\n                                        this.match(ClangParser.RightParen);\n                                    }\n                                    break;\n                                case 4:\n                                    {\n                                        _localctx = new DirectDeclaratorContext(_parentctx, _parentState);\n                                        this.pushNewRecursionContext(_localctx, _startState, ClangParser.RULE_directDeclarator);\n                                        this.state = 444;\n                                        if (!(this.precpred(this._ctx, 2))) {\n                                            throw this.createFailedPredicateException(\"this.precpred(this._ctx, 2)\");\n                                        }\n                                        this.state = 445;\n                                        this.match(ClangParser.LeftParen);\n                                        this.state = 447;\n                                        this._errHandler.sync(this);\n                                        _la = this._input.LA(1);\n                                        if (_la === ClangParser.Identifier) {\n                                            {\n                                                this.state = 446;\n                                                this.identifierList();\n                                            }\n                                        }\n                                        this.state = 449;\n                                        this.match(ClangParser.RightParen);\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                    this.state = 454;\n                    this._errHandler.sync(this);\n                    _alt = this.interpreter.adaptivePredict(this._input, 46, this._ctx);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.unrollRecursionContexts(_parentctx);\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    nestedParenthesesBlock() {\n        let _localctx = new NestedParenthesesBlockContext(this._ctx, this.state);\n        this.enterRule(_localctx, 78, ClangParser.RULE_nestedParenthesesBlock);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 462;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.T__0) | (1 << ClangParser.T__1) | (1 << ClangParser.Break) | (1 << ClangParser.Char) | (1 << ClangParser.Continue) | (1 << ClangParser.Const) | (1 << ClangParser.Do) | (1 << ClangParser.Else) | (1 << ClangParser.Float) | (1 << ClangParser.For) | (1 << ClangParser.If) | (1 << ClangParser.Int) | (1 << ClangParser.Long) | (1 << ClangParser.Return) | (1 << ClangParser.Signed) | (1 << ClangParser.Struct) | (1 << ClangParser.Unsigned) | (1 << ClangParser.Void) | (1 << ClangParser.While) | (1 << ClangParser.LeftParen) | (1 << ClangParser.LeftBracket) | (1 << ClangParser.RightBracket) | (1 << ClangParser.LeftBrace) | (1 << ClangParser.RightBrace) | (1 << ClangParser.Less) | (1 << ClangParser.LessEqual) | (1 << ClangParser.Greater) | (1 << ClangParser.GreaterEqual) | (1 << ClangParser.LeftShift) | (1 << ClangParser.RightShift))) !== 0) || ((((_la - 32)) & ~0x1F) === 0 && ((1 << (_la - 32)) & ((1 << (ClangParser.Plus - 32)) | (1 << (ClangParser.PlusPlus - 32)) | (1 << (ClangParser.Minus - 32)) | (1 << (ClangParser.MinusMinus - 32)) | (1 << (ClangParser.Star - 32)) | (1 << (ClangParser.Div - 32)) | (1 << (ClangParser.Mod - 32)) | (1 << (ClangParser.And - 32)) | (1 << (ClangParser.Or - 32)) | (1 << (ClangParser.AndAnd - 32)) | (1 << (ClangParser.OrOr - 32)) | (1 << (ClangParser.Caret - 32)) | (1 << (ClangParser.Not - 32)) | (1 << (ClangParser.Tilde - 32)) | (1 << (ClangParser.Question - 32)) | (1 << (ClangParser.Colon - 32)) | (1 << (ClangParser.Semi - 32)) | (1 << (ClangParser.Comma - 32)) | (1 << (ClangParser.Assign - 32)) | (1 << (ClangParser.StarAssign - 32)) | (1 << (ClangParser.DivAssign - 32)) | (1 << (ClangParser.ModAssign - 32)) | (1 << (ClangParser.PlusAssign - 32)) | (1 << (ClangParser.MinusAssign - 32)) | (1 << (ClangParser.LeftShiftAssign - 32)) | (1 << (ClangParser.RightShiftAssign - 32)) | (1 << (ClangParser.AndAssign - 32)) | (1 << (ClangParser.XorAssign - 32)) | (1 << (ClangParser.OrAssign - 32)) | (1 << (ClangParser.Equal - 32)) | (1 << (ClangParser.NotEqual - 32)) | (1 << (ClangParser.Arrow - 32)))) !== 0) || ((((_la - 64)) & ~0x1F) === 0 && ((1 << (_la - 64)) & ((1 << (ClangParser.Dot - 64)) | (1 << (ClangParser.Identifier - 64)) | (1 << (ClangParser.Constant - 64)) | (1 << (ClangParser.DigitSequence - 64)) | (1 << (ClangParser.StringLiteral - 64)) | (1 << (ClangParser.Whitespace - 64)) | (1 << (ClangParser.Newline - 64)) | (1 << (ClangParser.BlockComment - 64)) | (1 << (ClangParser.LineComment - 64)))) !== 0)) {\n                    {\n                        this.state = 460;\n                        this._errHandler.sync(this);\n                        switch (this._input.LA(1)) {\n                            case ClangParser.T__0:\n                            case ClangParser.T__1:\n                            case ClangParser.Break:\n                            case ClangParser.Char:\n                            case ClangParser.Continue:\n                            case ClangParser.Const:\n                            case ClangParser.Do:\n                            case ClangParser.Else:\n                            case ClangParser.Float:\n                            case ClangParser.For:\n                            case ClangParser.If:\n                            case ClangParser.Int:\n                            case ClangParser.Long:\n                            case ClangParser.Return:\n                            case ClangParser.Signed:\n                            case ClangParser.Struct:\n                            case ClangParser.Unsigned:\n                            case ClangParser.Void:\n                            case ClangParser.While:\n                            case ClangParser.LeftBracket:\n                            case ClangParser.RightBracket:\n                            case ClangParser.LeftBrace:\n                            case ClangParser.RightBrace:\n                            case ClangParser.Less:\n                            case ClangParser.LessEqual:\n                            case ClangParser.Greater:\n                            case ClangParser.GreaterEqual:\n                            case ClangParser.LeftShift:\n                            case ClangParser.RightShift:\n                            case ClangParser.Plus:\n                            case ClangParser.PlusPlus:\n                            case ClangParser.Minus:\n                            case ClangParser.MinusMinus:\n                            case ClangParser.Star:\n                            case ClangParser.Div:\n                            case ClangParser.Mod:\n                            case ClangParser.And:\n                            case ClangParser.Or:\n                            case ClangParser.AndAnd:\n                            case ClangParser.OrOr:\n                            case ClangParser.Caret:\n                            case ClangParser.Not:\n                            case ClangParser.Tilde:\n                            case ClangParser.Question:\n                            case ClangParser.Colon:\n                            case ClangParser.Semi:\n                            case ClangParser.Comma:\n                            case ClangParser.Assign:\n                            case ClangParser.StarAssign:\n                            case ClangParser.DivAssign:\n                            case ClangParser.ModAssign:\n                            case ClangParser.PlusAssign:\n                            case ClangParser.MinusAssign:\n                            case ClangParser.LeftShiftAssign:\n                            case ClangParser.RightShiftAssign:\n                            case ClangParser.AndAssign:\n                            case ClangParser.XorAssign:\n                            case ClangParser.OrAssign:\n                            case ClangParser.Equal:\n                            case ClangParser.NotEqual:\n                            case ClangParser.Arrow:\n                            case ClangParser.Dot:\n                            case ClangParser.Identifier:\n                            case ClangParser.Constant:\n                            case ClangParser.DigitSequence:\n                            case ClangParser.StringLiteral:\n                            case ClangParser.Whitespace:\n                            case ClangParser.Newline:\n                            case ClangParser.BlockComment:\n                            case ClangParser.LineComment:\n                                {\n                                    this.state = 455;\n                                    _la = this._input.LA(1);\n                                    if (_la <= 0 || (_la === ClangParser.LeftParen || _la === ClangParser.RightParen)) {\n                                        this._errHandler.recoverInline(this);\n                                    }\n                                    else {\n                                        if (this._input.LA(1) === Token_1.Token.EOF) {\n                                            this.matchedEOF = true;\n                                        }\n                                        this._errHandler.reportMatch(this);\n                                        this.consume();\n                                    }\n                                }\n                                break;\n                            case ClangParser.LeftParen:\n                                {\n                                    this.state = 456;\n                                    this.match(ClangParser.LeftParen);\n                                    this.state = 457;\n                                    this.nestedParenthesesBlock();\n                                    this.state = 458;\n                                    this.match(ClangParser.RightParen);\n                                }\n                                break;\n                            default:\n                                throw new NoViableAltException_1.NoViableAltException(this);\n                        }\n                    }\n                    this.state = 464;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    pointer() {\n        let _localctx = new PointerContext(this._ctx, this.state);\n        this.enterRule(_localctx, 80, ClangParser.RULE_pointer);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 469;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                do {\n                    {\n                        {\n                            this.state = 465;\n                            _la = this._input.LA(1);\n                            if (!(_la === ClangParser.Star || _la === ClangParser.Caret)) {\n                                this._errHandler.recoverInline(this);\n                            }\n                            else {\n                                if (this._input.LA(1) === Token_1.Token.EOF) {\n                                    this.matchedEOF = true;\n                                }\n                                this._errHandler.reportMatch(this);\n                                this.consume();\n                            }\n                            this.state = 467;\n                            this._errHandler.sync(this);\n                            _la = this._input.LA(1);\n                            if (_la === ClangParser.Const) {\n                                {\n                                    this.state = 466;\n                                    this.typeQualifierList();\n                                }\n                            }\n                        }\n                    }\n                    this.state = 471;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                } while (_la === ClangParser.Star || _la === ClangParser.Caret);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    typeQualifierList() {\n        let _localctx = new TypeQualifierListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 82, ClangParser.RULE_typeQualifierList);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 474;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                do {\n                    {\n                        {\n                            this.state = 473;\n                            this.typeQualifier();\n                        }\n                    }\n                    this.state = 476;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                } while (_la === ClangParser.Const);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    parameterTypeList() {\n        let _localctx = new ParameterTypeListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 84, ClangParser.RULE_parameterTypeList);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 478;\n                this.parameterList();\n                this.state = 480;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === ClangParser.Comma) {\n                    {\n                        this.state = 479;\n                        this.match(ClangParser.Comma);\n                    }\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    parameterList() {\n        let _localctx = new ParameterListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 86, ClangParser.RULE_parameterList);\n        try {\n            let _alt;\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 482;\n                this.parameterDeclaration();\n                this.state = 487;\n                this._errHandler.sync(this);\n                _alt = this.interpreter.adaptivePredict(this._input, 53, this._ctx);\n                while (_alt !== 2 && _alt !== ATN_1.ATN.INVALID_ALT_NUMBER) {\n                    if (_alt === 1) {\n                        {\n                            {\n                                this.state = 483;\n                                this.match(ClangParser.Comma);\n                                this.state = 484;\n                                this.parameterDeclaration();\n                            }\n                        }\n                    }\n                    this.state = 489;\n                    this._errHandler.sync(this);\n                    _alt = this.interpreter.adaptivePredict(this._input, 53, this._ctx);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    parameterDeclaration() {\n        let _localctx = new ParameterDeclarationContext(this._ctx, this.state);\n        this.enterRule(_localctx, 88, ClangParser.RULE_parameterDeclaration);\n        let _la;\n        try {\n            this.state = 497;\n            this._errHandler.sync(this);\n            switch (this.interpreter.adaptivePredict(this._input, 55, this._ctx)) {\n                case 1:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 490;\n                        this.declarationSpecifiers();\n                        this.state = 491;\n                        this.declarator();\n                    }\n                    break;\n                case 2:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 493;\n                        this.declarationSpecifiers2();\n                        this.state = 495;\n                        this._errHandler.sync(this);\n                        _la = this._input.LA(1);\n                        if (((((_la - 20)) & ~0x1F) === 0 && ((1 << (_la - 20)) & ((1 << (ClangParser.LeftParen - 20)) | (1 << (ClangParser.LeftBracket - 20)) | (1 << (ClangParser.Star - 20)) | (1 << (ClangParser.Caret - 20)))) !== 0)) {\n                            {\n                                this.state = 494;\n                                this.abstractDeclarator();\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    identifierList() {\n        let _localctx = new IdentifierListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 90, ClangParser.RULE_identifierList);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 499;\n                this.match(ClangParser.Identifier);\n                this.state = 504;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.Comma) {\n                    {\n                        {\n                            this.state = 500;\n                            this.match(ClangParser.Comma);\n                            this.state = 501;\n                            this.match(ClangParser.Identifier);\n                        }\n                    }\n                    this.state = 506;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    typeName() {\n        let _localctx = new TypeNameContext(this._ctx, this.state);\n        this.enterRule(_localctx, 92, ClangParser.RULE_typeName);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 507;\n                this.specifierQualifierList();\n                this.state = 509;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (((((_la - 20)) & ~0x1F) === 0 && ((1 << (_la - 20)) & ((1 << (ClangParser.LeftParen - 20)) | (1 << (ClangParser.LeftBracket - 20)) | (1 << (ClangParser.Star - 20)) | (1 << (ClangParser.Caret - 20)))) !== 0)) {\n                    {\n                        this.state = 508;\n                        this.abstractDeclarator();\n                    }\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    abstractDeclarator() {\n        let _localctx = new AbstractDeclaratorContext(this._ctx, this.state);\n        this.enterRule(_localctx, 94, ClangParser.RULE_abstractDeclarator);\n        let _la;\n        try {\n            this.state = 516;\n            this._errHandler.sync(this);\n            switch (this.interpreter.adaptivePredict(this._input, 59, this._ctx)) {\n                case 1:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 511;\n                        this.pointer();\n                    }\n                    break;\n                case 2:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 513;\n                        this._errHandler.sync(this);\n                        _la = this._input.LA(1);\n                        if (_la === ClangParser.Star || _la === ClangParser.Caret) {\n                            {\n                                this.state = 512;\n                                this.pointer();\n                            }\n                        }\n                        this.state = 515;\n                        this.directAbstractDeclarator(0);\n                    }\n                    break;\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    directAbstractDeclarator(_p) {\n        if (_p === undefined) {\n            _p = 0;\n        }\n        let _parentctx = this._ctx;\n        let _parentState = this.state;\n        let _localctx = new DirectAbstractDeclaratorContext(this._ctx, _parentState);\n        let _prevctx = _localctx;\n        let _startState = 96;\n        this.enterRecursionRule(_localctx, 96, ClangParser.RULE_directAbstractDeclarator, _p);\n        let _la;\n        try {\n            let _alt;\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 539;\n                this._errHandler.sync(this);\n                switch (this.interpreter.adaptivePredict(this._input, 63, this._ctx)) {\n                    case 1:\n                        {\n                            this.state = 519;\n                            this.match(ClangParser.LeftParen);\n                            this.state = 520;\n                            this.abstractDeclarator();\n                            this.state = 521;\n                            this.match(ClangParser.RightParen);\n                        }\n                        break;\n                    case 2:\n                        {\n                            this.state = 523;\n                            this.match(ClangParser.LeftBracket);\n                            this.state = 525;\n                            this._errHandler.sync(this);\n                            _la = this._input.LA(1);\n                            if (_la === ClangParser.Const) {\n                                {\n                                    this.state = 524;\n                                    this.typeQualifierList();\n                                }\n                            }\n                            this.state = 528;\n                            this._errHandler.sync(this);\n                            _la = this._input.LA(1);\n                            if (_la === ClangParser.T__0 || _la === ClangParser.LeftParen || ((((_la - 32)) & ~0x1F) === 0 && ((1 << (_la - 32)) & ((1 << (ClangParser.Plus - 32)) | (1 << (ClangParser.PlusPlus - 32)) | (1 << (ClangParser.Minus - 32)) | (1 << (ClangParser.MinusMinus - 32)) | (1 << (ClangParser.Star - 32)) | (1 << (ClangParser.And - 32)) | (1 << (ClangParser.Not - 32)))) !== 0) || ((((_la - 65)) & ~0x1F) === 0 && ((1 << (_la - 65)) & ((1 << (ClangParser.Identifier - 65)) | (1 << (ClangParser.Constant - 65)) | (1 << (ClangParser.DigitSequence - 65)) | (1 << (ClangParser.StringLiteral - 65)))) !== 0)) {\n                                {\n                                    this.state = 527;\n                                    this.assignmentExpression();\n                                }\n                            }\n                            this.state = 530;\n                            this.match(ClangParser.RightBracket);\n                        }\n                        break;\n                    case 3:\n                        {\n                            this.state = 531;\n                            this.match(ClangParser.LeftBracket);\n                            this.state = 532;\n                            this.match(ClangParser.Star);\n                            this.state = 533;\n                            this.match(ClangParser.RightBracket);\n                        }\n                        break;\n                    case 4:\n                        {\n                            this.state = 534;\n                            this.match(ClangParser.LeftParen);\n                            this.state = 536;\n                            this._errHandler.sync(this);\n                            _la = this._input.LA(1);\n                            if ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.T__1) | (1 << ClangParser.Char) | (1 << ClangParser.Const) | (1 << ClangParser.Float) | (1 << ClangParser.Int) | (1 << ClangParser.Signed) | (1 << ClangParser.Struct) | (1 << ClangParser.Unsigned) | (1 << ClangParser.Void))) !== 0) || _la === ClangParser.Identifier) {\n                                {\n                                    this.state = 535;\n                                    this.parameterTypeList();\n                                }\n                            }\n                            this.state = 538;\n                            this.match(ClangParser.RightParen);\n                        }\n                        break;\n                }\n                this._ctx._stop = this._input.tryLT(-1);\n                this.state = 562;\n                this._errHandler.sync(this);\n                _alt = this.interpreter.adaptivePredict(this._input, 68, this._ctx);\n                while (_alt !== 2 && _alt !== ATN_1.ATN.INVALID_ALT_NUMBER) {\n                    if (_alt === 1) {\n                        if (this._parseListeners != null) {\n                            this.triggerExitRuleEvent();\n                        }\n                        _prevctx = _localctx;\n                        {\n                            this.state = 560;\n                            this._errHandler.sync(this);\n                            switch (this.interpreter.adaptivePredict(this._input, 67, this._ctx)) {\n                                case 1:\n                                    {\n                                        _localctx = new DirectAbstractDeclaratorContext(_parentctx, _parentState);\n                                        this.pushNewRecursionContext(_localctx, _startState, ClangParser.RULE_directAbstractDeclarator);\n                                        this.state = 541;\n                                        if (!(this.precpred(this._ctx, 3))) {\n                                            throw this.createFailedPredicateException(\"this.precpred(this._ctx, 3)\");\n                                        }\n                                        this.state = 542;\n                                        this.match(ClangParser.LeftBracket);\n                                        this.state = 544;\n                                        this._errHandler.sync(this);\n                                        _la = this._input.LA(1);\n                                        if (_la === ClangParser.Const) {\n                                            {\n                                                this.state = 543;\n                                                this.typeQualifierList();\n                                            }\n                                        }\n                                        this.state = 547;\n                                        this._errHandler.sync(this);\n                                        _la = this._input.LA(1);\n                                        if (_la === ClangParser.T__0 || _la === ClangParser.LeftParen || ((((_la - 32)) & ~0x1F) === 0 && ((1 << (_la - 32)) & ((1 << (ClangParser.Plus - 32)) | (1 << (ClangParser.PlusPlus - 32)) | (1 << (ClangParser.Minus - 32)) | (1 << (ClangParser.MinusMinus - 32)) | (1 << (ClangParser.Star - 32)) | (1 << (ClangParser.And - 32)) | (1 << (ClangParser.Not - 32)))) !== 0) || ((((_la - 65)) & ~0x1F) === 0 && ((1 << (_la - 65)) & ((1 << (ClangParser.Identifier - 65)) | (1 << (ClangParser.Constant - 65)) | (1 << (ClangParser.DigitSequence - 65)) | (1 << (ClangParser.StringLiteral - 65)))) !== 0)) {\n                                            {\n                                                this.state = 546;\n                                                this.assignmentExpression();\n                                            }\n                                        }\n                                        this.state = 549;\n                                        this.match(ClangParser.RightBracket);\n                                    }\n                                    break;\n                                case 2:\n                                    {\n                                        _localctx = new DirectAbstractDeclaratorContext(_parentctx, _parentState);\n                                        this.pushNewRecursionContext(_localctx, _startState, ClangParser.RULE_directAbstractDeclarator);\n                                        this.state = 550;\n                                        if (!(this.precpred(this._ctx, 2))) {\n                                            throw this.createFailedPredicateException(\"this.precpred(this._ctx, 2)\");\n                                        }\n                                        this.state = 551;\n                                        this.match(ClangParser.LeftBracket);\n                                        this.state = 552;\n                                        this.match(ClangParser.Star);\n                                        this.state = 553;\n                                        this.match(ClangParser.RightBracket);\n                                    }\n                                    break;\n                                case 3:\n                                    {\n                                        _localctx = new DirectAbstractDeclaratorContext(_parentctx, _parentState);\n                                        this.pushNewRecursionContext(_localctx, _startState, ClangParser.RULE_directAbstractDeclarator);\n                                        this.state = 554;\n                                        if (!(this.precpred(this._ctx, 1))) {\n                                            throw this.createFailedPredicateException(\"this.precpred(this._ctx, 1)\");\n                                        }\n                                        this.state = 555;\n                                        this.match(ClangParser.LeftParen);\n                                        this.state = 557;\n                                        this._errHandler.sync(this);\n                                        _la = this._input.LA(1);\n                                        if ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.T__1) | (1 << ClangParser.Char) | (1 << ClangParser.Const) | (1 << ClangParser.Float) | (1 << ClangParser.Int) | (1 << ClangParser.Signed) | (1 << ClangParser.Struct) | (1 << ClangParser.Unsigned) | (1 << ClangParser.Void))) !== 0) || _la === ClangParser.Identifier) {\n                                            {\n                                                this.state = 556;\n                                                this.parameterTypeList();\n                                            }\n                                        }\n                                        this.state = 559;\n                                        this.match(ClangParser.RightParen);\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                    this.state = 564;\n                    this._errHandler.sync(this);\n                    _alt = this.interpreter.adaptivePredict(this._input, 68, this._ctx);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.unrollRecursionContexts(_parentctx);\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    typedefName() {\n        let _localctx = new TypedefNameContext(this._ctx, this.state);\n        this.enterRule(_localctx, 98, ClangParser.RULE_typedefName);\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 565;\n                this.match(ClangParser.Identifier);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    initializer() {\n        let _localctx = new InitializerContext(this._ctx, this.state);\n        this.enterRule(_localctx, 100, ClangParser.RULE_initializer);\n        let _la;\n        try {\n            this.state = 575;\n            this._errHandler.sync(this);\n            switch (this._input.LA(1)) {\n                case ClangParser.T__0:\n                case ClangParser.LeftParen:\n                case ClangParser.Plus:\n                case ClangParser.PlusPlus:\n                case ClangParser.Minus:\n                case ClangParser.MinusMinus:\n                case ClangParser.Star:\n                case ClangParser.And:\n                case ClangParser.Not:\n                case ClangParser.Identifier:\n                case ClangParser.Constant:\n                case ClangParser.DigitSequence:\n                case ClangParser.StringLiteral:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 567;\n                        this.assignmentExpression();\n                    }\n                    break;\n                case ClangParser.LeftBrace:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 568;\n                        this.match(ClangParser.LeftBrace);\n                        this.state = 569;\n                        this.initializerList();\n                        this.state = 571;\n                        this._errHandler.sync(this);\n                        _la = this._input.LA(1);\n                        if (_la === ClangParser.Comma) {\n                            {\n                                this.state = 570;\n                                this.match(ClangParser.Comma);\n                            }\n                        }\n                        this.state = 573;\n                        this.match(ClangParser.RightBrace);\n                    }\n                    break;\n                default:\n                    throw new NoViableAltException_1.NoViableAltException(this);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    initializerList() {\n        let _localctx = new InitializerListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 102, ClangParser.RULE_initializerList);\n        let _la;\n        try {\n            let _alt;\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 578;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === ClangParser.LeftBracket || _la === ClangParser.Dot) {\n                    {\n                        this.state = 577;\n                        this.designation();\n                    }\n                }\n                this.state = 580;\n                this.initializer();\n                this.state = 588;\n                this._errHandler.sync(this);\n                _alt = this.interpreter.adaptivePredict(this._input, 73, this._ctx);\n                while (_alt !== 2 && _alt !== ATN_1.ATN.INVALID_ALT_NUMBER) {\n                    if (_alt === 1) {\n                        {\n                            {\n                                this.state = 581;\n                                this.match(ClangParser.Comma);\n                                this.state = 583;\n                                this._errHandler.sync(this);\n                                _la = this._input.LA(1);\n                                if (_la === ClangParser.LeftBracket || _la === ClangParser.Dot) {\n                                    {\n                                        this.state = 582;\n                                        this.designation();\n                                    }\n                                }\n                                this.state = 585;\n                                this.initializer();\n                            }\n                        }\n                    }\n                    this.state = 590;\n                    this._errHandler.sync(this);\n                    _alt = this.interpreter.adaptivePredict(this._input, 73, this._ctx);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    designation() {\n        let _localctx = new DesignationContext(this._ctx, this.state);\n        this.enterRule(_localctx, 104, ClangParser.RULE_designation);\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 591;\n                this.designatorList();\n                this.state = 592;\n                this.match(ClangParser.Assign);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    designatorList() {\n        let _localctx = new DesignatorListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 106, ClangParser.RULE_designatorList);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 595;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                do {\n                    {\n                        {\n                            this.state = 594;\n                            this.designator();\n                        }\n                    }\n                    this.state = 597;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                } while (_la === ClangParser.LeftBracket || _la === ClangParser.Dot);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    designator() {\n        let _localctx = new DesignatorContext(this._ctx, this.state);\n        this.enterRule(_localctx, 108, ClangParser.RULE_designator);\n        try {\n            this.state = 605;\n            this._errHandler.sync(this);\n            switch (this._input.LA(1)) {\n                case ClangParser.LeftBracket:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 599;\n                        this.match(ClangParser.LeftBracket);\n                        this.state = 600;\n                        this.constantExpression();\n                        this.state = 601;\n                        this.match(ClangParser.RightBracket);\n                    }\n                    break;\n                case ClangParser.Dot:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 603;\n                        this.match(ClangParser.Dot);\n                        this.state = 604;\n                        this.match(ClangParser.Identifier);\n                    }\n                    break;\n                default:\n                    throw new NoViableAltException_1.NoViableAltException(this);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    statement() {\n        let _localctx = new StatementContext(this._ctx, this.state);\n        this.enterRule(_localctx, 110, ClangParser.RULE_statement);\n        try {\n            this.state = 611;\n            this._errHandler.sync(this);\n            switch (this._input.LA(1)) {\n                case ClangParser.LeftBrace:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 607;\n                        this.compoundStatement();\n                    }\n                    break;\n                case ClangParser.T__0:\n                case ClangParser.LeftParen:\n                case ClangParser.Plus:\n                case ClangParser.PlusPlus:\n                case ClangParser.Minus:\n                case ClangParser.MinusMinus:\n                case ClangParser.Star:\n                case ClangParser.And:\n                case ClangParser.Not:\n                case ClangParser.Semi:\n                case ClangParser.Identifier:\n                case ClangParser.Constant:\n                case ClangParser.DigitSequence:\n                case ClangParser.StringLiteral:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 608;\n                        this.expressionStatement();\n                    }\n                    break;\n                case ClangParser.If:\n                    this.enterOuterAlt(_localctx, 3);\n                    {\n                        this.state = 609;\n                        this.selectionStatement();\n                    }\n                    break;\n                case ClangParser.Do:\n                case ClangParser.For:\n                case ClangParser.While:\n                    this.enterOuterAlt(_localctx, 4);\n                    {\n                        this.state = 610;\n                        this.iterationStatement();\n                    }\n                    break;\n                default:\n                    throw new NoViableAltException_1.NoViableAltException(this);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    compoundStatement() {\n        let _localctx = new CompoundStatementContext(this._ctx, this.state);\n        this.enterRule(_localctx, 112, ClangParser.RULE_compoundStatement);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 613;\n                this.match(ClangParser.LeftBrace);\n                this.state = 615;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.T__0) | (1 << ClangParser.T__1) | (1 << ClangParser.Char) | (1 << ClangParser.Const) | (1 << ClangParser.Do) | (1 << ClangParser.Float) | (1 << ClangParser.For) | (1 << ClangParser.If) | (1 << ClangParser.Int) | (1 << ClangParser.Signed) | (1 << ClangParser.Struct) | (1 << ClangParser.Unsigned) | (1 << ClangParser.Void) | (1 << ClangParser.While) | (1 << ClangParser.LeftParen) | (1 << ClangParser.LeftBrace))) !== 0) || ((((_la - 32)) & ~0x1F) === 0 && ((1 << (_la - 32)) & ((1 << (ClangParser.Plus - 32)) | (1 << (ClangParser.PlusPlus - 32)) | (1 << (ClangParser.Minus - 32)) | (1 << (ClangParser.MinusMinus - 32)) | (1 << (ClangParser.Star - 32)) | (1 << (ClangParser.And - 32)) | (1 << (ClangParser.Not - 32)) | (1 << (ClangParser.Semi - 32)))) !== 0) || ((((_la - 65)) & ~0x1F) === 0 && ((1 << (_la - 65)) & ((1 << (ClangParser.Identifier - 65)) | (1 << (ClangParser.Constant - 65)) | (1 << (ClangParser.DigitSequence - 65)) | (1 << (ClangParser.StringLiteral - 65)))) !== 0)) {\n                    {\n                        this.state = 614;\n                        this.blockItemList();\n                    }\n                }\n                this.state = 617;\n                this.match(ClangParser.RightBrace);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    blockItemList() {\n        let _localctx = new BlockItemListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 114, ClangParser.RULE_blockItemList);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 620;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                do {\n                    {\n                        {\n                            this.state = 619;\n                            this.blockItem();\n                        }\n                    }\n                    this.state = 622;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                } while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.T__0) | (1 << ClangParser.T__1) | (1 << ClangParser.Char) | (1 << ClangParser.Const) | (1 << ClangParser.Do) | (1 << ClangParser.Float) | (1 << ClangParser.For) | (1 << ClangParser.If) | (1 << ClangParser.Int) | (1 << ClangParser.Signed) | (1 << ClangParser.Struct) | (1 << ClangParser.Unsigned) | (1 << ClangParser.Void) | (1 << ClangParser.While) | (1 << ClangParser.LeftParen) | (1 << ClangParser.LeftBrace))) !== 0) || ((((_la - 32)) & ~0x1F) === 0 && ((1 << (_la - 32)) & ((1 << (ClangParser.Plus - 32)) | (1 << (ClangParser.PlusPlus - 32)) | (1 << (ClangParser.Minus - 32)) | (1 << (ClangParser.MinusMinus - 32)) | (1 << (ClangParser.Star - 32)) | (1 << (ClangParser.And - 32)) | (1 << (ClangParser.Not - 32)) | (1 << (ClangParser.Semi - 32)))) !== 0) || ((((_la - 65)) & ~0x1F) === 0 && ((1 << (_la - 65)) & ((1 << (ClangParser.Identifier - 65)) | (1 << (ClangParser.Constant - 65)) | (1 << (ClangParser.DigitSequence - 65)) | (1 << (ClangParser.StringLiteral - 65)))) !== 0));\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    blockItem() {\n        let _localctx = new BlockItemContext(this._ctx, this.state);\n        this.enterRule(_localctx, 116, ClangParser.RULE_blockItem);\n        try {\n            this.state = 626;\n            this._errHandler.sync(this);\n            switch (this.interpreter.adaptivePredict(this._input, 79, this._ctx)) {\n                case 1:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 624;\n                        this.statement();\n                    }\n                    break;\n                case 2:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 625;\n                        this.declaration();\n                    }\n                    break;\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    expressionStatement() {\n        let _localctx = new ExpressionStatementContext(this._ctx, this.state);\n        this.enterRule(_localctx, 118, ClangParser.RULE_expressionStatement);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 629;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === ClangParser.T__0 || _la === ClangParser.LeftParen || ((((_la - 32)) & ~0x1F) === 0 && ((1 << (_la - 32)) & ((1 << (ClangParser.Plus - 32)) | (1 << (ClangParser.PlusPlus - 32)) | (1 << (ClangParser.Minus - 32)) | (1 << (ClangParser.MinusMinus - 32)) | (1 << (ClangParser.Star - 32)) | (1 << (ClangParser.And - 32)) | (1 << (ClangParser.Not - 32)))) !== 0) || ((((_la - 65)) & ~0x1F) === 0 && ((1 << (_la - 65)) & ((1 << (ClangParser.Identifier - 65)) | (1 << (ClangParser.Constant - 65)) | (1 << (ClangParser.DigitSequence - 65)) | (1 << (ClangParser.StringLiteral - 65)))) !== 0)) {\n                    {\n                        this.state = 628;\n                        this.expression();\n                    }\n                }\n                this.state = 631;\n                this.match(ClangParser.Semi);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    selectionStatement() {\n        let _localctx = new SelectionStatementContext(this._ctx, this.state);\n        this.enterRule(_localctx, 120, ClangParser.RULE_selectionStatement);\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 633;\n                this.match(ClangParser.If);\n                this.state = 634;\n                this.match(ClangParser.LeftParen);\n                this.state = 635;\n                this.expression();\n                this.state = 636;\n                this.match(ClangParser.RightParen);\n                this.state = 637;\n                this.statement();\n                this.state = 640;\n                this._errHandler.sync(this);\n                switch (this.interpreter.adaptivePredict(this._input, 81, this._ctx)) {\n                    case 1:\n                        {\n                            this.state = 638;\n                            this.match(ClangParser.Else);\n                            this.state = 639;\n                            this.statement();\n                        }\n                        break;\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    iterationStatement() {\n        let _localctx = new IterationStatementContext(this._ctx, this.state);\n        this.enterRule(_localctx, 122, ClangParser.RULE_iterationStatement);\n        try {\n            this.state = 662;\n            this._errHandler.sync(this);\n            switch (this._input.LA(1)) {\n                case ClangParser.While:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 642;\n                        this.match(ClangParser.While);\n                        this.state = 643;\n                        this.match(ClangParser.LeftParen);\n                        this.state = 644;\n                        this.expression();\n                        this.state = 645;\n                        this.match(ClangParser.RightParen);\n                        this.state = 646;\n                        this.statement();\n                    }\n                    break;\n                case ClangParser.Do:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 648;\n                        this.match(ClangParser.Do);\n                        this.state = 649;\n                        this.statement();\n                        this.state = 650;\n                        this.match(ClangParser.While);\n                        this.state = 651;\n                        this.match(ClangParser.LeftParen);\n                        this.state = 652;\n                        this.expression();\n                        this.state = 653;\n                        this.match(ClangParser.RightParen);\n                        this.state = 654;\n                        this.match(ClangParser.Semi);\n                    }\n                    break;\n                case ClangParser.For:\n                    this.enterOuterAlt(_localctx, 3);\n                    {\n                        this.state = 656;\n                        this.match(ClangParser.For);\n                        this.state = 657;\n                        this.match(ClangParser.LeftParen);\n                        this.state = 658;\n                        this.forCondition();\n                        this.state = 659;\n                        this.match(ClangParser.RightParen);\n                        this.state = 660;\n                        this.statement();\n                    }\n                    break;\n                default:\n                    throw new NoViableAltException_1.NoViableAltException(this);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    forCondition() {\n        let _localctx = new ForConditionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 124, ClangParser.RULE_forCondition);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 668;\n                this._errHandler.sync(this);\n                switch (this.interpreter.adaptivePredict(this._input, 84, this._ctx)) {\n                    case 1:\n                        {\n                            this.state = 664;\n                            this.forDeclaration();\n                        }\n                        break;\n                    case 2:\n                        {\n                            this.state = 666;\n                            this._errHandler.sync(this);\n                            _la = this._input.LA(1);\n                            if (_la === ClangParser.T__0 || _la === ClangParser.LeftParen || ((((_la - 32)) & ~0x1F) === 0 && ((1 << (_la - 32)) & ((1 << (ClangParser.Plus - 32)) | (1 << (ClangParser.PlusPlus - 32)) | (1 << (ClangParser.Minus - 32)) | (1 << (ClangParser.MinusMinus - 32)) | (1 << (ClangParser.Star - 32)) | (1 << (ClangParser.And - 32)) | (1 << (ClangParser.Not - 32)))) !== 0) || ((((_la - 65)) & ~0x1F) === 0 && ((1 << (_la - 65)) & ((1 << (ClangParser.Identifier - 65)) | (1 << (ClangParser.Constant - 65)) | (1 << (ClangParser.DigitSequence - 65)) | (1 << (ClangParser.StringLiteral - 65)))) !== 0)) {\n                                {\n                                    this.state = 665;\n                                    this.expression();\n                                }\n                            }\n                        }\n                        break;\n                }\n                this.state = 670;\n                this.match(ClangParser.Semi);\n                this.state = 672;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === ClangParser.T__0 || _la === ClangParser.LeftParen || ((((_la - 32)) & ~0x1F) === 0 && ((1 << (_la - 32)) & ((1 << (ClangParser.Plus - 32)) | (1 << (ClangParser.PlusPlus - 32)) | (1 << (ClangParser.Minus - 32)) | (1 << (ClangParser.MinusMinus - 32)) | (1 << (ClangParser.Star - 32)) | (1 << (ClangParser.And - 32)) | (1 << (ClangParser.Not - 32)))) !== 0) || ((((_la - 65)) & ~0x1F) === 0 && ((1 << (_la - 65)) & ((1 << (ClangParser.Identifier - 65)) | (1 << (ClangParser.Constant - 65)) | (1 << (ClangParser.DigitSequence - 65)) | (1 << (ClangParser.StringLiteral - 65)))) !== 0)) {\n                    {\n                        this.state = 671;\n                        this.forExpression();\n                    }\n                }\n                this.state = 674;\n                this.match(ClangParser.Semi);\n                this.state = 676;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === ClangParser.T__0 || _la === ClangParser.LeftParen || ((((_la - 32)) & ~0x1F) === 0 && ((1 << (_la - 32)) & ((1 << (ClangParser.Plus - 32)) | (1 << (ClangParser.PlusPlus - 32)) | (1 << (ClangParser.Minus - 32)) | (1 << (ClangParser.MinusMinus - 32)) | (1 << (ClangParser.Star - 32)) | (1 << (ClangParser.And - 32)) | (1 << (ClangParser.Not - 32)))) !== 0) || ((((_la - 65)) & ~0x1F) === 0 && ((1 << (_la - 65)) & ((1 << (ClangParser.Identifier - 65)) | (1 << (ClangParser.Constant - 65)) | (1 << (ClangParser.DigitSequence - 65)) | (1 << (ClangParser.StringLiteral - 65)))) !== 0)) {\n                    {\n                        this.state = 675;\n                        this.forExpression();\n                    }\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    forDeclaration() {\n        let _localctx = new ForDeclarationContext(this._ctx, this.state);\n        this.enterRule(_localctx, 126, ClangParser.RULE_forDeclaration);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 678;\n                this.declarationSpecifiers();\n                this.state = 680;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if (_la === ClangParser.LeftParen || ((((_la - 36)) & ~0x1F) === 0 && ((1 << (_la - 36)) & ((1 << (ClangParser.Star - 36)) | (1 << (ClangParser.Caret - 36)) | (1 << (ClangParser.Identifier - 36)))) !== 0)) {\n                    {\n                        this.state = 679;\n                        this.initDeclaratorList();\n                    }\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    forExpression() {\n        let _localctx = new ForExpressionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 128, ClangParser.RULE_forExpression);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 682;\n                this.assignmentExpression();\n                this.state = 687;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                while (_la === ClangParser.Comma) {\n                    {\n                        {\n                            this.state = 683;\n                            this.match(ClangParser.Comma);\n                            this.state = 684;\n                            this.assignmentExpression();\n                        }\n                    }\n                    this.state = 689;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                }\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    compilationUnit() {\n        let _localctx = new CompilationUnitContext(this._ctx, this.state);\n        this.enterRule(_localctx, 130, ClangParser.RULE_compilationUnit);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 691;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.T__1) | (1 << ClangParser.Char) | (1 << ClangParser.Const) | (1 << ClangParser.Float) | (1 << ClangParser.Int) | (1 << ClangParser.Signed) | (1 << ClangParser.Struct) | (1 << ClangParser.Unsigned) | (1 << ClangParser.Void) | (1 << ClangParser.LeftParen))) !== 0) || ((((_la - 36)) & ~0x1F) === 0 && ((1 << (_la - 36)) & ((1 << (ClangParser.Star - 36)) | (1 << (ClangParser.Caret - 36)) | (1 << (ClangParser.Semi - 36)) | (1 << (ClangParser.Identifier - 36)))) !== 0)) {\n                    {\n                        this.state = 690;\n                        this.translationUnit();\n                    }\n                }\n                this.state = 693;\n                this.match(ClangParser.EOF);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    translationUnit() {\n        let _localctx = new TranslationUnitContext(this._ctx, this.state);\n        this.enterRule(_localctx, 132, ClangParser.RULE_translationUnit);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 696;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                do {\n                    {\n                        {\n                            this.state = 695;\n                            this.externalDeclaration();\n                        }\n                    }\n                    this.state = 698;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                } while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.T__1) | (1 << ClangParser.Char) | (1 << ClangParser.Const) | (1 << ClangParser.Float) | (1 << ClangParser.Int) | (1 << ClangParser.Signed) | (1 << ClangParser.Struct) | (1 << ClangParser.Unsigned) | (1 << ClangParser.Void) | (1 << ClangParser.LeftParen))) !== 0) || ((((_la - 36)) & ~0x1F) === 0 && ((1 << (_la - 36)) & ((1 << (ClangParser.Star - 36)) | (1 << (ClangParser.Caret - 36)) | (1 << (ClangParser.Semi - 36)) | (1 << (ClangParser.Identifier - 36)))) !== 0));\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    externalDeclaration() {\n        let _localctx = new ExternalDeclarationContext(this._ctx, this.state);\n        this.enterRule(_localctx, 134, ClangParser.RULE_externalDeclaration);\n        try {\n            this.state = 703;\n            this._errHandler.sync(this);\n            switch (this.interpreter.adaptivePredict(this._input, 91, this._ctx)) {\n                case 1:\n                    this.enterOuterAlt(_localctx, 1);\n                    {\n                        this.state = 700;\n                        this.functionDefinition();\n                    }\n                    break;\n                case 2:\n                    this.enterOuterAlt(_localctx, 2);\n                    {\n                        this.state = 701;\n                        this.declaration();\n                    }\n                    break;\n                case 3:\n                    this.enterOuterAlt(_localctx, 3);\n                    {\n                        this.state = 702;\n                        this.match(ClangParser.Semi);\n                    }\n                    break;\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    functionDefinition() {\n        let _localctx = new FunctionDefinitionContext(this._ctx, this.state);\n        this.enterRule(_localctx, 136, ClangParser.RULE_functionDefinition);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 706;\n                this._errHandler.sync(this);\n                switch (this.interpreter.adaptivePredict(this._input, 92, this._ctx)) {\n                    case 1:\n                        {\n                            this.state = 705;\n                            this.declarationSpecifiers();\n                        }\n                        break;\n                }\n                this.state = 708;\n                this.declarator();\n                this.state = 710;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                if ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.T__1) | (1 << ClangParser.Char) | (1 << ClangParser.Const) | (1 << ClangParser.Float) | (1 << ClangParser.Int) | (1 << ClangParser.Signed) | (1 << ClangParser.Struct) | (1 << ClangParser.Unsigned) | (1 << ClangParser.Void))) !== 0) || _la === ClangParser.Identifier) {\n                    {\n                        this.state = 709;\n                        this.declarationList();\n                    }\n                }\n                this.state = 712;\n                this.compoundStatement();\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    // @RuleVersion(0)\n    declarationList() {\n        let _localctx = new DeclarationListContext(this._ctx, this.state);\n        this.enterRule(_localctx, 138, ClangParser.RULE_declarationList);\n        let _la;\n        try {\n            this.enterOuterAlt(_localctx, 1);\n            {\n                this.state = 715;\n                this._errHandler.sync(this);\n                _la = this._input.LA(1);\n                do {\n                    {\n                        {\n                            this.state = 714;\n                            this.declaration();\n                        }\n                    }\n                    this.state = 717;\n                    this._errHandler.sync(this);\n                    _la = this._input.LA(1);\n                } while ((((_la) & ~0x1F) === 0 && ((1 << _la) & ((1 << ClangParser.T__1) | (1 << ClangParser.Char) | (1 << ClangParser.Const) | (1 << ClangParser.Float) | (1 << ClangParser.Int) | (1 << ClangParser.Signed) | (1 << ClangParser.Struct) | (1 << ClangParser.Unsigned) | (1 << ClangParser.Void))) !== 0) || _la === ClangParser.Identifier);\n            }\n        }\n        catch (re) {\n            if (re instanceof RecognitionException_1.RecognitionException) {\n                _localctx.exception = re;\n                this._errHandler.reportError(this, re);\n                this._errHandler.recover(this, re);\n            }\n            else {\n                throw re;\n            }\n        }\n        finally {\n            this.exitRule();\n        }\n        return _localctx;\n    }\n    sempred(_localctx, ruleIndex, predIndex) {\n        switch (ruleIndex) {\n            case 38:\n                return this.directDeclarator_sempred(_localctx, predIndex);\n            case 48:\n                return this.directAbstractDeclarator_sempred(_localctx, predIndex);\n        }\n        return true;\n    }\n    directDeclarator_sempred(_localctx, predIndex) {\n        switch (predIndex) {\n            case 0:\n                return this.precpred(this._ctx, 5);\n            case 1:\n                return this.precpred(this._ctx, 4);\n            case 2:\n                return this.precpred(this._ctx, 3);\n            case 3:\n                return this.precpred(this._ctx, 2);\n        }\n        return true;\n    }\n    directAbstractDeclarator_sempred(_localctx, predIndex) {\n        switch (predIndex) {\n            case 4:\n                return this.precpred(this._ctx, 3);\n            case 5:\n                return this.precpred(this._ctx, 2);\n            case 6:\n                return this.precpred(this._ctx, 1);\n        }\n        return true;\n    }\n    static get _ATN() {\n        if (!ClangParser.__ATN) {\n            ClangParser.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(ClangParser._serializedATN));\n        }\n        return ClangParser.__ATN;\n    }\n}\nexports.ClangParser = ClangParser;\nClangParser.T__0 = 1;\nClangParser.T__1 = 2;\nClangParser.Break = 3;\nClangParser.Char = 4;\nClangParser.Continue = 5;\nClangParser.Const = 6;\nClangParser.Do = 7;\nClangParser.Else = 8;\nClangParser.Float = 9;\nClangParser.For = 10;\nClangParser.If = 11;\nClangParser.Int = 12;\nClangParser.Long = 13;\nClangParser.Return = 14;\nClangParser.Signed = 15;\nClangParser.Struct = 16;\nClangParser.Unsigned = 17;\nClangParser.Void = 18;\nClangParser.While = 19;\nClangParser.LeftParen = 20;\nClangParser.RightParen = 21;\nClangParser.LeftBracket = 22;\nClangParser.RightBracket = 23;\nClangParser.LeftBrace = 24;\nClangParser.RightBrace = 25;\nClangParser.Less = 26;\nClangParser.LessEqual = 27;\nClangParser.Greater = 28;\nClangParser.GreaterEqual = 29;\nClangParser.LeftShift = 30;\nClangParser.RightShift = 31;\nClangParser.Plus = 32;\nClangParser.PlusPlus = 33;\nClangParser.Minus = 34;\nClangParser.MinusMinus = 35;\nClangParser.Star = 36;\nClangParser.Div = 37;\nClangParser.Mod = 38;\nClangParser.And = 39;\nClangParser.Or = 40;\nClangParser.AndAnd = 41;\nClangParser.OrOr = 42;\nClangParser.Caret = 43;\nClangParser.Not = 44;\nClangParser.Tilde = 45;\nClangParser.Question = 46;\nClangParser.Colon = 47;\nClangParser.Semi = 48;\nClangParser.Comma = 49;\nClangParser.Assign = 50;\nClangParser.StarAssign = 51;\nClangParser.DivAssign = 52;\nClangParser.ModAssign = 53;\nClangParser.PlusAssign = 54;\nClangParser.MinusAssign = 55;\nClangParser.LeftShiftAssign = 56;\nClangParser.RightShiftAssign = 57;\nClangParser.AndAssign = 58;\nClangParser.XorAssign = 59;\nClangParser.OrAssign = 60;\nClangParser.Equal = 61;\nClangParser.NotEqual = 62;\nClangParser.Arrow = 63;\nClangParser.Dot = 64;\nClangParser.Identifier = 65;\nClangParser.Constant = 66;\nClangParser.DigitSequence = 67;\nClangParser.StringLiteral = 68;\nClangParser.Whitespace = 69;\nClangParser.Newline = 70;\nClangParser.BlockComment = 71;\nClangParser.LineComment = 72;\nClangParser.RULE_start = 0;\nClangParser.RULE_primaryExpression = 1;\nClangParser.RULE_postfixExpression = 2;\nClangParser.RULE_argumentExpressionList = 3;\nClangParser.RULE_unaryExpression = 4;\nClangParser.RULE_unaryOperator = 5;\nClangParser.RULE_castExpression = 6;\nClangParser.RULE_multiplicativeExpression = 7;\nClangParser.RULE_additiveExpression = 8;\nClangParser.RULE_shiftExpression = 9;\nClangParser.RULE_relationalExpression = 10;\nClangParser.RULE_equalityExpression = 11;\nClangParser.RULE_andExpression = 12;\nClangParser.RULE_exclusiveOrExpression = 13;\nClangParser.RULE_inclusiveOrExpression = 14;\nClangParser.RULE_logicalAndExpression = 15;\nClangParser.RULE_logicalOrExpression = 16;\nClangParser.RULE_conditionalExpression = 17;\nClangParser.RULE_assignmentExpression = 18;\nClangParser.RULE_assignmentOperator = 19;\nClangParser.RULE_expression = 20;\nClangParser.RULE_constantExpression = 21;\nClangParser.RULE_declaration = 22;\nClangParser.RULE_declarationSpecifiers = 23;\nClangParser.RULE_declarationSpecifiers2 = 24;\nClangParser.RULE_declarationSpecifier = 25;\nClangParser.RULE_initDeclaratorList = 26;\nClangParser.RULE_initDeclarator = 27;\nClangParser.RULE_typeSpecifier = 28;\nClangParser.RULE_structSpecifier = 29;\nClangParser.RULE_structDeclarationList = 30;\nClangParser.RULE_structDeclaration = 31;\nClangParser.RULE_specifierQualifierList = 32;\nClangParser.RULE_structDeclaratorList = 33;\nClangParser.RULE_structDeclarator = 34;\nClangParser.RULE_typeQualifier = 35;\nClangParser.RULE_functionSpecifier = 36;\nClangParser.RULE_declarator = 37;\nClangParser.RULE_directDeclarator = 38;\nClangParser.RULE_nestedParenthesesBlock = 39;\nClangParser.RULE_pointer = 40;\nClangParser.RULE_typeQualifierList = 41;\nClangParser.RULE_parameterTypeList = 42;\nClangParser.RULE_parameterList = 43;\nClangParser.RULE_parameterDeclaration = 44;\nClangParser.RULE_identifierList = 45;\nClangParser.RULE_typeName = 46;\nClangParser.RULE_abstractDeclarator = 47;\nClangParser.RULE_directAbstractDeclarator = 48;\nClangParser.RULE_typedefName = 49;\nClangParser.RULE_initializer = 50;\nClangParser.RULE_initializerList = 51;\nClangParser.RULE_designation = 52;\nClangParser.RULE_designatorList = 53;\nClangParser.RULE_designator = 54;\nClangParser.RULE_statement = 55;\nClangParser.RULE_compoundStatement = 56;\nClangParser.RULE_blockItemList = 57;\nClangParser.RULE_blockItem = 58;\nClangParser.RULE_expressionStatement = 59;\nClangParser.RULE_selectionStatement = 60;\nClangParser.RULE_iterationStatement = 61;\nClangParser.RULE_forCondition = 62;\nClangParser.RULE_forDeclaration = 63;\nClangParser.RULE_forExpression = 64;\nClangParser.RULE_compilationUnit = 65;\nClangParser.RULE_translationUnit = 66;\nClangParser.RULE_externalDeclaration = 67;\nClangParser.RULE_functionDefinition = 68;\nClangParser.RULE_declarationList = 69;\n// tslint:disable:no-trailing-whitespace\nClangParser.ruleNames = [\n    \"start\", \"primaryExpression\", \"postfixExpression\", \"argumentExpressionList\",\n    \"unaryExpression\", \"unaryOperator\", \"castExpression\", \"multiplicativeExpression\",\n    \"additiveExpression\", \"shiftExpression\", \"relationalExpression\", \"equalityExpression\",\n    \"andExpression\", \"exclusiveOrExpression\", \"inclusiveOrExpression\", \"logicalAndExpression\",\n    \"logicalOrExpression\", \"conditionalExpression\", \"assignmentExpression\",\n    \"assignmentOperator\", \"expression\", \"constantExpression\", \"declaration\",\n    \"declarationSpecifiers\", \"declarationSpecifiers2\", \"declarationSpecifier\",\n    \"initDeclaratorList\", \"initDeclarator\", \"typeSpecifier\", \"structSpecifier\",\n    \"structDeclarationList\", \"structDeclaration\", \"specifierQualifierList\",\n    \"structDeclaratorList\", \"structDeclarator\", \"typeQualifier\", \"functionSpecifier\",\n    \"declarator\", \"directDeclarator\", \"nestedParenthesesBlock\", \"pointer\",\n    \"typeQualifierList\", \"parameterTypeList\", \"parameterList\", \"parameterDeclaration\",\n    \"identifierList\", \"typeName\", \"abstractDeclarator\", \"directAbstractDeclarator\",\n    \"typedefName\", \"initializer\", \"initializerList\", \"designation\", \"designatorList\",\n    \"designator\", \"statement\", \"compoundStatement\", \"blockItemList\", \"blockItem\",\n    \"expressionStatement\", \"selectionStatement\", \"iterationStatement\", \"forCondition\",\n    \"forDeclaration\", \"forExpression\", \"compilationUnit\", \"translationUnit\",\n    \"externalDeclaration\", \"functionDefinition\", \"declarationList\",\n];\nClangParser._LITERAL_NAMES = [\n    undefined, \"'__extension__'\", \"'inline'\", \"'break'\", \"'char'\", \"'continue'\",\n    \"'const'\", \"'do'\", \"'else'\", \"'float'\", \"'for'\", \"'if'\", \"'int'\", \"'long'\",\n    \"'return'\", \"'signed'\", \"'struct'\", \"'unsigned'\", \"'void'\", \"'while'\",\n    \"'('\", \"')'\", \"'['\", \"']'\", \"'{'\", \"'}'\", \"'<'\", \"'<='\", \"'>'\", \"'>='\",\n    \"'<<'\", \"'>>'\", \"'+'\", \"'++'\", \"'-'\", \"'--'\", \"'*'\", \"'/'\", \"'%'\", \"'&'\",\n    \"'|'\", \"'&&'\", \"'||'\", \"'^'\", \"'!'\", \"'~'\", \"'?'\", \"':'\", \"';'\", \"','\",\n    \"'='\", \"'*='\", \"'/='\", \"'%='\", \"'+='\", \"'-='\", \"'<<='\", \"'>>='\", \"'&='\",\n    \"'^='\", \"'|='\", \"'=='\", \"'!='\", \"'->'\", \"'.'\",\n];\nClangParser._SYMBOLIC_NAMES = [\n    undefined, undefined, undefined, \"Break\", \"Char\", \"Continue\", \"Const\",\n    \"Do\", \"Else\", \"Float\", \"For\", \"If\", \"Int\", \"Long\", \"Return\", \"Signed\",\n    \"Struct\", \"Unsigned\", \"Void\", \"While\", \"LeftParen\", \"RightParen\", \"LeftBracket\",\n    \"RightBracket\", \"LeftBrace\", \"RightBrace\", \"Less\", \"LessEqual\", \"Greater\",\n    \"GreaterEqual\", \"LeftShift\", \"RightShift\", \"Plus\", \"PlusPlus\", \"Minus\",\n    \"MinusMinus\", \"Star\", \"Div\", \"Mod\", \"And\", \"Or\", \"AndAnd\", \"OrOr\", \"Caret\",\n    \"Not\", \"Tilde\", \"Question\", \"Colon\", \"Semi\", \"Comma\", \"Assign\", \"StarAssign\",\n    \"DivAssign\", \"ModAssign\", \"PlusAssign\", \"MinusAssign\", \"LeftShiftAssign\",\n    \"RightShiftAssign\", \"AndAssign\", \"XorAssign\", \"OrAssign\", \"Equal\", \"NotEqual\",\n    \"Arrow\", \"Dot\", \"Identifier\", \"Constant\", \"DigitSequence\", \"StringLiteral\",\n    \"Whitespace\", \"Newline\", \"BlockComment\", \"LineComment\",\n];\nClangParser.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(ClangParser._LITERAL_NAMES, ClangParser._SYMBOLIC_NAMES, []);\nClangParser._serializedATNSegments = 2;\nClangParser._serializedATNSegment0 = \"\\x03\\uC91D\\uCABA\\u058D\\uAFBA\\u4F53\\u0607\\uEA8B\\uC241\\x03J\\u02D2\\x04\\x02\" +\n    \"\\t\\x02\\x04\\x03\\t\\x03\\x04\\x04\\t\\x04\\x04\\x05\\t\\x05\\x04\\x06\\t\\x06\\x04\\x07\" +\n    \"\\t\\x07\\x04\\b\\t\\b\\x04\\t\\t\\t\\x04\\n\\t\\n\\x04\\v\\t\\v\\x04\\f\\t\\f\\x04\\r\\t\\r\\x04\" +\n    \"\\x0E\\t\\x0E\\x04\\x0F\\t\\x0F\\x04\\x10\\t\\x10\\x04\\x11\\t\\x11\\x04\\x12\\t\\x12\\x04\" +\n    \"\\x13\\t\\x13\\x04\\x14\\t\\x14\\x04\\x15\\t\\x15\\x04\\x16\\t\\x16\\x04\\x17\\t\\x17\\x04\" +\n    \"\\x18\\t\\x18\\x04\\x19\\t\\x19\\x04\\x1A\\t\\x1A\\x04\\x1B\\t\\x1B\\x04\\x1C\\t\\x1C\\x04\" +\n    \"\\x1D\\t\\x1D\\x04\\x1E\\t\\x1E\\x04\\x1F\\t\\x1F\\x04 \\t \\x04!\\t!\\x04\\\"\\t\\\"\\x04#\" +\n    \"\\t#\\x04$\\t$\\x04%\\t%\\x04&\\t&\\x04\\'\\t\\'\\x04(\\t(\\x04)\\t)\\x04*\\t*\\x04+\\t+\" +\n    \"\\x04,\\t,\\x04-\\t-\\x04.\\t.\\x04/\\t/\\x040\\t0\\x041\\t1\\x042\\t2\\x043\\t3\\x044\" +\n    \"\\t4\\x045\\t5\\x046\\t6\\x047\\t7\\x048\\t8\\x049\\t9\\x04:\\t:\\x04;\\t;\\x04<\\t<\\x04\" +\n    \"=\\t=\\x04>\\t>\\x04?\\t?\\x04@\\t@\\x04A\\tA\\x04B\\tB\\x04C\\tC\\x04D\\tD\\x04E\\tE\\x04\" +\n    \"F\\tF\\x04G\\tG\\x03\\x02\\x03\\x02\\x03\\x03\\x03\\x03\\x03\\x03\\x06\\x03\\x94\\n\\x03\" +\n    \"\\r\\x03\\x0E\\x03\\x95\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x05\\x03\\x9C\\n\\x03\\x03\" +\n    \"\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x05\\x04\\xA5\\n\\x04\" +\n    \"\\x03\\x04\\x03\\x04\\x03\\x04\\x03\\x04\\x07\\x04\\xAB\\n\\x04\\f\\x04\\x0E\\x04\\xAE\\v\" +\n    \"\\x04\\x03\\x05\\x03\\x05\\x03\\x05\\x07\\x05\\xB3\\n\\x05\\f\\x05\\x0E\\x05\\xB6\\v\\x05\" +\n    \"\\x03\\x06\\x07\\x06\\xB9\\n\\x06\\f\\x06\\x0E\\x06\\xBC\\v\\x06\\x03\\x06\\x03\\x06\\x03\" +\n    \"\\x06\\x03\\x06\\x05\\x06\\xC2\\n\\x06\\x03\\x07\\x03\\x07\\x03\\b\\x05\\b\\xC7\\n\\b\\x03\" +\n    \"\\b\\x03\\b\\x03\\b\\x03\\b\\x03\\b\\x03\\b\\x03\\b\\x05\\b\\xD0\\n\\b\\x03\\t\\x03\\t\\x03\\t\" +\n    \"\\x07\\t\\xD5\\n\\t\\f\\t\\x0E\\t\\xD8\\v\\t\\x03\\n\\x03\\n\\x03\\n\\x07\\n\\xDD\\n\\n\\f\\n\\x0E\" +\n    \"\\n\\xE0\\v\\n\\x03\\v\\x03\\v\\x03\\v\\x07\\v\\xE5\\n\\v\\f\\v\\x0E\\v\\xE8\\v\\v\\x03\\f\\x03\" +\n    \"\\f\\x03\\f\\x07\\f\\xED\\n\\f\\f\\f\\x0E\\f\\xF0\\v\\f\\x03\\r\\x03\\r\\x03\\r\\x07\\r\\xF5\\n\" +\n    \"\\r\\f\\r\\x0E\\r\\xF8\\v\\r\\x03\\x0E\\x03\\x0E\\x03\\x0E\\x07\\x0E\\xFD\\n\\x0E\\f\\x0E\\x0E\" +\n    \"\\x0E\\u0100\\v\\x0E\\x03\\x0F\\x03\\x0F\\x03\\x0F\\x07\\x0F\\u0105\\n\\x0F\\f\\x0F\\x0E\" +\n    \"\\x0F\\u0108\\v\\x0F\\x03\\x10\\x03\\x10\\x03\\x10\\x07\\x10\\u010D\\n\\x10\\f\\x10\\x0E\" +\n    \"\\x10\\u0110\\v\\x10\\x03\\x11\\x03\\x11\\x03\\x11\\x07\\x11\\u0115\\n\\x11\\f\\x11\\x0E\" +\n    \"\\x11\\u0118\\v\\x11\\x03\\x12\\x03\\x12\\x03\\x12\\x07\\x12\\u011D\\n\\x12\\f\\x12\\x0E\" +\n    \"\\x12\\u0120\\v\\x12\\x03\\x13\\x03\\x13\\x03\\x13\\x03\\x13\\x03\\x13\\x03\\x13\\x05\\x13\" +\n    \"\\u0128\\n\\x13\\x03\\x14\\x03\\x14\\x03\\x14\\x03\\x14\\x03\\x14\\x03\\x14\\x05\\x14\\u0130\" +\n    \"\\n\\x14\\x03\\x15\\x03\\x15\\x03\\x16\\x03\\x16\\x03\\x16\\x07\\x16\\u0137\\n\\x16\\f\\x16\" +\n    \"\\x0E\\x16\\u013A\\v\\x16\\x03\\x17\\x03\\x17\\x03\\x18\\x03\\x18\\x05\\x18\\u0140\\n\\x18\" +\n    \"\\x03\\x18\\x03\\x18\\x03\\x19\\x06\\x19\\u0145\\n\\x19\\r\\x19\\x0E\\x19\\u0146\\x03\\x1A\" +\n    \"\\x06\\x1A\\u014A\\n\\x1A\\r\\x1A\\x0E\\x1A\\u014B\\x03\\x1B\\x03\\x1B\\x03\\x1B\\x05\\x1B\" +\n    \"\\u0151\\n\\x1B\\x03\\x1C\\x03\\x1C\\x03\\x1C\\x07\\x1C\\u0156\\n\\x1C\\f\\x1C\\x0E\\x1C\" +\n    \"\\u0159\\v\\x1C\\x03\\x1D\\x03\\x1D\\x03\\x1D\\x05\\x1D\\u015E\\n\\x1D\\x03\\x1E\\x03\\x1E\" +\n    \"\\x03\\x1E\\x05\\x1E\\u0163\\n\\x1E\\x03\\x1F\\x03\\x1F\\x05\\x1F\\u0167\\n\\x1F\\x03\\x1F\" +\n    \"\\x03\\x1F\\x03\\x1F\\x03\\x1F\\x03\\x1F\\x03\\x1F\\x05\\x1F\\u016F\\n\\x1F\\x03 \\x06\" +\n    \" \\u0172\\n \\r \\x0E \\u0173\\x03!\\x03!\\x03!\\x03!\\x03!\\x03!\\x03!\\x05!\\u017D\" +\n    \"\\n!\\x03\\\"\\x03\\\"\\x05\\\"\\u0181\\n\\\"\\x03\\\"\\x05\\\"\\u0184\\n\\\"\\x03#\\x03#\\x03#\\x07\" +\n    \"#\\u0189\\n#\\f#\\x0E#\\u018C\\v#\\x03$\\x03$\\x05$\\u0190\\n$\\x03$\\x03$\\x05$\\u0194\" +\n    \"\\n$\\x03%\\x03%\\x03&\\x03&\\x03\\'\\x05\\'\\u019B\\n\\'\\x03\\'\\x03\\'\\x03(\\x03(\\x03\" +\n    \"(\\x03(\\x03(\\x03(\\x03(\\x03(\\x03(\\x05(\\u01A8\\n(\\x03(\\x03(\\x03(\\x05(\\u01AD\" +\n    \"\\n(\\x03(\\x05(\\u01B0\\n(\\x03(\\x03(\\x03(\\x03(\\x05(\\u01B6\\n(\\x03(\\x03(\\x03\" +\n    \"(\\x03(\\x03(\\x03(\\x03(\\x03(\\x03(\\x03(\\x05(\\u01C2\\n(\\x03(\\x07(\\u01C5\\n(\" +\n    \"\\f(\\x0E(\\u01C8\\v(\\x03)\\x03)\\x03)\\x03)\\x03)\\x07)\\u01CF\\n)\\f)\\x0E)\\u01D2\" +\n    \"\\v)\\x03*\\x03*\\x05*\\u01D6\\n*\\x06*\\u01D8\\n*\\r*\\x0E*\\u01D9\\x03+\\x06+\\u01DD\" +\n    \"\\n+\\r+\\x0E+\\u01DE\\x03,\\x03,\\x05,\\u01E3\\n,\\x03-\\x03-\\x03-\\x07-\\u01E8\\n\" +\n    \"-\\f-\\x0E-\\u01EB\\v-\\x03.\\x03.\\x03.\\x03.\\x03.\\x05.\\u01F2\\n.\\x05.\\u01F4\\n\" +\n    \".\\x03/\\x03/\\x03/\\x07/\\u01F9\\n/\\f/\\x0E/\\u01FC\\v/\\x030\\x030\\x050\\u0200\\n\" +\n    \"0\\x031\\x031\\x051\\u0204\\n1\\x031\\x051\\u0207\\n1\\x032\\x032\\x032\\x032\\x032\" +\n    \"\\x032\\x032\\x052\\u0210\\n2\\x032\\x052\\u0213\\n2\\x032\\x032\\x032\\x032\\x032\\x03\" +\n    \"2\\x052\\u021B\\n2\\x032\\x052\\u021E\\n2\\x032\\x032\\x032\\x052\\u0223\\n2\\x032\\x05\" +\n    \"2\\u0226\\n2\\x032\\x032\\x032\\x032\\x032\\x032\\x032\\x032\\x052\\u0230\\n2\\x032\" +\n    \"\\x072\\u0233\\n2\\f2\\x0E2\\u0236\\v2\\x033\\x033\\x034\\x034\\x034\\x034\\x054\\u023E\" +\n    \"\\n4\\x034\\x034\\x054\\u0242\\n4\\x035\\x055\\u0245\\n5\\x035\\x035\\x035\\x055\\u024A\" +\n    \"\\n5\\x035\\x075\\u024D\\n5\\f5\\x0E5\\u0250\\v5\\x036\\x036\\x036\\x037\\x067\\u0256\" +\n    \"\\n7\\r7\\x0E7\\u0257\\x038\\x038\\x038\\x038\\x038\\x038\\x058\\u0260\\n8\\x039\\x03\" +\n    \"9\\x039\\x039\\x059\\u0266\\n9\\x03:\\x03:\\x05:\\u026A\\n:\\x03:\\x03:\\x03;\\x06;\" +\n    \"\\u026F\\n;\\r;\\x0E;\\u0270\\x03<\\x03<\\x05<\\u0275\\n<\\x03=\\x05=\\u0278\\n=\\x03\" +\n    \"=\\x03=\\x03>\\x03>\\x03>\\x03>\\x03>\\x03>\\x03>\\x05>\\u0283\\n>\\x03?\\x03?\\x03\" +\n    \"?\\x03?\\x03?\\x03?\\x03?\\x03?\\x03?\\x03?\\x03?\\x03?\\x03?\\x03?\\x03?\\x03?\\x03\" +\n    \"?\\x03?\\x03?\\x03?\\x05?\\u0299\\n?\\x03@\\x03@\\x05@\\u029D\\n@\\x05@\\u029F\\n@\\x03\" +\n    \"@\\x03@\\x05@\\u02A3\\n@\\x03@\\x03@\\x05@\\u02A7\\n@\\x03A\\x03A\\x05A\\u02AB\\nA\\x03\" +\n    \"B\\x03B\\x03B\\x07B\\u02B0\\nB\\fB\\x0EB\\u02B3\\vB\\x03C\\x05C\\u02B6\\nC\\x03C\\x03\" +\n    \"C\\x03D\\x06D\\u02BB\\nD\\rD\\x0ED\\u02BC\\x03E\\x03E\\x03E\\x05E\\u02C2\\nE\\x03F\\x05\" +\n    \"F\\u02C5\\nF\\x03F\\x03F\\x05F\\u02C9\\nF\\x03F\\x03F\\x03G\\x06G\\u02CE\\nG\\rG\\x0E\" +\n    \"G\\u02CF\\x03G\\x02\\x02\\x04NbH\\x02\\x02\\x04\\x02\\x06\\x02\\b\\x02\\n\\x02\\f\\x02\" +\n    \"\\x0E\\x02\\x10\\x02\\x12\\x02\\x14\\x02\\x16\\x02\\x18\\x02\\x1A\\x02\\x1C\\x02\\x1E\\x02\" +\n    \" \\x02\\\"\\x02$\\x02&\\x02(\\x02*\\x02,\\x02.\\x020\\x022\\x024\\x026\\x028\\x02:\\x02\" +\n    \"<\\x02>\\x02@\\x02B\\x02D\\x02F\\x02H\\x02J\\x02L\\x02N\\x02P\\x02R\\x02T\\x02V\\x02\" +\n    \"X\\x02Z\\x02\\\\\\x02^\\x02`\\x02b\\x02d\\x02f\\x02h\\x02j\\x02l\\x02n\\x02p\\x02r\\x02\" +\n    \"t\\x02v\\x02x\\x02z\\x02|\\x02~\\x02\\x80\\x02\\x82\\x02\\x84\\x02\\x86\\x02\\x88\\x02\" +\n    \"\\x8A\\x02\\x8C\\x02\\x02\\x0E\\x03\\x02AB\\x04\\x02##%%\\x07\\x02\\\"\\\"$$&&))..\\x03\" +\n    \"\\x02&(\\x04\\x02\\\"\\\"$$\\x03\\x02 !\\x03\\x02\\x1C\\x1F\\x03\\x02?@\\x03\\x024>\\x07\" +\n    \"\\x02\\x06\\x06\\v\\v\\x0E\\x0E\\x11\\x11\\x13\\x14\\x03\\x02\\x16\\x17\\x04\\x02&&--\\x02\" +\n    \"\\u02FC\\x02\\x8E\\x03\\x02\\x02\\x02\\x04\\x9B\\x03\\x02\\x02\\x02\\x06\\x9D\\x03\\x02\" +\n    \"\\x02\\x02\\b\\xAF\\x03\\x02\\x02\\x02\\n\\xBA\\x03\\x02\\x02\\x02\\f\\xC3\\x03\\x02\\x02\" +\n    \"\\x02\\x0E\\xCF\\x03\\x02\\x02\\x02\\x10\\xD1\\x03\\x02\\x02\\x02\\x12\\xD9\\x03\\x02\\x02\" +\n    \"\\x02\\x14\\xE1\\x03\\x02\\x02\\x02\\x16\\xE9\\x03\\x02\\x02\\x02\\x18\\xF1\\x03\\x02\\x02\" +\n    \"\\x02\\x1A\\xF9\\x03\\x02\\x02\\x02\\x1C\\u0101\\x03\\x02\\x02\\x02\\x1E\\u0109\\x03\\x02\" +\n    \"\\x02\\x02 \\u0111\\x03\\x02\\x02\\x02\\\"\\u0119\\x03\\x02\\x02\\x02$\\u0121\\x03\\x02\" +\n    \"\\x02\\x02&\\u012F\\x03\\x02\\x02\\x02(\\u0131\\x03\\x02\\x02\\x02*\\u0133\\x03\\x02\" +\n    \"\\x02\\x02,\\u013B\\x03\\x02\\x02\\x02.\\u013D\\x03\\x02\\x02\\x020\\u0144\\x03\\x02\" +\n    \"\\x02\\x022\\u0149\\x03\\x02\\x02\\x024\\u0150\\x03\\x02\\x02\\x026\\u0152\\x03\\x02\" +\n    \"\\x02\\x028\\u015A\\x03\\x02\\x02\\x02:\\u0162\\x03\\x02\\x02\\x02<\\u016E\\x03\\x02\" +\n    \"\\x02\\x02>\\u0171\\x03\\x02\\x02\\x02@\\u017C\\x03\\x02\\x02\\x02B\\u0180\\x03\\x02\" +\n    \"\\x02\\x02D\\u0185\\x03\\x02\\x02\\x02F\\u0193\\x03\\x02\\x02\\x02H\\u0195\\x03\\x02\" +\n    \"\\x02\\x02J\\u0197\\x03\\x02\\x02\\x02L\\u019A\\x03\\x02\\x02\\x02N\\u01A7\\x03\\x02\" +\n    \"\\x02\\x02P\\u01D0\\x03\\x02\\x02\\x02R\\u01D7\\x03\\x02\\x02\\x02T\\u01DC\\x03\\x02\" +\n    \"\\x02\\x02V\\u01E0\\x03\\x02\\x02\\x02X\\u01E4\\x03\\x02\\x02\\x02Z\\u01F3\\x03\\x02\" +\n    \"\\x02\\x02\\\\\\u01F5\\x03\\x02\\x02\\x02^\\u01FD\\x03\\x02\\x02\\x02`\\u0206\\x03\\x02\" +\n    \"\\x02\\x02b\\u021D\\x03\\x02\\x02\\x02d\\u0237\\x03\\x02\\x02\\x02f\\u0241\\x03\\x02\" +\n    \"\\x02\\x02h\\u0244\\x03\\x02\\x02\\x02j\\u0251\\x03\\x02\\x02\\x02l\\u0255\\x03\\x02\" +\n    \"\\x02\\x02n\\u025F\\x03\\x02\\x02\\x02p\\u0265\\x03\\x02\\x02\\x02r\\u0267\\x03\\x02\" +\n    \"\\x02\\x02t\\u026E\\x03\\x02\\x02\\x02v\\u0274\\x03\\x02\\x02\\x02x\\u0277\\x03\\x02\" +\n    \"\\x02\\x02z\\u027B\\x03\\x02\\x02\\x02|\\u0298\\x03\\x02\\x02\\x02~\\u029E\\x03\\x02\" +\n    \"\\x02\\x02\\x80\\u02A8\\x03\\x02\\x02\\x02\\x82\\u02AC\\x03\\x02\\x02\\x02\\x84\\u02B5\" +\n    \"\\x03\\x02\\x02\\x02\\x86\\u02BA\\x03\\x02\\x02\\x02\\x88\\u02C1\\x03\\x02\\x02\\x02\\x8A\" +\n    \"\\u02C4\\x03\\x02\\x02\\x02\\x8C\\u02CD\\x03\\x02\\x02\\x02\\x8E\\x8F\\x05\\x04\\x03\\x02\" +\n    \"\\x8F\\x03\\x03\\x02\\x02\\x02\\x90\\x9C\\x07C\\x02\\x02\\x91\\x9C\\x07D\\x02\\x02\\x92\" +\n    \"\\x94\\x07F\\x02\\x02\\x93\\x92\\x03\\x02\\x02\\x02\\x94\\x95\\x03\\x02\\x02\\x02\\x95\" +\n    \"\\x93\\x03\\x02\\x02\\x02\\x95\\x96\\x03\\x02\\x02\\x02\\x96\\x9C\\x03\\x02\\x02\\x02\\x97\" +\n    \"\\x98\\x07\\x16\\x02\\x02\\x98\\x99\\x05*\\x16\\x02\\x99\\x9A\\x07\\x17\\x02\\x02\\x9A\" +\n    \"\\x9C\\x03\\x02\\x02\\x02\\x9B\\x90\\x03\\x02\\x02\\x02\\x9B\\x91\\x03\\x02\\x02\\x02\\x9B\" +\n    \"\\x93\\x03\\x02\\x02\\x02\\x9B\\x97\\x03\\x02\\x02\\x02\\x9C\\x05\\x03\\x02\\x02\\x02\\x9D\" +\n    \"\\xAC\\x05\\x04\\x03\\x02\\x9E\\x9F\\x07\\x18\\x02\\x02\\x9F\\xA0\\x05*\\x16\\x02\\xA0\" +\n    \"\\xA1\\x07\\x19\\x02\\x02\\xA1\\xAB\\x03\\x02\\x02\\x02\\xA2\\xA4\\x07\\x16\\x02\\x02\\xA3\" +\n    \"\\xA5\\x05\\b\\x05\\x02\\xA4\\xA3\\x03\\x02\\x02\\x02\\xA4\\xA5\\x03\\x02\\x02\\x02\\xA5\" +\n    \"\\xA6\\x03\\x02\\x02\\x02\\xA6\\xAB\\x07\\x17\\x02\\x02\\xA7\\xA8\\t\\x02\\x02\\x02\\xA8\" +\n    \"\\xAB\\x07C\\x02\\x02\\xA9\\xAB\\t\\x03\\x02\\x02\\xAA\\x9E\\x03\\x02\\x02\\x02\\xAA\\xA2\" +\n    \"\\x03\\x02\\x02\\x02\\xAA\\xA7\\x03\\x02\\x02\\x02\\xAA\\xA9\\x03\\x02\\x02\\x02\\xAB\\xAE\" +\n    \"\\x03\\x02\\x02\\x02\\xAC\\xAA\\x03\\x02\\x02\\x02\\xAC\\xAD\\x03\\x02\\x02\\x02\\xAD\\x07\" +\n    \"\\x03\\x02\\x02\\x02\\xAE\\xAC\\x03\\x02\\x02\\x02\\xAF\\xB4\\x05&\\x14\\x02\\xB0\\xB1\" +\n    \"\\x073\\x02\\x02\\xB1\\xB3\\x05&\\x14\\x02\\xB2\\xB0\\x03\\x02\\x02\\x02\\xB3\\xB6\\x03\" +\n    \"\\x02\\x02\\x02\\xB4\\xB2\\x03\\x02\\x02\\x02\\xB4\\xB5\\x03\\x02\\x02\\x02\\xB5\\t\\x03\" +\n    \"\\x02\\x02\\x02\\xB6\\xB4\\x03\\x02\\x02\\x02\\xB7\\xB9\\t\\x03\\x02\\x02\\xB8\\xB7\\x03\" +\n    \"\\x02\\x02\\x02\\xB9\\xBC\\x03\\x02\\x02\\x02\\xBA\\xB8\\x03\\x02\\x02\\x02\\xBA\\xBB\\x03\" +\n    \"\\x02\\x02\\x02\\xBB\\xC1\\x03\\x02\\x02\\x02\\xBC\\xBA\\x03\\x02\\x02\\x02\\xBD\\xC2\\x05\" +\n    \"\\x06\\x04\\x02\\xBE\\xBF\\x05\\f\\x07\\x02\\xBF\\xC0\\x05\\x0E\\b\\x02\\xC0\\xC2\\x03\\x02\" +\n    \"\\x02\\x02\\xC1\\xBD\\x03\\x02\\x02\\x02\\xC1\\xBE\\x03\\x02\\x02\\x02\\xC2\\v\\x03\\x02\" +\n    \"\\x02\\x02\\xC3\\xC4\\t\\x04\\x02\\x02\\xC4\\r\\x03\\x02\\x02\\x02\\xC5\\xC7\\x07\\x03\\x02\" +\n    \"\\x02\\xC6\\xC5\\x03\\x02\\x02\\x02\\xC6\\xC7\\x03\\x02\\x02\\x02\\xC7\\xC8\\x03\\x02\\x02\" +\n    \"\\x02\\xC8\\xC9\\x07\\x16\\x02\\x02\\xC9\\xCA\\x05^0\\x02\\xCA\\xCB\\x07\\x17\\x02\\x02\" +\n    \"\\xCB\\xCC\\x05\\x0E\\b\\x02\\xCC\\xD0\\x03\\x02\\x02\\x02\\xCD\\xD0\\x05\\n\\x06\\x02\\xCE\" +\n    \"\\xD0\\x07E\\x02\\x02\\xCF\\xC6\\x03\\x02\\x02\\x02\\xCF\\xCD\\x03\\x02\\x02\\x02\\xCF\" +\n    \"\\xCE\\x03\\x02\\x02\\x02\\xD0\\x0F\\x03\\x02\\x02\\x02\\xD1\\xD6\\x05\\x0E\\b\\x02\\xD2\" +\n    \"\\xD3\\t\\x05\\x02\\x02\\xD3\\xD5\\x05\\x0E\\b\\x02\\xD4\\xD2\\x03\\x02\\x02\\x02\\xD5\\xD8\" +\n    \"\\x03\\x02\\x02\\x02\\xD6\\xD4\\x03\\x02\\x02\\x02\\xD6\\xD7\\x03\\x02\\x02\\x02\\xD7\\x11\" +\n    \"\\x03\\x02\\x02\\x02\\xD8\\xD6\\x03\\x02\\x02\\x02\\xD9\\xDE\\x05\\x10\\t\\x02\\xDA\\xDB\" +\n    \"\\t\\x06\\x02\\x02\\xDB\\xDD\\x05\\x10\\t\\x02\\xDC\\xDA\\x03\\x02\\x02\\x02\\xDD\\xE0\\x03\" +\n    \"\\x02\\x02\\x02\\xDE\\xDC\\x03\\x02\\x02\\x02\\xDE\\xDF\\x03\\x02\\x02\\x02\\xDF\\x13\\x03\" +\n    \"\\x02\\x02\\x02\\xE0\\xDE\\x03\\x02\\x02\\x02\\xE1\\xE6\\x05\\x12\\n\\x02\\xE2\\xE3\\t\\x07\" +\n    \"\\x02\\x02\\xE3\\xE5\\x05\\x12\\n\\x02\\xE4\\xE2\\x03\\x02\\x02\\x02\\xE5\\xE8\\x03\\x02\" +\n    \"\\x02\\x02\\xE6\\xE4\\x03\\x02\\x02\\x02\\xE6\\xE7\\x03\\x02\\x02\\x02\\xE7\\x15\\x03\\x02\" +\n    \"\\x02\\x02\\xE8\\xE6\\x03\\x02\\x02\\x02\\xE9\\xEE\\x05\\x14\\v\\x02\\xEA\\xEB\\t\\b\\x02\" +\n    \"\\x02\\xEB\\xED\\x05\\x14\\v\\x02\\xEC\\xEA\\x03\\x02\\x02\\x02\\xED\\xF0\\x03\\x02\\x02\" +\n    \"\\x02\\xEE\\xEC\\x03\\x02\\x02\\x02\\xEE\\xEF\\x03\\x02\\x02\\x02\\xEF\\x17\\x03\\x02\\x02\" +\n    \"\\x02\\xF0\\xEE\\x03\\x02\\x02\\x02\\xF1\\xF6\\x05\\x16\\f\\x02\\xF2\\xF3\\t\\t\\x02\\x02\" +\n    \"\\xF3\\xF5\\x05\\x16\\f\\x02\\xF4\\xF2\\x03\\x02\\x02\\x02\\xF5\\xF8\\x03\\x02\\x02\\x02\" +\n    \"\\xF6\\xF4\\x03\\x02\\x02\\x02\\xF6\\xF7\\x03\\x02\\x02\\x02\\xF7\\x19\\x03\\x02\\x02\\x02\" +\n    \"\\xF8\\xF6\\x03\\x02\\x02\\x02\\xF9\\xFE\\x05\\x18\\r\\x02\\xFA\\xFB\\x07)\\x02\\x02\\xFB\" +\n    \"\\xFD\\x05\\x18\\r\\x02\\xFC\\xFA\\x03\\x02\\x02\\x02\\xFD\\u0100\\x03\\x02\\x02\\x02\\xFE\" +\n    \"\\xFC\\x03\\x02\\x02\\x02\\xFE\\xFF\\x03\\x02\\x02\\x02\\xFF\\x1B\\x03\\x02\\x02\\x02\\u0100\" +\n    \"\\xFE\\x03\\x02\\x02\\x02\\u0101\\u0106\\x05\\x1A\\x0E\\x02\\u0102\\u0103\\x07-\\x02\" +\n    \"\\x02\\u0103\\u0105\\x05\\x1A\\x0E\\x02\\u0104\\u0102\\x03\\x02\\x02\\x02\\u0105\\u0108\" +\n    \"\\x03\\x02\\x02\\x02\\u0106\\u0104\\x03\\x02\\x02\\x02\\u0106\\u0107\\x03\\x02\\x02\\x02\" +\n    \"\\u0107\\x1D\\x03\\x02\\x02\\x02\\u0108\\u0106\\x03\\x02\\x02\\x02\\u0109\\u010E\\x05\" +\n    \"\\x1C\\x0F\\x02\\u010A\\u010B\\x07*\\x02\\x02\\u010B\\u010D\\x05\\x1C\\x0F\\x02\\u010C\" +\n    \"\\u010A\\x03\\x02\\x02\\x02\\u010D\\u0110\\x03\\x02\\x02\\x02\\u010E\\u010C\\x03\\x02\" +\n    \"\\x02\\x02\\u010E\\u010F\\x03\\x02\\x02\\x02\\u010F\\x1F\\x03\\x02\\x02\\x02\\u0110\\u010E\" +\n    \"\\x03\\x02\\x02\\x02\\u0111\\u0116\\x05\\x1E\\x10\\x02\\u0112\\u0113\\x07+\\x02\\x02\" +\n    \"\\u0113\\u0115\\x05\\x1E\\x10\\x02\\u0114\\u0112\\x03\\x02\\x02\\x02\\u0115\\u0118\\x03\" +\n    \"\\x02\\x02\\x02\\u0116\\u0114\\x03\\x02\\x02\\x02\\u0116\\u0117\\x03\\x02\\x02\\x02\\u0117\" +\n    \"!\\x03\\x02\\x02\\x02\\u0118\\u0116\\x03\\x02\\x02\\x02\\u0119\\u011E\\x05 \\x11\\x02\" +\n    \"\\u011A\\u011B\\x07,\\x02\\x02\\u011B\\u011D\\x05 \\x11\\x02\\u011C\\u011A\\x03\\x02\" +\n    \"\\x02\\x02\\u011D\\u0120\\x03\\x02\\x02\\x02\\u011E\\u011C\\x03\\x02\\x02\\x02\\u011E\" +\n    \"\\u011F\\x03\\x02\\x02\\x02\\u011F#\\x03\\x02\\x02\\x02\\u0120\\u011E\\x03\\x02\\x02\" +\n    \"\\x02\\u0121\\u0127\\x05\\\"\\x12\\x02\\u0122\\u0123\\x070\\x02\\x02\\u0123\\u0124\\x05\" +\n    \"*\\x16\\x02\\u0124\\u0125\\x071\\x02\\x02\\u0125\\u0126\\x05$\\x13\\x02\\u0126\\u0128\" +\n    \"\\x03\\x02\\x02\\x02\\u0127\\u0122\\x03\\x02\\x02\\x02\\u0127\\u0128\\x03\\x02\\x02\\x02\" +\n    \"\\u0128%\\x03\\x02\\x02\\x02\\u0129\\u0130\\x05$\\x13\\x02\\u012A\\u012B\\x05\\n\\x06\" +\n    \"\\x02\\u012B\\u012C\\x05(\\x15\\x02\\u012C\\u012D\\x05&\\x14\\x02\\u012D\\u0130\\x03\" +\n    \"\\x02\\x02\\x02\\u012E\\u0130\\x07E\\x02\\x02\\u012F\\u0129\\x03\\x02\\x02\\x02\\u012F\" +\n    \"\\u012A\\x03\\x02\\x02\\x02\\u012F\\u012E\\x03\\x02\\x02\\x02\\u0130\\'\\x03\\x02\\x02\" +\n    \"\\x02\\u0131\\u0132\\t\\n\\x02\\x02\\u0132)\\x03\\x02\\x02\\x02\\u0133\\u0138\\x05&\\x14\" +\n    \"\\x02\\u0134\\u0135\\x073\\x02\\x02\\u0135\\u0137\\x05&\\x14\\x02\\u0136\\u0134\\x03\" +\n    \"\\x02\\x02\\x02\\u0137\\u013A\\x03\\x02\\x02\\x02\\u0138\\u0136\\x03\\x02\\x02\\x02\\u0138\" +\n    \"\\u0139\\x03\\x02\\x02\\x02\\u0139+\\x03\\x02\\x02\\x02\\u013A\\u0138\\x03\\x02\\x02\" +\n    \"\\x02\\u013B\\u013C\\x05$\\x13\\x02\\u013C-\\x03\\x02\\x02\\x02\\u013D\\u013F\\x050\" +\n    \"\\x19\\x02\\u013E\\u0140\\x056\\x1C\\x02\\u013F\\u013E\\x03\\x02\\x02\\x02\\u013F\\u0140\" +\n    \"\\x03\\x02\\x02\\x02\\u0140\\u0141\\x03\\x02\\x02\\x02\\u0141\\u0142\\x072\\x02\\x02\" +\n    \"\\u0142/\\x03\\x02\\x02\\x02\\u0143\\u0145\\x054\\x1B\\x02\\u0144\\u0143\\x03\\x02\\x02\" +\n    \"\\x02\\u0145\\u0146\\x03\\x02\\x02\\x02\\u0146\\u0144\\x03\\x02\\x02\\x02\\u0146\\u0147\" +\n    \"\\x03\\x02\\x02\\x02\\u01471\\x03\\x02\\x02\\x02\\u0148\\u014A\\x054\\x1B\\x02\\u0149\" +\n    \"\\u0148\\x03\\x02\\x02\\x02\\u014A\\u014B\\x03\\x02\\x02\\x02\\u014B\\u0149\\x03\\x02\" +\n    \"\\x02\\x02\\u014B\\u014C\\x03\\x02\\x02\\x02\\u014C3\\x03\\x02\\x02\\x02\\u014D\\u0151\" +\n    \"\\x05:\\x1E\\x02\\u014E\\u0151\\x05H%\\x02\\u014F\\u0151\\x05J&\\x02\\u0150\\u014D\" +\n    \"\\x03\\x02\\x02\\x02\\u0150\\u014E\\x03\\x02\\x02\\x02\\u0150\\u014F\\x03\\x02\\x02\\x02\" +\n    \"\\u01515\\x03\\x02\\x02\\x02\\u0152\\u0157\\x058\\x1D\\x02\\u0153\\u0154\\x073\\x02\" +\n    \"\\x02\\u0154\\u0156\\x058\\x1D\\x02\\u0155\\u0153\\x03\\x02\\x02\\x02\\u0156\\u0159\" +\n    \"\\x03\\x02\\x02\\x02\\u0157\\u0155\\x03\\x02\\x02\\x02\\u0157\\u0158\\x03\\x02\\x02\\x02\" +\n    \"\\u01587\\x03\\x02\\x02\\x02\\u0159\\u0157\\x03\\x02\\x02\\x02\\u015A\\u015D\\x05L\\'\" +\n    \"\\x02\\u015B\\u015C\\x074\\x02\\x02\\u015C\\u015E\\x05f4\\x02\\u015D\\u015B\\x03\\x02\" +\n    \"\\x02\\x02\\u015D\\u015E\\x03\\x02\\x02\\x02\\u015E9\\x03\\x02\\x02\\x02\\u015F\\u0163\" +\n    \"\\t\\v\\x02\\x02\\u0160\\u0163\\x05<\\x1F\\x02\\u0161\\u0163\\x05d3\\x02\\u0162\\u015F\" +\n    \"\\x03\\x02\\x02\\x02\\u0162\\u0160\\x03\\x02\\x02\\x02\\u0162\\u0161\\x03\\x02\\x02\\x02\" +\n    \"\\u0163;\\x03\\x02\\x02\\x02\\u0164\\u0166\\x07\\x12\\x02\\x02\\u0165\\u0167\\x07C\\x02\" +\n    \"\\x02\\u0166\\u0165\\x03\\x02\\x02\\x02\\u0166\\u0167\\x03\\x02\\x02\\x02\\u0167\\u0168\" +\n    \"\\x03\\x02\\x02\\x02\\u0168\\u0169\\x07\\x1A\\x02\\x02\\u0169\\u016A\\x05> \\x02\\u016A\" +\n    \"\\u016B\\x07\\x1B\\x02\\x02\\u016B\\u016F\\x03\\x02\\x02\\x02\\u016C\\u016D\\x07\\x12\" +\n    \"\\x02\\x02\\u016D\\u016F\\x07C\\x02\\x02\\u016E\\u0164\\x03\\x02\\x02\\x02\\u016E\\u016C\" +\n    \"\\x03\\x02\\x02\\x02\\u016F=\\x03\\x02\\x02\\x02\\u0170\\u0172\\x05@!\\x02\\u0171\\u0170\" +\n    \"\\x03\\x02\\x02\\x02\\u0172\\u0173\\x03\\x02\\x02\\x02\\u0173\\u0171\\x03\\x02\\x02\\x02\" +\n    \"\\u0173\\u0174\\x03\\x02\\x02\\x02\\u0174?\\x03\\x02\\x02\\x02\\u0175\\u0176\\x05B\\\"\" +\n    \"\\x02\\u0176\\u0177\\x05D#\\x02\\u0177\\u0178\\x072\\x02\\x02\\u0178\\u017D\\x03\\x02\" +\n    \"\\x02\\x02\\u0179\\u017A\\x05B\\\"\\x02\\u017A\\u017B\\x072\\x02\\x02\\u017B\\u017D\\x03\" +\n    \"\\x02\\x02\\x02\\u017C\\u0175\\x03\\x02\\x02\\x02\\u017C\\u0179\\x03\\x02\\x02\\x02\\u017D\" +\n    \"A\\x03\\x02\\x02\\x02\\u017E\\u0181\\x05:\\x1E\\x02\\u017F\\u0181\\x05H%\\x02\\u0180\" +\n    \"\\u017E\\x03\\x02\\x02\\x02\\u0180\\u017F\\x03\\x02\\x02\\x02\\u0181\\u0183\\x03\\x02\" +\n    \"\\x02\\x02\\u0182\\u0184\\x05B\\\"\\x02\\u0183\\u0182\\x03\\x02\\x02\\x02\\u0183\\u0184\" +\n    \"\\x03\\x02\\x02\\x02\\u0184C\\x03\\x02\\x02\\x02\\u0185\\u018A\\x05F$\\x02\\u0186\\u0187\" +\n    \"\\x073\\x02\\x02\\u0187\\u0189\\x05F$\\x02\\u0188\\u0186\\x03\\x02\\x02\\x02\\u0189\" +\n    \"\\u018C\\x03\\x02\\x02\\x02\\u018A\\u0188\\x03\\x02\\x02\\x02\\u018A\\u018B\\x03\\x02\" +\n    \"\\x02\\x02\\u018BE\\x03\\x02\\x02\\x02\\u018C\\u018A\\x03\\x02\\x02\\x02\\u018D\\u0194\" +\n    \"\\x05L\\'\\x02\\u018E\\u0190\\x05L\\'\\x02\\u018F\\u018E\\x03\\x02\\x02\\x02\\u018F\\u0190\" +\n    \"\\x03\\x02\\x02\\x02\\u0190\\u0191\\x03\\x02\\x02\\x02\\u0191\\u0192\\x071\\x02\\x02\" +\n    \"\\u0192\\u0194\\x05,\\x17\\x02\\u0193\\u018D\\x03\\x02\\x02\\x02\\u0193\\u018F\\x03\" +\n    \"\\x02\\x02\\x02\\u0194G\\x03\\x02\\x02\\x02\\u0195\\u0196\\x07\\b\\x02\\x02\\u0196I\\x03\" +\n    \"\\x02\\x02\\x02\\u0197\\u0198\\x07\\x04\\x02\\x02\\u0198K\\x03\\x02\\x02\\x02\\u0199\" +\n    \"\\u019B\\x05R*\\x02\\u019A\\u0199\\x03\\x02\\x02\\x02\\u019A\\u019B\\x03\\x02\\x02\\x02\" +\n    \"\\u019B\\u019C\\x03\\x02\\x02\\x02\\u019C\\u019D\\x05N(\\x02\\u019DM\\x03\\x02\\x02\" +\n    \"\\x02\\u019E\\u019F\\b(\\x01\\x02\\u019F\\u01A8\\x07C\\x02\\x02\\u01A0\\u01A1\\x07\\x16\" +\n    \"\\x02\\x02\\u01A1\\u01A2\\x05L\\'\\x02\\u01A2\\u01A3\\x07\\x17\\x02\\x02\\u01A3\\u01A8\" +\n    \"\\x03\\x02\\x02\\x02\\u01A4\\u01A5\\x07C\\x02\\x02\\u01A5\\u01A6\\x071\\x02\\x02\\u01A6\" +\n    \"\\u01A8\\x07E\\x02\\x02\\u01A7\\u019E\\x03\\x02\\x02\\x02\\u01A7\\u01A0\\x03\\x02\\x02\" +\n    \"\\x02\\u01A7\\u01A4\\x03\\x02\\x02\\x02\\u01A8\\u01C6\\x03\\x02\\x02\\x02\\u01A9\\u01AA\" +\n    \"\\f\\x07\\x02\\x02\\u01AA\\u01AC\\x07\\x18\\x02\\x02\\u01AB\\u01AD\\x05T+\\x02\\u01AC\" +\n    \"\\u01AB\\x03\\x02\\x02\\x02\\u01AC\\u01AD\\x03\\x02\\x02\\x02\\u01AD\\u01AF\\x03\\x02\" +\n    \"\\x02\\x02\\u01AE\\u01B0\\x05&\\x14\\x02\\u01AF\\u01AE\\x03\\x02\\x02\\x02\\u01AF\\u01B0\" +\n    \"\\x03\\x02\\x02\\x02\\u01B0\\u01B1\\x03\\x02\\x02\\x02\\u01B1\\u01C5\\x07\\x19\\x02\\x02\" +\n    \"\\u01B2\\u01B3\\f\\x06\\x02\\x02\\u01B3\\u01B5\\x07\\x18\\x02\\x02\\u01B4\\u01B6\\x05\" +\n    \"T+\\x02\\u01B5\\u01B4\\x03\\x02\\x02\\x02\\u01B5\\u01B6\\x03\\x02\\x02\\x02\\u01B6\\u01B7\" +\n    \"\\x03\\x02\\x02\\x02\\u01B7\\u01B8\\x07&\\x02\\x02\\u01B8\\u01C5\\x07\\x19\\x02\\x02\" +\n    \"\\u01B9\\u01BA\\f\\x05\\x02\\x02\\u01BA\\u01BB\\x07\\x16\\x02\\x02\\u01BB\\u01BC\\x05\" +\n    \"V,\\x02\\u01BC\\u01BD\\x07\\x17\\x02\\x02\\u01BD\\u01C5\\x03\\x02\\x02\\x02\\u01BE\\u01BF\" +\n    \"\\f\\x04\\x02\\x02\\u01BF\\u01C1\\x07\\x16\\x02\\x02\\u01C0\\u01C2\\x05\\\\/\\x02\\u01C1\" +\n    \"\\u01C0\\x03\\x02\\x02\\x02\\u01C1\\u01C2\\x03\\x02\\x02\\x02\\u01C2\\u01C3\\x03\\x02\" +\n    \"\\x02\\x02\\u01C3\\u01C5\\x07\\x17\\x02\\x02\\u01C4\\u01A9\\x03\\x02\\x02\\x02\\u01C4\" +\n    \"\\u01B2\\x03\\x02\\x02\\x02\\u01C4\\u01B9\\x03\\x02\\x02\\x02\\u01C4\\u01BE\\x03\\x02\" +\n    \"\\x02\\x02\\u01C5\\u01C8\\x03\\x02\\x02\\x02\\u01C6\\u01C4\\x03\\x02\\x02\\x02\\u01C6\" +\n    \"\\u01C7\\x03\\x02\\x02\\x02\\u01C7O\\x03\\x02\\x02\\x02\\u01C8\\u01C6\\x03\\x02\\x02\" +\n    \"\\x02\\u01C9\\u01CF\\n\\f\\x02\\x02\\u01CA\\u01CB\\x07\\x16\\x02\\x02\\u01CB\\u01CC\\x05\" +\n    \"P)\\x02\\u01CC\\u01CD\\x07\\x17\\x02\\x02\\u01CD\\u01CF\\x03\\x02\\x02\\x02\\u01CE\\u01C9\" +\n    \"\\x03\\x02\\x02\\x02\\u01CE\\u01CA\\x03\\x02\\x02\\x02\\u01CF\\u01D2\\x03\\x02\\x02\\x02\" +\n    \"\\u01D0\\u01CE\\x03\\x02\\x02\\x02\\u01D0\\u01D1\\x03\\x02\\x02\\x02\\u01D1Q\\x03\\x02\" +\n    \"\\x02\\x02\\u01D2\\u01D0\\x03\\x02\\x02\\x02\\u01D3\\u01D5\\t\\r\\x02\\x02\\u01D4\\u01D6\" +\n    \"\\x05T+\\x02\\u01D5\\u01D4\\x03\\x02\\x02\\x02\\u01D5\\u01D6\\x03\\x02\\x02\\x02\\u01D6\" +\n    \"\\u01D8\\x03\\x02\\x02\\x02\\u01D7\\u01D3\\x03\\x02\\x02\\x02\\u01D8\\u01D9\\x03\\x02\" +\n    \"\\x02\\x02\\u01D9\\u01D7\\x03\\x02\\x02\\x02\\u01D9\\u01DA\\x03\\x02\\x02\\x02\\u01DA\" +\n    \"S\\x03\\x02\\x02\\x02\\u01DB\\u01DD\\x05H%\\x02\\u01DC\\u01DB\\x03\\x02\\x02\\x02\\u01DD\" +\n    \"\\u01DE\\x03\\x02\\x02\\x02\\u01DE\\u01DC\\x03\\x02\\x02\\x02\\u01DE\\u01DF\\x03\\x02\" +\n    \"\\x02\\x02\\u01DFU\\x03\\x02\\x02\\x02\\u01E0\\u01E2\\x05X-\\x02\\u01E1\\u01E3\\x07\" +\n    \"3\\x02\\x02\\u01E2\\u01E1\\x03\\x02\\x02\\x02\\u01E2\\u01E3\\x03\\x02\\x02\\x02\\u01E3\" +\n    \"W\\x03\\x02\\x02\\x02\\u01E4\\u01E9\\x05Z.\\x02\\u01E5\\u01E6\\x073\\x02\\x02\\u01E6\" +\n    \"\\u01E8\\x05Z.\\x02\\u01E7\\u01E5\\x03\\x02\\x02\\x02\\u01E8\\u01EB\\x03\\x02\\x02\\x02\" +\n    \"\\u01E9\\u01E7\\x03\\x02\\x02\\x02\\u01E9\\u01EA\\x03\\x02\\x02\\x02\\u01EAY\\x03\\x02\" +\n    \"\\x02\\x02\\u01EB\\u01E9\\x03\\x02\\x02\\x02\\u01EC\\u01ED\\x050\\x19\\x02\\u01ED\\u01EE\" +\n    \"\\x05L\\'\\x02\\u01EE\\u01F4\\x03\\x02\\x02\\x02\\u01EF\\u01F1\\x052\\x1A\\x02\\u01F0\" +\n    \"\\u01F2\\x05`1\\x02\\u01F1\\u01F0\\x03\\x02\\x02\\x02\\u01F1\\u01F2\\x03\\x02\\x02\\x02\" +\n    \"\\u01F2\\u01F4\\x03\\x02\\x02\\x02\\u01F3\\u01EC\\x03\\x02\\x02\\x02\\u01F3\\u01EF\\x03\" +\n    \"\\x02\\x02\\x02\\u01F4[\\x03\\x02\\x02\\x02\\u01F5\\u01FA\\x07C\\x02\\x02\\u01F6\\u01F7\" +\n    \"\\x073\\x02\\x02\\u01F7\\u01F9\\x07C\\x02\\x02\\u01F8\\u01F6\\x03\\x02\\x02\\x02\\u01F9\" +\n    \"\\u01FC\\x03\\x02\\x02\\x02\\u01FA\\u01F8\\x03\\x02\\x02\\x02\\u01FA\\u01FB\\x03\\x02\" +\n    \"\\x02\\x02\\u01FB]\\x03\\x02\\x02\\x02\\u01FC\\u01FA\\x03\\x02\\x02\\x02\\u01FD\\u01FF\" +\n    \"\\x05B\\\"\\x02\\u01FE\\u0200\\x05`1\\x02\\u01FF\\u01FE\\x03\\x02\\x02\\x02\\u01FF\\u0200\" +\n    \"\\x03\\x02\\x02\\x02\\u0200_\\x03\\x02\\x02\\x02\\u0201\\u0207\\x05R*\\x02\\u0202\\u0204\" +\n    \"\\x05R*\\x02\\u0203\\u0202\\x03\\x02\\x02\\x02\\u0203\\u0204\\x03\\x02\\x02\\x02\\u0204\" +\n    \"\\u0205\\x03\\x02\\x02\\x02\\u0205\\u0207\\x05b2\\x02\\u0206\\u0201\\x03\\x02\\x02\\x02\" +\n    \"\\u0206\\u0203\\x03\\x02\\x02\\x02\\u0207a\\x03\\x02\\x02\\x02\\u0208\\u0209\\b2\\x01\" +\n    \"\\x02\\u0209\\u020A\\x07\\x16\\x02\\x02\\u020A\\u020B\\x05`1\\x02\\u020B\\u020C\\x07\" +\n    \"\\x17\\x02\\x02\\u020C\\u021E\\x03\\x02\\x02\\x02\\u020D\\u020F\\x07\\x18\\x02\\x02\\u020E\" +\n    \"\\u0210\\x05T+\\x02\\u020F\\u020E\\x03\\x02\\x02\\x02\\u020F\\u0210\\x03\\x02\\x02\\x02\" +\n    \"\\u0210\\u0212\\x03\\x02\\x02\\x02\\u0211\\u0213\\x05&\\x14\\x02\\u0212\\u0211\\x03\" +\n    \"\\x02\\x02\\x02\\u0212\\u0213\\x03\\x02\\x02\\x02\\u0213\\u0214\\x03\\x02\\x02\\x02\\u0214\" +\n    \"\\u021E\\x07\\x19\\x02\\x02\";\nClangParser._serializedATNSegment1 = \"\\u0215\\u0216\\x07\\x18\\x02\\x02\\u0216\\u0217\\x07&\\x02\\x02\\u0217\\u021E\\x07\" +\n    \"\\x19\\x02\\x02\\u0218\\u021A\\x07\\x16\\x02\\x02\\u0219\\u021B\\x05V,\\x02\\u021A\\u0219\" +\n    \"\\x03\\x02\\x02\\x02\\u021A\\u021B\\x03\\x02\\x02\\x02\\u021B\\u021C\\x03\\x02\\x02\\x02\" +\n    \"\\u021C\\u021E\\x07\\x17\\x02\\x02\\u021D\\u0208\\x03\\x02\\x02\\x02\\u021D\\u020D\\x03\" +\n    \"\\x02\\x02\\x02\\u021D\\u0215\\x03\\x02\\x02\\x02\\u021D\\u0218\\x03\\x02\\x02\\x02\\u021E\" +\n    \"\\u0234\\x03\\x02\\x02\\x02\\u021F\\u0220\\f\\x05\\x02\\x02\\u0220\\u0222\\x07\\x18\\x02\" +\n    \"\\x02\\u0221\\u0223\\x05T+\\x02\\u0222\\u0221\\x03\\x02\\x02\\x02\\u0222\\u0223\\x03\" +\n    \"\\x02\\x02\\x02\\u0223\\u0225\\x03\\x02\\x02\\x02\\u0224\\u0226\\x05&\\x14\\x02\\u0225\" +\n    \"\\u0224\\x03\\x02\\x02\\x02\\u0225\\u0226\\x03\\x02\\x02\\x02\\u0226\\u0227\\x03\\x02\" +\n    \"\\x02\\x02\\u0227\\u0233\\x07\\x19\\x02\\x02\\u0228\\u0229\\f\\x04\\x02\\x02\\u0229\\u022A\" +\n    \"\\x07\\x18\\x02\\x02\\u022A\\u022B\\x07&\\x02\\x02\\u022B\\u0233\\x07\\x19\\x02\\x02\" +\n    \"\\u022C\\u022D\\f\\x03\\x02\\x02\\u022D\\u022F\\x07\\x16\\x02\\x02\\u022E\\u0230\\x05\" +\n    \"V,\\x02\\u022F\\u022E\\x03\\x02\\x02\\x02\\u022F\\u0230\\x03\\x02\\x02\\x02\\u0230\\u0231\" +\n    \"\\x03\\x02\\x02\\x02\\u0231\\u0233\\x07\\x17\\x02\\x02\\u0232\\u021F\\x03\\x02\\x02\\x02\" +\n    \"\\u0232\\u0228\\x03\\x02\\x02\\x02\\u0232\\u022C\\x03\\x02\\x02\\x02\\u0233\\u0236\\x03\" +\n    \"\\x02\\x02\\x02\\u0234\\u0232\\x03\\x02\\x02\\x02\\u0234\\u0235\\x03\\x02\\x02\\x02\\u0235\" +\n    \"c\\x03\\x02\\x02\\x02\\u0236\\u0234\\x03\\x02\\x02\\x02\\u0237\\u0238\\x07C\\x02\\x02\" +\n    \"\\u0238e\\x03\\x02\\x02\\x02\\u0239\\u0242\\x05&\\x14\\x02\\u023A\\u023B\\x07\\x1A\\x02\" +\n    \"\\x02\\u023B\\u023D\\x05h5\\x02\\u023C\\u023E\\x073\\x02\\x02\\u023D\\u023C\\x03\\x02\" +\n    \"\\x02\\x02\\u023D\\u023E\\x03\\x02\\x02\\x02\\u023E\\u023F\\x03\\x02\\x02\\x02\\u023F\" +\n    \"\\u0240\\x07\\x1B\\x02\\x02\\u0240\\u0242\\x03\\x02\\x02\\x02\\u0241\\u0239\\x03\\x02\" +\n    \"\\x02\\x02\\u0241\\u023A\\x03\\x02\\x02\\x02\\u0242g\\x03\\x02\\x02\\x02\\u0243\\u0245\" +\n    \"\\x05j6\\x02\\u0244\\u0243\\x03\\x02\\x02\\x02\\u0244\\u0245\\x03\\x02\\x02\\x02\\u0245\" +\n    \"\\u0246\\x03\\x02\\x02\\x02\\u0246\\u024E\\x05f4\\x02\\u0247\\u0249\\x073\\x02\\x02\" +\n    \"\\u0248\\u024A\\x05j6\\x02\\u0249\\u0248\\x03\\x02\\x02\\x02\\u0249\\u024A\\x03\\x02\" +\n    \"\\x02\\x02\\u024A\\u024B\\x03\\x02\\x02\\x02\\u024B\\u024D\\x05f4\\x02\\u024C\\u0247\" +\n    \"\\x03\\x02\\x02\\x02\\u024D\\u0250\\x03\\x02\\x02\\x02\\u024E\\u024C\\x03\\x02\\x02\\x02\" +\n    \"\\u024E\\u024F\\x03\\x02\\x02\\x02\\u024Fi\\x03\\x02\\x02\\x02\\u0250\\u024E\\x03\\x02\" +\n    \"\\x02\\x02\\u0251\\u0252\\x05l7\\x02\\u0252\\u0253\\x074\\x02\\x02\\u0253k\\x03\\x02\" +\n    \"\\x02\\x02\\u0254\\u0256\\x05n8\\x02\\u0255\\u0254\\x03\\x02\\x02\\x02\\u0256\\u0257\" +\n    \"\\x03\\x02\\x02\\x02\\u0257\\u0255\\x03\\x02\\x02\\x02\\u0257\\u0258\\x03\\x02\\x02\\x02\" +\n    \"\\u0258m\\x03\\x02\\x02\\x02\\u0259\\u025A\\x07\\x18\\x02\\x02\\u025A\\u025B\\x05,\\x17\" +\n    \"\\x02\\u025B\\u025C\\x07\\x19\\x02\\x02\\u025C\\u0260\\x03\\x02\\x02\\x02\\u025D\\u025E\" +\n    \"\\x07B\\x02\\x02\\u025E\\u0260\\x07C\\x02\\x02\\u025F\\u0259\\x03\\x02\\x02\\x02\\u025F\" +\n    \"\\u025D\\x03\\x02\\x02\\x02\\u0260o\\x03\\x02\\x02\\x02\\u0261\\u0266\\x05r:\\x02\\u0262\" +\n    \"\\u0266\\x05x=\\x02\\u0263\\u0266\\x05z>\\x02\\u0264\\u0266\\x05|?\\x02\\u0265\\u0261\" +\n    \"\\x03\\x02\\x02\\x02\\u0265\\u0262\\x03\\x02\\x02\\x02\\u0265\\u0263\\x03\\x02\\x02\\x02\" +\n    \"\\u0265\\u0264\\x03\\x02\\x02\\x02\\u0266q\\x03\\x02\\x02\\x02\\u0267\\u0269\\x07\\x1A\" +\n    \"\\x02\\x02\\u0268\\u026A\\x05t;\\x02\\u0269\\u0268\\x03\\x02\\x02\\x02\\u0269\\u026A\" +\n    \"\\x03\\x02\\x02\\x02\\u026A\\u026B\\x03\\x02\\x02\\x02\\u026B\\u026C\\x07\\x1B\\x02\\x02\" +\n    \"\\u026Cs\\x03\\x02\\x02\\x02\\u026D\\u026F\\x05v<\\x02\\u026E\\u026D\\x03\\x02\\x02\" +\n    \"\\x02\\u026F\\u0270\\x03\\x02\\x02\\x02\\u0270\\u026E\\x03\\x02\\x02\\x02\\u0270\\u0271\" +\n    \"\\x03\\x02\\x02\\x02\\u0271u\\x03\\x02\\x02\\x02\\u0272\\u0275\\x05p9\\x02\\u0273\\u0275\" +\n    \"\\x05.\\x18\\x02\\u0274\\u0272\\x03\\x02\\x02\\x02\\u0274\\u0273\\x03\\x02\\x02\\x02\" +\n    \"\\u0275w\\x03\\x02\\x02\\x02\\u0276\\u0278\\x05*\\x16\\x02\\u0277\\u0276\\x03\\x02\\x02\" +\n    \"\\x02\\u0277\\u0278\\x03\\x02\\x02\\x02\\u0278\\u0279\\x03\\x02\\x02\\x02\\u0279\\u027A\" +\n    \"\\x072\\x02\\x02\\u027Ay\\x03\\x02\\x02\\x02\\u027B\\u027C\\x07\\r\\x02\\x02\\u027C\\u027D\" +\n    \"\\x07\\x16\\x02\\x02\\u027D\\u027E\\x05*\\x16\\x02\\u027E\\u027F\\x07\\x17\\x02\\x02\" +\n    \"\\u027F\\u0282\\x05p9\\x02\\u0280\\u0281\\x07\\n\\x02\\x02\\u0281\\u0283\\x05p9\\x02\" +\n    \"\\u0282\\u0280\\x03\\x02\\x02\\x02\\u0282\\u0283\\x03\\x02\\x02\\x02\\u0283{\\x03\\x02\" +\n    \"\\x02\\x02\\u0284\\u0285\\x07\\x15\\x02\\x02\\u0285\\u0286\\x07\\x16\\x02\\x02\\u0286\" +\n    \"\\u0287\\x05*\\x16\\x02\\u0287\\u0288\\x07\\x17\\x02\\x02\\u0288\\u0289\\x05p9\\x02\" +\n    \"\\u0289\\u0299\\x03\\x02\\x02\\x02\\u028A\\u028B\\x07\\t\\x02\\x02\\u028B\\u028C\\x05\" +\n    \"p9\\x02\\u028C\\u028D\\x07\\x15\\x02\\x02\\u028D\\u028E\\x07\\x16\\x02\\x02\\u028E\\u028F\" +\n    \"\\x05*\\x16\\x02\\u028F\\u0290\\x07\\x17\\x02\\x02\\u0290\\u0291\\x072\\x02\\x02\\u0291\" +\n    \"\\u0299\\x03\\x02\\x02\\x02\\u0292\\u0293\\x07\\f\\x02\\x02\\u0293\\u0294\\x07\\x16\\x02\" +\n    \"\\x02\\u0294\\u0295\\x05~@\\x02\\u0295\\u0296\\x07\\x17\\x02\\x02\\u0296\\u0297\\x05\" +\n    \"p9\\x02\\u0297\\u0299\\x03\\x02\\x02\\x02\\u0298\\u0284\\x03\\x02\\x02\\x02\\u0298\\u028A\" +\n    \"\\x03\\x02\\x02\\x02\\u0298\\u0292\\x03\\x02\\x02\\x02\\u0299}\\x03\\x02\\x02\\x02\\u029A\" +\n    \"\\u029F\\x05\\x80A\\x02\\u029B\\u029D\\x05*\\x16\\x02\\u029C\\u029B\\x03\\x02\\x02\\x02\" +\n    \"\\u029C\\u029D\\x03\\x02\\x02\\x02\\u029D\\u029F\\x03\\x02\\x02\\x02\\u029E\\u029A\\x03\" +\n    \"\\x02\\x02\\x02\\u029E\\u029C\\x03\\x02\\x02\\x02\\u029F\\u02A0\\x03\\x02\\x02\\x02\\u02A0\" +\n    \"\\u02A2\\x072\\x02\\x02\\u02A1\\u02A3\\x05\\x82B\\x02\\u02A2\\u02A1\\x03\\x02\\x02\\x02\" +\n    \"\\u02A2\\u02A3\\x03\\x02\\x02\\x02\\u02A3\\u02A4\\x03\\x02\\x02\\x02\\u02A4\\u02A6\\x07\" +\n    \"2\\x02\\x02\\u02A5\\u02A7\\x05\\x82B\\x02\\u02A6\\u02A5\\x03\\x02\\x02\\x02\\u02A6\\u02A7\" +\n    \"\\x03\\x02\\x02\\x02\\u02A7\\x7F\\x03\\x02\\x02\\x02\\u02A8\\u02AA\\x050\\x19\\x02\\u02A9\" +\n    \"\\u02AB\\x056\\x1C\\x02\\u02AA\\u02A9\\x03\\x02\\x02\\x02\\u02AA\\u02AB\\x03\\x02\\x02\" +\n    \"\\x02\\u02AB\\x81\\x03\\x02\\x02\\x02\\u02AC\\u02B1\\x05&\\x14\\x02\\u02AD\\u02AE\\x07\" +\n    \"3\\x02\\x02\\u02AE\\u02B0\\x05&\\x14\\x02\\u02AF\\u02AD\\x03\\x02\\x02\\x02\\u02B0\\u02B3\" +\n    \"\\x03\\x02\\x02\\x02\\u02B1\\u02AF\\x03\\x02\\x02\\x02\\u02B1\\u02B2\\x03\\x02\\x02\\x02\" +\n    \"\\u02B2\\x83\\x03\\x02\\x02\\x02\\u02B3\\u02B1\\x03\\x02\\x02\\x02\\u02B4\\u02B6\\x05\" +\n    \"\\x86D\\x02\\u02B5\\u02B4\\x03\\x02\\x02\\x02\\u02B5\\u02B6\\x03\\x02\\x02\\x02\\u02B6\" +\n    \"\\u02B7\\x03\\x02\\x02\\x02\\u02B7\\u02B8\\x07\\x02\\x02\\x03\\u02B8\\x85\\x03\\x02\\x02\" +\n    \"\\x02\\u02B9\\u02BB\\x05\\x88E\\x02\\u02BA\\u02B9\\x03\\x02\\x02\\x02\\u02BB\\u02BC\" +\n    \"\\x03\\x02\\x02\\x02\\u02BC\\u02BA\\x03\\x02\\x02\\x02\\u02BC\\u02BD\\x03\\x02\\x02\\x02\" +\n    \"\\u02BD\\x87\\x03\\x02\\x02\\x02\\u02BE\\u02C2\\x05\\x8AF\\x02\\u02BF\\u02C2\\x05.\\x18\" +\n    \"\\x02\\u02C0\\u02C2\\x072\\x02\\x02\\u02C1\\u02BE\\x03\\x02\\x02\\x02\\u02C1\\u02BF\" +\n    \"\\x03\\x02\\x02\\x02\\u02C1\\u02C0\\x03\\x02\\x02\\x02\\u02C2\\x89\\x03\\x02\\x02\\x02\" +\n    \"\\u02C3\\u02C5\\x050\\x19\\x02\\u02C4\\u02C3\\x03\\x02\\x02\\x02\\u02C4\\u02C5\\x03\" +\n    \"\\x02\\x02\\x02\\u02C5\\u02C6\\x03\\x02\\x02\\x02\\u02C6\\u02C8\\x05L\\'\\x02\\u02C7\" +\n    \"\\u02C9\\x05\\x8CG\\x02\\u02C8\\u02C7\\x03\\x02\\x02\\x02\\u02C8\\u02C9\\x03\\x02\\x02\" +\n    \"\\x02\\u02C9\\u02CA\\x03\\x02\\x02\\x02\\u02CA\\u02CB\\x05r:\\x02\\u02CB\\x8B\\x03\\x02\" +\n    \"\\x02\\x02\\u02CC\\u02CE\\x05.\\x18\\x02\\u02CD\\u02CC\\x03\\x02\\x02\\x02\\u02CE\\u02CF\" +\n    \"\\x03\\x02\\x02\\x02\\u02CF\\u02CD\\x03\\x02\\x02\\x02\\u02CF\\u02D0\\x03\\x02\\x02\\x02\" +\n    \"\\u02D0\\x8D\\x03\\x02\\x02\\x02a\\x95\\x9B\\xA4\\xAA\\xAC\\xB4\\xBA\\xC1\\xC6\\xCF\\xD6\" +\n    \"\\xDE\\xE6\\xEE\\xF6\\xFE\\u0106\\u010E\\u0116\\u011E\\u0127\\u012F\\u0138\\u013F\\u0146\" +\n    \"\\u014B\\u0150\\u0157\\u015D\\u0162\\u0166\\u016E\\u0173\\u017C\\u0180\\u0183\\u018A\" +\n    \"\\u018F\\u0193\\u019A\\u01A7\\u01AC\\u01AF\\u01B5\\u01C1\\u01C4\\u01C6\\u01CE\\u01D0\" +\n    \"\\u01D5\\u01D9\\u01DE\\u01E2\\u01E9\\u01F1\\u01F3\\u01FA\\u01FF\\u0203\\u0206\\u020F\" +\n    \"\\u0212\\u021A\\u021D\\u0222\\u0225\\u022F\\u0232\\u0234\\u023D\\u0241\\u0244\\u0249\" +\n    \"\\u024E\\u0257\\u025F\\u0265\\u0269\\u0270\\u0274\\u0277\\u0282\\u0298\\u029C\\u029E\" +\n    \"\\u02A2\\u02A6\\u02AA\\u02B1\\u02B5\\u02BC\\u02C1\\u02C4\\u02C8\\u02CF\";\nClangParser._serializedATN = Utils.join([\n    ClangParser._serializedATNSegment0,\n    ClangParser._serializedATNSegment1,\n], \"\");\nclass StartContext extends ParserRuleContext_1.ParserRuleContext {\n    primaryExpression() {\n        return this.getRuleContext(0, PrimaryExpressionContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_start; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterStart) {\n            listener.enterStart(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitStart) {\n            listener.exitStart(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitStart) {\n            return visitor.visitStart(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.StartContext = StartContext;\nclass PrimaryExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    Identifier() { return this.tryGetToken(ClangParser.Identifier, 0); }\n    Constant() { return this.tryGetToken(ClangParser.Constant, 0); }\n    StringLiteral(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.StringLiteral);\n        }\n        else {\n            return this.getToken(ClangParser.StringLiteral, i);\n        }\n    }\n    LeftParen() { return this.tryGetToken(ClangParser.LeftParen, 0); }\n    expression() {\n        return this.tryGetRuleContext(0, ExpressionContext);\n    }\n    RightParen() { return this.tryGetToken(ClangParser.RightParen, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_primaryExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterPrimaryExpression) {\n            listener.enterPrimaryExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitPrimaryExpression) {\n            listener.exitPrimaryExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitPrimaryExpression) {\n            return visitor.visitPrimaryExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.PrimaryExpressionContext = PrimaryExpressionContext;\nclass PostfixExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    primaryExpression() {\n        return this.tryGetRuleContext(0, PrimaryExpressionContext);\n    }\n    LeftBracket(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.LeftBracket);\n        }\n        else {\n            return this.getToken(ClangParser.LeftBracket, i);\n        }\n    }\n    expression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(ExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, ExpressionContext);\n        }\n    }\n    RightBracket(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.RightBracket);\n        }\n        else {\n            return this.getToken(ClangParser.RightBracket, i);\n        }\n    }\n    LeftParen(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.LeftParen);\n        }\n        else {\n            return this.getToken(ClangParser.LeftParen, i);\n        }\n    }\n    RightParen(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.RightParen);\n        }\n        else {\n            return this.getToken(ClangParser.RightParen, i);\n        }\n    }\n    Identifier(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Identifier);\n        }\n        else {\n            return this.getToken(ClangParser.Identifier, i);\n        }\n    }\n    Dot(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Dot);\n        }\n        else {\n            return this.getToken(ClangParser.Dot, i);\n        }\n    }\n    Arrow(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Arrow);\n        }\n        else {\n            return this.getToken(ClangParser.Arrow, i);\n        }\n    }\n    PlusPlus(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.PlusPlus);\n        }\n        else {\n            return this.getToken(ClangParser.PlusPlus, i);\n        }\n    }\n    MinusMinus(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.MinusMinus);\n        }\n        else {\n            return this.getToken(ClangParser.MinusMinus, i);\n        }\n    }\n    argumentExpressionList(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(ArgumentExpressionListContext);\n        }\n        else {\n            return this.getRuleContext(i, ArgumentExpressionListContext);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_postfixExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterPostfixExpression) {\n            listener.enterPostfixExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitPostfixExpression) {\n            listener.exitPostfixExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitPostfixExpression) {\n            return visitor.visitPostfixExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.PostfixExpressionContext = PostfixExpressionContext;\nclass ArgumentExpressionListContext extends ParserRuleContext_1.ParserRuleContext {\n    assignmentExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(AssignmentExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, AssignmentExpressionContext);\n        }\n    }\n    Comma(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Comma);\n        }\n        else {\n            return this.getToken(ClangParser.Comma, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_argumentExpressionList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterArgumentExpressionList) {\n            listener.enterArgumentExpressionList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitArgumentExpressionList) {\n            listener.exitArgumentExpressionList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitArgumentExpressionList) {\n            return visitor.visitArgumentExpressionList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ArgumentExpressionListContext = ArgumentExpressionListContext;\nclass UnaryExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    postfixExpression() {\n        return this.tryGetRuleContext(0, PostfixExpressionContext);\n    }\n    unaryOperator() {\n        return this.tryGetRuleContext(0, UnaryOperatorContext);\n    }\n    castExpression() {\n        return this.tryGetRuleContext(0, CastExpressionContext);\n    }\n    PlusPlus(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.PlusPlus);\n        }\n        else {\n            return this.getToken(ClangParser.PlusPlus, i);\n        }\n    }\n    MinusMinus(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.MinusMinus);\n        }\n        else {\n            return this.getToken(ClangParser.MinusMinus, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_unaryExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterUnaryExpression) {\n            listener.enterUnaryExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitUnaryExpression) {\n            listener.exitUnaryExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitUnaryExpression) {\n            return visitor.visitUnaryExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.UnaryExpressionContext = UnaryExpressionContext;\nclass UnaryOperatorContext extends ParserRuleContext_1.ParserRuleContext {\n    And() { return this.tryGetToken(ClangParser.And, 0); }\n    Star() { return this.tryGetToken(ClangParser.Star, 0); }\n    Plus() { return this.tryGetToken(ClangParser.Plus, 0); }\n    Minus() { return this.tryGetToken(ClangParser.Minus, 0); }\n    Not() { return this.tryGetToken(ClangParser.Not, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_unaryOperator; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterUnaryOperator) {\n            listener.enterUnaryOperator(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitUnaryOperator) {\n            listener.exitUnaryOperator(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitUnaryOperator) {\n            return visitor.visitUnaryOperator(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.UnaryOperatorContext = UnaryOperatorContext;\nclass CastExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    LeftParen() { return this.tryGetToken(ClangParser.LeftParen, 0); }\n    typeName() {\n        return this.tryGetRuleContext(0, TypeNameContext);\n    }\n    RightParen() { return this.tryGetToken(ClangParser.RightParen, 0); }\n    castExpression() {\n        return this.tryGetRuleContext(0, CastExpressionContext);\n    }\n    unaryExpression() {\n        return this.tryGetRuleContext(0, UnaryExpressionContext);\n    }\n    DigitSequence() { return this.tryGetToken(ClangParser.DigitSequence, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_castExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterCastExpression) {\n            listener.enterCastExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitCastExpression) {\n            listener.exitCastExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitCastExpression) {\n            return visitor.visitCastExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.CastExpressionContext = CastExpressionContext;\nclass MultiplicativeExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    castExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(CastExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, CastExpressionContext);\n        }\n    }\n    Star(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Star);\n        }\n        else {\n            return this.getToken(ClangParser.Star, i);\n        }\n    }\n    Div(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Div);\n        }\n        else {\n            return this.getToken(ClangParser.Div, i);\n        }\n    }\n    Mod(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Mod);\n        }\n        else {\n            return this.getToken(ClangParser.Mod, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_multiplicativeExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterMultiplicativeExpression) {\n            listener.enterMultiplicativeExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitMultiplicativeExpression) {\n            listener.exitMultiplicativeExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitMultiplicativeExpression) {\n            return visitor.visitMultiplicativeExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.MultiplicativeExpressionContext = MultiplicativeExpressionContext;\nclass AdditiveExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    multiplicativeExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(MultiplicativeExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, MultiplicativeExpressionContext);\n        }\n    }\n    Plus(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Plus);\n        }\n        else {\n            return this.getToken(ClangParser.Plus, i);\n        }\n    }\n    Minus(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Minus);\n        }\n        else {\n            return this.getToken(ClangParser.Minus, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_additiveExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterAdditiveExpression) {\n            listener.enterAdditiveExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitAdditiveExpression) {\n            listener.exitAdditiveExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitAdditiveExpression) {\n            return visitor.visitAdditiveExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.AdditiveExpressionContext = AdditiveExpressionContext;\nclass ShiftExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    additiveExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(AdditiveExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, AdditiveExpressionContext);\n        }\n    }\n    LeftShift(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.LeftShift);\n        }\n        else {\n            return this.getToken(ClangParser.LeftShift, i);\n        }\n    }\n    RightShift(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.RightShift);\n        }\n        else {\n            return this.getToken(ClangParser.RightShift, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_shiftExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterShiftExpression) {\n            listener.enterShiftExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitShiftExpression) {\n            listener.exitShiftExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitShiftExpression) {\n            return visitor.visitShiftExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ShiftExpressionContext = ShiftExpressionContext;\nclass RelationalExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    shiftExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(ShiftExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, ShiftExpressionContext);\n        }\n    }\n    Less(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Less);\n        }\n        else {\n            return this.getToken(ClangParser.Less, i);\n        }\n    }\n    Greater(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Greater);\n        }\n        else {\n            return this.getToken(ClangParser.Greater, i);\n        }\n    }\n    LessEqual(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.LessEqual);\n        }\n        else {\n            return this.getToken(ClangParser.LessEqual, i);\n        }\n    }\n    GreaterEqual(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.GreaterEqual);\n        }\n        else {\n            return this.getToken(ClangParser.GreaterEqual, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_relationalExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterRelationalExpression) {\n            listener.enterRelationalExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitRelationalExpression) {\n            listener.exitRelationalExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitRelationalExpression) {\n            return visitor.visitRelationalExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.RelationalExpressionContext = RelationalExpressionContext;\nclass EqualityExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    relationalExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(RelationalExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, RelationalExpressionContext);\n        }\n    }\n    Equal(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Equal);\n        }\n        else {\n            return this.getToken(ClangParser.Equal, i);\n        }\n    }\n    NotEqual(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.NotEqual);\n        }\n        else {\n            return this.getToken(ClangParser.NotEqual, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_equalityExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterEqualityExpression) {\n            listener.enterEqualityExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitEqualityExpression) {\n            listener.exitEqualityExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitEqualityExpression) {\n            return visitor.visitEqualityExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.EqualityExpressionContext = EqualityExpressionContext;\nclass AndExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    equalityExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(EqualityExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, EqualityExpressionContext);\n        }\n    }\n    And(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.And);\n        }\n        else {\n            return this.getToken(ClangParser.And, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_andExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterAndExpression) {\n            listener.enterAndExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitAndExpression) {\n            listener.exitAndExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitAndExpression) {\n            return visitor.visitAndExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.AndExpressionContext = AndExpressionContext;\nclass ExclusiveOrExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    andExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(AndExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, AndExpressionContext);\n        }\n    }\n    Caret(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Caret);\n        }\n        else {\n            return this.getToken(ClangParser.Caret, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_exclusiveOrExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterExclusiveOrExpression) {\n            listener.enterExclusiveOrExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitExclusiveOrExpression) {\n            listener.exitExclusiveOrExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitExclusiveOrExpression) {\n            return visitor.visitExclusiveOrExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ExclusiveOrExpressionContext = ExclusiveOrExpressionContext;\nclass InclusiveOrExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    exclusiveOrExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(ExclusiveOrExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, ExclusiveOrExpressionContext);\n        }\n    }\n    Or(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Or);\n        }\n        else {\n            return this.getToken(ClangParser.Or, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_inclusiveOrExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterInclusiveOrExpression) {\n            listener.enterInclusiveOrExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitInclusiveOrExpression) {\n            listener.exitInclusiveOrExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitInclusiveOrExpression) {\n            return visitor.visitInclusiveOrExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.InclusiveOrExpressionContext = InclusiveOrExpressionContext;\nclass LogicalAndExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    inclusiveOrExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(InclusiveOrExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, InclusiveOrExpressionContext);\n        }\n    }\n    AndAnd(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.AndAnd);\n        }\n        else {\n            return this.getToken(ClangParser.AndAnd, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_logicalAndExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterLogicalAndExpression) {\n            listener.enterLogicalAndExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitLogicalAndExpression) {\n            listener.exitLogicalAndExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitLogicalAndExpression) {\n            return visitor.visitLogicalAndExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.LogicalAndExpressionContext = LogicalAndExpressionContext;\nclass LogicalOrExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    logicalAndExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(LogicalAndExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, LogicalAndExpressionContext);\n        }\n    }\n    OrOr(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.OrOr);\n        }\n        else {\n            return this.getToken(ClangParser.OrOr, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_logicalOrExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterLogicalOrExpression) {\n            listener.enterLogicalOrExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitLogicalOrExpression) {\n            listener.exitLogicalOrExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitLogicalOrExpression) {\n            return visitor.visitLogicalOrExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.LogicalOrExpressionContext = LogicalOrExpressionContext;\nclass ConditionalExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    logicalOrExpression() {\n        return this.getRuleContext(0, LogicalOrExpressionContext);\n    }\n    Question() { return this.tryGetToken(ClangParser.Question, 0); }\n    expression() {\n        return this.tryGetRuleContext(0, ExpressionContext);\n    }\n    Colon() { return this.tryGetToken(ClangParser.Colon, 0); }\n    conditionalExpression() {\n        return this.tryGetRuleContext(0, ConditionalExpressionContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_conditionalExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterConditionalExpression) {\n            listener.enterConditionalExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitConditionalExpression) {\n            listener.exitConditionalExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitConditionalExpression) {\n            return visitor.visitConditionalExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ConditionalExpressionContext = ConditionalExpressionContext;\nclass AssignmentExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    conditionalExpression() {\n        return this.tryGetRuleContext(0, ConditionalExpressionContext);\n    }\n    unaryExpression() {\n        return this.tryGetRuleContext(0, UnaryExpressionContext);\n    }\n    assignmentOperator() {\n        return this.tryGetRuleContext(0, AssignmentOperatorContext);\n    }\n    assignmentExpression() {\n        return this.tryGetRuleContext(0, AssignmentExpressionContext);\n    }\n    DigitSequence() { return this.tryGetToken(ClangParser.DigitSequence, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_assignmentExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterAssignmentExpression) {\n            listener.enterAssignmentExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitAssignmentExpression) {\n            listener.exitAssignmentExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitAssignmentExpression) {\n            return visitor.visitAssignmentExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.AssignmentExpressionContext = AssignmentExpressionContext;\nclass AssignmentOperatorContext extends ParserRuleContext_1.ParserRuleContext {\n    Assign() { return this.tryGetToken(ClangParser.Assign, 0); }\n    StarAssign() { return this.tryGetToken(ClangParser.StarAssign, 0); }\n    DivAssign() { return this.tryGetToken(ClangParser.DivAssign, 0); }\n    ModAssign() { return this.tryGetToken(ClangParser.ModAssign, 0); }\n    PlusAssign() { return this.tryGetToken(ClangParser.PlusAssign, 0); }\n    MinusAssign() { return this.tryGetToken(ClangParser.MinusAssign, 0); }\n    LeftShiftAssign() { return this.tryGetToken(ClangParser.LeftShiftAssign, 0); }\n    RightShiftAssign() { return this.tryGetToken(ClangParser.RightShiftAssign, 0); }\n    AndAssign() { return this.tryGetToken(ClangParser.AndAssign, 0); }\n    XorAssign() { return this.tryGetToken(ClangParser.XorAssign, 0); }\n    OrAssign() { return this.tryGetToken(ClangParser.OrAssign, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_assignmentOperator; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterAssignmentOperator) {\n            listener.enterAssignmentOperator(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitAssignmentOperator) {\n            listener.exitAssignmentOperator(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitAssignmentOperator) {\n            return visitor.visitAssignmentOperator(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.AssignmentOperatorContext = AssignmentOperatorContext;\nclass ExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    assignmentExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(AssignmentExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, AssignmentExpressionContext);\n        }\n    }\n    Comma(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Comma);\n        }\n        else {\n            return this.getToken(ClangParser.Comma, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_expression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterExpression) {\n            listener.enterExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitExpression) {\n            listener.exitExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitExpression) {\n            return visitor.visitExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ExpressionContext = ExpressionContext;\nclass ConstantExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    conditionalExpression() {\n        return this.getRuleContext(0, ConditionalExpressionContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_constantExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterConstantExpression) {\n            listener.enterConstantExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitConstantExpression) {\n            listener.exitConstantExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitConstantExpression) {\n            return visitor.visitConstantExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ConstantExpressionContext = ConstantExpressionContext;\nclass DeclarationContext extends ParserRuleContext_1.ParserRuleContext {\n    declarationSpecifiers() {\n        return this.getRuleContext(0, DeclarationSpecifiersContext);\n    }\n    Semi() { return this.getToken(ClangParser.Semi, 0); }\n    initDeclaratorList() {\n        return this.tryGetRuleContext(0, InitDeclaratorListContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_declaration; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterDeclaration) {\n            listener.enterDeclaration(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitDeclaration) {\n            listener.exitDeclaration(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitDeclaration) {\n            return visitor.visitDeclaration(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.DeclarationContext = DeclarationContext;\nclass DeclarationSpecifiersContext extends ParserRuleContext_1.ParserRuleContext {\n    declarationSpecifier(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(DeclarationSpecifierContext);\n        }\n        else {\n            return this.getRuleContext(i, DeclarationSpecifierContext);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_declarationSpecifiers; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterDeclarationSpecifiers) {\n            listener.enterDeclarationSpecifiers(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitDeclarationSpecifiers) {\n            listener.exitDeclarationSpecifiers(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitDeclarationSpecifiers) {\n            return visitor.visitDeclarationSpecifiers(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.DeclarationSpecifiersContext = DeclarationSpecifiersContext;\nclass DeclarationSpecifiers2Context extends ParserRuleContext_1.ParserRuleContext {\n    declarationSpecifier(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(DeclarationSpecifierContext);\n        }\n        else {\n            return this.getRuleContext(i, DeclarationSpecifierContext);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_declarationSpecifiers2; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterDeclarationSpecifiers2) {\n            listener.enterDeclarationSpecifiers2(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitDeclarationSpecifiers2) {\n            listener.exitDeclarationSpecifiers2(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitDeclarationSpecifiers2) {\n            return visitor.visitDeclarationSpecifiers2(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.DeclarationSpecifiers2Context = DeclarationSpecifiers2Context;\nclass DeclarationSpecifierContext extends ParserRuleContext_1.ParserRuleContext {\n    typeSpecifier() {\n        return this.tryGetRuleContext(0, TypeSpecifierContext);\n    }\n    typeQualifier() {\n        return this.tryGetRuleContext(0, TypeQualifierContext);\n    }\n    functionSpecifier() {\n        return this.tryGetRuleContext(0, FunctionSpecifierContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_declarationSpecifier; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterDeclarationSpecifier) {\n            listener.enterDeclarationSpecifier(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitDeclarationSpecifier) {\n            listener.exitDeclarationSpecifier(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitDeclarationSpecifier) {\n            return visitor.visitDeclarationSpecifier(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.DeclarationSpecifierContext = DeclarationSpecifierContext;\nclass InitDeclaratorListContext extends ParserRuleContext_1.ParserRuleContext {\n    initDeclarator(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(InitDeclaratorContext);\n        }\n        else {\n            return this.getRuleContext(i, InitDeclaratorContext);\n        }\n    }\n    Comma(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Comma);\n        }\n        else {\n            return this.getToken(ClangParser.Comma, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_initDeclaratorList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterInitDeclaratorList) {\n            listener.enterInitDeclaratorList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitInitDeclaratorList) {\n            listener.exitInitDeclaratorList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitInitDeclaratorList) {\n            return visitor.visitInitDeclaratorList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.InitDeclaratorListContext = InitDeclaratorListContext;\nclass InitDeclaratorContext extends ParserRuleContext_1.ParserRuleContext {\n    declarator() {\n        return this.getRuleContext(0, DeclaratorContext);\n    }\n    Assign() { return this.tryGetToken(ClangParser.Assign, 0); }\n    initializer() {\n        return this.tryGetRuleContext(0, InitializerContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_initDeclarator; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterInitDeclarator) {\n            listener.enterInitDeclarator(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitInitDeclarator) {\n            listener.exitInitDeclarator(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitInitDeclarator) {\n            return visitor.visitInitDeclarator(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.InitDeclaratorContext = InitDeclaratorContext;\nclass TypeSpecifierContext extends ParserRuleContext_1.ParserRuleContext {\n    Void() { return this.tryGetToken(ClangParser.Void, 0); }\n    Char() { return this.tryGetToken(ClangParser.Char, 0); }\n    Int() { return this.tryGetToken(ClangParser.Int, 0); }\n    Float() { return this.tryGetToken(ClangParser.Float, 0); }\n    Signed() { return this.tryGetToken(ClangParser.Signed, 0); }\n    Unsigned() { return this.tryGetToken(ClangParser.Unsigned, 0); }\n    structSpecifier() {\n        return this.tryGetRuleContext(0, StructSpecifierContext);\n    }\n    typedefName() {\n        return this.tryGetRuleContext(0, TypedefNameContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_typeSpecifier; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterTypeSpecifier) {\n            listener.enterTypeSpecifier(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitTypeSpecifier) {\n            listener.exitTypeSpecifier(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitTypeSpecifier) {\n            return visitor.visitTypeSpecifier(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.TypeSpecifierContext = TypeSpecifierContext;\nclass StructSpecifierContext extends ParserRuleContext_1.ParserRuleContext {\n    Struct() { return this.getToken(ClangParser.Struct, 0); }\n    LeftBrace() { return this.tryGetToken(ClangParser.LeftBrace, 0); }\n    structDeclarationList() {\n        return this.tryGetRuleContext(0, StructDeclarationListContext);\n    }\n    RightBrace() { return this.tryGetToken(ClangParser.RightBrace, 0); }\n    Identifier() { return this.tryGetToken(ClangParser.Identifier, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_structSpecifier; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterStructSpecifier) {\n            listener.enterStructSpecifier(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitStructSpecifier) {\n            listener.exitStructSpecifier(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitStructSpecifier) {\n            return visitor.visitStructSpecifier(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.StructSpecifierContext = StructSpecifierContext;\nclass StructDeclarationListContext extends ParserRuleContext_1.ParserRuleContext {\n    structDeclaration(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(StructDeclarationContext);\n        }\n        else {\n            return this.getRuleContext(i, StructDeclarationContext);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_structDeclarationList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterStructDeclarationList) {\n            listener.enterStructDeclarationList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitStructDeclarationList) {\n            listener.exitStructDeclarationList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitStructDeclarationList) {\n            return visitor.visitStructDeclarationList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.StructDeclarationListContext = StructDeclarationListContext;\nclass StructDeclarationContext extends ParserRuleContext_1.ParserRuleContext {\n    specifierQualifierList() {\n        return this.getRuleContext(0, SpecifierQualifierListContext);\n    }\n    structDeclaratorList() {\n        return this.tryGetRuleContext(0, StructDeclaratorListContext);\n    }\n    Semi() { return this.getToken(ClangParser.Semi, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_structDeclaration; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterStructDeclaration) {\n            listener.enterStructDeclaration(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitStructDeclaration) {\n            listener.exitStructDeclaration(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitStructDeclaration) {\n            return visitor.visitStructDeclaration(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.StructDeclarationContext = StructDeclarationContext;\nclass SpecifierQualifierListContext extends ParserRuleContext_1.ParserRuleContext {\n    typeSpecifier() {\n        return this.tryGetRuleContext(0, TypeSpecifierContext);\n    }\n    typeQualifier() {\n        return this.tryGetRuleContext(0, TypeQualifierContext);\n    }\n    specifierQualifierList() {\n        return this.tryGetRuleContext(0, SpecifierQualifierListContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_specifierQualifierList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterSpecifierQualifierList) {\n            listener.enterSpecifierQualifierList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitSpecifierQualifierList) {\n            listener.exitSpecifierQualifierList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitSpecifierQualifierList) {\n            return visitor.visitSpecifierQualifierList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.SpecifierQualifierListContext = SpecifierQualifierListContext;\nclass StructDeclaratorListContext extends ParserRuleContext_1.ParserRuleContext {\n    structDeclarator(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(StructDeclaratorContext);\n        }\n        else {\n            return this.getRuleContext(i, StructDeclaratorContext);\n        }\n    }\n    Comma(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Comma);\n        }\n        else {\n            return this.getToken(ClangParser.Comma, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_structDeclaratorList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterStructDeclaratorList) {\n            listener.enterStructDeclaratorList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitStructDeclaratorList) {\n            listener.exitStructDeclaratorList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitStructDeclaratorList) {\n            return visitor.visitStructDeclaratorList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.StructDeclaratorListContext = StructDeclaratorListContext;\nclass StructDeclaratorContext extends ParserRuleContext_1.ParserRuleContext {\n    declarator() {\n        return this.tryGetRuleContext(0, DeclaratorContext);\n    }\n    Colon() { return this.tryGetToken(ClangParser.Colon, 0); }\n    constantExpression() {\n        return this.tryGetRuleContext(0, ConstantExpressionContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_structDeclarator; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterStructDeclarator) {\n            listener.enterStructDeclarator(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitStructDeclarator) {\n            listener.exitStructDeclarator(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitStructDeclarator) {\n            return visitor.visitStructDeclarator(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.StructDeclaratorContext = StructDeclaratorContext;\nclass TypeQualifierContext extends ParserRuleContext_1.ParserRuleContext {\n    Const() { return this.getToken(ClangParser.Const, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_typeQualifier; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterTypeQualifier) {\n            listener.enterTypeQualifier(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitTypeQualifier) {\n            listener.exitTypeQualifier(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitTypeQualifier) {\n            return visitor.visitTypeQualifier(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.TypeQualifierContext = TypeQualifierContext;\nclass FunctionSpecifierContext extends ParserRuleContext_1.ParserRuleContext {\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_functionSpecifier; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterFunctionSpecifier) {\n            listener.enterFunctionSpecifier(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitFunctionSpecifier) {\n            listener.exitFunctionSpecifier(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitFunctionSpecifier) {\n            return visitor.visitFunctionSpecifier(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.FunctionSpecifierContext = FunctionSpecifierContext;\nclass DeclaratorContext extends ParserRuleContext_1.ParserRuleContext {\n    directDeclarator() {\n        return this.getRuleContext(0, DirectDeclaratorContext);\n    }\n    pointer() {\n        return this.tryGetRuleContext(0, PointerContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_declarator; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterDeclarator) {\n            listener.enterDeclarator(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitDeclarator) {\n            listener.exitDeclarator(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitDeclarator) {\n            return visitor.visitDeclarator(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.DeclaratorContext = DeclaratorContext;\nclass DirectDeclaratorContext extends ParserRuleContext_1.ParserRuleContext {\n    Identifier() { return this.tryGetToken(ClangParser.Identifier, 0); }\n    LeftParen() { return this.tryGetToken(ClangParser.LeftParen, 0); }\n    declarator() {\n        return this.tryGetRuleContext(0, DeclaratorContext);\n    }\n    RightParen() { return this.tryGetToken(ClangParser.RightParen, 0); }\n    directDeclarator() {\n        return this.tryGetRuleContext(0, DirectDeclaratorContext);\n    }\n    LeftBracket() { return this.tryGetToken(ClangParser.LeftBracket, 0); }\n    RightBracket() { return this.tryGetToken(ClangParser.RightBracket, 0); }\n    typeQualifierList() {\n        return this.tryGetRuleContext(0, TypeQualifierListContext);\n    }\n    assignmentExpression() {\n        return this.tryGetRuleContext(0, AssignmentExpressionContext);\n    }\n    Star() { return this.tryGetToken(ClangParser.Star, 0); }\n    parameterTypeList() {\n        return this.tryGetRuleContext(0, ParameterTypeListContext);\n    }\n    identifierList() {\n        return this.tryGetRuleContext(0, IdentifierListContext);\n    }\n    Colon() { return this.tryGetToken(ClangParser.Colon, 0); }\n    DigitSequence() { return this.tryGetToken(ClangParser.DigitSequence, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_directDeclarator; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterDirectDeclarator) {\n            listener.enterDirectDeclarator(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitDirectDeclarator) {\n            listener.exitDirectDeclarator(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitDirectDeclarator) {\n            return visitor.visitDirectDeclarator(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.DirectDeclaratorContext = DirectDeclaratorContext;\nclass NestedParenthesesBlockContext extends ParserRuleContext_1.ParserRuleContext {\n    LeftParen(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.LeftParen);\n        }\n        else {\n            return this.getToken(ClangParser.LeftParen, i);\n        }\n    }\n    nestedParenthesesBlock(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(NestedParenthesesBlockContext);\n        }\n        else {\n            return this.getRuleContext(i, NestedParenthesesBlockContext);\n        }\n    }\n    RightParen(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.RightParen);\n        }\n        else {\n            return this.getToken(ClangParser.RightParen, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_nestedParenthesesBlock; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterNestedParenthesesBlock) {\n            listener.enterNestedParenthesesBlock(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitNestedParenthesesBlock) {\n            listener.exitNestedParenthesesBlock(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitNestedParenthesesBlock) {\n            return visitor.visitNestedParenthesesBlock(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.NestedParenthesesBlockContext = NestedParenthesesBlockContext;\nclass PointerContext extends ParserRuleContext_1.ParserRuleContext {\n    Star(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Star);\n        }\n        else {\n            return this.getToken(ClangParser.Star, i);\n        }\n    }\n    Caret(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Caret);\n        }\n        else {\n            return this.getToken(ClangParser.Caret, i);\n        }\n    }\n    typeQualifierList(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(TypeQualifierListContext);\n        }\n        else {\n            return this.getRuleContext(i, TypeQualifierListContext);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_pointer; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterPointer) {\n            listener.enterPointer(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitPointer) {\n            listener.exitPointer(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitPointer) {\n            return visitor.visitPointer(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.PointerContext = PointerContext;\nclass TypeQualifierListContext extends ParserRuleContext_1.ParserRuleContext {\n    typeQualifier(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(TypeQualifierContext);\n        }\n        else {\n            return this.getRuleContext(i, TypeQualifierContext);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_typeQualifierList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterTypeQualifierList) {\n            listener.enterTypeQualifierList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitTypeQualifierList) {\n            listener.exitTypeQualifierList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitTypeQualifierList) {\n            return visitor.visitTypeQualifierList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.TypeQualifierListContext = TypeQualifierListContext;\nclass ParameterTypeListContext extends ParserRuleContext_1.ParserRuleContext {\n    parameterList() {\n        return this.getRuleContext(0, ParameterListContext);\n    }\n    Comma() { return this.tryGetToken(ClangParser.Comma, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_parameterTypeList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterParameterTypeList) {\n            listener.enterParameterTypeList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitParameterTypeList) {\n            listener.exitParameterTypeList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitParameterTypeList) {\n            return visitor.visitParameterTypeList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ParameterTypeListContext = ParameterTypeListContext;\nclass ParameterListContext extends ParserRuleContext_1.ParserRuleContext {\n    parameterDeclaration(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(ParameterDeclarationContext);\n        }\n        else {\n            return this.getRuleContext(i, ParameterDeclarationContext);\n        }\n    }\n    Comma(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Comma);\n        }\n        else {\n            return this.getToken(ClangParser.Comma, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_parameterList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterParameterList) {\n            listener.enterParameterList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitParameterList) {\n            listener.exitParameterList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitParameterList) {\n            return visitor.visitParameterList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ParameterListContext = ParameterListContext;\nclass ParameterDeclarationContext extends ParserRuleContext_1.ParserRuleContext {\n    declarationSpecifiers() {\n        return this.tryGetRuleContext(0, DeclarationSpecifiersContext);\n    }\n    declarator() {\n        return this.tryGetRuleContext(0, DeclaratorContext);\n    }\n    declarationSpecifiers2() {\n        return this.tryGetRuleContext(0, DeclarationSpecifiers2Context);\n    }\n    abstractDeclarator() {\n        return this.tryGetRuleContext(0, AbstractDeclaratorContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_parameterDeclaration; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterParameterDeclaration) {\n            listener.enterParameterDeclaration(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitParameterDeclaration) {\n            listener.exitParameterDeclaration(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitParameterDeclaration) {\n            return visitor.visitParameterDeclaration(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ParameterDeclarationContext = ParameterDeclarationContext;\nclass IdentifierListContext extends ParserRuleContext_1.ParserRuleContext {\n    Identifier(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Identifier);\n        }\n        else {\n            return this.getToken(ClangParser.Identifier, i);\n        }\n    }\n    Comma(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Comma);\n        }\n        else {\n            return this.getToken(ClangParser.Comma, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_identifierList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterIdentifierList) {\n            listener.enterIdentifierList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitIdentifierList) {\n            listener.exitIdentifierList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitIdentifierList) {\n            return visitor.visitIdentifierList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.IdentifierListContext = IdentifierListContext;\nclass TypeNameContext extends ParserRuleContext_1.ParserRuleContext {\n    specifierQualifierList() {\n        return this.getRuleContext(0, SpecifierQualifierListContext);\n    }\n    abstractDeclarator() {\n        return this.tryGetRuleContext(0, AbstractDeclaratorContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_typeName; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterTypeName) {\n            listener.enterTypeName(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitTypeName) {\n            listener.exitTypeName(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitTypeName) {\n            return visitor.visitTypeName(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.TypeNameContext = TypeNameContext;\nclass AbstractDeclaratorContext extends ParserRuleContext_1.ParserRuleContext {\n    pointer() {\n        return this.tryGetRuleContext(0, PointerContext);\n    }\n    directAbstractDeclarator() {\n        return this.tryGetRuleContext(0, DirectAbstractDeclaratorContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_abstractDeclarator; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterAbstractDeclarator) {\n            listener.enterAbstractDeclarator(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitAbstractDeclarator) {\n            listener.exitAbstractDeclarator(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitAbstractDeclarator) {\n            return visitor.visitAbstractDeclarator(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.AbstractDeclaratorContext = AbstractDeclaratorContext;\nclass DirectAbstractDeclaratorContext extends ParserRuleContext_1.ParserRuleContext {\n    LeftParen() { return this.tryGetToken(ClangParser.LeftParen, 0); }\n    abstractDeclarator() {\n        return this.tryGetRuleContext(0, AbstractDeclaratorContext);\n    }\n    RightParen() { return this.tryGetToken(ClangParser.RightParen, 0); }\n    LeftBracket() { return this.tryGetToken(ClangParser.LeftBracket, 0); }\n    RightBracket() { return this.tryGetToken(ClangParser.RightBracket, 0); }\n    typeQualifierList() {\n        return this.tryGetRuleContext(0, TypeQualifierListContext);\n    }\n    assignmentExpression() {\n        return this.tryGetRuleContext(0, AssignmentExpressionContext);\n    }\n    Star() { return this.tryGetToken(ClangParser.Star, 0); }\n    parameterTypeList() {\n        return this.tryGetRuleContext(0, ParameterTypeListContext);\n    }\n    directAbstractDeclarator() {\n        return this.tryGetRuleContext(0, DirectAbstractDeclaratorContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_directAbstractDeclarator; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterDirectAbstractDeclarator) {\n            listener.enterDirectAbstractDeclarator(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitDirectAbstractDeclarator) {\n            listener.exitDirectAbstractDeclarator(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitDirectAbstractDeclarator) {\n            return visitor.visitDirectAbstractDeclarator(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.DirectAbstractDeclaratorContext = DirectAbstractDeclaratorContext;\nclass TypedefNameContext extends ParserRuleContext_1.ParserRuleContext {\n    Identifier() { return this.getToken(ClangParser.Identifier, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_typedefName; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterTypedefName) {\n            listener.enterTypedefName(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitTypedefName) {\n            listener.exitTypedefName(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitTypedefName) {\n            return visitor.visitTypedefName(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.TypedefNameContext = TypedefNameContext;\nclass InitializerContext extends ParserRuleContext_1.ParserRuleContext {\n    assignmentExpression() {\n        return this.tryGetRuleContext(0, AssignmentExpressionContext);\n    }\n    LeftBrace() { return this.tryGetToken(ClangParser.LeftBrace, 0); }\n    initializerList() {\n        return this.tryGetRuleContext(0, InitializerListContext);\n    }\n    RightBrace() { return this.tryGetToken(ClangParser.RightBrace, 0); }\n    Comma() { return this.tryGetToken(ClangParser.Comma, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_initializer; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterInitializer) {\n            listener.enterInitializer(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitInitializer) {\n            listener.exitInitializer(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitInitializer) {\n            return visitor.visitInitializer(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.InitializerContext = InitializerContext;\nclass InitializerListContext extends ParserRuleContext_1.ParserRuleContext {\n    initializer(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(InitializerContext);\n        }\n        else {\n            return this.getRuleContext(i, InitializerContext);\n        }\n    }\n    designation(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(DesignationContext);\n        }\n        else {\n            return this.getRuleContext(i, DesignationContext);\n        }\n    }\n    Comma(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Comma);\n        }\n        else {\n            return this.getToken(ClangParser.Comma, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_initializerList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterInitializerList) {\n            listener.enterInitializerList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitInitializerList) {\n            listener.exitInitializerList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitInitializerList) {\n            return visitor.visitInitializerList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.InitializerListContext = InitializerListContext;\nclass DesignationContext extends ParserRuleContext_1.ParserRuleContext {\n    designatorList() {\n        return this.getRuleContext(0, DesignatorListContext);\n    }\n    Assign() { return this.getToken(ClangParser.Assign, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_designation; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterDesignation) {\n            listener.enterDesignation(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitDesignation) {\n            listener.exitDesignation(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitDesignation) {\n            return visitor.visitDesignation(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.DesignationContext = DesignationContext;\nclass DesignatorListContext extends ParserRuleContext_1.ParserRuleContext {\n    designator(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(DesignatorContext);\n        }\n        else {\n            return this.getRuleContext(i, DesignatorContext);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_designatorList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterDesignatorList) {\n            listener.enterDesignatorList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitDesignatorList) {\n            listener.exitDesignatorList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitDesignatorList) {\n            return visitor.visitDesignatorList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.DesignatorListContext = DesignatorListContext;\nclass DesignatorContext extends ParserRuleContext_1.ParserRuleContext {\n    LeftBracket() { return this.tryGetToken(ClangParser.LeftBracket, 0); }\n    constantExpression() {\n        return this.tryGetRuleContext(0, ConstantExpressionContext);\n    }\n    RightBracket() { return this.tryGetToken(ClangParser.RightBracket, 0); }\n    Dot() { return this.tryGetToken(ClangParser.Dot, 0); }\n    Identifier() { return this.tryGetToken(ClangParser.Identifier, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_designator; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterDesignator) {\n            listener.enterDesignator(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitDesignator) {\n            listener.exitDesignator(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitDesignator) {\n            return visitor.visitDesignator(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.DesignatorContext = DesignatorContext;\nclass StatementContext extends ParserRuleContext_1.ParserRuleContext {\n    compoundStatement() {\n        return this.tryGetRuleContext(0, CompoundStatementContext);\n    }\n    expressionStatement() {\n        return this.tryGetRuleContext(0, ExpressionStatementContext);\n    }\n    selectionStatement() {\n        return this.tryGetRuleContext(0, SelectionStatementContext);\n    }\n    iterationStatement() {\n        return this.tryGetRuleContext(0, IterationStatementContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_statement; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterStatement) {\n            listener.enterStatement(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitStatement) {\n            listener.exitStatement(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitStatement) {\n            return visitor.visitStatement(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.StatementContext = StatementContext;\nclass CompoundStatementContext extends ParserRuleContext_1.ParserRuleContext {\n    LeftBrace() { return this.getToken(ClangParser.LeftBrace, 0); }\n    RightBrace() { return this.getToken(ClangParser.RightBrace, 0); }\n    blockItemList() {\n        return this.tryGetRuleContext(0, BlockItemListContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_compoundStatement; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterCompoundStatement) {\n            listener.enterCompoundStatement(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitCompoundStatement) {\n            listener.exitCompoundStatement(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitCompoundStatement) {\n            return visitor.visitCompoundStatement(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.CompoundStatementContext = CompoundStatementContext;\nclass BlockItemListContext extends ParserRuleContext_1.ParserRuleContext {\n    blockItem(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(BlockItemContext);\n        }\n        else {\n            return this.getRuleContext(i, BlockItemContext);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_blockItemList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterBlockItemList) {\n            listener.enterBlockItemList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitBlockItemList) {\n            listener.exitBlockItemList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitBlockItemList) {\n            return visitor.visitBlockItemList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.BlockItemListContext = BlockItemListContext;\nclass BlockItemContext extends ParserRuleContext_1.ParserRuleContext {\n    statement() {\n        return this.tryGetRuleContext(0, StatementContext);\n    }\n    declaration() {\n        return this.tryGetRuleContext(0, DeclarationContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_blockItem; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterBlockItem) {\n            listener.enterBlockItem(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitBlockItem) {\n            listener.exitBlockItem(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitBlockItem) {\n            return visitor.visitBlockItem(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.BlockItemContext = BlockItemContext;\nclass ExpressionStatementContext extends ParserRuleContext_1.ParserRuleContext {\n    Semi() { return this.getToken(ClangParser.Semi, 0); }\n    expression() {\n        return this.tryGetRuleContext(0, ExpressionContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_expressionStatement; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterExpressionStatement) {\n            listener.enterExpressionStatement(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitExpressionStatement) {\n            listener.exitExpressionStatement(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitExpressionStatement) {\n            return visitor.visitExpressionStatement(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ExpressionStatementContext = ExpressionStatementContext;\nclass SelectionStatementContext extends ParserRuleContext_1.ParserRuleContext {\n    If() { return this.getToken(ClangParser.If, 0); }\n    LeftParen() { return this.getToken(ClangParser.LeftParen, 0); }\n    expression() {\n        return this.getRuleContext(0, ExpressionContext);\n    }\n    RightParen() { return this.getToken(ClangParser.RightParen, 0); }\n    statement(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(StatementContext);\n        }\n        else {\n            return this.getRuleContext(i, StatementContext);\n        }\n    }\n    Else() { return this.tryGetToken(ClangParser.Else, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_selectionStatement; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterSelectionStatement) {\n            listener.enterSelectionStatement(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitSelectionStatement) {\n            listener.exitSelectionStatement(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitSelectionStatement) {\n            return visitor.visitSelectionStatement(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.SelectionStatementContext = SelectionStatementContext;\nclass IterationStatementContext extends ParserRuleContext_1.ParserRuleContext {\n    While() { return this.tryGetToken(ClangParser.While, 0); }\n    LeftParen() { return this.getToken(ClangParser.LeftParen, 0); }\n    expression() {\n        return this.tryGetRuleContext(0, ExpressionContext);\n    }\n    RightParen() { return this.getToken(ClangParser.RightParen, 0); }\n    statement() {\n        return this.getRuleContext(0, StatementContext);\n    }\n    Do() { return this.tryGetToken(ClangParser.Do, 0); }\n    Semi() { return this.tryGetToken(ClangParser.Semi, 0); }\n    For() { return this.tryGetToken(ClangParser.For, 0); }\n    forCondition() {\n        return this.tryGetRuleContext(0, ForConditionContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_iterationStatement; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterIterationStatement) {\n            listener.enterIterationStatement(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitIterationStatement) {\n            listener.exitIterationStatement(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitIterationStatement) {\n            return visitor.visitIterationStatement(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.IterationStatementContext = IterationStatementContext;\nclass ForConditionContext extends ParserRuleContext_1.ParserRuleContext {\n    Semi(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Semi);\n        }\n        else {\n            return this.getToken(ClangParser.Semi, i);\n        }\n    }\n    forDeclaration() {\n        return this.tryGetRuleContext(0, ForDeclarationContext);\n    }\n    forExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(ForExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, ForExpressionContext);\n        }\n    }\n    expression() {\n        return this.tryGetRuleContext(0, ExpressionContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_forCondition; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterForCondition) {\n            listener.enterForCondition(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitForCondition) {\n            listener.exitForCondition(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitForCondition) {\n            return visitor.visitForCondition(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ForConditionContext = ForConditionContext;\nclass ForDeclarationContext extends ParserRuleContext_1.ParserRuleContext {\n    declarationSpecifiers() {\n        return this.getRuleContext(0, DeclarationSpecifiersContext);\n    }\n    initDeclaratorList() {\n        return this.tryGetRuleContext(0, InitDeclaratorListContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_forDeclaration; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterForDeclaration) {\n            listener.enterForDeclaration(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitForDeclaration) {\n            listener.exitForDeclaration(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitForDeclaration) {\n            return visitor.visitForDeclaration(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ForDeclarationContext = ForDeclarationContext;\nclass ForExpressionContext extends ParserRuleContext_1.ParserRuleContext {\n    assignmentExpression(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(AssignmentExpressionContext);\n        }\n        else {\n            return this.getRuleContext(i, AssignmentExpressionContext);\n        }\n    }\n    Comma(i) {\n        if (i === undefined) {\n            return this.getTokens(ClangParser.Comma);\n        }\n        else {\n            return this.getToken(ClangParser.Comma, i);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_forExpression; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterForExpression) {\n            listener.enterForExpression(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitForExpression) {\n            listener.exitForExpression(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitForExpression) {\n            return visitor.visitForExpression(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ForExpressionContext = ForExpressionContext;\nclass CompilationUnitContext extends ParserRuleContext_1.ParserRuleContext {\n    EOF() { return this.getToken(ClangParser.EOF, 0); }\n    translationUnit() {\n        return this.tryGetRuleContext(0, TranslationUnitContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_compilationUnit; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterCompilationUnit) {\n            listener.enterCompilationUnit(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitCompilationUnit) {\n            listener.exitCompilationUnit(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitCompilationUnit) {\n            return visitor.visitCompilationUnit(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.CompilationUnitContext = CompilationUnitContext;\nclass TranslationUnitContext extends ParserRuleContext_1.ParserRuleContext {\n    externalDeclaration(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(ExternalDeclarationContext);\n        }\n        else {\n            return this.getRuleContext(i, ExternalDeclarationContext);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_translationUnit; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterTranslationUnit) {\n            listener.enterTranslationUnit(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitTranslationUnit) {\n            listener.exitTranslationUnit(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitTranslationUnit) {\n            return visitor.visitTranslationUnit(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.TranslationUnitContext = TranslationUnitContext;\nclass ExternalDeclarationContext extends ParserRuleContext_1.ParserRuleContext {\n    functionDefinition() {\n        return this.tryGetRuleContext(0, FunctionDefinitionContext);\n    }\n    declaration() {\n        return this.tryGetRuleContext(0, DeclarationContext);\n    }\n    Semi() { return this.tryGetToken(ClangParser.Semi, 0); }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_externalDeclaration; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterExternalDeclaration) {\n            listener.enterExternalDeclaration(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitExternalDeclaration) {\n            listener.exitExternalDeclaration(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitExternalDeclaration) {\n            return visitor.visitExternalDeclaration(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.ExternalDeclarationContext = ExternalDeclarationContext;\nclass FunctionDefinitionContext extends ParserRuleContext_1.ParserRuleContext {\n    declarator() {\n        return this.getRuleContext(0, DeclaratorContext);\n    }\n    compoundStatement() {\n        return this.getRuleContext(0, CompoundStatementContext);\n    }\n    declarationSpecifiers() {\n        return this.tryGetRuleContext(0, DeclarationSpecifiersContext);\n    }\n    declarationList() {\n        return this.tryGetRuleContext(0, DeclarationListContext);\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_functionDefinition; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterFunctionDefinition) {\n            listener.enterFunctionDefinition(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitFunctionDefinition) {\n            listener.exitFunctionDefinition(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitFunctionDefinition) {\n            return visitor.visitFunctionDefinition(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.FunctionDefinitionContext = FunctionDefinitionContext;\nclass DeclarationListContext extends ParserRuleContext_1.ParserRuleContext {\n    declaration(i) {\n        if (i === undefined) {\n            return this.getRuleContexts(DeclarationContext);\n        }\n        else {\n            return this.getRuleContext(i, DeclarationContext);\n        }\n    }\n    constructor(parent, invokingState) {\n        super(parent, invokingState);\n    }\n    // @Override\n    get ruleIndex() { return ClangParser.RULE_declarationList; }\n    // @Override\n    enterRule(listener) {\n        if (listener.enterDeclarationList) {\n            listener.enterDeclarationList(this);\n        }\n    }\n    // @Override\n    exitRule(listener) {\n        if (listener.exitDeclarationList) {\n            listener.exitDeclarationList(this);\n        }\n    }\n    // @Override\n    accept(visitor) {\n        if (visitor.visitDeclarationList) {\n            return visitor.visitDeclarationList(this);\n        }\n        else {\n            return visitor.visitChildren(this);\n        }\n    }\n}\nexports.DeclarationListContext = DeclarationListContext;\n//# sourceMappingURL=ClangParser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.simplify = exports.stripIndent = exports.oneLine = void 0;\nfunction templateToString(content, variables) {\n    if (typeof content === 'string') {\n        return content;\n    }\n    return variables.reduce((built, fragment, index) => built + fragment + content[index + 1], content[0]);\n}\nfunction oneLine(content, ...variables) {\n    return templateToString(content, variables)\n        .replace(/(?:\\n(?:\\s*))+/g, ' ')\n        .trim();\n}\nexports.oneLine = oneLine;\n// Strips the \"minimum indent\" from every line in content,\n// then trims whitespace at the beginning and end of the string.\n//\n// two spaces of \"indent\" removed from both lines:\n//   stripIndent('  a\\n  b') == 'a\\nb'\n// only one space of \"indent\" removed from both lines,\n// because the first line only contains a single space of indent:\n//   stripIndent(' a\\n  b') == 'a\\n b'\n// first trims one space of indent from both lines,\n// but later trims another space from the first line\n// as it's at the beginning of the string:\n//   stripIndent('  a\\n b') == 'a\\nb'\nfunction stripIndent(content, ...variables) {\n    const result = templateToString(content, variables);\n    const match = result.match(/^[^\\S\\n]*(?=\\S)/gm);\n    const indent = match && Math.min(...match.map(el => el.length));\n    if (indent) {\n        return result.replace(new RegExp(`^.{${indent}}`, 'gm'), '').trim();\n    }\n    return result.trim();\n}\nexports.stripIndent = stripIndent;\nfunction simplify(content, maxLength = 15, separator = '...') {\n    if (content.length < maxLength) {\n        return content;\n    }\n    const charsToTake = Math.ceil(maxLength - separator.length / 2);\n    return content.slice(0, charsToTake) + ' ... ' + content.slice(charsToTake);\n}\nexports.simplify = simplify;\n//# sourceMappingURL=formatters.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./sourceRunner\"), exports);\n__exportStar(require(\"./utils\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sourceFilesRunner = exports.sourceRunner = void 0;\nconst localImportErrors_1 = require(\"../errors/localImportErrors\");\nconst interpreter_1 = require(\"../interpreter/interpreter\");\nconst hoistAndMergeImports_1 = require(\"../localImports/transformers/hoistAndMergeImports\");\nconst removeExports_1 = require(\"../localImports/transformers/removeExports\");\nconst removeNonSourceModuleImports_1 = require(\"../localImports/transformers/removeNonSourceModuleImports\");\nconst parser_1 = require(\"../parser/parser\");\nconst schedulers_1 = require(\"../schedulers\");\nconst types_1 = require(\"../types\");\nconst validator_1 = require(\"../validator/validator\");\nconst utils_1 = require(\"./utils\");\nconst DEFAULT_SOURCE_OPTIONS = {\n    scheduler: 'async',\n    steps: 1000,\n    stepLimit: 1000,\n    executionMethod: 'auto',\n    variant: types_1.Variant.DEFAULT,\n    originalMaxExecTime: 1000,\n    useSubst: false,\n    isPrelude: false,\n    throwInfiniteLoops: true\n};\nfunction runInterpreter(program, context, options) {\n    const it = (0, interpreter_1.evaluate)(program, context);\n    const scheduler = new schedulers_1.PreemptiveScheduler(options.steps);\n    return scheduler.run(it, context);\n}\nfunction sourceRunner(code, context, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const theOptions = Object.assign(Object.assign({}, DEFAULT_SOURCE_OPTIONS), options);\n        context.variant = (0, utils_1.determineVariant)(context, options);\n        context.errors = [];\n        // Parse and validate\n        const program = (0, parser_1.parse)(code, context);\n        if (!program) {\n            return utils_1.resolvedErrorPromise;\n        }\n        // TODO: Remove this after runners have been refactored.\n        //       These should be done as part of the local imports\n        //       preprocessing step.\n        (0, removeExports_1.removeExports)(program);\n        (0, removeNonSourceModuleImports_1.removeNonSourceModuleImports)(program);\n        (0, hoistAndMergeImports_1.hoistAndMergeImports)(program);\n        (0, validator_1.validateAndAnnotate)(program, context);\n        context.unTypecheckedCode.push(code);\n        if (context.errors.length > 0) {\n            return utils_1.resolvedErrorPromise;\n        }\n        // Handle preludes\n        if (context.prelude !== null) {\n            const prelude = context.prelude;\n            context.prelude = null;\n            yield sourceRunner(prelude, context, Object.assign(Object.assign({}, options), { isPrelude: true }));\n            return sourceRunner(code, context, options);\n        }\n        return runInterpreter(program, context, theOptions);\n    });\n}\nexports.sourceRunner = sourceRunner;\nfunction sourceFilesRunner(files, entrypointFilePath, context, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const entrypointCode = files[entrypointFilePath];\n        if (entrypointCode === undefined) {\n            context.errors.push(new localImportErrors_1.CannotFindModuleError(entrypointFilePath));\n            return utils_1.resolvedErrorPromise;\n        }\n        context.variant = (0, utils_1.determineVariant)(context, options);\n        // TODO: Make use of the preprocessed program AST after refactoring runners.\n        // const preprocessedProgram = preprocessFileImports(files, entrypointFilePath, context)\n        // if (!preprocessedProgram) {\n        //   return resolvedErrorPromise\n        // }\n        return sourceRunner(entrypointCode, context, options);\n    });\n}\nexports.sourceFilesRunner = sourceFilesRunner;\n//# sourceMappingURL=sourceRunner.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.evaluate = exports.evaluators = exports.pushEnvironment = exports.actualValue = void 0;\nconst operators_1 = require(\"../utils/operators\");\nconst rttc = require(\"../utils/rttc\");\nclass Thunk {\n    constructor(exp, env) {\n        this.exp = exp;\n        this.env = env;\n        this.isMemoized = false;\n        this.value = null;\n    }\n}\nfunction* forceIt(val, context) {\n    if (val instanceof Thunk) {\n        if (val.isMemoized)\n            return val.value;\n        (0, exports.pushEnvironment)(context, val.env);\n        const evalRes = yield* actualValue(val.exp, context);\n        popEnvironment(context);\n        val.value = evalRes;\n        val.isMemoized = true;\n        return evalRes;\n    }\n    else\n        return val;\n}\nfunction* actualValue(exp, context) {\n    const evalResult = yield* evaluate(exp, context);\n    const forced = yield* forceIt(evalResult, context);\n    return forced;\n}\nexports.actualValue = actualValue;\nconst handleRuntimeError = (context, error) => {\n    context.errors.push(error);\n    context.runtime.environments = context.runtime.environments.slice(-context.numberOfOuterEnvironments);\n    throw error;\n};\nfunction* visit(context, node) {\n    context.runtime.nodes.unshift(node);\n    yield context;\n}\nfunction* leave(context) {\n    context.runtime.break = false;\n    context.runtime.nodes.shift();\n    yield context;\n}\nconst popEnvironment = (context) => context.runtime.environments.shift();\nconst pushEnvironment = (context, environment) => {\n    context.runtime.environments.unshift(environment);\n    context.runtime.environmentTree.insert(environment);\n};\nexports.pushEnvironment = pushEnvironment;\nfunction* evaluateBlockSatement(context, node) {\n    let result;\n    for (const statement of node.body) {\n        result = yield* evaluate(statement, context);\n    }\n    return result;\n}\n/**\n * WARNING: Do not use object literal shorthands, e.g.\n *   {\n *     *Literal(node: es.Literal, ...) {...},\n *     *ThisExpression(node: es.ThisExpression, ..._ {...},\n *     ...\n *   }\n * They do not minify well, raising uncaught syntax errors in production.\n * See: https://github.com/webpack/webpack/issues/7566\n */\n// tslint:disable:object-literal-shorthand\n// prettier-ignore\nexports.evaluators = {\n    /** Simple Values */\n    Literal: function* (node, _context) {\n        return node.value;\n    },\n    TemplateLiteral: function* (node) {\n        // Expressions like `${1}` are not allowed, so no processing needed\n        return node.quasis[0].value.cooked;\n    },\n    ThisExpression: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    ArrayExpression: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    FunctionExpression: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    ArrowFunctionExpression: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    Identifier: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    CallExpression: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    NewExpression: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    UnaryExpression: function* (node, context) {\n        const value = yield* actualValue(node.argument, context);\n        const error = rttc.checkUnaryExpression(node, node.operator, value);\n        if (error) {\n            return handleRuntimeError(context, error);\n        }\n        return (0, operators_1.evaluateUnaryExpression)(node.operator, value);\n    },\n    BinaryExpression: function* (node, context) {\n        const left = yield* actualValue(node.left, context);\n        const right = yield* actualValue(node.right, context);\n        const error = rttc.checkBinaryExpression(node, node.operator, left, right);\n        if (error) {\n            return handleRuntimeError(context, error);\n        }\n        return (0, operators_1.evaluateBinaryExpression)(node.operator, left, right);\n    },\n    ConditionalExpression: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    LogicalExpression: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    VariableDeclaration: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    ContinueStatement: function* (_node, _context) {\n        throw new Error(`not supported yet: ${_node.type}`);\n    },\n    BreakStatement: function* (_node, _context) {\n        throw new Error(`not supported yet: ${_node.type}`);\n    },\n    ForStatement: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    AssignmentExpression: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    FunctionDeclaration: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    IfStatement: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    ExpressionStatement: function* (node, context) {\n        return yield* evaluate(node.expression, context);\n    },\n    ReturnStatement: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    WhileStatement: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    BlockStatement: function* (node, context) {\n        throw new Error(`not supported yet: ${node.type}`);\n    },\n    Program: function* (node, context) {\n        const result = yield* forceIt(yield* evaluateBlockSatement(context, node), context);\n        return result;\n    }\n};\n// tslint:enable:object-literal-shorthand\nfunction* evaluate(node, context) {\n    const result = yield* exports.evaluators[node.type](node, context);\n    yield* leave(context);\n    return result;\n}\nexports.evaluate = evaluate;\n//# sourceMappingURL=interpreter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hoistAndMergeImports = void 0;\nconst _ = require(\"lodash\");\nconst baseConstructors_1 = require(\"../constructors/baseConstructors\");\nconst contextSpecificConstructors_1 = require(\"../constructors/contextSpecificConstructors\");\nconst typeGuards_1 = require(\"../typeGuards\");\n/**\n * Hoists import declarations to the top of the program & merges duplicate\n * imports for the same module.\n *\n * Note that two modules are the same if and only if their import source\n * is the same. This function does not resolve paths against a base\n * directory. If such a functionality is required, this function will\n * need to be modified.\n *\n * @param program The AST which should have its ImportDeclaration nodes\n *                hoisted & duplicate imports merged.\n */\nconst hoistAndMergeImports = (program) => {\n    var _a;\n    // Separate import declarations from non-import declarations.\n    const importDeclarations = program.body.filter(typeGuards_1.isImportDeclaration);\n    const nonImportDeclarations = program.body.filter((node) => !(0, typeGuards_1.isImportDeclaration)(node));\n    // Merge import sources & specifiers.\n    const importSourceToSpecifiersMap = new Map();\n    for (const importDeclaration of importDeclarations) {\n        const importSource = importDeclaration.source.value;\n        if (typeof importSource !== 'string') {\n            throw new Error('Module names must be strings.');\n        }\n        const specifiers = (_a = importSourceToSpecifiersMap.get(importSource)) !== null && _a !== void 0 ? _a : [];\n        for (const specifier of importDeclaration.specifiers) {\n            // The Acorn parser adds extra information to AST nodes that are not\n            // part of the ESTree types. As such, we need to clone and strip\n            // the import specifier AST nodes to get a canonical representation\n            // that we can use to keep track of whether the import specifier\n            // is a duplicate or not.\n            const strippedSpecifier = (0, contextSpecificConstructors_1.cloneAndStripImportSpecifier)(specifier);\n            // Note that we cannot make use of JavaScript's built-in Set class\n            // as it compares references for objects.\n            const isSpecifierDuplicate = specifiers.filter((specifier) => {\n                return _.isEqual(strippedSpecifier, specifier);\n            }).length !== 0;\n            if (isSpecifierDuplicate) {\n                continue;\n            }\n            specifiers.push(strippedSpecifier);\n        }\n        importSourceToSpecifiersMap.set(importSource, specifiers);\n    }\n    // Convert the merged import sources & specifiers back into import declarations.\n    const mergedImportDeclarations = [];\n    importSourceToSpecifiersMap.forEach((specifiers, importSource) => {\n        mergedImportDeclarations.push((0, baseConstructors_1.createImportDeclaration)(specifiers, (0, baseConstructors_1.createLiteral)(importSource)));\n    });\n    // Hoist the merged import declarations to the top of the program body.\n    program.body = [...mergedImportDeclarations, ...nonImportDeclarations];\n};\nexports.hoistAndMergeImports = hoistAndMergeImports;\n//# sourceMappingURL=hoistAndMergeImports.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneAndStripImportSpecifier = exports.createInvokedFunctionResultVariableDeclaration = exports.createImportedNameDeclaration = exports.createListCallExpression = exports.createPairCallExpression = void 0;\nconst localImport_prelude_1 = require(\"../../stdlib/localImport.prelude\");\nconst baseConstructors_1 = require(\"./baseConstructors\");\n/**\n * Constructs a call to the `pair` function.\n *\n * @param head The head of the pair.\n * @param tail The tail of the pair.\n */\nconst createPairCallExpression = (head, tail) => {\n    return (0, baseConstructors_1.createCallExpression)('pair', [head, tail]);\n};\nexports.createPairCallExpression = createPairCallExpression;\n/**\n * Constructs a call to the `list` function.\n *\n * @param listElements The elements of the list.\n */\nconst createListCallExpression = (listElements) => {\n    return (0, baseConstructors_1.createCallExpression)('list', listElements);\n};\nexports.createListCallExpression = createListCallExpression;\n/**\n * Constructs the AST equivalent of:\n * const importedName = __access_export__(functionName, lookupName);\n *\n * @param functionName The name of the transformed function declaration to import from.\n * @param importedName The name of the import.\n * @param lookupName   The name to lookup in the transformed function declaration.\n */\nconst createImportedNameDeclaration = (functionName, importedName, lookupName) => {\n    const callExpression = (0, baseConstructors_1.createCallExpression)(localImport_prelude_1.accessExportFunctionName, [\n        (0, baseConstructors_1.createIdentifier)(functionName),\n        (0, baseConstructors_1.createLiteral)(lookupName)\n    ]);\n    const variableDeclarator = (0, baseConstructors_1.createVariableDeclarator)(importedName, callExpression);\n    return (0, baseConstructors_1.createVariableDeclaration)([variableDeclarator], 'const');\n};\nexports.createImportedNameDeclaration = createImportedNameDeclaration;\n/**\n * Constructs the AST equivalent of:\n * const variableName = functionName(...functionArgs);\n *\n * @param functionName The name of the transformed function declaration to invoke.\n * @param variableName The name of the variable holding the result of the function invocation.\n * @param functionArgs The arguments to be passed when invoking the function.\n */\nconst createInvokedFunctionResultVariableDeclaration = (functionName, variableName, functionArgs) => {\n    const callExpression = (0, baseConstructors_1.createCallExpression)(functionName, functionArgs);\n    const variableDeclarator = (0, baseConstructors_1.createVariableDeclarator)((0, baseConstructors_1.createIdentifier)(variableName), callExpression);\n    return (0, baseConstructors_1.createVariableDeclaration)([variableDeclarator], 'const');\n};\nexports.createInvokedFunctionResultVariableDeclaration = createInvokedFunctionResultVariableDeclaration;\n/**\n * Clones the import specifier, but only the properties\n * that are part of its ESTree AST type. This is useful for\n * stripping out extraneous information on the import\n * specifier AST nodes (such as the location information\n * that the Acorn parser adds).\n *\n * @param importSpecifier The import specifier to be cloned.\n */\nconst cloneAndStripImportSpecifier = (importSpecifier) => {\n    switch (importSpecifier.type) {\n        case 'ImportSpecifier':\n            return {\n                type: 'ImportSpecifier',\n                local: (0, baseConstructors_1.createIdentifier)(importSpecifier.local.name),\n                imported: (0, baseConstructors_1.createIdentifier)(importSpecifier.imported.name)\n            };\n        case 'ImportDefaultSpecifier':\n            return {\n                type: 'ImportDefaultSpecifier',\n                local: (0, baseConstructors_1.createIdentifier)(importSpecifier.local.name)\n            };\n        case 'ImportNamespaceSpecifier':\n            return {\n                type: 'ImportNamespaceSpecifier',\n                local: (0, baseConstructors_1.createIdentifier)(importSpecifier.local.name)\n            };\n    }\n};\nexports.cloneAndStripImportSpecifier = cloneAndStripImportSpecifier;\n//# sourceMappingURL=contextSpecificConstructors.js.map","import { Octokit } from '@octokit/rest';\nimport {\n  GetResponseDataTypeFromEndpointMethod,\n  GetResponseTypeFromEndpointMethod\n} from '@octokit/types';\n\nimport { actions } from '../../commons/utils/ActionsHelper';\nimport { showSimpleConfirmDialog } from '../../commons/utils/DialogHelper';\nimport { showSuccessMessage, showWarningMessage } from '../../commons/utils/NotificationsHelper';\nimport { store } from '../../pages/createStore';\n\n/**\n * Exchanges the Access Code with the back-end to receive an Auth-Token\n *\n * @param {string} backendLink The address where the back-end microservice is deployed\n * @param {string} messageBody The message body. Must be URL-encoded\n * @return {Promise<Response>} A promise for a HTML response with an 'auth_token' field\n */\nexport async function exchangeAccessCode(\n  backendLink: string,\n  messageBody: string\n): Promise<Response> {\n  return await fetch(backendLink, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    },\n    body: messageBody\n  });\n}\n\n/**\n * Returns the Octokit instance saved in session state.\n *\n * This function allows for mocking Octokit behaviour in tests.\n */\nexport function getGitHubOctokitInstance(): any {\n  const octokitObject = store.getState().session.githubOctokitObject;\n  if (octokitObject === undefined) {\n    return undefined;\n  } else {\n    return octokitObject.octokit;\n  }\n}\n\nexport async function checkIfFileCanBeOpened(\n  octokit: Octokit,\n  repoOwner: string,\n  repoName: string,\n  filePath: string\n) {\n  if (octokit === undefined) {\n    showWarningMessage('Please log in and try again', 2000);\n    return false;\n  }\n\n  if (filePath === '') {\n    showWarningMessage('Please select a file!', 2000);\n    return false;\n  }\n\n  type GetContentData = GetResponseDataTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n  let files: GetContentData;\n\n  try {\n    type GetContentResponse = GetResponseTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n    const results: GetContentResponse = await octokit.repos.getContent({\n      owner: repoOwner,\n      repo: repoName,\n      path: filePath\n    });\n\n    files = results.data;\n  } catch (err) {\n    showWarningMessage('Connection denied or file does not exist.', 2000);\n    console.error(err);\n    return false;\n  }\n\n  if (Array.isArray(files)) {\n    showWarningMessage(\"Can't open folder as a file!\", 2000);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Returns an object containing 2 properties: 'canBeSaved' and 'saveType'.\n * 'canBeSaved' is a boolean that represents whether we should proceed with the save.\n * If the file can be saved, then 'saveType' is either 'Create' or 'Overwrite'.\n *\n * @param octokit The Octokit instance for the authenticated user\n * @param repoOwner The owner of the repository where the file is to be saved\n * @param repoName The name of the repository\n * @param filePath The filepath where the file will be saved to\n */\nexport async function checkIfFileCanBeSavedAndGetSaveType(\n  octokit: Octokit,\n  repoOwner: string,\n  repoName: string,\n  filePath: string\n) {\n  let saveType = '';\n\n  if (filePath === '') {\n    showWarningMessage('No file name given.', 2000);\n    return { canBeSaved: false, saveType: saveType };\n  }\n\n  if (octokit === undefined) {\n    showWarningMessage('Please log in and try again', 2000);\n    return { canBeSaved: false, saveType: saveType };\n  }\n\n  let files;\n\n  try {\n    type GetContentResponse = GetResponseTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n    const results: GetContentResponse = await octokit.repos.getContent({\n      owner: repoOwner,\n      repo: repoName,\n      path: filePath\n    });\n\n    files = results.data;\n    saveType = 'Overwrite';\n  } catch (err) {\n    // 404 status means that the file could not be found.\n    // In this case, the dialog should still continue as the user should be given\n    // the option of creating a new file on their remote repository.\n    if (err.status !== 404) {\n      showWarningMessage('Connection denied or file does not exist.', 2000);\n      console.error(err);\n      return { canBeSaved: false, saveType: saveType };\n    }\n    saveType = 'Create';\n  }\n\n  if (Array.isArray(files)) {\n    showWarningMessage(\"Can't save over a folder!\", 2000);\n    return { canBeSaved: false, saveType: saveType };\n  }\n\n  return { canBeSaved: true, saveType: saveType };\n}\n\nexport async function checkIfUserAgreesToOverwriteEditorData() {\n  return await showSimpleConfirmDialog({\n    contents: (\n      <div>\n        <p>Warning: opening this file will overwrite the text data in the editor.</p>\n        <p>Please click 'Confirm' to continue, or 'Cancel' to go back.</p>\n      </div>\n    ),\n    negativeLabel: 'Cancel',\n    positiveIntent: 'primary',\n    positiveLabel: 'Confirm'\n  });\n}\n\nexport async function checkIfUserAgreesToPerformOverwritingSave() {\n  return await showSimpleConfirmDialog({\n    contents: (\n      <div>\n        <p>Warning: You are saving over an existing file in the repository.</p>\n        <p>Please click 'Confirm' to continue, or 'Cancel' to go back.</p>\n      </div>\n    ),\n    negativeLabel: 'Cancel',\n    positiveIntent: 'primary',\n    positiveLabel: 'Confirm'\n  });\n}\n\nexport async function openFileInEditor(\n  octokit: Octokit,\n  repoOwner: string,\n  repoName: string,\n  filePath: string\n) {\n  if (octokit === undefined) return;\n\n  type GetContentResponse = GetResponseTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n  const results: GetContentResponse = await octokit.repos.getContent({\n    owner: repoOwner,\n    repo: repoName,\n    path: filePath\n  });\n\n  const content = (results.data as any).content;\n\n  if (content) {\n    const newEditorValue = Buffer.from(content, 'base64').toString();\n    store.dispatch(actions.updateEditorValue(newEditorValue, 'playground'));\n    store.dispatch(actions.playgroundUpdateGitHubSaveInfo(repoName, filePath, new Date()));\n    showSuccessMessage('Successfully loaded file!', 1000);\n  }\n}\n\nexport async function performOverwritingSave(\n  octokit: Octokit,\n  repoOwner: string,\n  repoName: string,\n  filePath: string,\n  githubName: string | null,\n  githubEmail: string | null,\n  commitMessage: string,\n  content: string\n) {\n  if (octokit === undefined) return;\n\n  githubEmail = githubEmail || 'No public email provided';\n  githubName = githubName || 'Source Academy User';\n  commitMessage = commitMessage || 'Changes made from Source Academy';\n  content = content || '';\n\n  const contentEncoded = Buffer.from(content, 'utf8').toString('base64');\n\n  try {\n    type GetContentResponse = GetResponseTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n    const results: GetContentResponse = await octokit.repos.getContent({\n      owner: repoOwner,\n      repo: repoName,\n      path: filePath\n    });\n\n    type GetContentData = GetResponseDataTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n    const files: GetContentData = results.data;\n\n    // Cannot save over folder\n    if (Array.isArray(files)) {\n      return;\n    }\n\n    const sha = files.sha;\n\n    await octokit.repos.createOrUpdateFileContents({\n      owner: repoOwner,\n      repo: repoName,\n      path: filePath,\n      message: commitMessage,\n      content: contentEncoded,\n      sha: sha,\n      committer: { name: githubName, email: githubEmail },\n      author: { name: githubName, email: githubEmail }\n    });\n    store.dispatch(actions.playgroundUpdateGitHubSaveInfo(repoName, filePath, new Date()));\n    showSuccessMessage('Successfully saved file!', 1000);\n  } catch (err) {\n    console.error(err);\n    showWarningMessage('Something went wrong when trying to save the file.', 1000);\n  }\n}\n\nexport async function performCreatingSave(\n  octokit: Octokit,\n  repoOwner: string,\n  repoName: string,\n  filePath: string,\n  githubName: string | null,\n  githubEmail: string | null,\n  commitMessage: string,\n  content: string\n) {\n  if (octokit === undefined) return;\n\n  githubEmail = githubEmail || 'No public email provided';\n  githubName = githubName || 'Source Academy User';\n  commitMessage = commitMessage || 'Changes made from Source Academy';\n  content = content || '';\n\n  const contentEncoded = Buffer.from(content, 'utf8').toString('base64');\n\n  try {\n    await octokit.repos.createOrUpdateFileContents({\n      owner: repoOwner,\n      repo: repoName,\n      path: filePath,\n      message: commitMessage,\n      content: contentEncoded,\n      committer: { name: githubName, email: githubEmail },\n      author: { name: githubName, email: githubEmail }\n    });\n    store.dispatch(actions.playgroundUpdateGitHubSaveInfo(repoName, filePath, new Date()));\n    showSuccessMessage('Successfully created file!', 1000);\n  } catch (err) {\n    console.error(err);\n    showWarningMessage('Something went wrong when trying to save the file.', 1000);\n  }\n}\n\nexport async function performFolderDeletion(\n  octokit: Octokit,\n  repoOwner: string,\n  repoName: string,\n  filePath: string,\n  githubName: string | null,\n  githubEmail: string | null,\n  commitMessage: string\n) {\n  if (octokit === undefined) return;\n\n  githubEmail = githubEmail || 'No public email provided';\n  githubName = githubName || 'Source Academy User';\n  commitMessage = commitMessage || 'Changes made from Source Academy';\n\n  try {\n    const results = await octokit.repos.getContent({\n      owner: repoOwner,\n      repo: repoName,\n      path: filePath\n    });\n\n    const files = results.data;\n\n    // This function must apply deletion to an entire folder\n    if (!Array.isArray(files)) {\n      showWarningMessage('Something went wrong when trying to delete the folder.', 1000);\n      return;\n    }\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n\n      await octokit.repos.deleteFile({\n        owner: repoOwner,\n        repo: repoName,\n        path: file.path,\n        message: commitMessage,\n        sha: file.sha\n      });\n    }\n\n    showSuccessMessage('Successfully deleted folder!', 1000);\n  } catch (err) {\n    console.error(err);\n    showWarningMessage('Something went wrong when trying to delete the folder.', 1000);\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.localImportPrelude = exports.defaultExportLookupName = exports.accessExportFunctionName = void 0;\nexports.accessExportFunctionName = '__access_export__';\n// We can make use of 'default' to denote that the default export\n// should be accessed because 'default' is a reserved keyword in\n// Source. Specifically, the Acorn parser does not allow 'default'\n// to be used as a name.\nexports.defaultExportLookupName = 'default';\nexports.localImportPrelude = `\nfunction __access_named_export__(named_exports, lookup_name) {\n  if (is_null(named_exports)) {\n    return undefined;\n  } else {\n    const name = head(head(named_exports));\n    const identifier = tail(head(named_exports));\n    if (name === lookup_name) {\n      return identifier;\n    } else {\n      return __access_named_export__(tail(named_exports), lookup_name);\n    }\n  }\n}\n\nfunction ${exports.accessExportFunctionName}(exports, lookup_name) {\n  if (lookup_name === \"${exports.defaultExportLookupName}\") {\n    return head(exports);\n  } else {\n    const named_exports = tail(exports);\n    return __access_named_export__(named_exports, lookup_name);\n  }\n}\n`;\n//# sourceMappingURL=localImport.prelude.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeExports = void 0;\nconst walkers_1 = require(\"../../utils/walkers\");\nconst typeGuards_1 = require(\"../typeGuards\");\n/**\n * Removes all export-related nodes from the AST.\n *\n * Export-related AST nodes are only needed in the local imports pre-processing\n * step to determine which functions/variables/expressions should be made\n * available to other files/modules. After which, they have no functional effect\n * on program evaluation.\n *\n * @param program The AST which should be stripped of export-related nodes.\n */\nconst removeExports = (program) => {\n    (0, walkers_1.ancestor)(program, {\n        // TODO: Handle other export AST nodes.\n        ExportNamedDeclaration(node, _state, ancestors) {\n            // The ancestors array contains the current node, meaning that the\n            // parent node is the second last node of the array.\n            const parent = ancestors[ancestors.length - 2];\n            // The parent node of an ExportNamedDeclaration node must be a Program node.\n            if (parent.type !== 'Program') {\n                return;\n            }\n            const nodeIndex = parent.body.findIndex(n => n === node);\n            if (node.declaration) {\n                // If the ExportNamedDeclaration node contains a declaration, replace\n                // it with the declaration node in its parent node's body.\n                parent.body[nodeIndex] = node.declaration;\n            }\n            else {\n                // Otherwise, remove the ExportNamedDeclaration node in its parent node's body.\n                parent.body.splice(nodeIndex, 1);\n            }\n        },\n        ExportDefaultDeclaration(node, _state, ancestors) {\n            // The ancestors array contains the current node, meaning that the\n            // parent node is the second last node of the array.\n            const parent = ancestors[ancestors.length - 2];\n            // The parent node of an ExportNamedDeclaration node must be a Program node.\n            if (parent.type !== 'Program') {\n                return;\n            }\n            const nodeIndex = parent.body.findIndex(n => n === node);\n            // 'node.declaration' can be either a Declaration or an Expression.\n            if ((0, typeGuards_1.isDeclaration)(node.declaration)) {\n                // If the ExportDefaultDeclaration node contains a declaration, replace\n                // it with the declaration node in its parent node's body.\n                parent.body[nodeIndex] = node.declaration;\n            }\n            else {\n                // Otherwise, the ExportDefaultDeclaration node contains a statement.\n                // Remove the ExportDefaultDeclaration node in its parent node's body.\n                parent.body.splice(nodeIndex, 1);\n            }\n        }\n    });\n};\nexports.removeExports = removeExports;\n//# sourceMappingURL=removeExports.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeNonSourceModuleImports = exports.isSourceModule = void 0;\nconst walkers_1 = require(\"../../utils/walkers\");\nconst filePaths_1 = require(\"../filePaths\");\n/**\n * Returns whether a module name refers to a Source module.\n * We define a Source module name to be any string that is not\n * a file path.\n *\n * Source module import:           `import { x } from \"module\";`\n * Local (relative) module import: `import { x } from \"./module\";`\n * Local (absolute) module import: `import { x } from \"/dir/dir2/module\";`\n *\n * @param moduleName The name of the module.\n */\nconst isSourceModule = (moduleName) => {\n    return !(0, filePaths_1.isFilePath)(moduleName);\n};\nexports.isSourceModule = isSourceModule;\n/**\n * Removes all non-Source module import-related nodes from the AST.\n *\n * All import-related nodes which are not removed in the pre-processing\n * step will be treated by the Source modules loader as a Source module.\n * If a Source module by the same name does not exist, the program\n * evaluation will error out. As such, this function removes all\n * import-related AST nodes which the Source module loader does not\n * support, as well as ImportDeclaration nodes for local module imports.\n *\n * The definition of whether a module is a local module or a Source\n * module depends on the implementation of the `isSourceModule` function.\n *\n * @param program The AST which should be stripped of non-Source module\n *                import-related nodes.\n */\nconst removeNonSourceModuleImports = (program) => {\n    // First pass: remove all import AST nodes which are unused by Source modules.\n    (0, walkers_1.ancestor)(program, {\n        ImportSpecifier(_node, _state, _ancestors) {\n            // Nothing to do here since ImportSpecifier nodes are used by Source modules.\n        },\n        ImportDefaultSpecifier(node, _state, ancestors) {\n            // The ancestors array contains the current node, meaning that the\n            // parent node is the second last node of the array.\n            const parent = ancestors[ancestors.length - 2];\n            // The parent node of an ImportDefaultSpecifier node must be an ImportDeclaration node.\n            if (parent.type !== 'ImportDeclaration') {\n                return;\n            }\n            const nodeIndex = parent.specifiers.findIndex(n => n === node);\n            // Remove the ImportDefaultSpecifier node in its parent node's array of specifiers.\n            // This is because Source modules do not support default imports.\n            parent.specifiers.splice(nodeIndex, 1);\n        },\n        ImportNamespaceSpecifier(node, _state, ancestors) {\n            // The ancestors array contains the current node, meaning that the\n            // parent node is the second last node of the array.\n            const parent = ancestors[ancestors.length - 2];\n            // The parent node of an ImportNamespaceSpecifier node must be an ImportDeclaration node.\n            if (parent.type !== 'ImportDeclaration') {\n                return;\n            }\n            const nodeIndex = parent.specifiers.findIndex(n => n === node);\n            // Remove the ImportNamespaceSpecifier node in its parent node's array of specifiers.\n            // This is because Source modules do not support namespace imports.\n            parent.specifiers.splice(nodeIndex, 1);\n        }\n    });\n    // Operate on a copy of the Program node's body to prevent the walk from missing ImportDeclaration nodes.\n    const programBody = [...program.body];\n    const removeImportDeclaration = (node, ancestors) => {\n        // The ancestors array contains the current node, meaning that the\n        // parent node is the second last node of the array.\n        const parent = ancestors[ancestors.length - 2];\n        // The parent node of an ImportDeclaration node must be a Program node.\n        if (parent.type !== 'Program') {\n            return;\n        }\n        const nodeIndex = programBody.findIndex(n => n === node);\n        // Remove the ImportDeclaration node in its parent node's body.\n        programBody.splice(nodeIndex, 1);\n    };\n    // Second pass: remove all ImportDeclaration nodes for non-Source modules, or that do not\n    // have any specifiers (thus being functionally useless).\n    (0, walkers_1.ancestor)(program, {\n        ImportDeclaration(node, _state, ancestors) {\n            if (typeof node.source.value !== 'string') {\n                throw new Error('Module names must be strings.');\n            }\n            // ImportDeclaration nodes without any specifiers are functionally useless and are thus removed.\n            if (node.specifiers.length === 0) {\n                removeImportDeclaration(node, ancestors);\n                return;\n            }\n            // Non-Source modules should already have been handled in the pre-processing step and are no\n            // longer needed. They must be removed to avoid being treated as Source modules.\n            if (!(0, exports.isSourceModule)(node.source.value)) {\n                removeImportDeclaration(node, ancestors);\n            }\n        }\n    });\n    program.body = programBody;\n};\nexports.removeNonSourceModuleImports = removeNonSourceModuleImports;\n//# sourceMappingURL=removeNonSourceModuleImports.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PreemptiveScheduler = void 0;\n/* tslint:disable:max-classes-per-file */\nconst errors_1 = require(\"./errors/errors\");\nclass PreemptiveScheduler {\n    constructor(steps) {\n        this.steps = steps;\n    }\n    run(it, context) {\n        return new Promise((resolve, _reject) => {\n            context.runtime.isRunning = true;\n            // This is used in the evaluation of the REPL during a paused state.\n            // The debugger is turned off while the code evaluates just above the debugger statement.\n            let actuallyBreak = false;\n            let itValue = it.next();\n            const interval = setInterval(() => {\n                let step = 0;\n                try {\n                    while (!itValue.done && step < this.steps) {\n                        step++;\n                        itValue = it.next();\n                        actuallyBreak = context.runtime.break && context.runtime.debuggerOn;\n                        if (actuallyBreak) {\n                            itValue.done = true;\n                        }\n                    }\n                }\n                catch (e) {\n                    checkForStackOverflow(e, context);\n                    context.runtime.isRunning = false;\n                    clearInterval(interval);\n                    resolve({ status: 'error' });\n                }\n                if (itValue.done) {\n                    context.runtime.isRunning = false;\n                    clearInterval(interval);\n                    if (actuallyBreak) {\n                        resolve({\n                            status: 'suspended',\n                            it,\n                            scheduler: this,\n                            context\n                        });\n                    }\n                    else {\n                        resolve({ status: 'finished', context, value: itValue.value });\n                    }\n                }\n            });\n        });\n    }\n}\nexports.PreemptiveScheduler = PreemptiveScheduler;\n/* Checks if the error is a stackoverflow error, and captures it in the\n   context if this is the case */\nfunction checkForStackOverflow(error, context) {\n    if (/Maximum call stack/.test(error.toString())) {\n        const environments = context.runtime.environments;\n        const stacks = [];\n        let counter = 0;\n        for (let i = 0; counter < errors_1.MaximumStackLimitExceeded.MAX_CALLS_TO_SHOW && i < environments.length; i++) {\n            if (environments[i].callExpression) {\n                stacks.unshift(environments[i].callExpression);\n                counter++;\n            }\n        }\n        context.errors.push(new errors_1.MaximumStackLimitExceeded(context.runtime.nodes[0], stacks));\n    }\n}\n//# sourceMappingURL=schedulers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAndAnnotate = void 0;\nconst errors_1 = require(\"../errors/errors\");\nconst validityErrors_1 = require(\"../errors/validityErrors\");\nconst astCreator_1 = require(\"../utils/astCreator\");\nconst walkers_1 = require(\"../utils/walkers\");\nclass Declaration {\n    constructor(isConstant) {\n        this.isConstant = isConstant;\n        this.accessedBeforeDeclaration = false;\n    }\n}\nfunction validateAndAnnotate(program, context) {\n    const accessedBeforeDeclarationMap = new Map();\n    const scopeHasCallExpressionMap = new Map();\n    function processBlock(node) {\n        const initialisedIdentifiers = new Map();\n        for (const statement of node.body) {\n            if (statement.type === 'VariableDeclaration') {\n                initialisedIdentifiers.set((0, astCreator_1.getVariableDecarationName)(statement), new Declaration(statement.kind === 'const'));\n            }\n            else if (statement.type === 'FunctionDeclaration') {\n                if (statement.id === null) {\n                    throw new Error('Encountered a FunctionDeclaration node without an identifier. This should have been caught when parsing.');\n                }\n                initialisedIdentifiers.set(statement.id.name, new Declaration(true));\n            }\n        }\n        scopeHasCallExpressionMap.set(node, false);\n        accessedBeforeDeclarationMap.set(node, initialisedIdentifiers);\n    }\n    function processFunction(node) {\n        accessedBeforeDeclarationMap.set(node, new Map(node.params.map(id => [id.name, new Declaration(false)])));\n        scopeHasCallExpressionMap.set(node, false);\n    }\n    // initialise scope of variables\n    (0, walkers_1.ancestor)(program, {\n        Program: processBlock,\n        BlockStatement: processBlock,\n        FunctionDeclaration: processFunction,\n        ArrowFunctionExpression: processFunction,\n        ForStatement(forStatement, _ancestors) {\n            const init = forStatement.init;\n            if (init.type === 'VariableDeclaration') {\n                accessedBeforeDeclarationMap.set(forStatement, new Map([[(0, astCreator_1.getVariableDecarationName)(init), new Declaration(init.kind === 'const')]]));\n                scopeHasCallExpressionMap.set(forStatement, false);\n            }\n        }\n    });\n    function validateIdentifier(id, ancestors) {\n        const name = id.name;\n        const lastAncestor = ancestors[ancestors.length - 2];\n        for (let i = ancestors.length - 1; i >= 0; i--) {\n            const a = ancestors[i];\n            const map = accessedBeforeDeclarationMap.get(a);\n            if (map === null || map === void 0 ? void 0 : map.has(name)) {\n                map.get(name).accessedBeforeDeclaration = true;\n                if (lastAncestor.type === 'AssignmentExpression' && lastAncestor.left === id) {\n                    if (map.get(name).isConstant) {\n                        context.errors.push(new errors_1.ConstAssignment(lastAncestor, name));\n                    }\n                    if (a.type === 'ForStatement' && a.init !== lastAncestor && a.update !== lastAncestor) {\n                        context.errors.push(new validityErrors_1.NoAssignmentToForVariable(lastAncestor));\n                    }\n                }\n                break;\n            }\n        }\n    }\n    const customWalker = Object.assign(Object.assign({}, walkers_1.base), { VariableDeclarator(node, st, c) {\n            // don't visit the id\n            if (node.init) {\n                c(node.init, st, 'Expression');\n            }\n        } });\n    (0, walkers_1.ancestor)(program, {\n        VariableDeclaration(node, ancestors) {\n            const lastAncestor = ancestors[ancestors.length - 2];\n            const name = (0, astCreator_1.getVariableDecarationName)(node);\n            const accessedBeforeDeclaration = accessedBeforeDeclarationMap\n                .get(lastAncestor)\n                .get(name).accessedBeforeDeclaration;\n            node.typability = accessedBeforeDeclaration ? 'Untypable' : 'NotYetTyped';\n        },\n        Identifier: validateIdentifier,\n        FunctionDeclaration(node, ancestors) {\n            // a function declaration can be typed if there are no function calls in the same scope before it\n            const lastAncestor = ancestors[ancestors.length - 2];\n            node.typability = scopeHasCallExpressionMap.get(lastAncestor) ? 'Untypable' : 'NotYetTyped';\n        },\n        Pattern(node, ancestors) {\n            if (node.type === 'Identifier') {\n                validateIdentifier(node, ancestors);\n            }\n            else if (node.type === 'MemberExpression') {\n                if (node.object.type === 'Identifier') {\n                    validateIdentifier(node.object, ancestors);\n                }\n            }\n        },\n        CallExpression(call, ancestors) {\n            for (let i = ancestors.length - 1; i >= 0; i--) {\n                const a = ancestors[i];\n                if (scopeHasCallExpressionMap.has(a)) {\n                    scopeHasCallExpressionMap.set(a, true);\n                    break;\n                }\n            }\n        }\n    }, customWalker);\n    /*\n    simple(program, {\n      VariableDeclaration(node: TypeAnnotatedNode<es.VariableDeclaration>) {\n        console.log(getVariableDecarationName(node) + \" \" + node.typability);\n      },\n      FunctionDeclaration(node: TypeAnnotatedNode<es.FunctionDeclaration>) {\n        console.log(node.id!.name + \" \" + node.typability);\n      }\n    })\n  \n     */\n    return program;\n}\nexports.validateAndAnnotate = validateAndAnnotate;\n//# sourceMappingURL=validator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoAssignmentToForVariable = void 0;\nconst types_1 = require(\"../types\");\nclass NoAssignmentToForVariable {\n    constructor(node) {\n        this.node = node;\n        this.type = types_1.ErrorType.SYNTAX;\n        this.severity = types_1.ErrorSeverity.ERROR;\n    }\n    get location() {\n        return this.node.loc;\n    }\n    explain() {\n        return 'Assignment to a for loop variable in the for loop is not allowed.';\n    }\n    elaborate() {\n        return this.explain();\n    }\n}\nexports.NoAssignmentToForVariable = NoAssignmentToForVariable;\n//# sourceMappingURL=validityErrors.js.map","import moment from 'moment';\n\nconst now = new Date();\n\nexport const isExpired = (deadline?: Date) => deadline !== undefined && deadline <= now;\n\nexport const isReleased = (release?: Date) => release === undefined || release <= now;\n\nexport const isWithinTimeRange = (fromTime?: Date, toTime?: Date) => {\n  // if bounds not specified, return true\n  if (fromTime === undefined && toTime === undefined) {\n    return true;\n  }\n\n  // express times as numbers\n  const now = new Date();\n  const currentTime = now.getHours() * 100 + now.getMinutes();\n  const leftBound =\n    fromTime === undefined ? undefined : fromTime.getHours() * 100 + fromTime.getMinutes();\n  const rightBound =\n    toTime === undefined ? undefined : toTime.getHours() * 100 + toTime.getMinutes();\n\n  if (leftBound === undefined) {\n    return currentTime <= rightBound!;\n  } else if (rightBound === undefined) {\n    return currentTime >= leftBound!;\n  } else if (leftBound >= rightBound) {\n    // happens when, for example, leftBound = 2300, rightBound = 0100\n    return currentTime <= rightBound || currentTime >= leftBound;\n  } else {\n    return currentTime <= rightBound && currentTime >= leftBound;\n  }\n};\n\nexport const timeFromExpired = (deadline?: Date) =>\n  deadline === undefined ? 0 : deadline.getTime() - now.getTime();\n\nexport const prettifyDate = (deadline?: Date) => {\n  if (deadline === undefined) return '';\n\n  return moment(deadline).format('D MMMM YYYY HH:mm');\n};\n\nexport const prettifyTime = (time?: Date) => {\n  if (time === undefined) return '';\n  return moment(time).format('HH:mm');\n};\n\n// Converts Date to deadline countdown\nexport const prettifyDeadline = (deadline?: Date) => {\n  if (deadline === undefined) {\n    return 'Unlimited';\n  } else if (isExpired(deadline)) {\n    return 'Expired';\n  }\n\n  const now = moment();\n\n  const weeksAway = Math.ceil(moment(deadline).diff(now, 'weeks', true));\n  const daysAway = Math.ceil(moment(deadline).diff(now, 'days', true));\n  const hoursAway = Math.ceil(moment(deadline).diff(now, 'hours', true));\n\n  let prettifiedDeadline = '';\n  if (weeksAway > 1) {\n    prettifiedDeadline = weeksAway + ' Weeks';\n  } else if (daysAway > 1) {\n    prettifiedDeadline = daysAway + ' Days';\n  } else if (hoursAway > 1) {\n    prettifiedDeadline = hoursAway + ' Hours';\n  } else {\n    prettifiedDeadline = '1 Hour';\n  }\n\n  return prettifiedDeadline;\n};\n","import { action } from 'typesafe-actions';\n\nimport {\n  PERSISTENCE_INITIALISE,\n  PERSISTENCE_OPEN_PICKER,\n  PERSISTENCE_SAVE_FILE,\n  PERSISTENCE_SAVE_FILE_AS,\n  PersistenceFile\n} from './PersistenceTypes';\n\nexport const persistenceOpenPicker = () => action(PERSISTENCE_OPEN_PICKER);\n\nexport const persistenceSaveFile = (file: PersistenceFile) => action(PERSISTENCE_SAVE_FILE, file);\n\nexport const persistenceSaveFileAs = () => action(PERSISTENCE_SAVE_FILE_AS);\n\nexport const persistenceInitialise = () => action(PERSISTENCE_INITIALISE);\n","import { action } from 'typesafe-actions';\n\nimport { WorkspaceLocation } from '../../commons/workspace/WorkspaceTypes';\nimport {\n  Device,\n  DeviceSession,\n  REMOTE_EXEC_CONNECT,\n  REMOTE_EXEC_DISCONNECT,\n  REMOTE_EXEC_FETCH_DEVICES,\n  REMOTE_EXEC_REPL_INPUT,\n  REMOTE_EXEC_RUN,\n  REMOTE_EXEC_UPDATE_DEVICES,\n  REMOTE_EXEC_UPDATE_SESSION\n} from './RemoteExecutionTypes';\n\nexport const remoteExecFetchDevices = () => action(REMOTE_EXEC_FETCH_DEVICES);\n\nexport const remoteExecUpdateDevices = (devices: Device[]) =>\n  action(REMOTE_EXEC_UPDATE_DEVICES, devices);\n\nexport const remoteExecUpdateSession = (session?: DeviceSession) =>\n  action(REMOTE_EXEC_UPDATE_SESSION, session);\n\nexport const remoteExecConnect = (workspace: WorkspaceLocation, device: Device) =>\n  action(REMOTE_EXEC_CONNECT, { workspace, device });\n\nexport const remoteExecDisconnect = () => action(REMOTE_EXEC_DISCONNECT);\n\nexport const remoteExecRun = (program: string) => action(REMOTE_EXEC_RUN, program);\n\nexport const remoteExecReplInput = (input: string) => action(REMOTE_EXEC_REPL_INPUT, input);\n","import { ActionType } from 'typesafe-actions';\n\nimport * as CommonsActions from '../../commons/application/actions/CommonsActions';\nimport * as InterpreterActions from '../../commons/application/actions/InterpreterActions';\nimport * as SessionActions from '../../commons/application/actions/SessionActions';\nimport * as CollabEditingActions from '../../commons/collabEditing/CollabEditingActions';\nimport * as WorkspaceActions from '../../commons/workspace/WorkspaceActions';\nimport * as AcademyActions from '../../features/academy/AcademyActions';\nimport * as AchievementActions from '../../features/achievement/AchievementActions';\nimport * as DashboardActions from '../../features/dashboard/DashboardActions';\nimport * as GroundControlActions from '../../features/groundControl/GroundControlActions';\nimport * as PersistenceActions from '../../features/persistence/PersistenceActions';\nimport * as PlaygroundActions from '../../features/playground/PlaygroundActions';\nimport * as RemoteExecutionActions from '../../features/remoteExecution/RemoteExecutionActions';\nimport * as SourcecastActions from '../../features/sourceRecorder/sourcecast/SourcecastActions';\nimport * as SourceRecorderActions from '../../features/sourceRecorder/SourceRecorderActions';\nimport * as SourcereelActions from '../../features/sourceRecorder/sourcereel/SourcereelActions';\n\nexport const actions = {\n  ...AchievementActions,\n  ...CommonsActions,\n  ...CollabEditingActions,\n  ...DashboardActions,\n  ...InterpreterActions,\n  ...PlaygroundActions,\n  ...SessionActions,\n  ...SourcecastActions,\n  ...SourceRecorderActions,\n  ...SourcereelActions,\n  ...WorkspaceActions,\n  ...GroundControlActions,\n  ...AcademyActions,\n  ...PersistenceActions,\n  ...RemoteExecutionActions\n};\n\nexport type SourceActionType = ActionType<typeof actions>;\n","import { WorkspaceState } from '../../../commons/workspace/WorkspaceTypes';\nimport { PlaybackData, RecordingStatus } from '../SourceRecorderTypes';\n\nexport const DELETE_SOURCECAST_ENTRY = 'DELETE_SOURCECAST_ENTRY';\nexport const RECORD_INIT = 'RECORD_INIT';\nexport const RECORD_INPUT = 'RECORD_INPUT';\nexport const RESET_INPUTS = 'RESET_INPUTS';\nexport const TIMER_PAUSE = 'TIMER_PAUSE';\nexport const TIMER_RESET = 'TIMER_RESET';\nexport const TIMER_RESUME = 'TIMER_RESUME';\nexport const TIMER_START = 'TIMER_START';\nexport const TIMER_STOP = 'TIMER_STOP';\n\ntype SourcereelWorkspaceAttr = {\n  readonly playbackData: PlaybackData;\n  readonly recordingStatus: RecordingStatus;\n  readonly timeElapsedBeforePause: number;\n  readonly timeResumed: number;\n};\nexport type SourcereelWorkspaceState = SourcereelWorkspaceAttr & WorkspaceState;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createContext = exports.interrupt = exports.resume = exports.runFilesInContext = exports.runInContext = exports.hasDeclaration = exports.findDeclaration = exports.parseError = exports.SourceDocumentation = void 0;\nconst source_map_1 = require(\"source-map\");\nconst createContext_1 = require(\"./createContext\");\nexports.createContext = createContext_1.default;\nconst errors_1 = require(\"./errors/errors\");\nconst finder_1 = require(\"./finder\");\nconst parser_1 = require(\"./parser/parser\");\nvar docTooltip_1 = require(\"./editors/ace/docTooltip\");\nObject.defineProperty(exports, \"SourceDocumentation\", { enumerable: true, get: function () { return docTooltip_1.SourceDocumentation; } });\nconst localImportErrors_1 = require(\"./errors/localImportErrors\");\nconst filePaths_1 = require(\"./localImports/filePaths\");\nconst runner_1 = require(\"./runner\");\n// needed to work on browsers\nif (typeof window !== 'undefined') {\n    // @ts-ignore\n    source_map_1.SourceMapConsumer.initialize({\n        'lib/mappings.wasm': 'https://unpkg.com/source-map@0.7.3/lib/mappings.wasm'\n    });\n}\nfunction parseError(errors) {\n    const errorMessagesArr = errors.map(error => {\n        const line = error.location ? error.location.start.line : '<unknown>';\n        const explanation = error.explain();\n        return line < 1 ? explanation : `Line ${line}: ${explanation}`;\n    });\n    return errorMessagesArr.join('\\n');\n}\nexports.parseError = parseError;\nfunction findDeclaration(code, context, loc) {\n    const program = (0, parser_1.parse)(code, context);\n    if (!program) {\n        return null;\n    }\n    const identifierNode = (0, finder_1.findIdentifierNode)(program, context, loc);\n    if (!identifierNode) {\n        return null;\n    }\n    const declarationNode = (0, finder_1.findDeclarationNode)(program, identifierNode);\n    if (!declarationNode || identifierNode === declarationNode) {\n        return null;\n    }\n    return declarationNode.loc;\n}\nexports.findDeclaration = findDeclaration;\nfunction hasDeclaration(code, context, loc) {\n    const program = (0, parser_1.parse)(code, context);\n    if (!program) {\n        return false;\n    }\n    const identifierNode = (0, finder_1.findIdentifierNode)(program, context, loc);\n    if (!identifierNode) {\n        return false;\n    }\n    const declarationNode = (0, finder_1.findDeclarationNode)(program, identifierNode);\n    if (declarationNode == null || declarationNode.loc == null) {\n        return false;\n    }\n    return true;\n}\nexports.hasDeclaration = hasDeclaration;\nfunction runInContext(code, context, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const defaultFilePath = '/default.js';\n        const files = {};\n        files[defaultFilePath] = code;\n        return runFilesInContext(files, defaultFilePath, context, options);\n    });\n}\nexports.runInContext = runInContext;\nfunction runFilesInContext(files, entrypointFilePath, context, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (const filePath in files) {\n            const filePathError = (0, filePaths_1.validateFilePath)(filePath);\n            if (filePathError !== null) {\n                context.errors.push(filePathError);\n                return runner_1.resolvedErrorPromise;\n            }\n        }\n        const code = files[entrypointFilePath];\n        if (code === undefined) {\n            context.errors.push(new localImportErrors_1.CannotFindModuleError(entrypointFilePath));\n            return runner_1.resolvedErrorPromise;\n        }\n        return (0, runner_1.sourceFilesRunner)(files, entrypointFilePath, context, options);\n    });\n}\nexports.runFilesInContext = runFilesInContext;\nfunction resume(result) {\n    if (result.status === 'finished' || result.status === 'error') {\n        return result;\n    }\n    else {\n        return result.scheduler.run(result.it, result.context);\n    }\n}\nexports.resume = resume;\nfunction interrupt(context) {\n    const globalEnvironment = context.runtime.environments[context.runtime.environments.length - 1];\n    context.runtime.environments = [globalEnvironment];\n    context.runtime.isRunning = false;\n    context.errors.push(new errors_1.InterruptedError(context.runtime.nodes[0]));\n}\nexports.interrupt = interrupt;\n//# sourceMappingURL=index.js.map","import { Reducer } from 'redux';\n\nimport { defaultAcademy } from '../../commons/application/ApplicationTypes';\nimport { LOG_OUT } from '../../commons/application/types/CommonsTypes';\nimport { SourceActionType } from '../../commons/utils/ActionsHelper';\nimport { AcademyState, SAVE_CANVAS } from './AcademyTypes';\n\nexport const AcademyReducer: Reducer<AcademyState> = (\n  state = defaultAcademy,\n  action: SourceActionType\n) => {\n  switch (action.type) {\n    case LOG_OUT:\n      return defaultAcademy;\n    case SAVE_CANVAS:\n      return {\n        ...state,\n        gameCanvas: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { defaultAchievement } from '../../commons/application/ApplicationTypes';\nimport { SourceActionType } from '../../commons/utils/ActionsHelper';\nimport {\n  AchievementState,\n  SAVE_ACHIEVEMENTS,\n  SAVE_GOALS,\n  SAVE_USER_ASSESSMENT_OVERVIEWS,\n  SAVE_USERS\n} from './AchievementTypes';\n\nexport const AchievementReducer: Reducer<AchievementState> = (\n  state = defaultAchievement,\n  action: SourceActionType\n) => {\n  switch (action.type) {\n    case SAVE_ACHIEVEMENTS:\n      return {\n        ...state,\n        achievements: action.payload\n      };\n    case SAVE_GOALS:\n      return {\n        ...state,\n        goals: action.payload\n      };\n    case SAVE_USERS:\n      return {\n        ...state,\n        users: action.payload\n      };\n    case SAVE_USER_ASSESSMENT_OVERVIEWS:\n      return {\n        ...state,\n        assessmentOverviews: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { defaultDashboard } from '../../commons/application/ApplicationTypes';\nimport { SourceActionType } from '../../commons/utils/ActionsHelper';\nimport { DashboardState, UPDATE_GROUP_GRADING_SUMMARY } from './DashboardTypes';\n\nexport const DashboardReducer: Reducer<DashboardState> = (\n  state = defaultDashboard,\n  action: SourceActionType\n) => {\n  switch (action.type) {\n    case UPDATE_GROUP_GRADING_SUMMARY:\n      return {\n        ...state,\n        gradingSummary: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { defaultPlayground } from '../../commons/application/ApplicationTypes';\nimport { SourceActionType } from '../../commons/utils/ActionsHelper';\nimport {\n  CHANGE_QUERY_STRING,\n  PLAYGROUND_UPDATE_GITHUB_SAVE_INFO,\n  PLAYGROUND_UPDATE_PERSISTENCE_FILE,\n  PlaygroundState,\n  UPDATE_SHORT_URL\n} from './PlaygroundTypes';\n\nexport const PlaygroundReducer: Reducer<PlaygroundState> = (\n  state = defaultPlayground,\n  action: SourceActionType\n) => {\n  switch (action.type) {\n    case CHANGE_QUERY_STRING:\n      return {\n        ...state,\n        queryString: action.payload\n      };\n    case UPDATE_SHORT_URL:\n      return {\n        ...state,\n        shortURL: action.payload\n      };\n    case PLAYGROUND_UPDATE_GITHUB_SAVE_INFO:\n      return {\n        ...state,\n        githubSaveInfo: action.payload\n      };\n    case PLAYGROUND_UPDATE_PERSISTENCE_FILE:\n      return {\n        ...state,\n        persistenceFile: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { SourceActionType } from '../../../commons/utils/ActionsHelper';\nimport {\n  SAVE_SOURCECAST_DATA,\n  SET_CODE_DELTAS_TO_APPLY,\n  SET_CURRENT_PLAYER_TIME,\n  SET_INPUT_TO_APPLY,\n  SET_SOURCECAST_DATA,\n  SET_SOURCECAST_PLAYBACK_DURATION,\n  SET_SOURCECAST_PLAYBACK_STATUS\n} from '../SourceRecorderTypes';\nimport { SourcecastWorkspaceState, UPDATE_SOURCECAST_INDEX } from './SourcecastTypes';\n\nexport const SourcecastReducer = (\n  state: SourcecastWorkspaceState,\n  action: SourceActionType\n): SourcecastWorkspaceState => {\n  switch (action.type) {\n    case SAVE_SOURCECAST_DATA:\n      return {\n        ...state,\n        title: action.payload.title,\n        description: action.payload.description,\n        uid: action.payload.uid,\n        audioUrl: action.payload.audioUrl,\n        playbackData: action.payload.playbackData\n      };\n    case SET_CURRENT_PLAYER_TIME:\n      return {\n        ...state,\n        currentPlayerTime: action.payload.playerTime\n      };\n    case SET_CODE_DELTAS_TO_APPLY:\n      return {\n        ...state,\n        codeDeltasToApply: action.payload.deltas\n      };\n    case SET_INPUT_TO_APPLY:\n      return {\n        ...state,\n        inputToApply: action.payload.inputToApply\n      };\n    case SET_SOURCECAST_DATA:\n      return {\n        ...state,\n        title: action.payload.title,\n        description: action.payload.description,\n        uid: action.payload.uid,\n        audioUrl: action.payload.audioUrl,\n        playbackData: action.payload.playbackData\n      };\n    case SET_SOURCECAST_PLAYBACK_DURATION:\n      return {\n        ...state,\n        playbackDuration: action.payload.duration\n      };\n    case SET_SOURCECAST_PLAYBACK_STATUS:\n      return {\n        ...state,\n        playbackStatus: action.payload.playbackStatus\n      };\n    case UPDATE_SOURCECAST_INDEX:\n      return {\n        ...state,\n        sourcecastIndex: action.payload.index\n      };\n    default:\n      return state;\n  }\n};\n","import { SourceActionType } from '../../../commons/utils/ActionsHelper';\nimport { RecordingStatus } from '../SourceRecorderTypes';\nimport {\n  RECORD_INIT,\n  RECORD_INPUT,\n  RESET_INPUTS,\n  SourcereelWorkspaceState,\n  TIMER_PAUSE,\n  TIMER_RESET,\n  TIMER_RESUME,\n  TIMER_START,\n  TIMER_STOP\n} from './SourcereelTypes';\n\nexport const SourcereelReducer = (state: SourcereelWorkspaceState, action: SourceActionType) => {\n  switch (action.type) {\n    case RECORD_INIT:\n      return {\n        ...state,\n        playbackData: {\n          init: action.payload.initData,\n          inputs: []\n        }\n      };\n    case RECORD_INPUT:\n      return {\n        ...state,\n        playbackData: {\n          ...state.playbackData,\n          inputs: [...state.playbackData.inputs, action.payload.input]\n        }\n      };\n    case RESET_INPUTS:\n      return {\n        ...state,\n        playbackData: {\n          ...state.playbackData,\n          inputs: action.payload.inputs\n        }\n      };\n    case TIMER_PAUSE:\n      return {\n        ...state,\n        recordingStatus: RecordingStatus.paused,\n        timeElapsedBeforePause:\n          state.timeElapsedBeforePause + action.payload.timeNow - state.timeResumed\n      };\n    case TIMER_RESET:\n      return {\n        ...state,\n        recordingStatus: RecordingStatus.notStarted,\n        timeElapsedBeforePause: 0,\n        timeResumed: 0\n      };\n    case TIMER_RESUME:\n      return {\n        ...state,\n        recordingStatus: RecordingStatus.recording,\n        timeElapsedBeforePause:\n          action.payload.timeBefore >= 0 ? action.payload.timeBefore : state.timeElapsedBeforePause,\n        timeResumed: action.payload.timeNow\n      };\n    case TIMER_START:\n      return {\n        ...state,\n        recordingStatus: RecordingStatus.recording,\n        timeElapsedBeforePause: 0,\n        timeResumed: action.payload.timeNow\n      };\n    case TIMER_STOP:\n      return {\n        ...state,\n        recordingStatus: RecordingStatus.finished,\n        timeElapsedBeforePause: 0,\n        timeResumed: 0\n      };\n    default:\n      return state;\n  }\n};\n","import { stringify } from 'Clang-slang/dist/utils/stringify';\nimport { Reducer } from 'redux';\n\nimport { SourcecastReducer } from '../../features/sourceRecorder/sourcecast/SourcecastReducer';\nimport { SET_IS_EDITOR_READONLY } from '../../features/sourceRecorder/sourcecast/SourcecastTypes';\nimport { SourcereelReducer } from '../../features/sourceRecorder/sourcereel/SourcereelReducer';\nimport {\n  CodeOutput,\n  createDefaultWorkspace,\n  defaultWorkspaceManager,\n  ErrorOutput,\n  InterpreterOutput,\n  ResultOutput\n} from '../application/ApplicationTypes';\nimport { LOG_OUT } from '../application/types/CommonsTypes';\nimport {\n  DEBUG_RESET,\n  DEBUG_RESUME,\n  END_DEBUG_PAUSE,\n  END_INTERRUPT_EXECUTION,\n  EVAL_INTERPRETER_ERROR,\n  EVAL_INTERPRETER_SUCCESS,\n  EVAL_TESTCASE_FAILURE,\n  EVAL_TESTCASE_SUCCESS,\n  HANDLE_CONSOLE_LOG,\n  HIGHLIGHT_LINE\n} from '../application/types/InterpreterTypes';\nimport { Testcase } from '../assessment/AssessmentTypes';\nimport { SET_EDITOR_SESSION_ID, SET_SHAREDB_CONNECTED } from '../collabEditing/CollabEditingTypes';\nimport { NOTIFY_PROGRAM_EVALUATED } from '../sideContent/SideContentTypes';\nimport { SourceActionType } from '../utils/ActionsHelper';\nimport Constants from '../utils/Constants';\nimport { createContext } from '../utils/JsSlangHelper';\nimport {\n  BROWSE_REPL_HISTORY_DOWN,\n  BROWSE_REPL_HISTORY_UP,\n  CHANGE_EXEC_TIME,\n  CHANGE_EXTERNAL_LIBRARY,\n  CHANGE_SIDE_CONTENT_HEIGHT,\n  CHANGE_STEP_LIMIT,\n  CLEAR_REPL_INPUT,\n  CLEAR_REPL_OUTPUT,\n  CLEAR_REPL_OUTPUT_LAST,\n  END_CLEAR_CONTEXT,\n  EVAL_EDITOR,\n  EVAL_REPL,\n  MOVE_CURSOR,\n  RESET_TESTCASE,\n  RESET_WORKSPACE,\n  SEND_REPL_INPUT_TO_OUTPUT,\n  TOGGLE_EDITOR_AUTORUN,\n  TOGGLE_USING_SUBST,\n  UPDATE_ACTIVE_EDITOR_TAB,\n  UPDATE_CURRENT_ASSESSMENT_ID,\n  UPDATE_CURRENT_SUBMISSION_ID,\n  UPDATE_EDITOR_BREAKPOINTS,\n  UPDATE_EDITOR_VALUE,\n  UPDATE_HAS_UNSAVED_CHANGES,\n  UPDATE_REPL_VALUE,\n  UPDATE_SUBLANGUAGE,\n  UPDATE_WORKSPACE,\n  WorkspaceLocation,\n  WorkspaceManagerState\n} from './WorkspaceTypes';\n\n/**\n * Takes in a IWorkspaceManagerState and maps it to a new state. The\n * pre-conditions are that\n *   - There exists an IWorkspaceState in the IWorkspaceManagerState of the key\n *     `location`.\n *   - `location` is defined (and exists) as a property 'workspaceLocation' in\n *     the action's payload.\n */\nexport const WorkspaceReducer: Reducer<WorkspaceManagerState> = (\n  state = defaultWorkspaceManager,\n  action: SourceActionType\n) => {\n  const workspaceLocation: WorkspaceLocation = (action as any).payload\n    ? (action as any).payload.workspaceLocation\n    : 'assessment';\n  let newOutput: InterpreterOutput[];\n  let lastOutput: InterpreterOutput;\n\n  switch (workspaceLocation) {\n    case 'sourcecast':\n      const sourcecastState = SourcecastReducer(state.sourcecast, action);\n      if (sourcecastState === state.sourcecast) {\n        break;\n      }\n      return {\n        ...state,\n        sourcecast: sourcecastState\n      };\n    case 'sourcereel':\n      const sourcereelState = SourcereelReducer(state.sourcereel, action);\n      if (sourcereelState === state.sourcereel) {\n        break;\n      }\n      return {\n        ...state,\n        sourcereel: sourcereelState\n      };\n    default:\n      break;\n  }\n\n  switch (action.type) {\n    case BROWSE_REPL_HISTORY_DOWN:\n      if (state[workspaceLocation].replHistory.browseIndex === null) {\n        // Not yet started browsing history, nothing to do\n        return state;\n      } else if (state[workspaceLocation].replHistory.browseIndex !== 0) {\n        // Browsing history, and still have earlier records to show\n        const newIndex = state[workspaceLocation].replHistory.browseIndex! - 1;\n        const newReplValue = state[workspaceLocation].replHistory.records[newIndex];\n        return {\n          ...state,\n          [workspaceLocation]: {\n            ...state[workspaceLocation],\n            replValue: newReplValue,\n            replHistory: {\n              ...state[workspaceLocation].replHistory,\n              browseIndex: newIndex\n            }\n          }\n        };\n      } else {\n        // Browsing history, no earlier records to show; return replValue to\n        // the last value when user started browsing\n        const newIndex = null;\n        const newReplValue = state[workspaceLocation].replHistory.originalValue;\n        const newRecords = state[workspaceLocation].replHistory.records.slice();\n        return {\n          ...state,\n          [workspaceLocation]: {\n            ...state[workspaceLocation],\n            replValue: newReplValue,\n            replHistory: {\n              browseIndex: newIndex,\n              records: newRecords,\n              originalValue: ''\n            }\n          }\n        };\n      }\n    case BROWSE_REPL_HISTORY_UP:\n      const lastRecords = state[workspaceLocation].replHistory.records;\n      const lastIndex = state[workspaceLocation].replHistory.browseIndex;\n      if (\n        lastRecords.length === 0 ||\n        (lastIndex !== null && lastRecords[lastIndex + 1] === undefined)\n      ) {\n        // There is no more later history to show\n        return state;\n      } else if (lastIndex === null) {\n        // Not yet started browsing, initialise the index & array\n        const newIndex = 0;\n        const newRecords = lastRecords.slice();\n        const originalValue = state[workspaceLocation].replValue;\n        const newReplValue = newRecords[newIndex];\n        return {\n          ...state,\n          [workspaceLocation]: {\n            ...state[workspaceLocation],\n            replValue: newReplValue,\n            replHistory: {\n              ...state[workspaceLocation].replHistory,\n              browseIndex: newIndex,\n              records: newRecords,\n              originalValue\n            }\n          }\n        };\n      } else {\n        // Browsing history, and still have later history to show\n        const newIndex = lastIndex + 1;\n        const newReplValue = lastRecords[newIndex];\n        return {\n          ...state,\n          [workspaceLocation]: {\n            ...state[workspaceLocation],\n            replValue: newReplValue,\n            replHistory: {\n              ...state[workspaceLocation].replHistory,\n              browseIndex: newIndex\n            }\n          }\n        };\n      }\n    case CHANGE_EXEC_TIME:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          execTime: action.payload.execTime\n        }\n      };\n    case CHANGE_SIDE_CONTENT_HEIGHT:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          sideContentHeight: action.payload.height\n        }\n      };\n    case CHANGE_STEP_LIMIT:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          stepLimit: action.payload.stepLimit\n        }\n      };\n    case CLEAR_REPL_INPUT:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          replValue: ''\n        }\n      };\n    case CLEAR_REPL_OUTPUT_LAST:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          output: state[workspaceLocation].output.slice(0, -1)\n        }\n      };\n    case CLEAR_REPL_OUTPUT:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          output: []\n        }\n      };\n    case END_CLEAR_CONTEXT:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          context: createContext<WorkspaceLocation>(\n            action.payload.library.external.symbols,\n            workspaceLocation,\n            action.payload.library.variant\n          ),\n          globals: action.payload.library.globals,\n          externalLibrary: action.payload.library.external.name\n        }\n      };\n    case SEND_REPL_INPUT_TO_OUTPUT:\n      // CodeOutput properties exist in parallel with workspaceLocation\n      newOutput = state[workspaceLocation].output.concat(action.payload as CodeOutput);\n      let newReplHistoryRecords: string[];\n      if (action.payload.value !== '') {\n        newReplHistoryRecords = [action.payload.value].concat(\n          state[workspaceLocation].replHistory.records\n        );\n      } else {\n        newReplHistoryRecords = state[workspaceLocation].replHistory.records;\n      }\n      if (newReplHistoryRecords.length > Constants.maxBrowseIndex) {\n        newReplHistoryRecords.pop();\n      }\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          output: newOutput,\n          replHistory: {\n            ...state[workspaceLocation].replHistory,\n            records: newReplHistoryRecords\n          }\n        }\n      };\n    case CHANGE_EXTERNAL_LIBRARY:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          externalLibrary: action.payload.newExternal\n        }\n      };\n    case HANDLE_CONSOLE_LOG:\n      /* Possible cases:\n       * (1) state[workspaceLocation].output === [], i.e. state[workspaceLocation].output[-1] === undefined\n       * (2) state[workspaceLocation].output[-1] is not RunningOutput\n       * (3) state[workspaceLocation].output[-1] is RunningOutput */\n      lastOutput = state[workspaceLocation].output[state[workspaceLocation].output.length - 1];\n      if (lastOutput === undefined || lastOutput.type !== 'running') {\n        // New block of output.\n        newOutput = state[workspaceLocation].output.concat({\n          type: 'running',\n          consoleLogs: [...action.payload.logString]\n        });\n      } else {\n        const updatedLastOutput = {\n          type: lastOutput.type,\n          consoleLogs: lastOutput.consoleLogs.concat(action.payload.logString)\n        };\n        newOutput = state[workspaceLocation].output.slice(0, -1);\n        newOutput.push(updatedLastOutput);\n      }\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          output: newOutput\n        }\n      };\n    case LOG_OUT:\n      // Preserve the playground workspace even after log out\n      const playgroundWorkspace = state.playground;\n      return {\n        ...defaultWorkspaceManager,\n        playground: playgroundWorkspace\n      };\n    case EVAL_EDITOR:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isRunning: true,\n          isDebugging: false\n        }\n      };\n    case EVAL_REPL:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isRunning: true\n        }\n      };\n    case EVAL_INTERPRETER_SUCCESS:\n      const execType = state[workspaceLocation].context.executionMethod;\n      const newOutputEntry: Partial<ResultOutput> = {\n        type: action.payload.type as 'result' | undefined,\n        value: execType === 'interpreter' ? action.payload.value : stringify(action.payload.value)\n      };\n\n      lastOutput = state[workspaceLocation].output.slice(-1)[0];\n      if (lastOutput !== undefined && lastOutput.type === 'running') {\n        newOutput = state[workspaceLocation].output.slice(0, -1).concat({\n          consoleLogs: lastOutput.consoleLogs,\n          ...newOutputEntry\n        } as ResultOutput);\n      } else {\n        newOutput = state[workspaceLocation].output.concat({\n          consoleLogs: [],\n          ...newOutputEntry\n        } as ResultOutput);\n      }\n\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          output: newOutput,\n          isRunning: false\n        }\n      };\n    case EVAL_TESTCASE_SUCCESS:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorTestcases: state[workspaceLocation].editorTestcases.map(\n            (testcase: Testcase, i: any) => {\n              if (i === action.payload.index) {\n                return {\n                  ...testcase,\n                  result: action.payload.value,\n                  errors: undefined\n                };\n              } else {\n                return testcase;\n              }\n            }\n          ),\n          isRunning: false\n        }\n      };\n    case EVAL_TESTCASE_FAILURE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorTestcases: state[workspaceLocation].editorTestcases.map(\n            (testcase: Testcase, i: number) => {\n              if (i === action.payload.index) {\n                return {\n                  ...testcase,\n                  result: undefined,\n                  errors: action.payload.value\n                };\n              }\n              return testcase;\n            }\n          )\n        }\n      };\n    case EVAL_INTERPRETER_ERROR:\n      lastOutput = state[workspaceLocation].output.slice(-1)[0];\n      if (lastOutput !== undefined && lastOutput.type === 'running') {\n        newOutput = state[workspaceLocation].output.slice(0, -1).concat({\n          type: action.payload.type,\n          errors: action.payload.errors,\n          consoleLogs: lastOutput.consoleLogs\n        } as ErrorOutput);\n      } else {\n        newOutput = state[workspaceLocation].output.concat({\n          type: action.payload.type,\n          errors: action.payload.errors,\n          consoleLogs: []\n        } as ErrorOutput);\n      }\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          output: newOutput,\n          isRunning: false,\n          isDebugging: false\n        }\n      };\n    /**\n     * Called to signal the end of an interruption,\n     * i.e called after the interpreter is told to stop interruption,\n     * to cause UI changes.\n     */\n    case END_INTERRUPT_EXECUTION:\n      /**\n       * Set the isRunning property of the\n       * context to false, to ensure a re-render.\n       * Also in case the async calc-slang interrupt()\n       * function does not finish interrupting before\n       * this action is called.\n       */\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isRunning: false,\n          isDebugging: false\n        }\n      };\n    case END_DEBUG_PAUSE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isRunning: false,\n          isDebugging: true\n        }\n      };\n    case DEBUG_RESUME:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isRunning: true,\n          isDebugging: false\n        }\n      };\n    case DEBUG_RESET:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isRunning: false,\n          isDebugging: false\n        }\n      };\n    case RESET_TESTCASE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorTestcases: state[workspaceLocation].editorTestcases.map(\n            (testcase: Testcase, i: any) => {\n              if (i === action.payload.index) {\n                return {\n                  ...testcase,\n                  result: undefined,\n                  errors: undefined\n                };\n              } else {\n                return testcase;\n              }\n            }\n          )\n        }\n      };\n\n    /**\n     * Resets the workspace to default settings,\n     * including the calc-slang Context. Apply\n     * any specified settings (workspaceOptions)\n     */\n    case RESET_WORKSPACE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          ...createDefaultWorkspace(workspaceLocation),\n          ...action.payload.workspaceOptions\n        }\n      };\n    /**\n     * Updates workspace without changing anything\n     * which has not been specified\n     */\n    case UPDATE_WORKSPACE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          ...action.payload.workspaceOptions\n        }\n      };\n    case SET_EDITOR_SESSION_ID:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorSessionId: action.payload.editorSessionId\n        }\n      };\n\n    case SET_IS_EDITOR_READONLY:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isEditorReadonly: action.payload.isEditorReadonly\n        }\n      };\n    case SET_SHAREDB_CONNECTED:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          sharedbConnected: action.payload.connected\n        }\n      };\n    case TOGGLE_EDITOR_AUTORUN:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          isEditorAutorun: !state[workspaceLocation].isEditorAutorun\n        }\n      };\n    case TOGGLE_USING_SUBST:\n      if (workspaceLocation === 'playground' || workspaceLocation === 'sicp') {\n        return {\n          ...state,\n          [workspaceLocation]: {\n            ...state[workspaceLocation],\n            usingSubst: action.payload.usingSubst\n          }\n        };\n      } else {\n        return state;\n      }\n    case UPDATE_CURRENT_ASSESSMENT_ID:\n      return {\n        ...state,\n        assessment: {\n          ...state.assessment,\n          currentAssessment: action.payload.assessmentId,\n          currentQuestion: action.payload.questionId\n        }\n      };\n    case UPDATE_CURRENT_SUBMISSION_ID:\n      return {\n        ...state,\n        grading: {\n          ...state.grading,\n          currentSubmission: action.payload.submissionId,\n          currentQuestion: action.payload.questionId\n        }\n      };\n    case UPDATE_ACTIVE_EDITOR_TAB:\n      const activeEditorTabIndex = state[workspaceLocation].activeEditorTabIndex;\n      // Do not modify the workspace state if there is no active editor tab.\n      if (activeEditorTabIndex === null) {\n        return state;\n      }\n      const updatedEditorTabs = [...state[workspaceLocation].editorTabs];\n      updatedEditorTabs[activeEditorTabIndex] = {\n        ...updatedEditorTabs[activeEditorTabIndex],\n        ...action.payload.activeEditorTabOptions\n      };\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          editorTabs: updatedEditorTabs\n        }\n      };\n    case UPDATE_EDITOR_BREAKPOINTS:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n          editorTabs: [\n            { ...state[workspaceLocation].editorTabs[0], breakpoints: action.payload.breakpoints }\n          ]\n        }\n      };\n    case UPDATE_EDITOR_VALUE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n          editorTabs: [\n            { ...state[workspaceLocation].editorTabs[0], value: action.payload.newEditorValue }\n          ]\n        }\n      };\n    case HIGHLIGHT_LINE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n          editorTabs: [\n            {\n              ...state[workspaceLocation].editorTabs[0],\n              highlightedLines: action.payload.highlightedLines\n            }\n          ]\n        }\n      };\n    case MOVE_CURSOR:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n          editorTabs: [\n            {\n              ...state[workspaceLocation].editorTabs[0],\n              newCursorPosition: action.payload.cursorPosition\n            }\n          ]\n        }\n      };\n    case UPDATE_REPL_VALUE:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          replValue: action.payload.newReplValue\n        }\n      };\n    case UPDATE_HAS_UNSAVED_CHANGES:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          hasUnsavedChanges: action.payload.hasUnsavedChanges\n        }\n      };\n    case UPDATE_SUBLANGUAGE:\n      return {\n        ...state,\n        playground: {\n          ...state.playground,\n          context: {\n            ...state.playground.context,\n            chapter: action.payload.sublang.chapter,\n            variant: action.payload.sublang.variant\n          }\n        }\n      };\n    case NOTIFY_PROGRAM_EVALUATED:\n      return {\n        ...state,\n        [workspaceLocation]: {\n          ...state[workspaceLocation],\n          debuggerContext: {\n            ...state[workspaceLocation].debuggerContext,\n            result: action.payload.result,\n            lastDebuggerResult: action.payload.lastDebuggerResult,\n            code: action.payload.code,\n            context: action.payload.context,\n            workspaceLocation: action.payload.workspaceLocation\n          }\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import { Action, Reducer } from 'redux';\n\nimport { ApplicationState, defaultApplication } from './ApplicationTypes';\n\nexport const ApplicationReducer: Reducer<ApplicationState> = (\n  state = defaultApplication,\n  action: Action\n) => {\n  return state;\n};\n","import { Reducer } from 'redux';\n\nimport {\n  REMOTE_EXEC_UPDATE_DEVICES,\n  REMOTE_EXEC_UPDATE_SESSION\n} from '../../../features/remoteExecution/RemoteExecutionTypes';\nimport { SourceActionType } from '../../utils/ActionsHelper';\nimport { defaultSession } from '../ApplicationTypes';\nimport { LOG_OUT } from '../types/CommonsTypes';\nimport {\n  REMOVE_GITHUB_OCTOKIT_OBJECT_AND_ACCESS_TOKEN,\n  SessionState,\n  SET_ADMIN_PANEL_COURSE_REGISTRATIONS,\n  SET_ASSESSMENT_CONFIGURATIONS,\n  SET_COURSE_CONFIGURATION,\n  SET_COURSE_REGISTRATION,\n  SET_GITHUB_ACCESS_TOKEN,\n  SET_GITHUB_ASSESSMENT,\n  SET_GITHUB_OCTOKIT_OBJECT,\n  SET_GOOGLE_USER,\n  SET_TOKENS,\n  SET_USER,\n  UPDATE_ALL_USER_XP,\n  UPDATE_ASSESSMENT,\n  UPDATE_ASSESSMENT_OVERVIEWS,\n  UPDATE_GRADING,\n  UPDATE_GRADING_OVERVIEWS,\n  UPDATE_NOTIFICATIONS,\n  UPDATE_TOTAL_XP\n} from '../types/SessionTypes';\n\nexport const SessionsReducer: Reducer<SessionState> = (\n  state = defaultSession,\n  action: SourceActionType\n) => {\n  switch (action.type) {\n    case LOG_OUT:\n      return defaultSession;\n    case SET_GITHUB_ASSESSMENT:\n      return {\n        ...state,\n        githubAssessment: action.payload\n      };\n    case SET_GITHUB_OCTOKIT_OBJECT:\n      return {\n        ...state,\n        githubOctokitObject: { octokit: action.payload }\n      };\n    case SET_GITHUB_ACCESS_TOKEN:\n      return {\n        ...state,\n        githubAccessToken: action.payload\n      };\n    case SET_GOOGLE_USER:\n      return {\n        ...state,\n        googleUser: action.payload\n      };\n    case SET_TOKENS:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case SET_USER:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case SET_COURSE_CONFIGURATION:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case SET_COURSE_REGISTRATION:\n      return {\n        ...state,\n        ...action.payload\n      };\n    case SET_ASSESSMENT_CONFIGURATIONS:\n      return {\n        ...state,\n        assessmentConfigurations: action.payload\n      };\n    case SET_ADMIN_PANEL_COURSE_REGISTRATIONS:\n      return {\n        ...state,\n        userCourseRegistrations: action.payload\n      };\n    case UPDATE_ASSESSMENT:\n      const newAssessments = new Map(state.assessments);\n      newAssessments.set(action.payload.id, action.payload);\n      return {\n        ...state,\n        assessments: newAssessments\n      };\n    case UPDATE_ASSESSMENT_OVERVIEWS:\n      return {\n        ...state,\n        assessmentOverviews: action.payload\n      };\n    case UPDATE_TOTAL_XP:\n      return { ...state, xp: action.payload };\n    case UPDATE_ALL_USER_XP:\n      return { ...state, allUserXp: action.payload };\n    case UPDATE_GRADING:\n      const newGradings = new Map(state.gradings);\n      newGradings.set(action.payload.submissionId, action.payload.grading);\n      return {\n        ...state,\n        gradings: newGradings\n      };\n    case UPDATE_GRADING_OVERVIEWS:\n      return {\n        ...state,\n        gradingOverviews: action.payload\n      };\n    case UPDATE_NOTIFICATIONS:\n      return {\n        ...state,\n        notifications: action.payload\n      };\n    case REMOTE_EXEC_UPDATE_DEVICES:\n      return {\n        ...state,\n        remoteExecutionDevices: action.payload\n      };\n    case REMOTE_EXEC_UPDATE_SESSION:\n      return {\n        ...state,\n        remoteExecutionSession: action.payload\n      };\n    case REMOVE_GITHUB_OCTOKIT_OBJECT_AND_ACCESS_TOKEN:\n      return {\n        ...state,\n        githubOctokitObject: { octokit: undefined },\n        githubAccessToken: undefined\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport { AcademyReducer as academy } from '../../../features/academy/AcademyReducer';\nimport { AchievementReducer as achievement } from '../../../features/achievement/AchievementReducer';\nimport { DashboardReducer as dashboard } from '../../../features/dashboard/DashboardReducer';\nimport { PlaygroundReducer as playground } from '../../../features/playground/PlaygroundReducer';\nimport { WorkspaceReducer as workspaces } from '../../workspace/WorkspaceReducer';\nimport { ApplicationReducer as application } from '../ApplicationReducer';\nimport { SessionsReducer as session } from './SessionsReducer';\n\nconst createRootReducer = () =>\n  combineReducers({\n    academy,\n    achievement,\n    application,\n    dashboard,\n    playground,\n    session,\n    workspaces\n  });\n\nexport default createRootReducer;\n","import { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport {\n  Assessment,\n  AssessmentConfiguration,\n  AssessmentOverview,\n  AssessmentStatuses,\n  GradingStatuses,\n  IContestVotingQuestion,\n  IMCQQuestion,\n  IProgrammingQuestion,\n  Library,\n  TestcaseTypes\n} from '../assessment/AssessmentTypes';\n\nexport const mockAssessmentConfigurations: AssessmentConfiguration[][] = [\n  [\n    {\n      assessmentConfigId: 1,\n      type: 'Missions',\n      isManuallyGraded: true,\n      displayInDashboard: true,\n      hoursBeforeEarlyXpDecay: 48,\n      earlySubmissionXp: 200\n    },\n    {\n      assessmentConfigId: 2,\n      type: 'Quests',\n      isManuallyGraded: true,\n      displayInDashboard: true,\n      hoursBeforeEarlyXpDecay: 48,\n      earlySubmissionXp: 200\n    },\n    {\n      assessmentConfigId: 3,\n      type: 'Paths',\n      isManuallyGraded: true,\n      displayInDashboard: true,\n      hoursBeforeEarlyXpDecay: 48,\n      earlySubmissionXp: 200\n    },\n    {\n      assessmentConfigId: 4,\n      type: 'Contests',\n      isManuallyGraded: true,\n      displayInDashboard: true,\n      hoursBeforeEarlyXpDecay: 48,\n      earlySubmissionXp: 200\n    },\n    {\n      assessmentConfigId: 5,\n      type: 'Others',\n      isManuallyGraded: true,\n      displayInDashboard: true,\n      hoursBeforeEarlyXpDecay: 48,\n      earlySubmissionXp: 200\n    }\n  ],\n  [\n    {\n      assessmentConfigId: 1,\n      type: 'Mission Impossible',\n      isManuallyGraded: true,\n      displayInDashboard: true,\n      hoursBeforeEarlyXpDecay: 48,\n      earlySubmissionXp: 200\n    },\n    {\n      assessmentConfigId: 2,\n      type: 'Data Structures',\n      isManuallyGraded: true,\n      displayInDashboard: true,\n      hoursBeforeEarlyXpDecay: 48,\n      earlySubmissionXp: 200\n    },\n    {\n      assessmentConfigId: 3,\n      type: 'Algorithm Frenzy',\n      isManuallyGraded: true,\n      displayInDashboard: true,\n      hoursBeforeEarlyXpDecay: 48,\n      earlySubmissionXp: 200\n    }\n  ]\n];\n\nconst mockUnopenedAssessmentsOverviews: AssessmentOverview[] = [\n  {\n    type: 'Missions',\n    isManuallyGraded: true,\n    closeAt: '2048-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/300/',\n    id: 1,\n    maxXp: 1000,\n    openAt: '2038-06-18T05:24:26.026Z',\n    title: 'An Odessey to Runes (Duplicate)',\n    shortSummary:\n      'This is a test for the UI of the unopened assessment overview. It links to the mock Mission 0',\n    status: AssessmentStatuses.not_attempted,\n    story: 'mission-1',\n    xp: 0,\n    gradingStatus: GradingStatuses.none\n  }\n];\n\nconst mockOpenedAssessmentsOverviews: AssessmentOverview[] = [\n  {\n    type: 'Missions',\n    isManuallyGraded: true,\n    closeAt: '2048-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/300/',\n    id: 1,\n    maxXp: 1000,\n    openAt: '2018-06-18T05:24:26.026Z',\n    title: 'An Odessey to Runes',\n    shortSummary: `\n  *Lorem ipsum* dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n  incididunt ut labore et dolore magna aliqua.\n  \n  \\`\\`\\`\n  const a = 5;\n  \\`\\`\\`\n  \n  Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium\n  _doloremque laudantium_, totam rem aperiam, eaque ipsa quae ab illo inventore\n  [veritatis et quasi architecto](google.com) beatae vitae dicta sunt\n  \\`explicabo\\`.\n  \n  `,\n    status: AssessmentStatuses.attempted,\n    story: 'mission-1',\n    xp: 1,\n    gradingStatus: GradingStatuses.none\n  },\n  {\n    type: 'Missions',\n    isManuallyGraded: true,\n    closeAt: '2048-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/?text=World&font=lobster',\n    id: 2,\n    maxXp: 1000,\n    openAt: '2018-07-18T05:24:26.026Z',\n    title: 'The Secret to Streams',\n    shortSummary:\n      'Once upon a time, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin nec vulputate sapien. Fusce vel lacus fermentum, efficitur ipsum.',\n    status: AssessmentStatuses.attempting,\n    story: 'mission-2',\n    xp: 2,\n    gradingStatus: GradingStatuses.none\n  },\n  {\n    type: 'Quests',\n    isManuallyGraded: true,\n    closeAt: '2048-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/?text=Hello',\n    id: 3,\n    maxXp: 1000,\n    openAt: '2018-07-18T05:24:26.026Z',\n    title: 'A sample Sidequest',\n    shortSummary:\n      'Once upon a time, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin nec vulputate sapien. Fusce vel lacus fermentum, efficitur ipsum.',\n    status: AssessmentStatuses.not_attempted,\n    story: 'sidequest-2.1',\n    xp: 3,\n    gradingStatus: GradingStatuses.none\n  },\n  {\n    type: 'Paths',\n    isManuallyGraded: true,\n    closeAt: '2069-04-20T01:23:45.111Z',\n    coverImage: 'https://fakeimg.pl/700x400/417678,64/?text=%E3%83%91%E3%82%B9&font=noto',\n    id: 6,\n    maxXp: 200,\n    openAt: '2018-01-01T00:00:00.000Z',\n    title: 'Basic logic gates',\n    shortSummary:\n      'This mock path serves as a demonstration of the support provided for mock programming path functionality.',\n    status: AssessmentStatuses.not_attempted,\n    story: null,\n    xp: 0,\n    gradingStatus: GradingStatuses.excluded\n  },\n  {\n    type: 'Others',\n    isManuallyGraded: false,\n    closeAt: '2048-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/?text=Hello',\n    id: 5,\n    maxXp: 1000,\n    openAt: '2018-07-18T05:24:26.026Z',\n    title: 'A sample Practical',\n    shortSummary:\n      'Once upon a time, Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin nec vulputate sapien. Fusce vel lacus fermentum, efficitur ipsum.',\n    status: AssessmentStatuses.not_attempted,\n    story: 'sidequest-2.1',\n    xp: 3,\n    gradingStatus: GradingStatuses.none,\n    private: true\n  }\n];\n\nconst mockClosedAssessmentOverviews: AssessmentOverview[] = [\n  {\n    type: 'Missions',\n    isManuallyGraded: true,\n    closeAt: '2008-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/ff0000/000',\n    id: 4,\n    maxXp: 1000,\n    openAt: '2007-07-18T05:24:26.026Z',\n    title: 'A closed Mission',\n    shortSummary:\n      'This is a test for the grading status tooltip when the assessment is partially graded (undergoing manual grading). It should render as an orange clock.',\n    status: AssessmentStatuses.submitted,\n    story: 'mission-3',\n    xp: 800,\n    gradingStatus: GradingStatuses.grading\n  },\n  {\n    type: 'Quests',\n    isManuallyGraded: true,\n    closeAt: '2008-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/ff0000,128/000,255',\n    id: 5,\n    maxXp: 1000,\n    openAt: '2007-07-18T05:24:26.026Z',\n    title: 'Closed (not graded) Sidequest',\n    shortSummary:\n      'This is a test for the grading status tooltip when the assessment is not graded. It should render as a red cross.',\n    status: AssessmentStatuses.submitted,\n    story: null,\n    xp: 500,\n    gradingStatus: GradingStatuses.none\n  },\n  {\n    type: 'Quests',\n    isManuallyGraded: true,\n    closeAt: '2008-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/ff0000,128/000,255',\n    id: 5,\n    maxXp: 500,\n    openAt: '2007-07-18T05:24:26.026Z',\n    title: 'Closed (fully graded) Sidequest',\n    shortSummary:\n      'This is a test for the grading status tooltip when the assessment is fully graded. It should render as a green tick. This sidequest links to the mock Sidequest 4.',\n    status: AssessmentStatuses.submitted,\n    story: null,\n    xp: 150,\n    gradingStatus: GradingStatuses.graded\n  },\n  {\n    type: 'Quests',\n    isManuallyGraded: true,\n    closeAt: '2008-06-18T05:24:26.026Z',\n    coverImage: 'https://fakeimg.pl/350x200/ff0000/000',\n    id: 5,\n    maxXp: 0,\n    openAt: '2007-07-18T05:24:26.026Z',\n    title: 'Ungraded assessment',\n    shortSummary:\n      'This is a test for the grading status tooltip when the assessment does not require manual grading (e.g. paths and contests). It should render as a blue disable sign. This sidequest links to the mock Sidequest 4.',\n    status: AssessmentStatuses.submitted,\n    story: null,\n    xp: 100,\n    gradingStatus: GradingStatuses.excluded\n  }\n];\n\nexport const mockAssessmentOverviews = [\n  ...mockUnopenedAssessmentsOverviews,\n  ...mockOpenedAssessmentsOverviews,\n  ...mockClosedAssessmentOverviews\n];\n\nexport const mockLibrary: Library = {\n  external: {\n    name: ExternalLibraryName.NONE,\n    symbols: []\n  },\n  globals: []\n};\n\nexport const mockAssessmentQuestions: Array<IProgrammingQuestion | IMCQQuestion> = [\n  {\n    autogradingResults: [],\n    answer: null,\n    content: `\n  This question has an id of \\`0\\`.\n  \n  \\`\\`\\`\n  What's your favourite dinner food?\n  \\`\\`\\`\n  `,\n    id: 0,\n    library: mockLibrary,\n    prepend: `const pizza = \"pizza\";\n  const sushi = \"sushi\";\n  const chickenrice = \"chicken rice\";`,\n    postpend: \"// This is a mock Postpend! You shouldn't be able to see me!\",\n    testcases: [\n      {\n        type: TestcaseTypes.public,\n        program: `answer();`,\n        score: 1,\n        answer: `\"pizza\"`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `answer();`,\n        score: 1,\n        answer: `\"sushi\"`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `answer();`,\n        score: 1,\n        answer: `\"chicken rice\"`\n      }\n    ],\n    solutionTemplate: `function answer() {\n      // Write something here!\n  }\n  `,\n    type: 'programming',\n    xp: 0,\n    maxXp: 2,\n    blocking: false\n  },\n  {\n    autogradingResults: [],\n    answer: `function areaOfCircle(x) {\n      return square(x) * pi;\n  }\n  \n  function volumeOfSphere(x) {\n      return 4 / 3 * cube(x) * pi;\n  }`,\n    content: 'Hello and welcome to this assessment! This is the 1st question.',\n    id: 1,\n    library: mockLibrary,\n    prepend: `const square = x => x * x;\n  const cube = x => x * x * x;\n  const pi = 3.1415928;`,\n    postpend: '',\n    testcases: [\n      {\n        type: TestcaseTypes.public,\n        program: `areaOfCircle(5);`,\n        score: 1,\n        answer: `78.53982`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `volumeOfSphere(5);`,\n        score: 1,\n        answer: `523.5988`\n      }\n    ],\n    solutionTemplate: `function areaOfCircle(x) {\n      // return area of circle\n  }\n  \n  function volumeOfSphere(x) {\n      // return volume of sphere\n  }`,\n    type: 'programming',\n    xp: 0,\n    maxXp: 2,\n    blocking: false\n  },\n  {\n    answer: 3,\n    content:\n      'This is the 3rd question. Oddly enough, it is an ungraded MCQ question that uses the binary tree library! Option C has a null hint!',\n    choices: [\n      {\n        content: '**Option** `A`',\n        hint: '_hint_ A is `here`'\n      },\n      {\n        content: '### B',\n        hint: 'hint B'\n      },\n      {\n        content: 'C',\n        hint: null\n      },\n      {\n        content: 'D',\n        hint: 'hint D'\n      }\n    ],\n    id: 2,\n    library: mockLibrary,\n    type: 'mcq',\n    solution: 0,\n    xp: 0,\n    maxXp: 2,\n    blocking: false\n  },\n  {\n    answer: 3,\n    content:\n      'This is the 4th question. Oddly enough, it is a graded MCQ question that uses the binary tree library!',\n    choices: [\n      {\n        content: 'A',\n        hint: null\n      },\n      {\n        content: 'B',\n        hint: null\n      },\n      {\n        content: 'C',\n        hint: null\n      },\n      {\n        content: 'D',\n        hint: null\n      }\n    ],\n    id: 3,\n    library: mockLibrary,\n    type: 'mcq',\n    solution: undefined,\n    xp: 0,\n    maxXp: 2,\n    blocking: false\n  },\n  {\n    autogradingResults: [],\n    answer: null,\n    content: 'You have reached the last question! Have some fun with the tone matrix...',\n    id: 4,\n    library: mockLibrary,\n    prepend: '',\n    postpend: '',\n    testcases: [],\n    solutionTemplate: '5th question mock solution template',\n    type: 'programming',\n    xp: 0,\n    maxXp: 2,\n    blocking: false\n  }\n];\n\nexport const mockClosedAssessmentQuestions: Array<IProgrammingQuestion | IMCQQuestion> = [\n  {\n    answer: `function fibonacci(n) {\n      if (n <= 2) {\n          return 1;\n      } else {\n          return fibonacci(n-1) + fibonacci(n-2);\n      }\n  }`,\n    content: 'You can see autograding results!!!',\n    id: 0,\n    library: mockLibrary,\n    prepend: '',\n    postpend: \"// This is a mock Postpend! You shouldn't be able to see me!\",\n    testcases: [\n      {\n        type: TestcaseTypes.public,\n        program: `fibonacci(3);`,\n        score: 1,\n        answer: `2`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `fibonacci(4);`,\n        score: 1,\n        answer: `3`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `fibonacci(5);`,\n        score: 1,\n        answer: `5`\n      }\n    ],\n    solutionTemplate: `function fibonacci(n) {\n      // Your answer here\n  }`,\n    type: 'programming',\n    grader: {\n      name: 'avenger',\n      id: 1\n    },\n    gradedAt: '2038-06-18T05:24:26.026Z',\n    xp: 0,\n    maxXp: 2,\n    blocking: false,\n    comments: `Good job. You are awarded the full marks!\n  \n  ----\n  ## markdown test\n  \n  # header\n  \n  **bold**\n  \n  _italics_\n  \n  * list\n  \n  1. numbered list\n  \n  - [] checkboxes\n  \n  > quote\n  \n      code\n  \n  [link to Source Academy](https://sourceacademy.nus.edu.sg)  \n  \n  ![](image-url-goes-here)`,\n    autogradingResults: [\n      {\n        resultType: 'pass'\n      },\n      {\n        resultType: 'fail',\n        expected: '8',\n        actual: '5'\n      },\n      {\n        resultType: 'error',\n        errors: [\n          {\n            errorType: 'timeout'\n          },\n          {\n            errorType: 'syntax',\n            line: 1,\n            location: 'student',\n            errorLine: 'function fibonacci(n) {',\n            errorExplanation: 'Just kidding!'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    answer: `function recurse(rune, n) {\n      return n <= 1 ? rune : make_cross(recurse(rune, n - 1));\n  }`,\n    content: 'This is a runes question - there are no testcases nor autograding results.',\n    id: 1,\n    library: mockLibrary,\n    prepend: '',\n    postpend: '',\n    testcases: [],\n    solutionTemplate: `function recurse(rune, n) {\n      // Your answer here\n  }`,\n    type: 'programming',\n    grader: {\n      name: 'some avenger',\n      id: 1\n    },\n    gradedAt: '2038-06-18T05:24:26.026Z',\n    xp: 0,\n    maxXp: 2,\n    blocking: false,\n    comments: `You open the Report Card, not knowing what to expect...\n  \n      ## WOW!\n      Amazing grasp of runes. We can now move on to the next assignment.\n      \n      <br/>\n      \n      Robot Dog: \\`woof\\`\n      \n      You look at the display of the robot dog.\n      \n          FEED ME\n      1. Bread\n      2. Water\n      \n      <br/>\n      \n      * I am hungry.\n      * I am thirsty.\n      \n      <br/>\n      <br/>\n          \n      New message from **Avenger**!\n      \n      > _Cadet, please meet me at Level X-05, outside the pod bay doors. There is an important mission awaiting us._\n      \n      > _May the [Source](https://sourceacademy.nus.edu.sg) be with you._\n      \n      > Best regards, Avocado A. Avenger\n      \n      #### Upcoming Tasks\n      - [] Meet Avenger Avenger at Level X-05\n      - [] Open the Pod Bay Doors`,\n    autogradingResults: []\n  }\n];\n\nexport const mockPathQuestions: Array<IProgrammingQuestion | IMCQQuestion> = [\n  {\n    answer: null,\n    content: 'As a recap: which of the following is not a valid logic gate?',\n    choices: [\n      {\n        content: 'XOR gate',\n        hint: 'This is the exclusive-OR gate!'\n      },\n      {\n        content: 'IF gate',\n        hint: 'Correct!'\n      },\n      {\n        content: 'AND gate',\n        hint: 'This logic gate exists!'\n      },\n      {\n        content: 'OR gate',\n        hint: 'This logic gate exists!'\n      }\n    ],\n    id: 0,\n    library: mockLibrary,\n    type: 'mcq',\n    solution: 1,\n    xp: 0,\n    maxXp: 0,\n    blocking: false\n  },\n  {\n    autogradingResults: [],\n    answer: null,\n    content: `An AND gate is a digital logic gate that implements logical conjunction on its inputs. It returns a single output that is HIGH (active) iff all the inputs to the AND gate are HIGH (active).\n  \n  In this question, let us model an AND gate as a function, and treat HIGH (active) inputs as the boolean value \\`true\\` and LOW (inactive) inputs as the boolean value \\`false\\`.\n  \n  As an AND gate is not restricted to exactly two inputs, our function shall be the same. Implement the function \\`AND(inputs)\\` which takes in the list \\`inputs\\` (a list of boolean values), and returns the output of the AND gate as a boolean. You may assume the list \\`inputs\\` is of minimum length 2.\n  \n  This question makes use of the sentinel function method to throw custom errors for each testcase.`,\n    id: 1,\n    library: mockLibrary,\n    prepend: `const OR = (x, y) => x || y;`,\n    postpend: `\n  const __AND = (xs) => {\n    if (AND(list(true, true)) === undefined) {\n      error('Your function is empty!');\n    } else {}\n    \n    const result = AND(xs);\n  \n    if (!is_boolean(result)) {\n      error('Your function does not return a boolean!');\n    } else {}\n    \n    if (equal(xs, list(true, false)) && result) {\n      error('Check the truth table for an AND gate again!');\n    } else if (equal(xs, list(true, true, false)) && result) {\n      error('Are you using all inputs in the list?');\n    } else if (equal(xs, list(true, true, true)) && !result) {\n      error('Are you sure your base case is correct?');\n    } else if (AND(list(true, true)) === AND(list(false, false))) {\n      error('Oi! Do not hardcode values!');\n    } else {\n      return result;\n    }\n  };`,\n    testcases: [\n      {\n        type: TestcaseTypes.public,\n        program: `__AND(list(true, false));`,\n        score: 0,\n        answer: `false`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `__AND(list(true, true, false));`,\n        score: 0,\n        answer: `false`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `__AND(list(true, OR(true, false), OR(true, true)));`,\n        score: 0,\n        answer: `true`\n      },\n      {\n        type: TestcaseTypes.opaque,\n        program: `__AND(list(true, OR(false, true), AND(list(true, false)), false));`,\n        score: 0,\n        answer: `false`\n      },\n      {\n        type: TestcaseTypes.opaque,\n        program: `__AND(list(true, OR(true, false), OR(true, AND(list(false, true))), true));`,\n        score: 0,\n        answer: `true`\n      }\n    ],\n    solutionTemplate: `function AND(inputs) {\n      // Your answer here!\n  }`,\n    type: 'programming',\n    xp: 0,\n    maxXp: 0,\n    blocking: false\n  },\n  {\n    autogradingResults: [],\n    answer: null,\n    content: `The XOR (exclusive-OR) gate is a digital logic gate that accepts two inputs and returns a single output that is HIGH (active) iff one of the inputs are HIGH (active), but not both.\n  \n  In this question, let us model the XOR gate as a function. Implement the function \\`XOR(x, y)\\` which takes two boolean inputs \\`x\\` and \\`y\\` and which returns the output of the XOR gate as a boolean.\n  \n  This question makes use of the wrapping container method to throw custom errors for each testcase.`,\n    id: 2,\n    library: mockLibrary,\n    prepend: ``,\n    postpend: `\n  const __XOR = (x, y) => {\n    if (XOR(false, false) === undefined) {\n      error('Your function is empty!');\n    } else {}\n    \n    const result = XOR(x, y);\n  \n    if (!is_boolean(result)) {\n      error('Your function does not return a boolean!');\n    } else {}\n    \n    if (((x && !y) || (y && !x)) && !result) {\n      error('Check your truth tables!');\n    } else if (XOR(false, false) === XOR(false, true)) {\n      error('Oi! Do not hardcode values!');\n    } else {\n      return result;\n    }\n  };`,\n    testcases: [\n      {\n        type: TestcaseTypes.public,\n        program: `__XOR(true, false);`,\n        score: 0,\n        answer: `true`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `__XOR(false, true);`,\n        score: 0,\n        answer: `true`\n      },\n      {\n        type: TestcaseTypes.opaque,\n        program: `__XOR(true, XOR(true, false));`,\n        score: 0,\n        answer: `false`\n      }\n    ],\n    solutionTemplate: `function XOR(x, y) {\n      // Your answer here!\n  }`,\n    type: 'programming',\n    xp: 0,\n    maxXp: 0,\n    blocking: false\n  },\n  {\n    autogradingResults: [],\n    answer: null,\n    content: `The NOR logic gate is special in that it is an _universal logic gate_, that is to say, they can be composed to form any other logic gate.\n  \n  Implement the AND logic gate **using ONLY the NOR logic gate**, as the \\`NOR_AND(x, y)\\` function that takes in two booleans as input.\n  \n  The \\`NOR\\` function modeled after a NOR gate is provided for you - it accepts two boolean values and returns \\`true\\` iff both inputs are \\`false\\`.`,\n    id: 3,\n    library: mockLibrary,\n    prepend: `\n  let counter = 0;\n  const NOR = (x, y) => {\n    counter = counter + 1;\n    return !(x || y);\n  };`,\n    postpend: `\n  const __NOR_AND = (x, y) => {\n    if (NOR_AND(false, false) === undefined) {\n      error('Your function is empty!');\n    } else {}\n    \n    counter = 0;\n    const result = NOR_AND(x, y);\n  \n    if (!is_boolean(result)) {\n      error('Your function does not return a boolean!');\n    } else {}\n    \n    if (!x && y && result) {\n      error('Check your truth tables!');\n    } else if (x && y && !result && counter > 0) {\n      error('Nope! Try again :)');\n    } else if (x && y && !result) {\n      error('...You did not use NOR and still got it wrong!');\n    } else if (x && y && result && counter !== 3) {\n      error('Did you use NOR in your solution? >:(');\n    } else if (x && !y && counter !== 6) {\n      error('Incorrect number of calls.');\n    } else {\n      return result;\n    }\n  };`,\n    testcases: [\n      {\n        type: TestcaseTypes.public,\n        program: `__NOR_AND(false, true);`,\n        score: 0,\n        answer: `false`\n      },\n      {\n        type: TestcaseTypes.public,\n        program: `__NOR_AND(true, true);`,\n        score: 0,\n        answer: `true`\n      },\n      {\n        type: TestcaseTypes.opaque,\n        program: `__NOR_AND(true, NOR_AND(false, true));`,\n        score: 0,\n        answer: `false`\n      }\n    ],\n    solutionTemplate: `function NOR_AND(x, y) {\n      // Your answer here!\n  }`,\n    type: 'programming',\n    xp: 0,\n    maxXp: 0,\n    blocking: false\n  }\n];\n\nconst mockContestEntryQuestion: Array<IContestVotingQuestion> = [\n  {\n    id: 0,\n    type: 'voting',\n    content: 'Sample Contest Voting Question',\n    xp: 0,\n    maxXp: 0,\n    answer: [],\n    prepend: '',\n    postpend: '',\n    contestEntries: [\n      {\n        submission_id: 1,\n        answer: { code: \"display('voting test')\" }\n      },\n      {\n        submission_id: 2,\n        answer: { code: 'function voting_test() { return true; }' }\n      }\n    ],\n    contestLeaderboard: [\n      {\n        submission_id: 1,\n        student_name: 'student_1',\n        answer: { code: \"display('leaderboard test')\" }\n      },\n      {\n        submission_id: 2,\n        student_name: 'student_2',\n        answer: { code: 'function leaderboard_test() { return true; }' }\n      }\n    ],\n    library: mockLibrary,\n    blocking: false\n  }\n];\n\n/*\n * A few Assessments to try out in workspaces.\n */\nexport const mockAssessments: Assessment[] = [\n  {\n    type: 'Missions',\n    id: 1,\n    longSummary:\n      'This is the mission briefing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra, sem scelerisque ultricies ullamcorper, sem nibh sollicitudin enim, at ultricies sem orci eget odio. Pellentesque varius et mauris quis vestibulum. Etiam in egestas dolor. Nunc consectetur, sapien sodales accumsan convallis, lectus mi tempus ipsum, vel ornare metus turpis sed justo. Vivamus at tellus sed ex convallis commodo at in lectus. Pellentesque pharetra pulvinar sapien pellentesque facilisis. Curabitur efficitur malesuada urna sed aliquam. Quisque massa metus, aliquam in sagittis non, cursus in sem. Morbi vel nunc at nunc pharetra lobortis. Aliquam feugiat ultricies ipsum vel sollicitudin. Vivamus nulla massa, hendrerit sit amet nibh quis, porttitor convallis nisi. ',\n    missionPDF: 'www.google.com',\n    questions: mockAssessmentQuestions,\n    title: 'An Odessey to Runes'\n  },\n  {\n    type: 'Missions',\n    id: 2,\n    longSummary:\n      'This is the mission briefing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra, sem scelerisque ultricies ullamcorper, sem nibh sollicitudin enim, at ultricies sem orci eget odio. Pellentesque varius et mauris quis vestibulum. Etiam in egestas dolor. Nunc consectetur, sapien sodales accumsan convallis, lectus mi tempus ipsum, vel ornare metus turpis sed justo. Vivamus at tellus sed ex convallis commodo at in lectus. Pellentesque pharetra pulvinar sapien pellentesque facilisis. Curabitur efficitur malesuada urna sed aliquam. Quisque massa metus, aliquam in sagittis non, cursus in sem. Morbi vel nunc at nunc pharetra lobortis. Aliquam feugiat ultricies ipsum vel sollicitudin. Vivamus nulla massa, hendrerit sit amet nibh quis, porttitor convallis nisi. ',\n    missionPDF: 'www.google.com',\n    questions: mockAssessmentQuestions,\n    title: 'The Secret to Streams'\n  },\n  {\n    type: 'Quests',\n    id: 3,\n    longSummary: `###This is the sidequest briefing.\n  \n  *Lorem ipsum* dolor sit amet, consectetur adipiscing elit.\n  \n  > Maecenas viverra, sem scelerisque ultricies ullamcorper, sem nibh sollicitudin\n  enim, at ultricies sem orci eget odio. Pellentesque varius et mauris quis\n  vestibulum.\n  \n  - Etiam in egestas dolor.\n  - Nunc consectetur, sapien sodales accumsan convallis, lectus mi tempus ipsum,\n    vel ornare metus turpis sed justo.\n  - Vivamus at tellus sed ex convallis commodo at in lectus.\n  \n  \\`\\`\\`\n  Pellentesque\n  pharetra\n  pulvinar\n  sapien\n  \\`\\`\\``,\n    missionPDF: 'www.google.com',\n    questions: mockAssessmentQuestions,\n    title: 'A sample Sidequest'\n  },\n  {\n    type: 'Missions',\n    id: 4,\n    longSummary:\n      'This is the closed mission briefing. The save button should not be there. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra, sem scelerisque ultricies ullamcorper, sem nibh sollicitudin enim, at ultricies sem orci eget odio. Pellentesque varius et mauris quis vestibulum. Etiam in egestas dolor. Nunc consectetur, sapien sodales accumsan convallis, lectus mi tempus ipsum, vel ornare metus turpis sed justo. Vivamus at tellus sed ex convallis commodo at in lectus. Pellentesque pharetra pulvinar sapien pellentesque facilisis. Curabitur efficitur malesuada urna sed aliquam. Quisque massa metus, aliquam in sagittis non, cursus in sem. Morbi vel nunc at nunc pharetra lobortis. Aliquam feugiat ultricies ipsum vel sollicitudin. Vivamus nulla massa, hendrerit sit amet nibh quis, porttitor convallis nisi. ',\n    missionPDF: 'www.google.com',\n    questions: mockClosedAssessmentQuestions,\n    title: 'A Closed Mission'\n  },\n  {\n    type: 'Quests',\n    id: 5,\n    longSummary:\n      'This is the closed sidequest briefing. The save button should not exist. This is a placeholder sidequest for testing rendering of grading statuses.',\n    missionPDF: 'www.google.com',\n    questions: mockClosedAssessmentQuestions,\n    title: 'A Closed Sidequest'\n  },\n  {\n    type: 'Paths',\n    id: 6,\n    longSummary: `### Basic logic gates\n  \n  This path is intended to demonstrate concepts from the lecture **Logic Circuits**. You are strongly encouraged to attempt this path to check your understanding, prior to the next Studio session. For this, you will be granted a small amount of XP!\n  \n  The path comprises 4 questions and is fully autograded and guided, and there are **no private test cases** - there will be no manual review by default. Please consult your Avenger if you require assistance!</TEXT>`,\n    missionPDF: 'www.google.com',\n    questions: mockPathQuestions,\n    title: 'A sample guided path'\n  },\n  // mock assessment used for testing contest voting assessments\n  {\n    type: 'Others',\n    id: 7,\n    title: 'A sample contest voting assessment',\n    longSummary: 'Vote for your favourite contest entries here!',\n    missionPDF: 'www.google.com',\n    questions: mockContestEntryQuestion\n  }\n];\n","import { Chapter, Variant } from 'Clang-slang/dist/types';\n\nimport { GameState, Role } from '../application/ApplicationTypes';\nimport {\n  AdminPanelCourseRegistration,\n  CourseConfiguration,\n  CourseRegistration,\n  User\n} from '../application/types/SessionTypes';\nimport { Notification, NotificationTypes } from '../notificationBadge/NotificationBadgeTypes';\n\n/**\n * Mock for fetching a role, given an access token. A null\n * value is returned for invalid tokens. Fetching a particular\n * role can be simluated using an optional paramter.\n *\n * @param accessToken a valid access token for the cadet backend.\n * @param mockRole a role to mock retrieval for.\n */\nexport const mockFetchRole = (accessToken: string, role: Role = Role.Staff): Role | null => {\n  return role;\n};\n\n/**\n * Represents the information for a student.\n * TODO move this to a separate file once API specs are confirmed.\n */\nexport type StudentInfo = {\n  id: number;\n  totalXP: number;\n};\n\nconst mockStudentInfo = [\n  {\n    id: 0,\n    totalXP: 69\n  },\n  {\n    id: 1,\n    totalXP: 1000\n  }\n];\n\nexport const mockUser: User = {\n  userId: 123,\n  name: 'DevAdmin',\n  courses: [\n    {\n      courseId: 1,\n      courseName: `CS1101S Programming Methodology (AY20/21 Sem 1)`,\n      courseShortName: `CS1101S`,\n      role: Role.Admin,\n      viewable: true\n    },\n    {\n      courseId: 2,\n      courseName: `CS2040S Data Structures and Algorithms (AY20/21 Sem 2)`,\n      courseShortName: `CS2040S`,\n      role: Role.Admin,\n      viewable: false\n    },\n    {\n      courseId: 3,\n      courseName: `CS2030S Programming Methodology II (AY21/22 Sem 1)`,\n      courseShortName: `CS2030S`,\n      role: Role.Staff,\n      viewable: false\n    }\n  ]\n};\n\nexport const mockCourseRegistrations: CourseRegistration[] = [\n  {\n    courseRegId: 1,\n    role: Role.Admin,\n    group: '1F',\n    gameState: {} as GameState,\n    courseId: 1,\n    xp: 0,\n    story: {\n      story: 'mission-1',\n      playStory: true\n    },\n    agreedToResearch: true\n  },\n  {\n    courseRegId: 2,\n    role: Role.Student,\n    group: '1F',\n    gameState: {} as GameState,\n    courseId: 2,\n    xp: 0,\n    story: {\n      story: 'mission-1',\n      playStory: true\n    },\n    agreedToResearch: true\n  }\n];\n\nexport const mockAdminPanelCourseRegistrations: AdminPanelCourseRegistration[] = [\n  {\n    courseRegId: 1,\n    courseId: 1,\n    name: 'DevAdmin',\n    username: 'test/admin',\n    role: Role.Admin\n  },\n  {\n    courseRegId: 3,\n    courseId: 1,\n    name: 'Dummy student',\n    username: 'test/student',\n    role: Role.Student\n  },\n  {\n    courseRegId: 4,\n    courseId: 1,\n    name: 'Dummy staff',\n    username: 'test/staff',\n    role: Role.Staff\n  }\n];\n\nexport const mockCourseConfigurations: CourseConfiguration[] = [\n  {\n    courseName: `CS1101S Programming Methodology (AY20/21 Sem 1)`,\n    courseShortName: `CS1101S`,\n    viewable: true,\n    enableGame: false,\n    enableAchievements: true,\n    enableSourcecast: true,\n    sourceChapter: Chapter.CLANG,\n    sourceVariant: Variant.DEFAULT,\n    moduleHelpText: '',\n    assetsPrefix: ''\n  },\n  {\n    courseName: `CS2040S Data Structures and Algorithms (AY20/21 Sem 2)`,\n    courseShortName: `CS2040S`,\n    viewable: true,\n    enableGame: false,\n    enableAchievements: false,\n    enableSourcecast: false,\n    sourceChapter: Chapter.CLANG,\n    sourceVariant: Variant.DEFAULT,\n    moduleHelpText: 'Help Text!',\n    assetsPrefix: ''\n  }\n];\n\n/**\n * Mock for fetching a trainer/admin's student information. A null value\n * is returned for invalid token or role.\n *\n * @param accessToken a valid access token for the cadet backend.\n */\nexport const mockFetchStudentInfo = (accessToken: string): StudentInfo[] | null => {\n  // mocks backend role fetching\n  const permittedRoles: Role[] = [Role.Admin, Role.Staff];\n  const role: Role | null = mockFetchRole(accessToken);\n  if (role === null || !permittedRoles.includes(role)) {\n    return null;\n  } else {\n    return mockStudentInfo;\n  }\n};\n\nexport const mockNotifications: Notification[] = [\n  {\n    id: 1,\n    type: NotificationTypes.deadline,\n    assessment_id: 3,\n    assessment_type: 'Quests',\n    assessment_title: 'The Secret to Streams'\n  },\n  {\n    id: 2,\n    type: NotificationTypes.autograded,\n    assessment_id: 4,\n    assessment_type: 'Missions',\n    assessment_title: 'A Closed Mission'\n  },\n  {\n    id: 3,\n    type: NotificationTypes.graded,\n    assessment_id: 4,\n    assessment_type: 'Missions',\n    assessment_title: 'A Closed Mission'\n  },\n  {\n    id: 4,\n    type: NotificationTypes.new,\n    assessment_id: 6,\n    assessment_type: 'Paths',\n    assessment_title: 'Basic Logic'\n  },\n  {\n    id: 5,\n    type: NotificationTypes.new,\n    assessment_id: 7,\n    assessment_type: 'Missions',\n    assessment_title: 'Symphony of the Winds'\n  },\n  {\n    id: 6,\n    type: NotificationTypes.submitted,\n    submission_id: 1,\n    assessment_type: 'Missions',\n    assessment_title: 'Mission 0'\n  },\n  {\n    id: 7,\n    type: NotificationTypes.submitted,\n    submission_id: 2,\n    assessment_type: 'Missions',\n    assessment_title: 'Mission 1'\n  },\n  {\n    id: 8,\n    type: NotificationTypes.submitted,\n    submission_id: 3,\n    assessment_type: 'Missions',\n    assessment_title: 'Mission 0'\n  }\n];\n","import { GradingSummary } from '../../features/dashboard/DashboardTypes';\nimport { Grading, GradingOverview } from '../../features/grading/GradingTypes';\nimport { Role } from '../application/ApplicationTypes';\nimport { Testcase, TestcaseTypes } from '../assessment/AssessmentTypes';\nimport { mockLibrary } from './AssessmentMocks';\nimport { mockFetchRole } from './UserMocks';\n\nexport const mockGradingOverviews: GradingOverview[] = [\n  {\n    xpAdjustment: 0,\n    assessmentType: 'Missions',\n    assessmentId: 0,\n    assessmentName: 'Mission 0 ',\n    currentXp: 69,\n    xpBonus: 10,\n    initialXp: 69,\n    maxXp: 100,\n    studentId: 0,\n    studentName: 'Al Gorithm',\n    submissionId: 1,\n    submissionStatus: 'submitted',\n    groupName: '1D',\n    gradingStatus: 'graded',\n    questionCount: 6,\n    gradedCount: 6\n  },\n  {\n    xpAdjustment: -2,\n    assessmentType: 'Missions',\n    assessmentId: 1,\n    assessmentName: 'Mission 1',\n    currentXp: -2,\n    xpBonus: 12,\n    initialXp: 0,\n    maxXp: 400,\n    studentId: 0,\n    studentName: 'Dee Sign',\n    submissionId: 2,\n    submissionStatus: 'submitted',\n    groupName: '1F',\n    gradingStatus: 'grading',\n    questionCount: 6,\n    gradedCount: 2\n  },\n  {\n    xpAdjustment: 4,\n    assessmentType: 'Missions',\n    assessmentId: 0,\n    assessmentName: 'Mission 0',\n    currentXp: 1000,\n    xpBonus: 12,\n    initialXp: 996,\n    maxXp: 1000,\n    studentId: 1,\n    studentName: 'May Trix',\n    submissionId: 3,\n    submissionStatus: 'submitted',\n    groupName: '1F',\n    gradingStatus: 'none',\n    questionCount: 6,\n    gradedCount: 0\n  }\n];\n\n/**\n * Mock for fetching a trainer/admin's student grading information.\n * A null value is returned for invalid token or role.\n *\n * @param accessToken a valid access token for the cadet backend.\n * @param group a boolean if true, only fetches submissions from the grader's group\n */\nexport const mockFetchGradingOverview = (\n  accessToken: string,\n  group: boolean\n): GradingOverview[] | null => {\n  // mocks backend role fetching\n  const permittedRoles: Role[] = [Role.Admin, Role.Staff];\n  const role: Role | null = mockFetchRole(accessToken);\n  if (role === null || !permittedRoles.includes(role)) {\n    return null;\n  } else {\n    return group\n      ? [mockGradingOverviews[0]]\n      : mockGradingOverviews.sort((subX: GradingOverview, subY: GradingOverview) =>\n          subX.assessmentId !== subY.assessmentId\n            ? subY.assessmentId - subX.assessmentId\n            : subY.submissionId - subX.submissionId\n        );\n  }\n};\n\nexport const mockTestcases: Testcase[] = [\n  { type: TestcaseTypes.public, program: `remainder(12, 7);`, score: 1, answer: `5` },\n  { type: TestcaseTypes.public, program: `remainder(6, 1);`, score: 2, answer: `0` },\n  { type: TestcaseTypes.opaque, program: `remainder(-15, 6);`, score: 2, answer: `-3` },\n  { type: TestcaseTypes.opaque, program: `remainder(17, 23) === 17;`, score: 2, answer: `true` }\n];\n\nexport const mockGrading: Grading = [\n  {\n    question: {\n      answer: `function remainder(n, d) {\n  return (n - d) < 0 ? n : remainder(n - d, d);\n}`,\n      content: `\nHello and welcome to this assessment! This is the *0th question*.\n\n\\`\\`\\`\n>>> import this\n\\`\\`\\`\n`,\n      prepend: '// THIS IS A PREPEND',\n      postpend: '// THIS IS A POSTPEND',\n      testcases: mockTestcases,\n      id: 0,\n      library: mockLibrary,\n      solutionTemplate: '0th question mock solution template',\n      solution: `This is how the 0th question is solved. [7 points]\n\nfunction remainder(n, d) {\n  return n % d;\n}`,\n      type: 'programming',\n      maxXp: 1000,\n      grader: {\n        name: 'avenger',\n        id: 1\n      },\n      gradedAt: '2038-06-18T05:24:26.026Z',\n      xp: 1,\n      autogradingResults: [\n        {\n          resultType: 'pass'\n        },\n        {\n          resultType: 'fail',\n          expected: '8',\n          actual: '5'\n        },\n        {\n          resultType: 'error',\n          errors: [\n            {\n              errorType: 'dummyErrorType'\n            }\n          ]\n        },\n        {\n          resultType: 'error',\n          errors: [\n            {\n              errorType: 'systemError',\n              errorMessage: \"Cannot read property 'getUniformLocation' of null\"\n            }\n          ]\n        },\n        {\n          resultType: 'error',\n          errors: [\n            {\n              errorType: 'timeout'\n            },\n            {\n              errorType: 'syntax',\n              line: 2,\n              location: 'student',\n              errorLine: 'return (n - d) < 0 ? n : remainder(n - d, d)',\n              errorExplanation: 'Missing semicolon at the end of statement'\n            }\n          ]\n        }\n      ],\n      blocking: false\n    },\n    grade: {\n      xpAdjustment: 0,\n      xp: 0,\n      comments: `Good job. You are awarded the full marks!\n\n----\n## markdown test\n\n# header\n\n**bold**\n\n_italics_\n\n* list\n\n1. numbered list\n\n- [] checkboxes\n\n> quote\n\n    code\n\n[link to Source Academy](https://sourceacademy.nus.edu.sg)\n\n![](image-url-goes-here)\n      `,\n      grader: {\n        name: 'HARTIN MENZ',\n        id: 100\n      },\n      gradedAt: '2019-08-16T13:26:32+00:00'\n    },\n    student: {\n      name: 'Al Gorithm',\n      id: 0\n    }\n  },\n  {\n    question: {\n      prepend: '',\n      postpend: '',\n      testcases: [],\n      answer: \"This student's answer to the 1st question\",\n      content: 'Hello and welcome to this assessment! This is the 1st question.',\n      id: 1,\n      library: mockLibrary,\n      solutionTemplate: '1st question mock solution template',\n      solution: null,\n      type: 'programming',\n      maxXp: 200,\n      grader: {\n        name: 'avenger',\n        id: 1\n      },\n      gradedAt: '2038-06-18T05:24:26.026Z',\n      xp: 1,\n      autogradingResults: [\n        {\n          resultType: 'pass'\n        },\n        {\n          resultType: 'fail',\n          expected: '8',\n          actual: '5'\n        },\n        {\n          resultType: 'error',\n          errors: [\n            {\n              errorType: 'timeout'\n            },\n            {\n              errorType: 'syntax',\n              line: 1,\n              location: 'student',\n              errorLine: 'function fibonacci(n) {',\n              errorExplanation: 'Just kidding!'\n            }\n          ]\n        }\n      ],\n      blocking: false\n    },\n    grade: {\n      xpAdjustment: 0,\n      xp: 100,\n      comments: `You open the Report Card, not knowing what to expect...\n\n## WOW!\nAmazing grasp of runes. We can now move on to the next assignment.\n\n<br/>\n\nRobot Dog: \\`woof\\`\n\nYou look at the display of the robot dog.\n\n    FEED ME\n1. Bread\n2. Water\n\n<br/>\n\n* I am hungry.\n* I am thirsty.\n\n<br/>\n<br/>\n\nNew message from **Avenger**!\n\n> _Cadet, please meet me at Level X-05, outside the pod bay doors. There is an important mission awaiting us._\n\n> _May the [Source](https://sourceacademy.nus.edu.sg) be with you._\n\n> Best regards, Avocado A. Avenger\n\n#### Upcoming Tasks\n- [] Meet Avenger Avenger at Level X-05\n- [] Open the Pod Bay Doors\n      `\n    },\n    student: {\n      name: 'Al Gorithm',\n      id: 0\n    }\n  },\n  {\n    question: {\n      // C is the answer\n      prepend: '',\n      postpend: '',\n      testcases: [],\n      answer: 3,\n      solution: 2,\n      content:\n        'Hello and welcome to this assessment! This is the 2nd question. Oddly enough, it is an MCQ question!',\n      choices: [\n        {\n          content: 'A',\n          hint: 'hint A'\n        },\n        {\n          content: 'B',\n          hint: 'hint B'\n        },\n        {\n          content: 'C',\n          hint: 'hint C'\n        },\n        {\n          content: 'D',\n          hint: 'hint D'\n        }\n      ],\n      id: 2,\n      library: mockLibrary,\n      type: 'mcq',\n      maxXp: 100,\n      grader: {\n        name: 'avenger',\n        id: 1\n      },\n      gradedAt: '2038-06-18T05:24:26.026Z',\n      xp: 1,\n      autogradingResults: [\n        {\n          resultType: 'pass'\n        },\n        {\n          resultType: 'fail',\n          expected: '8',\n          actual: '5'\n        },\n        {\n          resultType: 'error',\n          errors: [\n            {\n              errorType: 'timeout'\n            },\n            {\n              errorType: 'syntax',\n              line: 1,\n              location: 'student',\n              errorLine: 'function fibonacci(n) {',\n              errorExplanation: 'Just kidding!'\n            }\n          ]\n        }\n      ],\n      blocking: false\n    },\n    grade: {\n      xpAdjustment: 0,\n      xp: 50\n    },\n    student: {\n      name: 'Al Gorithm',\n      id: 0\n    }\n  }\n];\n\n/**\n * Mock for fetching a trainer/admin's student grading information.\n * A null value is returned for invalid token or role.\n *\n * @param accessToken a valid access token for the cadet backend.\n */\nexport const mockFetchGrading = (accessToken: string, submissionId: number): Grading | null => {\n  // mocks backend role fetching\n  const permittedRoles: Role[] = [Role.Admin, Role.Staff];\n  const role: Role | null = mockFetchRole(accessToken);\n  if (role === null || !permittedRoles.includes(role)) {\n    return null;\n  } else {\n    return mockGrading;\n  }\n};\n\nexport const mockGradingSummary: GradingSummary = {\n  cols: [\n    'group',\n    'avenger',\n    'ungradedMissions',\n    'submittedMissions',\n    'ungradedQuests',\n    'submittedQuests'\n  ],\n  rows: [\n    {\n      group: 'Mock Group 1',\n      avenger: 'John',\n      ungradedMissions: 123,\n      submittedMissions: 200,\n      ungradedQuests: 100,\n      submittedQuests: 117\n    },\n    {\n      group: 'Mock Group 2',\n      avenger: 'Molly',\n      ungradedMissions: 1232,\n      submittedMissions: 205430,\n      ungradedQuests: 345,\n      submittedQuests: 11547\n    },\n    {\n      group: 'Mock Group 3',\n      avenger: 'Lenny',\n      ungradedMissions: 1532,\n      submittedMissions: 22200,\n      ungradedQuests: 134500,\n      submittedQuests: 6777\n    }\n  ]\n};\n","import { SagaIterator } from 'redux-saga';\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\n\nimport { FETCH_GROUP_GRADING_SUMMARY } from '../../features/dashboard/DashboardTypes';\nimport { Grading, GradingOverview, GradingQuestion } from '../../features/grading/GradingTypes';\nimport {\n  OverallState,\n  Role,\n  SALanguage,\n  styliseSublanguage\n} from '../application/ApplicationTypes';\nimport {\n  ACKNOWLEDGE_NOTIFICATIONS,\n  AdminPanelCourseRegistration,\n  FETCH_ADMIN_PANEL_COURSE_REGISTRATIONS,\n  FETCH_ASSESSMENT,\n  FETCH_AUTH,\n  FETCH_COURSE_CONFIG,\n  FETCH_GRADING,\n  FETCH_GRADING_OVERVIEWS,\n  FETCH_NOTIFICATIONS,\n  FETCH_USER_AND_COURSE,\n  SUBMIT_ANSWER,\n  SUBMIT_GRADING,\n  SUBMIT_GRADING_AND_CONTINUE,\n  Tokens,\n  UNSUBMIT_SUBMISSION,\n  UPDATE_ASSESSMENT_CONFIGS,\n  UPDATE_COURSE_CONFIG,\n  UPDATE_LATEST_VIEWED_COURSE\n} from '../application/types/SessionTypes';\nimport {\n  AssessmentOverview,\n  AssessmentStatuses,\n  FETCH_ASSESSMENT_OVERVIEWS,\n  Question,\n  SUBMIT_ASSESSMENT\n} from '../assessment/AssessmentTypes';\nimport {\n  Notification,\n  NotificationFilterFunction\n} from '../notificationBadge/NotificationBadgeTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport { history } from '../utils/HistoryHelper';\nimport { showSuccessMessage, showWarningMessage } from '../utils/NotificationsHelper';\nimport { WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport {\n  mockAssessmentConfigurations,\n  mockAssessmentOverviews,\n  mockAssessments\n} from './AssessmentMocks';\nimport { mockFetchGrading, mockFetchGradingOverview, mockGradingSummary } from './GradingMocks';\nimport {\n  mockAdminPanelCourseRegistrations,\n  mockCourseConfigurations,\n  mockCourseRegistrations,\n  mockNotifications,\n  mockUser\n} from './UserMocks';\n\nexport function* mockBackendSaga(): SagaIterator {\n  yield takeEvery(FETCH_AUTH, function* (action: ReturnType<typeof actions.fetchAuth>) {\n    const tokens: Tokens = {\n      accessToken: 'accessToken',\n      refreshToken: 'refreshToken'\n    };\n\n    yield put(actions.setTokens(tokens));\n    yield mockGetUserAndCourse();\n    const courseId: number = yield select((state: OverallState) => state.session.courseId!);\n    yield history.push(`/courses/${courseId}`);\n  });\n\n  const mockGetUserAndCourse = function* () {\n    const user = { ...mockUser };\n    const courseRegistration = { ...mockCourseRegistrations[0] };\n    const courseConfiguration = { ...mockCourseConfigurations[0] };\n    const assessmentConfigurations = [...mockAssessmentConfigurations[0]];\n    const sublanguage: SALanguage = {\n      chapter: courseConfiguration.sourceChapter,\n      variant: courseConfiguration.sourceVariant,\n      displayName: styliseSublanguage(\n        courseConfiguration.sourceChapter,\n        courseConfiguration.sourceVariant\n      )\n    };\n\n    yield put(actions.setUser(user));\n    yield put(actions.setCourseRegistration(courseRegistration));\n    yield put(actions.setCourseConfiguration(courseConfiguration));\n    yield put(actions.setAssessmentConfigurations(assessmentConfigurations));\n    yield put(actions.updateSublanguage(sublanguage));\n  };\n\n  yield takeEvery(FETCH_USER_AND_COURSE, mockGetUserAndCourse);\n\n  yield takeEvery(FETCH_COURSE_CONFIG, function* () {\n    const courseConfiguration = { ...mockCourseConfigurations[0] };\n    yield put(actions.setCourseConfiguration(courseConfiguration));\n  });\n\n  yield takeEvery(FETCH_ASSESSMENT_OVERVIEWS, function* () {\n    yield put(actions.updateAssessmentOverviews([...mockAssessmentOverviews]));\n  });\n\n  yield takeEvery(FETCH_ASSESSMENT, function* (action: ReturnType<typeof actions.fetchAssessment>) {\n    const id = action.payload;\n    const assessment = mockAssessments[id - 1];\n    yield put(actions.updateAssessment({ ...assessment }));\n  });\n\n  yield takeEvery(SUBMIT_ANSWER, function* (action: ReturnType<typeof actions.submitAnswer>): any {\n    const questionId = action.payload.id;\n    const answer = action.payload.answer;\n    // Now, update the answer for the question in the assessment in the store\n    const assessmentId = yield select(\n      (state: OverallState) => state.workspaces.assessment.currentAssessment!\n    );\n    const assessment = yield select((state: OverallState) =>\n      state.session.assessments.get(assessmentId)\n    );\n    const newQuestions = assessment.questions.slice().map((question: Question) => {\n      if (question.id === questionId) {\n        question.answer = answer;\n      }\n      return question;\n    });\n    const newAssessment = {\n      ...assessment,\n      questions: newQuestions\n    };\n    yield put(actions.updateAssessment(newAssessment));\n    yield call(showSuccessMessage, 'Saved!', 1000);\n    return yield put(actions.updateHasUnsavedChanges('assessment' as WorkspaceLocation, false));\n  });\n\n  yield takeEvery(\n    SUBMIT_ASSESSMENT,\n    function* (action: ReturnType<typeof actions.submitAssessment>): any {\n      const assessmentId = action.payload;\n\n      // Update the status of the assessment overview in the store\n      const overviews: AssessmentOverview[] = yield select(\n        (state: OverallState) => state.session.assessmentOverviews\n      );\n      const newOverviews = overviews.map(overview => {\n        if (overview.id === assessmentId) {\n          return { ...overview, status: AssessmentStatuses.submitted };\n        }\n        return overview;\n      });\n\n      yield call(showSuccessMessage, 'Submitted!', 2000);\n      return yield put(actions.updateAssessmentOverviews(newOverviews));\n    }\n  );\n\n  yield takeEvery(\n    FETCH_GRADING_OVERVIEWS,\n    function* (action: ReturnType<typeof actions.fetchGradingOverviews>): any {\n      const accessToken = yield select((state: OverallState) => state.session.accessToken);\n      const filterToGroup = action.payload;\n      const gradingOverviews = yield call(() =>\n        mockFetchGradingOverview(accessToken, filterToGroup)\n      );\n      if (gradingOverviews !== null) {\n        yield put(actions.updateGradingOverviews([...gradingOverviews]));\n      }\n    }\n  );\n\n  yield takeEvery(FETCH_GRADING, function* (action: ReturnType<typeof actions.fetchGrading>): any {\n    const submissionId = action.payload;\n    const accessToken = yield select((state: OverallState) => state.session.accessToken);\n    const grading = yield call(() => mockFetchGrading(accessToken, submissionId));\n    if (grading !== null) {\n      yield put(actions.updateGrading(submissionId, [...grading]));\n    }\n  });\n\n  yield takeEvery(\n    UNSUBMIT_SUBMISSION,\n    function* (action: ReturnType<typeof actions.unsubmitSubmission>) {\n      const { submissionId } = action.payload;\n      const overviews: GradingOverview[] = yield select(\n        (state: OverallState) => state.session.gradingOverviews || []\n      );\n      const index = overviews.findIndex(\n        overview =>\n          overview.submissionId === submissionId && overview.submissionStatus === 'submitted'\n      );\n      if (index === -1) {\n        yield call(showWarningMessage, '400: Bad Request');\n        return;\n      }\n      const newOverviews = (overviews as GradingOverview[]).map(overview => {\n        if (overview.submissionId === submissionId) {\n          return { ...overview, submissionStatus: 'attempted' };\n        }\n        return overview;\n      });\n      yield call(showSuccessMessage, 'Unsubmit successful!', 1000);\n      yield put(actions.updateGradingOverviews(newOverviews));\n    }\n  );\n\n  const sendGrade = function* (\n    action: ReturnType<typeof actions.submitGrading | typeof actions.submitGradingAndContinue>\n  ): any {\n    const role: Role = yield select((state: OverallState) => state.session.role!);\n    if (role === Role.Student) {\n      return yield call(showWarningMessage, 'Only staff can submit answers.');\n    }\n\n    const { submissionId, questionId, xpAdjustment, comments } = action.payload;\n    // Now, update the grade for the question in the Grading in the store\n    const grading: Grading = yield select((state: OverallState) =>\n      state.session.gradings.get(submissionId)\n    );\n    const newGrading = grading.slice().map((gradingQuestion: GradingQuestion) => {\n      if (gradingQuestion.question.id === questionId) {\n        gradingQuestion.grade = {\n          xpAdjustment,\n          xp: gradingQuestion.grade.xp,\n          comments\n        };\n      }\n      return gradingQuestion;\n    });\n    yield put(actions.updateGrading(submissionId, newGrading));\n    yield call(showSuccessMessage, 'Submitted!', 1000);\n  };\n\n  const sendGradeAndContinue = function* (\n    action: ReturnType<typeof actions.submitGradingAndContinue>\n  ): any {\n    const { submissionId } = action.payload;\n    yield* sendGrade(action);\n\n    const [currentQuestion, courseId] = yield select((state: OverallState) => [\n      state.workspaces.grading.currentQuestion,\n      state.session.courseId!\n    ]);\n    /**\n     * Move to next question for grading: this only works because the\n     * SUBMIT_GRADING_AND_CONTINUE Redux action is currently only\n     * used in the Grading Workspace\n     *\n     * If the questionId is out of bounds, the componentDidUpdate callback of\n     * GradingWorkspace will cause a redirect back to '/courses/${courseId}/grading'\n     */\n    yield history.push(\n      `/courses/${courseId}/grading/${submissionId}/${(currentQuestion || 0) + 1}`\n    );\n  };\n\n  yield takeEvery(SUBMIT_GRADING, sendGrade);\n\n  yield takeEvery(SUBMIT_GRADING_AND_CONTINUE, sendGradeAndContinue);\n\n  yield takeEvery(\n    FETCH_NOTIFICATIONS,\n    function* (action: ReturnType<typeof actions.fetchNotifications>) {\n      yield put(actions.updateNotifications([...mockNotifications]));\n    }\n  );\n\n  yield takeEvery(\n    ACKNOWLEDGE_NOTIFICATIONS,\n    function* (action: ReturnType<typeof actions.acknowledgeNotifications>) {\n      const notificationFilter: NotificationFilterFunction | undefined = action.payload.withFilter;\n\n      const notifications: Notification[] = yield select(\n        (state: OverallState) => state.session.notifications\n      );\n\n      let notificationsToAcknowledge = notifications;\n\n      if (notificationFilter) {\n        notificationsToAcknowledge = notificationFilter(notifications);\n      }\n\n      if (notificationsToAcknowledge.length === 0) {\n        return;\n      }\n\n      const ids = notificationsToAcknowledge.map(n => n.id);\n\n      const newNotifications: Notification[] = notifications.filter(\n        notification => !ids.includes(notification.id)\n      );\n\n      yield put(actions.updateNotifications(newNotifications));\n    }\n  );\n\n  yield takeEvery(\n    UPDATE_LATEST_VIEWED_COURSE,\n    function* (action: ReturnType<typeof actions.updateLatestViewedCourse>) {\n      const { courseId } = action.payload;\n      const idx = courseId - 1; // zero-indexed\n\n      const courseConfiguration = { ...mockCourseConfigurations[idx] };\n      yield put(actions.setCourseConfiguration(courseConfiguration));\n      yield put(actions.setAssessmentConfigurations([...mockAssessmentConfigurations[idx]]));\n      yield put(actions.setCourseRegistration({ ...mockCourseRegistrations[idx] }));\n      yield put(\n        actions.updateSublanguage({\n          chapter: courseConfiguration.sourceChapter,\n          variant: courseConfiguration.sourceVariant,\n          displayName: styliseSublanguage(\n            courseConfiguration.sourceChapter,\n            courseConfiguration.sourceVariant\n          )\n        })\n      );\n      yield call(showSuccessMessage, `Switched to ${courseConfiguration.courseName}!`, 5000);\n    }\n  );\n\n  yield takeEvery(\n    UPDATE_COURSE_CONFIG,\n    function* (action: ReturnType<typeof actions.updateCourseConfig>) {\n      const courseConfig = action.payload;\n\n      yield put(actions.setCourseConfiguration(courseConfig));\n      yield call(showSuccessMessage, 'Updated successfully!', 1000);\n    }\n  );\n\n  yield takeEvery(\n    UPDATE_ASSESSMENT_CONFIGS,\n    function* (action: ReturnType<typeof actions.updateAssessmentConfigs>): any {\n      const assessmentConfig = action.payload;\n\n      yield put(actions.setAssessmentConfigurations(assessmentConfig));\n      yield call(showSuccessMessage, 'Updated successfully!', 1000);\n    }\n  );\n\n  yield takeEvery(\n    FETCH_ADMIN_PANEL_COURSE_REGISTRATIONS,\n    function* (action: ReturnType<typeof actions.fetchAdminPanelCourseRegistrations>) {\n      const courseRegistrations: AdminPanelCourseRegistration[] = [\n        ...mockAdminPanelCourseRegistrations\n      ];\n      yield put(actions.setAdminPanelCourseRegistrations(courseRegistrations));\n    }\n  );\n\n  yield takeEvery(FETCH_GROUP_GRADING_SUMMARY, function* () {\n    yield put(actions.updateGroupGradingSummary({ ...mockGradingSummary }));\n  });\n}\n","import {\n  AchievementGoal,\n  AchievementItem,\n  EventMeta,\n  EventType,\n  GoalProgress,\n  GoalType\n} from '../../../features/achievement/AchievementTypes';\nimport { showSuccessMessage } from '../../utils/NotificationsHelper';\nimport AchievementInferencer from './AchievementInferencer';\nimport { isExpired, isReleased, isWithinTimeRange } from './DateHelper';\n\nfunction eventShouldCount(meta: EventMeta): boolean {\n  // goal is not released, or has expired\n  if (isExpired(meta.deadline) || !isReleased(meta.release)) {\n    return false;\n  }\n  if (isWithinTimeRange(meta.observeFrom, meta.observeTo)) {\n    return true;\n  }\n  return false;\n}\n\nexport function incrementCount(goalUuid: string, inferencer: AchievementInferencer) {\n  const progress: GoalProgress = { ...inferencer.getGoalProgress(goalUuid) };\n  progress.count = progress.count + 1;\n  const wasCompleted = progress.completed;\n  progress.completed = progress.count >= progress.targetCount;\n\n  const incompleteAchievements: string[] = [];\n  if (!wasCompleted && progress.completed) {\n    const achievements: string[] = inferencer.getAchievementsByGoal(goalUuid);\n    for (const achievement of achievements) {\n      if (!inferencer.isCompleted(inferencer.getAchievement(achievement))) {\n        incompleteAchievements.push(achievement);\n      }\n    }\n  }\n\n  inferencer.modifyGoalProgress(progress);\n\n  for (const achievementUuid of incompleteAchievements) {\n    const achievement: AchievementItem = inferencer.getAchievement(achievementUuid);\n    if (inferencer.isCompleted(achievement)) {\n      showSuccessMessage('Completed acheivement: ' + achievement.title);\n    }\n  }\n}\n\nexport function goalIncludesEvents(goal: AchievementGoal, eventNames: EventType[]) {\n  if (goal.meta.type === GoalType.EVENT && eventShouldCount(goal.meta)) {\n    for (let i = 0; i < goal.meta.eventNames.length; i++) {\n      for (let j = 0; j < eventNames.length; j++) {\n        if (goal.meta.eventNames[i] === eventNames[j]) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n","import { ActionMatchingPattern } from '@redux-saga/types';\nimport * as Sentry from '@sentry/browser';\nimport {\n  ActionPattern,\n  ForkEffect,\n  HelperWorkerParameters,\n  takeEvery,\n  takeLatest,\n  takeLeading\n} from 'redux-saga/effects';\n\n// it's not possible to abstract the two functions into HOF over takeEvery and takeLatest\n// without stepping out of TypeScript's type system because the type system does not support\n// higher-kinded types (type parameters that take )\n\nfunction handleUncaughtError(error: any) {\n  if (process.env.NODE_ENV === 'development') {\n    // react-error-overlay is a \"special\" package that's automatically included\n    // in development mode by CRA\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    import('react-error-overlay').then(reo => reo.reportRuntimeError(error));\n  }\n  Sentry.captureException(error);\n  console.error(error);\n}\n\nfunction isIterator(obj: any) {\n  return obj && typeof obj.next === 'function' && typeof obj.throw === 'function';\n}\n\nexport function safeTakeEvery<P extends ActionPattern, A extends ActionMatchingPattern<P>>(\n  pattern: P,\n  worker: (action: A) => any\n): ForkEffect<never>;\nexport function safeTakeEvery<P extends ActionPattern, Fn extends (...args: any[]) => any>(\n  pattern: P,\n  worker: Fn,\n  ...args: HelperWorkerParameters<ActionMatchingPattern<P>, Fn>\n): ForkEffect<never> {\n  function* wrappedWorker(...args: HelperWorkerParameters<ActionMatchingPattern<P>, Fn>) {\n    try {\n      const result = worker(...args);\n      if (isIterator(result)) {\n        yield* result;\n      }\n    } catch (error) {\n      handleUncaughtError(error);\n    }\n  }\n  return takeEvery<P, typeof wrappedWorker>(pattern, wrappedWorker, ...args);\n}\n\nexport function safeTakeLatest<P extends ActionPattern, A extends ActionMatchingPattern<P>>(\n  pattern: P,\n  worker: (action: A) => any\n): ForkEffect<never>;\nexport function safeTakeLatest<P extends ActionPattern, Fn extends (...args: any[]) => any>(\n  pattern: P,\n  worker: Fn,\n  ...args: HelperWorkerParameters<ActionMatchingPattern<P>, Fn>\n): ForkEffect<never> {\n  function* wrappedWorker(...args: HelperWorkerParameters<ActionMatchingPattern<P>, Fn>) {\n    try {\n      const result = worker(...args);\n      if (isIterator(result)) {\n        yield* result;\n      }\n    } catch (error) {\n      handleUncaughtError(error);\n    }\n  }\n  return takeLatest<P, typeof wrappedWorker>(pattern, wrappedWorker, ...args);\n}\n\nexport function safeTakeLeading<P extends ActionPattern, A extends ActionMatchingPattern<P>>(\n  pattern: P,\n  worker: (action: A) => any\n): ForkEffect<never>;\nexport function safeTakeLeading<P extends ActionPattern, Fn extends (...args: any[]) => any>(\n  pattern: P,\n  worker: Fn,\n  ...args: HelperWorkerParameters<ActionMatchingPattern<P>, Fn>\n): ForkEffect<never> {\n  function* wrappedWorker(...args: HelperWorkerParameters<ActionMatchingPattern<P>, Fn>) {\n    try {\n      const result = worker(...args);\n      if (isIterator(result)) {\n        yield* result;\n      }\n    } catch (error) {\n      handleUncaughtError(error);\n    }\n  }\n  return takeLeading<P, typeof wrappedWorker>(pattern, wrappedWorker, ...args);\n}\n","import { SagaIterator } from 'redux-saga';\nimport { call, delay, put, select } from 'redux-saga/effects';\n\nimport {\n  AchievementGoal,\n  ADD_EVENT,\n  BULK_UPDATE_ACHIEVEMENTS,\n  BULK_UPDATE_GOALS,\n  EventType,\n  GET_ACHIEVEMENTS,\n  GET_GOALS,\n  GET_OWN_GOALS,\n  GET_USER_ASSESSMENT_OVERVIEWS,\n  GET_USERS,\n  HANDLE_EVENT,\n  REMOVE_ACHIEVEMENT,\n  REMOVE_GOAL,\n  UPDATE_GOAL_PROGRESS,\n  UPDATE_OWN_GOAL_PROGRESS\n} from '../../features/achievement/AchievementTypes';\nimport { updateGoalProcessed } from '../achievement/AchievementManualEditor';\nimport AchievementInferencer from '../achievement/utils/AchievementInferencer';\nimport { goalIncludesEvents, incrementCount } from '../achievement/utils/EventHandler';\nimport { OverallState } from '../application/ApplicationTypes';\nimport { Tokens } from '../application/types/SessionTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport Constants from '../utils/Constants';\nimport {\n  bulkUpdateAchievements,\n  bulkUpdateGoals,\n  getAchievements,\n  getAllUsers,\n  getGoals,\n  getOwnGoals,\n  getUserAssessmentOverviews,\n  removeAchievement,\n  removeGoal,\n  updateGoalProgress,\n  updateOwnGoalProgress\n} from './RequestsSaga';\nimport { safeTakeEvery as takeEvery } from './SafeEffects';\n\nfunction selectTokens() {\n  return select((state: OverallState) => ({\n    accessToken: state.session.accessToken,\n    refreshToken: state.session.refreshToken\n  }));\n}\n\nexport default function* AchievementSaga(): SagaIterator {\n  yield takeEvery(\n    BULK_UPDATE_ACHIEVEMENTS,\n    function* (action: ReturnType<typeof actions.bulkUpdateAchievements>): any {\n      const tokens: Tokens = yield selectTokens();\n\n      const achievements = action.payload;\n\n      const resp = yield call(bulkUpdateAchievements, achievements, tokens);\n\n      if (!resp) {\n        return;\n      }\n    }\n  );\n\n  yield takeEvery(\n    BULK_UPDATE_GOALS,\n    function* (action: ReturnType<typeof actions.bulkUpdateGoals>): any {\n      const tokens: Tokens = yield selectTokens();\n\n      const goals = action.payload;\n\n      const resp = yield call(bulkUpdateGoals, goals, tokens);\n\n      if (!resp) {\n        return;\n      }\n    }\n  );\n\n  yield takeEvery(GET_ACHIEVEMENTS, function* (): any {\n    const tokens: Tokens = yield selectTokens();\n\n    const achievements = yield call(getAchievements, tokens);\n\n    if (achievements) {\n      yield put(actions.saveAchievements(achievements));\n    }\n  });\n\n  yield takeEvery(GET_GOALS, function* (action: ReturnType<typeof actions.getGoals>): any {\n    const tokens: Tokens = yield selectTokens();\n\n    const studentCourseRegId = action.payload;\n\n    const goals = yield call(getGoals, tokens, studentCourseRegId);\n\n    if (goals) {\n      yield put(actions.saveGoals(goals));\n    }\n  });\n\n  yield takeEvery(GET_OWN_GOALS, function* (action: ReturnType<typeof actions.getOwnGoals>): any {\n    const tokens: Tokens = yield selectTokens();\n\n    const goals = yield call(getOwnGoals, tokens);\n\n    if (goals) {\n      yield put(actions.saveGoals(goals));\n    }\n  });\n\n  yield takeEvery(GET_USERS, function* (action: ReturnType<typeof actions.getUsers>): any {\n    const tokens: Tokens = yield selectTokens();\n\n    const users = yield call(getAllUsers, tokens);\n\n    if (users) {\n      yield put(actions.saveUsers(users));\n    }\n  });\n\n  yield takeEvery(\n    REMOVE_ACHIEVEMENT,\n    function* (action: ReturnType<typeof actions.removeAchievement>): any {\n      const tokens: Tokens = yield selectTokens();\n\n      const achievement = action.payload;\n\n      const resp = yield call(removeAchievement, achievement, tokens);\n\n      if (!resp) {\n        return;\n      }\n    }\n  );\n\n  yield takeEvery(REMOVE_GOAL, function* (action: ReturnType<typeof actions.removeGoal>): any {\n    const tokens: Tokens = yield selectTokens();\n\n    const definition = action.payload;\n\n    const resp = yield call(removeGoal, definition, tokens);\n\n    if (!resp) {\n      return;\n    }\n  });\n\n  yield takeEvery(\n    UPDATE_OWN_GOAL_PROGRESS,\n    function* (action: ReturnType<typeof actions.updateOwnGoalProgress>): any {\n      const tokens: Tokens = yield selectTokens();\n\n      const progress = action.payload;\n\n      const resp = yield call(updateOwnGoalProgress, progress, tokens);\n\n      if (!resp) {\n        return;\n      }\n    }\n  );\n\n  yield takeEvery(\n    UPDATE_GOAL_PROGRESS,\n    function* (action: ReturnType<typeof actions.updateGoalProgress>): any {\n      const tokens: Tokens = yield selectTokens();\n\n      const { studentCourseRegId, progress } = action.payload;\n\n      const resp = yield call(updateGoalProgress, studentCourseRegId, progress, tokens);\n\n      if (!resp) {\n        return;\n      }\n      if (resp.ok) {\n        yield put(actions.getGoals(studentCourseRegId));\n        updateGoalProcessed();\n      }\n    }\n  );\n\n  let loggedEvents: EventType[][] = [];\n  let timeoutSet: boolean = false;\n  const updateInterval = 3000;\n\n  yield takeEvery(ADD_EVENT, function* (action: ReturnType<typeof actions.addEvent>): any {\n    const role = yield select((state: OverallState) => state.session.role);\n    const enableAchievements = yield select(\n      (state: OverallState) => state.session.enableAchievements\n    );\n    if (role && enableAchievements && !Constants.playgroundOnly) {\n      loggedEvents.push(action.payload);\n\n      if (!timeoutSet && role) {\n        // make sure that only one action every interval will handleEvent\n        timeoutSet = true;\n        yield delay(updateInterval);\n\n        timeoutSet = false;\n        yield put(actions.handleEvent(loggedEvents));\n        loggedEvents = [];\n      }\n    }\n  });\n\n  yield takeEvery(HANDLE_EVENT, function* (action: ReturnType<typeof actions.handleEvent>): any {\n    const tokens: Tokens = yield selectTokens();\n\n    // get the most recent list of achievements\n    const backendAchievements = yield call(getAchievements, tokens);\n    if (backendAchievements) {\n      yield put(actions.saveAchievements(backendAchievements));\n    }\n\n    // get the goals and their progress from the backend\n    const backendGoals = yield call(getOwnGoals, tokens);\n    if (backendGoals) {\n      yield put(actions.saveGoals(backendGoals));\n    } else {\n      // if there are no goals, handling events will do nothing\n      return;\n    }\n\n    const achievements = yield select((state: OverallState) => state.achievement.achievements);\n    const goals = yield select((state: OverallState) => state.achievement.goals);\n\n    const inferencer = new AchievementInferencer(achievements, goals);\n    const loggedEvents: EventType[][] = action.payload;\n\n    const updatedGoals = new Set<string>();\n\n    loggedEvents.forEach((events: EventType[]) => {\n      const eventGoalUuids = goals\n        .filter((goal: AchievementGoal) => goalIncludesEvents(goal, events))\n        .map((goal: AchievementGoal) => goal.uuid);\n      eventGoalUuids.forEach((uuid: string) => {\n        incrementCount(uuid, inferencer);\n        updatedGoals.add(uuid);\n      });\n    });\n\n    for (const uuid of updatedGoals) {\n      const resp = yield call(updateOwnGoalProgress, inferencer.getGoalProgress(uuid), tokens);\n\n      if (!resp) {\n        return;\n      }\n    }\n  });\n\n  yield takeEvery(\n    GET_USER_ASSESSMENT_OVERVIEWS,\n    function* (action: ReturnType<typeof actions.getUserAssessmentOverviews>): any {\n      const tokens: Tokens = yield selectTokens();\n\n      const assessmentOverviews = yield call(getUserAssessmentOverviews, action.payload, tokens);\n\n      if (assessmentOverviews) {\n        yield put(actions.saveUserAssessmentOverviews(assessmentOverviews));\n      }\n    }\n  );\n}\n","import Constants from './Constants';\n\nexport function computeEndpointUrl(providerId: string): string | undefined {\n  const ep = Constants.authProviders.get(providerId);\n  if (!ep) {\n    return undefined;\n  }\n  try {\n    const epUrl = new URL(ep.endpoint);\n    epUrl.searchParams.set('redirect_uri', computeRedirectUri(providerId)!);\n    return epUrl.toString();\n  } catch (e) {\n    // in dev, sometimes the endpoint is a dummy; allow that\n    return ep.endpoint || '';\n  }\n}\n\nexport function computeRedirectUri(providerId: string): string | undefined {\n  const ep = Constants.authProviders.get(providerId);\n  if (!ep) {\n    return undefined;\n  }\n  const port = window.location.port === '' ? '' : `:${window.location.port}`;\n  const callback = `${window.location.protocol}//${window.location.hostname}${port}/login${\n    ep.isDefault ? '' : '?provider=' + encodeURIComponent(providerId)\n  }`;\n  return callback;\n}\n\nexport function getClientId(providerId: string): string | undefined {\n  const ep = Constants.authProviders.get(providerId);\n  if (!ep) {\n    return undefined;\n  }\n  try {\n    const epUrl = new URL(ep.endpoint);\n    return epUrl.searchParams.get('client_id') || undefined;\n  } catch (e) {\n    // in dev, sometimes the endpoint is a dummy; allow that\n    return ep.endpoint || undefined;\n  }\n}\n\nexport function getDefaultProvider():\n  | [string, NonNullable<ReturnType<typeof Constants.authProviders.get>>]\n  | undefined {\n  return [...Constants.authProviders.entries()].find(([_, { isDefault }]) => isDefault);\n}\n","/*eslint no-eval: \"error\"*/\n/*eslint-env browser*/\nimport { SagaIterator } from 'redux-saga';\nimport { call, put, select } from 'redux-saga/effects';\nimport { ADD_NEW_USERS_TO_COURSE, CREATE_COURSE } from 'src/features/academy/AcademyTypes';\nimport { UsernameRoleGroup } from 'src/pages/academy/adminPanel/subcomponents/AddUserPanel';\n\nimport {\n  FETCH_GROUP_GRADING_SUMMARY,\n  GradingSummary\n} from '../../features/dashboard/DashboardTypes';\nimport { Grading, GradingOverview, GradingQuestion } from '../../features/grading/GradingTypes';\nimport {\n  CHANGE_DATE_ASSESSMENT,\n  DELETE_ASSESSMENT,\n  PUBLISH_ASSESSMENT,\n  UPLOAD_ASSESSMENT\n} from '../../features/groundControl/GroundControlTypes';\nimport { FETCH_SOURCECAST_INDEX } from '../../features/sourceRecorder/sourcecast/SourcecastTypes';\nimport {\n  SAVE_SOURCECAST_DATA,\n  SourcecastData\n} from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { DELETE_SOURCECAST_ENTRY } from '../../features/sourceRecorder/sourcereel/SourcereelTypes';\nimport { OverallState, Role } from '../application/ApplicationTypes';\nimport {\n  ACKNOWLEDGE_NOTIFICATIONS,\n  AdminPanelCourseRegistration,\n  CourseConfiguration,\n  CourseRegistration,\n  DELETE_ASSESSMENT_CONFIG,\n  DELETE_USER_COURSE_REGISTRATION,\n  FETCH_ADMIN_PANEL_COURSE_REGISTRATIONS,\n  FETCH_ALL_USER_XP,\n  FETCH_ASSESSMENT,\n  FETCH_ASSESSMENT_ADMIN,\n  FETCH_ASSESSMENT_CONFIGS,\n  FETCH_AUTH,\n  FETCH_COURSE_CONFIG,\n  FETCH_GRADING,\n  FETCH_GRADING_OVERVIEWS,\n  FETCH_NOTIFICATIONS,\n  FETCH_TOTAL_XP,\n  FETCH_TOTAL_XP_ADMIN,\n  FETCH_USER_AND_COURSE,\n  REAUTOGRADE_ANSWER,\n  REAUTOGRADE_SUBMISSION,\n  SUBMIT_ANSWER,\n  SUBMIT_GRADING,\n  SUBMIT_GRADING_AND_CONTINUE,\n  Tokens,\n  UNSUBMIT_SUBMISSION,\n  UPDATE_ASSESSMENT_CONFIGS,\n  UPDATE_COURSE_CONFIG,\n  UPDATE_COURSE_RESEARCH_AGREEMENT,\n  UPDATE_LATEST_VIEWED_COURSE,\n  UPDATE_USER_ROLE,\n  UpdateCourseConfiguration,\n  User\n} from '../application/types/SessionTypes';\nimport {\n  Assessment,\n  AssessmentConfiguration,\n  AssessmentOverview,\n  AssessmentStatuses,\n  FETCH_ASSESSMENT_OVERVIEWS,\n  Question,\n  SUBMIT_ASSESSMENT\n} from '../assessment/AssessmentTypes';\nimport {\n  Notification,\n  NotificationFilterFunction\n} from '../notificationBadge/NotificationBadgeTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport { computeRedirectUri, getClientId, getDefaultProvider } from '../utils/AuthHelper';\nimport { history } from '../utils/HistoryHelper';\nimport { showSuccessMessage, showWarningMessage } from '../utils/NotificationsHelper';\nimport { CHANGE_SUBLANGUAGE, WorkspaceLocation } from '../workspace/WorkspaceTypes';\nimport {\n  deleteAssessment,\n  deleteSourcecastEntry,\n  getAllUserXp,\n  getAssessment,\n  getAssessmentConfigs,\n  getAssessmentOverviews,\n  getCourseConfig,\n  getGrading,\n  getGradingOverviews,\n  getGradingSummary,\n  getLatestCourseRegistrationAndConfiguration,\n  getNotifications,\n  getSourcecastIndex,\n  getTotalXp,\n  getUser,\n  getUserCourseRegistrations,\n  handleResponseError,\n  postAcknowledgeNotifications,\n  postAnswer,\n  postAssessment,\n  postAuth,\n  postCreateCourse,\n  postGrading,\n  postReautogradeAnswer,\n  postReautogradeSubmission,\n  postSourcecast,\n  postUnsubmit,\n  putAssessmentConfigs,\n  putCourseConfig,\n  putCourseResearchAgreement,\n  putLatestViewedCourse,\n  putNewUsers,\n  putUserRole,\n  removeAssessmentConfig,\n  removeUserCourseRegistration,\n  updateAssessment,\n  uploadAssessment\n} from './RequestsSaga';\nimport { safeTakeEvery as takeEvery } from './SafeEffects';\n\nfunction selectTokens() {\n  return select((state: OverallState) => ({\n    accessToken: state.session.accessToken,\n    refreshToken: state.session.refreshToken\n  }));\n}\n\nfunction* BackendSaga(): SagaIterator {\n  yield takeEvery(FETCH_AUTH, function* (action: ReturnType<typeof actions.fetchAuth>): any {\n    const { code, providerId: payloadProviderId } = action.payload;\n\n    const providerId = payloadProviderId || (getDefaultProvider() || [null])[0];\n    if (!providerId) {\n      yield call(\n        showWarningMessage,\n        'Could not log in; invalid provider or no providers configured.'\n      );\n      return yield history.push('/');\n    }\n\n    const clientId = getClientId(providerId);\n    const redirectUrl = computeRedirectUri(providerId);\n\n    const tokens: Tokens | null = yield call(postAuth, code, providerId, clientId, redirectUrl);\n    if (!tokens) {\n      return yield history.push('/');\n    }\n    yield put(actions.setTokens(tokens));\n\n    // Note: courseRegistration, courseConfiguration and assessmentConfigurations\n    // are either all null OR all not null\n    const {\n      user,\n      courseRegistration,\n      courseConfiguration,\n      assessmentConfigurations\n    }: {\n      user: User | null;\n      courseRegistration: CourseRegistration | null;\n      courseConfiguration: CourseConfiguration | null;\n      assessmentConfigurations: AssessmentConfiguration[] | null;\n    } = yield call(getUser, tokens);\n\n    if (!user) {\n      return;\n    }\n\n    yield put(actions.setUser(user));\n\n    // Handle case where user does not have a latest viewed course in the backend\n    // but is enrolled in some course (this happens occationally due to e.g. removal from a course)\n    if (courseConfiguration === null && user.courses.length > 0) {\n      yield put(actions.updateLatestViewedCourse(user.courses[0].courseId));\n    }\n\n    if (courseRegistration && courseConfiguration && assessmentConfigurations) {\n      yield put(actions.setCourseRegistration(courseRegistration));\n      yield put(actions.setCourseConfiguration(courseConfiguration));\n      yield put(actions.setAssessmentConfigurations(assessmentConfigurations));\n      return yield history.push(`/courses/${courseRegistration.courseId}`);\n    }\n\n    return yield history.push(`/welcome`);\n  });\n\n  yield takeEvery(\n    FETCH_USER_AND_COURSE,\n    function* (action: ReturnType<typeof actions.fetchUserAndCourse>): any {\n      const tokens = yield selectTokens();\n\n      const {\n        user,\n        courseRegistration,\n        courseConfiguration,\n        assessmentConfigurations\n      }: {\n        user: User | null;\n        courseRegistration: CourseRegistration | null;\n        courseConfiguration: CourseConfiguration | null;\n        assessmentConfigurations: AssessmentConfiguration[] | null;\n      } = yield call(getUser, tokens);\n\n      if (!user) {\n        return;\n      }\n\n      yield put(actions.setUser(user));\n\n      // Handle case where user does not have a latest viewed course in the backend\n      // but is enrolled in some course (this happens occationally due to e.g. removal from a course)\n      if (courseConfiguration === null && user.courses.length > 0) {\n        yield put(actions.updateLatestViewedCourse(user.courses[0].courseId));\n      }\n\n      if (courseRegistration && courseConfiguration && assessmentConfigurations) {\n        yield put(actions.setCourseRegistration(courseRegistration));\n        yield put(actions.setCourseConfiguration(courseConfiguration));\n        yield put(actions.setAssessmentConfigurations(assessmentConfigurations));\n      }\n    }\n  );\n\n  yield takeEvery(FETCH_COURSE_CONFIG, function* () {\n    const tokens: Tokens = yield selectTokens();\n    const { config }: { config: CourseConfiguration | null } = yield call(getCourseConfig, tokens);\n    if (config) {\n      yield put(actions.setCourseConfiguration(config));\n    }\n  });\n\n  yield takeEvery(FETCH_ASSESSMENT_OVERVIEWS, function* () {\n    const tokens: Tokens = yield selectTokens();\n\n    const assessmentOverviews: AssessmentOverview[] | null = yield call(\n      getAssessmentOverviews,\n      tokens\n    );\n    if (assessmentOverviews) {\n      yield put(actions.updateAssessmentOverviews(assessmentOverviews));\n    }\n  });\n\n  yield takeEvery(FETCH_ALL_USER_XP, function* () {\n    const tokens: Tokens = yield selectTokens();\n\n    const res: { all_users_xp: string[][] } = yield call(getAllUserXp, tokens);\n    if (res) {\n      yield put(actions.updateAllUserXp(res.all_users_xp));\n    }\n  });\n\n  yield takeEvery(FETCH_TOTAL_XP, function* () {\n    const tokens: Tokens = yield selectTokens();\n\n    const res: { totalXp: number } = yield call(getTotalXp, tokens);\n    if (res) {\n      yield put(actions.updateTotalXp(res.totalXp));\n    }\n  });\n\n  yield takeEvery(\n    FETCH_TOTAL_XP_ADMIN,\n    function* (action: ReturnType<typeof actions.fetchTotalXpAdmin>) {\n      const tokens: Tokens = yield selectTokens();\n\n      const courseRegId = action.payload;\n\n      const res: { totalXp: number } = yield call(getTotalXp, tokens, courseRegId);\n      if (res) {\n        yield put(actions.updateTotalXp(res.totalXp));\n      }\n    }\n  );\n\n  yield takeEvery(FETCH_ASSESSMENT, function* (action: ReturnType<typeof actions.fetchAssessment>) {\n    const tokens: Tokens = yield selectTokens();\n\n    const assessmentId = action.payload;\n\n    const assessment: Assessment | null = yield call(getAssessment, assessmentId, tokens);\n    if (assessment) {\n      yield put(actions.updateAssessment(assessment));\n    }\n  });\n\n  yield takeEvery(\n    FETCH_ASSESSMENT_ADMIN,\n    function* (action: ReturnType<typeof actions.fetchAssessmentAdmin>) {\n      const tokens: Tokens = yield selectTokens();\n\n      const { assessmentId, courseRegId } = action.payload;\n\n      const assessment: Assessment | null = yield call(\n        getAssessment,\n        assessmentId,\n        tokens,\n        courseRegId\n      );\n      if (assessment) {\n        yield put(actions.updateAssessment(assessment));\n      }\n    }\n  );\n\n  yield takeEvery(SUBMIT_ANSWER, function* (action: ReturnType<typeof actions.submitAnswer>): any {\n    const tokens: Tokens = yield selectTokens();\n    const questionId = action.payload.id;\n    const answer = action.payload.answer;\n\n    const resp: Response | null = yield call(postAnswer, questionId, answer, tokens);\n    if (!resp || !resp.ok) {\n      return yield handleResponseError(resp);\n    }\n\n    yield call(showSuccessMessage, 'Saved!', 1000);\n\n    // Now, update the answer for the question in the assessment in the store\n    const assessmentId: number = yield select(\n      (state: OverallState) => state.workspaces.assessment.currentAssessment!\n    );\n    const assessment: any = yield select((state: OverallState) =>\n      state.session.assessments.get(assessmentId)\n    );\n    const newQuestions = assessment.questions.slice().map((question: Question) => {\n      if (question.id === questionId) {\n        return { ...question, answer };\n      }\n      return question;\n    });\n    const newAssessment = {\n      ...assessment,\n      questions: newQuestions\n    };\n\n    yield put(actions.updateAssessment(newAssessment));\n    return yield put(actions.updateHasUnsavedChanges('assessment' as WorkspaceLocation, false));\n  });\n\n  yield takeEvery(\n    SUBMIT_ASSESSMENT,\n    function* (action: ReturnType<typeof actions.submitAssessment>): any {\n      const tokens: Tokens = yield selectTokens();\n      const assessmentId = action.payload;\n\n      const resp: Response | null = yield call(postAssessment, assessmentId, tokens);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      yield call(showSuccessMessage, 'Submitted!', 2000);\n\n      // Now, update the status of the assessment overview in the store\n      const overviews: AssessmentOverview[] = yield select(\n        (state: OverallState) => state.session.assessmentOverviews\n      );\n      const newOverviews = overviews.map(overview => {\n        if (overview.id === assessmentId) {\n          return { ...overview, status: AssessmentStatuses.submitted };\n        }\n        return overview;\n      });\n\n      return yield put(actions.updateAssessmentOverviews(newOverviews));\n    }\n  );\n\n  yield takeEvery(\n    FETCH_GRADING_OVERVIEWS,\n    function* (action: ReturnType<typeof actions.fetchGradingOverviews>) {\n      const tokens: Tokens = yield selectTokens();\n\n      const filterToGroup = action.payload;\n\n      const gradingOverviews: GradingOverview[] | null = yield call(\n        getGradingOverviews,\n        tokens,\n        filterToGroup\n      );\n      if (gradingOverviews) {\n        yield put(actions.updateGradingOverviews(gradingOverviews));\n      }\n    }\n  );\n\n  yield takeEvery(FETCH_GRADING, function* (action: ReturnType<typeof actions.fetchGrading>) {\n    const tokens: Tokens = yield selectTokens();\n    const id = action.payload;\n\n    const grading: Grading | null = yield call(getGrading, id, tokens);\n    if (grading) {\n      yield put(actions.updateGrading(id, grading));\n    }\n  });\n\n  /**\n   * Unsubmits the submission and updates the grading overviews of the new status.\n   */\n  yield takeEvery(\n    UNSUBMIT_SUBMISSION,\n    function* (action: ReturnType<typeof actions.unsubmitSubmission>): any {\n      const tokens: Tokens = yield selectTokens();\n      const { submissionId } = action.payload;\n\n      const resp: Response | null = yield postUnsubmit(submissionId, tokens);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      const overviews: GradingOverview[] = yield select(\n        (state: OverallState) => state.session.gradingOverviews || []\n      );\n      const newOverviews = overviews.map(overview => {\n        if (overview.submissionId === submissionId) {\n          return { ...overview, submissionStatus: 'attempted' };\n        }\n        return overview;\n      });\n\n      yield call(showSuccessMessage, 'Unsubmit successful', 1000);\n      yield put(actions.updateGradingOverviews(newOverviews));\n    }\n  );\n\n  const sendGrade = function* (\n    action:\n      | ReturnType<typeof actions.submitGrading>\n      | ReturnType<typeof actions.submitGradingAndContinue>\n  ): any {\n    const role: Role = yield select((state: OverallState) => state.session.role!);\n    if (role === Role.Student) {\n      return yield call(showWarningMessage, 'Only staff can submit answers.');\n    }\n\n    const { submissionId, questionId, xpAdjustment, comments } = action.payload;\n    const tokens: Tokens = yield selectTokens();\n\n    const resp: Response | null = yield postGrading(\n      submissionId,\n      questionId,\n      xpAdjustment,\n      tokens,\n      comments\n    );\n    if (!resp || !resp.ok) {\n      return yield handleResponseError(resp);\n    }\n\n    yield call(showSuccessMessage, 'Submitted!', 1000);\n\n    // Now, update the grade for the question in the Grading in the store\n    const grading: Grading = yield select((state: OverallState) =>\n      state.session.gradings.get(submissionId)\n    );\n    const newGrading = grading.slice().map((gradingQuestion: GradingQuestion) => {\n      if (gradingQuestion.question.id === questionId) {\n        gradingQuestion.grade = {\n          xpAdjustment,\n          xp: gradingQuestion.grade.xp,\n          comments\n        };\n      }\n      return gradingQuestion;\n    });\n\n    yield put(actions.updateGrading(submissionId, newGrading));\n  };\n\n  const sendGradeAndContinue = function* (\n    action: ReturnType<typeof actions.submitGradingAndContinue>\n  ) {\n    yield* sendGrade(action);\n\n    const { submissionId } = action.payload;\n    const [currentQuestion, courseId]: [number | undefined, number] = yield select(\n      (state: OverallState) => [state.workspaces.grading.currentQuestion, state.session.courseId!]\n    );\n\n    /**\n     * Move to next question for grading: this only works because the\n     * SUBMIT_GRADING_AND_CONTINUE Redux action is currently only\n     * used in the Grading Workspace\n     *\n     * If the questionId is out of bounds, the componentDidUpdate callback of\n     * GradingWorkspace will cause a redirect back to '/academy/grading'\n     */\n    yield history.push(\n      `/courses/${courseId}/grading/${submissionId}/${(currentQuestion || 0) + 1}`\n    );\n  };\n\n  yield takeEvery(SUBMIT_GRADING, sendGrade);\n\n  yield takeEvery(SUBMIT_GRADING_AND_CONTINUE, sendGradeAndContinue);\n\n  yield takeEvery(\n    REAUTOGRADE_SUBMISSION,\n    function* (action: ReturnType<typeof actions.reautogradeSubmission>) {\n      const submissionId = action.payload;\n      const tokens: Tokens = yield selectTokens();\n      const resp: Response | null = yield call(postReautogradeSubmission, submissionId, tokens);\n\n      yield call(handleReautogradeResponse, resp);\n    }\n  );\n\n  yield takeEvery(\n    REAUTOGRADE_ANSWER,\n    function* (action: ReturnType<typeof actions.reautogradeAnswer>) {\n      const { submissionId, questionId } = action.payload;\n      const tokens: Tokens = yield selectTokens();\n      const resp: Response | null = yield call(\n        postReautogradeAnswer,\n        submissionId,\n        questionId,\n        tokens\n      );\n\n      yield call(handleReautogradeResponse, resp);\n    }\n  );\n\n  yield takeEvery(\n    FETCH_NOTIFICATIONS,\n    function* (action: ReturnType<typeof actions.fetchNotifications>) {\n      const tokens: Tokens = yield selectTokens();\n      const notifications: Notification[] = yield call(getNotifications, tokens);\n\n      yield put(actions.updateNotifications(notifications));\n    }\n  );\n\n  yield takeEvery(\n    ACKNOWLEDGE_NOTIFICATIONS,\n    function* (action: ReturnType<typeof actions.acknowledgeNotifications>): any {\n      const tokens: Tokens = yield selectTokens();\n      const notificationFilter: NotificationFilterFunction | undefined = action.payload.withFilter;\n      const notifications: Notification[] = yield select(\n        (state: OverallState) => state.session.notifications\n      );\n\n      let notificationsToAcknowledge = notifications;\n\n      if (notificationFilter) {\n        notificationsToAcknowledge = notificationFilter(notifications);\n      }\n\n      if (notificationsToAcknowledge.length === 0) {\n        return;\n      }\n\n      const ids = notificationsToAcknowledge.map(n => n.id);\n      const newNotifications: Notification[] = notifications.filter(\n        notification => !ids.includes(notification.id)\n      );\n\n      yield put(actions.updateNotifications(newNotifications));\n\n      const resp: Response | null = yield call(postAcknowledgeNotifications, tokens, ids);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n    }\n  );\n\n  yield takeEvery(\n    DELETE_SOURCECAST_ENTRY,\n    function* (action: ReturnType<typeof actions.deleteSourcecastEntry>): any {\n      const role: Role = yield select((state: OverallState) => state.session.role!);\n      if (role === Role.Student) {\n        return yield call(showWarningMessage, 'Only staff can delete sourcecasts.');\n      }\n\n      const tokens: Tokens = yield selectTokens();\n      const { id } = action.payload;\n\n      const resp: Response | null = yield deleteSourcecastEntry(id, tokens);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      const sourcecastIndex: SourcecastData[] | null = yield call(getSourcecastIndex, tokens);\n      if (sourcecastIndex) {\n        yield put(actions.updateSourcecastIndex(sourcecastIndex, action.payload.workspaceLocation));\n      }\n\n      yield call(showSuccessMessage, 'Deleted successfully!', 1000);\n    }\n  );\n\n  yield takeEvery(\n    FETCH_SOURCECAST_INDEX,\n    function* (action: ReturnType<typeof actions.fetchSourcecastIndex>) {\n      const tokens: Tokens = yield selectTokens();\n\n      const sourcecastIndex: SourcecastData[] | null = yield call(getSourcecastIndex, tokens);\n      if (sourcecastIndex) {\n        yield put(actions.updateSourcecastIndex(sourcecastIndex, action.payload.workspaceLocation));\n      }\n    }\n  );\n\n  yield takeEvery(\n    SAVE_SOURCECAST_DATA,\n    function* (action: ReturnType<typeof actions.saveSourcecastData>): any {\n      const [role, courseId]: [Role, number | undefined] = yield select((state: OverallState) => [\n        state.session.role!,\n        state.session.courseId\n      ]);\n      if (role === Role.Student) {\n        return yield call(showWarningMessage, 'Only staff can save sourcecasts.');\n      }\n\n      const { title, description, uid, audio, playbackData } = action.payload;\n      const tokens: Tokens = yield selectTokens();\n\n      const resp: Response | null = yield postSourcecast(\n        title,\n        description,\n        uid,\n        audio,\n        playbackData,\n        tokens\n      );\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      yield call(showSuccessMessage, 'Saved successfully!', 1000);\n      yield history.push(`/courses/${courseId}/sourcecast`);\n    }\n  );\n\n  yield takeEvery(\n    CHANGE_SUBLANGUAGE,\n    function* (action: ReturnType<typeof actions.changeSublanguage>): any {\n      const tokens: Tokens = yield selectTokens();\n      const { sublang } = action.payload;\n\n      const resp: Response | null = yield call(putCourseConfig, tokens, {\n        sourceChapter: sublang.chapter,\n        sourceVariant: sublang.variant\n      });\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      yield put(\n        actions.setCourseConfiguration({\n          sourceChapter: sublang.chapter,\n          sourceVariant: sublang.variant\n        })\n      );\n      yield call(showSuccessMessage, 'Updated successfully!', 1000);\n    }\n  );\n\n  yield takeEvery(\n    UPDATE_LATEST_VIEWED_COURSE,\n    function* (action: ReturnType<typeof actions.updateLatestViewedCourse>): any {\n      const tokens: Tokens = yield selectTokens();\n      const { courseId } = action.payload;\n\n      const resp: Response | null = yield call(putLatestViewedCourse, tokens, courseId);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      const {\n        courseRegistration,\n        courseConfiguration,\n        assessmentConfigurations\n      }: {\n        courseRegistration: CourseRegistration | null;\n        courseConfiguration: CourseConfiguration | null;\n        assessmentConfigurations: AssessmentConfiguration[] | null;\n      } = yield call(getLatestCourseRegistrationAndConfiguration, tokens);\n\n      if (!courseRegistration || !courseConfiguration || !assessmentConfigurations) {\n        yield call(showWarningMessage, `Failed to load course!`);\n        return yield history.push('/welcome');\n      }\n\n      yield put(actions.setCourseConfiguration(courseConfiguration));\n      yield put(actions.setAssessmentConfigurations(assessmentConfigurations));\n      yield put(actions.setCourseRegistration(courseRegistration));\n      yield call(showSuccessMessage, `Switched to ${courseConfiguration.courseName}!`, 5000);\n    }\n  );\n\n  yield takeEvery(\n    UPDATE_COURSE_CONFIG,\n    function* (action: ReturnType<typeof actions.updateCourseConfig>): any {\n      const tokens: Tokens = yield selectTokens();\n      const courseConfig: UpdateCourseConfiguration = action.payload;\n\n      const resp: Response | null = yield call(putCourseConfig, tokens, courseConfig);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      yield put(actions.setCourseConfiguration(courseConfig));\n      yield call(showSuccessMessage, 'Updated successfully!', 1000);\n    }\n  );\n\n  yield takeEvery(FETCH_ASSESSMENT_CONFIGS, function* (): any {\n    const tokens: Tokens = yield selectTokens();\n\n    const assessmentConfigs: AssessmentConfiguration[] | null = yield call(\n      getAssessmentConfigs,\n      tokens\n    );\n\n    if (assessmentConfigs) {\n      yield put(actions.setAssessmentConfigurations(assessmentConfigs));\n    }\n  });\n\n  yield takeEvery(\n    UPDATE_ASSESSMENT_CONFIGS,\n    function* (action: ReturnType<typeof actions.updateAssessmentConfigs>): any {\n      const tokens: Tokens = yield selectTokens();\n      const assessmentConfigs: AssessmentConfiguration[] = action.payload;\n\n      const resp: Response | null = yield call(putAssessmentConfigs, tokens, assessmentConfigs);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      const updatedAssessmentConfigs: AssessmentConfiguration[] | null = yield call(\n        getAssessmentConfigs,\n        tokens\n      );\n\n      if (updatedAssessmentConfigs) {\n        yield put(actions.setAssessmentConfigurations(updatedAssessmentConfigs));\n      }\n      yield call(showSuccessMessage, 'Updated successfully!', 1000);\n    }\n  );\n\n  yield takeEvery(\n    DELETE_ASSESSMENT_CONFIG,\n    function* (action: ReturnType<typeof actions.deleteAssessmentConfig>): any {\n      const tokens: Tokens = yield selectTokens();\n      const assessmentConfig: AssessmentConfiguration = action.payload;\n\n      const resp: Response | null = yield call(removeAssessmentConfig, tokens, assessmentConfig);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n    }\n  );\n\n  yield takeEvery(\n    FETCH_ADMIN_PANEL_COURSE_REGISTRATIONS,\n    function* (action: ReturnType<typeof actions.fetchAdminPanelCourseRegistrations>) {\n      const tokens: Tokens = yield selectTokens();\n\n      const courseRegistrations: AdminPanelCourseRegistration[] | null = yield call(\n        getUserCourseRegistrations,\n        tokens\n      );\n      if (courseRegistrations) {\n        yield put(actions.setAdminPanelCourseRegistrations(courseRegistrations));\n      }\n    }\n  );\n\n  yield takeEvery(CREATE_COURSE, function* (action: ReturnType<typeof actions.createCourse>): any {\n    const tokens: Tokens = yield selectTokens();\n    const courseConfig: UpdateCourseConfiguration = action.payload;\n\n    const resp: Response | null = yield call(postCreateCourse, tokens, courseConfig);\n    if (!resp || !resp.ok) {\n      return yield handleResponseError(resp);\n    }\n\n    const {\n      user,\n      courseRegistration,\n      courseConfiguration\n    }: {\n      user: User | null;\n      courseRegistration: CourseRegistration | null;\n      courseConfiguration: CourseConfiguration | null;\n      assessmentConfigurations: AssessmentConfiguration[] | null;\n    } = yield call(getUser, tokens);\n\n    if (!user || !courseRegistration || !courseConfiguration) {\n      return yield showWarningMessage('An error occurred. Please try again.');\n    }\n\n    /**\n     * setUser updates the Dropdown course selection menu with the updated courses\n     *\n     * Setting the role here handles an edge case where a user creates his first ever course.\n     * Without it, the history.push below would not work as the /courses routes will not be rendered\n     * (see Application.tsx)\n     */\n    yield put(actions.setUser(user));\n    yield put(actions.setCourseRegistration({ role: Role.Student }));\n\n    const placeholderAssessmentConfig = [\n      {\n        type: 'Missions',\n        assessmentConfigId: -1,\n        isManuallyGraded: true,\n        displayInDashboard: true,\n        hoursBeforeEarlyXpDecay: 0,\n        earlySubmissionXp: 0\n      }\n    ];\n\n    const resp1: Response | null = yield call(\n      putAssessmentConfigs,\n      tokens,\n      placeholderAssessmentConfig,\n      courseRegistration.courseId\n    );\n    if (!resp1 || !resp1.ok) {\n      return yield handleResponseError(resp);\n    }\n\n    yield call(showSuccessMessage, 'Successfully created your new course!');\n    yield call([history, 'push'], `/courses/${courseRegistration.courseId}`);\n  });\n\n  yield takeEvery(\n    ADD_NEW_USERS_TO_COURSE,\n    function* (action: ReturnType<typeof actions.addNewUsersToCourse>): any {\n      const tokens: Tokens = yield selectTokens();\n      const { users, provider }: { users: UsernameRoleGroup[]; provider: string } = action.payload;\n\n      const resp: Response | null = yield call(putNewUsers, tokens, users, provider);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      yield put(actions.fetchAdminPanelCourseRegistrations());\n      yield call(showSuccessMessage, 'Users added!');\n    }\n  );\n\n  yield takeEvery(\n    UPDATE_USER_ROLE,\n    function* (action: ReturnType<typeof actions.updateUserRole>): any {\n      const tokens: Tokens = yield selectTokens();\n      const { courseRegId, role }: { courseRegId: number; role: Role } = action.payload;\n\n      const resp: Response | null = yield call(putUserRole, tokens, courseRegId, role);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      yield put(actions.fetchAdminPanelCourseRegistrations());\n      yield call(showSuccessMessage, 'Role updated!');\n    }\n  );\n\n  yield takeEvery(\n    UPDATE_COURSE_RESEARCH_AGREEMENT,\n    function* (action: ReturnType<typeof actions.updateCourseResearchAgreement>): any {\n      const tokens: Tokens = yield selectTokens();\n      const { agreedToResearch } = action.payload;\n\n      const resp: Response | null = yield call(\n        putCourseResearchAgreement,\n        tokens,\n        agreedToResearch\n      );\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      yield put(actions.setCourseRegistration({ agreedToResearch }));\n      yield call(showSuccessMessage, 'Research preference saved!');\n    }\n  );\n\n  yield takeEvery(\n    DELETE_USER_COURSE_REGISTRATION,\n    function* (action: ReturnType<typeof actions.deleteUserCourseRegistration>): any {\n      const tokens: Tokens = yield selectTokens();\n      const { courseRegId }: { courseRegId: number } = action.payload;\n\n      const resp: Response | null = yield call(removeUserCourseRegistration, tokens, courseRegId);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      yield put(actions.fetchAdminPanelCourseRegistrations());\n      yield call(showSuccessMessage, 'User deleted!');\n    }\n  );\n\n  yield takeEvery(\n    FETCH_GROUP_GRADING_SUMMARY,\n    function* (action: ReturnType<typeof actions.fetchGroupGradingSummary>) {\n      const tokens: Tokens = yield selectTokens();\n\n      const groupOverviews: GradingSummary | null = yield call(getGradingSummary, tokens);\n      if (groupOverviews) {\n        yield put(actions.updateGroupGradingSummary(groupOverviews));\n      }\n    }\n  );\n\n  yield takeEvery(\n    CHANGE_DATE_ASSESSMENT,\n    function* (action: ReturnType<typeof actions.changeDateAssessment>): any {\n      const tokens: Tokens = yield selectTokens();\n      const id = action.payload.id;\n      const closeAt = action.payload.closeAt;\n      const openAt = action.payload.openAt;\n\n      const resp: Response | null = yield updateAssessment(id, { openAt, closeAt }, tokens);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      yield put(actions.fetchAssessmentOverviews());\n      yield call(showSuccessMessage, 'Updated successfully!', 1000);\n    }\n  );\n\n  yield takeEvery(\n    DELETE_ASSESSMENT,\n    function* (action: ReturnType<typeof actions.deleteAssessment>): any {\n      const tokens: Tokens = yield selectTokens();\n      const id = action.payload;\n\n      const resp: Response | null = yield deleteAssessment(id, tokens);\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      yield put(actions.fetchAssessmentOverviews());\n      yield call(showSuccessMessage, 'Deleted successfully!', 1000);\n    }\n  );\n\n  yield takeEvery(\n    PUBLISH_ASSESSMENT,\n    function* (action: ReturnType<typeof actions.publishAssessment>): any {\n      const tokens: Tokens = yield selectTokens();\n      const id = action.payload.id;\n      const togglePublishTo = action.payload.togglePublishTo;\n\n      const resp: Response | null = yield updateAssessment(\n        id,\n        { isPublished: togglePublishTo },\n        tokens\n      );\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      yield put(actions.fetchAssessmentOverviews());\n\n      if (togglePublishTo) {\n        yield call(showSuccessMessage, 'Published successfully!', 1000);\n      } else {\n        yield call(showSuccessMessage, 'Unpublished successfully!', 1000);\n      }\n    }\n  );\n\n  yield takeEvery(\n    UPLOAD_ASSESSMENT,\n    function* (action: ReturnType<typeof actions.uploadAssessment>): any {\n      const tokens: Tokens = yield selectTokens();\n      const { file, forceUpdate, assessmentConfigId } = action.payload;\n\n      const resp: Response | null = yield uploadAssessment(\n        file,\n        tokens,\n        forceUpdate,\n        assessmentConfigId\n      );\n      if (!resp || !resp.ok) {\n        return yield handleResponseError(resp);\n      }\n\n      const respText: string = yield resp.text();\n      if (respText === 'OK') {\n        yield call(showSuccessMessage, 'Uploaded successfully!', 2000);\n      } else if (respText === 'Force Update OK') {\n        yield call(showSuccessMessage, 'Assessment force updated successfully!', 2000);\n      }\n\n      yield put(actions.fetchAssessmentOverviews());\n    }\n  );\n}\n\nfunction* handleReautogradeResponse(resp: Response | null): any {\n  if (resp && resp.ok) {\n    return yield call(showSuccessMessage, 'Autograde job queued successfully.');\n  }\n\n  if (resp && resp.status === 400) {\n    return yield call(showWarningMessage, 'Cannot reautograde non-submitted submission.');\n  }\n\n  return yield call(showWarningMessage, 'Failed to queue autograde job.');\n}\n\nexport default BackendSaga;\n","export class GitHubFileNodeData {\n  childrenRetrieved: boolean = false;\n  filePath: string = 'dummy_path';\n  fileType: string = 'unset';\n\n  constructor(path: string, type: string) {\n    this.filePath = path;\n    this.fileType = type;\n  }\n}\n","import { TreeNodeInfo } from '@blueprintjs/core';\nimport { GetResponseTypeFromEndpointMethod } from '@octokit/types';\n\nimport * as GitHubUtils from '../../features/github/GitHubUtils';\nimport { GitHubFileNodeData } from './GitHubFileNodeData';\n\n/**\n * A utility class for the GitHub overlay file explorer that handles the creation of TreeNodeInfos\n */\nexport class GitHubTreeNodeCreator {\n  static fileIndex: number = 0;\n  static currentRepoName: string = '';\n\n  /**\n   * Generates an array of TreeNodeInfos corresponding to the first level of a given repository.\n   *\n   * When loading a new repository, this function should always be called first as node creation is stateful.\n   *\n   * @param repoName The name of the repository where the file exists\n   */\n  public static async getFirstLayerRepoFileNodes(repoName: string) {\n    if (repoName === '') {\n      return [];\n    }\n\n    // Only allow mutations if the repoName is correct\n    GitHubTreeNodeCreator.fileIndex = 0;\n    GitHubTreeNodeCreator.currentRepoName = repoName;\n\n    return await GitHubTreeNodeCreator.getChildNodes(repoName, '');\n  }\n\n  /**\n   * Generates an array of TreeNodeInfo corresponding to the children of a given folder\n   *\n   * @param repoName The name of the repository where the folder exists\n   * @param filePath The filePath of the folder\n   */\n  public static async getChildNodes(repoName: string, filePath: string) {\n    const childNodes: TreeNodeInfo<GitHubFileNodeData>[] = [];\n\n    // Ensures that we will only generate children if the repoNames match\n    if (repoName !== GitHubTreeNodeCreator.currentRepoName) {\n      return childNodes;\n    }\n\n    const octokit = GitHubUtils.getGitHubOctokitInstance();\n\n    if (octokit === undefined) {\n      return childNodes;\n    }\n\n    try {\n      type GetAuthenticatedResponse = GetResponseTypeFromEndpointMethod<\n        typeof octokit.users.getAuthenticated\n      >;\n      const authUser: GetAuthenticatedResponse = await octokit.users.getAuthenticated();\n      const githubLoginID = authUser.data.login;\n\n      type GetContentResponse = GetResponseTypeFromEndpointMethod<typeof octokit.repos.getContent>;\n      const results: GetContentResponse = await octokit.repos.getContent({\n        owner: githubLoginID,\n        repo: repoName,\n        path: filePath\n      });\n\n      const childFiles = results.data;\n\n      if (Array.isArray(childFiles)) {\n        childFiles.forEach(childFile => {\n          childNodes.push(this.createNode(childFile));\n        });\n      }\n    } catch (err) {\n      console.error(err);\n    }\n\n    return childNodes;\n  }\n\n  /**\n   * Generates a single TreeNodeInfo corresponding to a single file or folder.\n   *\n   * @param octokitFileData File data as described by Octokit's REST API\n   */\n  private static createNode(octokitFileData: any) {\n    const index = GitHubTreeNodeCreator.fileIndex;\n\n    let node: TreeNodeInfo<GitHubFileNodeData> = {\n      id: index,\n      label: 'dummy file'\n    };\n\n    if (octokitFileData.type === 'file') {\n      node = {\n        id: index,\n        nodeData: new GitHubFileNodeData(octokitFileData.path, 'file'),\n        icon: 'document',\n        label: octokitFileData.name\n      };\n    }\n\n    if (octokitFileData.type === 'dir') {\n      node = {\n        id: index,\n        nodeData: new GitHubFileNodeData(octokitFileData.path, 'dir'),\n        icon: 'folder-close',\n        label: octokitFileData.name,\n        childNodes: [] // Child nodes are initially empty\n      };\n    }\n\n    GitHubTreeNodeCreator.fileIndex++;\n\n    return node;\n  }\n}\n","import {\n  AnchorButton,\n  Button,\n  Classes,\n  Dialog,\n  InputGroup,\n  Intent,\n  Tree,\n  TreeNodeInfo\n} from '@blueprintjs/core';\nimport { Octokit } from '@octokit/rest';\nimport { GetResponseTypeFromEndpointMethod } from '@octokit/types';\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\nimport {\n  checkIfFileCanBeOpened,\n  checkIfFileCanBeSavedAndGetSaveType,\n  checkIfUserAgreesToOverwriteEditorData,\n  checkIfUserAgreesToPerformOverwritingSave,\n  openFileInEditor,\n  performCreatingSave,\n  performOverwritingSave\n} from '../../features/github/GitHubUtils';\nimport { GitHubFileNodeData } from './GitHubFileNodeData';\nimport { GitHubTreeNodeCreator } from './GitHubTreeNodeCreator';\n\nexport type FileExplorerDialogProps = {\n  repoName: string;\n  pickerType: string;\n  octokit: Octokit;\n  editorContent: string;\n  onSubmit: (submitContent: string) => void;\n};\n\nconst FileExplorerDialog: React.FC<FileExplorerDialogProps> = props => {\n  const [repoFiles, setRepoFiles] = useState<TreeNodeInfo<GitHubFileNodeData>[]>([]);\n  const [filePath, setFilePath] = useState('');\n  const [commitMessage, setCommitMessage] = useState('');\n\n  useEffect(() => {\n    setFirstLayerRepoFiles(props.repoName, setRepoFiles);\n  }, [props.repoName]);\n\n  return (\n    <Dialog className=\"githubDialog\" isOpen={true} onClose={handleClose}>\n      <div className={classNames('githubDialogHeader', Classes.DIALOG_HEADER)}>\n        <h3>Select a File</h3>\n      </div>\n      <div className={Classes.DIALOG_BODY}>\n        <Tree\n          contents={repoFiles}\n          onNodeClick={handleNodeClick}\n          onNodeCollapse={handleNodeCollapse}\n          onNodeExpand={handleNodeExpand}\n          className={classNames('FileTree', Classes.ELEVATION_0)}\n        />\n        {props.pickerType === 'Save' && (\n          <div>\n            <InputGroup\n              id=\"FileNameTextBox\"\n              onChange={handleFileNameChange}\n              onClick={handleClickFileNameBox}\n              placeholder={'Enter File Name'}\n              value={filePath}\n            />\n            <InputGroup\n              onChange={handleCommitMessageChange}\n              placeholder={'Enter Commit Message'}\n              value={commitMessage}\n            />\n          </div>\n        )}\n      </div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          <Button onClick={handleClose}>Close</Button>\n          <AnchorButton onClick={handleSubmit} intent={Intent.PRIMARY} text={props.pickerType} />\n        </div>\n      </div>\n    </Dialog>\n  );\n\n  async function setFirstLayerRepoFiles(repoName: string, setRepoFiles: any) {\n    try {\n      const initialRepoFiles = await GitHubTreeNodeCreator.getFirstLayerRepoFileNodes(repoName);\n      setRepoFiles(initialRepoFiles);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  function handleClose() {\n    props.onSubmit('');\n  }\n\n  async function handleSubmit() {\n    type GetAuthenticatedResponse = GetResponseTypeFromEndpointMethod<\n      typeof props.octokit.users.getAuthenticated\n    >;\n    const authUser: GetAuthenticatedResponse = await props.octokit.users.getAuthenticated();\n    const githubLoginID = authUser.data.login;\n    const githubName = authUser.data.name;\n    const githubEmail = authUser.data.email;\n\n    if (props.pickerType === 'Open') {\n      if (await checkIfFileCanBeOpened(props.octokit, githubLoginID, props.repoName, filePath)) {\n        if (await checkIfUserAgreesToOverwriteEditorData()) {\n          openFileInEditor(props.octokit, githubLoginID, props.repoName, filePath);\n        }\n      }\n    }\n\n    if (props.pickerType === 'Save') {\n      const { canBeSaved, saveType } = await checkIfFileCanBeSavedAndGetSaveType(\n        props.octokit,\n        githubLoginID,\n        props.repoName,\n        filePath\n      );\n\n      if (canBeSaved) {\n        if (saveType === 'Overwrite' && (await checkIfUserAgreesToPerformOverwritingSave())) {\n          performOverwritingSave(\n            props.octokit,\n            githubLoginID,\n            props.repoName,\n            filePath,\n            githubName,\n            githubEmail,\n            commitMessage,\n            props.editorContent\n          );\n        }\n\n        if (saveType === 'Create') {\n          performCreatingSave(\n            props.octokit,\n            githubLoginID,\n            props.repoName,\n            filePath,\n            githubName,\n            githubEmail,\n            commitMessage,\n            props.editorContent\n          );\n        }\n      }\n    }\n    props.onSubmit('');\n  }\n\n  async function handleNodeClick(\n    treeNode: TreeNodeInfo<GitHubFileNodeData>,\n    _nodePath: number[],\n    e: React.MouseEvent<HTMLElement>\n  ) {\n    const originallySelected = treeNode.isSelected;\n\n    const allNodesCallback = (node: TreeNodeInfo<GitHubFileNodeData>) => (node.isSelected = false);\n    const specificNodeCallback = (node: TreeNodeInfo<GitHubFileNodeData>) => {\n      // if originally selected is null, set to true\n      // else, toggle the selection\n      node.isSelected = originallySelected === null ? true : !originallySelected;\n      const newFilePath =\n        node.nodeData !== undefined && node.isSelected ? node.nodeData.filePath : '';\n      setFilePath(newFilePath);\n    };\n\n    const newRepoFiles = await cloneWithCallbacks(\n      repoFiles,\n      treeNode,\n      allNodesCallback,\n      specificNodeCallback\n    );\n\n    if (newRepoFiles !== null) {\n      setRepoFiles(newRepoFiles);\n    }\n  }\n\n  async function handleNodeCollapse(treeNode: TreeNodeInfo<GitHubFileNodeData>) {\n    const newRepoFiles = await cloneWithCallbacks(\n      repoFiles,\n      treeNode,\n      (node: TreeNodeInfo<GitHubFileNodeData>) => {},\n      (node: TreeNodeInfo<GitHubFileNodeData>) => (node.isExpanded = false)\n    );\n\n    if (newRepoFiles !== null) {\n      setRepoFiles(newRepoFiles);\n    }\n  }\n\n  async function handleNodeExpand(treeNode: TreeNodeInfo<GitHubFileNodeData>) {\n    const newRepoFiles = await cloneWithCallbacks(\n      repoFiles,\n      treeNode,\n      (node: TreeNodeInfo<GitHubFileNodeData>) => {},\n      async (node: TreeNodeInfo<GitHubFileNodeData>) => {\n        node.isExpanded = true;\n\n        if (node.nodeData !== undefined && !node.nodeData.childrenRetrieved) {\n          node.childNodes = await GitHubTreeNodeCreator.getChildNodes(\n            props.repoName,\n            node.nodeData.filePath\n          );\n          node.nodeData.childrenRetrieved = true;\n        }\n      }\n    );\n\n    if (newRepoFiles !== null) {\n      setRepoFiles(newRepoFiles);\n    }\n  }\n\n  async function cloneWithCallbacks(\n    treeNodes: TreeNodeInfo<GitHubFileNodeData>[],\n    treeNodeToEdit: TreeNodeInfo<GitHubFileNodeData>,\n    allNodesCallback: (node: TreeNodeInfo<GitHubFileNodeData>) => void,\n    specificNodeCallback: (node: TreeNodeInfo<GitHubFileNodeData>) => void\n  ) {\n    if (treeNodes === null) {\n      return null;\n    }\n\n    const newTreeNodes = [];\n\n    for (let i = 0; i < treeNodes.length; i++) {\n      const node = treeNodes[i];\n      const clonedNode = Object.assign({}, node);\n      await allNodesCallback(clonedNode);\n\n      if (treeNodeToEdit === node) {\n        await specificNodeCallback(clonedNode);\n      }\n\n      if (clonedNode.childNodes !== undefined) {\n        const newChildNodes = await cloneWithCallbacks(\n          clonedNode.childNodes,\n          treeNodeToEdit,\n          allNodesCallback,\n          specificNodeCallback\n        );\n\n        if (newChildNodes !== null) {\n          clonedNode.childNodes = newChildNodes;\n        }\n      }\n\n      newTreeNodes.push(clonedNode);\n    }\n\n    return newTreeNodes;\n  }\n\n  function handleFileNameChange(e: any) {\n    setFilePath(e.target.value);\n  }\n\n  function handleCommitMessageChange(e: any) {\n    setCommitMessage(e.target.value);\n  }\n\n  function handleClickFileNameBox(e: any) {\n    if (filePath === '') {\n      setFilePath('.js');\n    }\n  }\n};\n\nexport default FileExplorerDialog;\n","import {\n  AnchorButton,\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Radio,\n  RadioGroup\n} from '@blueprintjs/core';\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\n\nimport { showWarningMessage } from '../utils/NotificationsHelper';\n\nexport type RepositoryDialogProps = {\n  userRepos: any[];\n  onSubmit: (repoName: string) => void;\n};\n\nconst RepositoryDialog: React.FC<RepositoryDialogProps> = props => {\n  const [repoName, setRepoName] = useState('');\n\n  return (\n    <Dialog className=\"githubDialog\" isOpen={true} onClose={handleClose}>\n      <div className={classNames('githubDialogHeader', Classes.DIALOG_HEADER)}>\n        <h3>Select a Repository</h3>\n      </div>\n      <div className={Classes.DIALOG_BODY}>\n        <RadioGroup\n          className=\"RepositoryRadioGroup\"\n          onChange={handleSelect}\n          selectedValue={repoName}\n        >\n          {props.userRepos.map((repo: any) => (\n            <Radio label={repo.name} key={repo.id} value={repo.name} />\n          ))}\n        </RadioGroup>\n      </div>\n      <div className={classNames(Classes.DIALOG_FOOTER)}>\n        <div className={classNames(Classes.DIALOG_FOOTER_ACTIONS)}>\n          <Button onClick={handleClose}>Close</Button>\n          <AnchorButton onClick={handleSubmit} intent={Intent.PRIMARY}>\n            Select\n          </AnchorButton>\n        </div>\n      </div>\n    </Dialog>\n  );\n\n  function handleSelect(e: any) {\n    setRepoName(e.target.value);\n  }\n\n  function handleClose() {\n    props.onSubmit('');\n  }\n\n  function handleSubmit() {\n    if (repoName === '') {\n      showWarningMessage('No repository selected!', 1000);\n    } else {\n      props.onSubmit(repoName);\n    }\n  }\n};\n\nexport default RepositoryDialog;\n","import {\n  GetResponseDataTypeFromEndpointMethod,\n  GetResponseTypeFromEndpointMethod\n} from '@octokit/types';\nimport { SagaIterator } from 'redux-saga';\nimport { call, put, takeLatest } from 'redux-saga/effects';\n\nimport {\n  GITHUB_OPEN_FILE,\n  GITHUB_SAVE_FILE,\n  GITHUB_SAVE_FILE_AS\n} from '../../features/github/GitHubTypes';\nimport * as GitHubUtils from '../../features/github/GitHubUtils';\nimport { getGitHubOctokitInstance } from '../../features/github/GitHubUtils';\nimport { store } from '../../pages/createStore';\nimport { LOGIN_GITHUB, LOGOUT_GITHUB } from '../application/types/SessionTypes';\nimport FileExplorerDialog, { FileExplorerDialogProps } from '../gitHubOverlay/FileExplorerDialog';\nimport RepositoryDialog, { RepositoryDialogProps } from '../gitHubOverlay/RepositoryDialog';\nimport { actions } from '../utils/ActionsHelper';\nimport Constants from '../utils/Constants';\nimport { promisifyDialog } from '../utils/DialogHelper';\nimport { showSuccessMessage, showWarningMessage } from '../utils/NotificationsHelper';\n\nexport function* GitHubPersistenceSaga(): SagaIterator {\n  yield takeLatest(LOGIN_GITHUB, githubLoginSaga);\n  yield takeLatest(LOGOUT_GITHUB, githubLogoutSaga);\n\n  yield takeLatest(GITHUB_OPEN_FILE, githubOpenFile);\n  yield takeLatest(GITHUB_SAVE_FILE, githubSaveFile);\n  yield takeLatest(GITHUB_SAVE_FILE_AS, githubSaveFileAs);\n}\n\nfunction* githubLoginSaga() {\n  const githubOauthLoginLink = `https://github.com/login/oauth/authorize?client_id=${Constants.githubClientId}&scope=repo`;\n  const windowName = 'Connect With OAuth';\n  const windowSpecs = 'height=600,width=400';\n\n  // Create the broadcast channel\n  const broadcastChannel = new BroadcastChannel('GitHubOAuthAccessToken');\n\n  broadcastChannel.onmessage = receivedMessage => {\n    store.dispatch(actions.setGitHubOctokitObject(receivedMessage.data));\n    store.dispatch(actions.setGitHubAccessToken(receivedMessage.data));\n    showSuccessMessage('Logged in to GitHub', 1000);\n  };\n\n  if (!Constants.githubClientId) {\n    // Direct to the callback page to show the error messages\n    yield call(window.open, `/callback/github`, windowName, windowSpecs);\n  } else {\n    // Creates a window directed towards the GitHub oauth link for this app\n    // After the app has been approved by the user, it will be redirected to our GitHub callback page\n    // We receive the auth token through our broadcast channel\n    yield call(window.open, githubOauthLoginLink, windowName, windowSpecs);\n  }\n}\n\nfunction* githubLogoutSaga() {\n  if (store.getState() && store.getState().workspaces.githubAssessment.hasUnsavedChanges) {\n    yield call(showWarningMessage, 'You have unsaved changes!', 2000);\n    return;\n  }\n\n  yield put(actions.removeGitHubOctokitObjectAndAccessToken());\n  yield call(showSuccessMessage, `Logged out from GitHub`, 1000);\n}\n\nfunction* githubOpenFile(): any {\n  const octokit = GitHubUtils.getGitHubOctokitInstance();\n  if (octokit === undefined) {\n    return;\n  }\n\n  type ListForAuthenticatedUserData = GetResponseDataTypeFromEndpointMethod<\n    typeof octokit.repos.listForAuthenticatedUser\n  >;\n  const userRepos: ListForAuthenticatedUserData = yield call(\n    async () =>\n      await octokit.paginate(octokit.repos.listForAuthenticatedUser, {\n        // 100 is the maximum number of results that can be retrieved per page.\n        per_page: 100\n      })\n  );\n\n  const getRepoName = async () =>\n    await promisifyDialog<RepositoryDialogProps, string>(RepositoryDialog, resolve => ({\n      userRepos: userRepos,\n      onSubmit: resolve\n    }));\n  const repoName = yield call(getRepoName);\n\n  const editorContent = '';\n\n  if (repoName !== '') {\n    const pickerType = 'Open';\n    const promisifiedDialog = async () =>\n      await promisifyDialog<FileExplorerDialogProps, string>(FileExplorerDialog, resolve => ({\n        repoName: repoName,\n        pickerType: pickerType,\n        octokit: octokit,\n        editorContent: editorContent,\n        onSubmit: resolve\n      }));\n\n    yield call(promisifiedDialog);\n  }\n}\n\nfunction* githubSaveFile(): any {\n  const octokit = getGitHubOctokitInstance();\n  if (octokit === undefined) return;\n\n  type GetAuthenticatedResponse = GetResponseTypeFromEndpointMethod<\n    typeof octokit.users.getAuthenticated\n  >;\n  const authUser: GetAuthenticatedResponse = yield call(octokit.users.getAuthenticated);\n\n  const githubLoginId = authUser.data.login;\n  const repoName = store.getState().playground.githubSaveInfo.repoName;\n  const filePath = store.getState().playground.githubSaveInfo.filePath;\n  const githubEmail = authUser.data.email;\n  const githubName = authUser.data.name;\n  const commitMessage = 'Changes made from Source Academy';\n  // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n  const content = store.getState().workspaces.playground.editorTabs[0].value;\n\n  GitHubUtils.performOverwritingSave(\n    octokit,\n    githubLoginId,\n    repoName,\n    filePath,\n    githubEmail,\n    githubName,\n    commitMessage,\n    content\n  );\n}\n\nfunction* githubSaveFileAs(): any {\n  const octokit = GitHubUtils.getGitHubOctokitInstance();\n  if (octokit === undefined) {\n    return;\n  }\n\n  type ListForAuthenticatedUserData = GetResponseDataTypeFromEndpointMethod<\n    typeof octokit.repos.listForAuthenticatedUser\n  >;\n  const userRepos: ListForAuthenticatedUserData = yield call(\n    async () =>\n      await octokit.paginate(octokit.repos.listForAuthenticatedUser, {\n        // 100 is the maximum number of results that can be retrieved per page.\n        per_page: 100\n      })\n  );\n\n  const getRepoName = async () =>\n    await promisifyDialog<RepositoryDialogProps, string>(RepositoryDialog, resolve => ({\n      userRepos: userRepos,\n      onSubmit: resolve\n    }));\n  const repoName = yield call(getRepoName);\n\n  // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n  const editorContent = store.getState().workspaces.playground.editorTabs[0].value;\n\n  if (repoName !== '') {\n    const pickerType = 'Save';\n\n    const promisifiedFileExplorer = async () =>\n      await promisifyDialog<FileExplorerDialogProps, string>(FileExplorerDialog, resolve => ({\n        repoName: repoName,\n        pickerType: pickerType,\n        octokit: octokit,\n        editorContent: editorContent,\n        onSubmit: resolve\n      }));\n\n    yield call(promisifiedFileExplorer);\n  }\n}\n\nexport default GitHubPersistenceSaga;\n","export const GITHUB_OPEN_FILE = 'GITHUB_OPEN_FILE';\nexport const GITHUB_SAVE_FILE = 'GITHUB_SAVE_FILE';\nexport const GITHUB_SAVE_FILE_AS = 'GITHUB_SAVE_FILE_AS';\n\nexport type GitHubSaveInfo = {\n  repoName: string;\n  filePath: string;\n  lastSaved?: Date;\n};\n","import * as Sentry from '@sentry/browser';\nimport { SagaIterator } from 'redux-saga';\nimport { call } from 'redux-saga/effects';\n\nimport { LOG_OUT } from '../application/types/CommonsTypes';\nimport { LOGIN, SET_USER } from '../application/types/SessionTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport { computeEndpointUrl } from '../utils/AuthHelper';\nimport { showWarningMessage } from '../utils/NotificationsHelper';\nimport { safeTakeEvery as takeEvery } from './SafeEffects';\n\nexport default function* LoginSaga(): SagaIterator {\n  yield takeEvery(LOGIN, updateLoginHref);\n\n  yield takeEvery(SET_USER, (action: ReturnType<typeof actions.setUser>) => {\n    Sentry.setUser({ id: action.payload.userId.toString() });\n  });\n\n  yield takeEvery(LOG_OUT, () => {\n    Sentry.setUser(null);\n  });\n}\n\nfunction* updateLoginHref({ payload: providerId }: ReturnType<typeof actions.login>) {\n  const epUrl = computeEndpointUrl(providerId);\n  if (!epUrl) {\n    yield call(showWarningMessage, 'Could not log in; invalid provider name provided.');\n    return undefined;\n  }\n  window.location.href = epUrl;\n  return undefined;\n}\n","import { Intent } from '@blueprintjs/core';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport { SagaIterator } from 'redux-saga';\nimport { call, put, select } from 'redux-saga/effects';\n\nimport {\n  PERSISTENCE_INITIALISE,\n  PERSISTENCE_OPEN_PICKER,\n  PERSISTENCE_SAVE_FILE,\n  PERSISTENCE_SAVE_FILE_AS,\n  PersistenceFile\n} from '../../features/persistence/PersistenceTypes';\nimport { store } from '../../pages/createStore';\nimport { OverallState } from '../application/ApplicationTypes';\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { LOGOUT_GOOGLE } from '../application/types/SessionTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport Constants from '../utils/Constants';\nimport { showSimpleConfirmDialog, showSimplePromptDialog } from '../utils/DialogHelper';\nimport {\n  dismiss,\n  showMessage,\n  showSuccessMessage,\n  showWarningMessage\n} from '../utils/NotificationsHelper';\nimport { AsyncReturnType } from '../utils/TypeHelper';\nimport { safeTakeEvery as takeEvery, safeTakeLatest as takeLatest } from './SafeEffects';\n\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'];\nconst SCOPES = 'profile https://www.googleapis.com/auth/drive.file';\nconst UPLOAD_PATH = 'https://www.googleapis.com/upload/drive/v3/files';\n\n// Special ID value for the Google Drive API.\nconst ROOT_ID = 'root';\n\nconst MIME_SOURCE = 'text/plain';\n// const MIME_FOLDER = 'application/vnd.google-apps.folder';\n\nexport function* persistenceSaga(): SagaIterator {\n  yield takeLatest(LOGOUT_GOOGLE, function* () {\n    yield put(actions.playgroundUpdatePersistenceFile(undefined));\n    yield call(ensureInitialised);\n    yield call([gapi.auth2.getAuthInstance(), 'signOut']);\n  });\n\n  yield takeLatest(PERSISTENCE_OPEN_PICKER, function* (): any {\n    let toastKey: string | undefined;\n    try {\n      yield call(ensureInitialisedAndAuthorised);\n\n      const { id, name, picked } = yield call(pickFile, 'Pick a file to open');\n      if (!picked) {\n        return;\n      }\n      const confirmOpen: boolean = yield call(showSimpleConfirmDialog, {\n        title: 'Opening from Google Drive',\n        contents: (\n          <p>\n            Opening <strong>{name}</strong> will overwrite the current contents of your workspace.\n            Are you sure?\n          </p>\n        ),\n        positiveLabel: 'Open',\n        negativeLabel: 'Cancel'\n      });\n      if (!confirmOpen) {\n        return;\n      }\n\n      toastKey = yield call(showMessage, {\n        message: 'Opening file...',\n        timeout: 0,\n        intent: Intent.PRIMARY\n      });\n\n      const { result: meta } = yield call([gapi.client.drive.files, 'get'], {\n        fileId: id,\n        fields: 'appProperties'\n      });\n      const contents = yield call([gapi.client.drive.files, 'get'], { fileId: id, alt: 'media' });\n      yield put(actions.updateEditorValue(contents.body, 'playground'));\n      yield put(actions.playgroundUpdatePersistenceFile({ id, name, lastSaved: new Date() }));\n      if (meta && meta.appProperties) {\n        yield put(\n          actions.chapterSelect(\n            parseInt(meta.appProperties.chapter || '4', 10) as Chapter,\n            meta.appProperties.variant || Variant.DEFAULT,\n            'playground'\n          )\n        );\n        yield put(\n          actions.externalLibrarySelect(\n            Object.values(ExternalLibraryName).find(v => v === meta.appProperties.external) ||\n              ExternalLibraryName.NONE,\n            'playground'\n          )\n        );\n      }\n\n      yield call(showSuccessMessage, `Loaded ${name}.`, 1000);\n    } catch (ex) {\n      console.error(ex);\n      yield call(showWarningMessage, `Error while opening file.`, 1000);\n    } finally {\n      if (toastKey) {\n        dismiss(toastKey);\n      }\n    }\n  });\n\n  yield takeLatest(PERSISTENCE_SAVE_FILE_AS, function* (): any {\n    let toastKey: string | undefined;\n    try {\n      yield call(ensureInitialisedAndAuthorised);\n\n      const [code, variant, external] = yield select((state: OverallState) => [\n        // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n        state.workspaces.playground.editorTabs[0].value,\n        state.workspaces.playground.context.variant,\n        state.workspaces.playground.externalLibrary\n      ]);\n\n      const pickedDir: PickFileResult = yield call(\n        pickFile,\n        'Pick a folder, or cancel to pick the root folder',\n        {\n          pickFolders: true,\n          showFolders: true,\n          showFiles: false\n        }\n      );\n\n      const saveToDir: PersistenceFile = pickedDir.picked\n        ? pickedDir\n        : { id: ROOT_ID, name: 'My Drive' };\n\n      const pickedFile: PickFileResult = yield call(\n        pickFile,\n        `Saving to ${saveToDir.name}; pick a file to overwrite, or cancel to save as a new file`,\n        {\n          pickFolders: false,\n          showFolders: false,\n          showFiles: true,\n          rootFolder: saveToDir.id\n        }\n      );\n\n      if (pickedFile.picked) {\n        const reallyOverwrite: boolean = yield call(showSimpleConfirmDialog, {\n          title: 'Saving to Google Drive',\n          contents: (\n            <span>\n              Really overwrite <strong>{pickedFile.name}</strong>?\n            </span>\n          )\n        });\n        if (!reallyOverwrite) {\n          return;\n        }\n        yield put(actions.playgroundUpdatePersistenceFile(pickedFile));\n        yield put(actions.persistenceSaveFile(pickedFile));\n      } else {\n        const response: AsyncReturnType<typeof showSimplePromptDialog> = yield call(\n          showSimplePromptDialog,\n          {\n            title: 'Saving to Google Drive',\n            contents: (\n              <>\n                <p>\n                  Saving to folder <strong>{saveToDir.name}</strong>.\n                </p>\n                <p>Save as name?</p>\n              </>\n            ),\n            positiveLabel: 'Save as new file',\n            negativeLabel: 'Cancel',\n            props: {\n              validationFunction: value => !!value\n            }\n          }\n        );\n\n        if (!response.buttonResponse) {\n          return;\n        }\n\n        const config: IPlaygroundConfig = {\n          variant,\n          external\n        };\n\n        toastKey = yield call(showMessage, {\n          message: `Saving as ${response.value}...`,\n          timeout: 0,\n          intent: Intent.PRIMARY\n        });\n\n        const newFile = yield call(\n          createFile,\n          response.value,\n          saveToDir.id,\n          MIME_SOURCE,\n          code,\n          config\n        );\n\n        yield put(actions.playgroundUpdatePersistenceFile({ ...newFile, lastSaved: new Date() }));\n        yield call(\n          showSuccessMessage,\n          `${response.value} successfully saved to Google Drive.`,\n          1000\n        );\n      }\n    } catch (ex) {\n      console.error(ex);\n      yield call(showWarningMessage, `Error while saving file.`, 1000);\n    } finally {\n      if (toastKey) {\n        dismiss(toastKey);\n      }\n    }\n  });\n\n  yield takeEvery(\n    PERSISTENCE_SAVE_FILE,\n    function* ({ payload: { id, name } }: ReturnType<typeof actions.persistenceSaveFile>) {\n      let toastKey: string | undefined;\n      try {\n        toastKey = yield call(showMessage, {\n          message: `Saving as ${name}...`,\n          timeout: 0,\n          intent: Intent.PRIMARY\n        });\n\n        yield call(ensureInitialisedAndAuthorised);\n\n        const [code, variant, external] = yield select((state: OverallState) => [\n          // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n          state.workspaces.playground.editorTabs[0].value,\n          state.workspaces.playground.context.variant,\n          state.workspaces.playground.externalLibrary\n        ]);\n\n        const config: IPlaygroundConfig = {\n          variant,\n          external\n        };\n        yield call(updateFile, id, name, MIME_SOURCE, code, config);\n        yield put(actions.playgroundUpdatePersistenceFile({ id, name, lastSaved: new Date() }));\n        yield call(showSuccessMessage, `${name} successfully saved to Google Drive.`, 1000);\n      } catch (ex) {\n        console.error(ex);\n        yield call(showWarningMessage, `Error while saving file.`, 1000);\n      } finally {\n        if (toastKey) {\n          dismiss(toastKey);\n        }\n      }\n    }\n  );\n\n  yield takeEvery(PERSISTENCE_INITIALISE, ensureInitialised);\n}\n\ninterface IPlaygroundConfig {\n  variant: string;\n  external: string;\n}\n\n// Reason for this: we don't want to initialise and load the gapi JS until\n// it is actually needed\n// Note the following properties of Promises:\n// - It is okay to call .then() multiple times on the same promise\n// - It is okay to call resolve() multiple times (the subsequent resolves have\n//   no effect\n// See ECMA 262: https://www.ecma-international.org/ecma-262/6.0/#sec-promise-resolve-functions\n// These two properties make a Promise a good way to have a lazy singleton\n// (in this case, the singleton is not an object but the initialisation of the\n// gapi library)\nlet startInitialisation: (_: void) => void;\nconst initialisationPromise: Promise<void> = new Promise(res => {\n  startInitialisation = res;\n}).then(initialise);\n\nfunction handleUserChanged(user: gapi.auth2.GoogleUser) {\n  store.dispatch(\n    actions.setGoogleUser(user.isSignedIn() ? user.getBasicProfile().getEmail() : undefined)\n  );\n}\n\nasync function initialise() {\n  await new Promise((resolve, reject) =>\n    gapi.load('client:auth2', { callback: resolve, onerror: reject })\n  );\n  await gapi.client.init({\n    apiKey: Constants.googleApiKey,\n    clientId: Constants.googleClientId,\n    discoveryDocs: DISCOVERY_DOCS,\n    scope: SCOPES\n  });\n  gapi.auth2.getAuthInstance().currentUser.listen(handleUserChanged);\n  handleUserChanged(gapi.auth2.getAuthInstance().currentUser.get());\n}\n\nfunction* ensureInitialised() {\n  startInitialisation();\n  yield initialisationPromise;\n}\n\nfunction* ensureInitialisedAndAuthorised() {\n  yield call(ensureInitialised);\n  if (!gapi.auth2.getAuthInstance().isSignedIn.get()) {\n    yield gapi.auth2.getAuthInstance().signIn();\n  }\n}\n\ntype PickFileResult =\n  | { id: string; name: string; mimeType: string; parentId: string; picked: true }\n  | { picked: false };\n\nfunction pickFile(\n  title: string,\n  options?: {\n    pickFolders?: boolean;\n    showFolders?: boolean;\n    showFiles?: boolean;\n    rootFolder?: string;\n  }\n): Promise<PickFileResult> {\n  const pickFolders = typeof options?.pickFolders === 'undefined' ? false : options?.pickFolders;\n  const showFolders = typeof options?.showFolders === 'undefined' ? true : options?.showFolders;\n  const showFiles = typeof options?.showFiles === 'undefined' ? true : options?.showFiles;\n  return new Promise(res => {\n    gapi.load('picker', () => {\n      const view = new google.picker.DocsView(\n        showFiles ? google.picker.ViewId.DOCS : google.picker.ViewId.FOLDERS\n      );\n      if (options?.rootFolder) {\n        view.setParent(options.rootFolder);\n      }\n      view.setOwnedByMe(true);\n      view.setIncludeFolders(showFolders);\n      view.setSelectFolderEnabled(pickFolders);\n      view.setMode(google.picker.DocsViewMode.LIST);\n\n      const picker = new google.picker.PickerBuilder()\n        .setTitle(title)\n        .enableFeature(google.picker.Feature.NAV_HIDDEN)\n        .addView(view)\n        .setOAuthToken(\n          gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().access_token\n        )\n        .setAppId(Constants.googleAppId!)\n        .setDeveloperKey(Constants.googleApiKey!)\n        .setCallback((data: any) => {\n          switch (data[google.picker.Response.ACTION]) {\n            case google.picker.Action.PICKED: {\n              const { id, name, mimeType, parentId } = data.docs[0];\n              res({ id, name, mimeType, parentId, picked: true });\n              break;\n            }\n            case google.picker.Action.CANCEL: {\n              res({ picked: false });\n              break;\n            }\n          }\n        })\n        .build();\n      picker.setVisible(true);\n    });\n  });\n}\n\nfunction createFile(\n  filename: string,\n  parent: string,\n  mimeType: string,\n  contents: string = '',\n  config: IPlaygroundConfig | {}\n): Promise<PersistenceFile> {\n  const name = filename;\n  const meta = {\n    name,\n    mimeType,\n    parents: [parent],\n    appProperties: {\n      source: true,\n      ...config\n    }\n  };\n\n  const { body, headers } = createMultipartBody(meta, contents, mimeType);\n\n  return gapi.client\n    .request({\n      path: UPLOAD_PATH,\n      method: 'POST',\n      params: {\n        uploadType: 'multipart'\n      },\n      headers,\n      body\n    })\n    .then(({ result }) => ({ id: result.id, name: result.name }));\n}\n\nfunction updateFile(\n  id: string,\n  name: string,\n  mimeType: string,\n  contents: string = '',\n  config: IPlaygroundConfig | {}\n): Promise<any> {\n  const meta = {\n    name,\n    mimeType,\n    appProperties: {\n      source: true,\n      ...config\n    }\n  };\n\n  const { body, headers } = createMultipartBody(meta, contents, mimeType);\n\n  return gapi.client.request({\n    path: UPLOAD_PATH + '/' + id,\n    method: 'PATCH',\n    params: {\n      uploadType: 'multipart'\n    },\n    headers,\n    body\n  });\n}\n\nfunction createMultipartBody(\n  meta: any,\n  contents: string,\n  contentsMime: string\n): { body: string; boundary: string; headers: { [name: string]: string } } {\n  const metaJson = JSON.stringify(meta);\n  let boundary: string;\n  do {\n    boundary = generateBoundary();\n  } while (metaJson.includes(boundary) || contents.includes(boundary));\n\n  const body = `--${boundary}\nContent-Type: application/json; charset=utf-8\n\n${JSON.stringify(meta)}\n--${boundary}\nContent-Type: ${contentsMime}\n\n${contents}\n--${boundary}--\n`;\n\n  return { body, boundary, headers: { 'Content-Type': `multipart/related; boundary=${boundary}` } };\n}\n\n// Adapted from\n// https://github.com/form-data/form-data/blob/master/lib/form_data.js\n\n// Copyright (c) 2012 Felix Geisendörfer (felix@debuggable.com) and contributors\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nfunction generateBoundary(): string {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  let boundary = '--------------------------';\n  for (let i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  return boundary;\n}\n\n// End adapted part\n\nexport default persistenceSaga;\n","import { Variant } from 'Clang-slang/dist/types';\nimport { compressToEncodedURIComponent } from 'lz-string';\nimport * as qs from 'query-string';\nimport { SagaIterator } from 'redux-saga';\nimport { call, delay, put, race, select } from 'redux-saga/effects';\n\nimport {\n  changeQueryString,\n  shortenURL,\n  updateShortURL\n} from '../../features/playground/PlaygroundActions';\nimport { GENERATE_LZ_STRING, SHORTEN_URL } from '../../features/playground/PlaygroundTypes';\nimport { defaultEditorValue, OverallState } from '../application/ApplicationTypes';\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport Constants from '../utils/Constants';\nimport { showSuccessMessage, showWarningMessage } from '../utils/NotificationsHelper';\nimport { safeTakeEvery as takeEvery } from './SafeEffects';\n\nexport default function* PlaygroundSaga(): SagaIterator {\n  yield takeEvery(GENERATE_LZ_STRING, updateQueryString);\n\n  yield takeEvery(SHORTEN_URL, function* (action: ReturnType<typeof shortenURL>): any {\n    const queryString = yield select((state: OverallState) => state.playground.queryString);\n    const keyword = action.payload;\n    const errorMsg = 'ERROR';\n\n    let resp, timeout;\n\n    //we catch and move on if there are errors (plus have a timeout in case)\n    try {\n      const { result, hasTimedOut } = yield race({\n        result: call(shortenURLRequest, queryString, keyword),\n        hasTimedOut: delay(10000)\n      });\n\n      resp = result;\n      timeout = hasTimedOut;\n    } catch (_) {}\n\n    if (!resp || timeout) {\n      yield put(updateShortURL(errorMsg));\n      return yield call(showWarningMessage, 'Something went wrong trying to create the link.');\n    }\n\n    if (resp.status !== 'success' && !resp.shorturl) {\n      yield put(updateShortURL(errorMsg));\n      return yield call(showWarningMessage, resp.message);\n    }\n\n    if (resp.status !== 'success') {\n      yield call(showSuccessMessage, resp.message);\n    }\n    yield put(updateShortURL(Constants.urlShortenerBase + resp.url.keyword));\n  });\n}\n\nfunction* updateQueryString() {\n  const code: string = yield select(\n    // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n    (state: OverallState) => state.workspaces.playground.editorTabs[0].value\n  );\n  if (!code || code === defaultEditorValue) {\n    yield put(changeQueryString(''));\n    return;\n  }\n  const variant: Variant = yield select(\n    (state: OverallState) => state.workspaces.playground.context.variant\n  );\n  const external: ExternalLibraryName = yield select(\n    (state: OverallState) => state.workspaces.playground.externalLibrary\n  );\n  const execTime: number = yield select(\n    (state: OverallState) => state.workspaces.playground.execTime\n  );\n  const newQueryString: string = qs.stringify({\n    prgrm: compressToEncodedURIComponent(code),\n    variant,\n    ext: external,\n    exec: execTime\n  });\n  yield put(changeQueryString(newQueryString));\n}\n\n/**\n * Gets short url from microservice\n * @returns {(Response|null)} Response if successful, otherwise null.\n */\nexport async function shortenURLRequest(\n  queryString: string,\n  keyword: string\n): Promise<Response | null> {\n  const url = `${window.location.protocol}//${window.location.host}/playground#${queryString}`;\n\n  const params = {\n    signature: Constants.urlShortenerSignature,\n    action: 'shorturl',\n    format: 'json',\n    keyword,\n    url\n  };\n  const fetchOpts: RequestInit = {\n    method: 'POST',\n    body: Object.entries(params).reduce((formData, [k, v]) => {\n      formData.append(k, v!);\n      return formData;\n    }, new FormData())\n  };\n\n  const resp = await fetch(`${Constants.urlShortenerBase}yourls-api.php`, fetchOpts);\n  if (!resp || !resp.ok) {\n    return null;\n  }\n\n  const res = await resp.json();\n  return res;\n}\n","import { SlingClient } from '@sourceacademy/sling-client';\nimport { ExceptionError } from 'Clang-slang/dist/errors/errors';\nimport { Variant } from 'Clang-slang/dist/types';\nimport _ from 'lodash';\nimport { SagaIterator } from 'redux-saga';\nimport { call, put, race, select, take } from 'redux-saga/effects';\nimport {\n  Ev3DevicePeripherals,\n  Ev3MotorData,\n  Ev3MotorTypes,\n  Ev3SensorData,\n  Ev3SensorTypes\n} from 'src/features/remoteExecution/RemoteExecutionEv3Types';\nimport {\n  Device,\n  DeviceSession,\n  deviceTypesById,\n  REMOTE_EXEC_CONNECT,\n  REMOTE_EXEC_DISCONNECT,\n  REMOTE_EXEC_FETCH_DEVICES,\n  WebSocketEndpointInformation\n} from 'src/features/remoteExecution/RemoteExecutionTypes';\nimport { store } from 'src/pages/createStore';\n\nimport { OverallState } from '../application/ApplicationTypes';\nimport { ExternalLibraryName } from '../application/types/ExternalTypes';\nimport { BEGIN_INTERRUPT_EXECUTION } from '../application/types/InterpreterTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport { fetchDevices, getDeviceWSEndpoint } from './RequestsSaga';\nimport { safeTakeEvery as takeEvery, safeTakeLatest as takeLatest } from './SafeEffects';\n\nconst dummyLocation = {\n  start: { line: 0, column: 0 },\n  end: { line: 0, column: 0 }\n};\n\nexport function* remoteExecutionSaga(): SagaIterator {\n  yield takeLatest(REMOTE_EXEC_FETCH_DEVICES, function* () {\n    const [tokens, session]: [any, DeviceSession | undefined] = yield select(\n      (state: OverallState) => [\n        {\n          accessToken: state.session.accessToken,\n          refreshToken: state.session.refreshToken\n        },\n        state.session.remoteExecutionSession\n      ]\n    );\n    const devices: Device[] = yield call(fetchDevices, tokens);\n\n    yield put(actions.remoteExecUpdateDevices(devices));\n\n    if (!session) {\n      return;\n    }\n    const updatedDevice = devices.find(({ id }) => id === session.device.id);\n    if (updatedDevice) {\n      yield put(\n        actions.remoteExecUpdateSession({\n          ...session,\n          device: updatedDevice\n        })\n      );\n    }\n  });\n\n  yield takeEvery(\n    REMOTE_EXEC_CONNECT,\n    function* (action: ReturnType<typeof actions.remoteExecConnect>) {\n      const [tokens, session]: [any, DeviceSession | undefined] = yield select(\n        (state: OverallState) => [\n          {\n            accessToken: state.session.accessToken,\n            refreshToken: state.session.refreshToken\n          },\n          state.session.remoteExecutionSession\n        ]\n      );\n      const { device, workspace } = action.payload;\n      yield put(\n        actions.remoteExecUpdateSession({\n          device,\n          workspace,\n          connection: { status: 'CONNECTING' }\n        })\n      );\n      const endpoint: WebSocketEndpointInformation | null = yield call(\n        getDeviceWSEndpoint,\n        device,\n        tokens\n      );\n      if (!endpoint) {\n        yield put(\n          actions.remoteExecUpdateSession({\n            ...action.payload,\n            connection: { status: 'FAILED', error: 'Could not retrieve MQTT endpoint' }\n          })\n        );\n        return;\n      }\n\n      const oldClient = session?.connection.client;\n      if (oldClient) {\n        try {\n          oldClient.disconnect();\n        } catch {}\n      }\n      const client: SlingClient = new SlingClient({\n        clientId: `${endpoint.clientNamePrefix}${generateClientNonce()}`,\n        deviceId: endpoint.thingName,\n        websocketEndpoint: endpoint.endpoint\n      });\n      client.on('statusChange', isRunning => {\n        store.dispatch(\n          actions.updateWorkspace(workspace, {\n            isRunning\n          })\n        );\n      });\n      client.on('monitor', message => {\n        const port = message[0].split(':')[1];\n        const key = `port${port.substring(port.length - 1)}` as keyof Ev3DevicePeripherals;\n        const currentSession = store.getState().session.remoteExecutionSession!; // Guaranteed valid session\n\n        const dispatchAction = (peripheralData: Ev3MotorData | Ev3SensorData) =>\n          store.dispatch(\n            actions.remoteExecUpdateSession({\n              ...currentSession,\n              device: {\n                ...currentSession.device,\n                peripherals: {\n                  ..._.pickBy(\n                    currentSession.device.peripherals,\n                    p => Date.now() - p.lastUpdated < 3000\n                  ),\n                  [key]: { ...peripheralData, lastUpdated: Date.now() }\n                }\n              }\n            })\n          );\n\n        if (message[1].endsWith('motor')) {\n          const type = message[1] as Ev3MotorTypes;\n          const position = parseInt(message[2]);\n          const speed = parseInt(message[3]);\n          const peripheralData: Ev3MotorData = { type, position, speed };\n          dispatchAction(peripheralData);\n        } else {\n          const type = message[1] as Ev3SensorTypes;\n          const mode = message[2] as any;\n          const value = parseInt(message[3]);\n          const peripheralData: Ev3SensorData = { type, mode, value };\n          dispatchAction(peripheralData);\n        }\n      });\n\n      client.on('display', (message, type) => {\n        switch (type) {\n          case 'output':\n            store.dispatch(actions.handleConsoleLog(workspace, `${message}`));\n            break;\n          case 'error': {\n            const error = new ExceptionError(new Error(`${message}`), dummyLocation);\n            store.dispatch(actions.evalInterpreterError([error], workspace));\n            break;\n          }\n          case 'result':\n            store.dispatch(actions.evalInterpreterSuccess(message, workspace));\n            break;\n        }\n      });\n      const deviceType = deviceTypesById.get(device.type);\n\n      yield put(\n        actions.remoteExecUpdateSession({\n          device,\n          workspace,\n          connection: { status: 'CONNECTING', client, endpoint }\n        })\n      );\n      yield put(\n        actions.updateWorkspace(workspace, {\n          isRunning: false,\n          isEditorAutorun: false,\n          isDebugging: false,\n          externalLibrary: deviceType?.deviceLibraryName,\n          output: []\n        })\n      );\n      yield put(\n        actions.beginClearContext(\n          workspace,\n          {\n            variant: Variant.DEFAULT,\n            external: {\n              name: deviceType?.deviceLibraryName || ExternalLibraryName.NONE,\n              symbols: deviceType?.internalFunctions || []\n            },\n            globals: []\n          },\n          false\n        )\n      );\n      try {\n        const connectPromise = new Promise((resolve, reject) => {\n          try {\n            client.once('connect', () => resolve(true));\n            client.once('error', reject);\n            client.connect();\n          } catch {\n            reject();\n          }\n        });\n        const connectOrCancel: {\n          connect?: boolean;\n        } = yield race({\n          connect: connectPromise,\n          reconnect: take(REMOTE_EXEC_CONNECT),\n          disconnect: take(REMOTE_EXEC_DISCONNECT)\n        });\n        if (connectOrCancel.connect) {\n          yield put(\n            actions.remoteExecUpdateSession({\n              ...action.payload,\n              connection: { status: 'CONNECTED', client, endpoint }\n            })\n          );\n        } else {\n          client.disconnect();\n        }\n      } catch (err) {\n        client.disconnect();\n        yield put(\n          actions.remoteExecUpdateSession({\n            ...action.payload,\n            connection: { status: 'FAILED', client, error: err.toString() }\n          })\n        );\n      }\n    }\n  );\n\n  yield takeLatest(\n    REMOTE_EXEC_DISCONNECT,\n    function* (action: ReturnType<typeof actions.remoteExecDisconnect>) {\n      const session: DeviceSession | undefined = yield select(\n        (state: OverallState) => state.session.remoteExecutionSession\n      );\n      if (!session) {\n        return;\n      }\n      const oldClient = session.connection.client;\n      if (oldClient) {\n        oldClient.disconnect();\n      }\n      yield put(actions.remoteExecUpdateSession(undefined));\n      yield put(actions.externalLibrarySelect(ExternalLibraryName.NONE, session.workspace, true));\n    }\n  );\n\n  yield takeEvery(BEGIN_INTERRUPT_EXECUTION, function* () {\n    const session: DeviceSession | undefined = yield select(\n      (state: OverallState) => state.session.remoteExecutionSession\n    );\n    if (!session || session.connection.status !== 'CONNECTED') {\n      return;\n    }\n\n    session.connection.client.sendStop();\n  });\n}\n\nconst ALPHANUMERIC = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nconst generateClientNonce = () =>\n  new Array(16)\n    .fill(undefined)\n    .map(_ => ALPHANUMERIC[Math.floor(Math.random() * ALPHANUMERIC.length)])\n    .join('');\n\nexport default remoteExecutionSaga;\n","import { Context, findDeclaration, interrupt, runInContext } from 'Clang-slang';\nimport { InterruptedError } from 'Clang-slang/dist/errors/errors';\nimport { parse } from 'Clang-slang/dist/parser/parser';\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport { random } from 'lodash';\nimport Phaser from 'phaser';\nimport { SagaIterator } from 'redux-saga';\nimport { call, put, race, select, StrictEffect, take } from 'redux-saga/effects';\nimport EnvVisualizer from 'src/features/envVisualizer/EnvVisualizer';\n\nimport { EventType } from '../../features/achievement/AchievementTypes';\nimport DataVisualizer from '../../features/dataVisualizer/dataVisualizer';\nimport { DeviceSession } from '../../features/remoteExecution/RemoteExecutionTypes';\nimport {\n  isSourceLanguage,\n  OverallState,\n  styliseSublanguage\n} from '../application/ApplicationTypes';\nimport { externalLibraries, ExternalLibraryName } from '../application/types/ExternalTypes';\nimport {\n  BEGIN_DEBUG_PAUSE,\n  BEGIN_INTERRUPT_EXECUTION,\n  DEBUG_RESET,\n  DEBUG_RESUME,\n  HIGHLIGHT_LINE\n} from '../application/types/InterpreterTypes';\nimport { Library, Testcase, TestcaseType, TestcaseTypes } from '../assessment/AssessmentTypes';\nimport { actions } from '../utils/ActionsHelper';\nimport DisplayBufferService from '../utils/DisplayBufferService';\nimport {\n  getBlockExtraMethodsString,\n  getDifferenceInMethods,\n  getRestoreExtraMethodsString,\n  getStoreExtraMethodsString,\n  highlightClean,\n  highlightLine,\n  makeElevatedContext,\n  visualizeEnv\n} from '../utils/JsSlangHelper';\nimport { showSuccessMessage, showWarningMessage } from '../utils/NotificationsHelper';\nimport { notifyProgramEvaluated } from '../workspace/WorkspaceActions';\nimport {\n  ADD_HTML_CONSOLE_ERROR,\n  BEGIN_CLEAR_CONTEXT,\n  CHAPTER_SELECT,\n  END_CLEAR_CONTEXT,\n  EVAL_EDITOR,\n  EVAL_EDITOR_AND_TESTCASES,\n  EVAL_REPL,\n  EVAL_SILENT,\n  EVAL_TESTCASE,\n  NAV_DECLARATION,\n  PLAYGROUND_EXTERNAL_SELECT,\n  TOGGLE_EDITOR_AUTORUN,\n  WorkspaceLocation\n} from '../workspace/WorkspaceTypes';\nimport { safeTakeEvery as takeEvery, safeTakeLeading as takeLeading } from './SafeEffects';\n\nexport default function* WorkspaceSaga(): SagaIterator {\n  let context: Context;\n\n  yield takeEvery(\n    ADD_HTML_CONSOLE_ERROR,\n    function* (action: ReturnType<typeof actions.addHtmlConsoleError>) {\n      yield put(\n        actions.handleConsoleLog(action.payload.workspaceLocation, action.payload.errorMsg)\n      );\n    }\n  );\n\n  yield takeEvery(EVAL_EDITOR, function* (action: ReturnType<typeof actions.evalEditor>) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    yield* evalEditor(workspaceLocation);\n  });\n\n  yield takeEvery(\n    TOGGLE_EDITOR_AUTORUN,\n    function* (action: ReturnType<typeof actions.toggleEditorAutorun>): any {\n      const workspaceLocation = action.payload.workspaceLocation;\n      const isEditorAutorun = yield select(\n        (state: OverallState) => state.workspaces[workspaceLocation].isEditorAutorun\n      );\n      yield call(showWarningMessage, 'Autorun ' + (isEditorAutorun ? 'Started' : 'Stopped'), 750);\n    }\n  );\n\n  yield takeEvery(EVAL_REPL, function* (action: ReturnType<typeof actions.evalRepl>) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    const code: string = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].replValue\n    );\n    const execTime: number = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].execTime\n    );\n    yield put(actions.beginInterruptExecution(workspaceLocation));\n    yield put(actions.clearReplInput(workspaceLocation));\n    yield put(actions.sendReplInputToOutput(code, workspaceLocation));\n    context = yield select((state: OverallState) => state.workspaces[workspaceLocation].context);\n    yield call(evalCode, code, context, execTime, workspaceLocation, EVAL_REPL);\n  });\n\n  yield takeEvery(DEBUG_RESUME, function* (action: ReturnType<typeof actions.debuggerResume>) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    const code: string = yield select(\n      // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n      (state: OverallState) => state.workspaces[workspaceLocation].editorTabs[0].value\n    );\n    const execTime: number = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].execTime\n    );\n    yield put(actions.beginInterruptExecution(workspaceLocation));\n    /** Clear the context, with the same chapter and externalSymbols as before. */\n    yield put(actions.clearReplOutput(workspaceLocation));\n    context = yield select((state: OverallState) => state.workspaces[workspaceLocation].context);\n    yield put(actions.highlightEditorLine([], workspaceLocation));\n    yield call(evalCode, code, context, execTime, workspaceLocation, DEBUG_RESUME);\n  });\n\n  yield takeEvery(DEBUG_RESET, function* (action: ReturnType<typeof actions.debuggerReset>) {\n    const workspaceLocation = action.payload.workspaceLocation;\n    context = yield select((state: OverallState) => state.workspaces[workspaceLocation].context);\n    yield put(actions.clearReplOutput(workspaceLocation));\n    yield put(actions.highlightEditorLine([], workspaceLocation));\n    context.runtime.break = false;\n    lastDebuggerResult = undefined;\n  });\n\n  yield takeEvery(\n    HIGHLIGHT_LINE,\n    function* (action: ReturnType<typeof actions.highlightEditorLine>) {\n      const highlightedLines = action.payload.highlightedLines;\n      if (highlightedLines.length === 0) {\n        highlightClean();\n      } else {\n        highlightLine(highlightedLines[0]);\n      }\n      yield;\n    }\n  );\n\n  yield takeEvery(EVAL_TESTCASE, function* (action: ReturnType<typeof actions.evalTestcase>) {\n    yield put(actions.addEvent([EventType.RUN_TESTCASE]));\n    const workspaceLocation = action.payload.workspaceLocation;\n    const index = action.payload.testcaseId;\n    yield* runTestCase(workspaceLocation, index);\n  });\n\n  yield takeEvery(CHAPTER_SELECT, function* (action: ReturnType<typeof actions.chapterSelect>) {\n    const { workspaceLocation, chapter: newChapter, variant: newVariant } = action.payload;\n    const [oldVariant, oldChapter, symbols, globals, externalLibraryName]: [\n      Variant,\n      Chapter,\n      string[],\n      Array<[string, any]>,\n      ExternalLibraryName\n    ] = yield select((state: OverallState) => [\n      state.workspaces[workspaceLocation].context.variant,\n      state.workspaces[workspaceLocation].context.externalSymbols,\n      state.workspaces[workspaceLocation].globals,\n      state.workspaces[workspaceLocation].externalLibrary\n    ]);\n\n    const chapterChanged: boolean = newChapter !== oldChapter || newVariant !== oldVariant;\n    const toChangeChapter: boolean = chapterChanged;\n\n    if (toChangeChapter) {\n      const library: Library = {\n        variant: newVariant,\n        external: {\n          name: externalLibraryName,\n          symbols\n        },\n        globals\n      };\n      yield put(actions.beginClearContext(workspaceLocation, library, false));\n      yield put(actions.clearReplOutput(workspaceLocation));\n      yield put(actions.debuggerReset(workspaceLocation));\n      yield call(\n        showSuccessMessage,\n        `Switched to ${styliseSublanguage(newChapter, newVariant)}`,\n        1000\n      );\n    }\n  });\n\n  /**\n   * Note that the PLAYGROUND_EXTERNAL_SELECT action is made to\n   * select the library for playground.\n   * This is because assessments do not have a chapter & library select, the question\n   * specifies the chapter and library to be used.\n   *\n   * To abstract this to assessments, the state structure must be manipulated to store\n   * the external library name in a WorkspaceState (as compared to IWorkspaceManagerState).\n   *\n   * @see IWorkspaceManagerState @see WorkspaceState\n   */\n  yield takeEvery(\n    PLAYGROUND_EXTERNAL_SELECT,\n    function* (action: ReturnType<typeof actions.externalLibrarySelect>) {\n      const { workspaceLocation, externalLibraryName: newExternalLibraryName } = action.payload;\n      const [globals, oldExternalLibraryName]: [Array<[string, any]>, ExternalLibraryName] =\n        yield select((state: OverallState) => [\n          state.workspaces[workspaceLocation].globals,\n          state.workspaces[workspaceLocation].externalLibrary\n        ]);\n      const symbols = externalLibraries.get(newExternalLibraryName)!;\n      const library: Library = {\n        external: {\n          name: newExternalLibraryName,\n          symbols\n        },\n        globals\n      };\n      if (newExternalLibraryName !== oldExternalLibraryName || action.payload.initialise) {\n        yield put(actions.changeExternalLibrary(newExternalLibraryName, workspaceLocation));\n        yield put(actions.beginClearContext(workspaceLocation, library, true));\n        yield put(actions.clearReplOutput(workspaceLocation));\n        if (!action.payload.initialise) {\n          yield call(showSuccessMessage, `Switched to ${newExternalLibraryName} library`, 1000);\n        }\n      }\n    }\n  );\n\n  /**\n   * Handles the side effect of resetting the WebGL context when context is reset.\n   *\n   * @see webGLgraphics.js under 'public/externalLibs/graphics' for information on\n   * the function.\n   */\n  yield takeEvery(\n    BEGIN_CLEAR_CONTEXT,\n    function* (action: ReturnType<typeof actions.beginClearContext>) {\n      DataVisualizer.clear();\n      EnvVisualizer.clear();\n      const globals: Array<[string, any]> = action.payload.library.globals as Array<[string, any]>;\n      for (const [key, value] of globals) {\n        window[key] = value;\n      }\n      yield put(\n        actions.endClearContext(\n          {\n            ...action.payload.library,\n            moduleParams: {\n              runes: {},\n              phaser: Phaser\n            }\n          },\n          action.payload.workspaceLocation\n        )\n      );\n      yield undefined;\n    }\n  );\n\n  yield takeEvery(\n    NAV_DECLARATION,\n    function* (action: ReturnType<typeof actions.navigateToDeclaration>) {\n      const workspaceLocation = action.payload.workspaceLocation;\n      const code: string = yield select(\n        // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n        (state: OverallState) => state.workspaces[workspaceLocation].editorTabs[0].value\n      );\n      context = yield select((state: OverallState) => state.workspaces[workspaceLocation].context);\n\n      const result = findDeclaration(code, context, {\n        line: action.payload.cursorPosition.row + 1,\n        column: action.payload.cursorPosition.column\n      });\n      if (result) {\n        yield put(\n          actions.moveCursor(action.payload.workspaceLocation, {\n            row: result.start.line - 1,\n            column: result.start.column\n          })\n        );\n      }\n    }\n  );\n\n  yield takeLeading(\n    EVAL_EDITOR_AND_TESTCASES,\n    function* (action: ReturnType<typeof actions.runAllTestcases>) {\n      const { workspaceLocation } = action.payload;\n\n      yield call(evalEditor, workspaceLocation);\n\n      const testcases: Testcase[] = yield select(\n        (state: OverallState) => state.workspaces[workspaceLocation].editorTestcases\n      );\n      // Avoid displaying message if there are no testcases\n      if (testcases.length > 0) {\n        // Display a message to the user\n        yield call(showSuccessMessage, `Running all testcases!`, 2000);\n        for (const idx of testcases.keys()) {\n          // break each testcase up into separate event loop iterations\n          // so that the UI updates\n          yield new Promise(resolve => setTimeout(resolve, 0));\n\n          const programSucceeded: boolean = yield call(runTestCase, workspaceLocation, idx);\n          // Prematurely terminate if execution of the program failed (not the testcase)\n          if (!programSucceeded) {\n            return;\n          }\n        }\n      }\n    }\n  );\n}\n\nlet lastDebuggerResult: any;\nfunction* updateInspector(workspaceLocation: WorkspaceLocation): SagaIterator {\n  try {\n    const start = lastDebuggerResult.context.runtime.nodes[0].loc.start.line - 1;\n    const end = lastDebuggerResult.context.runtime.nodes[0].loc.end.line - 1;\n    yield put(actions.highlightEditorLine([start, end], workspaceLocation));\n    visualizeEnv(lastDebuggerResult);\n  } catch (e) {\n    yield put(actions.highlightEditorLine([], workspaceLocation));\n    // most likely harmless, we can pretty much ignore this.\n    // half of the time this comes from execution ending or a stack overflow and\n    // the context goes missing.\n  }\n}\n\nfunction* clearContext(workspaceLocation: WorkspaceLocation, program: string) {\n  const [symbols, externalLibraryName, globals, variant]: [\n    string[],\n    ExternalLibraryName,\n    Array<[string, any]>,\n    Variant\n  ] = yield select((state: OverallState) => [\n    state.workspaces[workspaceLocation].context.externalSymbols,\n    state.workspaces[workspaceLocation].externalLibrary,\n    state.workspaces[workspaceLocation].globals,\n    state.workspaces[workspaceLocation].context.variant\n  ]);\n\n  const library = {\n    variant,\n    external: {\n      name: externalLibraryName,\n      symbols\n    },\n    globals\n  };\n\n  // Clear the context, with the same chapter and externalSymbols as before.\n  yield put(actions.beginClearContext(workspaceLocation, library, false));\n  // Wait for the clearing to be done.\n  yield take(END_CLEAR_CONTEXT);\n}\n\nexport function* dumpDisplayBuffer(\n  workspaceLocation: WorkspaceLocation\n): Generator<StrictEffect, void, any> {\n  yield put(actions.handleConsoleLog(workspaceLocation, ...DisplayBufferService.dump()));\n}\n\nexport function* evalEditor(\n  workspaceLocation: WorkspaceLocation\n): Generator<StrictEffect, void, any> {\n  const [prepend, editorCode, execTime, remoteExecutionSession]: [\n    string,\n    string,\n    number,\n    DeviceSession | undefined\n  ] = yield select((state: OverallState) => [\n    // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n    state.workspaces[workspaceLocation].editorTabs[0].prependValue,\n    state.workspaces[workspaceLocation].editorTabs[0].value,\n    state.workspaces[workspaceLocation].execTime,\n    state.session.remoteExecutionSession\n  ]);\n\n  yield put(actions.addEvent([EventType.RUN_CODE]));\n\n  if (remoteExecutionSession && remoteExecutionSession.workspace === workspaceLocation) {\n    yield put(actions.remoteExecRun(editorCode));\n  } else {\n    // End any code that is running right now.\n    yield put(actions.beginInterruptExecution(workspaceLocation));\n    yield* clearContext(workspaceLocation, editorCode);\n    yield put(actions.clearReplOutput(workspaceLocation));\n    const context = yield select(\n      (state: OverallState) => state.workspaces[workspaceLocation].context\n    );\n    let value = editorCode;\n    // Check for initial syntax errors. If there are errors, we continue with\n    // eval and let it print the error messages.\n    if (isSourceLanguage(context.chapter)) {\n      parse(value, context);\n    }\n    if (!context.errors.length) {\n      // Otherwise we step through the breakpoints one by one and check them.\n      const exploded = editorCode.split('\\n');\n      const breakpoints: string[] = yield select(\n        // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n        (state: OverallState) => state.workspaces[workspaceLocation].editorTabs[0].breakpoints\n      );\n      for (const b in breakpoints) {\n        if (typeof b !== 'string') {\n          continue;\n        }\n\n        const index: number = +b;\n        context.errors = [];\n        exploded[index] = 'debugger;' + exploded[index];\n        value = exploded.join('\\n');\n        if (isSourceLanguage(context.chapter)) {\n          parse(value, context);\n        }\n        if (context.errors.length) {\n          const msg = 'Hint: Misplaced breakpoint at line ' + (index + 1) + '.';\n          yield put(actions.sendReplInputToOutput(msg, workspaceLocation));\n        }\n      }\n    }\n    // Clear the errors on the context before any further evaluation.\n    context.errors = [];\n\n    // Evaluate the prepend silently with a privileged context, if it exists\n    if (prepend.length) {\n      const elevatedContext = makeElevatedContext(context);\n      yield call(evalCode, prepend, elevatedContext, execTime, workspaceLocation, EVAL_SILENT);\n      // Block use of methods from privileged context\n      yield* blockExtraMethods(elevatedContext, context, execTime, workspaceLocation);\n    }\n\n    yield call(evalCode, value, context, execTime, workspaceLocation, EVAL_EDITOR);\n  }\n}\n\nexport function* runTestCase(\n  workspaceLocation: WorkspaceLocation,\n  index: number\n): Generator<StrictEffect, boolean, any> {\n  const [prepend, value, postpend, testcase]: [string, string, string, string] = yield select(\n    (state: OverallState) => {\n      // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n      const prepend = state.workspaces[workspaceLocation].editorTabs[0].prependValue;\n      const value = state.workspaces[workspaceLocation].editorTabs[0].value;\n      const postpend = state.workspaces[workspaceLocation].editorTabs[0].postpendValue;\n      const testcase = state.workspaces[workspaceLocation].editorTestcases[index].program;\n      return [prepend, value, postpend, testcase] as [string, string, string, string];\n    }\n  );\n  const type: TestcaseType = yield select(\n    (state: OverallState) => state.workspaces[workspaceLocation].editorTestcases[index].type\n  );\n  const execTime: number = yield select(\n    (state: OverallState) => state.workspaces[workspaceLocation].execTime\n  );\n\n  yield* clearContext(workspaceLocation, value);\n\n  // Do NOT clear the REPL output!\n\n  /**\n   *  Shard a new privileged context elevated to use Source chapter 4 for testcases - enables\n   *  grader programs in postpend to run as expected without raising interpreter errors\n   *  But, do not persist this context to the workspace state - this prevent students from using\n   *  this elevated context to run dis-allowed code beyond the current chapter from the REPL\n   */\n  const context: Context<any> = yield select(\n    (state: OverallState) => state.workspaces[workspaceLocation].context\n  );\n\n  // Execute prepend silently in privileged context\n  const elevatedContext = makeElevatedContext(context);\n  yield call(evalCode, prepend, elevatedContext, execTime, workspaceLocation, EVAL_SILENT);\n\n  // Block use of methods from privileged context using a randomly generated blocking key\n  // Then execute student program silently in the original workspace context\n  const blockKey = String(random(1048576, 68719476736));\n  yield* blockExtraMethods(elevatedContext, context, execTime, workspaceLocation, blockKey);\n  yield call(evalCode, value, context, execTime, workspaceLocation, EVAL_SILENT);\n\n  // Halt execution if the student's code in the editor results in an error\n  if (context.errors.length) {\n    yield put(actions.evalTestcaseFailure(context.errors, workspaceLocation, index));\n    return false;\n  }\n\n  // Execute postpend silently back in privileged context, if it exists\n  if (postpend) {\n    // TODO: consider doing a swap. If the user has modified any of the variables,\n    // i.e. reusing any of the \"reserved\" names, prevent it from being accessed in the REPL.\n    yield* restoreExtraMethods(elevatedContext, context, execTime, workspaceLocation, blockKey);\n    yield call(evalCode, postpend, elevatedContext, execTime, workspaceLocation, EVAL_SILENT);\n    yield* blockExtraMethods(elevatedContext, context, execTime, workspaceLocation, blockKey);\n  }\n  // Finally execute the testcase function call in the privileged context\n  yield* evalTestCode(testcase, elevatedContext, execTime, workspaceLocation, index, type);\n  return true;\n}\n\nexport function* blockExtraMethods(\n  elevatedContext: Context,\n  context: Context,\n  execTime: number,\n  workspaceLocation: WorkspaceLocation,\n  unblockKey?: string\n) {\n  // Extract additional methods available in the elevated context relative to the context\n  const toBeBlocked = getDifferenceInMethods(elevatedContext, context);\n  if (unblockKey) {\n    const storeValues = getStoreExtraMethodsString(toBeBlocked, unblockKey);\n    yield call(evalCode, storeValues, elevatedContext, execTime, workspaceLocation, EVAL_SILENT);\n  }\n\n  const nullifier = getBlockExtraMethodsString(toBeBlocked);\n  yield call(evalCode, nullifier, elevatedContext, execTime, workspaceLocation, EVAL_SILENT);\n}\n\nexport function* restoreExtraMethods(\n  elevatedContext: Context,\n  context: Context,\n  execTime: number,\n  workspaceLocation: WorkspaceLocation,\n  unblockKey: string\n) {\n  const toUnblock = getDifferenceInMethods(elevatedContext, context);\n  const restorer = getRestoreExtraMethodsString(toUnblock, unblockKey);\n  yield call(evalCode, restorer, elevatedContext, execTime, workspaceLocation, EVAL_SILENT);\n}\n\nexport function* evalCode(\n  code: string,\n  context: Context,\n  execTime: number,\n  workspaceLocation: WorkspaceLocation,\n  actionType: string\n): SagaIterator {\n  const stepLimit: number = yield select(\n    (state: OverallState) => state.workspaces[workspaceLocation].stepLimit\n  );\n\n  const { result, interrupted, paused } = yield race({\n    result: call(runInContext, code, context, {\n      scheduler: 'preemptive',\n      executionMethod: 'interpreter',\n      originalMaxExecTime: execTime,\n      stepLimit: stepLimit,\n      variant: Variant.DEFAULT,\n      useSubst: false\n    }),\n\n    /**\n     * A BEGIN_INTERRUPT_EXECUTION signals the beginning of an interruption,\n     * i.e the trigger for the interpreter to interrupt execution.\n     */\n    interrupted: take(BEGIN_INTERRUPT_EXECUTION),\n    paused: take(BEGIN_DEBUG_PAUSE)\n  });\n  if (interrupted) {\n    interrupt(context);\n    /* Redundancy, added ensure that interruption results in an error. */\n    context.errors.push(new InterruptedError(context.runtime.nodes[0]));\n    yield put(actions.debuggerReset(workspaceLocation));\n    yield put(actions.endInterruptExecution(workspaceLocation));\n    yield call(showWarningMessage, 'Execution aborted', 750);\n    return;\n  }\n\n  if (paused) {\n    yield put(actions.endDebuggerPause(workspaceLocation));\n    yield call(updateInspector, workspaceLocation);\n    yield call(showWarningMessage, 'Execution paused', 750);\n    return;\n  }\n\n  if (actionType === EVAL_EDITOR) {\n    lastDebuggerResult = result;\n  }\n  yield call(updateInspector, workspaceLocation);\n\n  if (\n    result.status !== 'suspended' &&\n    result.status !== 'finished' &&\n    result.status !== 'suspended-non-det'\n  ) {\n    yield* dumpDisplayBuffer(workspaceLocation);\n    yield put(actions.evalInterpreterError(context.errors, workspaceLocation));\n\n    // we need to parse again, but preserve the errors in context\n    const oldErrors = context.errors;\n    context.errors = [];\n    context.errors = oldErrors;\n    // for achievement event tracking\n    const events = context.errors.length > 0 ? [EventType.ERROR] : [];\n    yield put(actions.addEvent(events));\n    return;\n  } else if (result.status === 'suspended') {\n    yield put(actions.endDebuggerPause(workspaceLocation));\n    yield put(actions.evalInterpreterSuccess('Breakpoint hit!', workspaceLocation));\n    return;\n  }\n  yield* dumpDisplayBuffer(workspaceLocation);\n  // Do not write interpreter output to REPL, if executing chunks (e.g. prepend/postpend blocks)\n  if (actionType !== EVAL_SILENT) {\n    yield put(actions.evalInterpreterSuccess(result.value, workspaceLocation));\n  }\n\n  // For EVAL_EDITOR and EVAL_REPL, we send notification to workspace that a program has been evaluated\n  if (actionType === EVAL_EDITOR || actionType === EVAL_REPL) {\n    if (context.errors.length > 0) {\n      yield put(actions.addEvent([EventType.ERROR]));\n    }\n    yield put(notifyProgramEvaluated(result, lastDebuggerResult, code, context, workspaceLocation));\n  }\n}\n\nexport function* evalTestCode(\n  code: string,\n  context: Context,\n  execTime: number,\n  workspaceLocation: WorkspaceLocation,\n  index: number,\n  type: TestcaseType\n) {\n  yield put(actions.resetTestcase(workspaceLocation, index));\n  const { result, interrupted } = yield race({\n    result: call(runInContext, code, context, {\n      scheduler: 'preemptive',\n      originalMaxExecTime: execTime,\n      throwInfiniteLoops: true\n    }),\n    /**\n     * A BEGIN_INTERRUPT_EXECUTION signals the beginning of an interruption,\n     * i.e the trigger for the interpreter to interrupt execution.\n     */\n    interrupted: take(BEGIN_INTERRUPT_EXECUTION)\n  });\n\n  if (interrupted) {\n    interrupt(context);\n    yield* dumpDisplayBuffer(workspaceLocation);\n    // Redundancy, added ensure that interruption results in an error.\n    context.errors.push(new InterruptedError(context.runtime.nodes[0]));\n    yield put(actions.endInterruptExecution(workspaceLocation));\n    yield call(showWarningMessage, `Execution of testcase ${index} aborted`, 750);\n    return;\n  }\n\n  yield* dumpDisplayBuffer(workspaceLocation);\n  /** result.status here is either 'error' or 'finished'; 'suspended' is not possible\n   *  since debugger is presently disabled in assessment and grading environments\n   */\n  if (result.status === 'error') {\n    yield put(actions.evalInterpreterError(context.errors, workspaceLocation));\n    yield put(actions.evalTestcaseFailure(context.errors, workspaceLocation, index));\n  } else if (result.status === 'finished') {\n    // Execution of the testcase is successful, i.e. no errors were raised\n    yield put(actions.evalInterpreterSuccess(result.value, workspaceLocation));\n    yield put(actions.evalTestcaseSuccess(result.value, workspaceLocation, index));\n  }\n\n  // If a opaque testcase was executed, remove its output from the REPL\n  if (type === TestcaseTypes.opaque) {\n    yield put(actions.clearReplOutputLast(workspaceLocation));\n  }\n}\n","import { SagaIterator } from 'redux-saga';\nimport { fork } from 'redux-saga/effects';\n\nimport { mockBackendSaga } from '../mocks/BackendMocks';\nimport Constants from '../utils/Constants';\nimport AchievementSaga from './AchievementSaga';\nimport BackendSaga from './BackendSaga';\nimport GitHubPersistenceSaga from './GitHubPersistenceSaga';\nimport LoginSaga from './LoginSaga';\nimport PersistenceSaga from './PersistenceSaga';\nimport PlaygroundSaga from './PlaygroundSaga';\nimport RemoteExecutionSaga from './RemoteExecutionSaga';\nimport WorkspaceSaga from './WorkspaceSaga';\n\nexport default function* MainSaga(): SagaIterator {\n  yield fork(Constants.useBackend ? BackendSaga : mockBackendSaga);\n  yield fork(WorkspaceSaga);\n  yield fork(LoginSaga);\n  yield fork(PlaygroundSaga);\n  yield fork(AchievementSaga);\n  yield fork(PersistenceSaga);\n  yield fork(GitHubPersistenceSaga);\n  yield fork(RemoteExecutionSaga);\n}\n","import { Chapter, Variant } from 'Clang-slang/dist/types';\nimport { compressToUTF16, decompressFromUTF16 } from 'lz-string';\n\nimport { OverallState } from '../commons/application/ApplicationTypes';\nimport { ExternalLibraryName } from '../commons/application/types/ExternalTypes';\nimport { SessionState } from '../commons/application/types/SessionTypes';\nimport { showWarningMessage } from '../commons/utils/NotificationsHelper';\nimport { AchievementItem } from '../features/achievement/AchievementTypes';\n\nexport type SavedState = {\n  session: Partial<SessionState>;\n  achievements: AchievementItem[];\n  playgroundEditorValue: string;\n  playgroundIsEditorAutorun: boolean;\n  playgroundSourceChapter: number;\n  playgroundSourceVariant: Variant;\n  playgroundExternalLibrary: ExternalLibraryName;\n};\n\nexport const loadStoredState = (): SavedState | undefined => {\n  try {\n    const serializedState = localStorage.getItem('storedState');\n    if (!serializedState) {\n      return undefined;\n    }\n    const decompressed = decompressFromUTF16(serializedState);\n    if (!decompressed) {\n      return undefined;\n    }\n    return JSON.parse(decompressed) as SavedState;\n  } catch (err) {\n    showWarningMessage('Error loading from local storage');\n    return undefined;\n  }\n};\n\nexport const saveState = (state: OverallState) => {\n  try {\n    const stateToBeSaved: SavedState = {\n      session: {\n        accessToken: state.session.accessToken,\n        refreshToken: state.session.refreshToken,\n        courseRegId: state.session.courseRegId,\n        role: state.session.role,\n        name: state.session.name,\n        userId: state.session.userId,\n        courses: state.session.courses,\n        courseId: state.session.courseId,\n        courseName: state.session.courseName,\n        courseShortName: state.session.courseShortName,\n        viewable: state.session.viewable,\n        enableGame: state.session.enableGame,\n        enableAchievements: state.session.enableAchievements,\n        enableSourcecast: state.session.enableSourcecast,\n        moduleHelpText: state.session.moduleHelpText,\n        assetsPrefix: state.session.assetsPrefix,\n        assessmentConfigurations: state.session.assessmentConfigurations,\n        githubAccessToken: state.session.githubAccessToken\n      },\n      achievements: state.achievement.achievements,\n      // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n      playgroundEditorValue: state.workspaces.playground.editorTabs[0].value,\n      playgroundIsEditorAutorun: state.workspaces.playground.isEditorAutorun,\n      playgroundSourceChapter: Chapter.CLANG,\n      playgroundSourceVariant: state.workspaces.playground.context.variant,\n      playgroundExternalLibrary: state.workspaces.playground.externalLibrary\n    };\n    const serialized = compressToUTF16(JSON.stringify(stateToBeSaved));\n    localStorage.setItem('storedState', serialized);\n  } catch (err) {\n    showWarningMessage('Error saving to local storage');\n  }\n};\n","import { Chapter } from 'Clang-slang/dist/types';\nimport { throttle } from 'lodash';\nimport { applyMiddleware, compose, createStore as _createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { defaultState } from '../commons/application/ApplicationTypes';\nimport createRootReducer from '../commons/application/reducers/RootReducer';\nimport MainSaga from '../commons/sagas/MainSaga';\nimport { generateOctokitInstance } from '../commons/utils/GitHubPersistenceHelper';\nimport { loadStoredState, SavedState, saveState } from './localStorage';\n\nexport const store = createStore();\n\nexport function createStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware];\n\n  const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        serialize: true,\n        maxAge: 300\n      }) || compose\n    : compose;\n\n  const initialStore = loadStore(loadStoredState()) || defaultState;\n\n  const enhancers = composeEnhancers(applyMiddleware(...middleware));\n\n  const createdStore = _createStore(createRootReducer(), initialStore as any, enhancers);\n  sagaMiddleware.run(MainSaga);\n\n  createdStore.subscribe(\n    throttle(() => {\n      saveState(createdStore.getState());\n    }, 1000)\n  );\n\n  return createdStore;\n}\n\nfunction loadStore(loadedStore: SavedState | undefined) {\n  if (!loadedStore) {\n    return undefined;\n  }\n  return {\n    ...defaultState,\n    session: {\n      ...defaultState.session,\n      ...(loadedStore.session ? loadedStore.session : {}),\n      githubOctokitObject: {\n        octokit: loadedStore.session.githubAccessToken\n          ? generateOctokitInstance(loadedStore.session.githubAccessToken)\n          : undefined\n      }\n    },\n    workspaces: {\n      ...defaultState.workspaces,\n      playground: {\n        ...defaultState.workspaces.playground,\n        editorTabs: loadedStore.playgroundEditorValue\n          ? // TODO: Hardcoded to make use of the first editor tab. Rewrite after editor tabs are added.\n            [\n              {\n                value: loadedStore.playgroundEditorValue,\n                prependValue: '',\n                postpendValue: '',\n                highlightedLines: [],\n                breakpoints: []\n              }\n            ]\n          : defaultState.workspaces.playground.editorTabs,\n        isEditorAutorun: loadedStore.playgroundIsEditorAutorun\n          ? loadedStore.playgroundIsEditorAutorun\n          : defaultState.workspaces.playground.isEditorAutorun,\n        externalLibrary: loadedStore.playgroundExternalLibrary\n          ? loadedStore.playgroundExternalLibrary\n          : defaultState.workspaces.playground.externalLibrary,\n        context: {\n          ...defaultState.workspaces.playground.context,\n          chapter: loadedStore.playgroundSourceChapter\n            ? loadedStore.playgroundSourceChapter\n            : Chapter.CLANG,\n          variant: loadedStore.playgroundSourceVariant\n            ? loadedStore.playgroundSourceVariant\n            : defaultState.workspaces.playground.context.variant\n        }\n      }\n    }\n  };\n}\n","import { SlingClient } from '@sourceacademy/sling-client';\nimport { Chapter } from 'Clang-slang/dist/types';\nimport { ExternalLibraryName } from 'src/commons/application/types/ExternalTypes';\nimport { WorkspaceLocation } from 'src/commons/workspace/WorkspaceTypes';\n\nimport { Ev3DevicePeripherals } from './RemoteExecutionEv3Types';\n\nexport const REMOTE_EXEC_FETCH_DEVICES = 'REMOTE_EXEC_FETCH_DEVICES';\nexport const REMOTE_EXEC_UPDATE_DEVICES = 'REMOTE_EXEC_UPDATE_DEVICES';\nexport const REMOTE_EXEC_UPDATE_SESSION = 'REMOTE_EXEC_UPDATE_SESSION';\n\nexport const REMOTE_EXEC_CONNECT = 'REMOTE_EXEC_CONNECT';\nexport const REMOTE_EXEC_DISCONNECT = 'REMOTE_EXEC_DISCONNECT';\n\nexport const REMOTE_EXEC_RUN = 'REMOTE_EXEC_RUN';\nexport const REMOTE_EXEC_REPL_INPUT = 'REMOTE_EXEC_REPL_INPUT';\n\nexport interface Device {\n  id: number;\n  title: string;\n  secret: string;\n  type: string;\n  peripherals?: Ev3DevicePeripherals;\n}\n\nexport interface WebSocketEndpointInformation {\n  endpoint: string;\n  clientNamePrefix: string;\n  thingName: string;\n}\n\nexport type DeviceConnection =\n  | { status: 'CONNECTING'; client?: SlingClient; endpoint?: WebSocketEndpointInformation }\n  | { status: 'CONNECTED'; client: SlingClient; endpoint: WebSocketEndpointInformation }\n  | { status: 'FAILED'; error?: string; client?: SlingClient };\n\nexport interface DeviceSession {\n  workspace: WorkspaceLocation;\n  device: Device;\n  connection: DeviceConnection;\n}\n\nexport interface DeviceType {\n  id: string;\n  name: string;\n  internalFunctions: string[];\n  languageChapter: Chapter;\n  deviceLibraryName: ExternalLibraryName;\n}\n\nexport const deviceTypes: DeviceType[] = [\n  {\n    id: 'EV3',\n    name: 'Lego Mindstorms EV3',\n    // This list must be in the same order as the list here:\n    // https://github.com/source-academy/sinter/blob/ev3/devices/ev3/src/ev3_functions.c#L652\n    internalFunctions: [\n      'ev3_pause',\n      'ev3_connected',\n      'ev3_motorA',\n      'ev3_motorB',\n      'ev3_motorC',\n      'ev3_motorD',\n      'ev3_motorGetSpeed',\n      'ev3_motorSetSpeed',\n      'ev3_motorStart',\n      'ev3_motorStop',\n      'ev3_motorSetStopAction',\n      'ev3_motorGetPosition',\n      'ev3_runForTime',\n      'ev3_runToAbsolutePosition',\n      'ev3_runToRelativePosition',\n      'ev3_colorSensor',\n      'ev3_colorSensorRed',\n      'ev3_colorSensorGreen',\n      'ev3_colorSensorBlue',\n      'ev3_reflectedLightIntensity',\n      'ev3_ambientLightIntensity',\n      'ev3_colorSensorGetColor',\n      'ev3_ultrasonicSensor',\n      'ev3_ultrasonicSensorDistance',\n      'ev3_gyroSensor',\n      'ev3_gyroSensorAngle',\n      'ev3_gyroSensorRate',\n      'ev3_touchSensor1',\n      'ev3_touchSensor2',\n      'ev3_touchSensor3',\n      'ev3_touchSensor4',\n      'ev3_touchSensorPressed',\n      'ev3_hello',\n      'ev3_waitForButtonPress',\n      'ev3_speak',\n      'ev3_playSequence',\n      'ev3_ledLeftGreen',\n      'ev3_ledLeftRed',\n      'ev3_ledRightGreen',\n      'ev3_ledRightRed',\n      'ev3_ledGetBrightness',\n      'ev3_ledSetBrightness'\n    ],\n    languageChapter: Chapter.CLANG,\n    deviceLibraryName: ExternalLibraryName.EV3\n  }\n];\n\nexport const deviceTypesById: Map<string, DeviceType> = new Map(\n  deviceTypes.map(type => [type.id, type])\n);\n","import { Card, Elevation } from '@blueprintjs/core';\nimport React, { useEffect } from 'react';\n\nexport type ContentDisplayProps = {\n  fullWidth?: boolean;\n  display: JSX.Element;\n  loadContentDispatch: () => void;\n};\n\nconst ContentDisplay: React.FC<ContentDisplayProps> = props => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => props.loadContentDispatch(), []);\n\n  return (\n    <div className=\"ContentDisplay row center-xs\">\n      <div\n        className={`${\n          props.fullWidth ? 'col-md-12' : 'col-md-10 col-xs-11'\n        } contentdisplay-content-parent`}\n      >\n        <Card className=\"contentdisplay-content\" elevation={Elevation.THREE}>\n          {props.display}\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentDisplay;\n","import { action } from 'typesafe-actions';\n\nimport { WorkspaceLocation } from '../../commons/workspace/WorkspaceTypes';\nimport {\n  CodeDelta,\n  Input,\n  PlaybackData,\n  PlaybackStatus,\n  SAVE_SOURCECAST_DATA,\n  SET_CODE_DELTAS_TO_APPLY,\n  SET_CURRENT_PLAYER_TIME,\n  SET_INPUT_TO_APPLY,\n  SET_SOURCECAST_DATA,\n  SET_SOURCECAST_PLAYBACK_DURATION,\n  SET_SOURCECAST_PLAYBACK_STATUS\n} from './SourceRecorderTypes';\n\nexport const saveSourcecastData = (\n  title: string,\n  description: string,\n  uid: string,\n  audio: Blob,\n  playbackData: PlaybackData,\n  workspaceLocation: WorkspaceLocation\n) =>\n  action(SAVE_SOURCECAST_DATA, {\n    title,\n    description,\n    uid,\n    audio,\n    audioUrl: window.URL.createObjectURL(audio),\n    playbackData,\n    workspaceLocation\n  });\n\nexport const setCurrentPlayerTime = (playerTime: number, workspaceLocation: WorkspaceLocation) =>\n  action(SET_CURRENT_PLAYER_TIME, {\n    playerTime,\n    workspaceLocation\n  });\n\nexport const setCodeDeltasToApply = (deltas: CodeDelta[], workspaceLocation: WorkspaceLocation) =>\n  action(SET_CODE_DELTAS_TO_APPLY, {\n    deltas,\n    workspaceLocation\n  });\n\nexport const setInputToApply = (inputToApply: Input, workspaceLocation: WorkspaceLocation) =>\n  action(SET_INPUT_TO_APPLY, {\n    inputToApply,\n    workspaceLocation\n  });\n\nexport const setSourcecastData = (\n  title: string,\n  description: string,\n  uid: string,\n  audioUrl: string,\n  playbackData: PlaybackData,\n  workspaceLocation: WorkspaceLocation\n) =>\n  action(SET_SOURCECAST_DATA, {\n    title,\n    description,\n    uid,\n    audioUrl,\n    playbackData,\n    workspaceLocation\n  });\n\nexport const setSourcecastDuration = (duration: number, workspaceLocation: WorkspaceLocation) =>\n  action(SET_SOURCECAST_PLAYBACK_DURATION, {\n    duration,\n    workspaceLocation\n  });\n\nexport const setSourcecastStatus = (\n  playbackStatus: PlaybackStatus,\n  workspaceLocation: WorkspaceLocation\n) =>\n  action(SET_SOURCECAST_PLAYBACK_STATUS, {\n    playbackStatus,\n    workspaceLocation\n  });\n","import { AssessmentOverview } from 'src/commons/assessment/AssessmentTypes';\nimport { action } from 'typesafe-actions';\n\nimport {\n  AchievementGoal,\n  AchievementItem,\n  AchievementUser,\n  ADD_EVENT,\n  BULK_UPDATE_ACHIEVEMENTS,\n  BULK_UPDATE_GOALS,\n  EventType,\n  GET_ACHIEVEMENTS,\n  GET_GOALS,\n  GET_OWN_GOALS,\n  GET_USER_ASSESSMENT_OVERVIEWS,\n  GET_USERS,\n  GoalDefinition,\n  GoalProgress,\n  HANDLE_EVENT,\n  REMOVE_ACHIEVEMENT,\n  REMOVE_GOAL,\n  SAVE_ACHIEVEMENTS,\n  SAVE_GOALS,\n  SAVE_USER_ASSESSMENT_OVERVIEWS,\n  SAVE_USERS,\n  UPDATE_GOAL_PROGRESS,\n  UPDATE_OWN_GOAL_PROGRESS\n} from './AchievementTypes';\n\nexport const bulkUpdateAchievements = (achievements: AchievementItem[]) =>\n  action(BULK_UPDATE_ACHIEVEMENTS, achievements);\n\nexport const bulkUpdateGoals = (goals: GoalDefinition[]) => action(BULK_UPDATE_GOALS, goals);\n\nexport const getAchievements = () => action(GET_ACHIEVEMENTS);\n\nexport const getGoals = (studentCourseRegId: number) => action(GET_GOALS, studentCourseRegId);\n\nexport const getOwnGoals = () => action(GET_OWN_GOALS);\n\nexport const getUserAssessmentOverviews = (studentCourseRegId: number) =>\n  action(GET_USER_ASSESSMENT_OVERVIEWS, studentCourseRegId);\n\nexport const getUsers = () => action(GET_USERS);\n\nexport const removeAchievement = (uuid: string) => action(REMOVE_ACHIEVEMENT, uuid);\n\nexport const removeGoal = (uuid: string) => action(REMOVE_GOAL, uuid);\n\nexport const updateOwnGoalProgress = (progress: GoalProgress) =>\n  action(UPDATE_OWN_GOAL_PROGRESS, progress);\n\nexport const addEvent = (eventNames: EventType[]) => action(ADD_EVENT, eventNames);\n\nexport const handleEvent = (loggedEvents: EventType[][]) => action(HANDLE_EVENT, loggedEvents);\n\nexport const updateGoalProgress = (studentCourseRegId: number, progress: GoalProgress) =>\n  action(UPDATE_GOAL_PROGRESS, { studentCourseRegId, progress });\n\n/*\n  Note: This updates the frontend Achievement Redux store.\n  Please refer to AchievementReducer to find out more. \n*/\nexport const saveAchievements = (achievements: AchievementItem[]) =>\n  action(SAVE_ACHIEVEMENTS, achievements);\n\n/*\n  Note: This updates the frontend Achievement Redux store.\n  Please refer to AchievementReducer to find out more. \n*/\nexport const saveGoals = (goals: AchievementGoal[]) => action(SAVE_GOALS, goals);\n\n/*\n  Note: This updates the frontend Achievement Redux store.\n  Please refer to AchievementReducer to find out more. \n*/\nexport const saveUsers = (users: AchievementUser[]) => action(SAVE_USERS, users);\n\n/*\n  Note: This updates the frontend Achievement Redux store.\n  Please refer to AchievementReducer to find out more. \n*/\nexport const saveUserAssessmentOverviews = (assessmentOverviews: AssessmentOverview[]) =>\n  action(SAVE_USER_ASSESSMENT_OVERVIEWS, assessmentOverviews);\n","import 'ace-builds/src-noconflict/ext-searchbox';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'Clang-slang/dist/editors/ace/theme/source';\n\nimport { Ace } from 'ace-builds';\nimport { isEqual } from 'lodash';\nimport * as React from 'react';\nimport AceEditor, { IAceEditorProps } from 'react-ace';\nimport { HotKeys } from 'react-hotkeys';\n\nimport {\n  CodeDelta,\n  Input,\n  KeyboardCommand,\n  SelectionRange\n} from '../../features/sourceRecorder/SourceRecorderTypes';\nimport { EditorTabStateProps } from '../editor/Editor';\nimport { Position } from '../editor/EditorTypes';\n\n/**\n * @property editorValue - The string content of the react-ace editor\n * @property handleEditorChange  - A callback function\n *           for the react-ace editor's `onChange`\n * @property handleEvalEditor  - A callback function for evaluation\n *           of the editor's content, using `slang`\n * @property isEditorReadonly - Used for sourcecast only\n */\nexport type SourceRecorderEditorProps = DispatchProps &\n  EditorStateProps &\n  EditorTabStateProps &\n  OwnProps;\n\ntype DispatchProps = {\n  getTimerDuration?: () => number;\n  handleDeclarationNavigate: (cursorPosition: Position) => void;\n  handleEditorEval: () => void;\n  handleEditorValueChange: (newCode: string) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handleRecordInput?: (input: Input) => void;\n  handleUpdateHasUnsavedChanges?: (hasUnsavedChanges: boolean) => void;\n  onFocus?: (event: any, editor?: Ace.Editor) => void;\n  onBlur?: (event: any, editor?: Ace.Editor) => void;\n};\n\ntype EditorStateProps = {\n  codeDeltasToApply?: CodeDelta[] | null;\n  editorSessionId: string;\n  isEditorAutorun: boolean;\n  isEditorReadonly: boolean;\n  inputToApply?: Input | null;\n  isPlaying?: boolean;\n  isRecording?: boolean;\n};\n\ntype OwnProps = {\n  setDraggableReplPosition?: () => void; // for the mobile Sourcecast Workspace\n};\n\nclass SourcecastEditor extends React.PureComponent<SourceRecorderEditorProps, {}> {\n  public ShareAce: any;\n  public AceEditor: React.RefObject<AceEditor>;\n  private onChangeMethod: (newCode: string, delta: CodeDelta) => void;\n  private onCursorChange: (selecction: any) => void;\n  private onSelectionChange: (selection: any) => void;\n\n  constructor(props: SourceRecorderEditorProps) {\n    super(props);\n    this.AceEditor = React.createRef();\n    this.ShareAce = null;\n    this.onChangeMethod = (newCode: string, delta: CodeDelta) => {\n      if (this.props.handleUpdateHasUnsavedChanges) {\n        this.props.handleUpdateHasUnsavedChanges(true);\n      }\n      this.props.handleEditorValueChange(newCode);\n      if (this.props.isRecording) {\n        this.props.handleRecordInput!({\n          type: 'codeDelta',\n          time: this.props.getTimerDuration!(),\n          data: delta\n        });\n      }\n      const annotations = this.AceEditor.current!.editor.getSession().getAnnotations();\n      if (this.props.isEditorAutorun && annotations.length === 0) {\n        this.props.handleEditorEval();\n      }\n    };\n    this.onCursorChange = (selection: any) => {\n      if (!this.props.isRecording) {\n        return;\n      }\n      const editorCursorPositionToBeApplied: Position = selection.getCursor();\n      this.props.handleRecordInput!({\n        type: 'cursorPositionChange',\n        time: this.props.getTimerDuration!(),\n        data: editorCursorPositionToBeApplied\n      });\n    };\n    this.onSelectionChange = (selection: any) => {\n      if (!this.props.isRecording) {\n        return;\n      }\n      const range: SelectionRange = selection.getRange();\n      const isBackwards: boolean = selection.isBackwards();\n      if (!isEqual(range.start, range.end)) {\n        this.props.handleRecordInput!({\n          type: 'selectionRangeData',\n          time: this.props.getTimerDuration!(),\n          data: { range, isBackwards }\n        });\n      }\n    };\n  }\n\n  public componentDidUpdate(prevProps: SourceRecorderEditorProps) {\n    const { codeDeltasToApply, inputToApply, newCursorPosition } = this.props;\n\n    if (codeDeltasToApply && codeDeltasToApply !== prevProps.codeDeltasToApply) {\n      this.AceEditor.current!.editor.session.getDocument().applyDeltas(codeDeltasToApply);\n      this.AceEditor.current!.editor.selection.clearSelection();\n    }\n\n    if (newCursorPosition && newCursorPosition !== prevProps.newCursorPosition) {\n      this.moveCursor(newCursorPosition);\n    }\n\n    if (!inputToApply || inputToApply === prevProps.inputToApply) {\n      return;\n    }\n\n    switch (inputToApply.type) {\n      case 'codeDelta':\n        this.AceEditor.current!.editor.session.getDocument().applyDelta(inputToApply.data);\n        this.AceEditor.current!.editor.selection.clearSelection();\n        break;\n      case 'cursorPositionChange':\n        this.moveCursor(inputToApply.data);\n        break;\n      case 'selectionRangeData':\n        const { range, isBackwards } = inputToApply.data;\n        this.AceEditor.current!.editor.selection.setRange(range, isBackwards);\n        break;\n      case 'keyboardCommand':\n        const keyboardCommand = inputToApply.data;\n        switch (keyboardCommand) {\n          case 'run':\n            this.props.handleEditorEval();\n            // Popup mobile draggable repl when there is a recorded 'run' evaluation\n            if (this.props.setDraggableReplPosition) {\n              this.props.setDraggableReplPosition();\n            }\n            break;\n        }\n        break;\n    }\n  }\n\n  public getBreakpoints() {\n    return this.AceEditor.current!.editor.session.getBreakpoints().filter(x => x != null);\n  }\n\n  public componentDidMount() {\n    if (!this.AceEditor || !this.AceEditor.current || !this.AceEditor.current.editor) {\n      return;\n    }\n    const editor = this.AceEditor.current!.editor;\n    const session = editor.getSession();\n\n    editor.on('gutterclick' as any, this.handleGutterClick);\n\n    // Change all info annotations to error annotations\n    session.on('changeAnnotation' as any, this.handleAnnotationChange(session));\n\n    const { onFocus, onBlur } = this.props;\n    if (onFocus) {\n      editor.on('focus', (event: Event) => onFocus(event, editor));\n    }\n    if (onBlur) {\n      editor.on('blur', (event: Event) => onBlur(event, editor));\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.ShareAce !== null) {\n      // Umounting... Closing websocket\n      this.ShareAce.WS.close();\n    }\n    this.ShareAce = null;\n  }\n\n  public getMarkers = () => {\n    const markerProps: IAceEditorProps['markers'] = [];\n    for (const lineNum of this.props.highlightedLines) {\n      markerProps.push({\n        startRow: lineNum[0],\n        startCol: 0,\n        endRow: lineNum[1],\n        endCol: 1,\n        className: 'myMarker',\n        type: 'fullLine'\n      });\n    }\n    return markerProps;\n  };\n\n  public render() {\n    return (\n      <HotKeys className=\"Editor bp4-card bp4-elevation-0\" handlers={handlers}>\n        <div className=\"row editor-react-ace\">\n          <AceEditor\n            className=\"react-ace\"\n            commands={[\n              {\n                name: 'evaluate',\n                bindKey: {\n                  win: 'Shift-Enter',\n                  mac: 'Shift-Enter'\n                },\n                exec: this.handleEvaluate\n              },\n              {\n                name: 'navigate',\n                bindKey: {\n                  win: 'Ctrl-B',\n                  mac: 'Command-B'\n                },\n                exec: this.handleDeclarationNavigate\n              }\n            ]}\n            editorProps={{\n              $blockScrolling: Infinity\n            }}\n            ref={this.AceEditor}\n            markers={this.getMarkers()}\n            fontSize={17}\n            height=\"100%\"\n            highlightActiveLine={false}\n            mode=\"javascript\"\n            onChange={this.onChangeMethod}\n            onCursorChange={this.onCursorChange}\n            onSelectionChange={this.onSelectionChange}\n            readOnly={this.props.isEditorReadonly}\n            theme=\"source\"\n            value={this.props.editorValue}\n            width=\"100%\"\n            setOptions={{\n              fontFamily: \"'Inconsolata', 'Consolas', monospace\"\n            }}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  private handleGutterClick = (e: any) => {\n    const target = e.domEvent.target;\n    if (\n      target.className.indexOf('ace_gutter-cell') === -1 ||\n      !e.editor.isFocused() ||\n      e.clientX > 35 + target.getBoundingClientRect().left\n    ) {\n      return;\n    }\n\n    const row = e.getDocumentPosition().row;\n    const content = e.editor.session.getLine(row);\n    const breakpoints = e.editor.session.getBreakpoints(row, 0);\n    if (\n      breakpoints[row] === undefined &&\n      content.length !== 0 &&\n      !content.includes('//') &&\n      !content.includes('debugger;')\n    ) {\n      e.editor.session.setBreakpoint(row);\n    } else {\n      e.editor.session.clearBreakpoint(row);\n    }\n    e.stop();\n    this.props.handleEditorUpdateBreakpoints(e.editor.session.$breakpoints);\n  };\n\n  private handleAnnotationChange = (session: any) => () => {\n    const annotations = session.getAnnotations();\n    let count = 0;\n    for (const anno of annotations) {\n      if (anno.type === 'info') {\n        anno.type = 'error';\n        anno.className = 'ace_error';\n        count++;\n      }\n    }\n    if (count !== 0) {\n      session.setAnnotations(annotations);\n    }\n  };\n\n  private handleEvaluate = () => {\n    this.props.handleEditorEval();\n    if (!this.props.isRecording) {\n      return;\n    }\n    this.props.handleRecordInput!({\n      type: 'keyboardCommand',\n      time: this.props.getTimerDuration!(),\n      data: KeyboardCommand.run\n    });\n  };\n\n  // Used in navigating from occurence to navigation\n  private moveCursor = (position: Position) => {\n    this.AceEditor.current!.editor.selection.clearSelection();\n    this.AceEditor.current!.editor.moveCursorToPosition(position);\n    this.AceEditor.current!.editor.renderer.showCursor();\n    this.AceEditor.current!.editor.renderer.scrollCursorIntoView(position, 0.5);\n  };\n\n  private handleDeclarationNavigate = () => {\n    this.props.handleDeclarationNavigate(this.AceEditor.current!.editor.getCursorPosition());\n  };\n}\n\n/* Override handler, so does not trigger when focus is in editor */\nconst handlers = {\n  goGreen: () => {}\n};\n\nexport default SourcecastEditor;\n","export const keyBindings = {\n  evaluate: {\n    win: 'Shift-Enter',\n    mac: 'Shift-Enter'\n  },\n  navigate: {\n    win: 'Ctrl-B',\n    mac: 'Command-B'\n  },\n  refactor: {\n    win: 'Ctrl-M',\n    mac: 'Command-M'\n  },\n  highlightScope: {\n    win: 'Ctrl-Shift-H',\n    mac: 'Command-Shift-H'\n  },\n  typeInferenceDisplay: {\n    win: 'Ctrl-Shift-M',\n    mac: 'Command-Shift-M'\n  }\n};\n\nexport type KeyFunction = keyof typeof keyBindings;\n","import * as Sentry from '@sentry/browser';\nimport sharedbAce from '@sourceacademy/sharedb-ace';\nimport * as React from 'react';\n\nimport { checkSessionIdExists, getSessionUrl } from '../collabEditing/CollabEditingHelper';\nimport { EditorHook } from './Editor';\n\n// EditorHook structure:\n// EditorHooks grant access to 4 things:\n// inProps are provided by the parent component\n// outProps go into the underlying React-Ace\n// keyBindings allow exporting new hotkeys\n// reactAceRef is the underlying reactAce instance for hooking.\n\nconst useShareAce: EditorHook = (inProps, outProps, keyBindings, reactAceRef) => {\n  // use a ref to refer to any other props so that we run the effect below\n  // *only* when the editorSessionId changes\n  const propsRef = React.useRef(inProps);\n  propsRef.current = inProps;\n\n  const { editorSessionId } = inProps;\n\n  React.useEffect(() => {\n    if (!editorSessionId) {\n      return;\n    }\n\n    const editor = reactAceRef.current!.editor;\n    const ShareAce = new sharedbAce(editorSessionId, {\n      WsUrl: getSessionUrl(editorSessionId, true),\n      pluginWsUrl: null,\n      namespace: 'sa'\n    });\n    ShareAce.on('ready', () => {\n      ShareAce.add(editor, [], []);\n      propsRef.current.handleSetSharedbConnected!(true);\n    });\n    ShareAce.on('error', (path: string, error: any) => {\n      console.error('ShareAce error', error);\n      Sentry.captureException(error);\n    });\n\n    // WebSocket connection status detection logic\n    const WS = ShareAce.WS;\n    // Since interval is used as a closure.\n    // eslint-disable-next-line prefer-const\n    let interval: any;\n    const checkStatus = async () => {\n      if (ShareAce === null) {\n        return;\n      }\n      try {\n        const exists = await checkSessionIdExists(editorSessionId);\n        if (!exists) {\n          clearInterval(interval);\n          WS.close();\n        }\n      } catch {\n        WS.reconnect();\n      }\n    };\n    // Checks connection status every 5sec\n    interval = setInterval(checkStatus, 5000);\n\n    WS.addEventListener('open', () => {\n      propsRef.current.handleSetSharedbConnected!(true);\n    });\n    WS.addEventListener('close', () => {\n      propsRef.current.handleSetSharedbConnected!(false);\n    });\n\n    return () => {\n      clearInterval(interval);\n      for (const connection of Object.values<any>(ShareAce.connections)) {\n        connection.unlisten();\n      }\n      ShareAce.WS.close();\n    };\n  }, [editorSessionId, reactAceRef]);\n};\n\nexport default useShareAce;\n","/* eslint-disable simple-import-sort/imports */\nimport { Ace, require as acequire } from 'ace-builds';\nimport 'ace-builds/src-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/ext-searchbox';\nimport 'Clang-slang/dist/editors/ace/theme/source';\n\nimport { Chapter, Variant } from 'Clang-slang/dist/types';\nimport * as React from 'react';\nimport AceEditor, { IAceEditorProps, IEditorProps } from 'react-ace';\nimport * as AceBuilds from 'ace-builds';\nimport { HotKeys } from 'react-hotkeys';\n\nimport { keyBindings, KeyFunction } from './EditorHotkeys';\nimport { AceMouseEvent, HighlightedLines, Position } from './EditorTypes';\n\n// =============== Hooks ===============\n// TODO: Should further refactor into EditorBase + different variants.\n// Ideally, hooks should be specified by the parent component instead.\nimport useShareAce from './UseShareAce';\nimport { getModeString, selectMode } from '../utils/AceHelper';\nimport { EditorBinding, WorkspaceSettingsContext } from '../WorkspaceSettingsContext';\n\nexport type EditorKeyBindingHandlers = { [name in KeyFunction]?: () => void };\nexport type EditorHook = (\n  inProps: Readonly<EditorProps>,\n  outProps: IAceEditorProps,\n  keyBindings: EditorKeyBindingHandlers,\n  reactAceRef: React.MutableRefObject<AceEditor | null>\n) => void;\n\nexport type EditorProps = DispatchProps & EditorStateProps & EditorTabStateProps & OnEvent;\n\ntype DispatchProps = {\n  handleDeclarationNavigate: (cursorPosition: Position) => void;\n  handleEditorEval: () => void;\n  handleEditorValueChange: (newCode: string) => void;\n  handleEditorUpdateBreakpoints: (breakpoints: string[]) => void;\n  handlePromptAutocomplete: (row: number, col: number, callback: any) => void;\n  handleSendReplInputToOutput?: (newOutput: string) => void;\n  handleSetSharedbConnected?: (connected: boolean) => void;\n  handleUpdateHasUnsavedChanges?: (hasUnsavedChanges: boolean) => void;\n};\n\ntype EditorStateProps = {\n  editorSessionId: string;\n  isEditorAutorun: boolean;\n  sourceChapter?: Chapter;\n  externalLibraryName?: string;\n  sourceVariant?: Variant;\n  hooks?: EditorHook[];\n};\n\nexport type EditorTabStateProps = {\n  editorValue: string;\n  highlightedLines: HighlightedLines[];\n  breakpoints: string[];\n  newCursorPosition?: Position;\n};\n\ntype LocalStateProps = {\n  editorBinding: EditorBinding;\n};\n\ntype OnEvent = {\n  onSelectionChange?: (value: any, event?: any) => void;\n  onCursorChange?: (value: any, event?: any) => void;\n  onInput?: (event?: any) => void;\n  onLoad?: (editor: Ace.Editor) => void;\n  onValidate?: (annotations: Ace.Annotation[]) => void;\n  onBeforeLoad?: (ace: typeof AceBuilds) => void;\n  onChange?: (value: string, event?: any) => void;\n  onSelection?: (selectedText: string, event?: any) => void;\n  onCopy?: (value: string) => void;\n  onPaste?: (value: string) => void;\n  onFocus?: (event: any, editor?: Ace.Editor) => void;\n  onBlur?: (event: any, editor?: Ace.Editor) => void;\n  onScroll?: (editor: IEditorProps) => void;\n};\n\nconst EventT: Array<keyof OnEvent> = [\n  'onSelectionChange',\n  'onCursorChange',\n  'onInput',\n  'onLoad',\n  'onValidate',\n  'onBeforeLoad',\n  'onChange',\n  'onSelection',\n  'onCopy',\n  'onPaste',\n  'onFocus',\n  'onBlur',\n  'onScroll'\n];\n\nconst getMarkers = (\n  highlightedLines: EditorTabStateProps['highlightedLines']\n): IAceEditorProps['markers'] => {\n  return highlightedLines.map(lineNums => ({\n    startRow: lineNums[0],\n    startCol: 0,\n    endRow: lineNums[1],\n    endCol: 1,\n    className: 'myMarker',\n    type: 'fullLine'\n  }));\n};\n\nconst makeHandleGutterClick =\n  (handleEditorUpdateBreakpoints: DispatchProps['handleEditorUpdateBreakpoints']) =>\n  (e: AceMouseEvent) => {\n    const target = e.domEvent.target! as HTMLDivElement;\n    if (\n      target.className.indexOf('ace_gutter-cell') === -1 ||\n      !e.editor.isFocused() ||\n      e.clientX > 35 + target.getBoundingClientRect().left\n    ) {\n      return;\n    }\n\n    // Breakpoint related.\n    const row = e.getDocumentPosition().row;\n    const content = e.editor.session.getLine(row);\n    const breakpoints = e.editor.session.getBreakpoints();\n    if (\n      breakpoints[row] === undefined &&\n      content.length !== 0 &&\n      !content.includes('//') &&\n      !content.includes('debugger;')\n    ) {\n      e.editor.session.setBreakpoint(row, undefined!);\n    } else {\n      e.editor.session.clearBreakpoint(row);\n    }\n    e.stop();\n    handleEditorUpdateBreakpoints(e.editor.session.getBreakpoints());\n  };\n\n// Note: This is untestable/unused because JS-hint has been removed.\nconst makeHandleAnnotationChange = (session: Ace.EditSession) => () => {\n  const annotations = session.getAnnotations();\n  let count = 0;\n  for (const anno of annotations) {\n    if (anno.type === 'info') {\n      anno.type = 'error';\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore // Probably some undocumented type\n      anno.className = 'ace_error';\n      count++;\n    }\n  }\n  if (count !== 0) {\n    session.setAnnotations(annotations);\n  }\n};\n\nconst makeCompleter = (handlePromptAutocomplete: DispatchProps['handlePromptAutocomplete']) => ({\n  getCompletions: (\n    editor: Ace.Editor,\n    session: Ace.EditSession,\n    pos: Ace.Point,\n    prefix: string,\n    callback: () => void\n  ) => {\n    // Don't prompt if prefix starts with number\n    if (prefix && /\\d/.test(prefix.charAt(0))) {\n      callback();\n      return;\n    }\n\n    // Cursor col is insertion location i.e. last char col + 1\n    handlePromptAutocomplete(pos.row + 1, pos.column, callback);\n  }\n});\n\nconst moveCursor = (editor: AceEditor['editor'], position: Position) => {\n  editor.selection.clearSelection();\n  editor.moveCursorToPosition(position);\n  editor.renderer.showCursor();\n  editor.renderer.scrollCursorIntoView(position, 0.5);\n};\n\n/* Override handler, so does not trigger when focus is in editor */\nconst handlers = {\n  goGreen: () => {}\n};\n\nconst EditorBase = React.memo((props: EditorProps & LocalStateProps) => {\n  const reactAceRef: React.MutableRefObject<AceEditor | null> = React.useRef(null);\n\n  // Refs for things that technically shouldn't change... but just in case.\n  const handleEditorUpdateBreakpointsRef = React.useRef(props.handleEditorUpdateBreakpoints);\n  const handlePromptAutocompleteRef = React.useRef(props.handlePromptAutocomplete);\n\n  React.useEffect(() => {\n    handleEditorUpdateBreakpointsRef.current = props.handleEditorUpdateBreakpoints;\n    handlePromptAutocompleteRef.current = props.handlePromptAutocomplete;\n  }, [props.handleEditorUpdateBreakpoints, props.handlePromptAutocomplete]);\n\n  // Handles input into AceEditor causing app to scroll to the top on iOS Safari\n  React.useEffect(() => {\n    const isIOS = /iPhone|iPad|iPod/.test(navigator.userAgent);\n    if (isIOS) {\n      document.body.style.position = 'fixed';\n      document.body.style.width = '100%';\n    }\n\n    return () => {\n      document.body.style.position = '';\n      document.body.style.width = '';\n    };\n  }, []);\n\n  const [sourceChapter, sourceVariant, externalLibraryName] = [\n    props.sourceChapter || Chapter.CLANG,\n    props.sourceVariant || Variant.DEFAULT,\n    props.externalLibraryName || 'NONE'\n  ];\n\n  // this function defines the Ace language and highlighting mode for the\n  // given combination of chapter, variant and external library. it CANNOT be\n  // put in useEffect as it MUST be called before the mode is set on the Ace\n  // editor, and use(Layout)Effect runs after that happens.\n  //\n  // this used to be in useMemo, but selectMode now checks if the mode is\n  // already defined and doesn't do it, so it is now OK to keep calling this\n  // unconditionally.\n  selectMode(sourceChapter, sourceVariant, externalLibraryName);\n\n  React.useLayoutEffect(() => {\n    if (!reactAceRef.current) {\n      return;\n    }\n    const editor = reactAceRef.current.editor;\n    const session = editor.getSession();\n    // NOTE: Everything in this function is designed to run exactly ONCE per instance of react-ace.\n    // The () => ref.current() are designed to use the latest instance only.\n\n    // NOTE: the two `any`s below are because the Ace editor typedefs are\n    // hopelessly incomplete\n    editor.on(\n      'gutterclick' as any,\n      makeHandleGutterClick((...args) => handleEditorUpdateBreakpointsRef.current(...args)) as any\n    );\n\n    // Change all info annotations to error annotations\n    session.on('changeAnnotation' as any, makeHandleAnnotationChange(session));\n\n    // Start autocompletion\n    acequire('ace/ext/language_tools').setCompleters([\n      makeCompleter((...args) => handlePromptAutocompleteRef.current(...args))\n    ]);\n    // This should run exactly once.\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (!reactAceRef.current) {\n      return;\n    }\n    const newCursorPosition = props.newCursorPosition;\n    if (newCursorPosition) {\n      moveCursor(reactAceRef.current.editor, newCursorPosition);\n    }\n  }, [props.newCursorPosition]);\n\n  const {\n    handleUpdateHasUnsavedChanges,\n    handleEditorValueChange,\n    isEditorAutorun,\n    handleEditorEval\n  } = props;\n  const keyHandlers: EditorKeyBindingHandlers = {\n    evaluate: handleEditorEval\n  };\n\n  const aceEditorProps: IAceEditorProps = {\n    className: 'react-ace',\n    editorProps: {\n      $blockScrolling: Infinity\n    },\n    markers: React.useMemo(() => getMarkers(props.highlightedLines), [props.highlightedLines]),\n    fontSize: 17,\n    height: '100%',\n    highlightActiveLine: false,\n    mode: getModeString(sourceChapter, sourceVariant, externalLibraryName),\n    theme: 'source',\n    value: props.editorValue,\n    width: '100%',\n    setOptions: {\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true,\n      fontFamily: \"'Inconsolata', 'Consolas', monospace\"\n    },\n    keyboardHandler: props.editorBinding\n  };\n\n  // Hooks must not change after an editor is instantiated, so to prevent that\n  // we store the original value and always use that only\n  const [hooks] = React.useState(props.hooks);\n  if (hooks) {\n    // Note: the following is extremely non-standard use of hooks\n    // DO NOT refactor this into any form where the hook is called from a lambda\n    for (const hook of hooks) {\n      hook(props, aceEditorProps, keyHandlers, reactAceRef);\n    }\n  }\n\n  const hooksOnChange = aceEditorProps.onChange;\n\n  aceEditorProps.onChange = React.useCallback(\n    (newCode: string, delta: Ace.Delta) => {\n      if (!reactAceRef.current) {\n        return;\n      }\n      handleEditorValueChange(newCode);\n      if (handleUpdateHasUnsavedChanges) {\n        handleUpdateHasUnsavedChanges(true);\n      }\n      const annotations = reactAceRef.current.editor.getSession().getAnnotations();\n      if (isEditorAutorun && annotations.length === 0) {\n        handleEditorEval();\n      }\n      hooksOnChange && hooksOnChange(newCode, delta);\n    },\n    [\n      handleEditorValueChange,\n      handleUpdateHasUnsavedChanges,\n      isEditorAutorun,\n      hooksOnChange,\n      handleEditorEval\n    ]\n  );\n\n  aceEditorProps.commands = Object.entries(keyHandlers)\n    .filter(([_, exec]) => exec)\n    .map(([name, exec]) => ({ name, bindKey: keyBindings[name], exec: exec! }));\n\n  // Merge in .onEvent ace editor props\n  // This prevents user errors such as\n  // TRYING TO ADD AN ONCHANGE PROP WHICH KILLS THE ABOVE ONCHANGE.\n  // **triggered**\n  EventT.forEach(eventT => {\n    const propFn = props[eventT];\n    if (propFn) {\n      /* eslint-disable */\n\n      const currFn = aceEditorProps[eventT];\n      if (!currFn) {\n        // Typescript isn't smart enough to know that the types of both LHS/RHS are the same.\n        // @ts-ignore\n        aceEditorProps[eventT] = propFn;\n      } else {\n        aceEditorProps[eventT] = function (...args: any[]) {\n          // Impossible to define a function which takes in the arbitrary number of correct arguments...\n          // @ts-ignore\n          currFn(...args);\n          // @ts-ignore\n          propFn(...args);\n        };\n      }\n      /* eslint-enable */\n    }\n  });\n\n  return (\n    <HotKeys className=\"Editor bp4-card bp4-elevation-0\" handlers={handlers}>\n      <div className=\"row editor-react-ace\">\n        <AceEditor {...aceEditorProps} ref={reactAceRef} />\n      </div>\n    </HotKeys>\n  );\n});\n\n// don't create a new list every render.\nconst hooks = [useShareAce];\n\nconst Editor: React.FC<EditorProps> = (props: EditorProps) => {\n  const [workspaceSettings] = React.useContext(WorkspaceSettingsContext)!;\n\n  return <EditorBase {...props} editorBinding={workspaceSettings.editorBinding} hooks={hooks} />;\n};\n\nexport default Editor;\n","// Necessary to prevent \"ReferenceError: ace is not defined\" error.\n// See https://github.com/securingsincity/react-ace/issues/1233 (although there is no explanation).\nimport 'ace-builds/src-noconflict/ace';\n\nimport _ from 'lodash';\nimport React from 'react';\n\nimport SourcecastEditor, {\n  SourceRecorderEditorProps\n} from '../sourceRecorder/SourceRecorderEditor';\nimport { EditorTabState } from '../workspace/WorkspaceTypes';\nimport Editor, { EditorProps, EditorTabStateProps } from './Editor';\n\nexport type NormalEditorContainerProps = Omit<EditorProps, keyof EditorTabStateProps> & {\n  editorVariant: 'normal';\n  editorTabs: EditorTabStateProps[];\n};\n\nexport type SourcecastEditorContainerProps = Omit<\n  SourceRecorderEditorProps,\n  keyof EditorTabStateProps\n> & {\n  editorVariant: 'sourcecast';\n  editorTabs: EditorTabStateProps[];\n};\n\nexport type EditorContainerProps = NormalEditorContainerProps | SourcecastEditorContainerProps;\n\nexport const convertEditorTabStateToProps = (editorTab: EditorTabState): EditorTabStateProps => {\n  return {\n    editorValue: editorTab.value,\n    ..._.pick(editorTab, 'highlightedLines', 'breakpoints', 'newCursorPosition')\n  };\n};\n\nconst createNormalEditorTab =\n  (editorProps: Omit<EditorProps, keyof EditorTabStateProps>) =>\n  (editorTabStateProps: EditorTabStateProps) => {\n    return <Editor {...editorProps} {...editorTabStateProps} />;\n  };\n\nconst createSourcecastEditorTab =\n  (editorProps: Omit<SourceRecorderEditorProps, keyof EditorTabStateProps>) =>\n  (editorTabStateProps: EditorTabStateProps) => {\n    return <SourcecastEditor {...editorProps} {...editorTabStateProps} />;\n  };\n\nconst EditorContainer: React.FC<EditorContainerProps> = (props: EditorContainerProps) => {\n  let createEditorTab;\n  if (props.editorVariant === 'sourcecast') {\n    const { editorVariant, editorTabs, ...editorProps } = props;\n    createEditorTab = createSourcecastEditorTab(editorProps);\n  } else {\n    const { editorVariant, editorTabs, ...editorProps } = props;\n    createEditorTab = createNormalEditorTab(editorProps);\n  }\n  // TODO: Implement editor tabs.\n  return createEditorTab(props.editorTabs[0]);\n};\n\nexport default EditorContainer;\n"],"sourceRoot":""}